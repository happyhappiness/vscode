<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1598_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">mainStartScript<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">prog<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">script<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">MAXPATHLEN<pos:position pos:line="4" pos:column="27"/></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">t<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">sl<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">pid_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">cpid<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">pid_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">rpid<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">xstrncpy<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">script<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">prog<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">MAXPATHLEN<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">t<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">strrchr<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">script<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="30">'/'<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <block pos:line="11" pos:column="37">{
        <expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><operator pos:line="12" pos:column="11">++<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">t<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="char" pos:line="12" pos:column="18">'\0'<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">sl<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strlen<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">script<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">xstrncpy<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><operator pos:line="16" pos:column="14">&amp;<pos:position pos:line="16" pos:column="19"/></operator><name><name pos:line="16" pos:column="15">script<pos:position pos:line="16" pos:column="21"/></name><index pos:line="16" pos:column="21">[<expr><name pos:line="16" pos:column="22">sl<pos:position pos:line="16" pos:column="24"/></name></expr>]<pos:position pos:line="16" pos:column="25"/></index></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="27">squid_start_script<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">MAXPATHLEN<pos:position pos:line="16" pos:column="57"/></name> <operator pos:line="16" pos:column="58">-<pos:position pos:line="16" pos:column="59"/></operator> <name pos:line="16" pos:column="60">sl<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">cpid<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">fork<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">()<pos:position pos:line="18" pos:column="23"/></argument_list></call><operator pos:line="18" pos:column="23">)<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="25">==<pos:position pos:line="18" pos:column="27"/></operator> <literal type="number" pos:line="18" pos:column="28">0<pos:position pos:line="18" pos:column="29"/></literal></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30"> <block pos:line="18" pos:column="31">{
        <comment type="block" pos:line="19" pos:column="9">/* child */</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">execl<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">script<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">squid_start_script<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="43">(<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">char<pos:position pos:line="20" pos:column="48"/></name> <operator pos:line="20" pos:column="49">*<pos:position pos:line="20" pos:column="50"/></operator><operator pos:line="20" pos:column="50">)<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">NULL<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">_exit<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><operator pos:line="21" pos:column="15">-<pos:position pos:line="21" pos:column="16"/></operator><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then> <else pos:line="22" pos:column="7">else <block pos:line="22" pos:column="12">{
        <do pos:line="23" pos:column="9">do <block pos:line="23" pos:column="12">{
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">_SQUID_NEXT_<pos:position pos:line="24" pos:column="17"/></name></expr></cpp:if>
            <decl_stmt><decl><type><name><name pos:line="25" pos:column="13">union<pos:position pos:line="25" pos:column="18"/></name> <name pos:line="25" pos:column="19">wait<pos:position pos:line="25" pos:column="23"/></name></name></type> <name pos:line="25" pos:column="24">status<pos:position pos:line="25" pos:column="30"/></name></decl>;<pos:position pos:line="25" pos:column="31"/></decl_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">rpid<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">wait4<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">cpid<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="32">&amp;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="33">status<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="41">0<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">NULL<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>

            <decl_stmt><decl><type><name pos:line="29" pos:column="13">int<pos:position pos:line="29" pos:column="16"/></name></type> <name pos:line="29" pos:column="17">status<pos:position pos:line="29" pos:column="23"/></name></decl>;<pos:position pos:line="29" pos:column="24"/></decl_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">rpid<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <call><name pos:line="30" pos:column="20">waitpid<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">cpid<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="34">&amp;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="35">status<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="43">0<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

        }<pos:position pos:line="33" pos:column="10"/></block> while <condition pos:line="33" pos:column="17">(<expr><name pos:line="33" pos:column="18">rpid<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">!=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">cpid<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition>;<pos:position pos:line="33" pos:column="32"/></do>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

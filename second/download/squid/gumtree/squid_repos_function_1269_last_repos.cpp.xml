<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1269_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayPools<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">deregisterForUpdates<pos:position pos:line="2" pos:column="33"/></name></name> <parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name pos:line="2" pos:column="35">Updateable<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">anObject<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">vector<pos:position pos:line="4" pos:column="16"/></name><argument_list type="generic" pos:line="4" pos:column="16">&lt;<argument><expr><name pos:line="4" pos:column="17">Updateable<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></expr></argument>&gt;<pos:position pos:line="4" pos:column="33"/></argument_list></name><operator pos:line="4" pos:column="30">::<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">iterator<pos:position pos:line="4" pos:column="40"/></name></name></type> <name pos:line="4" pos:column="41">pos<pos:position pos:line="4" pos:column="44"/></name> <init pos:line="4" pos:column="45">= <expr><call><name><name pos:line="4" pos:column="47">toUpdate<pos:position pos:line="4" pos:column="55"/></name><operator pos:line="4" pos:column="55">.<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="56">begin<pos:position pos:line="4" pos:column="61"/></name></name><argument_list pos:line="4" pos:column="61">()<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><name pos:line="6" pos:column="12">pos<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <call><name><name pos:line="6" pos:column="19">toUpdate<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">.<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">end<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call> <operator pos:line="6" pos:column="34">&amp;&amp;<pos:position pos:line="6" pos:column="44"/></operator> <operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">pos<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">!=<pos:position pos:line="6" pos:column="44"/></operator> <name pos:line="6" pos:column="45">anObject<pos:position pos:line="6" pos:column="53"/></name></expr>)<pos:position pos:line="6" pos:column="54"/></condition> <block pos:line="6" pos:column="55">{
        <expr_stmt><expr><operator pos:line="7" pos:column="9">++<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">pos<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></while>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">pos<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">!=<pos:position pos:line="10" pos:column="15"/></operator> <call><name><name pos:line="10" pos:column="16">toUpdate<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">end<pos:position pos:line="10" pos:column="28"/></name></name><argument_list pos:line="10" pos:column="28">()<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
        <comment type="block" pos:line="11" pos:column="9">/* move all objects down one */</comment>
        <decl_stmt><decl><type><name><name pos:line="12" pos:column="9">std<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">::<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">vector<pos:position pos:line="12" pos:column="20"/></name><argument_list type="generic" pos:line="12" pos:column="20">&lt;<argument><expr><name pos:line="12" pos:column="21">Updateable<pos:position pos:line="12" pos:column="31"/></name> <modifier pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></modifier></expr></argument>&gt;<pos:position pos:line="12" pos:column="37"/></argument_list></name><operator pos:line="12" pos:column="34">::<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">iterator<pos:position pos:line="12" pos:column="44"/></name></name></type> <name pos:line="12" pos:column="45">temp<pos:position pos:line="12" pos:column="49"/></name> <init pos:line="12" pos:column="50">= <expr><name pos:line="12" pos:column="52">pos<pos:position pos:line="12" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="56"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="13" pos:column="9">++<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">pos<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>

        <while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><name pos:line="15" pos:column="16">pos<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">!=<pos:position pos:line="15" pos:column="22"/></operator> <call><name><name pos:line="15" pos:column="23">toUpdate<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">end<pos:position pos:line="15" pos:column="35"/></name></name><argument_list pos:line="15" pos:column="35">()<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="38"/></condition> <block pos:line="15" pos:column="39">{
            <expr_stmt><expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">temp<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">pos<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">temp<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="18" pos:column="13">++<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">pos<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></while>

        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">toUpdate<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">pop_back<pos:position pos:line="21" pos:column="26"/></name></name><argument_list pos:line="21" pos:column="26">()<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

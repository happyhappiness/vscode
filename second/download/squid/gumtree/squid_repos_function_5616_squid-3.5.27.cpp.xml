<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5616_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">comm_select_udp_incoming<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">nfds<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name><name pos:line="5" pos:column="9">fds<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><literal type="number" pos:line="5" pos:column="13">2<pos:position pos:line="5" pos:column="14"/></literal></expr>]<pos:position pos:line="5" pos:column="15"/></index></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">nevents<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">udp_io_events<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">Comm<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">::<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">IsConnOpen<pos:position pos:line="9" pos:column="25"/></name></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">icpIncomingConn<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">fds<pos:position pos:line="10" pos:column="12"/></name><index pos:line="10" pos:column="12">[<expr><name pos:line="10" pos:column="13">nfds<pos:position pos:line="10" pos:column="17"/></name></expr>]<pos:position pos:line="10" pos:column="18"/></index></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name><name pos:line="10" pos:column="21">icpIncomingConn<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">fd<pos:position pos:line="10" pos:column="40"/></name></name></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="11" pos:column="9">++<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">nfds<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name><name pos:line="14" pos:column="9">Comm<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">::<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">IsConnOpen<pos:position pos:line="14" pos:column="25"/></name></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">icpOutgoingConn<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call> <operator pos:line="14" pos:column="43">&amp;&amp;<pos:position pos:line="14" pos:column="53"/></operator> <name pos:line="14" pos:column="46">icpIncomingConn<pos:position pos:line="14" pos:column="61"/></name> <operator pos:line="14" pos:column="62">!=<pos:position pos:line="14" pos:column="64"/></operator> <name pos:line="14" pos:column="65">icpOutgoingConn<pos:position pos:line="14" pos:column="80"/></name></expr>)<pos:position pos:line="14" pos:column="81"/></condition><then pos:line="14" pos:column="81"> <block pos:line="14" pos:column="82">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">fds<pos:position pos:line="15" pos:column="12"/></name><index pos:line="15" pos:column="12">[<expr><name pos:line="15" pos:column="13">nfds<pos:position pos:line="15" pos:column="17"/></name></expr>]<pos:position pos:line="15" pos:column="18"/></index></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name><name pos:line="15" pos:column="21">icpOutgoingConn<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">fd<pos:position pos:line="15" pos:column="40"/></name></name></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="16" pos:column="9">++<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">nfds<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">nfds<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">==<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19">
        <block type="pseudo"><return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">nevents<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">comm_check_incoming_select_handlers<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">nfds<pos:position pos:line="22" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">fds<pos:position pos:line="22" pos:column="60"/></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">incoming_udp_interval<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">+=<pos:position pos:line="24" pos:column="29"/></operator> <name><name pos:line="24" pos:column="30">Config<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">.<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">comm_incoming<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">udp<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">.<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="55">average<pos:position pos:line="24" pos:column="62"/></name></name> <operator pos:line="24" pos:column="63">-<pos:position pos:line="24" pos:column="64"/></operator> <name pos:line="24" pos:column="65">nevents<pos:position pos:line="24" pos:column="72"/></name></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">incoming_udp_interval<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">&lt;<pos:position pos:line="26" pos:column="35"/></operator> <literal type="number" pos:line="26" pos:column="33">0<pos:position pos:line="26" pos:column="34"/></literal></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">incoming_udp_interval<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <literal type="number" pos:line="27" pos:column="33">0<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">incoming_udp_interval<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&gt;<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="33">MAX_INCOMING_INTERVAL<pos:position pos:line="29" pos:column="54"/></name></expr>)<pos:position pos:line="29" pos:column="55"/></condition><then pos:line="29" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="9">incoming_udp_interval<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">MAX_INCOMING_INTERVAL<pos:position pos:line="30" pos:column="54"/></name></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">nevents<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&gt;<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="19">INCOMING_UDP_MAX<pos:position pos:line="32" pos:column="35"/></name></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="9">nevents<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">INCOMING_UDP_MAX<pos:position pos:line="33" pos:column="35"/></name></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">statCounter<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">comm_udp_incoming<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">.<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">count<pos:position pos:line="35" pos:column="40"/></name></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">nevents<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

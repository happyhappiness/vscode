<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3338_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">VectPoint<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">ServiceConfig<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseVectPoint<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">service_configConfig<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list> <specifier pos:line="2" pos:column="77">const<pos:position pos:line="2" pos:column="82"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">t<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">service_configConfig<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">q<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">strchr<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">t<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="31">'_'<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">q<pos:position pos:line="7" pos:column="10"/></name></expr>)<pos:position pos:line="7" pos:column="11"/></condition><then pos:line="7" pos:column="11">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">t<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">q<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">+<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name pos:line="10" pos:column="10">strcmp<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">t<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="20">"precache"<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name><name pos:line="11" pos:column="16">Adaptation<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">::<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">pointPreCache<pos:position pos:line="11" pos:column="41"/></name></name></expr>;<pos:position pos:line="11" pos:column="42"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><call><name pos:line="13" pos:column="10">strcmp<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">t<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="20">"postcache"<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name><name pos:line="14" pos:column="16">Adaptation<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">::<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">pointPostCache<pos:position pos:line="14" pos:column="42"/></name></name></expr>;<pos:position pos:line="14" pos:column="43"/></return></block></then></if>

    <return pos:line="16" pos:column="5">return <expr><name><name pos:line="16" pos:column="12">Adaptation<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">::<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">pointNone<pos:position pos:line="16" pos:column="33"/></name></name></expr>;<pos:position pos:line="16" pos:column="34"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2558_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">FtpStateData<pos:position pos:line="1" pos:column="18"/></name><operator pos:line="1" pos:column="18">::<pos:position pos:line="1" pos:column="20"/></operator><name pos:line="1" pos:column="20">readStor<pos:position pos:line="1" pos:column="28"/></name></name><parameter_list pos:line="1" pos:column="28">()<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">code<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name><name pos:line="3" pos:column="16">ctrl<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">.<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">replycode<pos:position pos:line="3" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">9<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">code<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="17">125<pos:position pos:line="6" pos:column="20"/></literal> <operator pos:line="6" pos:column="21">||<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">code<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="33">150<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">&amp;&amp;<pos:position pos:line="6" pos:column="47"/></operator> <call><name><name pos:line="6" pos:column="40">Comm<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">::<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">IsConnOpen<pos:position pos:line="6" pos:column="56"/></name></name><argument_list pos:line="6" pos:column="56">(<argument><expr><name><name pos:line="6" pos:column="57">data<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">.<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="62">conn<pos:position pos:line="6" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call><operator pos:line="6" pos:column="67">)<pos:position pos:line="6" pos:column="68"/></operator></expr>)<pos:position pos:line="6" pos:column="69"/></condition><then pos:line="6" pos:column="69"> <block pos:line="6" pos:column="70">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">startRequestBodyFlow<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block pos:line="7" pos:column="38">{ <comment type="line" pos:line="7" pos:column="40">// register to receive body data</comment>
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">ftpFail<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">this<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
            <return pos:line="9" pos:column="13">return;<pos:position pos:line="9" pos:column="20"/></return>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="12" pos:column="9">/* When client status is 125, or 150 and the data connection is open, Begin data transfer. */</comment>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">9<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="19">3<pos:position pos:line="13" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">HERE<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&lt;&lt;<pos:position pos:line="13" pos:column="35"/></operator> <literal type="string" pos:line="13" pos:column="30">"starting data transfer"<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">switchTimeoutToDataChannel<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">()<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">sendMoreRequestBody<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">()<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">fwd<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">dontRetry<pos:position pos:line="16" pos:column="23"/></name></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="boolean" pos:line="16" pos:column="24">true<pos:position pos:line="16" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt> <comment type="line" pos:line="16" pos:column="31">// dont permit re-trying if the body was sent.</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">state<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">WRITING_DATA<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">9<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="19">3<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">HERE<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;&lt;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="string" pos:line="18" pos:column="30">"writing data channel"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <elseif pos:line="19" pos:column="7">else <if pos:line="19" pos:column="12">if <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">code<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">150<pos:position pos:line="19" pos:column="27"/></literal></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
        <comment type="block" pos:line="20" pos:column="9">/* When client code is 150 with no data channel, Accept data channel. */</comment>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">9<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="19">3<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="22">"ftpReadStor: accepting data channel"<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">listenForDataChannel<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name><name pos:line="22" pos:column="30">data<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">.<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">conn<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="41">data<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">.<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">host<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif> <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">9<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="19">DBG_IMPORTANT<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">HERE<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">&lt;&lt;<pos:position pos:line="24" pos:column="47"/></operator> <literal type="string" pos:line="24" pos:column="42">"Unexpected reply code "<pos:position pos:line="24" pos:column="66"/></literal><operator pos:line="24" pos:column="66">&lt;&lt;<pos:position pos:line="24" pos:column="74"/></operator> <call><name><name pos:line="24" pos:column="69">std<pos:position pos:line="24" pos:column="72"/></name><operator pos:line="24" pos:column="72">::<pos:position pos:line="24" pos:column="74"/></operator><name pos:line="24" pos:column="74">setfill<pos:position pos:line="24" pos:column="81"/></name></name><argument_list pos:line="24" pos:column="81">(<argument><expr><literal type="char" pos:line="24" pos:column="82">'0'<pos:position pos:line="24" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call> <operator pos:line="24" pos:column="87">&lt;&lt;<pos:position pos:line="24" pos:column="95"/></operator> <call><name><name pos:line="24" pos:column="90">std<pos:position pos:line="24" pos:column="93"/></name><operator pos:line="24" pos:column="93">::<pos:position pos:line="24" pos:column="95"/></operator><name pos:line="24" pos:column="95">setw<pos:position pos:line="24" pos:column="99"/></name></name><argument_list pos:line="24" pos:column="99">(<argument><expr><literal type="number" pos:line="24" pos:column="100">3<pos:position pos:line="24" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="102"/></argument_list></call> <operator pos:line="24" pos:column="103">&lt;&lt;<pos:position pos:line="24" pos:column="111"/></operator> <name pos:line="24" pos:column="106">code<pos:position pos:line="24" pos:column="110"/></name></expr></argument>)<pos:position pos:line="24" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="112"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ftpFail<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">this<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_39_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">Debug<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">::<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">Levels<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">1<pos:position pos:line="4" pos:column="20"/></literal></expr>]<pos:position pos:line="4" pos:column="21"/></index></name> <operator pos:line="4" pos:column="22">=<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="24">8<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="15">1<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="5" pos:column="17">"test"<pos:position pos:line="5" pos:column="23"/></literal> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <literal type="string" pos:line="5" pos:column="27">"string"<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="15">9<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="6" pos:column="17">"dont show this"<pos:position pos:line="6" pos:column="33"/></literal> <operator pos:line="6" pos:column="34">&lt;&lt;<pos:position pos:line="6" pos:column="42"/></operator> <literal type="string" pos:line="6" pos:column="37">"string"<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="17">"test"<pos:position pos:line="7" pos:column="23"/></literal> <operator pos:line="7" pos:column="24">&lt;&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="string" pos:line="7" pos:column="27">"string"<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="8" pos:column="17">"test"<pos:position pos:line="8" pos:column="23"/></literal> <operator pos:line="8" pos:column="24">&lt;&lt;<pos:position pos:line="8" pos:column="32"/></operator> <literal type="string" pos:line="8" pos:column="27">"string"<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><literal type="boolean" pos:line="9" pos:column="9">true<pos:position pos:line="9" pos:column="13"/></literal></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="18">9<pos:position pos:line="10" pos:column="19"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="20">"this won't compile if the macro is broken."<pos:position pos:line="10" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="20">"bar"<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt></block></else></if>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">StreamTest<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">aStreamObject<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">StreamTest<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">streamPointer<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="33">aStreamObject<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></decl>;<pos:position pos:line="14" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">1<pos:position pos:line="15" pos:column="13"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal></expr></argument>,<argument><expr><name pos:line="15" pos:column="16">aStreamObject<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">1<pos:position pos:line="16" pos:column="13"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr></argument>,<argument><expr><call><name><name pos:line="16" pos:column="16">streamPointer<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">getAnInt<pos:position pos:line="16" pos:column="39"/></name></name><argument_list pos:line="16" pos:column="39">()<pos:position pos:line="16" pos:column="41"/></argument_list></call> <operator pos:line="16" pos:column="42">&lt;&lt;<pos:position pos:line="16" pos:column="50"/></operator> <literal type="string" pos:line="16" pos:column="45">" "<pos:position pos:line="16" pos:column="48"/></literal> <operator pos:line="16" pos:column="49">&lt;&lt;<pos:position pos:line="16" pos:column="57"/></operator> <call><name><name pos:line="16" pos:column="52">aStreamObject<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">.<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="66">getACString<pos:position pos:line="16" pos:column="77"/></name></name><argument_list pos:line="16" pos:column="77">()<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="81"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

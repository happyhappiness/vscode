<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3916_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Ecap<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">HeaderRep<pos:position pos:line="1" pos:column="28"/></name><operator pos:line="1" pos:column="28">::<pos:position pos:line="1" pos:column="30"/></operator><name pos:line="1" pos:column="30">Value<pos:position pos:line="1" pos:column="35"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">HeaderRep<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">value<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">Name<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="48">name<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">http_hdr_type<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">squidId<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><call><name pos:line="4" pos:column="35">TranslateHeaderId<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">name<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">String<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">value<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><ternary><condition><expr><name pos:line="5" pos:column="26">squidId<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">==<pos:position pos:line="5" pos:column="36"/></operator> <name pos:line="5" pos:column="37">HDR_OTHER<pos:position pos:line="5" pos:column="46"/></name></expr> ?<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
                         <expr><call><name><name pos:line="6" pos:column="26">theHeader<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">.<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">getByName<pos:position pos:line="6" pos:column="45"/></name></name><argument_list pos:line="6" pos:column="45">(<argument><expr><call><name><name pos:line="6" pos:column="46">name<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">.<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">image<pos:position pos:line="6" pos:column="56"/></name></name><argument_list pos:line="6" pos:column="56">()<pos:position pos:line="6" pos:column="58"/></argument_list></call><operator pos:line="6" pos:column="58">.<pos:position pos:line="6" pos:column="59"/></operator><call><name pos:line="6" pos:column="59">c_str<pos:position pos:line="6" pos:column="64"/></name><argument_list pos:line="6" pos:column="64">()<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr> <pos:position pos:line="6" pos:column="68"/></then><else pos:line="6" pos:column="68">:
                         <expr><call><name><name pos:line="7" pos:column="26">theHeader<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">.<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">getStrOrList<pos:position pos:line="7" pos:column="48"/></name></name><argument_list pos:line="7" pos:column="48">(<argument><expr><name pos:line="7" pos:column="49">squidId<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
    <return pos:line="8" pos:column="5">return <expr><ternary><condition><expr><call><name><name pos:line="8" pos:column="12">value<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">defined<pos:position pos:line="8" pos:column="25"/></name></name><argument_list pos:line="8" pos:column="25">()<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
           <expr><call><name><name pos:line="9" pos:column="12">Value<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">::<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">FromTempString<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">(<argument><expr><call><name><name pos:line="9" pos:column="34">value<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">.<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">termedBuf<pos:position pos:line="9" pos:column="49"/></name></name><argument_list pos:line="9" pos:column="49">()<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr> <pos:position pos:line="9" pos:column="53"/></then><else pos:line="9" pos:column="53">: <expr><call><name pos:line="9" pos:column="55">Value<pos:position pos:line="9" pos:column="60"/></name><argument_list pos:line="9" pos:column="60">()<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="63"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

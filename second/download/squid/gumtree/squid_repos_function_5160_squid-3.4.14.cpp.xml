<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5160_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">TcpAcceptor<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">start<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">5<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <call><name pos:line="4" pos:column="26">status<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">()<pos:position pos:line="4" pos:column="34"/></argument_list></call> <operator pos:line="4" pos:column="35">&lt;&lt;<pos:position pos:line="4" pos:column="43"/></operator> <literal type="string" pos:line="4" pos:column="38">" AsyncCall Subscription: "<pos:position pos:line="4" pos:column="65"/></literal> <operator pos:line="4" pos:column="66">&lt;&lt;<pos:position pos:line="4" pos:column="74"/></operator> <name pos:line="4" pos:column="69">theCallSub<pos:position pos:line="4" pos:column="79"/></name></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><call><name pos:line="6" pos:column="10">IsConnOpen<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">conn<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">setListen<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">()<pos:position pos:line="8" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>

    <comment type="line" pos:line="10" pos:column="5">// if no error so far start accepting connections.</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">errcode<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">SetSelect<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">conn<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">fd<pos:position pos:line="12" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">COMM_SELECT_READ<pos:position pos:line="12" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">doAccept<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">this<pos:position pos:line="12" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="63">0<pos:position pos:line="12" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

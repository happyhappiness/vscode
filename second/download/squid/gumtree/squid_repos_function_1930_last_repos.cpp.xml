<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1930_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsParseResolvConf<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">result<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="boolean" pos:line="4" pos:column="19">false<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">!<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">_SQUID_WINDOWS_<pos:position pos:line="5" pos:column="21"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">FILE<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">fp<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name pos:line="6" pos:column="16">fopen<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">_PATH_RESCONF<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="37">"r"<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">fp<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13"> <block pos:line="8" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">xerrno<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">errno<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">78<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_IMPORTANT<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">""<pos:position pos:line="10" pos:column="37"/></literal> <operator pos:line="10" pos:column="38">&lt;&lt;<pos:position pos:line="10" pos:column="46"/></operator> <name pos:line="10" pos:column="41">_PATH_RESCONF<pos:position pos:line="10" pos:column="54"/></name> <operator pos:line="10" pos:column="55">&lt;&lt;<pos:position pos:line="10" pos:column="63"/></operator> <literal type="string" pos:line="10" pos:column="58">": "<pos:position pos:line="10" pos:column="62"/></literal> <operator pos:line="10" pos:column="63">&lt;&lt;<pos:position pos:line="10" pos:column="71"/></operator> <call><name pos:line="10" pos:column="66">xstrerr<pos:position pos:line="10" pos:column="73"/></name><argument_list pos:line="10" pos:column="73">(<argument><expr><name pos:line="10" pos:column="74">xerrno<pos:position pos:line="10" pos:column="80"/></name></expr></argument>)<pos:position pos:line="10" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="83"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">buf<pos:position pos:line="14" pos:column="13"/></name><index pos:line="14" pos:column="13">[<expr><name pos:line="14" pos:column="14">RESOLV_BUFSZ<pos:position pos:line="14" pos:column="26"/></name></expr>]<pos:position pos:line="14" pos:column="27"/></index></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">t<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><name pos:line="15" pos:column="21">NULL<pos:position pos:line="15" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><call><name pos:line="16" pos:column="12">fgets<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">buf<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">RESOLV_BUFSZ<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">fp<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="41"/></condition> <block pos:line="16" pos:column="42">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">t<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">strtok<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">buf<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="25">w_space<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">==<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">t<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
            <continue pos:line="20" pos:column="13">continue;<pos:position pos:line="20" pos:column="22"/></continue>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><call><name pos:line="21" pos:column="20">strcmp<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">t<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="30">"nameserver"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call> <operator pos:line="21" pos:column="44">==<pos:position pos:line="21" pos:column="46"/></operator> <literal type="number" pos:line="21" pos:column="47">0<pos:position pos:line="21" pos:column="48"/></literal></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">t<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">strtok<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">w_space<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>

            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">NULL<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">==<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">t<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27">
                <block type="pseudo"><continue pos:line="25" pos:column="17">continue;<pos:position pos:line="25" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="27" pos:column="13">debugs<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="number" pos:line="27" pos:column="20">78<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="24">DBG_IMPORTANT<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"Adding nameserver "<pos:position pos:line="27" pos:column="59"/></literal> <operator pos:line="27" pos:column="60">&lt;&lt;<pos:position pos:line="27" pos:column="68"/></operator> <name pos:line="27" pos:column="63">t<pos:position pos:line="27" pos:column="64"/></name> <operator pos:line="27" pos:column="65">&lt;&lt;<pos:position pos:line="27" pos:column="73"/></operator> <literal type="string" pos:line="27" pos:column="68">" from "<pos:position pos:line="27" pos:column="76"/></literal> <operator pos:line="27" pos:column="77">&lt;&lt;<pos:position pos:line="27" pos:column="85"/></operator> <name pos:line="27" pos:column="80">_PATH_RESCONF<pos:position pos:line="27" pos:column="93"/></name></expr></argument>)<pos:position pos:line="27" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="95"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="29" pos:column="13">idnsAddNameserver<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">t<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">result<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="boolean" pos:line="30" pos:column="22">true<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if></elseif> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><call><name pos:line="31" pos:column="20">strcmp<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">t<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"domain"<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <literal type="number" pos:line="31" pos:column="43">0<pos:position pos:line="31" pos:column="44"/></literal></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45"> <block pos:line="31" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">idnsFreeSearchpath<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">()<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">t<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <call><name pos:line="33" pos:column="17">strtok<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">NULL<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="30">w_space<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>

            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">NULL<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">==<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">t<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27">
                <block type="pseudo"><continue pos:line="36" pos:column="17">continue;<pos:position pos:line="36" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">78<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="24">DBG_IMPORTANT<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="39">"Adding domain "<pos:position pos:line="38" pos:column="55"/></literal> <operator pos:line="38" pos:column="56">&lt;&lt;<pos:position pos:line="38" pos:column="64"/></operator> <name pos:line="38" pos:column="59">t<pos:position pos:line="38" pos:column="60"/></name> <operator pos:line="38" pos:column="61">&lt;&lt;<pos:position pos:line="38" pos:column="69"/></operator> <literal type="string" pos:line="38" pos:column="64">" from "<pos:position pos:line="38" pos:column="72"/></literal> <operator pos:line="38" pos:column="73">&lt;&lt;<pos:position pos:line="38" pos:column="81"/></operator> <name pos:line="38" pos:column="76">_PATH_RESCONF<pos:position pos:line="38" pos:column="89"/></name></expr></argument>)<pos:position pos:line="38" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="91"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="40" pos:column="13">idnsAddPathComponent<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">t<pos:position pos:line="40" pos:column="35"/></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif> <elseif pos:line="41" pos:column="11">else <if pos:line="41" pos:column="16">if <condition pos:line="41" pos:column="19">(<expr><call><name pos:line="41" pos:column="20">strcmp<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">t<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"search"<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call> <operator pos:line="41" pos:column="40">==<pos:position pos:line="41" pos:column="42"/></operator> <literal type="number" pos:line="41" pos:column="43">0<pos:position pos:line="41" pos:column="44"/></literal></expr>)<pos:position pos:line="41" pos:column="45"/></condition><then pos:line="41" pos:column="45"> <block pos:line="41" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">idnsFreeSearchpath<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">()<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
            <while pos:line="43" pos:column="13">while <condition pos:line="43" pos:column="19">(<expr><name pos:line="43" pos:column="20">NULL<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">!=<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">t<pos:position pos:line="43" pos:column="29"/></name></expr>)<pos:position pos:line="43" pos:column="30"/></condition> <block pos:line="43" pos:column="31">{
                <expr_stmt><expr><name pos:line="44" pos:column="17">t<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <call><name pos:line="44" pos:column="21">strtok<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">NULL<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">w_space<pos:position pos:line="44" pos:column="41"/></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>

                <if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">NULL<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">==<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">t<pos:position pos:line="46" pos:column="30"/></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31">
                    <block type="pseudo"><continue pos:line="47" pos:column="21">continue;<pos:position pos:line="47" pos:column="30"/></continue></block></then></if>

                <expr_stmt><expr><call><name pos:line="49" pos:column="17">debugs<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><literal type="number" pos:line="49" pos:column="24">78<pos:position pos:line="49" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="28">DBG_IMPORTANT<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="43">"Adding domain "<pos:position pos:line="49" pos:column="59"/></literal> <operator pos:line="49" pos:column="60">&lt;&lt;<pos:position pos:line="49" pos:column="68"/></operator> <name pos:line="49" pos:column="63">t<pos:position pos:line="49" pos:column="64"/></name> <operator pos:line="49" pos:column="65">&lt;&lt;<pos:position pos:line="49" pos:column="73"/></operator> <literal type="string" pos:line="49" pos:column="68">" from "<pos:position pos:line="49" pos:column="76"/></literal> <operator pos:line="49" pos:column="77">&lt;&lt;<pos:position pos:line="49" pos:column="85"/></operator> <name pos:line="49" pos:column="80">_PATH_RESCONF<pos:position pos:line="49" pos:column="93"/></name></expr></argument>)<pos:position pos:line="49" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="95"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="51" pos:column="17">idnsAddPathComponent<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name pos:line="51" pos:column="38">t<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></while>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if></elseif> <elseif pos:line="53" pos:column="11">else <if pos:line="53" pos:column="16">if <condition pos:line="53" pos:column="19">(<expr><call><name pos:line="53" pos:column="20">strcmp<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">t<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="30">"options"<pos:position pos:line="53" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="40"/></argument_list></call> <operator pos:line="53" pos:column="41">==<pos:position pos:line="53" pos:column="43"/></operator> <literal type="number" pos:line="53" pos:column="44">0<pos:position pos:line="53" pos:column="45"/></literal></expr>)<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46"> <block pos:line="53" pos:column="47">{
            <while pos:line="54" pos:column="13">while <condition pos:line="54" pos:column="19">(<expr><name pos:line="54" pos:column="20">NULL<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">!=<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">t<pos:position pos:line="54" pos:column="29"/></name></expr>)<pos:position pos:line="54" pos:column="30"/></condition> <block pos:line="54" pos:column="31">{
                <expr_stmt><expr><name pos:line="55" pos:column="17">t<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <call><name pos:line="55" pos:column="21">strtok<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">NULL<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">w_space<pos:position pos:line="55" pos:column="41"/></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>

                <if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">NULL<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">==<pos:position pos:line="57" pos:column="28"/></operator> <name pos:line="57" pos:column="29">t<pos:position pos:line="57" pos:column="30"/></name></expr>)<pos:position pos:line="57" pos:column="31"/></condition><then pos:line="57" pos:column="31">
                    <block type="pseudo"><continue pos:line="58" pos:column="21">continue;<pos:position pos:line="58" pos:column="30"/></continue></block></then></if>

                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">strncmp<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">t<pos:position pos:line="60" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="32">"ndots:"<pos:position pos:line="60" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="42">6<pos:position pos:line="60" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call> <operator pos:line="60" pos:column="45">==<pos:position pos:line="60" pos:column="47"/></operator> <literal type="number" pos:line="60" pos:column="48">0<pos:position pos:line="60" pos:column="49"/></literal></expr>)<pos:position pos:line="60" pos:column="50"/></condition><then pos:line="60" pos:column="50"> <block pos:line="60" pos:column="51">{
                    <expr_stmt><expr><name pos:line="61" pos:column="21">ndots<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <call><name pos:line="61" pos:column="29">atoi<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">t<pos:position pos:line="61" pos:column="35"/></name> <operator pos:line="61" pos:column="36">+<pos:position pos:line="61" pos:column="37"/></operator> <literal type="number" pos:line="61" pos:column="38">6<pos:position pos:line="61" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>

                    <if pos:line="63" pos:column="21">if <condition pos:line="63" pos:column="24">(<expr><name pos:line="63" pos:column="25">ndots<pos:position pos:line="63" pos:column="30"/></name> <operator pos:line="63" pos:column="31">&lt;<pos:position pos:line="63" pos:column="35"/></operator> <literal type="number" pos:line="63" pos:column="33">1<pos:position pos:line="63" pos:column="34"/></literal></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="25">ndots<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">=<pos:position pos:line="64" pos:column="32"/></operator> <literal type="number" pos:line="64" pos:column="33">1<pos:position pos:line="64" pos:column="34"/></literal></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt></block></then></if>

                    <expr_stmt><expr><call><name pos:line="66" pos:column="21">debugs<pos:position pos:line="66" pos:column="27"/></name><argument_list pos:line="66" pos:column="27">(<argument><expr><literal type="number" pos:line="66" pos:column="28">78<pos:position pos:line="66" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="32">DBG_IMPORTANT<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="47">"Adding ndots "<pos:position pos:line="66" pos:column="62"/></literal> <operator pos:line="66" pos:column="63">&lt;&lt;<pos:position pos:line="66" pos:column="71"/></operator> <name pos:line="66" pos:column="66">ndots<pos:position pos:line="66" pos:column="71"/></name> <operator pos:line="66" pos:column="72">&lt;&lt;<pos:position pos:line="66" pos:column="80"/></operator> <literal type="string" pos:line="66" pos:column="75">" from "<pos:position pos:line="66" pos:column="83"/></literal> <operator pos:line="66" pos:column="84">&lt;&lt;<pos:position pos:line="66" pos:column="92"/></operator> <name pos:line="66" pos:column="87">_PATH_RESCONF<pos:position pos:line="66" pos:column="100"/></name></expr></argument>)<pos:position pos:line="66" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="102"/></expr_stmt>
                }<pos:position pos:line="67" pos:column="18"/></block></then></if>
            }<pos:position pos:line="68" pos:column="14"/></block></while>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="70" pos:column="6"/></block></while>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">npc<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">==<pos:position pos:line="71" pos:column="15"/></operator> <literal type="number" pos:line="71" pos:column="16">0<pos:position pos:line="71" pos:column="17"/></literal> <operator pos:line="71" pos:column="18">&amp;&amp;<pos:position pos:line="71" pos:column="28"/></operator> <operator pos:line="71" pos:column="21">(<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="22">t<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <call><name pos:line="71" pos:column="26">getMyHostname<pos:position pos:line="71" pos:column="39"/></name><argument_list pos:line="71" pos:column="39">()<pos:position pos:line="71" pos:column="41"/></argument_list></call><operator pos:line="71" pos:column="41">)<pos:position pos:line="71" pos:column="42"/></operator></expr>)<pos:position pos:line="71" pos:column="43"/></condition><then pos:line="71" pos:column="43"> <block pos:line="71" pos:column="44">{
        <expr_stmt><expr><name pos:line="72" pos:column="9">t<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <call><name pos:line="72" pos:column="13">strchr<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">t<pos:position pos:line="72" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="72" pos:column="23">'.'<pos:position pos:line="72" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">t<pos:position pos:line="73" pos:column="14"/></name></expr>)<pos:position pos:line="73" pos:column="15"/></condition><then pos:line="73" pos:column="15">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="13">idnsAddPathComponent<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">t<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">+<pos:position pos:line="74" pos:column="36"/></operator><literal type="number" pos:line="74" pos:column="36">1<pos:position pos:line="74" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">fclose<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><name pos:line="77" pos:column="12">fp<pos:position pos:line="77" pos:column="14"/></name></expr></argument>)<pos:position pos:line="77" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">result<pos:position pos:line="79" pos:column="18"/></name></expr>;<pos:position pos:line="79" pos:column="19"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

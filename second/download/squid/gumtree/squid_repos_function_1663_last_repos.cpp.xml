<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1663_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">cbdataInternalFree<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">p<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">file<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">line<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cbdata<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">c<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">WITH_VALGRIND<pos:position pos:line="5" pos:column="18"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="6" pos:column="5">c<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name><name pos:line="6" pos:column="9">cbdata_htable<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">.<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">at<pos:position pos:line="6" pos:column="25"/></name></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">p<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
<cpp:else pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">else<pos:position pos:line="7" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="8" pos:column="5">c<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">cbdata<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">p<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="34">-<pos:position pos:line="8" pos:column="35"/></operator> <name><name pos:line="8" pos:column="36">cbdata<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">::<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">Offset<pos:position pos:line="8" pos:column="50"/></name></name><operator pos:line="8" pos:column="50">)<pos:position pos:line="8" pos:column="51"/></operator></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">USE_CBDATA_DEBUG<pos:position pos:line="10" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">45<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">3<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">p<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;&lt;<pos:position pos:line="11" pos:column="29"/></operator> <literal type="string" pos:line="11" pos:column="24">" "<pos:position pos:line="11" pos:column="27"/></literal> <operator pos:line="11" pos:column="28">&lt;&lt;<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="31">file<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">&lt;&lt;<pos:position pos:line="11" pos:column="44"/></operator> <literal type="string" pos:line="11" pos:column="39">":"<pos:position pos:line="11" pos:column="42"/></literal> <operator pos:line="11" pos:column="43">&lt;&lt;<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="46">line<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">45<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">9<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">p<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">c<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">check<pos:position pos:line="16" pos:column="13"/></name></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">__LINE__<pos:position pos:line="16" pos:column="22"/></name></expr></argument>)<pos:position pos:line="16" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name><name pos:line="17" pos:column="12">c<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">valid<pos:position pos:line="17" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">c<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">valid<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">USE_CBDATA_DEBUG<pos:position pos:line="19" pos:column="21"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">c<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">addHistory<pos:position pos:line="21" pos:column="18"/></name></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="string" pos:line="21" pos:column="19">"Free"<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">file<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">line<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">c<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">locks<pos:position pos:line="24" pos:column="17"/></name></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18"> <block pos:line="24" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">45<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="20">9<pos:position pos:line="25" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="23">p<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&lt;&lt;<pos:position pos:line="25" pos:column="33"/></operator> <literal type="string" pos:line="25" pos:column="28">" has "<pos:position pos:line="25" pos:column="35"/></literal> <operator pos:line="25" pos:column="36">&lt;&lt;<pos:position pos:line="25" pos:column="44"/></operator> <name><name pos:line="25" pos:column="39">c<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">locks<pos:position pos:line="25" pos:column="47"/></name></name> <operator pos:line="25" pos:column="48">&lt;&lt;<pos:position pos:line="25" pos:column="56"/></operator> <literal type="string" pos:line="25" pos:column="51">" locks, not freeing"<pos:position pos:line="25" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">cbdataRealFree<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">c<pos:position pos:line="29" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">file<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">line<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">NULL<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

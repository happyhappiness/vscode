<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2423_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">CheckQuickAbortIsReasonable<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">StoreEntry<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">entry<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">MemObject<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier> <specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier></type> <name pos:line="4" pos:column="23">mem<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name><name pos:line="4" pos:column="29">entry<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">mem_obj<pos:position pos:line="4" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">mem<pos:position pos:line="5" pos:column="15"/></name></expr></argument>)<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">90<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"entry="<pos:position pos:line="6" pos:column="27"/></literal> <operator pos:line="6" pos:column="28">&lt;&lt;<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="31">entry<pos:position pos:line="6" pos:column="36"/></name> <operator pos:line="6" pos:column="37">&lt;&lt;<pos:position pos:line="6" pos:column="45"/></operator> <literal type="string" pos:line="6" pos:column="40">", mem="<pos:position pos:line="6" pos:column="48"/></literal> <operator pos:line="6" pos:column="49">&lt;&lt;<pos:position pos:line="6" pos:column="57"/></operator> <name pos:line="6" pos:column="52">mem<pos:position pos:line="6" pos:column="55"/></name></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">mem<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">request<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">&amp;&amp;<pos:position pos:line="8" pos:column="32"/></operator> <operator pos:line="8" pos:column="25">!<pos:position pos:line="8" pos:column="26"/></operator><name><name pos:line="8" pos:column="26">mem<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">request<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">flags<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">cachable<pos:position pos:line="8" pos:column="54"/></name></name></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55"> <block pos:line="8" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">90<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"quick-abort? YES !mem-&gt;request-&gt;flags.cachable"<pos:position pos:line="9" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">true<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">EBIT_TEST<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">entry<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">flags<pos:position pos:line="13" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">KEY_PRIVATE<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <block pos:line="13" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">90<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">3<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"quick-abort? YES KEY_PRIVATE"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">true<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int64_t<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">expectlen<pos:position pos:line="18" pos:column="22"/></name> <init pos:line="18" pos:column="23">= <expr><call><name><name pos:line="18" pos:column="25">entry<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">getReply<pos:position pos:line="18" pos:column="40"/></name></name><argument_list pos:line="18" pos:column="40">()<pos:position pos:line="18" pos:column="42"/></argument_list></call><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">content_length<pos:position pos:line="18" pos:column="58"/></name> <operator pos:line="18" pos:column="59">+<pos:position pos:line="18" pos:column="60"/></operator> <call><name><name pos:line="18" pos:column="61">entry<pos:position pos:line="18" pos:column="66"/></name><operator pos:line="18" pos:column="66">-&gt;<pos:position pos:line="18" pos:column="71"/></operator><name pos:line="18" pos:column="68">getReply<pos:position pos:line="18" pos:column="76"/></name></name><argument_list pos:line="18" pos:column="76">()<pos:position pos:line="18" pos:column="78"/></argument_list></call><operator pos:line="18" pos:column="78">-&gt;<pos:position pos:line="18" pos:column="83"/></operator><name pos:line="18" pos:column="80">hdr_sz<pos:position pos:line="18" pos:column="86"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="87"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">expectlen<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
        <comment type="block" pos:line="21" pos:column="9">/* expectlen is &lt; 0 if *no* information about the object has been received */</comment>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">90<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">3<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"quick-abort? YES no object data received yet"<pos:position pos:line="22" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="boolean" pos:line="23" pos:column="16">true<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int64_t<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">curlen<pos:position pos:line="26" pos:column="19"/></name> <init pos:line="26" pos:column="20">=  <expr><call><name><name pos:line="26" pos:column="23">mem<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">endOffset<pos:position pos:line="26" pos:column="37"/></name></name><argument_list pos:line="26" pos:column="37">()<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">Config<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">.<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">quickAbort<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">.<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">min<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">&lt;<pos:position pos:line="28" pos:column="35"/></operator> <literal type="number" pos:line="28" pos:column="33">0<pos:position pos:line="28" pos:column="34"/></literal></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <block pos:line="28" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">90<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="20">3<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="23">"quick-abort? NO disabled"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><literal type="boolean" pos:line="30" pos:column="16">false<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">mem<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">request<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">&amp;&amp;<pos:position pos:line="33" pos:column="32"/></operator> <name><name pos:line="33" pos:column="25">mem<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">request<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">range<pos:position pos:line="33" pos:column="44"/></name></name> <operator pos:line="33" pos:column="45">&amp;&amp;<pos:position pos:line="33" pos:column="55"/></operator> <call><name><name pos:line="33" pos:column="48">mem<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">request<pos:position pos:line="33" pos:column="60"/></name><operator pos:line="33" pos:column="60">-&gt;<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="62">getRangeOffsetLimit<pos:position pos:line="33" pos:column="81"/></name></name><argument_list pos:line="33" pos:column="81">()<pos:position pos:line="33" pos:column="83"/></argument_list></call> <operator pos:line="33" pos:column="84">&lt;<pos:position pos:line="33" pos:column="88"/></operator> <literal type="number" pos:line="33" pos:column="86">0<pos:position pos:line="33" pos:column="87"/></literal></expr>)<pos:position pos:line="33" pos:column="88"/></condition><then pos:line="33" pos:column="88"> <block pos:line="33" pos:column="89">{
        <comment type="block" pos:line="34" pos:column="9">/* Don't abort if the admin has configured range_ofset -1 to download fully for caching. */</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">90<pos:position pos:line="35" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="20">3<pos:position pos:line="35" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="23">"quick-abort? NO admin configured range replies to full-download"<pos:position pos:line="35" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="90"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><literal type="boolean" pos:line="36" pos:column="16">false<pos:position pos:line="36" pos:column="21"/></literal></expr>;<pos:position pos:line="36" pos:column="22"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">curlen<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">&gt;<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="18">expectlen<pos:position pos:line="39" pos:column="27"/></name></expr>)<pos:position pos:line="39" pos:column="28"/></condition><then pos:line="39" pos:column="28"> <block pos:line="39" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debugs<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="number" pos:line="40" pos:column="16">90<pos:position pos:line="40" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="20">3<pos:position pos:line="40" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="23">"quick-abort? YES bad content length ("<pos:position pos:line="40" pos:column="62"/></literal> <operator pos:line="40" pos:column="63">&lt;&lt;<pos:position pos:line="40" pos:column="71"/></operator> <name pos:line="40" pos:column="66">curlen<pos:position pos:line="40" pos:column="72"/></name> <operator pos:line="40" pos:column="73">&lt;&lt;<pos:position pos:line="40" pos:column="81"/></operator> <literal type="string" pos:line="40" pos:column="76">" of "<pos:position pos:line="40" pos:column="82"/></literal> <operator pos:line="40" pos:column="83">&lt;&lt;<pos:position pos:line="40" pos:column="91"/></operator> <name pos:line="40" pos:column="86">expectlen<pos:position pos:line="40" pos:column="95"/></name> <operator pos:line="40" pos:column="96">&lt;&lt;<pos:position pos:line="40" pos:column="104"/></operator> <literal type="string" pos:line="40" pos:column="99">" bytes received)"<pos:position pos:line="40" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="119"/></expr_stmt>
        <return pos:line="41" pos:column="9">return <expr><literal type="boolean" pos:line="41" pos:column="16">true<pos:position pos:line="41" pos:column="20"/></literal></expr>;<pos:position pos:line="41" pos:column="21"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">expectlen<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">-<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">curlen<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">)<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="30">&lt;<pos:position pos:line="44" pos:column="34"/></operator> <operator pos:line="44" pos:column="32">(<pos:position pos:line="44" pos:column="33"/></operator><name><name pos:line="44" pos:column="33">Config<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">quickAbort<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">.<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="51">min<pos:position pos:line="44" pos:column="54"/></name></name> <operator pos:line="44" pos:column="55">&lt;&lt;<pos:position pos:line="44" pos:column="63"/></operator> <literal type="number" pos:line="44" pos:column="58">10<pos:position pos:line="44" pos:column="60"/></literal><operator pos:line="44" pos:column="60">)<pos:position pos:line="44" pos:column="61"/></operator></expr>)<pos:position pos:line="44" pos:column="62"/></condition><then pos:line="44" pos:column="62"> <block pos:line="44" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">debugs<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="number" pos:line="45" pos:column="16">90<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="20">3<pos:position pos:line="45" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="23">"quick-abort? NO only a little more object left to receive"<pos:position pos:line="45" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="84"/></expr_stmt>
        <return pos:line="46" pos:column="9">return <expr><literal type="boolean" pos:line="46" pos:column="16">false<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">(<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">expectlen<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">-<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">curlen<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">)<pos:position pos:line="49" pos:column="29"/></operator> <operator pos:line="49" pos:column="30">&gt;<pos:position pos:line="49" pos:column="34"/></operator> <operator pos:line="49" pos:column="32">(<pos:position pos:line="49" pos:column="33"/></operator><name><name pos:line="49" pos:column="33">Config<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">.<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="40">quickAbort<pos:position pos:line="49" pos:column="50"/></name><operator pos:line="49" pos:column="50">.<pos:position pos:line="49" pos:column="51"/></operator><name pos:line="49" pos:column="51">max<pos:position pos:line="49" pos:column="54"/></name></name> <operator pos:line="49" pos:column="55">&lt;&lt;<pos:position pos:line="49" pos:column="63"/></operator> <literal type="number" pos:line="49" pos:column="58">10<pos:position pos:line="49" pos:column="60"/></literal><operator pos:line="49" pos:column="60">)<pos:position pos:line="49" pos:column="61"/></operator></expr>)<pos:position pos:line="49" pos:column="62"/></condition><then pos:line="49" pos:column="62"> <block pos:line="49" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">90<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="20">3<pos:position pos:line="50" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="23">"quick-abort? YES too much left to go"<pos:position pos:line="50" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
        <return pos:line="51" pos:column="9">return <expr><literal type="boolean" pos:line="51" pos:column="16">true<pos:position pos:line="51" pos:column="20"/></literal></expr>;<pos:position pos:line="51" pos:column="21"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">expectlen<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&lt;<pos:position pos:line="54" pos:column="23"/></operator> <literal type="number" pos:line="54" pos:column="21">100<pos:position pos:line="54" pos:column="24"/></literal></expr>)<pos:position pos:line="54" pos:column="25"/></condition><then pos:line="54" pos:column="25"> <block pos:line="54" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">debugs<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="number" pos:line="55" pos:column="16">90<pos:position pos:line="55" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="20">3<pos:position pos:line="55" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="23">"quick-abort? NO avoid FPE"<pos:position pos:line="55" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><literal type="boolean" pos:line="56" pos:column="16">false<pos:position pos:line="56" pos:column="21"/></literal></expr>;<pos:position pos:line="56" pos:column="22"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">curlen<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">/<pos:position pos:line="59" pos:column="18"/></operator> <operator pos:line="59" pos:column="19">(<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">expectlen<pos:position pos:line="59" pos:column="29"/></name> <operator pos:line="59" pos:column="30">/<pos:position pos:line="59" pos:column="31"/></operator> <literal type="number" pos:line="59" pos:column="32">100<pos:position pos:line="59" pos:column="35"/></literal><operator pos:line="59" pos:column="35">)<pos:position pos:line="59" pos:column="36"/></operator><operator pos:line="59" pos:column="36">)<pos:position pos:line="59" pos:column="37"/></operator> <operator pos:line="59" pos:column="38">&gt;<pos:position pos:line="59" pos:column="42"/></operator> <operator pos:line="59" pos:column="40">(<pos:position pos:line="59" pos:column="41"/></operator><name><name pos:line="59" pos:column="41">Config<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">.<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="48">quickAbort<pos:position pos:line="59" pos:column="58"/></name><operator pos:line="59" pos:column="58">.<pos:position pos:line="59" pos:column="59"/></operator><name pos:line="59" pos:column="59">pct<pos:position pos:line="59" pos:column="62"/></name></name><operator pos:line="59" pos:column="62">)<pos:position pos:line="59" pos:column="63"/></operator></expr>)<pos:position pos:line="59" pos:column="64"/></condition><then pos:line="59" pos:column="64"> <block pos:line="59" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">debugs<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><literal type="number" pos:line="60" pos:column="16">90<pos:position pos:line="60" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="20">3<pos:position pos:line="60" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="23">"quick-abort? NO past point of no return"<pos:position pos:line="60" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="66"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><literal type="boolean" pos:line="61" pos:column="16">false<pos:position pos:line="61" pos:column="21"/></literal></expr>;<pos:position pos:line="61" pos:column="22"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="64" pos:column="5">debugs<pos:position pos:line="64" pos:column="11"/></name><argument_list pos:line="64" pos:column="11">(<argument><expr><literal type="number" pos:line="64" pos:column="12">90<pos:position pos:line="64" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="16">3<pos:position pos:line="64" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="19">"quick-abort? YES default"<pos:position pos:line="64" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>
    <return pos:line="65" pos:column="5">return <expr><literal type="boolean" pos:line="65" pos:column="12">true<pos:position pos:line="65" pos:column="16"/></literal></expr>;<pos:position pos:line="65" pos:column="17"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

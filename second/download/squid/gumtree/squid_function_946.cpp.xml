<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_946.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">ACLIntRange<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">dump<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list> <specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBufList<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">sl<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">CbDataListIterator<pos:position pos:line="5" pos:column="23"/></name><argument_list type="generic" pos:line="5" pos:column="23">&lt;<argument><expr><name pos:line="5" pos:column="24">RangeType<pos:position pos:line="5" pos:column="33"/></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="37"/></argument_list></name></type> <name pos:line="5" pos:column="35">iter<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">ranges<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><call><name><name pos:line="7" pos:column="13">iter<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">end<pos:position pos:line="7" pos:column="21"/></name></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="24"/></condition> <block pos:line="7" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">SBuf<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">sb<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">RangeType<pos:position pos:line="9" pos:column="24"/></name> <modifier pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></modifier></type> <name pos:line="9" pos:column="27">element<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><call><name><name pos:line="9" pos:column="37">iter<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">.<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">next<pos:position pos:line="9" pos:column="46"/></name></name><argument_list pos:line="9" pos:column="46">()<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">element<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">.<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">size<pos:position pos:line="11" pos:column="25"/></name></name><argument_list pos:line="11" pos:column="25">()<pos:position pos:line="11" pos:column="27"/></argument_list></call> <operator pos:line="11" pos:column="28">==<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="13">sb<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">Printf<pos:position pos:line="12" pos:column="22"/></name></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"%d"<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="29">element<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">.<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">start<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="13">sb<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">Printf<pos:position pos:line="14" pos:column="22"/></name></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"%d-%d"<pos:position pos:line="14" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="32">element<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">.<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">start<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="47">element<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">.<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="55">end<pos:position pos:line="14" pos:column="58"/></name></name><operator pos:line="14" pos:column="58">-<pos:position pos:line="14" pos:column="59"/></operator><literal type="number" pos:line="14" pos:column="59">1<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">sl<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">push_back<pos:position pos:line="16" pos:column="21"/></name></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">sb<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>

    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">sl<pos:position pos:line="19" pos:column="14"/></name></expr>;<pos:position pos:line="19" pos:column="15"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

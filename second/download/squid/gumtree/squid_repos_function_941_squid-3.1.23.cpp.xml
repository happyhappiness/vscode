<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_941_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DeferredReadManager<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">flushReads<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">CbDataListContainer<pos:position pos:line="4" pos:column="24"/></name><argument_list type="generic" pos:line="4" pos:column="24">&lt;<argument><expr><name pos:line="4" pos:column="25">DeferredRead<pos:position pos:line="4" pos:column="37"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="41"/></argument_list></name></type> <name pos:line="4" pos:column="39">reads<pos:position pos:line="4" pos:column="44"/></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">reads<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <name pos:line="5" pos:column="13">deferredReads<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">deferredReads<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <call><name><name pos:line="6" pos:column="21">CbDataListContainer<pos:position pos:line="6" pos:column="40"/></name><argument_list type="generic" pos:line="6" pos:column="40">&lt;<argument><expr><name pos:line="6" pos:column="41">DeferredRead<pos:position pos:line="6" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="57"/></argument_list></name><argument_list pos:line="6" pos:column="54">()<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>

    <comment type="line" pos:line="8" pos:column="5">// XXX: For fairness this SHOULD randomize the order</comment>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">!<pos:position pos:line="9" pos:column="13"/></operator><call><name><name pos:line="9" pos:column="13">reads<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">.<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">empty<pos:position pos:line="9" pos:column="24"/></name></name><argument_list pos:line="9" pos:column="24">()<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="27"/></condition> <block pos:line="9" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">DeferredRead<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">aRead<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><call><name pos:line="10" pos:column="30">popHead<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">reads<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">kickARead<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">aRead<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

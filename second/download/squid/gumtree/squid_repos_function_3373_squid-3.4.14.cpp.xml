<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3373_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">snmpDecodePacket<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">SnmpRequest<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">rq<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">snmp_pdu<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">PDU<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">u_char<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">Community<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">u_char<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">buf<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name><name pos:line="6" pos:column="19">rq<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">buf<pos:position pos:line="6" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name><name pos:line="7" pos:column="15">rq<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">len<pos:position pos:line="7" pos:column="22"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">allow_t<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">allow<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">ACCESS_DENIED<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">Config<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">accessList<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">snmp<pos:position pos:line="10" pos:column="32"/></name></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33"> <block pos:line="10" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">49<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_IMPORTANT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"WARNING: snmp_access not configured. agent query DENIED from : "<pos:position pos:line="11" pos:column="100"/></literal> <operator pos:line="11" pos:column="101">&lt;&lt;<pos:position pos:line="11" pos:column="109"/></operator> <name><name pos:line="11" pos:column="104">rq<pos:position pos:line="11" pos:column="106"/></name><operator pos:line="11" pos:column="106">-&gt;<pos:position pos:line="11" pos:column="111"/></operator><name pos:line="11" pos:column="108">from<pos:position pos:line="11" pos:column="112"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="114"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">49<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">5<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">HERE<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;&lt;<pos:position pos:line="15" pos:column="32"/></operator> <literal type="string" pos:line="15" pos:column="27">"Called."<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">PDU<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">snmp_pdu_create<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* Allways answer on SNMPv1 */</comment>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">rq<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">session<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">Version<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">SNMP_VERSION_1<pos:position pos:line="18" pos:column="41"/></name></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">Community<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">snmp_parse<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name><name pos:line="19" pos:column="29">rq<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">session<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">PDU<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">buf<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">len<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Check if we have explicit permission to access SNMP data.
     * default (set above) is to deny all */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">Community<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19"> <block pos:line="23" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">ACLFilledChecklist<pos:position pos:line="24" pos:column="27"/></name></type> <name pos:line="24" pos:column="28">checklist<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">Config<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">.<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="45">accessList<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">.<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="56">snmp<pos:position pos:line="24" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">NULL<pos:position pos:line="24" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="68">NULL<pos:position pos:line="24" pos:column="72"/></name></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></decl>;<pos:position pos:line="24" pos:column="74"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">checklist<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">src_addr<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <name><name pos:line="25" pos:column="30">rq<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">from<pos:position pos:line="25" pos:column="38"/></name></name></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">checklist<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">snmp_community<pos:position pos:line="26" pos:column="33"/></name></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">char<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">*<pos:position pos:line="26" pos:column="43"/></operator><operator pos:line="26" pos:column="43">)<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">Community<pos:position pos:line="26" pos:column="54"/></name></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">allow<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name><name pos:line="27" pos:column="17">checklist<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">fastCheck<pos:position pos:line="27" pos:column="36"/></name></name><argument_list pos:line="27" pos:column="36">()<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">allow<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">==<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">ACCESS_ALLOWED<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">&amp;&amp;<pos:position pos:line="29" pos:column="47"/></operator> <operator pos:line="29" pos:column="40">(<pos:position pos:line="29" pos:column="41"/></operator><call><name pos:line="29" pos:column="41">snmp_coexist_V2toV1<pos:position pos:line="29" pos:column="60"/></name><argument_list pos:line="29" pos:column="60">(<argument><expr><name pos:line="29" pos:column="61">PDU<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call><operator pos:line="29" pos:column="65">)<pos:position pos:line="29" pos:column="66"/></operator></expr>)<pos:position pos:line="29" pos:column="67"/></condition><then pos:line="29" pos:column="67"> <block pos:line="29" pos:column="68">{
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">rq<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">community<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">Community<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">rq<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">PDU<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">PDU<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">49<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="24">5<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">"snmpAgentParse: reqid=["<pos:position pos:line="32" pos:column="52"/></literal> <operator pos:line="32" pos:column="53">&lt;&lt;<pos:position pos:line="32" pos:column="61"/></operator> <name><name pos:line="32" pos:column="56">PDU<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">-&gt;<pos:position pos:line="32" pos:column="64"/></operator><name pos:line="32" pos:column="61">reqid<pos:position pos:line="32" pos:column="66"/></name></name> <operator pos:line="32" pos:column="67">&lt;&lt;<pos:position pos:line="32" pos:column="75"/></operator> <literal type="string" pos:line="32" pos:column="70">"]"<pos:position pos:line="32" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">snmpConstructReponse<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">rq<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then> <else pos:line="34" pos:column="11">else <block pos:line="34" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">debugs<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="number" pos:line="35" pos:column="20">49<pos:position pos:line="35" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">DBG_IMPORTANT<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">"WARNING: SNMP agent query DENIED from : "<pos:position pos:line="35" pos:column="81"/></literal> <operator pos:line="35" pos:column="82">&lt;&lt;<pos:position pos:line="35" pos:column="90"/></operator> <name><name pos:line="35" pos:column="85">rq<pos:position pos:line="35" pos:column="87"/></name><operator pos:line="35" pos:column="87">-&gt;<pos:position pos:line="35" pos:column="92"/></operator><name pos:line="35" pos:column="89">from<pos:position pos:line="35" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="95"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">xfree<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">Community<pos:position pos:line="37" pos:column="24"/></name></expr></argument>)<pos:position pos:line="37" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>

    }<pos:position pos:line="39" pos:column="6"/></block></then> <else pos:line="39" pos:column="7">else <block pos:line="39" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debugs<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="number" pos:line="40" pos:column="16">49<pos:position pos:line="40" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="20">DBG_IMPORTANT<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="35">"WARNING: Failed SNMP agent query from : "<pos:position pos:line="40" pos:column="77"/></literal> <operator pos:line="40" pos:column="78">&lt;&lt;<pos:position pos:line="40" pos:column="86"/></operator> <name><name pos:line="40" pos:column="81">rq<pos:position pos:line="40" pos:column="83"/></name><operator pos:line="40" pos:column="83">-&gt;<pos:position pos:line="40" pos:column="88"/></operator><name pos:line="40" pos:column="85">from<pos:position pos:line="40" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">snmp_free_pdu<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">PDU<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

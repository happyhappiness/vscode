<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5308_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Client<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">connectDataChannel<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">Comm<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">::<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">IsConnOpen<pos:position pos:line="4" pos:column="26"/></name></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name><name pos:line="4" pos:column="27">ctrl<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">conn<pos:position pos:line="4" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38"> <block pos:line="4" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">9<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="19">5<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="22">"The control connection to the remote end is closed"<pos:position pos:line="5" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="76"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">safe_free<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name><name pos:line="9" pos:column="15">ctrl<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">last_command<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">safe_free<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">ctrl<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">last_reply<pos:position pos:line="11" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">ctrl<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">.<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">last_command<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <call><name pos:line="13" pos:column="25">xstrdup<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><literal type="string" pos:line="13" pos:column="33">"Connect to server data port"<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>

    <comment type="line" pos:line="15" pos:column="5">// Generate a new data channel descriptor to be opened.</comment>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">Comm<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">::<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">ConnectionPointer<pos:position pos:line="16" pos:column="28"/></name></name></type> <name pos:line="16" pos:column="29">conn<pos:position pos:line="16" pos:column="33"/></name> <init pos:line="16" pos:column="34">= <expr><operator pos:line="16" pos:column="36">new<pos:position pos:line="16" pos:column="39"/></operator> <name><name pos:line="16" pos:column="40">Comm<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">::<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">Connection<pos:position pos:line="16" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">conn<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">setAddrs<pos:position pos:line="17" pos:column="19"/></name></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name><name pos:line="17" pos:column="20">ctrl<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">conn<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">local<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="38">data<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">host<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">conn<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">local<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">port<pos:position pos:line="18" pos:column="21"/></name></name><argument_list pos:line="18" pos:column="21">(<argument><expr><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">remote<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">port<pos:position pos:line="19" pos:column="22"/></name></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name><name pos:line="19" pos:column="23">data<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">port<pos:position pos:line="19" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">conn<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">tos<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name><name pos:line="20" pos:column="17">ctrl<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">conn<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">tos<pos:position pos:line="20" pos:column="31"/></name></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">conn<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">nfmark<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name><name pos:line="21" pos:column="20">ctrl<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">conn<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">nfmark<pos:position pos:line="21" pos:column="37"/></name></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">9<pos:position pos:line="23" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="15">3<pos:position pos:line="23" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="18">"connecting to "<pos:position pos:line="23" pos:column="34"/></literal> <operator pos:line="23" pos:column="35">&lt;&lt;<pos:position pos:line="23" pos:column="43"/></operator> <name><name pos:line="23" pos:column="38">conn<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">remote<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

    <typedef pos:line="25" pos:column="5">typedef <type><name><name pos:line="25" pos:column="13">CommCbMemFunT<pos:position pos:line="25" pos:column="26"/></name><argument_list type="generic" pos:line="25" pos:column="26">&lt;<argument><expr><name pos:line="25" pos:column="27">Client<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">CommConnectCbParams<pos:position pos:line="25" pos:column="54"/></name></expr></argument>&gt;<pos:position pos:line="25" pos:column="58"/></argument_list></name></type> <name pos:line="25" pos:column="56">Dialer<pos:position pos:line="25" pos:column="62"/></name>;<pos:position pos:line="25" pos:column="63"/></typedef>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">data<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">.<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">opener<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">JobCallback<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><literal type="number" pos:line="26" pos:column="31">9<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="34">3<pos:position pos:line="26" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">Dialer<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">this<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="51">Ftp<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">::<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">Client<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">::<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="64">dataChannelConnected<pos:position pos:line="26" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="86"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="27" pos:column="5">Comm<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">::<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">ConnOpener<pos:position pos:line="27" pos:column="21"/></name></name> <modifier pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></modifier></type><name pos:line="27" pos:column="23">cs<pos:position pos:line="27" pos:column="25"/></name> <init pos:line="27" pos:column="26">= <expr><operator pos:line="27" pos:column="28">new<pos:position pos:line="27" pos:column="31"/></operator> <call><name><name pos:line="27" pos:column="32">Comm<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">::<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">ConnOpener<pos:position pos:line="27" pos:column="48"/></name></name><argument_list pos:line="27" pos:column="48">(<argument><expr><name pos:line="27" pos:column="49">conn<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="55">data<pos:position pos:line="27" pos:column="59"/></name><operator pos:line="27" pos:column="59">.<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="60">opener<pos:position pos:line="27" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="68">Config<pos:position pos:line="27" pos:column="74"/></name><operator pos:line="27" pos:column="74">.<pos:position pos:line="27" pos:column="75"/></operator><name pos:line="27" pos:column="75">Timeout<pos:position pos:line="27" pos:column="82"/></name><operator pos:line="27" pos:column="82">.<pos:position pos:line="27" pos:column="83"/></operator><name pos:line="27" pos:column="83">connect<pos:position pos:line="27" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="92"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">cs<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">setHost<pos:position pos:line="28" pos:column="16"/></name></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name><name pos:line="28" pos:column="17">data<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">host<pos:position pos:line="28" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">AsyncJob<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">::<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">Start<pos:position pos:line="29" pos:column="20"/></name></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">cs<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

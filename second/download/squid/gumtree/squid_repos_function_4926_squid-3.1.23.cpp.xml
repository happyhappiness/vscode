<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4926_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AuthNTLMUserRequest<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">authenticate<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name pos:line="2" pos:column="35">HttpRequest<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">aRequest<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">ConnStateData<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type> <name pos:line="2" pos:column="75">conn<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="81">http_hdr_type<pos:position pos:line="2" pos:column="94"/></name></type> <name pos:line="2" pos:column="95">type<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="100"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">proxy_auth<pos:position pos:line="4" pos:column="27"/></name></decl>, <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="30">blob<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* TODO: rename this!! */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">AuthUser<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">local_auth_user<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">local_auth_user<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">user<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">()<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">local_auth_user<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">local_auth_user<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">auth_type<pos:position pos:line="11" pos:column="38"/></name></name> <operator pos:line="11" pos:column="39">==<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="42">AUTH_NTLM<pos:position pos:line="11" pos:column="51"/></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">this<pos:position pos:line="12" pos:column="17"/></name></expr></argument>)<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* Check that we are in the client side, where we can generate
     * auth challenges */</comment>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">conn<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">NULL<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">||<pos:position pos:line="17" pos:column="24"/></operator> <operator pos:line="17" pos:column="25">!<pos:position pos:line="17" pos:column="26"/></operator><call><name pos:line="17" pos:column="26">cbdataReferenceValid<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">conn<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="53"/></condition><then pos:line="17" pos:column="53"> <block pos:line="17" pos:column="54">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">auth_state<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">AUTHENTICATE_STATE_FAILED<pos:position pos:line="18" pos:column="47"/></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">29<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"AuthNTLMUserRequest::authenticate: attempt to perform authentication without a connection!"<pos:position pos:line="19" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="117"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">waiting<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17"> <block pos:line="23" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">29<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"AuthNTLMUserRequest::authenticate: waiting for helper reply!"<pos:position pos:line="24" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="87"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">server_blob<pos:position pos:line="28" pos:column="20"/></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21"> <block pos:line="28" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">29<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="20">2<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="23">"AuthNTLMUserRequest::authenticate: need to challenge client '"<pos:position pos:line="29" pos:column="86"/></literal> <operator pos:line="29" pos:column="87">&lt;&lt;<pos:position pos:line="29" pos:column="95"/></operator> <name pos:line="29" pos:column="90">server_blob<pos:position pos:line="29" pos:column="101"/></name> <operator pos:line="29" pos:column="102">&lt;&lt;<pos:position pos:line="29" pos:column="110"/></operator> <literal type="string" pos:line="29" pos:column="105">"'!"<pos:position pos:line="29" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="111"/></expr_stmt>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* get header */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">proxy_auth<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name><name pos:line="34" pos:column="18">aRequest<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">header<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">getStr<pos:position pos:line="34" pos:column="41"/></name></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name pos:line="34" pos:column="42">type<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* locate second word */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">blob<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">proxy_auth<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* if proxy_auth is actually NULL, we'd better not manipulate it. */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">blob<pos:position pos:line="40" pos:column="13"/></name></expr>)<pos:position pos:line="40" pos:column="14"/></condition><then pos:line="40" pos:column="14"> <block pos:line="40" pos:column="15">{
        <while pos:line="41" pos:column="9">while <condition pos:line="41" pos:column="15">(<expr><call><name pos:line="41" pos:column="16">xisspace<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><operator pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">blob<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call> <operator pos:line="41" pos:column="32">&amp;&amp;<pos:position pos:line="41" pos:column="42"/></operator> <operator pos:line="41" pos:column="35">*<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">blob<pos:position pos:line="41" pos:column="40"/></name></expr>)<pos:position pos:line="41" pos:column="41"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="13">blob<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">++<pos:position pos:line="42" pos:column="19"/></operator></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt></block></while>

        <while pos:line="44" pos:column="9">while <condition pos:line="44" pos:column="15">(<expr><operator pos:line="44" pos:column="16">!<pos:position pos:line="44" pos:column="17"/></operator><call><name pos:line="44" pos:column="17">xisspace<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><operator pos:line="44" pos:column="26">*<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="27">blob<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call> <operator pos:line="44" pos:column="33">&amp;&amp;<pos:position pos:line="44" pos:column="43"/></operator> <operator pos:line="44" pos:column="36">*<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">blob<pos:position pos:line="44" pos:column="41"/></name></expr>)<pos:position pos:line="44" pos:column="42"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="13">blob<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">++<pos:position pos:line="45" pos:column="19"/></operator></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt></block></while>

        <while pos:line="47" pos:column="9">while <condition pos:line="47" pos:column="15">(<expr><call><name pos:line="47" pos:column="16">xisspace<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><operator pos:line="47" pos:column="25">*<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="26">blob<pos:position pos:line="47" pos:column="30"/></name></expr></argument>)<pos:position pos:line="47" pos:column="31"/></argument_list></call> <operator pos:line="47" pos:column="32">&amp;&amp;<pos:position pos:line="47" pos:column="42"/></operator> <operator pos:line="47" pos:column="35">*<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">blob<pos:position pos:line="47" pos:column="40"/></name></expr>)<pos:position pos:line="47" pos:column="41"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="13">blob<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">++<pos:position pos:line="48" pos:column="19"/></operator></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt></block></while>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <switch pos:line="51" pos:column="5">switch <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">auth_state<pos:position pos:line="51" pos:column="23"/></name></expr>)<pos:position pos:line="51" pos:column="24"/></condition> <block pos:line="51" pos:column="25">{

    <case pos:line="53" pos:column="5">case <expr><name pos:line="53" pos:column="10">AUTHENTICATE_STATE_NONE<pos:position pos:line="53" pos:column="33"/></name></expr>:<pos:position pos:line="53" pos:column="34"/></case>
        <comment type="block" pos:line="54" pos:column="9">/* we've received a ntlm request. pass to a helper */</comment>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">debugs<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="number" pos:line="55" pos:column="16">29<pos:position pos:line="55" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="20">9<pos:position pos:line="55" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="23">"AuthNTLMUserRequest::authenticate: auth state ntlm none. Received blob: '"<pos:position pos:line="55" pos:column="98"/></literal> <operator pos:line="55" pos:column="99">&lt;&lt;<pos:position pos:line="55" pos:column="107"/></operator> <name pos:line="55" pos:column="102">proxy_auth<pos:position pos:line="55" pos:column="112"/></name> <operator pos:line="55" pos:column="113">&lt;&lt;<pos:position pos:line="55" pos:column="121"/></operator> <literal type="string" pos:line="55" pos:column="116">"'"<pos:position pos:line="55" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="121"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">auth_state<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">AUTHENTICATE_STATE_INITIAL<pos:position pos:line="56" pos:column="48"/></name></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">safe_free<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><name pos:line="57" pos:column="19">client_blob<pos:position pos:line="57" pos:column="30"/></name></expr></argument>)<pos:position pos:line="57" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">client_blob<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator><call><name pos:line="58" pos:column="21">xstrdup<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">blob<pos:position pos:line="58" pos:column="33"/></name></expr></argument>)<pos:position pos:line="58" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">conn<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">-&gt;<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="15">auth_type<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <name pos:line="59" pos:column="27">AUTH_NTLM<pos:position pos:line="59" pos:column="36"/></name></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">assert<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name><name pos:line="60" pos:column="16">conn<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">auth_user_request<pos:position pos:line="60" pos:column="39"/></name></name> <operator pos:line="60" pos:column="40">==<pos:position pos:line="60" pos:column="42"/></operator> <name pos:line="60" pos:column="43">NULL<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">conn<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">auth_user_request<pos:position pos:line="61" pos:column="32"/></name></name> <operator pos:line="61" pos:column="33">=<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">this<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">AUTHUSERREQUESTLOCK<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name><name pos:line="62" pos:column="29">conn<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">auth_user_request<pos:position pos:line="62" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="54">"conn"<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">request<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">aRequest<pos:position pos:line="63" pos:column="27"/></name></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">HTTPMSGLOCK<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">(<argument><expr><name pos:line="64" pos:column="21">request<pos:position pos:line="64" pos:column="28"/></name></expr></argument>)<pos:position pos:line="64" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
        <return pos:line="65" pos:column="9">return;<pos:position pos:line="65" pos:column="16"/></return>

        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>

    <case pos:line="69" pos:column="5">case <expr><name pos:line="69" pos:column="10">AUTHENTICATE_STATE_INITIAL<pos:position pos:line="69" pos:column="36"/></name></expr>:<pos:position pos:line="69" pos:column="37"/></case>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">debugs<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="number" pos:line="70" pos:column="16">29<pos:position pos:line="70" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="20">1<pos:position pos:line="70" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="23">"AuthNTLMUserRequest::authenticate: need to ask helper"<pos:position pos:line="70" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="80"/></expr_stmt>

        <return pos:line="72" pos:column="9">return;<pos:position pos:line="72" pos:column="16"/></return>

        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>


    <case pos:line="77" pos:column="5">case <expr><name pos:line="77" pos:column="10">AUTHENTICATE_STATE_IN_PROGRESS<pos:position pos:line="77" pos:column="40"/></name></expr>:<pos:position pos:line="77" pos:column="41"/></case>
        <comment type="block" pos:line="78" pos:column="9">/* we should have received a blob from the client. Hand it off to
         * some helper */</comment>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">safe_free<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name pos:line="80" pos:column="19">client_blob<pos:position pos:line="80" pos:column="30"/></name></expr></argument>)<pos:position pos:line="80" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name pos:line="82" pos:column="9">client_blob<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <call><name pos:line="82" pos:column="23">xstrdup<pos:position pos:line="82" pos:column="30"/></name> <argument_list pos:line="82" pos:column="31">(<argument><expr><name pos:line="82" pos:column="32">blob<pos:position pos:line="82" pos:column="36"/></name></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>

        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">request<pos:position pos:line="84" pos:column="20"/></name></expr>)<pos:position pos:line="84" pos:column="21"/></condition><then pos:line="84" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="13">HTTPMSGUNLOCK<pos:position pos:line="85" pos:column="26"/></name><argument_list pos:line="85" pos:column="26">(<argument><expr><name pos:line="85" pos:column="27">request<pos:position pos:line="85" pos:column="34"/></name></expr></argument>)<pos:position pos:line="85" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="36"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="86" pos:column="9">request<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <name pos:line="86" pos:column="19">aRequest<pos:position pos:line="86" pos:column="27"/></name></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">HTTPMSGLOCK<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name pos:line="87" pos:column="21">request<pos:position pos:line="87" pos:column="28"/></name></expr></argument>)<pos:position pos:line="87" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="30"/></expr_stmt>
        <return pos:line="88" pos:column="9">return;<pos:position pos:line="88" pos:column="16"/></return>

        <break pos:line="90" pos:column="9">break;<pos:position pos:line="90" pos:column="15"/></break>

    <case pos:line="92" pos:column="5">case <expr><name pos:line="92" pos:column="10">AUTHENTICATE_STATE_DONE<pos:position pos:line="92" pos:column="33"/></name></expr>:<pos:position pos:line="92" pos:column="34"/></case>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">fatal<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><literal type="string" pos:line="93" pos:column="15">"AuthNTLMUserRequest::authenticate: unexpect auth state DONE! Report a bug to the squid developers.\n"<pos:position pos:line="93" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="119"/></expr_stmt>

        <break pos:line="95" pos:column="9">break;<pos:position pos:line="95" pos:column="15"/></break>

    <case pos:line="97" pos:column="5">case <expr><name pos:line="97" pos:column="10">AUTHENTICATE_STATE_FAILED<pos:position pos:line="97" pos:column="35"/></name></expr>:<pos:position pos:line="97" pos:column="36"/></case>
        <comment type="block" pos:line="98" pos:column="9">/* we've failed somewhere in authentication */</comment>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">debugs<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><literal type="number" pos:line="99" pos:column="16">29<pos:position pos:line="99" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="20">9<pos:position pos:line="99" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="23">"AuthNTLMUserRequest::authenticate: auth state ntlm failed. "<pos:position pos:line="99" pos:column="84"/></literal> <operator pos:line="99" pos:column="85">&lt;&lt;<pos:position pos:line="99" pos:column="93"/></operator> <name pos:line="99" pos:column="88">proxy_auth<pos:position pos:line="99" pos:column="98"/></name></expr></argument>)<pos:position pos:line="99" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="100"/></expr_stmt>

        <return pos:line="101" pos:column="9">return;<pos:position pos:line="101" pos:column="16"/></return>

        <break pos:line="103" pos:column="9">break;<pos:position pos:line="103" pos:column="15"/></break>
    }<pos:position pos:line="104" pos:column="6"/></block></switch>

    <return pos:line="106" pos:column="5">return;<pos:position pos:line="106" pos:column="12"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

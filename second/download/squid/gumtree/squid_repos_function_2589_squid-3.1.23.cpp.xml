<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2589_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">appendSuccessHeader<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">mime_type<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">mime_enc<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">String<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">urlpath<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">request<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">urlpath<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">filename<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">t<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">StoreEntry<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">e<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">entry<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">9<pos:position pos:line="11" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="15">3<pos:position pos:line="11" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="18">HERE<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">flags<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">http_header_sent<pos:position pos:line="13" pos:column="31"/></name></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">HttpReply<pos:position pos:line="16" pos:column="14"/></name> <modifier pos:line="16" pos:column="15">*<pos:position pos:line="16" pos:column="16"/></modifier></type><name pos:line="16" pos:column="16">reply<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><operator pos:line="16" pos:column="24">new<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">HttpReply<pos:position pos:line="16" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">flags<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">.<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">http_header_sent<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">1<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><call><name><name pos:line="20" pos:column="12">e<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">isEmpty<pos:position pos:line="20" pos:column="22"/></name></name><argument_list pos:line="20" pos:column="22">()<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">EBIT_CLR<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">e<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">flags<pos:position pos:line="22" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">ENTRY_FWD_HDR_WAIT<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">e<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">buffer<pos:position pos:line="24" pos:column="14"/></name></name><argument_list pos:line="24" pos:column="14">()<pos:position pos:line="24" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>	<comment type="block" pos:line="24" pos:column="25">/* released when done processing current data payload */</comment>

    <expr_stmt><expr><name pos:line="26" pos:column="5">filename<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">t<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name><name pos:line="26" pos:column="21">urlpath<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">rpos<pos:position pos:line="26" pos:column="33"/></name></name><argument_list pos:line="26" pos:column="33">(<argument><expr><literal type="char" pos:line="26" pos:column="34">'/'<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call><operator pos:line="26" pos:column="38">)<pos:position pos:line="26" pos:column="39"/></operator></expr> ?<pos:position pos:line="26" pos:column="41"/></condition><then pos:line="26" pos:column="41"> <expr><name pos:line="26" pos:column="42">t<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">+<pos:position pos:line="26" pos:column="45"/></operator> <literal type="number" pos:line="26" pos:column="46">1<pos:position pos:line="26" pos:column="47"/></literal></expr> <pos:position pos:line="26" pos:column="48"/></then><else pos:line="26" pos:column="48">: <expr><call><name><name pos:line="26" pos:column="50">urlpath<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">.<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="58">termedBuf<pos:position pos:line="26" pos:column="67"/></name></name><argument_list pos:line="26" pos:column="67">()<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">flags<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">isdir<pos:position pos:line="28" pos:column="20"/></name></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21"> <block pos:line="28" pos:column="22">{
        <expr_stmt><expr><name pos:line="29" pos:column="9">mime_type<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <literal type="string" pos:line="29" pos:column="21">"text/html"<pos:position pos:line="29" pos:column="32"/></literal></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <switch pos:line="31" pos:column="9">switch <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">typecode<pos:position pos:line="31" pos:column="25"/></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition> <block pos:line="31" pos:column="27">{

        <case pos:line="33" pos:column="9">case <expr><literal type="char" pos:line="33" pos:column="14">'I'<pos:position pos:line="33" pos:column="17"/></literal></expr>:<pos:position pos:line="33" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="34" pos:column="13">mime_type<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <literal type="string" pos:line="34" pos:column="25">"application/octet-stream"<pos:position pos:line="34" pos:column="51"/></literal></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">mime_enc<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <call><name pos:line="35" pos:column="24">mimeGetContentEncoding<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name pos:line="35" pos:column="47">filename<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break>

        <case pos:line="38" pos:column="9">case <expr><literal type="char" pos:line="38" pos:column="14">'A'<pos:position pos:line="38" pos:column="17"/></literal></expr>:<pos:position pos:line="38" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="39" pos:column="13">mime_type<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <literal type="string" pos:line="39" pos:column="25">"text/plain"<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
            <break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break>

        <default pos:line="42" pos:column="9">default:<pos:position pos:line="42" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="43" pos:column="13">mime_type<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <call><name pos:line="43" pos:column="25">mimeGetContentType<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><name pos:line="43" pos:column="44">filename<pos:position pos:line="43" pos:column="52"/></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">mime_enc<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <call><name pos:line="44" pos:column="24">mimeGetContentEncoding<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">filename<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
            <break pos:line="45" pos:column="13">break;<pos:position pos:line="45" pos:column="19"/></break>
        }<pos:position pos:line="46" pos:column="10"/></block></switch>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="49" pos:column="5">/* set standard stuff */</comment>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><literal type="number" pos:line="51" pos:column="9">0<pos:position pos:line="51" pos:column="10"/></literal> <operator pos:line="51" pos:column="11">==<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">getCurrentOffset<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">()<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="33"/></condition><then pos:line="51" pos:column="33"> <block pos:line="51" pos:column="34">{
        <comment type="block" pos:line="52" pos:column="9">/* Full reply */</comment>
        <expr_stmt><expr><call><name><name pos:line="53" pos:column="9">reply<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">setHeaders<pos:position pos:line="53" pos:column="26"/></name></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">HTTP_OK<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="36">"Gatewaying"<pos:position pos:line="53" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">mime_type<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="61">theSize<pos:position pos:line="53" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="70">mdtm<pos:position pos:line="53" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="76">-<pos:position pos:line="53" pos:column="77"/></operator><literal type="number" pos:line="53" pos:column="77">2<pos:position pos:line="53" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then> <elseif pos:line="54" pos:column="7">else <if pos:line="54" pos:column="12">if <condition pos:line="54" pos:column="15">(<expr><name pos:line="54" pos:column="16">theSize<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">&lt;<pos:position pos:line="54" pos:column="28"/></operator> <call><name pos:line="54" pos:column="26">getCurrentOffset<pos:position pos:line="54" pos:column="42"/></name><argument_list pos:line="54" pos:column="42">()<pos:position pos:line="54" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="45"/></condition><then pos:line="54" pos:column="45"> <block pos:line="54" pos:column="46">{
        <comment type="block" pos:line="55" pos:column="9">/*
         * DPW 2007-05-04
         * offset should not be larger than theSize.  We should
         * not be seeing this condition any more because we'll only
         * send REST if we know the theSize and if it is less than theSize.
         */</comment>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">debugs<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr></argument>,<argument><expr><name pos:line="61" pos:column="18">DBG_CRITICAL<pos:position pos:line="61" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="61" pos:column="31">HERE<pos:position pos:line="61" pos:column="35"/></name> <operator pos:line="61" pos:column="36">&lt;&lt;<pos:position pos:line="61" pos:column="44"/></operator> <literal type="string" pos:line="61" pos:column="39">"Whoops! "<pos:position pos:line="61" pos:column="49"/></literal> <operator pos:line="61" pos:column="50">&lt;&lt;<pos:position pos:line="61" pos:column="58"/></operator>
               <literal type="string" pos:line="62" pos:column="16">" current offset="<pos:position pos:line="62" pos:column="34"/></literal> <operator pos:line="62" pos:column="35">&lt;&lt;<pos:position pos:line="62" pos:column="43"/></operator> <call><name pos:line="62" pos:column="38">getCurrentOffset<pos:position pos:line="62" pos:column="54"/></name><argument_list pos:line="62" pos:column="54">()<pos:position pos:line="62" pos:column="56"/></argument_list></call> <operator pos:line="62" pos:column="57">&lt;&lt;<pos:position pos:line="62" pos:column="65"/></operator>
               <literal type="string" pos:line="63" pos:column="16">", but theSize="<pos:position pos:line="63" pos:column="32"/></literal> <operator pos:line="63" pos:column="33">&lt;&lt;<pos:position pos:line="63" pos:column="41"/></operator> <name pos:line="63" pos:column="36">theSize<pos:position pos:line="63" pos:column="43"/></name> <operator pos:line="63" pos:column="44">&lt;&lt;<pos:position pos:line="63" pos:column="52"/></operator>
               <literal type="string" pos:line="64" pos:column="16">".  assuming full content response"<pos:position pos:line="64" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="65" pos:column="9">reply<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">setHeaders<pos:position pos:line="65" pos:column="26"/></name></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">HTTP_OK<pos:position pos:line="65" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="36">"Gatewaying"<pos:position pos:line="65" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">mime_type<pos:position pos:line="65" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="61">theSize<pos:position pos:line="65" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="70">mdtm<pos:position pos:line="65" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="76">-<pos:position pos:line="65" pos:column="77"/></operator><literal type="number" pos:line="65" pos:column="77">2<pos:position pos:line="65" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if></elseif> <else pos:line="66" pos:column="7">else <block pos:line="66" pos:column="12">{
        <comment type="block" pos:line="67" pos:column="9">/* Partial reply */</comment>
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">HttpHdrRangeSpec<pos:position pos:line="68" pos:column="25"/></name></type> <name pos:line="68" pos:column="26">range_spec<pos:position pos:line="68" pos:column="36"/></name></decl>;<pos:position pos:line="68" pos:column="37"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">range_spec<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">.<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">offset<pos:position pos:line="69" pos:column="26"/></name></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <call><name pos:line="69" pos:column="29">getCurrentOffset<pos:position pos:line="69" pos:column="45"/></name><argument_list pos:line="69" pos:column="45">()<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">range_spec<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">.<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="20">length<pos:position pos:line="70" pos:column="26"/></name></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <name pos:line="70" pos:column="29">theSize<pos:position pos:line="70" pos:column="36"/></name> <operator pos:line="70" pos:column="37">-<pos:position pos:line="70" pos:column="38"/></operator> <call><name pos:line="70" pos:column="39">getCurrentOffset<pos:position pos:line="70" pos:column="55"/></name><argument_list pos:line="70" pos:column="55">()<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">reply<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">setHeaders<pos:position pos:line="71" pos:column="26"/></name></name><argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">HTTP_PARTIAL_CONTENT<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="49">"Gatewaying"<pos:position pos:line="71" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="63">mime_type<pos:position pos:line="71" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="74">theSize<pos:position pos:line="71" pos:column="81"/></name> <operator pos:line="71" pos:column="82">-<pos:position pos:line="71" pos:column="83"/></operator> <call><name pos:line="71" pos:column="84">getCurrentOffset<pos:position pos:line="71" pos:column="100"/></name><argument_list pos:line="71" pos:column="100">()<pos:position pos:line="71" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="71" pos:column="104">mdtm<pos:position pos:line="71" pos:column="108"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="110">-<pos:position pos:line="71" pos:column="111"/></operator><literal type="number" pos:line="71" pos:column="111">2<pos:position pos:line="71" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="114"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">httpHeaderAddContRange<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><operator pos:line="72" pos:column="32">&amp;<pos:position pos:line="72" pos:column="37"/></operator><name><name pos:line="72" pos:column="33">reply<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">-&gt;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="40">header<pos:position pos:line="72" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="48">range_spec<pos:position pos:line="72" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="60">theSize<pos:position pos:line="72" pos:column="67"/></name></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="75" pos:column="5">/* additional info */</comment>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">mime_enc<pos:position pos:line="76" pos:column="17"/></name></expr>)<pos:position pos:line="76" pos:column="18"/></condition><then pos:line="76" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="77" pos:column="9">reply<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">-&gt;<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="16">header<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">.<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="23">putStr<pos:position pos:line="77" pos:column="29"/></name></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name pos:line="77" pos:column="30">HDR_CONTENT_ENCODING<pos:position pos:line="77" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="52">mime_enc<pos:position pos:line="77" pos:column="60"/></name></expr></argument>)<pos:position pos:line="77" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="62"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="79" pos:column="5">setVirginReply<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">reply<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">adaptOrFinalizeReply<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">()<pos:position pos:line="80" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

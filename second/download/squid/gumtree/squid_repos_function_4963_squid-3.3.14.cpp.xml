<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4963_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">unlink<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">StoreEntry<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="42">e<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">79<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"dirno "<pos:position pos:line="4" pos:column="35"/></literal> <operator pos:line="4" pos:column="36">&lt;&lt;<pos:position pos:line="4" pos:column="44"/></operator> <name pos:line="4" pos:column="39">index<pos:position pos:line="4" pos:column="44"/></name>  <operator pos:line="4" pos:column="46">&lt;&lt;<pos:position pos:line="4" pos:column="54"/></operator> <literal type="string" pos:line="4" pos:column="49">", fileno "<pos:position pos:line="4" pos:column="60"/></literal><operator pos:line="4" pos:column="60">&lt;&lt;<pos:position pos:line="4" pos:column="68"/></operator>
           <call><name><name pos:line="5" pos:column="12">std<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">::<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">setfill<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">(<argument><expr><literal type="char" pos:line="5" pos:column="25">'0'<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call> <operator pos:line="5" pos:column="30">&lt;&lt;<pos:position pos:line="5" pos:column="38"/></operator> <name><name pos:line="5" pos:column="33">std<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">::<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">hex<pos:position pos:line="5" pos:column="41"/></name></name> <operator pos:line="5" pos:column="42">&lt;&lt;<pos:position pos:line="5" pos:column="50"/></operator> <name><name pos:line="5" pos:column="45">std<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">::<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="50">uppercase<pos:position pos:line="5" pos:column="59"/></name></name> <operator pos:line="5" pos:column="60">&lt;&lt;<pos:position pos:line="5" pos:column="68"/></operator> <call><name><name pos:line="5" pos:column="63">std<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">::<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="68">setw<pos:position pos:line="5" pos:column="72"/></name></name><argument_list pos:line="5" pos:column="72">(<argument><expr><literal type="number" pos:line="5" pos:column="73">8<pos:position pos:line="5" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call> <operator pos:line="5" pos:column="76">&lt;&lt;<pos:position pos:line="5" pos:column="84"/></operator> <name><name pos:line="5" pos:column="79">e<pos:position pos:line="5" pos:column="80"/></name><operator pos:line="5" pos:column="80">.<pos:position pos:line="5" pos:column="81"/></operator><name pos:line="5" pos:column="81">swap_filen<pos:position pos:line="5" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="93"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">e<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">.<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">swap_status<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">==<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">SWAPOUT_DONE<pos:position pos:line="6" pos:column="38"/></name></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <block pos:line="6" pos:column="40">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">cur_size<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">-=<pos:position pos:line="7" pos:column="20"/></operator> <name><name pos:line="7" pos:column="21">fs<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">blksize<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></operator> <call><name pos:line="7" pos:column="34">sizeInBlocks<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name><name pos:line="7" pos:column="47">e<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">.<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">swap_file_sz<pos:position pos:line="7" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="8" pos:column="9">--<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">n_disk_objects<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">replacementRemove<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">e<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">mapBitReset<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name><name pos:line="11" pos:column="17">e<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">swap_filen<pos:position pos:line="11" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">UFSSwapDir<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">::<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">unlinkFile<pos:position pos:line="12" pos:column="27"/></name></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name><name pos:line="12" pos:column="28">e<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">swap_filen<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

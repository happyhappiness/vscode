<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1455_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SBuf<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">forceSize<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">size_type<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">newSize<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">24<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">8<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">id<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&lt;&lt;<pos:position pos:line="4" pos:column="30"/></operator> <literal type="string" pos:line="4" pos:column="25">" force "<pos:position pos:line="4" pos:column="34"/></literal> <operator pos:line="4" pos:column="35">&lt;&lt;<pos:position pos:line="4" pos:column="43"/></operator> <operator pos:line="4" pos:column="38">(<pos:position pos:line="4" pos:column="39"/></operator><ternary><condition><expr><name pos:line="4" pos:column="39">newSize<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">&gt;<pos:position pos:line="4" pos:column="51"/></operator> <call><name pos:line="4" pos:column="49">length<pos:position pos:line="4" pos:column="55"/></name><argument_list pos:line="4" pos:column="55">()<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr> ?<pos:position pos:line="4" pos:column="59"/></condition><then pos:line="4" pos:column="59"> <expr><literal type="string" pos:line="4" pos:column="60">"grow"<pos:position pos:line="4" pos:column="66"/></literal></expr> <pos:position pos:line="4" pos:column="67"/></then><else pos:line="4" pos:column="67">: <expr><literal type="string" pos:line="4" pos:column="69">"shrink"<pos:position pos:line="4" pos:column="77"/></literal></expr></else></ternary><operator pos:line="4" pos:column="77">)<pos:position pos:line="4" pos:column="78"/></operator> <operator pos:line="4" pos:column="79">&lt;&lt;<pos:position pos:line="4" pos:column="87"/></operator> <literal type="string" pos:line="4" pos:column="82">" to length="<pos:position pos:line="4" pos:column="95"/></literal> <operator pos:line="4" pos:column="96">&lt;&lt;<pos:position pos:line="4" pos:column="104"/></operator> <name pos:line="4" pos:column="99">newSize<pos:position pos:line="4" pos:column="106"/></name></expr></argument>)<pos:position pos:line="4" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="108"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><call><name><name pos:line="6" pos:column="10">store_<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">LockCount<pos:position pos:line="6" pos:column="27"/></name></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="33">1<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">newSize<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&gt;<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="19">min<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">maxSize<pos:position pos:line="7" pos:column="30"/></name></expr></argument>,<argument><expr><name><name pos:line="7" pos:column="31">store_<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">capacity<pos:position pos:line="7" pos:column="47"/></name></name><operator pos:line="7" pos:column="47">-<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">off_<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="54"/></condition><then pos:line="7" pos:column="54">
        <block type="pseudo"><throw pos:line="8" pos:column="9">throw <expr><call><name pos:line="8" pos:column="15">SBufTooBigException<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">__FILE__<pos:position pos:line="8" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="44">__LINE__<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></throw></block></then></if>
    <expr_stmt><expr><name pos:line="9" pos:column="5">len_<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">newSize<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">store_<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">size<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">newSize<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

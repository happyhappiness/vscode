<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_489_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uint32_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ipstr2long<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">ip_str<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type>    <name><name pos:line="3" pos:column="13">buf<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">6<pos:position pos:line="3" pos:column="18"/></literal></expr>]<pos:position pos:line="3" pos:column="19"/></index></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name>    <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">ptr<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">count<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uint32_t<pos:position pos:line="7" pos:column="13"/></name></type>    <name pos:line="7" pos:column="17">ipaddr<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">cur_byte<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">ipaddr<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">uint32_t<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">)<pos:position pos:line="10" pos:column="24"/></operator><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></init> <condition><expr><name pos:line="11" pos:column="17">i<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">4<pos:position pos:line="11" pos:column="22"/></literal></expr>;<pos:position pos:line="11" pos:column="23"/></condition> <incr><expr><operator pos:line="11" pos:column="24">++<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">i<pos:position pos:line="11" pos:column="27"/></name></expr></incr>)<pos:position pos:line="11" pos:column="28"/></control> <block pos:line="11" pos:column="29">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">ptr<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">buf<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">count<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">ptr<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="char" pos:line="14" pos:column="16">'\0'<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
        <while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">ip_str<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">!=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="char" pos:line="15" pos:column="27">'.'<pos:position pos:line="15" pos:column="30"/></literal> <operator pos:line="15" pos:column="31">&amp;&amp;<pos:position pos:line="15" pos:column="41"/></operator> <operator pos:line="15" pos:column="34">*<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">ip_str<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">!=<pos:position pos:line="15" pos:column="44"/></operator> <literal type="char" pos:line="15" pos:column="45">'\0'<pos:position pos:line="15" pos:column="49"/></literal> <operator pos:line="15" pos:column="50">&amp;&amp;<pos:position pos:line="15" pos:column="60"/></operator> <name pos:line="15" pos:column="53">count<pos:position pos:line="15" pos:column="58"/></name> <operator pos:line="15" pos:column="59">&lt;<pos:position pos:line="15" pos:column="63"/></operator> <literal type="number" pos:line="15" pos:column="61">4<pos:position pos:line="15" pos:column="62"/></literal></expr>)<pos:position pos:line="15" pos:column="63"/></condition> <block pos:line="15" pos:column="64">{
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><operator pos:line="16" pos:column="17">!<pos:position pos:line="16" pos:column="18"/></operator><call><name pos:line="16" pos:column="18">isdigit<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">ip_str<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block pos:line="16" pos:column="36">{
                <return pos:line="17" pos:column="17">return<expr><operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">uint32_t<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">)<pos:position pos:line="17" pos:column="34"/></operator><literal type="number" pos:line="17" pos:column="34">0<pos:position pos:line="17" pos:column="35"/></literal><operator pos:line="17" pos:column="35">)<pos:position pos:line="17" pos:column="36"/></operator></expr>;<pos:position pos:line="17" pos:column="37"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">ptr<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">ip_str<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">ptr<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="21" pos:column="13">++<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">ip_str<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="22" pos:column="13">++<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">count<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></while>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">count<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&gt;=<pos:position pos:line="24" pos:column="24"/></operator> <literal type="number" pos:line="24" pos:column="22">4<pos:position pos:line="24" pos:column="23"/></literal> <operator pos:line="24" pos:column="24">||<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">count<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">==<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">0<pos:position pos:line="24" pos:column="37"/></literal></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
            <return pos:line="25" pos:column="13">return<expr><operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">uint32_t<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator><literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal><operator pos:line="25" pos:column="31">)<pos:position pos:line="25" pos:column="32"/></operator></expr>;<pos:position pos:line="25" pos:column="33"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">ptr<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <literal type="char" pos:line="27" pos:column="16">'\0'<pos:position pos:line="27" pos:column="20"/></literal></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">cur_byte<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">atoi<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">buf<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">cur_byte<pos:position pos:line="29" pos:column="21"/></name> <argument_list type="generic" pos:line="29" pos:column="22">&lt; <argument><expr><literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal> <operator pos:line="29" pos:column="26">||<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">cur_byte<pos:position pos:line="29" pos:column="37"/></name></expr></argument> &gt;<pos:position pos:line="29" pos:column="42"/></argument_list></name> <literal type="number" pos:line="29" pos:column="40">255<pos:position pos:line="29" pos:column="43"/></literal></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44"> <block pos:line="29" pos:column="45">{
            <return pos:line="30" pos:column="13">return<expr><operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><operator pos:line="30" pos:column="20">(<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">uint32_t<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator><literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator></expr>;<pos:position pos:line="30" pos:column="33"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="32" pos:column="9">++<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">ip_str<pos:position pos:line="32" pos:column="17"/></name></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="33" pos:column="9">ipaddr<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">ipaddr<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">&lt;&lt;<pos:position pos:line="33" pos:column="33"/></operator> <literal type="number" pos:line="33" pos:column="28">8<pos:position pos:line="33" pos:column="29"/></literal> <operator pos:line="33" pos:column="30">|<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="32">(<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">uint32_t<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">cur_byte<pos:position pos:line="33" pos:column="50"/></name></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></for>
    <return pos:line="35" pos:column="5">return<expr><operator pos:line="35" pos:column="11">(<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">ipaddr<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">)<pos:position pos:line="35" pos:column="19"/></operator></expr>;<pos:position pos:line="35" pos:column="20"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

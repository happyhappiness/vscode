<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7031_squid-3.4.14.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ip6_sa2str<pos:position pos:line="2" pos:column="11"/></name><argument_list pos:line="2" pos:column="11">(<argument><expr><name pos:line="2" pos:column="12">sa6<pos:position pos:line="2" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="17">buf<pos:position pos:line="2" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="22">bufsiz<pos:position pos:line="2" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="30">flags<pos:position pos:line="2" pos:column="35"/></name></expr></argument>)<pos:position pos:line="2" pos:column="36"/></argument_list>
const struct <name pos:line="3" pos:column="14">sockaddr_in6<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><name pos:line="3" pos:column="28">sa6<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">char<pos:position pos:line="4" pos:column="5"/></name> <modifier pos:line="4" pos:column="6">*<pos:position pos:line="4" pos:column="7"/></modifier></type><name pos:line="4" pos:column="7">buf<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">size_t<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">bufsiz<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">flags<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">ifindex<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name><name pos:line="9" pos:column="11">struct<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">in6_addr<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">a6<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">n<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">ifindex<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">unsigned<pos:position pos:line="12" pos:column="24"/></name> <name pos:line="12" pos:column="25">int<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator><name><name pos:line="12" pos:column="29">sa6<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">sin6_scope_id<pos:position pos:line="12" pos:column="47"/></name></name></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">a6<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">&amp;<pos:position pos:line="13" pos:column="15"/></operator><name><name pos:line="13" pos:column="11">sa6<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">sin6_addr<pos:position pos:line="13" pos:column="25"/></name></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">NI_NUMERICSCOPE<pos:position pos:line="15" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">flags<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="18">NI_NUMERICSCOPE<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="35">!=<pos:position pos:line="16" pos:column="37"/></operator> <literal type="number" pos:line="16" pos:column="38">0<pos:position pos:line="16" pos:column="39"/></literal></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <block pos:line="16" pos:column="41">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">n<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">snprintf<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">buf<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">bufsiz<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"%u"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="41">sa6<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">sin6_scope_id<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">n<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&lt;<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal> <operator pos:line="18" pos:column="19">||<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">n<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">&gt;=<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="27">bufsiz<pos:position pos:line="18" pos:column="33"/></name></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
            <block type="pseudo"><return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">-<pos:position pos:line="19" pos:column="21"/></operator><literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></return></block></then>
        <else pos:line="20" pos:column="9">else
            <block type="pseudo"><return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">n<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></return></block></else></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="25" pos:column="5">/* if_indextoname() does not take buffer size.  not a good api... */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><call><name pos:line="26" pos:column="10">IN6_IS_ADDR_LINKLOCAL<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">a6<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call> <operator pos:line="26" pos:column="36">||<pos:position pos:line="26" pos:column="38"/></operator> <call><name pos:line="26" pos:column="39">IN6_IS_ADDR_MC_LINKLOCAL<pos:position pos:line="26" pos:column="63"/></name><argument_list pos:line="26" pos:column="63">(<argument><expr><name pos:line="26" pos:column="64">a6<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call> <operator pos:line="26" pos:column="68">||<pos:position pos:line="26" pos:column="70"/></operator>
            <call><name pos:line="27" pos:column="13">IN6_IS_ADDR_MC_NODELOCAL<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">a6<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator> <operator pos:line="27" pos:column="43">&amp;&amp;<pos:position pos:line="27" pos:column="53"/></operator> <name pos:line="27" pos:column="46">bufsiz<pos:position pos:line="27" pos:column="52"/></name> <operator pos:line="27" pos:column="53">&gt;=<pos:position pos:line="27" pos:column="58"/></operator> <name pos:line="27" pos:column="56">IF_NAMESIZE<pos:position pos:line="27" pos:column="67"/></name></expr>)<pos:position pos:line="27" pos:column="68"/></condition><then pos:line="27" pos:column="68"> <block pos:line="27" pos:column="69">{
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">p<pos:position pos:line="28" pos:column="16"/></name> <init pos:line="28" pos:column="17">= <expr><call><name pos:line="28" pos:column="19">if_indextoname<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">ifindex<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">buf<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="48"/></decl_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">p<pos:position pos:line="29" pos:column="14"/></name></expr>)<pos:position pos:line="29" pos:column="15"/></condition><then pos:line="29" pos:column="15">
            <block type="pseudo"><return pos:line="30" pos:column="13">return <expr><operator pos:line="30" pos:column="20">(<pos:position pos:line="30" pos:column="21"/></operator><call><name pos:line="30" pos:column="21">strlen<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">p<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call><operator pos:line="30" pos:column="30">)<pos:position pos:line="30" pos:column="31"/></operator></expr>;<pos:position pos:line="30" pos:column="32"/></return></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* last resort */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">n<pos:position pos:line="34" pos:column="6"/></name> <operator pos:line="34" pos:column="7">=<pos:position pos:line="34" pos:column="8"/></operator> <call><name pos:line="34" pos:column="9">snprintf<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">buf<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">bufsiz<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="31">"%u"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="37">sa6<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">sin6_scope_id<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">n<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">&lt;<pos:position pos:line="35" pos:column="15"/></operator> <literal type="number" pos:line="35" pos:column="13">0<pos:position pos:line="35" pos:column="14"/></literal> <operator pos:line="35" pos:column="15">||<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">n<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">&gt;=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="23">bufsiz<pos:position pos:line="35" pos:column="29"/></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30">
        <block type="pseudo"><return pos:line="36" pos:column="9">return <expr><operator pos:line="36" pos:column="16">-<pos:position pos:line="36" pos:column="17"/></operator><literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></return></block></then>
    <else pos:line="37" pos:column="5">else
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">n<pos:position pos:line="38" pos:column="17"/></name></expr>;<pos:position pos:line="38" pos:column="18"/></return></block></else></if>
}<pos:position pos:line="39" pos:column="2"/></block></unit>

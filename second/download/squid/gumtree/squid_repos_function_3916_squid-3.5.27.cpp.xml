<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3916_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">ServiceGroupPointer<pos:position pos:line="1" pos:column="32"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">AccessCheck<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">topGroup<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ServiceGroupPointer<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">g<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">candidates<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">size<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27"> <block pos:line="5" pos:column="28">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<decl><type><name pos:line="6" pos:column="13">AccessRule<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">r<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">FindRule<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><call><name pos:line="6" pos:column="38">topCandidate<pos:position pos:line="6" pos:column="50"/></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr></init></decl>)<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54"> <block pos:line="6" pos:column="55">{
            <expr_stmt><expr><name pos:line="7" pos:column="13">g<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">FindGroup<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name><name pos:line="7" pos:column="27">r<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">groupId<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">debugs<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="number" pos:line="8" pos:column="20">93<pos:position pos:line="8" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="23">5<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="26">HERE<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&lt;&lt;<pos:position pos:line="8" pos:column="39"/></operator> <literal type="string" pos:line="8" pos:column="34">"top group for "<pos:position pos:line="8" pos:column="50"/></literal> <operator pos:line="8" pos:column="51">&lt;&lt;<pos:position pos:line="8" pos:column="59"/></operator> <name><name pos:line="8" pos:column="54">r<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">id<pos:position pos:line="8" pos:column="59"/></name></name> <operator pos:line="8" pos:column="60">&lt;&lt;<pos:position pos:line="8" pos:column="68"/></operator> <literal type="string" pos:line="8" pos:column="63">" is "<pos:position pos:line="8" pos:column="69"/></literal> <operator pos:line="8" pos:column="70">&lt;&lt;<pos:position pos:line="8" pos:column="78"/></operator> <name pos:line="8" pos:column="73">g<pos:position pos:line="8" pos:column="74"/></name></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></then> <else pos:line="9" pos:column="11">else <block pos:line="9" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">debugs<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="number" pos:line="10" pos:column="20">93<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="23">5<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">HERE<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&lt;&lt;<pos:position pos:line="10" pos:column="39"/></operator> <literal type="string" pos:line="10" pos:column="34">"no rule for "<pos:position pos:line="10" pos:column="48"/></literal> <operator pos:line="10" pos:column="49">&lt;&lt;<pos:position pos:line="10" pos:column="57"/></operator> <call><name pos:line="10" pos:column="52">topCandidate<pos:position pos:line="10" pos:column="64"/></name><argument_list pos:line="10" pos:column="64">()<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></else></if>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">93<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="19">5<pos:position pos:line="13" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">HERE<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&lt;&lt;<pos:position pos:line="13" pos:column="35"/></operator> <literal type="string" pos:line="13" pos:column="30">"no candidates"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt> <comment type="line" pos:line="13" pos:column="48">// should not happen</comment>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>

    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">g<pos:position pos:line="16" pos:column="13"/></name></expr>;<pos:position pos:line="16" pos:column="14"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

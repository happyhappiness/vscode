<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6153_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">logfile_mod_daemon_close<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">Logfile<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">lf<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">l_daemon_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ll<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><cast type="static" pos:line="4" pos:column="22">static_cast<argument_list type="generic" pos:line="4" pos:column="33">&lt;<argument><expr><name pos:line="4" pos:column="34">l_daemon_t<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="50"/></argument_list><argument_list pos:line="4" pos:column="47">(<argument><expr><name><name pos:line="4" pos:column="48">lf<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">data<pos:position pos:line="4" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">50<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="16">DBG_IMPORTANT<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="31">"Logfile Daemon: closing log "<pos:position pos:line="5" pos:column="61"/></literal> <operator pos:line="5" pos:column="62">&lt;&lt;<pos:position pos:line="5" pos:column="70"/></operator> <name><name pos:line="5" pos:column="65">lf<pos:position pos:line="5" pos:column="67"/></name><operator pos:line="5" pos:column="67">-&gt;<pos:position pos:line="5" pos:column="72"/></operator><name pos:line="5" pos:column="69">path<pos:position pos:line="5" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">logfileFlush<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">lf<pos:position pos:line="6" pos:column="20"/></name></expr></argument>)<pos:position pos:line="6" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">ll<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">rfd<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name><name pos:line="7" pos:column="20">ll<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">wfd<pos:position pos:line="7" pos:column="27"/></name></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">comm_close<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name><name pos:line="8" pos:column="20">ll<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">rfd<pos:position pos:line="8" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else <block pos:line="9" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">comm_close<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name><name pos:line="10" pos:column="20">ll<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">rfd<pos:position pos:line="10" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">comm_close<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name><name pos:line="11" pos:column="20">ll<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">wfd<pos:position pos:line="11" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">kill<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name><name pos:line="13" pos:column="10">ll<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">pid<pos:position pos:line="13" pos:column="17"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">SIGTERM<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">eventDelete<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">logfileFlushEvent<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">lf<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">xfree<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">ll<pos:position pos:line="15" pos:column="13"/></name></expr></argument>)<pos:position pos:line="15" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">lf<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">data<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">cbdataInternalUnlock<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">lf<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt> <comment type="line" pos:line="17" pos:column="31">// WTF??</comment>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

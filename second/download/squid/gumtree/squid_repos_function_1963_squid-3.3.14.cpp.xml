<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1963_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreSearchHashIndex<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">copyBucket<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* probably need to lock the store entries...
     * we copy them all to prevent races on the links. */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">47<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"StoreSearchHashIndex::copyBucket #"<pos:position pos:line="6" pos:column="55"/></literal> <operator pos:line="6" pos:column="56">&lt;&lt;<pos:position pos:line="6" pos:column="64"/></operator> <name pos:line="6" pos:column="59">bucket<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name><name pos:line="7" pos:column="14">entries<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">size<pos:position pos:line="7" pos:column="26"/></name></name><argument_list pos:line="7" pos:column="26">()<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">hash_link<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">link_ptr<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">hash_link<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">link_next<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">link_next<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">hash_get_bucket<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">store_table<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">bucket<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">!=<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">link_ptr<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">link_next<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator></expr>)<pos:position pos:line="12" pos:column="43"/></condition> <block pos:line="12" pos:column="44">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">link_next<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name><name pos:line="13" pos:column="21">link_ptr<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">next<pos:position pos:line="13" pos:column="35"/></name></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">StoreEntry<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">e<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><operator pos:line="14" pos:column="25">(<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">StoreEntry<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">link_ptr<pos:position pos:line="14" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="49"/></decl_stmt>

        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">entries<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">push_back<pos:position pos:line="16" pos:column="26"/></name></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">e<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="19" pos:column="5">++<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">bucket<pos:position pos:line="19" pos:column="13"/></name></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">47<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="15">3<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="18">"got entries: "<pos:position pos:line="20" pos:column="33"/></literal> <operator pos:line="20" pos:column="34">&lt;&lt;<pos:position pos:line="20" pos:column="42"/></operator> <call><name><name pos:line="20" pos:column="37">entries<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">.<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="45">size<pos:position pos:line="20" pos:column="49"/></name></name><argument_list pos:line="20" pos:column="49">()<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3463_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">resume<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">()<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// go async to gain exception protection and done()-based job destruction</comment>
    <typedef pos:line="5" pos:column="5">typedef <type><name><name pos:line="5" pos:column="13">NullaryMemFunT<pos:position pos:line="5" pos:column="27"/></name><argument_list type="generic" pos:line="5" pos:column="27">&lt;<argument><expr><name><name pos:line="5" pos:column="28">Adaptation<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">::<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">Ecap<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">::<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">XactionRep<pos:position pos:line="5" pos:column="56"/></name></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="60"/></argument_list></name></type> <name pos:line="5" pos:column="58">Dialer<pos:position pos:line="5" pos:column="64"/></name>;<pos:position pos:line="5" pos:column="65"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">AsyncCall<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Pointer<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">call<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><call><name pos:line="6" pos:column="31">asyncCall<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><literal type="number" pos:line="6" pos:column="41">93<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="45">5<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="48">"Adaptation::Ecap::XactionRep::doResume"<pos:position pos:line="6" pos:column="88"/></literal></expr></argument>,
                                        <argument><expr><call><name pos:line="7" pos:column="41">Dialer<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">(<argument><expr><name pos:line="7" pos:column="48">this<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="54">&amp;<pos:position pos:line="7" pos:column="59"/></operator><name><name pos:line="7" pos:column="55">Adaptation<pos:position pos:line="7" pos:column="65"/></name><operator pos:line="7" pos:column="65">::<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="67">Ecap<pos:position pos:line="7" pos:column="71"/></name><operator pos:line="7" pos:column="71">::<pos:position pos:line="7" pos:column="73"/></operator><name pos:line="7" pos:column="73">XactionRep<pos:position pos:line="7" pos:column="83"/></name><operator pos:line="7" pos:column="83">::<pos:position pos:line="7" pos:column="85"/></operator><name pos:line="7" pos:column="85">doResume<pos:position pos:line="7" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="96"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ScheduleCallHere<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">call<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

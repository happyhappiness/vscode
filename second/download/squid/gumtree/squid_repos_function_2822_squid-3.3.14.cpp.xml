<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2822_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">wccp2HandleUdp<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">sock<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">not_used<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">wccp2_service_list_t<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">service_list_ptr<pos:position pos:line="5" pos:column="50"/></name></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">wccp2_router_list_t<pos:position pos:line="7" pos:column="31"/></name></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">router_list_ptr<pos:position pos:line="7" pos:column="48"/></name></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">wccp2_cache_list_t<pos:position pos:line="9" pos:column="30"/></name></name> <modifier pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></modifier></type><name pos:line="9" pos:column="32">cache_list_ptr<pos:position pos:line="9" pos:column="46"/></name></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">wccp2_cache_list_t<pos:position pos:line="11" pos:column="30"/></name></name> <modifier pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></modifier></type><name pos:line="11" pos:column="32">cache_list_ptr_next<pos:position pos:line="11" pos:column="51"/></name></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* These structs form the parts of the packet */</comment>

    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">struct<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">wccp2_item_header_t<pos:position pos:line="15" pos:column="31"/></name></name> <modifier pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></modifier></type><name pos:line="15" pos:column="33">header<pos:position pos:line="15" pos:column="39"/></name> <init pos:line="15" pos:column="40">= <expr><name pos:line="15" pos:column="42">NULL<pos:position pos:line="15" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">struct<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">wccp2_security_none_t<pos:position pos:line="17" pos:column="33"/></name></name> <modifier pos:line="17" pos:column="34">*<pos:position pos:line="17" pos:column="35"/></modifier></type><name pos:line="17" pos:column="35">security_info<pos:position pos:line="17" pos:column="48"/></name> <init pos:line="17" pos:column="49">= <expr><name pos:line="17" pos:column="51">NULL<pos:position pos:line="17" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">struct<pos:position pos:line="19" pos:column="11"/></name> <name pos:line="19" pos:column="12">wccp2_service_info_t<pos:position pos:line="19" pos:column="32"/></name></name> <modifier pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></modifier></type><name pos:line="19" pos:column="34">service_info<pos:position pos:line="19" pos:column="46"/></name> <init pos:line="19" pos:column="47">= <expr><name pos:line="19" pos:column="49">NULL<pos:position pos:line="19" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="54"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">struct<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">router_identity_info_t<pos:position pos:line="21" pos:column="34"/></name></name> <modifier pos:line="21" pos:column="35">*<pos:position pos:line="21" pos:column="36"/></modifier></type><name pos:line="21" pos:column="36">router_identity_info<pos:position pos:line="21" pos:column="56"/></name> <init pos:line="21" pos:column="57">= <expr><name pos:line="21" pos:column="59">NULL<pos:position pos:line="21" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="64"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="23" pos:column="5">struct<pos:position pos:line="23" pos:column="11"/></name> <name pos:line="23" pos:column="12">router_view_t<pos:position pos:line="23" pos:column="25"/></name></name> <modifier pos:line="23" pos:column="26">*<pos:position pos:line="23" pos:column="27"/></modifier></type><name pos:line="23" pos:column="27">router_view_header<pos:position pos:line="23" pos:column="45"/></name> <init pos:line="23" pos:column="46">= <expr><name pos:line="23" pos:column="48">NULL<pos:position pos:line="23" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="53"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="25" pos:column="5">struct<pos:position pos:line="25" pos:column="11"/></name> <name pos:line="25" pos:column="12">wccp2_cache_mask_identity_info_t<pos:position pos:line="25" pos:column="44"/></name></name> <modifier pos:line="25" pos:column="45">*<pos:position pos:line="25" pos:column="46"/></modifier></type><name pos:line="25" pos:column="46">cache_mask_identity<pos:position pos:line="25" pos:column="65"/></name> <init pos:line="25" pos:column="66">= <expr><name pos:line="25" pos:column="68">NULL<pos:position pos:line="25" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="73"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="27" pos:column="5">struct<pos:position pos:line="27" pos:column="11"/></name> <name pos:line="27" pos:column="12">cache_mask_info_t<pos:position pos:line="27" pos:column="29"/></name></name> <modifier pos:line="27" pos:column="30">*<pos:position pos:line="27" pos:column="31"/></modifier></type><name pos:line="27" pos:column="31">cache_mask_info<pos:position pos:line="27" pos:column="46"/></name> <init pos:line="27" pos:column="47">= <expr><name pos:line="27" pos:column="49">NULL<pos:position pos:line="27" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="54"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">struct<pos:position pos:line="29" pos:column="11"/></name> <name pos:line="29" pos:column="12">wccp2_cache_identity_info_t<pos:position pos:line="29" pos:column="39"/></name></name> <modifier pos:line="29" pos:column="40">*<pos:position pos:line="29" pos:column="41"/></modifier></type><name pos:line="29" pos:column="41">cache_identity<pos:position pos:line="29" pos:column="55"/></name> <init pos:line="29" pos:column="56">= <expr><name pos:line="29" pos:column="58">NULL<pos:position pos:line="29" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="63"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">struct<pos:position pos:line="31" pos:column="11"/></name> <name pos:line="31" pos:column="12">wccp2_capability_info_header_t<pos:position pos:line="31" pos:column="42"/></name></name> <modifier pos:line="31" pos:column="43">*<pos:position pos:line="31" pos:column="44"/></modifier></type><name pos:line="31" pos:column="44">router_capability_header<pos:position pos:line="31" pos:column="68"/></name> <init pos:line="31" pos:column="69">= <expr><name pos:line="31" pos:column="71">NULL<pos:position pos:line="31" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="76"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="33" pos:column="5">struct<pos:position pos:line="33" pos:column="11"/></name> <name pos:line="33" pos:column="12">wccp2_capability_element_t<pos:position pos:line="33" pos:column="38"/></name></name> <modifier pos:line="33" pos:column="39">*<pos:position pos:line="33" pos:column="40"/></modifier></type><name pos:line="33" pos:column="40">router_capability_element<pos:position pos:line="33" pos:column="65"/></name></decl>;<pos:position pos:line="33" pos:column="66"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">struct<pos:position pos:line="35" pos:column="11"/></name> <name pos:line="35" pos:column="12">sockaddr_in<pos:position pos:line="35" pos:column="23"/></name></name></type> <name pos:line="35" pos:column="24">from<pos:position pos:line="35" pos:column="28"/></name></decl>;<pos:position pos:line="35" pos:column="29"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="37" pos:column="5">struct<pos:position pos:line="37" pos:column="11"/></name> <name pos:line="37" pos:column="12">in_addr<pos:position pos:line="37" pos:column="19"/></name></name></type> <name pos:line="37" pos:column="20">cache_address<pos:position pos:line="37" pos:column="33"/></name></decl>;<pos:position pos:line="37" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">int<pos:position pos:line="38" pos:column="8"/></name></type> <name pos:line="38" pos:column="9">len<pos:position pos:line="38" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="38" pos:column="14">found<pos:position pos:line="38" pos:column="19"/></name></decl>;<pos:position pos:line="38" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">short<pos:position pos:line="39" pos:column="10"/></name> <name pos:line="39" pos:column="11">int<pos:position pos:line="39" pos:column="14"/></name></type> <name pos:line="39" pos:column="15">data_length<pos:position pos:line="39" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="39" pos:column="28">offset<pos:position pos:line="39" pos:column="34"/></name></decl>;<pos:position pos:line="39" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">uint32_t<pos:position pos:line="40" pos:column="13"/></name></type> <name pos:line="40" pos:column="14">tmp<pos:position pos:line="40" pos:column="17"/></name></decl>;<pos:position pos:line="40" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">char<pos:position pos:line="41" pos:column="9"/></name> <modifier pos:line="41" pos:column="10">*<pos:position pos:line="41" pos:column="11"/></modifier></type><name pos:line="41" pos:column="11">ptr<pos:position pos:line="41" pos:column="14"/></name></decl>;<pos:position pos:line="41" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">int<pos:position pos:line="42" pos:column="8"/></name></type> <name pos:line="42" pos:column="9">num_caches<pos:position pos:line="42" pos:column="19"/></name></decl>;<pos:position pos:line="42" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">debugs<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><literal type="number" pos:line="44" pos:column="12">80<pos:position pos:line="44" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="16">6<pos:position pos:line="44" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="19">"wccp2HandleUdp: Called."<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="46" pos:column="5">Comm<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">::<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">SetSelect<pos:position pos:line="46" pos:column="20"/></name></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">sock<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">COMM_SELECT_READ<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">wccp2HandleUdp<pos:position pos:line="46" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="61">NULL<pos:position pos:line="46" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="67">0<pos:position pos:line="46" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="70"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* FIXME INET6 : drop conversion boundary */</comment>
    <decl_stmt><decl><type><name><name pos:line="49" pos:column="5">Ip<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">::<pos:position pos:line="49" pos:column="9"/></operator><name pos:line="49" pos:column="9">Address<pos:position pos:line="49" pos:column="16"/></name></name></type> <name pos:line="49" pos:column="17">from_tmp<pos:position pos:line="49" pos:column="25"/></name></decl>;<pos:position pos:line="49" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="51" pos:column="5">len<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <call><name pos:line="51" pos:column="11">comm_udp_recvfrom<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">sock<pos:position pos:line="51" pos:column="33"/></name></expr></argument>,
                            <argument><expr><operator pos:line="52" pos:column="29">&amp;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="30">wccp2_i_see_you<pos:position pos:line="52" pos:column="45"/></name></expr></argument>,
                            <argument><expr><name pos:line="53" pos:column="29">WCCP_RESPONSE_SIZE<pos:position pos:line="53" pos:column="47"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="54" pos:column="29">0<pos:position pos:line="54" pos:column="30"/></literal></expr></argument>,
                            <argument><expr><name pos:line="55" pos:column="29">from_tmp<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
    <comment type="block" pos:line="56" pos:column="5">/* FIXME INET6 : drop conversion boundary */</comment>
    <expr_stmt><expr><call><name><name pos:line="57" pos:column="5">from_tmp<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">.<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">GetSockAddr<pos:position pos:line="57" pos:column="25"/></name></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">from<pos:position pos:line="57" pos:column="30"/></name></expr></argument>)<pos:position pos:line="57" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">len<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">&lt;<pos:position pos:line="59" pos:column="17"/></operator> <literal type="number" pos:line="59" pos:column="15">0<pos:position pos:line="59" pos:column="16"/></literal></expr>)<pos:position pos:line="59" pos:column="17"/></condition><then pos:line="59" pos:column="17">
        <block type="pseudo"><return pos:line="60" pos:column="9">return;<pos:position pos:line="60" pos:column="16"/></return></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><call><name pos:line="62" pos:column="9">ntohs<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name><name pos:line="62" pos:column="15">wccp2_i_see_you<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">.<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">version<pos:position pos:line="62" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call> <operator pos:line="62" pos:column="40">!=<pos:position pos:line="62" pos:column="42"/></operator> <name pos:line="62" pos:column="43">WCCP2_VERSION<pos:position pos:line="62" pos:column="56"/></name></expr>)<pos:position pos:line="62" pos:column="57"/></condition><then pos:line="62" pos:column="57">
        <block type="pseudo"><return pos:line="63" pos:column="9">return;<pos:position pos:line="63" pos:column="16"/></return></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><call><name pos:line="65" pos:column="9">ntohl<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><name><name pos:line="65" pos:column="15">wccp2_i_see_you<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">.<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">type<pos:position pos:line="65" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call> <operator pos:line="65" pos:column="37">!=<pos:position pos:line="65" pos:column="39"/></operator> <name pos:line="65" pos:column="40">WCCP2_I_SEE_YOU<pos:position pos:line="65" pos:column="55"/></name></expr>)<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56">
        <block type="pseudo"><return pos:line="66" pos:column="9">return;<pos:position pos:line="66" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="68" pos:column="5">debugs<pos:position pos:line="68" pos:column="11"/></name><argument_list pos:line="68" pos:column="11">(<argument><expr><literal type="number" pos:line="68" pos:column="12">80<pos:position pos:line="68" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="16">3<pos:position pos:line="68" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="19">"Incoming WCCPv2 I_SEE_YOU length "<pos:position pos:line="68" pos:column="54"/></literal> <operator pos:line="68" pos:column="55">&lt;&lt;<pos:position pos:line="68" pos:column="63"/></operator> <call><name pos:line="68" pos:column="58">ntohs<pos:position pos:line="68" pos:column="63"/></name><argument_list pos:line="68" pos:column="63">(<argument><expr><name><name pos:line="68" pos:column="64">wccp2_i_see_you<pos:position pos:line="68" pos:column="79"/></name><operator pos:line="68" pos:column="79">.<pos:position pos:line="68" pos:column="80"/></operator><name pos:line="68" pos:column="80">length<pos:position pos:line="68" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="87"/></argument_list></call> <operator pos:line="68" pos:column="88">&lt;&lt;<pos:position pos:line="68" pos:column="96"/></operator> <literal type="string" pos:line="68" pos:column="91">"."<pos:position pos:line="68" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="96"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* Record the total data length */</comment>
    <expr_stmt><expr><name pos:line="71" pos:column="5">data_length<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <call><name pos:line="71" pos:column="19">ntohs<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name><name pos:line="71" pos:column="25">wccp2_i_see_you<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">.<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="41">length<pos:position pos:line="71" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name pos:line="73" pos:column="5">offset<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <literal type="number" pos:line="73" pos:column="14">0<pos:position pos:line="73" pos:column="15"/></literal></expr>;<pos:position pos:line="73" pos:column="16"/></expr_stmt>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">data_length<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">&gt;<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="23">len<pos:position pos:line="75" pos:column="26"/></name></expr>)<pos:position pos:line="75" pos:column="27"/></condition><then pos:line="75" pos:column="27"> <block pos:line="75" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">debugs<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="number" pos:line="76" pos:column="16">80<pos:position pos:line="76" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="20">DBG_IMPORTANT<pos:position pos:line="76" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="35">"ERROR: Malformed WCCPv2 packet claiming it's bigger than received data"<pos:position pos:line="76" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="109"/></expr_stmt>
        <return pos:line="77" pos:column="9">return;<pos:position pos:line="77" pos:column="16"/></return>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="80" pos:column="5">/* Go through the data structure */</comment>
    <while pos:line="81" pos:column="5">while <condition pos:line="81" pos:column="11">(<expr><name pos:line="81" pos:column="12">data_length<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">&gt;<pos:position pos:line="81" pos:column="28"/></operator> <name pos:line="81" pos:column="26">offset<pos:position pos:line="81" pos:column="32"/></name></expr>)<pos:position pos:line="81" pos:column="33"/></condition> <block pos:line="81" pos:column="34">{

        <decl_stmt><decl><type><name pos:line="83" pos:column="9">char<pos:position pos:line="83" pos:column="13"/></name> <modifier pos:line="83" pos:column="14">*<pos:position pos:line="83" pos:column="15"/></modifier></type><name pos:line="83" pos:column="15">data<pos:position pos:line="83" pos:column="19"/></name> <init pos:line="83" pos:column="20">= <expr><name><name pos:line="83" pos:column="22">wccp2_i_see_you<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">.<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="38">data<pos:position pos:line="83" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="83" pos:column="43"/></decl_stmt>

        <expr_stmt><expr><name pos:line="85" pos:column="9">header<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <operator pos:line="85" pos:column="18">(<pos:position pos:line="85" pos:column="19"/></operator>struct <name pos:line="85" pos:column="26">wccp2_item_header_t<pos:position pos:line="85" pos:column="45"/></name> <operator pos:line="85" pos:column="46">*<pos:position pos:line="85" pos:column="47"/></operator><operator pos:line="85" pos:column="47">)<pos:position pos:line="85" pos:column="48"/></operator> <operator pos:line="85" pos:column="49">&amp;<pos:position pos:line="85" pos:column="54"/></operator><name><name pos:line="85" pos:column="50">data<pos:position pos:line="85" pos:column="54"/></name><index pos:line="85" pos:column="54">[<expr><name pos:line="85" pos:column="55">offset<pos:position pos:line="85" pos:column="61"/></name></expr>]<pos:position pos:line="85" pos:column="62"/></index></name></expr>;<pos:position pos:line="85" pos:column="63"/></expr_stmt>

        <switch pos:line="87" pos:column="9">switch <condition pos:line="87" pos:column="16">(<expr><call><name pos:line="87" pos:column="17">ntohs<pos:position pos:line="87" pos:column="22"/></name><argument_list pos:line="87" pos:column="22">(<argument><expr><name><name pos:line="87" pos:column="23">header<pos:position pos:line="87" pos:column="29"/></name><operator pos:line="87" pos:column="29">-&gt;<pos:position pos:line="87" pos:column="34"/></operator><name pos:line="87" pos:column="31">type<pos:position pos:line="87" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="37"/></condition> <block pos:line="87" pos:column="38">{

        <case pos:line="89" pos:column="9">case <expr><name pos:line="89" pos:column="14">WCCP2_SECURITY_INFO<pos:position pos:line="89" pos:column="33"/></name></expr>:<pos:position pos:line="89" pos:column="34"/></case>

            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><name pos:line="91" pos:column="17">security_info<pos:position pos:line="91" pos:column="30"/></name> <operator pos:line="91" pos:column="31">!=<pos:position pos:line="91" pos:column="33"/></operator> <name pos:line="91" pos:column="34">NULL<pos:position pos:line="91" pos:column="38"/></name></expr>)<pos:position pos:line="91" pos:column="39"/></condition><then pos:line="91" pos:column="39"> <block pos:line="91" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="92" pos:column="17">debugs<pos:position pos:line="92" pos:column="23"/></name><argument_list pos:line="92" pos:column="23">(<argument><expr><literal type="number" pos:line="92" pos:column="24">80<pos:position pos:line="92" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="28">DBG_IMPORTANT<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="43">"Duplicate security definition"<pos:position pos:line="92" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></expr_stmt>
                <return pos:line="93" pos:column="17">return;<pos:position pos:line="93" pos:column="24"/></return>
            }<pos:position pos:line="94" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="96" pos:column="13">security_info<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">=<pos:position pos:line="96" pos:column="28"/></operator> <operator pos:line="96" pos:column="29">(<pos:position pos:line="96" pos:column="30"/></operator>struct <name pos:line="96" pos:column="37">wccp2_security_none_t<pos:position pos:line="96" pos:column="58"/></name> <operator pos:line="96" pos:column="59">*<pos:position pos:line="96" pos:column="60"/></operator><operator pos:line="96" pos:column="60">)<pos:position pos:line="96" pos:column="61"/></operator> <operator pos:line="96" pos:column="62">&amp;<pos:position pos:line="96" pos:column="67"/></operator><name><name pos:line="96" pos:column="63">wccp2_i_see_you<pos:position pos:line="96" pos:column="78"/></name><operator pos:line="96" pos:column="78">.<pos:position pos:line="96" pos:column="79"/></operator><name pos:line="96" pos:column="79">data<pos:position pos:line="96" pos:column="83"/></name><index pos:line="96" pos:column="83">[<expr><name pos:line="96" pos:column="84">offset<pos:position pos:line="96" pos:column="90"/></name></expr>]<pos:position pos:line="96" pos:column="91"/></index></name></expr>;<pos:position pos:line="96" pos:column="92"/></expr_stmt>
            <break pos:line="97" pos:column="13">break;<pos:position pos:line="97" pos:column="19"/></break>

        <case pos:line="99" pos:column="9">case <expr><name pos:line="99" pos:column="14">WCCP2_SERVICE_INFO<pos:position pos:line="99" pos:column="32"/></name></expr>:<pos:position pos:line="99" pos:column="33"/></case>

            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name pos:line="101" pos:column="17">service_info<pos:position pos:line="101" pos:column="29"/></name> <operator pos:line="101" pos:column="30">!=<pos:position pos:line="101" pos:column="32"/></operator> <name pos:line="101" pos:column="33">NULL<pos:position pos:line="101" pos:column="37"/></name></expr>)<pos:position pos:line="101" pos:column="38"/></condition><then pos:line="101" pos:column="38"> <block pos:line="101" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="102" pos:column="17">debugs<pos:position pos:line="102" pos:column="23"/></name><argument_list pos:line="102" pos:column="23">(<argument><expr><literal type="number" pos:line="102" pos:column="24">80<pos:position pos:line="102" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="28">DBG_IMPORTANT<pos:position pos:line="102" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="43">"Duplicate service_info definition"<pos:position pos:line="102" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="80"/></expr_stmt>
                <return pos:line="103" pos:column="17">return;<pos:position pos:line="103" pos:column="24"/></return>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="106" pos:column="13">service_info<pos:position pos:line="106" pos:column="25"/></name> <operator pos:line="106" pos:column="26">=<pos:position pos:line="106" pos:column="27"/></operator> <operator pos:line="106" pos:column="28">(<pos:position pos:line="106" pos:column="29"/></operator>struct <name pos:line="106" pos:column="36">wccp2_service_info_t<pos:position pos:line="106" pos:column="56"/></name> <operator pos:line="106" pos:column="57">*<pos:position pos:line="106" pos:column="58"/></operator><operator pos:line="106" pos:column="58">)<pos:position pos:line="106" pos:column="59"/></operator> <operator pos:line="106" pos:column="60">&amp;<pos:position pos:line="106" pos:column="65"/></operator><name><name pos:line="106" pos:column="61">wccp2_i_see_you<pos:position pos:line="106" pos:column="76"/></name><operator pos:line="106" pos:column="76">.<pos:position pos:line="106" pos:column="77"/></operator><name pos:line="106" pos:column="77">data<pos:position pos:line="106" pos:column="81"/></name><index pos:line="106" pos:column="81">[<expr><name pos:line="106" pos:column="82">offset<pos:position pos:line="106" pos:column="88"/></name></expr>]<pos:position pos:line="106" pos:column="89"/></index></name></expr>;<pos:position pos:line="106" pos:column="90"/></expr_stmt>
            <break pos:line="107" pos:column="13">break;<pos:position pos:line="107" pos:column="19"/></break>

        <case pos:line="109" pos:column="9">case <expr><name pos:line="109" pos:column="14">WCCP2_ROUTER_ID_INFO<pos:position pos:line="109" pos:column="34"/></name></expr>:<pos:position pos:line="109" pos:column="35"/></case>

            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">router_identity_info<pos:position pos:line="111" pos:column="37"/></name> <operator pos:line="111" pos:column="38">!=<pos:position pos:line="111" pos:column="40"/></operator> <name pos:line="111" pos:column="41">NULL<pos:position pos:line="111" pos:column="45"/></name></expr>)<pos:position pos:line="111" pos:column="46"/></condition><then pos:line="111" pos:column="46"> <block pos:line="111" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="112" pos:column="17">debugs<pos:position pos:line="112" pos:column="23"/></name><argument_list pos:line="112" pos:column="23">(<argument><expr><literal type="number" pos:line="112" pos:column="24">80<pos:position pos:line="112" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="28">DBG_IMPORTANT<pos:position pos:line="112" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="43">"Duplicate router_identity_info definition"<pos:position pos:line="112" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="88"/></expr_stmt>
                <return pos:line="113" pos:column="17">return;<pos:position pos:line="113" pos:column="24"/></return>
            }<pos:position pos:line="114" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="116" pos:column="13">router_identity_info<pos:position pos:line="116" pos:column="33"/></name> <operator pos:line="116" pos:column="34">=<pos:position pos:line="116" pos:column="35"/></operator> <operator pos:line="116" pos:column="36">(<pos:position pos:line="116" pos:column="37"/></operator>struct <name pos:line="116" pos:column="44">router_identity_info_t<pos:position pos:line="116" pos:column="66"/></name> <operator pos:line="116" pos:column="67">*<pos:position pos:line="116" pos:column="68"/></operator><operator pos:line="116" pos:column="68">)<pos:position pos:line="116" pos:column="69"/></operator> <operator pos:line="116" pos:column="70">&amp;<pos:position pos:line="116" pos:column="75"/></operator><name><name pos:line="116" pos:column="71">wccp2_i_see_you<pos:position pos:line="116" pos:column="86"/></name><operator pos:line="116" pos:column="86">.<pos:position pos:line="116" pos:column="87"/></operator><name pos:line="116" pos:column="87">data<pos:position pos:line="116" pos:column="91"/></name><index pos:line="116" pos:column="91">[<expr><name pos:line="116" pos:column="92">offset<pos:position pos:line="116" pos:column="98"/></name></expr>]<pos:position pos:line="116" pos:column="99"/></index></name></expr>;<pos:position pos:line="116" pos:column="100"/></expr_stmt>
            <break pos:line="117" pos:column="13">break;<pos:position pos:line="117" pos:column="19"/></break>

        <case pos:line="119" pos:column="9">case <expr><name pos:line="119" pos:column="14">WCCP2_RTR_VIEW_INFO<pos:position pos:line="119" pos:column="33"/></name></expr>:<pos:position pos:line="119" pos:column="34"/></case>

            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><name pos:line="121" pos:column="17">router_view_header<pos:position pos:line="121" pos:column="35"/></name> <operator pos:line="121" pos:column="36">!=<pos:position pos:line="121" pos:column="38"/></operator> <name pos:line="121" pos:column="39">NULL<pos:position pos:line="121" pos:column="43"/></name></expr>)<pos:position pos:line="121" pos:column="44"/></condition><then pos:line="121" pos:column="44"> <block pos:line="121" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="122" pos:column="17">debugs<pos:position pos:line="122" pos:column="23"/></name><argument_list pos:line="122" pos:column="23">(<argument><expr><literal type="number" pos:line="122" pos:column="24">80<pos:position pos:line="122" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="28">DBG_IMPORTANT<pos:position pos:line="122" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="43">"Duplicate router_view definition"<pos:position pos:line="122" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="79"/></expr_stmt>
                <return pos:line="123" pos:column="17">return;<pos:position pos:line="123" pos:column="24"/></return>
            }<pos:position pos:line="124" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="126" pos:column="13">router_view_header<pos:position pos:line="126" pos:column="31"/></name> <operator pos:line="126" pos:column="32">=<pos:position pos:line="126" pos:column="33"/></operator> <operator pos:line="126" pos:column="34">(<pos:position pos:line="126" pos:column="35"/></operator>struct <name pos:line="126" pos:column="42">router_view_t<pos:position pos:line="126" pos:column="55"/></name> <operator pos:line="126" pos:column="56">*<pos:position pos:line="126" pos:column="57"/></operator><operator pos:line="126" pos:column="57">)<pos:position pos:line="126" pos:column="58"/></operator> <operator pos:line="126" pos:column="59">&amp;<pos:position pos:line="126" pos:column="64"/></operator><name><name pos:line="126" pos:column="60">wccp2_i_see_you<pos:position pos:line="126" pos:column="75"/></name><operator pos:line="126" pos:column="75">.<pos:position pos:line="126" pos:column="76"/></operator><name pos:line="126" pos:column="76">data<pos:position pos:line="126" pos:column="80"/></name><index pos:line="126" pos:column="80">[<expr><name pos:line="126" pos:column="81">offset<pos:position pos:line="126" pos:column="87"/></name></expr>]<pos:position pos:line="126" pos:column="88"/></index></name></expr>;<pos:position pos:line="126" pos:column="89"/></expr_stmt>
            <break pos:line="127" pos:column="13">break;<pos:position pos:line="127" pos:column="19"/></break>

        <case pos:line="129" pos:column="9">case <expr><name pos:line="129" pos:column="14">WCCP2_CAPABILITY_INFO<pos:position pos:line="129" pos:column="35"/></name></expr>:<pos:position pos:line="129" pos:column="36"/></case>

            <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><name pos:line="131" pos:column="17">router_capability_header<pos:position pos:line="131" pos:column="41"/></name> <operator pos:line="131" pos:column="42">!=<pos:position pos:line="131" pos:column="44"/></operator> <name pos:line="131" pos:column="45">NULL<pos:position pos:line="131" pos:column="49"/></name></expr>)<pos:position pos:line="131" pos:column="50"/></condition><then pos:line="131" pos:column="50"> <block pos:line="131" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="132" pos:column="17">debugs<pos:position pos:line="132" pos:column="23"/></name><argument_list pos:line="132" pos:column="23">(<argument><expr><literal type="number" pos:line="132" pos:column="24">80<pos:position pos:line="132" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="28">DBG_IMPORTANT<pos:position pos:line="132" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="43">"Duplicate router_capability definition"<pos:position pos:line="132" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="85"/></expr_stmt>
                <return pos:line="133" pos:column="17">return;<pos:position pos:line="133" pos:column="24"/></return>
            }<pos:position pos:line="134" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="136" pos:column="13">router_capability_header<pos:position pos:line="136" pos:column="37"/></name> <operator pos:line="136" pos:column="38">=<pos:position pos:line="136" pos:column="39"/></operator> <operator pos:line="136" pos:column="40">(<pos:position pos:line="136" pos:column="41"/></operator>struct <name pos:line="136" pos:column="48">wccp2_capability_info_header_t<pos:position pos:line="136" pos:column="78"/></name> <operator pos:line="136" pos:column="79">*<pos:position pos:line="136" pos:column="80"/></operator><operator pos:line="136" pos:column="80">)<pos:position pos:line="136" pos:column="81"/></operator> <operator pos:line="136" pos:column="82">&amp;<pos:position pos:line="136" pos:column="87"/></operator><name><name pos:line="136" pos:column="83">wccp2_i_see_you<pos:position pos:line="136" pos:column="98"/></name><operator pos:line="136" pos:column="98">.<pos:position pos:line="136" pos:column="99"/></operator><name pos:line="136" pos:column="99">data<pos:position pos:line="136" pos:column="103"/></name><index pos:line="136" pos:column="103">[<expr><name pos:line="136" pos:column="104">offset<pos:position pos:line="136" pos:column="110"/></name></expr>]<pos:position pos:line="136" pos:column="111"/></index></name></expr>;<pos:position pos:line="136" pos:column="112"/></expr_stmt>
            <break pos:line="137" pos:column="13">break;<pos:position pos:line="137" pos:column="19"/></break>

            <comment type="block" pos:line="139" pos:column="13">/* Nothing to do for the types below */</comment>

        <case pos:line="141" pos:column="9">case <expr><name pos:line="141" pos:column="14">WCCP2_ASSIGN_MAP<pos:position pos:line="141" pos:column="30"/></name></expr>:<pos:position pos:line="141" pos:column="31"/></case>
        <case pos:line="142" pos:column="9">case <expr><name pos:line="142" pos:column="14">WCCP2_REDIRECT_ASSIGNMENT<pos:position pos:line="142" pos:column="39"/></name></expr>:<pos:position pos:line="142" pos:column="40"/></case>
            <break pos:line="143" pos:column="13">break;<pos:position pos:line="143" pos:column="19"/></break>

        <default pos:line="145" pos:column="9">default:<pos:position pos:line="145" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">debugs<pos:position pos:line="146" pos:column="19"/></name><argument_list pos:line="146" pos:column="19">(<argument><expr><literal type="number" pos:line="146" pos:column="20">80<pos:position pos:line="146" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="24">DBG_IMPORTANT<pos:position pos:line="146" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="39">"Unknown record type in WCCPv2 Packet ("<pos:position pos:line="146" pos:column="79"/></literal> <operator pos:line="146" pos:column="80">&lt;&lt;<pos:position pos:line="146" pos:column="88"/></operator> <call><name pos:line="146" pos:column="83">ntohs<pos:position pos:line="146" pos:column="88"/></name><argument_list pos:line="146" pos:column="88">(<argument><expr><name><name pos:line="146" pos:column="89">header<pos:position pos:line="146" pos:column="95"/></name><operator pos:line="146" pos:column="95">-&gt;<pos:position pos:line="146" pos:column="100"/></operator><name pos:line="146" pos:column="97">type<pos:position pos:line="146" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="102"/></argument_list></call> <operator pos:line="146" pos:column="103">&lt;&lt;<pos:position pos:line="146" pos:column="111"/></operator> <literal type="string" pos:line="146" pos:column="106">")."<pos:position pos:line="146" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="112"/></expr_stmt>
        }<pos:position pos:line="147" pos:column="10"/></block></switch>

        <expr_stmt><expr><name pos:line="149" pos:column="9">offset<pos:position pos:line="149" pos:column="15"/></name> <operator pos:line="149" pos:column="16">+=<pos:position pos:line="149" pos:column="18"/></operator> <sizeof pos:line="149" pos:column="19">sizeof<argument_list pos:line="149" pos:column="25">(<argument><expr pos:line="149" pos:column="26">struct <name pos:line="149" pos:column="33">wccp2_item_header_t<pos:position pos:line="149" pos:column="52"/></name></expr></argument>)<pos:position pos:line="149" pos:column="53"/></argument_list></sizeof></expr>;<pos:position pos:line="149" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="150" pos:column="9">offset<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">+=<pos:position pos:line="150" pos:column="18"/></operator> <call><name pos:line="150" pos:column="19">ntohs<pos:position pos:line="150" pos:column="24"/></name><argument_list pos:line="150" pos:column="24">(<argument><expr><name><name pos:line="150" pos:column="25">header<pos:position pos:line="150" pos:column="31"/></name><operator pos:line="150" pos:column="31">-&gt;<pos:position pos:line="150" pos:column="36"/></operator><name pos:line="150" pos:column="33">length<pos:position pos:line="150" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="41"/></expr_stmt>

        <if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><name pos:line="152" pos:column="13">offset<pos:position pos:line="152" pos:column="19"/></name> <operator pos:line="152" pos:column="20">&gt;<pos:position pos:line="152" pos:column="24"/></operator> <name pos:line="152" pos:column="22">data_length<pos:position pos:line="152" pos:column="33"/></name></expr>)<pos:position pos:line="152" pos:column="34"/></condition><then pos:line="152" pos:column="34"> <block pos:line="152" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">debugs<pos:position pos:line="153" pos:column="19"/></name><argument_list pos:line="153" pos:column="19">(<argument><expr><literal type="number" pos:line="153" pos:column="20">80<pos:position pos:line="153" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="24">DBG_IMPORTANT<pos:position pos:line="153" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="39">"Error: WCCPv2 packet tried to tell us there is data beyond the end of the packet"<pos:position pos:line="153" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="123"/></expr_stmt>
            <return pos:line="154" pos:column="13">return;<pos:position pos:line="154" pos:column="20"/></return>
        }<pos:position pos:line="155" pos:column="10"/></block></then></if>
    }<pos:position pos:line="156" pos:column="6"/></block></while>

    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><operator pos:line="158" pos:column="9">(<pos:position pos:line="158" pos:column="10"/></operator><name pos:line="158" pos:column="10">security_info<pos:position pos:line="158" pos:column="23"/></name> <operator pos:line="158" pos:column="24">==<pos:position pos:line="158" pos:column="26"/></operator> <name pos:line="158" pos:column="27">NULL<pos:position pos:line="158" pos:column="31"/></name><operator pos:line="158" pos:column="31">)<pos:position pos:line="158" pos:column="32"/></operator> <operator pos:line="158" pos:column="33">||<pos:position pos:line="158" pos:column="35"/></operator> <operator pos:line="158" pos:column="36">(<pos:position pos:line="158" pos:column="37"/></operator><name pos:line="158" pos:column="37">service_info<pos:position pos:line="158" pos:column="49"/></name> <operator pos:line="158" pos:column="50">==<pos:position pos:line="158" pos:column="52"/></operator> <name pos:line="158" pos:column="53">NULL<pos:position pos:line="158" pos:column="57"/></name><operator pos:line="158" pos:column="57">)<pos:position pos:line="158" pos:column="58"/></operator> <operator pos:line="158" pos:column="59">||<pos:position pos:line="158" pos:column="61"/></operator> <operator pos:line="158" pos:column="62">(<pos:position pos:line="158" pos:column="63"/></operator><name pos:line="158" pos:column="63">router_identity_info<pos:position pos:line="158" pos:column="83"/></name> <operator pos:line="158" pos:column="84">==<pos:position pos:line="158" pos:column="86"/></operator> <name pos:line="158" pos:column="87">NULL<pos:position pos:line="158" pos:column="91"/></name><operator pos:line="158" pos:column="91">)<pos:position pos:line="158" pos:column="92"/></operator> <operator pos:line="158" pos:column="93">||<pos:position pos:line="158" pos:column="95"/></operator> <operator pos:line="158" pos:column="96">(<pos:position pos:line="158" pos:column="97"/></operator><name pos:line="158" pos:column="97">router_view_header<pos:position pos:line="158" pos:column="115"/></name> <operator pos:line="158" pos:column="116">==<pos:position pos:line="158" pos:column="118"/></operator> <name pos:line="158" pos:column="119">NULL<pos:position pos:line="158" pos:column="123"/></name><operator pos:line="158" pos:column="123">)<pos:position pos:line="158" pos:column="124"/></operator></expr>)<pos:position pos:line="158" pos:column="125"/></condition><then pos:line="158" pos:column="125"> <block pos:line="158" pos:column="126">{
        <expr_stmt><expr><call><name pos:line="159" pos:column="9">debugs<pos:position pos:line="159" pos:column="15"/></name><argument_list pos:line="159" pos:column="15">(<argument><expr><literal type="number" pos:line="159" pos:column="16">80<pos:position pos:line="159" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="20">DBG_IMPORTANT<pos:position pos:line="159" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="35">"Incomplete WCCPv2 Packet"<pos:position pos:line="159" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="63"/></expr_stmt>
        <return pos:line="160" pos:column="9">return;<pos:position pos:line="160" pos:column="16"/></return>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="163" pos:column="5">debugs<pos:position pos:line="163" pos:column="11"/></name><argument_list pos:line="163" pos:column="11">(<argument><expr><literal type="number" pos:line="163" pos:column="12">80<pos:position pos:line="163" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="16">5<pos:position pos:line="163" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="19">"Complete packet received"<pos:position pos:line="163" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="165" pos:column="5">/* Check that the service in the packet is configured on this router */</comment>
    <expr_stmt><expr><name pos:line="166" pos:column="5">service_list_ptr<pos:position pos:line="166" pos:column="21"/></name> <operator pos:line="166" pos:column="22">=<pos:position pos:line="166" pos:column="23"/></operator> <name pos:line="166" pos:column="24">wccp2_service_list_head<pos:position pos:line="166" pos:column="47"/></name></expr>;<pos:position pos:line="166" pos:column="48"/></expr_stmt>

    <while pos:line="168" pos:column="5">while <condition pos:line="168" pos:column="11">(<expr><name pos:line="168" pos:column="12">service_list_ptr<pos:position pos:line="168" pos:column="28"/></name> <operator pos:line="168" pos:column="29">!=<pos:position pos:line="168" pos:column="31"/></operator> <name pos:line="168" pos:column="32">NULL<pos:position pos:line="168" pos:column="36"/></name></expr>)<pos:position pos:line="168" pos:column="37"/></condition> <block pos:line="168" pos:column="38">{
        <if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name><name pos:line="169" pos:column="13">service_info<pos:position pos:line="169" pos:column="25"/></name><operator pos:line="169" pos:column="25">-&gt;<pos:position pos:line="169" pos:column="30"/></operator><name pos:line="169" pos:column="27">service_id<pos:position pos:line="169" pos:column="37"/></name></name> <operator pos:line="169" pos:column="38">==<pos:position pos:line="169" pos:column="40"/></operator> <name><name pos:line="169" pos:column="41">service_list_ptr<pos:position pos:line="169" pos:column="57"/></name><operator pos:line="169" pos:column="57">-&gt;<pos:position pos:line="169" pos:column="62"/></operator><name pos:line="169" pos:column="59">service_info<pos:position pos:line="169" pos:column="71"/></name><operator pos:line="169" pos:column="71">-&gt;<pos:position pos:line="169" pos:column="76"/></operator><name pos:line="169" pos:column="73">service_id<pos:position pos:line="169" pos:column="83"/></name></name></expr>)<pos:position pos:line="169" pos:column="84"/></condition><then pos:line="169" pos:column="84"> <block pos:line="169" pos:column="85">{
            <break pos:line="170" pos:column="13">break;<pos:position pos:line="170" pos:column="19"/></break>
        }<pos:position pos:line="171" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="173" pos:column="9">service_list_ptr<pos:position pos:line="173" pos:column="25"/></name> <operator pos:line="173" pos:column="26">=<pos:position pos:line="173" pos:column="27"/></operator> <name><name pos:line="173" pos:column="28">service_list_ptr<pos:position pos:line="173" pos:column="44"/></name><operator pos:line="173" pos:column="44">-&gt;<pos:position pos:line="173" pos:column="49"/></operator><name pos:line="173" pos:column="46">next<pos:position pos:line="173" pos:column="50"/></name></name></expr>;<pos:position pos:line="173" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="174" pos:column="6"/></block></while>

    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><name pos:line="176" pos:column="9">service_list_ptr<pos:position pos:line="176" pos:column="25"/></name> <operator pos:line="176" pos:column="26">==<pos:position pos:line="176" pos:column="28"/></operator> <name pos:line="176" pos:column="29">NULL<pos:position pos:line="176" pos:column="33"/></name></expr>)<pos:position pos:line="176" pos:column="34"/></condition><then pos:line="176" pos:column="34"> <block pos:line="176" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="177" pos:column="9">debugs<pos:position pos:line="177" pos:column="15"/></name><argument_list pos:line="177" pos:column="15">(<argument><expr><literal type="number" pos:line="177" pos:column="16">80<pos:position pos:line="177" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="20">DBG_IMPORTANT<pos:position pos:line="177" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="35">"WCCPv2 Unknown service received from router ("<pos:position pos:line="177" pos:column="82"/></literal> <operator pos:line="177" pos:column="83">&lt;&lt;<pos:position pos:line="177" pos:column="91"/></operator> <name><name pos:line="177" pos:column="86">service_info<pos:position pos:line="177" pos:column="98"/></name><operator pos:line="177" pos:column="98">-&gt;<pos:position pos:line="177" pos:column="103"/></operator><name pos:line="177" pos:column="100">service_id<pos:position pos:line="177" pos:column="110"/></name></name> <operator pos:line="177" pos:column="111">&lt;&lt;<pos:position pos:line="177" pos:column="119"/></operator> <literal type="string" pos:line="177" pos:column="114">")"<pos:position pos:line="177" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="119"/></expr_stmt>
        <return pos:line="178" pos:column="9">return;<pos:position pos:line="178" pos:column="16"/></return>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if>

    <if pos:line="181" pos:column="5">if <condition pos:line="181" pos:column="8">(<expr><call><name pos:line="181" pos:column="9">ntohl<pos:position pos:line="181" pos:column="14"/></name><argument_list pos:line="181" pos:column="14">(<argument><expr><name><name pos:line="181" pos:column="15">security_info<pos:position pos:line="181" pos:column="28"/></name><operator pos:line="181" pos:column="28">-&gt;<pos:position pos:line="181" pos:column="33"/></operator><name pos:line="181" pos:column="30">security_option<pos:position pos:line="181" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="181" pos:column="46"/></argument_list></call> <operator pos:line="181" pos:column="47">!=<pos:position pos:line="181" pos:column="49"/></operator> <call><name pos:line="181" pos:column="50">ntohl<pos:position pos:line="181" pos:column="55"/></name><argument_list pos:line="181" pos:column="55">(<argument><expr><name><name pos:line="181" pos:column="56">service_list_ptr<pos:position pos:line="181" pos:column="72"/></name><operator pos:line="181" pos:column="72">-&gt;<pos:position pos:line="181" pos:column="77"/></operator><name pos:line="181" pos:column="74">security_info<pos:position pos:line="181" pos:column="87"/></name><operator pos:line="181" pos:column="87">-&gt;<pos:position pos:line="181" pos:column="92"/></operator><name pos:line="181" pos:column="89">security_option<pos:position pos:line="181" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="181" pos:column="105"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="106"/></condition><then pos:line="181" pos:column="106"> <block pos:line="181" pos:column="107">{
        <expr_stmt><expr><call><name pos:line="182" pos:column="9">debugs<pos:position pos:line="182" pos:column="15"/></name><argument_list pos:line="182" pos:column="15">(<argument><expr><literal type="number" pos:line="182" pos:column="16">80<pos:position pos:line="182" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="20">DBG_IMPORTANT<pos:position pos:line="182" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="35">"Invalid security option in WCCPv2 Packet ("<pos:position pos:line="182" pos:column="79"/></literal> <operator pos:line="182" pos:column="80">&lt;&lt;<pos:position pos:line="182" pos:column="88"/></operator> <call><name pos:line="182" pos:column="83">ntohl<pos:position pos:line="182" pos:column="88"/></name><argument_list pos:line="182" pos:column="88">(<argument><expr><name><name pos:line="182" pos:column="89">security_info<pos:position pos:line="182" pos:column="102"/></name><operator pos:line="182" pos:column="102">-&gt;<pos:position pos:line="182" pos:column="107"/></operator><name pos:line="182" pos:column="104">security_option<pos:position pos:line="182" pos:column="119"/></name></name></expr></argument>)<pos:position pos:line="182" pos:column="120"/></argument_list></call> <operator pos:line="182" pos:column="121">&lt;&lt;<pos:position pos:line="182" pos:column="129"/></operator> <literal type="string" pos:line="182" pos:column="124">" vs "<pos:position pos:line="182" pos:column="130"/></literal> <operator pos:line="182" pos:column="131">&lt;&lt;<pos:position pos:line="182" pos:column="139"/></operator> <call><name pos:line="182" pos:column="134">ntohl<pos:position pos:line="182" pos:column="139"/></name><argument_list pos:line="182" pos:column="139">(<argument><expr><name><name pos:line="182" pos:column="140">service_list_ptr<pos:position pos:line="182" pos:column="156"/></name><operator pos:line="182" pos:column="156">-&gt;<pos:position pos:line="182" pos:column="161"/></operator><name pos:line="182" pos:column="158">security_info<pos:position pos:line="182" pos:column="171"/></name><operator pos:line="182" pos:column="171">-&gt;<pos:position pos:line="182" pos:column="176"/></operator><name pos:line="182" pos:column="173">security_option<pos:position pos:line="182" pos:column="188"/></name></name></expr></argument>)<pos:position pos:line="182" pos:column="189"/></argument_list></call> <operator pos:line="182" pos:column="190">&lt;&lt;<pos:position pos:line="182" pos:column="198"/></operator> <literal type="string" pos:line="182" pos:column="193">")."<pos:position pos:line="182" pos:column="197"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="198"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="199"/></expr_stmt>
        <return pos:line="183" pos:column="9">return;<pos:position pos:line="183" pos:column="16"/></return>
    }<pos:position pos:line="184" pos:column="6"/></block></then></if>

    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><operator pos:line="186" pos:column="9">!<pos:position pos:line="186" pos:column="10"/></operator><call><name pos:line="186" pos:column="10">wccp2_check_security<pos:position pos:line="186" pos:column="30"/></name><argument_list pos:line="186" pos:column="30">(<argument><expr><name pos:line="186" pos:column="31">service_list_ptr<pos:position pos:line="186" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="186" pos:column="49">(<pos:position pos:line="186" pos:column="50"/></operator><name pos:line="186" pos:column="50">char<pos:position pos:line="186" pos:column="54"/></name> <operator pos:line="186" pos:column="55">*<pos:position pos:line="186" pos:column="56"/></operator><operator pos:line="186" pos:column="56">)<pos:position pos:line="186" pos:column="57"/></operator> <name pos:line="186" pos:column="58">security_info<pos:position pos:line="186" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="186" pos:column="73">(<pos:position pos:line="186" pos:column="74"/></operator><name pos:line="186" pos:column="74">char<pos:position pos:line="186" pos:column="78"/></name> <operator pos:line="186" pos:column="79">*<pos:position pos:line="186" pos:column="80"/></operator><operator pos:line="186" pos:column="80">)<pos:position pos:line="186" pos:column="81"/></operator> <operator pos:line="186" pos:column="82">&amp;<pos:position pos:line="186" pos:column="87"/></operator><name pos:line="186" pos:column="83">wccp2_i_see_you<pos:position pos:line="186" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="100">len<pos:position pos:line="186" pos:column="103"/></name></expr></argument>)<pos:position pos:line="186" pos:column="104"/></argument_list></call></expr>)<pos:position pos:line="186" pos:column="105"/></condition><then pos:line="186" pos:column="105"> <block pos:line="186" pos:column="106">{
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">debugs<pos:position pos:line="187" pos:column="15"/></name><argument_list pos:line="187" pos:column="15">(<argument><expr><literal type="number" pos:line="187" pos:column="16">80<pos:position pos:line="187" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="187" pos:column="20">DBG_IMPORTANT<pos:position pos:line="187" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="35">"Received WCCPv2 Packet failed authentication"<pos:position pos:line="187" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="83"/></expr_stmt>
        <return pos:line="188" pos:column="9">return;<pos:position pos:line="188" pos:column="16"/></return>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="191" pos:column="5">/* Check that the router address is configured on this router */</comment>
    <for pos:line="192" pos:column="5">for <control pos:line="192" pos:column="9">(<init><expr><name pos:line="192" pos:column="10">router_list_ptr<pos:position pos:line="192" pos:column="25"/></name> <operator pos:line="192" pos:column="26">=<pos:position pos:line="192" pos:column="27"/></operator> <operator pos:line="192" pos:column="28">&amp;<pos:position pos:line="192" pos:column="33"/></operator><name><name pos:line="192" pos:column="29">service_list_ptr<pos:position pos:line="192" pos:column="45"/></name><operator pos:line="192" pos:column="45">-&gt;<pos:position pos:line="192" pos:column="50"/></operator><name pos:line="192" pos:column="47">router_list_head<pos:position pos:line="192" pos:column="63"/></name></name></expr>;<pos:position pos:line="192" pos:column="64"/></init> <condition><expr><name><name pos:line="192" pos:column="65">router_list_ptr<pos:position pos:line="192" pos:column="80"/></name><operator pos:line="192" pos:column="80">-&gt;<pos:position pos:line="192" pos:column="85"/></operator><name pos:line="192" pos:column="82">next<pos:position pos:line="192" pos:column="86"/></name></name> <operator pos:line="192" pos:column="87">!=<pos:position pos:line="192" pos:column="89"/></operator> <name pos:line="192" pos:column="90">NULL<pos:position pos:line="192" pos:column="94"/></name></expr>;<pos:position pos:line="192" pos:column="95"/></condition> <incr><expr><name pos:line="192" pos:column="96">router_list_ptr<pos:position pos:line="192" pos:column="111"/></name> <operator pos:line="192" pos:column="112">=<pos:position pos:line="192" pos:column="113"/></operator> <name><name pos:line="192" pos:column="114">router_list_ptr<pos:position pos:line="192" pos:column="129"/></name><operator pos:line="192" pos:column="129">-&gt;<pos:position pos:line="192" pos:column="134"/></operator><name pos:line="192" pos:column="131">next<pos:position pos:line="192" pos:column="135"/></name></name></expr></incr>)<pos:position pos:line="192" pos:column="136"/></control> <block pos:line="192" pos:column="137">{
        <if pos:line="193" pos:column="9">if <condition pos:line="193" pos:column="12">(<expr><name><name pos:line="193" pos:column="13">router_list_ptr<pos:position pos:line="193" pos:column="28"/></name><operator pos:line="193" pos:column="28">-&gt;<pos:position pos:line="193" pos:column="33"/></operator><name pos:line="193" pos:column="30">router_sendto_address<pos:position pos:line="193" pos:column="51"/></name><operator pos:line="193" pos:column="51">.<pos:position pos:line="193" pos:column="52"/></operator><name pos:line="193" pos:column="52">s_addr<pos:position pos:line="193" pos:column="58"/></name></name> <operator pos:line="193" pos:column="59">==<pos:position pos:line="193" pos:column="61"/></operator> <name><name pos:line="193" pos:column="62">from<pos:position pos:line="193" pos:column="66"/></name><operator pos:line="193" pos:column="66">.<pos:position pos:line="193" pos:column="67"/></operator><name pos:line="193" pos:column="67">sin_addr<pos:position pos:line="193" pos:column="75"/></name><operator pos:line="193" pos:column="75">.<pos:position pos:line="193" pos:column="76"/></operator><name pos:line="193" pos:column="76">s_addr<pos:position pos:line="193" pos:column="82"/></name></name></expr>)<pos:position pos:line="193" pos:column="83"/></condition><then pos:line="193" pos:column="83">
            <block type="pseudo"><break pos:line="194" pos:column="13">break;<pos:position pos:line="194" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="195" pos:column="6"/></block></for>

    <if pos:line="197" pos:column="5">if <condition pos:line="197" pos:column="8">(<expr><name><name pos:line="197" pos:column="9">router_list_ptr<pos:position pos:line="197" pos:column="24"/></name><operator pos:line="197" pos:column="24">-&gt;<pos:position pos:line="197" pos:column="29"/></operator><name pos:line="197" pos:column="26">next<pos:position pos:line="197" pos:column="30"/></name></name> <operator pos:line="197" pos:column="31">==<pos:position pos:line="197" pos:column="33"/></operator> <name pos:line="197" pos:column="34">NULL<pos:position pos:line="197" pos:column="38"/></name></expr>)<pos:position pos:line="197" pos:column="39"/></condition><then pos:line="197" pos:column="39"> <block pos:line="197" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="198" pos:column="9">debugs<pos:position pos:line="198" pos:column="15"/></name><argument_list pos:line="198" pos:column="15">(<argument><expr><literal type="number" pos:line="198" pos:column="16">80<pos:position pos:line="198" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="198" pos:column="20">DBG_IMPORTANT<pos:position pos:line="198" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="35">"WCCPv2 Packet received from unknown router"<pos:position pos:line="198" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="81"/></expr_stmt>
        <return pos:line="199" pos:column="9">return;<pos:position pos:line="199" pos:column="16"/></return>
    }<pos:position pos:line="200" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="202" pos:column="5">/* Set the router id */</comment>
    <expr_stmt><expr><name><name pos:line="203" pos:column="5">router_list_ptr<pos:position pos:line="203" pos:column="20"/></name><operator pos:line="203" pos:column="20">-&gt;<pos:position pos:line="203" pos:column="25"/></operator><name pos:line="203" pos:column="22">info<pos:position pos:line="203" pos:column="26"/></name><operator pos:line="203" pos:column="26">-&gt;<pos:position pos:line="203" pos:column="31"/></operator><name pos:line="203" pos:column="28">router_address<pos:position pos:line="203" pos:column="42"/></name></name> <operator pos:line="203" pos:column="43">=<pos:position pos:line="203" pos:column="44"/></operator> <name><name pos:line="203" pos:column="45">router_identity_info<pos:position pos:line="203" pos:column="65"/></name><operator pos:line="203" pos:column="65">-&gt;<pos:position pos:line="203" pos:column="70"/></operator><name pos:line="203" pos:column="67">router_id_element<pos:position pos:line="203" pos:column="84"/></name><operator pos:line="203" pos:column="84">.<pos:position pos:line="203" pos:column="85"/></operator><name pos:line="203" pos:column="85">router_address<pos:position pos:line="203" pos:column="99"/></name></name></expr>;<pos:position pos:line="203" pos:column="100"/></expr_stmt>

    <comment type="block" pos:line="205" pos:column="5">/* Increment the received id in the packet */</comment>
    <if pos:line="206" pos:column="5">if <condition pos:line="206" pos:column="8">(<expr><call><name pos:line="206" pos:column="9">ntohl<pos:position pos:line="206" pos:column="14"/></name><argument_list pos:line="206" pos:column="14">(<argument><expr><name><name pos:line="206" pos:column="15">router_list_ptr<pos:position pos:line="206" pos:column="30"/></name><operator pos:line="206" pos:column="30">-&gt;<pos:position pos:line="206" pos:column="35"/></operator><name pos:line="206" pos:column="32">info<pos:position pos:line="206" pos:column="36"/></name><operator pos:line="206" pos:column="36">-&gt;<pos:position pos:line="206" pos:column="41"/></operator><name pos:line="206" pos:column="38">received_id<pos:position pos:line="206" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="50"/></argument_list></call> <operator pos:line="206" pos:column="51">!=<pos:position pos:line="206" pos:column="53"/></operator> <call><name pos:line="206" pos:column="54">ntohl<pos:position pos:line="206" pos:column="59"/></name><argument_list pos:line="206" pos:column="59">(<argument><expr><name><name pos:line="206" pos:column="60">router_identity_info<pos:position pos:line="206" pos:column="80"/></name><operator pos:line="206" pos:column="80">-&gt;<pos:position pos:line="206" pos:column="85"/></operator><name pos:line="206" pos:column="82">router_id_element<pos:position pos:line="206" pos:column="99"/></name><operator pos:line="206" pos:column="99">.<pos:position pos:line="206" pos:column="100"/></operator><name pos:line="206" pos:column="100">received_id<pos:position pos:line="206" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="112"/></argument_list></call></expr>)<pos:position pos:line="206" pos:column="113"/></condition><then pos:line="206" pos:column="113"> <block pos:line="206" pos:column="114">{
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">debugs<pos:position pos:line="207" pos:column="15"/></name><argument_list pos:line="207" pos:column="15">(<argument><expr><literal type="number" pos:line="207" pos:column="16">80<pos:position pos:line="207" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="207" pos:column="20">3<pos:position pos:line="207" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="23">"Incoming WCCP2_I_SEE_YOU Received ID old="<pos:position pos:line="207" pos:column="66"/></literal> <operator pos:line="207" pos:column="67">&lt;&lt;<pos:position pos:line="207" pos:column="75"/></operator> <call><name pos:line="207" pos:column="70">ntohl<pos:position pos:line="207" pos:column="75"/></name><argument_list pos:line="207" pos:column="75">(<argument><expr><name><name pos:line="207" pos:column="76">router_list_ptr<pos:position pos:line="207" pos:column="91"/></name><operator pos:line="207" pos:column="91">-&gt;<pos:position pos:line="207" pos:column="96"/></operator><name pos:line="207" pos:column="93">info<pos:position pos:line="207" pos:column="97"/></name><operator pos:line="207" pos:column="97">-&gt;<pos:position pos:line="207" pos:column="102"/></operator><name pos:line="207" pos:column="99">received_id<pos:position pos:line="207" pos:column="110"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="111"/></argument_list></call> <operator pos:line="207" pos:column="112">&lt;&lt;<pos:position pos:line="207" pos:column="120"/></operator> <literal type="string" pos:line="207" pos:column="115">" new="<pos:position pos:line="207" pos:column="122"/></literal> <operator pos:line="207" pos:column="123">&lt;&lt;<pos:position pos:line="207" pos:column="131"/></operator> <call><name pos:line="207" pos:column="126">ntohl<pos:position pos:line="207" pos:column="131"/></name><argument_list pos:line="207" pos:column="131">(<argument><expr><name><name pos:line="207" pos:column="132">router_identity_info<pos:position pos:line="207" pos:column="152"/></name><operator pos:line="207" pos:column="152">-&gt;<pos:position pos:line="207" pos:column="157"/></operator><name pos:line="207" pos:column="154">router_id_element<pos:position pos:line="207" pos:column="171"/></name><operator pos:line="207" pos:column="171">.<pos:position pos:line="207" pos:column="172"/></operator><name pos:line="207" pos:column="172">received_id<pos:position pos:line="207" pos:column="183"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="184"/></argument_list></call> <operator pos:line="207" pos:column="185">&lt;&lt;<pos:position pos:line="207" pos:column="193"/></operator> <literal type="string" pos:line="207" pos:column="188">"."<pos:position pos:line="207" pos:column="191"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="192"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="193"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="208" pos:column="9">router_list_ptr<pos:position pos:line="208" pos:column="24"/></name><operator pos:line="208" pos:column="24">-&gt;<pos:position pos:line="208" pos:column="29"/></operator><name pos:line="208" pos:column="26">info<pos:position pos:line="208" pos:column="30"/></name><operator pos:line="208" pos:column="30">-&gt;<pos:position pos:line="208" pos:column="35"/></operator><name pos:line="208" pos:column="32">received_id<pos:position pos:line="208" pos:column="43"/></name></name> <operator pos:line="208" pos:column="44">=<pos:position pos:line="208" pos:column="45"/></operator> <name><name pos:line="208" pos:column="46">router_identity_info<pos:position pos:line="208" pos:column="66"/></name><operator pos:line="208" pos:column="66">-&gt;<pos:position pos:line="208" pos:column="71"/></operator><name pos:line="208" pos:column="68">router_id_element<pos:position pos:line="208" pos:column="85"/></name><operator pos:line="208" pos:column="85">.<pos:position pos:line="208" pos:column="86"/></operator><name pos:line="208" pos:column="86">received_id<pos:position pos:line="208" pos:column="97"/></name></name></expr>;<pos:position pos:line="208" pos:column="98"/></expr_stmt>
    }<pos:position pos:line="209" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="211" pos:column="5">/* TODO: check return/forwarding methods */</comment>
    <if pos:line="212" pos:column="5">if <condition pos:line="212" pos:column="8">(<expr><name pos:line="212" pos:column="9">router_capability_header<pos:position pos:line="212" pos:column="33"/></name> <operator pos:line="212" pos:column="34">==<pos:position pos:line="212" pos:column="36"/></operator> <name pos:line="212" pos:column="37">NULL<pos:position pos:line="212" pos:column="41"/></name></expr>)<pos:position pos:line="212" pos:column="42"/></condition><then pos:line="212" pos:column="42"> <block pos:line="212" pos:column="43">{
        <if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><operator pos:line="213" pos:column="13">(<pos:position pos:line="213" pos:column="14"/></operator><name><name pos:line="213" pos:column="14">Config<pos:position pos:line="213" pos:column="20"/></name><operator pos:line="213" pos:column="20">.<pos:position pos:line="213" pos:column="21"/></operator><name pos:line="213" pos:column="21">Wccp2<pos:position pos:line="213" pos:column="26"/></name><operator pos:line="213" pos:column="26">.<pos:position pos:line="213" pos:column="27"/></operator><name pos:line="213" pos:column="27">return_method<pos:position pos:line="213" pos:column="40"/></name></name> <operator pos:line="213" pos:column="41">!=<pos:position pos:line="213" pos:column="43"/></operator> <name pos:line="213" pos:column="44">WCCP2_PACKET_RETURN_METHOD_GRE<pos:position pos:line="213" pos:column="74"/></name><operator pos:line="213" pos:column="74">)<pos:position pos:line="213" pos:column="75"/></operator> <operator pos:line="213" pos:column="76">||<pos:position pos:line="213" pos:column="78"/></operator> <operator pos:line="213" pos:column="79">(<pos:position pos:line="213" pos:column="80"/></operator><name><name pos:line="213" pos:column="80">Config<pos:position pos:line="213" pos:column="86"/></name><operator pos:line="213" pos:column="86">.<pos:position pos:line="213" pos:column="87"/></operator><name pos:line="213" pos:column="87">Wccp2<pos:position pos:line="213" pos:column="92"/></name><operator pos:line="213" pos:column="92">.<pos:position pos:line="213" pos:column="93"/></operator><name pos:line="213" pos:column="93">forwarding_method<pos:position pos:line="213" pos:column="110"/></name></name> <operator pos:line="213" pos:column="111">!=<pos:position pos:line="213" pos:column="113"/></operator> <name pos:line="213" pos:column="114">WCCP2_FORWARDING_METHOD_GRE<pos:position pos:line="213" pos:column="141"/></name><operator pos:line="213" pos:column="141">)<pos:position pos:line="213" pos:column="142"/></operator></expr>)<pos:position pos:line="213" pos:column="143"/></condition><then pos:line="213" pos:column="143"> <block pos:line="213" pos:column="144">{
            <expr_stmt><expr><call><name pos:line="214" pos:column="13">debugs<pos:position pos:line="214" pos:column="19"/></name><argument_list pos:line="214" pos:column="19">(<argument><expr><literal type="number" pos:line="214" pos:column="20">80<pos:position pos:line="214" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="24">DBG_IMPORTANT<pos:position pos:line="214" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="39">"wccp2HandleUdp: fatal error - A WCCP router does not support the forwarding method specified, only GRE supported"<pos:position pos:line="214" pos:column="153"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="155"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="215" pos:column="13">wccp2ConnectionClose<pos:position pos:line="215" pos:column="33"/></name><argument_list pos:line="215" pos:column="33">()<pos:position pos:line="215" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="36"/></expr_stmt>
            <return pos:line="216" pos:column="13">return;<pos:position pos:line="216" pos:column="20"/></return>
        }<pos:position pos:line="217" pos:column="10"/></block></then></if>
    }<pos:position pos:line="218" pos:column="6"/></block></then> <else pos:line="218" pos:column="7">else <block pos:line="218" pos:column="12">{

        <decl_stmt><decl><type><name pos:line="220" pos:column="9">char<pos:position pos:line="220" pos:column="13"/></name> <modifier pos:line="220" pos:column="14">*<pos:position pos:line="220" pos:column="15"/></modifier></type><name pos:line="220" pos:column="15">end<pos:position pos:line="220" pos:column="18"/></name> <init pos:line="220" pos:column="19">= <expr><operator pos:line="220" pos:column="21">(<pos:position pos:line="220" pos:column="22"/></operator><operator pos:line="220" pos:column="22">(<pos:position pos:line="220" pos:column="23"/></operator><name pos:line="220" pos:column="23">char<pos:position pos:line="220" pos:column="27"/></name> <operator pos:line="220" pos:column="28">*<pos:position pos:line="220" pos:column="29"/></operator><operator pos:line="220" pos:column="29">)<pos:position pos:line="220" pos:column="30"/></operator> <name pos:line="220" pos:column="31">router_capability_header<pos:position pos:line="220" pos:column="55"/></name><operator pos:line="220" pos:column="55">)<pos:position pos:line="220" pos:column="56"/></operator> <operator pos:line="220" pos:column="57">+<pos:position pos:line="220" pos:column="58"/></operator> <sizeof pos:line="220" pos:column="59">sizeof<argument_list pos:line="220" pos:column="65">(<argument><expr><operator pos:line="220" pos:column="66">*<pos:position pos:line="220" pos:column="67"/></operator><name pos:line="220" pos:column="67">router_capability_header<pos:position pos:line="220" pos:column="91"/></name></expr></argument>)<pos:position pos:line="220" pos:column="92"/></argument_list></sizeof> <operator pos:line="220" pos:column="93">+<pos:position pos:line="220" pos:column="94"/></operator> <call><name pos:line="220" pos:column="95">ntohs<pos:position pos:line="220" pos:column="100"/></name><argument_list pos:line="220" pos:column="100">(<argument><expr><name><name pos:line="220" pos:column="101">router_capability_header<pos:position pos:line="220" pos:column="125"/></name><operator pos:line="220" pos:column="125">-&gt;<pos:position pos:line="220" pos:column="130"/></operator><name pos:line="220" pos:column="127">capability_info_length<pos:position pos:line="220" pos:column="149"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="150"/></argument_list></call> <operator pos:line="220" pos:column="151">-<pos:position pos:line="220" pos:column="152"/></operator> <sizeof pos:line="220" pos:column="153">sizeof<argument_list pos:line="220" pos:column="159">(<argument><expr pos:line="220" pos:column="160">struct <name pos:line="220" pos:column="167">wccp2_capability_info_header_t<pos:position pos:line="220" pos:column="197"/></name></expr></argument>)<pos:position pos:line="220" pos:column="198"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="220" pos:column="199"/></decl_stmt>

        <expr_stmt><expr><name pos:line="222" pos:column="9">router_capability_element<pos:position pos:line="222" pos:column="34"/></name> <operator pos:line="222" pos:column="35">=<pos:position pos:line="222" pos:column="36"/></operator> <operator pos:line="222" pos:column="37">(<pos:position pos:line="222" pos:column="38"/></operator>struct <name pos:line="222" pos:column="45">wccp2_capability_element_t<pos:position pos:line="222" pos:column="71"/></name> <operator pos:line="222" pos:column="72">*<pos:position pos:line="222" pos:column="73"/></operator><operator pos:line="222" pos:column="73">)<pos:position pos:line="222" pos:column="74"/></operator> <operator pos:line="222" pos:column="75">(<pos:position pos:line="222" pos:column="76"/></operator><operator pos:line="222" pos:column="76">(<pos:position pos:line="222" pos:column="77"/></operator><operator pos:line="222" pos:column="77">(<pos:position pos:line="222" pos:column="78"/></operator><name pos:line="222" pos:column="78">char<pos:position pos:line="222" pos:column="82"/></name> <operator pos:line="222" pos:column="83">*<pos:position pos:line="222" pos:column="84"/></operator><operator pos:line="222" pos:column="84">)<pos:position pos:line="222" pos:column="85"/></operator> <name pos:line="222" pos:column="86">router_capability_header<pos:position pos:line="222" pos:column="110"/></name><operator pos:line="222" pos:column="110">)<pos:position pos:line="222" pos:column="111"/></operator> <operator pos:line="222" pos:column="112">+<pos:position pos:line="222" pos:column="113"/></operator> <sizeof pos:line="222" pos:column="114">sizeof<argument_list pos:line="222" pos:column="120">(<argument><expr><operator pos:line="222" pos:column="121">*<pos:position pos:line="222" pos:column="122"/></operator><name pos:line="222" pos:column="122">router_capability_header<pos:position pos:line="222" pos:column="146"/></name></expr></argument>)<pos:position pos:line="222" pos:column="147"/></argument_list></sizeof><operator pos:line="222" pos:column="147">)<pos:position pos:line="222" pos:column="148"/></operator></expr>;<pos:position pos:line="222" pos:column="149"/></expr_stmt>

        <while pos:line="224" pos:column="9">while <condition pos:line="224" pos:column="15">(<expr><operator pos:line="224" pos:column="16">(<pos:position pos:line="224" pos:column="17"/></operator><name pos:line="224" pos:column="17">char<pos:position pos:line="224" pos:column="21"/></name> <operator pos:line="224" pos:column="22">*<pos:position pos:line="224" pos:column="23"/></operator><operator pos:line="224" pos:column="23">)<pos:position pos:line="224" pos:column="24"/></operator> <name pos:line="224" pos:column="25">router_capability_element<pos:position pos:line="224" pos:column="50"/></name> <operator pos:line="224" pos:column="51">&lt;=<pos:position pos:line="224" pos:column="56"/></operator> <name pos:line="224" pos:column="54">end<pos:position pos:line="224" pos:column="57"/></name></expr>)<pos:position pos:line="224" pos:column="58"/></condition> <block pos:line="224" pos:column="59">{

            <switch pos:line="226" pos:column="13">switch <condition pos:line="226" pos:column="20">(<expr><call><name pos:line="226" pos:column="21">ntohs<pos:position pos:line="226" pos:column="26"/></name><argument_list pos:line="226" pos:column="26">(<argument><expr><name><name pos:line="226" pos:column="27">router_capability_element<pos:position pos:line="226" pos:column="52"/></name><operator pos:line="226" pos:column="52">-&gt;<pos:position pos:line="226" pos:column="57"/></operator><name pos:line="226" pos:column="54">capability_type<pos:position pos:line="226" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="226" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="226" pos:column="71"/></condition> <block pos:line="226" pos:column="72">{

            <case pos:line="228" pos:column="13">case <expr><name pos:line="228" pos:column="18">WCCP2_CAPABILITY_FORWARDING_METHOD<pos:position pos:line="228" pos:column="52"/></name></expr>:<pos:position pos:line="228" pos:column="53"/></case>

                <if pos:line="230" pos:column="17">if <condition pos:line="230" pos:column="20">(<expr><operator pos:line="230" pos:column="21">!<pos:position pos:line="230" pos:column="22"/></operator><operator pos:line="230" pos:column="22">(<pos:position pos:line="230" pos:column="23"/></operator><call><name pos:line="230" pos:column="23">ntohl<pos:position pos:line="230" pos:column="28"/></name><argument_list pos:line="230" pos:column="28">(<argument><expr><name><name pos:line="230" pos:column="29">router_capability_element<pos:position pos:line="230" pos:column="54"/></name><operator pos:line="230" pos:column="54">-&gt;<pos:position pos:line="230" pos:column="59"/></operator><name pos:line="230" pos:column="56">capability_value<pos:position pos:line="230" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="230" pos:column="73"/></argument_list></call> <operator pos:line="230" pos:column="74">&amp;<pos:position pos:line="230" pos:column="79"/></operator> <name><name pos:line="230" pos:column="76">Config<pos:position pos:line="230" pos:column="82"/></name><operator pos:line="230" pos:column="82">.<pos:position pos:line="230" pos:column="83"/></operator><name pos:line="230" pos:column="83">Wccp2<pos:position pos:line="230" pos:column="88"/></name><operator pos:line="230" pos:column="88">.<pos:position pos:line="230" pos:column="89"/></operator><name pos:line="230" pos:column="89">forwarding_method<pos:position pos:line="230" pos:column="106"/></name></name><operator pos:line="230" pos:column="106">)<pos:position pos:line="230" pos:column="107"/></operator></expr>)<pos:position pos:line="230" pos:column="108"/></condition><then pos:line="230" pos:column="108"> <block pos:line="230" pos:column="109">{
                    <expr_stmt><expr><call><name pos:line="231" pos:column="21">debugs<pos:position pos:line="231" pos:column="27"/></name><argument_list pos:line="231" pos:column="27">(<argument><expr><literal type="number" pos:line="231" pos:column="28">80<pos:position pos:line="231" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="231" pos:column="32">DBG_IMPORTANT<pos:position pos:line="231" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="47">"wccp2HandleUdp: fatal error - A WCCP router has specified a different forwarding method "<pos:position pos:line="231" pos:column="137"/></literal> <operator pos:line="231" pos:column="138">&lt;&lt;<pos:position pos:line="231" pos:column="146"/></operator> <call><name pos:line="231" pos:column="141">ntohl<pos:position pos:line="231" pos:column="146"/></name><argument_list pos:line="231" pos:column="146">(<argument><expr><name><name pos:line="231" pos:column="147">router_capability_element<pos:position pos:line="231" pos:column="172"/></name><operator pos:line="231" pos:column="172">-&gt;<pos:position pos:line="231" pos:column="177"/></operator><name pos:line="231" pos:column="174">capability_value<pos:position pos:line="231" pos:column="190"/></name></name></expr></argument>)<pos:position pos:line="231" pos:column="191"/></argument_list></call> <operator pos:line="231" pos:column="192">&lt;&lt;<pos:position pos:line="231" pos:column="200"/></operator> <literal type="string" pos:line="231" pos:column="195">", expected "<pos:position pos:line="231" pos:column="208"/></literal> <operator pos:line="231" pos:column="209">&lt;&lt;<pos:position pos:line="231" pos:column="217"/></operator> <name><name pos:line="231" pos:column="212">Config<pos:position pos:line="231" pos:column="218"/></name><operator pos:line="231" pos:column="218">.<pos:position pos:line="231" pos:column="219"/></operator><name pos:line="231" pos:column="219">Wccp2<pos:position pos:line="231" pos:column="224"/></name><operator pos:line="231" pos:column="224">.<pos:position pos:line="231" pos:column="225"/></operator><name pos:line="231" pos:column="225">forwarding_method<pos:position pos:line="231" pos:column="242"/></name></name></expr></argument>)<pos:position pos:line="231" pos:column="243"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="244"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="232" pos:column="21">wccp2ConnectionClose<pos:position pos:line="232" pos:column="41"/></name><argument_list pos:line="232" pos:column="41">()<pos:position pos:line="232" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="44"/></expr_stmt>
                    <return pos:line="233" pos:column="21">return;<pos:position pos:line="233" pos:column="28"/></return>
                }<pos:position pos:line="234" pos:column="18"/></block></then></if>

                <break pos:line="236" pos:column="17">break;<pos:position pos:line="236" pos:column="23"/></break>

            <case pos:line="238" pos:column="13">case <expr><name pos:line="238" pos:column="18">WCCP2_CAPABILITY_ASSIGNMENT_METHOD<pos:position pos:line="238" pos:column="52"/></name></expr>:<pos:position pos:line="238" pos:column="53"/></case>

                <if pos:line="240" pos:column="17">if <condition pos:line="240" pos:column="20">(<expr><operator pos:line="240" pos:column="21">!<pos:position pos:line="240" pos:column="22"/></operator><operator pos:line="240" pos:column="22">(<pos:position pos:line="240" pos:column="23"/></operator><call><name pos:line="240" pos:column="23">ntohl<pos:position pos:line="240" pos:column="28"/></name><argument_list pos:line="240" pos:column="28">(<argument><expr><name><name pos:line="240" pos:column="29">router_capability_element<pos:position pos:line="240" pos:column="54"/></name><operator pos:line="240" pos:column="54">-&gt;<pos:position pos:line="240" pos:column="59"/></operator><name pos:line="240" pos:column="56">capability_value<pos:position pos:line="240" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="240" pos:column="73"/></argument_list></call> <operator pos:line="240" pos:column="74">&amp;<pos:position pos:line="240" pos:column="79"/></operator> <name><name pos:line="240" pos:column="76">Config<pos:position pos:line="240" pos:column="82"/></name><operator pos:line="240" pos:column="82">.<pos:position pos:line="240" pos:column="83"/></operator><name pos:line="240" pos:column="83">Wccp2<pos:position pos:line="240" pos:column="88"/></name><operator pos:line="240" pos:column="88">.<pos:position pos:line="240" pos:column="89"/></operator><name pos:line="240" pos:column="89">assignment_method<pos:position pos:line="240" pos:column="106"/></name></name><operator pos:line="240" pos:column="106">)<pos:position pos:line="240" pos:column="107"/></operator></expr>)<pos:position pos:line="240" pos:column="108"/></condition><then pos:line="240" pos:column="108"> <block pos:line="240" pos:column="109">{
                    <expr_stmt><expr><call><name pos:line="241" pos:column="21">debugs<pos:position pos:line="241" pos:column="27"/></name><argument_list pos:line="241" pos:column="27">(<argument><expr><literal type="number" pos:line="241" pos:column="28">80<pos:position pos:line="241" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="241" pos:column="32">DBG_IMPORTANT<pos:position pos:line="241" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="241" pos:column="47">"wccp2HandleUdp: fatal error - A WCCP router has specified a different assignment method "<pos:position pos:line="241" pos:column="137"/></literal> <operator pos:line="241" pos:column="138">&lt;&lt;<pos:position pos:line="241" pos:column="146"/></operator> <call><name pos:line="241" pos:column="141">ntohl<pos:position pos:line="241" pos:column="146"/></name><argument_list pos:line="241" pos:column="146">(<argument><expr><name><name pos:line="241" pos:column="147">router_capability_element<pos:position pos:line="241" pos:column="172"/></name><operator pos:line="241" pos:column="172">-&gt;<pos:position pos:line="241" pos:column="177"/></operator><name pos:line="241" pos:column="174">capability_value<pos:position pos:line="241" pos:column="190"/></name></name></expr></argument>)<pos:position pos:line="241" pos:column="191"/></argument_list></call> <operator pos:line="241" pos:column="192">&lt;&lt;<pos:position pos:line="241" pos:column="200"/></operator> <literal type="string" pos:line="241" pos:column="195">", expected "<pos:position pos:line="241" pos:column="208"/></literal><operator pos:line="241" pos:column="208">&lt;&lt;<pos:position pos:line="241" pos:column="216"/></operator> <name><name pos:line="241" pos:column="211">Config<pos:position pos:line="241" pos:column="217"/></name><operator pos:line="241" pos:column="217">.<pos:position pos:line="241" pos:column="218"/></operator><name pos:line="241" pos:column="218">Wccp2<pos:position pos:line="241" pos:column="223"/></name><operator pos:line="241" pos:column="223">.<pos:position pos:line="241" pos:column="224"/></operator><name pos:line="241" pos:column="224">assignment_method<pos:position pos:line="241" pos:column="241"/></name></name></expr></argument>)<pos:position pos:line="241" pos:column="242"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="243"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="242" pos:column="21">wccp2ConnectionClose<pos:position pos:line="242" pos:column="41"/></name><argument_list pos:line="242" pos:column="41">()<pos:position pos:line="242" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="44"/></expr_stmt>
                    <return pos:line="243" pos:column="21">return;<pos:position pos:line="243" pos:column="28"/></return>
                }<pos:position pos:line="244" pos:column="18"/></block></then></if>

                <break pos:line="246" pos:column="17">break;<pos:position pos:line="246" pos:column="23"/></break>

            <case pos:line="248" pos:column="13">case <expr><name pos:line="248" pos:column="18">WCCP2_CAPABILITY_RETURN_METHOD<pos:position pos:line="248" pos:column="48"/></name></expr>:<pos:position pos:line="248" pos:column="49"/></case>

                <if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><operator pos:line="250" pos:column="21">!<pos:position pos:line="250" pos:column="22"/></operator><operator pos:line="250" pos:column="22">(<pos:position pos:line="250" pos:column="23"/></operator><call><name pos:line="250" pos:column="23">ntohl<pos:position pos:line="250" pos:column="28"/></name><argument_list pos:line="250" pos:column="28">(<argument><expr><name><name pos:line="250" pos:column="29">router_capability_element<pos:position pos:line="250" pos:column="54"/></name><operator pos:line="250" pos:column="54">-&gt;<pos:position pos:line="250" pos:column="59"/></operator><name pos:line="250" pos:column="56">capability_value<pos:position pos:line="250" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="250" pos:column="73"/></argument_list></call> <operator pos:line="250" pos:column="74">&amp;<pos:position pos:line="250" pos:column="79"/></operator> <name><name pos:line="250" pos:column="76">Config<pos:position pos:line="250" pos:column="82"/></name><operator pos:line="250" pos:column="82">.<pos:position pos:line="250" pos:column="83"/></operator><name pos:line="250" pos:column="83">Wccp2<pos:position pos:line="250" pos:column="88"/></name><operator pos:line="250" pos:column="88">.<pos:position pos:line="250" pos:column="89"/></operator><name pos:line="250" pos:column="89">return_method<pos:position pos:line="250" pos:column="102"/></name></name><operator pos:line="250" pos:column="102">)<pos:position pos:line="250" pos:column="103"/></operator></expr>)<pos:position pos:line="250" pos:column="104"/></condition><then pos:line="250" pos:column="104"> <block pos:line="250" pos:column="105">{
                    <expr_stmt><expr><call><name pos:line="251" pos:column="21">debugs<pos:position pos:line="251" pos:column="27"/></name><argument_list pos:line="251" pos:column="27">(<argument><expr><literal type="number" pos:line="251" pos:column="28">80<pos:position pos:line="251" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="251" pos:column="32">DBG_IMPORTANT<pos:position pos:line="251" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="47">"wccp2HandleUdp: fatal error - A WCCP router has specified a different return method "<pos:position pos:line="251" pos:column="133"/></literal> <operator pos:line="251" pos:column="134">&lt;&lt;<pos:position pos:line="251" pos:column="142"/></operator> <call><name pos:line="251" pos:column="137">ntohl<pos:position pos:line="251" pos:column="142"/></name><argument_list pos:line="251" pos:column="142">(<argument><expr><name><name pos:line="251" pos:column="143">router_capability_element<pos:position pos:line="251" pos:column="168"/></name><operator pos:line="251" pos:column="168">-&gt;<pos:position pos:line="251" pos:column="173"/></operator><name pos:line="251" pos:column="170">capability_value<pos:position pos:line="251" pos:column="186"/></name></name></expr></argument>)<pos:position pos:line="251" pos:column="187"/></argument_list></call> <operator pos:line="251" pos:column="188">&lt;&lt;<pos:position pos:line="251" pos:column="196"/></operator> <literal type="string" pos:line="251" pos:column="191">", expected "<pos:position pos:line="251" pos:column="204"/></literal> <operator pos:line="251" pos:column="205">&lt;&lt;<pos:position pos:line="251" pos:column="213"/></operator> <name><name pos:line="251" pos:column="208">Config<pos:position pos:line="251" pos:column="214"/></name><operator pos:line="251" pos:column="214">.<pos:position pos:line="251" pos:column="215"/></operator><name pos:line="251" pos:column="215">Wccp2<pos:position pos:line="251" pos:column="220"/></name><operator pos:line="251" pos:column="220">.<pos:position pos:line="251" pos:column="221"/></operator><name pos:line="251" pos:column="221">return_method<pos:position pos:line="251" pos:column="234"/></name></name></expr></argument>)<pos:position pos:line="251" pos:column="235"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="236"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="252" pos:column="21">wccp2ConnectionClose<pos:position pos:line="252" pos:column="41"/></name><argument_list pos:line="252" pos:column="41">()<pos:position pos:line="252" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="44"/></expr_stmt>
                    <return pos:line="253" pos:column="21">return;<pos:position pos:line="253" pos:column="28"/></return>
                }<pos:position pos:line="254" pos:column="18"/></block></then></if>

                <break pos:line="256" pos:column="17">break;<pos:position pos:line="256" pos:column="23"/></break>

            <case pos:line="258" pos:column="13">case <expr><literal type="number" pos:line="258" pos:column="18">4<pos:position pos:line="258" pos:column="19"/></literal></expr>:<pos:position pos:line="258" pos:column="20"/></case>
            <case pos:line="259" pos:column="13">case <expr><literal type="number" pos:line="259" pos:column="18">5<pos:position pos:line="259" pos:column="19"/></literal></expr>:<pos:position pos:line="259" pos:column="20"/></case>
                <break pos:line="260" pos:column="17">break;<pos:position pos:line="260" pos:column="23"/></break> <comment type="line" pos:line="260" pos:column="24">// ignore silently for now</comment>

            <default pos:line="262" pos:column="13">default:<pos:position pos:line="262" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="263" pos:column="17">debugs<pos:position pos:line="263" pos:column="23"/></name><argument_list pos:line="263" pos:column="23">(<argument><expr><literal type="number" pos:line="263" pos:column="24">80<pos:position pos:line="263" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="263" pos:column="28">DBG_IMPORTANT<pos:position pos:line="263" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="43">"Unknown capability type in WCCPv2 Packet ("<pos:position pos:line="263" pos:column="87"/></literal> <operator pos:line="263" pos:column="88">&lt;&lt;<pos:position pos:line="263" pos:column="96"/></operator> <call><name pos:line="263" pos:column="91">ntohs<pos:position pos:line="263" pos:column="96"/></name><argument_list pos:line="263" pos:column="96">(<argument><expr><name><name pos:line="263" pos:column="97">router_capability_element<pos:position pos:line="263" pos:column="122"/></name><operator pos:line="263" pos:column="122">-&gt;<pos:position pos:line="263" pos:column="127"/></operator><name pos:line="263" pos:column="124">capability_type<pos:position pos:line="263" pos:column="139"/></name></name></expr></argument>)<pos:position pos:line="263" pos:column="140"/></argument_list></call> <operator pos:line="263" pos:column="141">&lt;&lt;<pos:position pos:line="263" pos:column="149"/></operator> <literal type="string" pos:line="263" pos:column="144">")."<pos:position pos:line="263" pos:column="148"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="149"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="150"/></expr_stmt>
            }<pos:position pos:line="264" pos:column="14"/></block></switch>

            <expr_stmt><expr><name pos:line="266" pos:column="13">router_capability_element<pos:position pos:line="266" pos:column="38"/></name> <operator pos:line="266" pos:column="39">=<pos:position pos:line="266" pos:column="40"/></operator> <operator pos:line="266" pos:column="41">(<pos:position pos:line="266" pos:column="42"/></operator>struct <name pos:line="266" pos:column="49">wccp2_capability_element_t<pos:position pos:line="266" pos:column="75"/></name> <operator pos:line="266" pos:column="76">*<pos:position pos:line="266" pos:column="77"/></operator><operator pos:line="266" pos:column="77">)<pos:position pos:line="266" pos:column="78"/></operator> <operator pos:line="266" pos:column="79">(<pos:position pos:line="266" pos:column="80"/></operator><operator pos:line="266" pos:column="80">(<pos:position pos:line="266" pos:column="81"/></operator><operator pos:line="266" pos:column="81">(<pos:position pos:line="266" pos:column="82"/></operator><name pos:line="266" pos:column="82">char<pos:position pos:line="266" pos:column="86"/></name> <operator pos:line="266" pos:column="87">*<pos:position pos:line="266" pos:column="88"/></operator><operator pos:line="266" pos:column="88">)<pos:position pos:line="266" pos:column="89"/></operator> <name pos:line="266" pos:column="90">router_capability_element<pos:position pos:line="266" pos:column="115"/></name><operator pos:line="266" pos:column="115">)<pos:position pos:line="266" pos:column="116"/></operator> <operator pos:line="266" pos:column="117">+<pos:position pos:line="266" pos:column="118"/></operator> <sizeof pos:line="266" pos:column="119">sizeof<argument_list pos:line="266" pos:column="125">(<argument><expr pos:line="266" pos:column="126">struct <name pos:line="266" pos:column="133">wccp2_item_header_t<pos:position pos:line="266" pos:column="152"/></name></expr></argument>)<pos:position pos:line="266" pos:column="153"/></argument_list></sizeof> <operator pos:line="266" pos:column="154">+<pos:position pos:line="266" pos:column="155"/></operator> <call><name pos:line="266" pos:column="156">ntohs<pos:position pos:line="266" pos:column="161"/></name><argument_list pos:line="266" pos:column="161">(<argument><expr><name><name pos:line="266" pos:column="162">router_capability_element<pos:position pos:line="266" pos:column="187"/></name><operator pos:line="266" pos:column="187">-&gt;<pos:position pos:line="266" pos:column="192"/></operator><name pos:line="266" pos:column="189">capability_length<pos:position pos:line="266" pos:column="206"/></name></name></expr></argument>)<pos:position pos:line="266" pos:column="207"/></argument_list></call><operator pos:line="266" pos:column="207">)<pos:position pos:line="266" pos:column="208"/></operator></expr>;<pos:position pos:line="266" pos:column="209"/></expr_stmt>
        }<pos:position pos:line="267" pos:column="10"/></block></while>
    }<pos:position pos:line="268" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="270" pos:column="5">debugs<pos:position pos:line="270" pos:column="11"/></name><argument_list pos:line="270" pos:column="11">(<argument><expr><literal type="number" pos:line="270" pos:column="12">80<pos:position pos:line="270" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="270" pos:column="16">5<pos:position pos:line="270" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="19">"Cleaning out cache list"<pos:position pos:line="270" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="271" pos:column="5">/* clean out the old cache list */</comment>

    <for pos:line="273" pos:column="5">for <control pos:line="273" pos:column="9">(<init><expr><name pos:line="273" pos:column="10">cache_list_ptr<pos:position pos:line="273" pos:column="24"/></name> <operator pos:line="273" pos:column="25">=<pos:position pos:line="273" pos:column="26"/></operator> <operator pos:line="273" pos:column="27">&amp;<pos:position pos:line="273" pos:column="32"/></operator><name><name pos:line="273" pos:column="28">router_list_ptr<pos:position pos:line="273" pos:column="43"/></name><operator pos:line="273" pos:column="43">-&gt;<pos:position pos:line="273" pos:column="48"/></operator><name pos:line="273" pos:column="45">cache_list_head<pos:position pos:line="273" pos:column="60"/></name></name></expr>;<pos:position pos:line="273" pos:column="61"/></init> <condition><expr><name pos:line="273" pos:column="62">cache_list_ptr<pos:position pos:line="273" pos:column="76"/></name></expr>;<pos:position pos:line="273" pos:column="77"/></condition> <incr><expr><name pos:line="273" pos:column="78">cache_list_ptr<pos:position pos:line="273" pos:column="92"/></name> <operator pos:line="273" pos:column="93">=<pos:position pos:line="273" pos:column="94"/></operator> <name pos:line="273" pos:column="95">cache_list_ptr_next<pos:position pos:line="273" pos:column="114"/></name></expr></incr>)<pos:position pos:line="273" pos:column="115"/></control> <block pos:line="273" pos:column="116">{
        <expr_stmt><expr><name pos:line="274" pos:column="9">cache_list_ptr_next<pos:position pos:line="274" pos:column="28"/></name> <operator pos:line="274" pos:column="29">=<pos:position pos:line="274" pos:column="30"/></operator> <name><name pos:line="274" pos:column="31">cache_list_ptr<pos:position pos:line="274" pos:column="45"/></name><operator pos:line="274" pos:column="45">-&gt;<pos:position pos:line="274" pos:column="50"/></operator><name pos:line="274" pos:column="47">next<pos:position pos:line="274" pos:column="51"/></name></name></expr>;<pos:position pos:line="274" pos:column="52"/></expr_stmt>

        <if pos:line="276" pos:column="9">if <condition pos:line="276" pos:column="12">(<expr><name pos:line="276" pos:column="13">cache_list_ptr<pos:position pos:line="276" pos:column="27"/></name> <operator pos:line="276" pos:column="28">!=<pos:position pos:line="276" pos:column="30"/></operator> <operator pos:line="276" pos:column="31">&amp;<pos:position pos:line="276" pos:column="36"/></operator><name><name pos:line="276" pos:column="32">router_list_ptr<pos:position pos:line="276" pos:column="47"/></name><operator pos:line="276" pos:column="47">-&gt;<pos:position pos:line="276" pos:column="52"/></operator><name pos:line="276" pos:column="49">cache_list_head<pos:position pos:line="276" pos:column="64"/></name></name></expr>)<pos:position pos:line="276" pos:column="65"/></condition><then pos:line="276" pos:column="65"> <block pos:line="276" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="277" pos:column="13">xfree<pos:position pos:line="277" pos:column="18"/></name><argument_list pos:line="277" pos:column="18">(<argument><expr><name pos:line="277" pos:column="19">cache_list_ptr<pos:position pos:line="277" pos:column="33"/></name></expr></argument>)<pos:position pos:line="277" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="278" pos:column="10"/></block></then></if>
    }<pos:position pos:line="279" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="281" pos:column="5">router_list_ptr<pos:position pos:line="281" pos:column="20"/></name><operator pos:line="281" pos:column="20">-&gt;<pos:position pos:line="281" pos:column="25"/></operator><name pos:line="281" pos:column="22">num_caches<pos:position pos:line="281" pos:column="32"/></name></name> <operator pos:line="281" pos:column="33">=<pos:position pos:line="281" pos:column="34"/></operator> <call><name pos:line="281" pos:column="35">htonl<pos:position pos:line="281" pos:column="40"/></name><argument_list pos:line="281" pos:column="40">(<argument><expr><literal type="number" pos:line="281" pos:column="41">0<pos:position pos:line="281" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="281" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="282" pos:column="5">num_caches<pos:position pos:line="282" pos:column="15"/></name> <operator pos:line="282" pos:column="16">=<pos:position pos:line="282" pos:column="17"/></operator> <literal type="number" pos:line="282" pos:column="18">0<pos:position pos:line="282" pos:column="19"/></literal></expr>;<pos:position pos:line="282" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="284" pos:column="5">/* Check to see if we're the master cache and update the cache list */</comment>
    <expr_stmt><expr><name pos:line="285" pos:column="5">found<pos:position pos:line="285" pos:column="10"/></name> <operator pos:line="285" pos:column="11">=<pos:position pos:line="285" pos:column="12"/></operator> <literal type="number" pos:line="285" pos:column="13">0<pos:position pos:line="285" pos:column="14"/></literal></expr>;<pos:position pos:line="285" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="286" pos:column="5">service_list_ptr<pos:position pos:line="286" pos:column="21"/></name><operator pos:line="286" pos:column="21">-&gt;<pos:position pos:line="286" pos:column="26"/></operator><name pos:line="286" pos:column="23">lowest_ip<pos:position pos:line="286" pos:column="32"/></name></name> <operator pos:line="286" pos:column="33">=<pos:position pos:line="286" pos:column="34"/></operator> <literal type="number" pos:line="286" pos:column="35">1<pos:position pos:line="286" pos:column="36"/></literal></expr>;<pos:position pos:line="286" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="287" pos:column="5">cache_list_ptr<pos:position pos:line="287" pos:column="19"/></name> <operator pos:line="287" pos:column="20">=<pos:position pos:line="287" pos:column="21"/></operator> <operator pos:line="287" pos:column="22">&amp;<pos:position pos:line="287" pos:column="27"/></operator><name><name pos:line="287" pos:column="23">router_list_ptr<pos:position pos:line="287" pos:column="38"/></name><operator pos:line="287" pos:column="38">-&gt;<pos:position pos:line="287" pos:column="43"/></operator><name pos:line="287" pos:column="40">cache_list_head<pos:position pos:line="287" pos:column="55"/></name></name></expr>;<pos:position pos:line="287" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="289" pos:column="5">/* to find the list of caches, we start at the end of the router view header */</comment>

    <expr_stmt><expr><name pos:line="291" pos:column="5">ptr<pos:position pos:line="291" pos:column="8"/></name> <operator pos:line="291" pos:column="9">=<pos:position pos:line="291" pos:column="10"/></operator> <operator pos:line="291" pos:column="11">(<pos:position pos:line="291" pos:column="12"/></operator><name pos:line="291" pos:column="12">char<pos:position pos:line="291" pos:column="16"/></name> <operator pos:line="291" pos:column="17">*<pos:position pos:line="291" pos:column="18"/></operator><operator pos:line="291" pos:column="18">)<pos:position pos:line="291" pos:column="19"/></operator> <operator pos:line="291" pos:column="20">(<pos:position pos:line="291" pos:column="21"/></operator><name pos:line="291" pos:column="21">router_view_header<pos:position pos:line="291" pos:column="39"/></name><operator pos:line="291" pos:column="39">)<pos:position pos:line="291" pos:column="40"/></operator> <operator pos:line="291" pos:column="41">+<pos:position pos:line="291" pos:column="42"/></operator> <sizeof pos:line="291" pos:column="43">sizeof<argument_list pos:line="291" pos:column="49">(<argument><expr pos:line="291" pos:column="50">struct <name pos:line="291" pos:column="57">router_view_t<pos:position pos:line="291" pos:column="70"/></name></expr></argument>)<pos:position pos:line="291" pos:column="71"/></argument_list></sizeof></expr>;<pos:position pos:line="291" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="293" pos:column="5">/* Then we read the number of routers */</comment>
    <expr_stmt><expr><call><name pos:line="294" pos:column="5">memcpy<pos:position pos:line="294" pos:column="11"/></name><argument_list pos:line="294" pos:column="11">(<argument><expr><operator pos:line="294" pos:column="12">&amp;<pos:position pos:line="294" pos:column="17"/></operator><name pos:line="294" pos:column="13">tmp<pos:position pos:line="294" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="18">ptr<pos:position pos:line="294" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="294" pos:column="23">sizeof<argument_list pos:line="294" pos:column="29">(<argument><expr><name pos:line="294" pos:column="30">tmp<pos:position pos:line="294" pos:column="33"/></name></expr></argument>)<pos:position pos:line="294" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="294" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="296" pos:column="5">/* skip the number plus all the ip's */</comment>

    <expr_stmt><expr><name pos:line="298" pos:column="5">ptr<pos:position pos:line="298" pos:column="8"/></name> <operator pos:line="298" pos:column="9">+=<pos:position pos:line="298" pos:column="11"/></operator> <sizeof pos:line="298" pos:column="12">sizeof<argument_list pos:line="298" pos:column="18">(<argument><expr><name pos:line="298" pos:column="19">tmp<pos:position pos:line="298" pos:column="22"/></name></expr></argument>)<pos:position pos:line="298" pos:column="23"/></argument_list></sizeof> <operator pos:line="298" pos:column="24">+<pos:position pos:line="298" pos:column="25"/></operator> <operator pos:line="298" pos:column="26">(<pos:position pos:line="298" pos:column="27"/></operator><call><name pos:line="298" pos:column="27">ntohl<pos:position pos:line="298" pos:column="32"/></name><argument_list pos:line="298" pos:column="32">(<argument><expr><name pos:line="298" pos:column="33">tmp<pos:position pos:line="298" pos:column="36"/></name></expr></argument>)<pos:position pos:line="298" pos:column="37"/></argument_list></call> <operator pos:line="298" pos:column="38">*<pos:position pos:line="298" pos:column="39"/></operator> <sizeof pos:line="298" pos:column="40">sizeof<argument_list pos:line="298" pos:column="46">(<argument><expr pos:line="298" pos:column="47">struct <name pos:line="298" pos:column="54">in_addr<pos:position pos:line="298" pos:column="61"/></name></expr></argument>)<pos:position pos:line="298" pos:column="62"/></argument_list></sizeof><operator pos:line="298" pos:column="62">)<pos:position pos:line="298" pos:column="63"/></operator></expr>;<pos:position pos:line="298" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="300" pos:column="5">/* Then read the number of caches */</comment>
    <expr_stmt><expr><call><name pos:line="301" pos:column="5">memcpy<pos:position pos:line="301" pos:column="11"/></name><argument_list pos:line="301" pos:column="11">(<argument><expr><operator pos:line="301" pos:column="12">&amp;<pos:position pos:line="301" pos:column="17"/></operator><name pos:line="301" pos:column="13">tmp<pos:position pos:line="301" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="18">ptr<pos:position pos:line="301" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="301" pos:column="23">sizeof<argument_list pos:line="301" pos:column="29">(<argument><expr><name pos:line="301" pos:column="30">tmp<pos:position pos:line="301" pos:column="33"/></name></expr></argument>)<pos:position pos:line="301" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="301" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="302" pos:column="5">ptr<pos:position pos:line="302" pos:column="8"/></name> <operator pos:line="302" pos:column="9">+=<pos:position pos:line="302" pos:column="11"/></operator> <sizeof pos:line="302" pos:column="12">sizeof<argument_list pos:line="302" pos:column="18">(<argument><expr><name pos:line="302" pos:column="19">tmp<pos:position pos:line="302" pos:column="22"/></name></expr></argument>)<pos:position pos:line="302" pos:column="23"/></argument_list></sizeof></expr>;<pos:position pos:line="302" pos:column="24"/></expr_stmt>

    <if pos:line="304" pos:column="5">if <condition pos:line="304" pos:column="8">(<expr><call><name pos:line="304" pos:column="9">ntohl<pos:position pos:line="304" pos:column="14"/></name><argument_list pos:line="304" pos:column="14">(<argument><expr><name pos:line="304" pos:column="15">tmp<pos:position pos:line="304" pos:column="18"/></name></expr></argument>)<pos:position pos:line="304" pos:column="19"/></argument_list></call> <operator pos:line="304" pos:column="20">!=<pos:position pos:line="304" pos:column="22"/></operator> <literal type="number" pos:line="304" pos:column="23">0<pos:position pos:line="304" pos:column="24"/></literal></expr>)<pos:position pos:line="304" pos:column="25"/></condition><then pos:line="304" pos:column="25"> <block pos:line="304" pos:column="26">{
        <comment type="block" pos:line="305" pos:column="9">/* search through the list of received-from ip addresses */</comment>

        <for pos:line="307" pos:column="9">for <control pos:line="307" pos:column="13">(<init><expr><name pos:line="307" pos:column="14">num_caches<pos:position pos:line="307" pos:column="24"/></name> <operator pos:line="307" pos:column="25">=<pos:position pos:line="307" pos:column="26"/></operator> <literal type="number" pos:line="307" pos:column="27">0<pos:position pos:line="307" pos:column="28"/></literal></expr>;<pos:position pos:line="307" pos:column="29"/></init> <condition><expr><name pos:line="307" pos:column="30">num_caches<pos:position pos:line="307" pos:column="40"/></name> <operator pos:line="307" pos:column="41">&lt;<pos:position pos:line="307" pos:column="45"/></operator> <operator pos:line="307" pos:column="43">(<pos:position pos:line="307" pos:column="44"/></operator><name pos:line="307" pos:column="44">int<pos:position pos:line="307" pos:column="47"/></name><operator pos:line="307" pos:column="47">)<pos:position pos:line="307" pos:column="48"/></operator> <call><name pos:line="307" pos:column="49">ntohl<pos:position pos:line="307" pos:column="54"/></name><argument_list pos:line="307" pos:column="54">(<argument><expr><name pos:line="307" pos:column="55">tmp<pos:position pos:line="307" pos:column="58"/></name></expr></argument>)<pos:position pos:line="307" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="60"/></condition> <incr><expr><operator pos:line="307" pos:column="61">++<pos:position pos:line="307" pos:column="63"/></operator><name pos:line="307" pos:column="63">num_caches<pos:position pos:line="307" pos:column="73"/></name></expr></incr>)<pos:position pos:line="307" pos:column="74"/></control> <block pos:line="307" pos:column="75">{
            <comment type="block" pos:line="308" pos:column="13">/* Get a copy of the ip */</comment>
            <expr_stmt><expr><call><name pos:line="309" pos:column="13">memset<pos:position pos:line="309" pos:column="19"/></name><argument_list pos:line="309" pos:column="19">(<argument><expr><operator pos:line="309" pos:column="20">&amp;<pos:position pos:line="309" pos:column="25"/></operator><name pos:line="309" pos:column="21">cache_address<pos:position pos:line="309" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="309" pos:column="36">0<pos:position pos:line="309" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="309" pos:column="39">sizeof<argument_list pos:line="309" pos:column="45">(<argument><expr><name pos:line="309" pos:column="46">cache_address<pos:position pos:line="309" pos:column="59"/></name></expr></argument>)<pos:position pos:line="309" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="309" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="62"/></expr_stmt> <comment type="line" pos:line="309" pos:column="63">// Make GCC happy</comment>

            <switch pos:line="311" pos:column="13">switch <condition pos:line="311" pos:column="20">(<expr><name><name pos:line="311" pos:column="21">Config<pos:position pos:line="311" pos:column="27"/></name><operator pos:line="311" pos:column="27">.<pos:position pos:line="311" pos:column="28"/></operator><name pos:line="311" pos:column="28">Wccp2<pos:position pos:line="311" pos:column="33"/></name><operator pos:line="311" pos:column="33">.<pos:position pos:line="311" pos:column="34"/></operator><name pos:line="311" pos:column="34">assignment_method<pos:position pos:line="311" pos:column="51"/></name></name></expr>)<pos:position pos:line="311" pos:column="52"/></condition> <block pos:line="311" pos:column="53">{

            <case pos:line="313" pos:column="13">case <expr><name pos:line="313" pos:column="18">WCCP2_ASSIGNMENT_METHOD_HASH<pos:position pos:line="313" pos:column="46"/></name></expr>:<pos:position pos:line="313" pos:column="47"/></case>

                <expr_stmt><expr><name pos:line="315" pos:column="17">cache_identity<pos:position pos:line="315" pos:column="31"/></name> <operator pos:line="315" pos:column="32">=<pos:position pos:line="315" pos:column="33"/></operator> <operator pos:line="315" pos:column="34">(<pos:position pos:line="315" pos:column="35"/></operator>struct <name pos:line="315" pos:column="42">wccp2_cache_identity_info_t<pos:position pos:line="315" pos:column="69"/></name> <operator pos:line="315" pos:column="70">*<pos:position pos:line="315" pos:column="71"/></operator><operator pos:line="315" pos:column="71">)<pos:position pos:line="315" pos:column="72"/></operator> <name pos:line="315" pos:column="73">ptr<pos:position pos:line="315" pos:column="76"/></name></expr>;<pos:position pos:line="315" pos:column="77"/></expr_stmt>

                <expr_stmt><expr><name pos:line="317" pos:column="17">ptr<pos:position pos:line="317" pos:column="20"/></name> <operator pos:line="317" pos:column="21">+=<pos:position pos:line="317" pos:column="23"/></operator> <sizeof pos:line="317" pos:column="24">sizeof<argument_list pos:line="317" pos:column="30">(<argument><expr pos:line="317" pos:column="31">struct <name pos:line="317" pos:column="38">wccp2_cache_identity_info_t<pos:position pos:line="317" pos:column="65"/></name></expr></argument>)<pos:position pos:line="317" pos:column="66"/></argument_list></sizeof></expr>;<pos:position pos:line="317" pos:column="67"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="319" pos:column="17">memcpy<pos:position pos:line="319" pos:column="23"/></name><argument_list pos:line="319" pos:column="23">(<argument><expr><operator pos:line="319" pos:column="24">&amp;<pos:position pos:line="319" pos:column="29"/></operator><name pos:line="319" pos:column="25">cache_address<pos:position pos:line="319" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="319" pos:column="40">&amp;<pos:position pos:line="319" pos:column="45"/></operator><name><name pos:line="319" pos:column="41">cache_identity<pos:position pos:line="319" pos:column="55"/></name><operator pos:line="319" pos:column="55">-&gt;<pos:position pos:line="319" pos:column="60"/></operator><name pos:line="319" pos:column="57">addr<pos:position pos:line="319" pos:column="61"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="319" pos:column="63">sizeof<argument_list pos:line="319" pos:column="69">(<argument><expr pos:line="319" pos:column="70">struct <name pos:line="319" pos:column="77">in_addr<pos:position pos:line="319" pos:column="84"/></name></expr></argument>)<pos:position pos:line="319" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="319" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="87"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="321" pos:column="17">cache_list_ptr<pos:position pos:line="321" pos:column="31"/></name><operator pos:line="321" pos:column="31">-&gt;<pos:position pos:line="321" pos:column="36"/></operator><name pos:line="321" pos:column="33">weight<pos:position pos:line="321" pos:column="39"/></name></name> <operator pos:line="321" pos:column="40">=<pos:position pos:line="321" pos:column="41"/></operator> <call><name pos:line="321" pos:column="42">ntohs<pos:position pos:line="321" pos:column="47"/></name><argument_list pos:line="321" pos:column="47">(<argument><expr><name><name pos:line="321" pos:column="48">cache_identity<pos:position pos:line="321" pos:column="62"/></name><operator pos:line="321" pos:column="62">-&gt;<pos:position pos:line="321" pos:column="67"/></operator><name pos:line="321" pos:column="64">weight<pos:position pos:line="321" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="321" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="72"/></expr_stmt>
                <break pos:line="322" pos:column="17">break;<pos:position pos:line="322" pos:column="23"/></break>

            <case pos:line="324" pos:column="13">case <expr><name pos:line="324" pos:column="18">WCCP2_ASSIGNMENT_METHOD_MASK<pos:position pos:line="324" pos:column="46"/></name></expr>:<pos:position pos:line="324" pos:column="47"/></case>

                <expr_stmt><expr><name pos:line="326" pos:column="17">cache_mask_info<pos:position pos:line="326" pos:column="32"/></name> <operator pos:line="326" pos:column="33">=<pos:position pos:line="326" pos:column="34"/></operator> <operator pos:line="326" pos:column="35">(<pos:position pos:line="326" pos:column="36"/></operator>struct <name pos:line="326" pos:column="43">cache_mask_info_t<pos:position pos:line="326" pos:column="60"/></name> <operator pos:line="326" pos:column="61">*<pos:position pos:line="326" pos:column="62"/></operator><operator pos:line="326" pos:column="62">)<pos:position pos:line="326" pos:column="63"/></operator> <name pos:line="326" pos:column="64">ptr<pos:position pos:line="326" pos:column="67"/></name></expr>;<pos:position pos:line="326" pos:column="68"/></expr_stmt>

                <comment type="block" pos:line="328" pos:column="17">/* The mask assignment has an undocumented variable length entry here */</comment>

                <if pos:line="330" pos:column="17">if <condition pos:line="330" pos:column="20">(<expr><call><name pos:line="330" pos:column="21">ntohl<pos:position pos:line="330" pos:column="26"/></name><argument_list pos:line="330" pos:column="26">(<argument><expr><name><name pos:line="330" pos:column="27">cache_mask_info<pos:position pos:line="330" pos:column="42"/></name><operator pos:line="330" pos:column="42">-&gt;<pos:position pos:line="330" pos:column="47"/></operator><name pos:line="330" pos:column="44">num1<pos:position pos:line="330" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="330" pos:column="49"/></argument_list></call> <operator pos:line="330" pos:column="50">==<pos:position pos:line="330" pos:column="52"/></operator> <literal type="number" pos:line="330" pos:column="53">3<pos:position pos:line="330" pos:column="54"/></literal></expr>)<pos:position pos:line="330" pos:column="55"/></condition><then pos:line="330" pos:column="55"> <block pos:line="330" pos:column="56">{

                    <expr_stmt><expr><name pos:line="332" pos:column="21">cache_mask_identity<pos:position pos:line="332" pos:column="40"/></name> <operator pos:line="332" pos:column="41">=<pos:position pos:line="332" pos:column="42"/></operator> <operator pos:line="332" pos:column="43">(<pos:position pos:line="332" pos:column="44"/></operator>struct <name pos:line="332" pos:column="51">wccp2_cache_mask_identity_info_t<pos:position pos:line="332" pos:column="83"/></name> <operator pos:line="332" pos:column="84">*<pos:position pos:line="332" pos:column="85"/></operator><operator pos:line="332" pos:column="85">)<pos:position pos:line="332" pos:column="86"/></operator> <name pos:line="332" pos:column="87">ptr<pos:position pos:line="332" pos:column="90"/></name></expr>;<pos:position pos:line="332" pos:column="91"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="334" pos:column="21">ptr<pos:position pos:line="334" pos:column="24"/></name> <operator pos:line="334" pos:column="25">+=<pos:position pos:line="334" pos:column="27"/></operator> <sizeof pos:line="334" pos:column="28">sizeof<argument_list pos:line="334" pos:column="34">(<argument><expr pos:line="334" pos:column="35">struct <name pos:line="334" pos:column="42">wccp2_cache_mask_identity_info_t<pos:position pos:line="334" pos:column="74"/></name></expr></argument>)<pos:position pos:line="334" pos:column="75"/></argument_list></sizeof></expr>;<pos:position pos:line="334" pos:column="76"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="336" pos:column="21">memcpy<pos:position pos:line="336" pos:column="27"/></name><argument_list pos:line="336" pos:column="27">(<argument><expr><operator pos:line="336" pos:column="28">&amp;<pos:position pos:line="336" pos:column="33"/></operator><name pos:line="336" pos:column="29">cache_address<pos:position pos:line="336" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="336" pos:column="44">&amp;<pos:position pos:line="336" pos:column="49"/></operator><name><name pos:line="336" pos:column="45">cache_mask_identity<pos:position pos:line="336" pos:column="64"/></name><operator pos:line="336" pos:column="64">-&gt;<pos:position pos:line="336" pos:column="69"/></operator><name pos:line="336" pos:column="66">addr<pos:position pos:line="336" pos:column="70"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="336" pos:column="72">sizeof<argument_list pos:line="336" pos:column="78">(<argument><expr pos:line="336" pos:column="79">struct <name pos:line="336" pos:column="86">in_addr<pos:position pos:line="336" pos:column="93"/></name></expr></argument>)<pos:position pos:line="336" pos:column="94"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="336" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="96"/></expr_stmt>
                }<pos:position pos:line="337" pos:column="18"/></block></then> <else pos:line="337" pos:column="19">else <block pos:line="337" pos:column="24">{

                    <expr_stmt><expr><name pos:line="339" pos:column="21">ptr<pos:position pos:line="339" pos:column="24"/></name> <operator pos:line="339" pos:column="25">+=<pos:position pos:line="339" pos:column="27"/></operator> <sizeof pos:line="339" pos:column="28">sizeof<argument_list pos:line="339" pos:column="34">(<argument><expr pos:line="339" pos:column="35">struct <name pos:line="339" pos:column="42">cache_mask_info_t<pos:position pos:line="339" pos:column="59"/></name></expr></argument>)<pos:position pos:line="339" pos:column="60"/></argument_list></sizeof></expr>;<pos:position pos:line="339" pos:column="61"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="341" pos:column="21">memcpy<pos:position pos:line="341" pos:column="27"/></name><argument_list pos:line="341" pos:column="27">(<argument><expr><operator pos:line="341" pos:column="28">&amp;<pos:position pos:line="341" pos:column="33"/></operator><name pos:line="341" pos:column="29">cache_address<pos:position pos:line="341" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="341" pos:column="44">&amp;<pos:position pos:line="341" pos:column="49"/></operator><name><name pos:line="341" pos:column="45">cache_mask_info<pos:position pos:line="341" pos:column="60"/></name><operator pos:line="341" pos:column="60">-&gt;<pos:position pos:line="341" pos:column="65"/></operator><name pos:line="341" pos:column="62">addr<pos:position pos:line="341" pos:column="66"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="341" pos:column="68">sizeof<argument_list pos:line="341" pos:column="74">(<argument><expr pos:line="341" pos:column="75">struct <name pos:line="341" pos:column="82">in_addr<pos:position pos:line="341" pos:column="89"/></name></expr></argument>)<pos:position pos:line="341" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="341" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="92"/></expr_stmt>
                }<pos:position pos:line="342" pos:column="18"/></block></else></if>

                <expr_stmt><expr><name><name pos:line="344" pos:column="17">cache_list_ptr<pos:position pos:line="344" pos:column="31"/></name><operator pos:line="344" pos:column="31">-&gt;<pos:position pos:line="344" pos:column="36"/></operator><name pos:line="344" pos:column="33">weight<pos:position pos:line="344" pos:column="39"/></name></name> <operator pos:line="344" pos:column="40">=<pos:position pos:line="344" pos:column="41"/></operator> <literal type="number" pos:line="344" pos:column="42">0<pos:position pos:line="344" pos:column="43"/></literal></expr>;<pos:position pos:line="344" pos:column="44"/></expr_stmt>
                <break pos:line="345" pos:column="17">break;<pos:position pos:line="345" pos:column="23"/></break>

            <default pos:line="347" pos:column="13">default:<pos:position pos:line="347" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="348" pos:column="17">fatalf<pos:position pos:line="348" pos:column="23"/></name><argument_list pos:line="348" pos:column="23">(<argument><expr><literal type="string" pos:line="348" pos:column="24">"Unknown Wccp2 assignment method\n"<pos:position pos:line="348" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="348" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="349" pos:column="14"/></block></switch>

            <comment type="block" pos:line="351" pos:column="13">/* Update the cache list */</comment>
            <expr_stmt><expr><name><name pos:line="352" pos:column="13">cache_list_ptr<pos:position pos:line="352" pos:column="27"/></name><operator pos:line="352" pos:column="27">-&gt;<pos:position pos:line="352" pos:column="32"/></operator><name pos:line="352" pos:column="29">cache_ip<pos:position pos:line="352" pos:column="37"/></name></name> <operator pos:line="352" pos:column="38">=<pos:position pos:line="352" pos:column="39"/></operator> <name pos:line="352" pos:column="40">cache_address<pos:position pos:line="352" pos:column="53"/></name></expr>;<pos:position pos:line="352" pos:column="54"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="354" pos:column="13">cache_list_ptr<pos:position pos:line="354" pos:column="27"/></name><operator pos:line="354" pos:column="27">-&gt;<pos:position pos:line="354" pos:column="32"/></operator><name pos:line="354" pos:column="29">next<pos:position pos:line="354" pos:column="33"/></name></name> <operator pos:line="354" pos:column="34">=<pos:position pos:line="354" pos:column="35"/></operator> <operator pos:line="354" pos:column="36">(<pos:position pos:line="354" pos:column="37"/></operator><name pos:line="354" pos:column="37">wccp2_cache_list_t<pos:position pos:line="354" pos:column="55"/></name><operator pos:line="354" pos:column="55">*<pos:position pos:line="354" pos:column="56"/></operator><operator pos:line="354" pos:column="56">)<pos:position pos:line="354" pos:column="57"/></operator> <call><name pos:line="354" pos:column="58">xcalloc<pos:position pos:line="354" pos:column="65"/></name><argument_list pos:line="354" pos:column="65">(<argument><expr><literal type="number" pos:line="354" pos:column="66">1<pos:position pos:line="354" pos:column="67"/></literal></expr></argument>, <argument><expr><sizeof pos:line="354" pos:column="69">sizeof<argument_list pos:line="354" pos:column="75">(<argument><expr pos:line="354" pos:column="76">struct <name pos:line="354" pos:column="83">wccp2_cache_list_t<pos:position pos:line="354" pos:column="101"/></name></expr></argument>)<pos:position pos:line="354" pos:column="102"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="354" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="104"/></expr_stmt>

            <expr_stmt><expr><name pos:line="356" pos:column="13">cache_list_ptr<pos:position pos:line="356" pos:column="27"/></name> <operator pos:line="356" pos:column="28">=<pos:position pos:line="356" pos:column="29"/></operator> <name><name pos:line="356" pos:column="30">cache_list_ptr<pos:position pos:line="356" pos:column="44"/></name><operator pos:line="356" pos:column="44">-&gt;<pos:position pos:line="356" pos:column="49"/></operator><name pos:line="356" pos:column="46">next<pos:position pos:line="356" pos:column="50"/></name></name></expr>;<pos:position pos:line="356" pos:column="51"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="358" pos:column="13">cache_list_ptr<pos:position pos:line="358" pos:column="27"/></name><operator pos:line="358" pos:column="27">-&gt;<pos:position pos:line="358" pos:column="32"/></operator><name pos:line="358" pos:column="29">next<pos:position pos:line="358" pos:column="33"/></name></name> <operator pos:line="358" pos:column="34">=<pos:position pos:line="358" pos:column="35"/></operator> <name pos:line="358" pos:column="36">NULL<pos:position pos:line="358" pos:column="40"/></name></expr>;<pos:position pos:line="358" pos:column="41"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="360" pos:column="13">debugs<pos:position pos:line="360" pos:column="19"/></name> <argument_list pos:line="360" pos:column="20">(<argument><expr><literal type="number" pos:line="360" pos:column="21">80<pos:position pos:line="360" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="360" pos:column="25">5<pos:position pos:line="360" pos:column="26"/></literal></expr></argument>,  <argument><expr><literal type="string" pos:line="360" pos:column="29">"checking cache list: ("<pos:position pos:line="360" pos:column="53"/></literal> <operator pos:line="360" pos:column="54">&lt;&lt;<pos:position pos:line="360" pos:column="62"/></operator> <name><name pos:line="360" pos:column="57">std<pos:position pos:line="360" pos:column="60"/></name><operator pos:line="360" pos:column="60">::<pos:position pos:line="360" pos:column="62"/></operator><name pos:line="360" pos:column="62">hex<pos:position pos:line="360" pos:column="65"/></name></name> <operator pos:line="360" pos:column="66">&lt;&lt;<pos:position pos:line="360" pos:column="74"/></operator> <name><name pos:line="360" pos:column="69">cache_address<pos:position pos:line="360" pos:column="82"/></name><operator pos:line="360" pos:column="82">.<pos:position pos:line="360" pos:column="83"/></operator><name pos:line="360" pos:column="83">s_addr<pos:position pos:line="360" pos:column="89"/></name></name> <operator pos:line="360" pos:column="90">&lt;&lt;<pos:position pos:line="360" pos:column="98"/></operator> <literal type="string" pos:line="360" pos:column="93">":"<pos:position pos:line="360" pos:column="96"/></literal> <operator pos:line="360" pos:column="97">&lt;&lt;<pos:position pos:line="360" pos:column="105"/></operator>  <name><name pos:line="360" pos:column="101">router_list_ptr<pos:position pos:line="360" pos:column="116"/></name><operator pos:line="360" pos:column="116">-&gt;<pos:position pos:line="360" pos:column="121"/></operator><name pos:line="360" pos:column="118">local_ip<pos:position pos:line="360" pos:column="126"/></name><operator pos:line="360" pos:column="126">.<pos:position pos:line="360" pos:column="127"/></operator><name pos:line="360" pos:column="127">s_addr<pos:position pos:line="360" pos:column="133"/></name></name> <operator pos:line="360" pos:column="134">&lt;&lt;<pos:position pos:line="360" pos:column="142"/></operator> <literal type="string" pos:line="360" pos:column="137">")"<pos:position pos:line="360" pos:column="140"/></literal></expr></argument>)<pos:position pos:line="360" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="142"/></expr_stmt>

            <comment type="block" pos:line="362" pos:column="13">/* Check to see if it's the master, or us */</comment>

            <if pos:line="364" pos:column="13">if <condition pos:line="364" pos:column="16">(<expr><name><name pos:line="364" pos:column="17">cache_address<pos:position pos:line="364" pos:column="30"/></name><operator pos:line="364" pos:column="30">.<pos:position pos:line="364" pos:column="31"/></operator><name pos:line="364" pos:column="31">s_addr<pos:position pos:line="364" pos:column="37"/></name></name> <operator pos:line="364" pos:column="38">==<pos:position pos:line="364" pos:column="40"/></operator> <name><name pos:line="364" pos:column="41">router_list_ptr<pos:position pos:line="364" pos:column="56"/></name><operator pos:line="364" pos:column="56">-&gt;<pos:position pos:line="364" pos:column="61"/></operator><name pos:line="364" pos:column="58">local_ip<pos:position pos:line="364" pos:column="66"/></name><operator pos:line="364" pos:column="66">.<pos:position pos:line="364" pos:column="67"/></operator><name pos:line="364" pos:column="67">s_addr<pos:position pos:line="364" pos:column="73"/></name></name></expr>)<pos:position pos:line="364" pos:column="74"/></condition><then pos:line="364" pos:column="74"> <block pos:line="364" pos:column="75">{
                <expr_stmt><expr><name pos:line="365" pos:column="17">found<pos:position pos:line="365" pos:column="22"/></name> <operator pos:line="365" pos:column="23">=<pos:position pos:line="365" pos:column="24"/></operator> <literal type="number" pos:line="365" pos:column="25">1<pos:position pos:line="365" pos:column="26"/></literal></expr>;<pos:position pos:line="365" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="366" pos:column="14"/></block></then></if>

            <if pos:line="368" pos:column="13">if <condition pos:line="368" pos:column="16">(<expr><name><name pos:line="368" pos:column="17">cache_address<pos:position pos:line="368" pos:column="30"/></name><operator pos:line="368" pos:column="30">.<pos:position pos:line="368" pos:column="31"/></operator><name pos:line="368" pos:column="31">s_addr<pos:position pos:line="368" pos:column="37"/></name></name> <operator pos:line="368" pos:column="38">&lt;<pos:position pos:line="368" pos:column="42"/></operator> <name><name pos:line="368" pos:column="40">router_list_ptr<pos:position pos:line="368" pos:column="55"/></name><operator pos:line="368" pos:column="55">-&gt;<pos:position pos:line="368" pos:column="60"/></operator><name pos:line="368" pos:column="57">local_ip<pos:position pos:line="368" pos:column="65"/></name><operator pos:line="368" pos:column="65">.<pos:position pos:line="368" pos:column="66"/></operator><name pos:line="368" pos:column="66">s_addr<pos:position pos:line="368" pos:column="72"/></name></name></expr>)<pos:position pos:line="368" pos:column="73"/></condition><then pos:line="368" pos:column="73"> <block pos:line="368" pos:column="74">{
                <expr_stmt><expr><name><name pos:line="369" pos:column="17">service_list_ptr<pos:position pos:line="369" pos:column="33"/></name><operator pos:line="369" pos:column="33">-&gt;<pos:position pos:line="369" pos:column="38"/></operator><name pos:line="369" pos:column="35">lowest_ip<pos:position pos:line="369" pos:column="44"/></name></name> <operator pos:line="369" pos:column="45">=<pos:position pos:line="369" pos:column="46"/></operator> <literal type="number" pos:line="369" pos:column="47">0<pos:position pos:line="369" pos:column="48"/></literal></expr>;<pos:position pos:line="369" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="370" pos:column="14"/></block></then></if>
        }<pos:position pos:line="371" pos:column="10"/></block></for>
    }<pos:position pos:line="372" pos:column="6"/></block></then> <else pos:line="372" pos:column="7">else <block pos:line="372" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="373" pos:column="9">debugs<pos:position pos:line="373" pos:column="15"/></name><argument_list pos:line="373" pos:column="15">(<argument><expr><literal type="number" pos:line="373" pos:column="16">80<pos:position pos:line="373" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="373" pos:column="20">5<pos:position pos:line="373" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="373" pos:column="23">"Adding ourselves as the only cache"<pos:position pos:line="373" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="373" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="61"/></expr_stmt>

        <comment type="block" pos:line="375" pos:column="9">/* Update the cache list */</comment>
        <expr_stmt><expr><name><name pos:line="376" pos:column="9">cache_list_ptr<pos:position pos:line="376" pos:column="23"/></name><operator pos:line="376" pos:column="23">-&gt;<pos:position pos:line="376" pos:column="28"/></operator><name pos:line="376" pos:column="25">cache_ip<pos:position pos:line="376" pos:column="33"/></name></name> <operator pos:line="376" pos:column="34">=<pos:position pos:line="376" pos:column="35"/></operator> <name><name pos:line="376" pos:column="36">router_list_ptr<pos:position pos:line="376" pos:column="51"/></name><operator pos:line="376" pos:column="51">-&gt;<pos:position pos:line="376" pos:column="56"/></operator><name pos:line="376" pos:column="53">local_ip<pos:position pos:line="376" pos:column="61"/></name></name></expr>;<pos:position pos:line="376" pos:column="62"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="378" pos:column="9">cache_list_ptr<pos:position pos:line="378" pos:column="23"/></name><operator pos:line="378" pos:column="23">-&gt;<pos:position pos:line="378" pos:column="28"/></operator><name pos:line="378" pos:column="25">next<pos:position pos:line="378" pos:column="29"/></name></name> <operator pos:line="378" pos:column="30">=<pos:position pos:line="378" pos:column="31"/></operator> <operator pos:line="378" pos:column="32">(<pos:position pos:line="378" pos:column="33"/></operator><name pos:line="378" pos:column="33">wccp2_cache_list_t<pos:position pos:line="378" pos:column="51"/></name><operator pos:line="378" pos:column="51">*<pos:position pos:line="378" pos:column="52"/></operator><operator pos:line="378" pos:column="52">)<pos:position pos:line="378" pos:column="53"/></operator> <call><name pos:line="378" pos:column="54">xcalloc<pos:position pos:line="378" pos:column="61"/></name><argument_list pos:line="378" pos:column="61">(<argument><expr><literal type="number" pos:line="378" pos:column="62">1<pos:position pos:line="378" pos:column="63"/></literal></expr></argument>, <argument><expr><sizeof pos:line="378" pos:column="65">sizeof<argument_list pos:line="378" pos:column="71">(<argument><expr pos:line="378" pos:column="72">struct <name pos:line="378" pos:column="79">wccp2_cache_list_t<pos:position pos:line="378" pos:column="97"/></name></expr></argument>)<pos:position pos:line="378" pos:column="98"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="378" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="100"/></expr_stmt>
        <expr_stmt><expr><name pos:line="379" pos:column="9">cache_list_ptr<pos:position pos:line="379" pos:column="23"/></name> <operator pos:line="379" pos:column="24">=<pos:position pos:line="379" pos:column="25"/></operator> <name><name pos:line="379" pos:column="26">cache_list_ptr<pos:position pos:line="379" pos:column="40"/></name><operator pos:line="379" pos:column="40">-&gt;<pos:position pos:line="379" pos:column="45"/></operator><name pos:line="379" pos:column="42">next<pos:position pos:line="379" pos:column="46"/></name></name></expr>;<pos:position pos:line="379" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="380" pos:column="9">cache_list_ptr<pos:position pos:line="380" pos:column="23"/></name><operator pos:line="380" pos:column="23">-&gt;<pos:position pos:line="380" pos:column="28"/></operator><name pos:line="380" pos:column="25">next<pos:position pos:line="380" pos:column="29"/></name></name> <operator pos:line="380" pos:column="30">=<pos:position pos:line="380" pos:column="31"/></operator> <name pos:line="380" pos:column="32">NULL<pos:position pos:line="380" pos:column="36"/></name></expr>;<pos:position pos:line="380" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="382" pos:column="9">service_list_ptr<pos:position pos:line="382" pos:column="25"/></name><operator pos:line="382" pos:column="25">-&gt;<pos:position pos:line="382" pos:column="30"/></operator><name pos:line="382" pos:column="27">lowest_ip<pos:position pos:line="382" pos:column="36"/></name></name> <operator pos:line="382" pos:column="37">=<pos:position pos:line="382" pos:column="38"/></operator> <literal type="number" pos:line="382" pos:column="39">1<pos:position pos:line="382" pos:column="40"/></literal></expr>;<pos:position pos:line="382" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="383" pos:column="9">found<pos:position pos:line="383" pos:column="14"/></name> <operator pos:line="383" pos:column="15">=<pos:position pos:line="383" pos:column="16"/></operator> <literal type="number" pos:line="383" pos:column="17">1<pos:position pos:line="383" pos:column="18"/></literal></expr>;<pos:position pos:line="383" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="384" pos:column="9">num_caches<pos:position pos:line="384" pos:column="19"/></name> <operator pos:line="384" pos:column="20">=<pos:position pos:line="384" pos:column="21"/></operator> <literal type="number" pos:line="384" pos:column="22">1<pos:position pos:line="384" pos:column="23"/></literal></expr>;<pos:position pos:line="384" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="385" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="387" pos:column="5">wccp2SortCacheList<pos:position pos:line="387" pos:column="23"/></name><argument_list pos:line="387" pos:column="23">(<argument><expr><operator pos:line="387" pos:column="24">&amp;<pos:position pos:line="387" pos:column="29"/></operator><name><name pos:line="387" pos:column="25">router_list_ptr<pos:position pos:line="387" pos:column="40"/></name><operator pos:line="387" pos:column="40">-&gt;<pos:position pos:line="387" pos:column="45"/></operator><name pos:line="387" pos:column="42">cache_list_head<pos:position pos:line="387" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="387" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="389" pos:column="5">router_list_ptr<pos:position pos:line="389" pos:column="20"/></name><operator pos:line="389" pos:column="20">-&gt;<pos:position pos:line="389" pos:column="25"/></operator><name pos:line="389" pos:column="22">num_caches<pos:position pos:line="389" pos:column="32"/></name></name> <operator pos:line="389" pos:column="33">=<pos:position pos:line="389" pos:column="34"/></operator> <call><name pos:line="389" pos:column="35">htonl<pos:position pos:line="389" pos:column="40"/></name><argument_list pos:line="389" pos:column="40">(<argument><expr><name pos:line="389" pos:column="41">num_caches<pos:position pos:line="389" pos:column="51"/></name></expr></argument>)<pos:position pos:line="389" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="53"/></expr_stmt>

    <if pos:line="391" pos:column="5">if <condition pos:line="391" pos:column="8">(<expr><operator pos:line="391" pos:column="9">(<pos:position pos:line="391" pos:column="10"/></operator><name pos:line="391" pos:column="10">found<pos:position pos:line="391" pos:column="15"/></name> <operator pos:line="391" pos:column="16">==<pos:position pos:line="391" pos:column="18"/></operator> <literal type="number" pos:line="391" pos:column="19">1<pos:position pos:line="391" pos:column="20"/></literal><operator pos:line="391" pos:column="20">)<pos:position pos:line="391" pos:column="21"/></operator> <operator pos:line="391" pos:column="22">&amp;&amp;<pos:position pos:line="391" pos:column="32"/></operator> <operator pos:line="391" pos:column="25">(<pos:position pos:line="391" pos:column="26"/></operator><name><name pos:line="391" pos:column="26">service_list_ptr<pos:position pos:line="391" pos:column="42"/></name><operator pos:line="391" pos:column="42">-&gt;<pos:position pos:line="391" pos:column="47"/></operator><name pos:line="391" pos:column="44">lowest_ip<pos:position pos:line="391" pos:column="53"/></name></name> <operator pos:line="391" pos:column="54">==<pos:position pos:line="391" pos:column="56"/></operator> <literal type="number" pos:line="391" pos:column="57">1<pos:position pos:line="391" pos:column="58"/></literal><operator pos:line="391" pos:column="58">)<pos:position pos:line="391" pos:column="59"/></operator></expr>)<pos:position pos:line="391" pos:column="60"/></condition><then pos:line="391" pos:column="60"> <block pos:line="391" pos:column="61">{
        <if pos:line="392" pos:column="9">if <condition pos:line="392" pos:column="12">(<expr><call><name pos:line="392" pos:column="13">ntohl<pos:position pos:line="392" pos:column="18"/></name><argument_list pos:line="392" pos:column="18">(<argument><expr><name><name pos:line="392" pos:column="19">router_view_header<pos:position pos:line="392" pos:column="37"/></name><operator pos:line="392" pos:column="37">-&gt;<pos:position pos:line="392" pos:column="42"/></operator><name pos:line="392" pos:column="39">change_number<pos:position pos:line="392" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="392" pos:column="53"/></argument_list></call> <operator pos:line="392" pos:column="54">!=<pos:position pos:line="392" pos:column="56"/></operator> <name><name pos:line="392" pos:column="57">router_list_ptr<pos:position pos:line="392" pos:column="72"/></name><operator pos:line="392" pos:column="72">-&gt;<pos:position pos:line="392" pos:column="77"/></operator><name pos:line="392" pos:column="74">member_change<pos:position pos:line="392" pos:column="87"/></name></name></expr>)<pos:position pos:line="392" pos:column="88"/></condition><then pos:line="392" pos:column="88"> <block pos:line="392" pos:column="89">{
            <expr_stmt><expr><call><name pos:line="393" pos:column="13">debugs<pos:position pos:line="393" pos:column="19"/></name><argument_list pos:line="393" pos:column="19">(<argument><expr><literal type="number" pos:line="393" pos:column="20">80<pos:position pos:line="393" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="393" pos:column="24">4<pos:position pos:line="393" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="393" pos:column="27">"Change detected - queueing up new assignment"<pos:position pos:line="393" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="393" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="394" pos:column="13">router_list_ptr<pos:position pos:line="394" pos:column="28"/></name><operator pos:line="394" pos:column="28">-&gt;<pos:position pos:line="394" pos:column="33"/></operator><name pos:line="394" pos:column="30">member_change<pos:position pos:line="394" pos:column="43"/></name></name> <operator pos:line="394" pos:column="44">=<pos:position pos:line="394" pos:column="45"/></operator> <call><name pos:line="394" pos:column="46">ntohl<pos:position pos:line="394" pos:column="51"/></name><argument_list pos:line="394" pos:column="51">(<argument><expr><name><name pos:line="394" pos:column="52">router_view_header<pos:position pos:line="394" pos:column="70"/></name><operator pos:line="394" pos:column="70">-&gt;<pos:position pos:line="394" pos:column="75"/></operator><name pos:line="394" pos:column="72">change_number<pos:position pos:line="394" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="394" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="87"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="395" pos:column="13">eventDelete<pos:position pos:line="395" pos:column="24"/></name><argument_list pos:line="395" pos:column="24">(<argument><expr><name pos:line="395" pos:column="25">wccp2AssignBuckets<pos:position pos:line="395" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="45">NULL<pos:position pos:line="395" pos:column="49"/></name></expr></argument>)<pos:position pos:line="395" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="396" pos:column="13">eventAdd<pos:position pos:line="396" pos:column="21"/></name><argument_list pos:line="396" pos:column="21">(<argument><expr><literal type="string" pos:line="396" pos:column="22">"wccp2AssignBuckets"<pos:position pos:line="396" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="396" pos:column="44">wccp2AssignBuckets<pos:position pos:line="396" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="64">NULL<pos:position pos:line="396" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="396" pos:column="70">15.0<pos:position pos:line="396" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="396" pos:column="76">1<pos:position pos:line="396" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="396" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="397" pos:column="10"/></block></then> <else pos:line="397" pos:column="11">else <block pos:line="397" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="398" pos:column="13">debugs<pos:position pos:line="398" pos:column="19"/></name><argument_list pos:line="398" pos:column="19">(<argument><expr><literal type="number" pos:line="398" pos:column="20">80<pos:position pos:line="398" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="398" pos:column="24">5<pos:position pos:line="398" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="398" pos:column="27">"Change not detected ("<pos:position pos:line="398" pos:column="50"/></literal> <operator pos:line="398" pos:column="51">&lt;&lt;<pos:position pos:line="398" pos:column="59"/></operator> <call><name pos:line="398" pos:column="54">ntohl<pos:position pos:line="398" pos:column="59"/></name><argument_list pos:line="398" pos:column="59">(<argument><expr><name><name pos:line="398" pos:column="60">router_view_header<pos:position pos:line="398" pos:column="78"/></name><operator pos:line="398" pos:column="78">-&gt;<pos:position pos:line="398" pos:column="83"/></operator><name pos:line="398" pos:column="80">change_number<pos:position pos:line="398" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="398" pos:column="94"/></argument_list></call> <operator pos:line="398" pos:column="95">&lt;&lt;<pos:position pos:line="398" pos:column="103"/></operator> <literal type="string" pos:line="398" pos:column="98">" = "<pos:position pos:line="398" pos:column="103"/></literal> <operator pos:line="398" pos:column="104">&lt;&lt;<pos:position pos:line="398" pos:column="112"/></operator> <name><name pos:line="398" pos:column="107">router_list_ptr<pos:position pos:line="398" pos:column="122"/></name><operator pos:line="398" pos:column="122">-&gt;<pos:position pos:line="398" pos:column="127"/></operator><name pos:line="398" pos:column="124">member_change<pos:position pos:line="398" pos:column="137"/></name></name> <operator pos:line="398" pos:column="138">&lt;&lt;<pos:position pos:line="398" pos:column="146"/></operator> <literal type="string" pos:line="398" pos:column="141">")"<pos:position pos:line="398" pos:column="144"/></literal></expr></argument>)<pos:position pos:line="398" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="146"/></expr_stmt>
        }<pos:position pos:line="399" pos:column="10"/></block></else></if>
    }<pos:position pos:line="400" pos:column="6"/></block></then> <else pos:line="400" pos:column="7">else <block pos:line="400" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="401" pos:column="9">eventDelete<pos:position pos:line="401" pos:column="20"/></name><argument_list pos:line="401" pos:column="20">(<argument><expr><name pos:line="401" pos:column="21">wccp2AssignBuckets<pos:position pos:line="401" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="41">NULL<pos:position pos:line="401" pos:column="45"/></name></expr></argument>)<pos:position pos:line="401" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="402" pos:column="9">debugs<pos:position pos:line="402" pos:column="15"/></name><argument_list pos:line="402" pos:column="15">(<argument><expr><literal type="number" pos:line="402" pos:column="16">80<pos:position pos:line="402" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="402" pos:column="20">5<pos:position pos:line="402" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="402" pos:column="23">"I am not the lowest ip cache - not assigning buckets"<pos:position pos:line="402" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="402" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="403" pos:column="6"/></block></else></if>
}<pos:position pos:line="404" pos:column="2"/></block></function></unit>

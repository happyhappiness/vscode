<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2071_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreController<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">syncCollapsed<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">sfileno<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">xitIndex<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">transients<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StoreEntry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">collapsed<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name><name pos:line="6" pos:column="29">transients<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">findCollapsed<pos:position pos:line="6" pos:column="54"/></name></name><argument_list pos:line="6" pos:column="54">(<argument><expr><name pos:line="6" pos:column="55">xitIndex<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="65"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">collapsed<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{ <comment type="line" pos:line="7" pos:column="23">// the entry is no longer locally active, ignore update</comment>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">20<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">7<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"not SMP-syncing not-transient "<pos:position pos:line="8" pos:column="55"/></literal> <operator pos:line="8" pos:column="56">&lt;&lt;<pos:position pos:line="8" pos:column="64"/></operator> <name pos:line="8" pos:column="59">xitIndex<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">collapsed<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">mem_obj<pos:position pos:line="11" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">collapsed<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">mem_obj<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">smpCollapsed<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">20<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">7<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"syncing "<pos:position pos:line="14" pos:column="29"/></literal> <operator pos:line="14" pos:column="30">&lt;&lt;<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="33">*<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">collapsed<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">bool<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">abandoned<pos:position pos:line="16" pos:column="19"/></name> <init pos:line="16" pos:column="20">= <expr><call><name><name pos:line="16" pos:column="22">transients<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">abandoned<pos:position pos:line="16" pos:column="43"/></name></name><argument_list pos:line="16" pos:column="43">(<argument><expr><operator pos:line="16" pos:column="44">*<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="45">collapsed<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">bool<pos:position pos:line="17" pos:column="9"/></name></type> <name pos:line="17" pos:column="10">found<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><literal type="boolean" pos:line="17" pos:column="18">false<pos:position pos:line="17" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">bool<pos:position pos:line="18" pos:column="9"/></name></type> <name pos:line="18" pos:column="10">inSync<pos:position pos:line="18" pos:column="16"/></name> <init pos:line="18" pos:column="17">= <expr><literal type="boolean" pos:line="18" pos:column="19">false<pos:position pos:line="18" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">memStore<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">&amp;&amp;<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="21">collapsed<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">mem_obj<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">memCache<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">io<pos:position pos:line="19" pos:column="52"/></name></name> <operator pos:line="19" pos:column="53">==<pos:position pos:line="19" pos:column="55"/></operator> <name><name pos:line="19" pos:column="56">MemObject<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">::<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="67">ioDone<pos:position pos:line="19" pos:column="73"/></name></name></expr>)<pos:position pos:line="19" pos:column="74"/></condition><then pos:line="19" pos:column="74"> <block pos:line="19" pos:column="75">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">found<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="boolean" pos:line="20" pos:column="17">true<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">inSync<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="boolean" pos:line="21" pos:column="18">true<pos:position pos:line="21" pos:column="22"/></literal></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">20<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">7<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"fully mem-loaded "<pos:position pos:line="22" pos:column="42"/></literal> <operator pos:line="22" pos:column="43">&lt;&lt;<pos:position pos:line="22" pos:column="51"/></operator> <operator pos:line="22" pos:column="46">*<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">collapsed<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">memStore<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&amp;&amp;<pos:position pos:line="23" pos:column="35"/></operator> <name><name pos:line="23" pos:column="28">collapsed<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">mem_obj<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">memCache<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">index<pos:position pos:line="23" pos:column="62"/></name></name> <operator pos:line="23" pos:column="63">&gt;=<pos:position pos:line="23" pos:column="68"/></operator> <literal type="number" pos:line="23" pos:column="66">0<pos:position pos:line="23" pos:column="67"/></literal></expr>)<pos:position pos:line="23" pos:column="68"/></condition><then pos:line="23" pos:column="68"> <block pos:line="23" pos:column="69">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">found<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <literal type="boolean" pos:line="24" pos:column="17">true<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">inSync<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name><name pos:line="25" pos:column="18">memStore<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">updateCollapsed<pos:position pos:line="25" pos:column="43"/></name></name><argument_list pos:line="25" pos:column="43">(<argument><expr><operator pos:line="25" pos:column="44">*<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">collapsed<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif> <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><name><name pos:line="26" pos:column="16">collapsed<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">swap_filen<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">&gt;=<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="41">0<pos:position pos:line="26" pos:column="42"/></literal></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">found<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="boolean" pos:line="27" pos:column="17">true<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">inSync<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name><name pos:line="28" pos:column="18">collapsed<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">store<pos:position pos:line="28" pos:column="34"/></name></name><argument_list pos:line="28" pos:column="34">()<pos:position pos:line="28" pos:column="36"/></argument_list></call><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><call><name pos:line="28" pos:column="38">updateCollapsed<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><operator pos:line="28" pos:column="54">*<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="55">collapsed<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif> <else pos:line="29" pos:column="7">else <block pos:line="29" pos:column="12">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">found<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">anchorCollapsed<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><operator pos:line="30" pos:column="33">*<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">collapsed<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">inSync<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">abandoned<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&amp;&amp;<pos:position pos:line="33" pos:column="29"/></operator> <name><name pos:line="33" pos:column="22">collapsed<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">store_status<pos:position pos:line="33" pos:column="45"/></name></name> <operator pos:line="33" pos:column="46">==<pos:position pos:line="33" pos:column="48"/></operator> <name pos:line="33" pos:column="49">STORE_PENDING<pos:position pos:line="33" pos:column="62"/></name></expr>)<pos:position pos:line="33" pos:column="63"/></condition><then pos:line="33" pos:column="63"> <block pos:line="33" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debugs<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="number" pos:line="34" pos:column="16">20<pos:position pos:line="34" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="20">3<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">"aborting abandoned but STORE_PENDING "<pos:position pos:line="34" pos:column="62"/></literal> <operator pos:line="34" pos:column="63">&lt;&lt;<pos:position pos:line="34" pos:column="71"/></operator> <operator pos:line="34" pos:column="66">*<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="67">collapsed<pos:position pos:line="34" pos:column="76"/></name></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="35" pos:column="9">collapsed<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">abort<pos:position pos:line="35" pos:column="25"/></name></name><argument_list pos:line="35" pos:column="25">()<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
        <return pos:line="36" pos:column="9">return;<pos:position pos:line="36" pos:column="16"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">inSync<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16"> <block pos:line="39" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debugs<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="number" pos:line="40" pos:column="16">20<pos:position pos:line="40" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="20">5<pos:position pos:line="40" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="23">"synced "<pos:position pos:line="40" pos:column="32"/></literal> <operator pos:line="40" pos:column="33">&lt;&lt;<pos:position pos:line="40" pos:column="41"/></operator> <operator pos:line="40" pos:column="36">*<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="37">collapsed<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="41" pos:column="9">collapsed<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">invokeHandlers<pos:position pos:line="41" pos:column="34"/></name></name><argument_list pos:line="41" pos:column="34">()<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then> <elseif pos:line="42" pos:column="7">else <if pos:line="42" pos:column="12">if <condition pos:line="42" pos:column="15">(<expr><name pos:line="42" pos:column="16">found<pos:position pos:line="42" pos:column="21"/></name></expr>)<pos:position pos:line="42" pos:column="22"/></condition><then pos:line="42" pos:column="22"> <block pos:line="42" pos:column="23">{ <comment type="line" pos:line="42" pos:column="25">// unrecoverable problem syncing this entry</comment>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">20<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="20">3<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="23">"aborting unsyncable "<pos:position pos:line="43" pos:column="45"/></literal> <operator pos:line="43" pos:column="46">&lt;&lt;<pos:position pos:line="43" pos:column="54"/></operator> <operator pos:line="43" pos:column="49">*<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="50">collapsed<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="44" pos:column="9">collapsed<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">-&gt;<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="20">abort<pos:position pos:line="44" pos:column="25"/></name></name><argument_list pos:line="44" pos:column="25">()<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if></elseif> <else pos:line="45" pos:column="7">else <block pos:line="45" pos:column="12">{ <comment type="line" pos:line="45" pos:column="14">// the entry is still not in one of the caches</comment>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">debugs<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="number" pos:line="46" pos:column="16">20<pos:position pos:line="46" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="20">7<pos:position pos:line="46" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="23">"waiting "<pos:position pos:line="46" pos:column="33"/></literal> <operator pos:line="46" pos:column="34">&lt;&lt;<pos:position pos:line="46" pos:column="42"/></operator> <operator pos:line="46" pos:column="37">*<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="38">collapsed<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

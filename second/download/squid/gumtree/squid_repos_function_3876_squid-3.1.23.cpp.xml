<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3876_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">waitForService<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">()<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><operator pos:line="3" pos:column="10">!<pos:position pos:line="3" pos:column="11"/></operator><name><name pos:line="3" pos:column="11">state<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">.<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">serviceWaiting<pos:position pos:line="3" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">7<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"will wait for the ICAP service"<pos:position pos:line="4" pos:column="59"/></literal> <operator pos:line="4" pos:column="60">&lt;&lt;<pos:position pos:line="4" pos:column="68"/></operator> <call><name pos:line="4" pos:column="63">status<pos:position pos:line="4" pos:column="69"/></name><argument_list pos:line="4" pos:column="69">()<pos:position pos:line="4" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="73"/></expr_stmt>
    <typedef pos:line="5" pos:column="5">typedef <type><name><name pos:line="5" pos:column="13">NullaryMemFunT<pos:position pos:line="5" pos:column="27"/></name><argument_list type="generic" pos:line="5" pos:column="27">&lt;<argument><expr><name pos:line="5" pos:column="28">ModXact<pos:position pos:line="5" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="39"/></argument_list></name></type> <name pos:line="5" pos:column="37">Dialer<pos:position pos:line="5" pos:column="43"/></name>;<pos:position pos:line="5" pos:column="44"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">AsyncCall<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Pointer<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">call<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><call><name pos:line="6" pos:column="31">JobCallback<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><literal type="number" pos:line="6" pos:column="43">93<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="46">5<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>,
                                          <argument><expr><name pos:line="7" pos:column="43">Dialer<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">this<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="57">Adaptation<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">::<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="69">Icap<pos:position pos:line="7" pos:column="73"/></name><operator pos:line="7" pos:column="73">::<pos:position pos:line="7" pos:column="75"/></operator><name pos:line="7" pos:column="75">ModXact<pos:position pos:line="7" pos:column="82"/></name><operator pos:line="7" pos:column="82">::<pos:position pos:line="7" pos:column="84"/></operator><name pos:line="7" pos:column="84">noteServiceReady<pos:position pos:line="7" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="101"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="102"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">service<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">()<pos:position pos:line="8" pos:column="14"/></argument_list></call><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><call><name pos:line="8" pos:column="15">callWhenReady<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">call<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">state<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">.<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">serviceWaiting<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <literal type="boolean" pos:line="9" pos:column="28">true<pos:position pos:line="9" pos:column="32"/></literal></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt> <comment type="line" pos:line="9" pos:column="34">// after callWhenReady() which may throw</comment>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

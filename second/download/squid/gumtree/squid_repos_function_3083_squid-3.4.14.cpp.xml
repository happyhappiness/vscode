<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3083_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">storeReplAdd<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">type<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">REMOVALPOLICYCREATE<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">create<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* find the number of currently known repl types */</comment>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">storerepl_list<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">&amp;&amp;<pos:position pos:line="7" pos:column="42"/></operator> <name><name pos:line="7" pos:column="35">storerepl_list<pos:position pos:line="7" pos:column="49"/></name><index pos:line="7" pos:column="49">[<expr><name pos:line="7" pos:column="50">i<pos:position pos:line="7" pos:column="51"/></name></expr>]<pos:position pos:line="7" pos:column="52"/></index></name><operator pos:line="7" pos:column="52">.<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="53">typestr<pos:position pos:line="7" pos:column="60"/></name></expr>;<pos:position pos:line="7" pos:column="61"/></condition> <incr><expr><operator pos:line="7" pos:column="62">++<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="64">i<pos:position pos:line="7" pos:column="65"/></name></expr></incr>)<pos:position pos:line="7" pos:column="66"/></control> <block pos:line="7" pos:column="67">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcmp<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name><name pos:line="8" pos:column="20">storerepl_list<pos:position pos:line="8" pos:column="34"/></name><index pos:line="8" pos:column="34">[<expr><name pos:line="8" pos:column="35">i<pos:position pos:line="8" pos:column="36"/></name></expr>]<pos:position pos:line="8" pos:column="37"/></index></name><operator pos:line="8" pos:column="37">.<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">typestr<pos:position pos:line="8" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="47">type<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call> <operator pos:line="8" pos:column="53">==<pos:position pos:line="8" pos:column="55"/></operator> <literal type="number" pos:line="8" pos:column="56">0<pos:position pos:line="8" pos:column="57"/></literal></expr>)<pos:position pos:line="8" pos:column="58"/></condition><then pos:line="8" pos:column="58"> <block pos:line="8" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">20<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">DBG_IMPORTANT<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="39">"WARNING: Trying to load store replacement policy "<pos:position pos:line="9" pos:column="90"/></literal> <operator pos:line="9" pos:column="91">&lt;&lt;<pos:position pos:line="9" pos:column="99"/></operator> <name pos:line="9" pos:column="94">type<pos:position pos:line="9" pos:column="98"/></name> <operator pos:line="9" pos:column="99">&lt;&lt;<pos:position pos:line="9" pos:column="107"/></operator> <literal type="string" pos:line="9" pos:column="102">" twice."<pos:position pos:line="9" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="113"/></expr_stmt>
            <return pos:line="10" pos:column="13">return;<pos:position pos:line="10" pos:column="20"/></return>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></for>

    <comment type="block" pos:line="14" pos:column="5">/* add the new type */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">storerepl_list<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <cast type="static" pos:line="15" pos:column="22">static_cast<argument_list type="generic" pos:line="15" pos:column="33">&lt;<argument><expr><name pos:line="15" pos:column="34">storerepl_entry_t<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">*<pos:position pos:line="15" pos:column="53"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="57"/></argument_list><argument_list pos:line="15" pos:column="54">(<argument><expr><call><name pos:line="15" pos:column="55">xrealloc<pos:position pos:line="15" pos:column="63"/></name><argument_list pos:line="15" pos:column="63">(<argument><expr><name pos:line="15" pos:column="64">storerepl_list<pos:position pos:line="15" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="80">(<pos:position pos:line="15" pos:column="81"/></operator><name pos:line="15" pos:column="81">i<pos:position pos:line="15" pos:column="82"/></name> <operator pos:line="15" pos:column="83">+<pos:position pos:line="15" pos:column="84"/></operator> <literal type="number" pos:line="15" pos:column="85">2<pos:position pos:line="15" pos:column="86"/></literal><operator pos:line="15" pos:column="86">)<pos:position pos:line="15" pos:column="87"/></operator> <operator pos:line="15" pos:column="88">*<pos:position pos:line="15" pos:column="89"/></operator> <sizeof pos:line="15" pos:column="90">sizeof<argument_list pos:line="15" pos:column="96">(<argument><expr><name pos:line="15" pos:column="97">storerepl_entry_t<pos:position pos:line="15" pos:column="114"/></name></expr></argument>)<pos:position pos:line="15" pos:column="115"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="117"/></argument_list></cast></expr>;<pos:position pos:line="15" pos:column="118"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">memset<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><operator pos:line="17" pos:column="12">&amp;<pos:position pos:line="17" pos:column="17"/></operator><name><name pos:line="17" pos:column="13">storerepl_list<pos:position pos:line="17" pos:column="27"/></name><index pos:line="17" pos:column="27">[<expr><name pos:line="17" pos:column="28">i<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">+<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="32">1<pos:position pos:line="17" pos:column="33"/></literal></expr>]<pos:position pos:line="17" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="36">0<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="39">sizeof<argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">storerepl_entry_t<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">storerepl_list<pos:position pos:line="19" pos:column="19"/></name><index pos:line="19" pos:column="19">[<expr><name pos:line="19" pos:column="20">i<pos:position pos:line="19" pos:column="21"/></name></expr>]<pos:position pos:line="19" pos:column="22"/></index></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">typestr<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">type<pos:position pos:line="19" pos:column="37"/></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="21" pos:column="5">storerepl_list<pos:position pos:line="21" pos:column="19"/></name><index pos:line="21" pos:column="19">[<expr><name pos:line="21" pos:column="20">i<pos:position pos:line="21" pos:column="21"/></name></expr>]<pos:position pos:line="21" pos:column="22"/></index></name><operator pos:line="21" pos:column="22">.<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">create<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">create<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6005_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">esiKick_t<pos:position pos:line="1" pos:column="10"/></name></type>
<name><name pos:line="2" pos:column="1">ESIContext<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">kick<pos:position pos:line="2" pos:column="17"/></name></name> <parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">this<pos:position pos:line="4" pos:column="17"/></name></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">flags<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">kicked<pos:position pos:line="6" pos:column="21"/></name></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">86<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">5<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"esiKick: Re-entered whilst in progress"<pos:position pos:line="7" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>
        <comment type="line" pos:line="8" pos:column="9">// return ESI_KICK_INPROGRESS;</comment>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="9">++<pos:position pos:line="10" pos:column="11"/></operator><name><name pos:line="10" pos:column="11">flags<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">kicked<pos:position pos:line="10" pos:column="23"/></name></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt></block></else></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">flags<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">detached<pos:position pos:line="12" pos:column="23"/></name></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
        <comment type="block" pos:line="13" pos:column="9">/* we've been detached from - we can't do anything more */</comment>
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">ESI_KICK_FAILED<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* Something has occured. Process any remaining nodes */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">flags<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">finished<pos:position pos:line="17" pos:column="24"/></name></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
        <comment type="block" pos:line="18" pos:column="9">/* Process some of our data */</comment>
        <block type="pseudo"><switch pos:line="19" pos:column="9">switch <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">process<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">()<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="28"/></condition> <block pos:line="19" pos:column="29">{

        <case pos:line="21" pos:column="9">case <expr><name pos:line="21" pos:column="14">ESI_PROCESS_COMPLETE<pos:position pos:line="21" pos:column="34"/></name></expr>:<pos:position pos:line="21" pos:column="35"/></case>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">86<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">5<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">"esiKick: esiProcess OK"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
            <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>

        <case pos:line="25" pos:column="9">case <expr><name pos:line="25" pos:column="14">ESI_PROCESS_PENDING_WONTFAIL<pos:position pos:line="25" pos:column="42"/></name></expr>:<pos:position pos:line="25" pos:column="43"/></case>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">debugs<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="number" pos:line="26" pos:column="20">86<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="24">5<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="27">"esiKick: esiProcess PENDING OK"<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
            <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>

        <case pos:line="29" pos:column="9">case <expr><name pos:line="29" pos:column="14">ESI_PROCESS_PENDING_MAYFAIL<pos:position pos:line="29" pos:column="41"/></name></expr>:<pos:position pos:line="29" pos:column="42"/></case>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">debugs<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><literal type="number" pos:line="30" pos:column="20">86<pos:position pos:line="30" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="24">5<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="27">"esiKick: esiProcess PENDING UNKNOWN"<pos:position pos:line="30" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="66"/></expr_stmt>
            <break pos:line="31" pos:column="13">break;<pos:position pos:line="31" pos:column="19"/></break>

        <case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">ESI_PROCESS_FAILED<pos:position pos:line="33" pos:column="32"/></name></expr>:<pos:position pos:line="33" pos:column="33"/></case>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">86<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="24">2<pos:position pos:line="34" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="27">"esiKick: esiProcess "<pos:position pos:line="34" pos:column="49"/></literal> <operator pos:line="34" pos:column="50">&lt;&lt;<pos:position pos:line="34" pos:column="58"/></operator> <name pos:line="34" pos:column="53">this<pos:position pos:line="34" pos:column="57"/></name> <operator pos:line="34" pos:column="58">&lt;&lt;<pos:position pos:line="34" pos:column="66"/></operator> <literal type="string" pos:line="34" pos:column="61">" FAILED"<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
            <comment type="block" pos:line="35" pos:column="13">/* this can not happen - processing can't fail until we have data,
             * and when we come here we have sent data to the client
             */</comment>

            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name pos:line="39" pos:column="17">pos<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">==<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="24">0<pos:position pos:line="39" pos:column="25"/></literal></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">fail<pos:position pos:line="40" pos:column="21"/></name> <argument_list pos:line="40" pos:column="22">()<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt></block></then></if>

            <expr_stmt><expr><operator pos:line="42" pos:column="13">--<pos:position pos:line="42" pos:column="15"/></operator><name><name pos:line="42" pos:column="15">flags<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">.<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">kicked<pos:position pos:line="42" pos:column="27"/></name></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>

            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">ESI_KICK_FAILED<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></switch></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* Render if we can to get maximal sent data */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">assert<pos:position pos:line="48" pos:column="11"/></name> <argument_list pos:line="48" pos:column="12">(<argument><expr><call><name><name pos:line="48" pos:column="13">tree<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">.<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">getRaw<pos:position pos:line="48" pos:column="24"/></name></name><argument_list pos:line="48" pos:column="24">()<pos:position pos:line="48" pos:column="26"/></argument_list></call> <operator pos:line="48" pos:column="27">||<pos:position pos:line="48" pos:column="29"/></operator> <name><name pos:line="48" pos:column="30">flags<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">.<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">error<pos:position pos:line="48" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">!<pos:position pos:line="50" pos:column="10"/></operator><name><name pos:line="50" pos:column="10">flags<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">.<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">finished<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">&amp;&amp;<pos:position pos:line="50" pos:column="35"/></operator> <operator pos:line="50" pos:column="28">!<pos:position pos:line="50" pos:column="29"/></operator><call><name><name pos:line="50" pos:column="29">outbound<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">.<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="38">getRaw<pos:position pos:line="50" pos:column="44"/></name></name><argument_list pos:line="50" pos:column="44">()<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="47"/></condition><then pos:line="50" pos:column="47"> <block pos:line="50" pos:column="48">{
        <expr_stmt><expr><name pos:line="51" pos:column="9">outboundtail<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <operator pos:line="51" pos:column="24">new<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">ESISegment<pos:position pos:line="51" pos:column="38"/></name></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">outbound<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">outboundtail<pos:position pos:line="52" pos:column="32"/></name></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name><name pos:line="55" pos:column="10">flags<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">.<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">error<pos:position pos:line="55" pos:column="21"/></name></name> <operator pos:line="55" pos:column="22">&amp;&amp;<pos:position pos:line="55" pos:column="32"/></operator> <operator pos:line="55" pos:column="25">!<pos:position pos:line="55" pos:column="26"/></operator><name><name pos:line="55" pos:column="26">flags<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">.<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">finished<pos:position pos:line="55" pos:column="40"/></name></name></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="56" pos:column="9">tree<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">render<pos:position pos:line="56" pos:column="21"/></name></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">outboundtail<pos:position pos:line="56" pos:column="34"/></name></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><name><name pos:line="58" pos:column="10">flags<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">.<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">finished<pos:position pos:line="58" pos:column="24"/></name></name></expr>)<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="9">fixupOutboundTail<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">()<pos:position pos:line="59" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="61" pos:column="5">/* Is there data to send? */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><call><name pos:line="62" pos:column="9">send<pos:position pos:line="62" pos:column="13"/></name> <argument_list pos:line="62" pos:column="14">()<pos:position pos:line="62" pos:column="16"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="17"/></condition><then pos:line="62" pos:column="17"> <block pos:line="62" pos:column="18">{
        <comment type="block" pos:line="63" pos:column="9">/* some data was sent. we're finished until the next read */</comment>
        <expr_stmt><expr><operator pos:line="64" pos:column="9">--<pos:position pos:line="64" pos:column="11"/></operator><name><name pos:line="64" pos:column="11">flags<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">.<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">kicked<pos:position pos:line="64" pos:column="23"/></name></name></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>
        <return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">ESI_KICK_SENT<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="68" pos:column="5">--<pos:position pos:line="68" pos:column="7"/></operator><name><name pos:line="68" pos:column="7">flags<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">.<pos:position pos:line="68" pos:column="13"/></operator><name pos:line="68" pos:column="13">kicked<pos:position pos:line="68" pos:column="19"/></name></name></expr>;<pos:position pos:line="68" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="69" pos:column="5">/* nothing to send */</comment>
    <return pos:line="70" pos:column="5">return <expr><ternary><condition><expr><name><name pos:line="70" pos:column="12">flags<pos:position pos:line="70" pos:column="17"/></name><operator pos:line="70" pos:column="17">.<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">error<pos:position pos:line="70" pos:column="23"/></name></name></expr> ?<pos:position pos:line="70" pos:column="25"/></condition><then pos:line="70" pos:column="25"> <expr><name pos:line="70" pos:column="26">ESI_KICK_FAILED<pos:position pos:line="70" pos:column="41"/></name></expr> <pos:position pos:line="70" pos:column="42"/></then><else pos:line="70" pos:column="42">: <expr><name pos:line="70" pos:column="44">ESI_KICK_PENDING<pos:position pos:line="70" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="70" pos:column="61"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

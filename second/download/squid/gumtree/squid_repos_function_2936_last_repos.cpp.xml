<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2936_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">forgetHit<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name><name pos:line="4" pos:column="21">http<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">storeEntry<pos:position pos:line="4" pos:column="37"/></name></name><argument_list pos:line="4" pos:column="37">()<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">e<pos:position pos:line="5" pos:column="13"/></name></expr></argument>)<pos:position pos:line="5" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt> <comment type="line" pos:line="5" pos:column="16">// or we are not dealing with a hit</comment>
    <comment type="line" pos:line="6" pos:column="5">// We probably have not locked the entry earlier, unfortunately. We lock it</comment>
    <comment type="line" pos:line="7" pos:column="5">// now so that we can unlock two lines later (and trigger cleanup).</comment>
    <comment type="line" pos:line="8" pos:column="5">// Ideally, ClientHttpRequest::storeEntry() should lock/unlock, but it is</comment>
    <comment type="line" pos:line="9" pos:column="5">// used so inconsistently that simply adding locking there leads to bugs.</comment>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">e<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">lock<pos:position pos:line="10" pos:column="12"/></name></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"clientReplyContext::forgetHit"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">http<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">storeEntry<pos:position pos:line="11" pos:column="21"/></name></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">e<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">unlock<pos:position pos:line="12" pos:column="14"/></name></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"clientReplyContext::forgetHit"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt> <comment type="line" pos:line="12" pos:column="49">// may delete e</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

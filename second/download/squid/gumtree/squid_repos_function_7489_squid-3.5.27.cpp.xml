<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7489_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">parse_subtree<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">struct<pos:position pos:line="2" pos:column="21"/></name> <name pos:line="2" pos:column="22">snmp_mib_tree<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">subtree<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">input<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">oid<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">output<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">int<pos:position pos:line="2" pos:column="75"/></name> <modifier pos:line="2" pos:column="76">*<pos:position pos:line="2" pos:column="77"/></modifier></type><name pos:line="2" pos:column="77">out_len<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">128<pos:position pos:line="4" pos:column="17"/></literal></expr>]<pos:position pos:line="4" pos:column="18"/></index></name></decl>, <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="21">to<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">buf<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">u_int<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">subid<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">snmp_mib_tree<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">tp<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
     * No empty strings.  Can happen if there is a trailing '.' or two '.'s
     * in a row, i.e. "..".
     */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">input<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <literal type="char" pos:line="12" pos:column="20">'\0'<pos:position pos:line="12" pos:column="24"/></literal><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator>
            <operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><operator pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">input<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">==<pos:position pos:line="13" pos:column="23"/></operator> <literal type="char" pos:line="13" pos:column="24">'.'<pos:position pos:line="13" pos:column="27"/></literal><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal><operator pos:line="14" pos:column="18">)<pos:position pos:line="14" pos:column="19"/></operator></expr>;<pos:position pos:line="14" pos:column="20"/></return></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">xisdigit<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><operator pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">input<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
        <comment type="block" pos:line="17" pos:column="9">/*
         * Read the number, then try to find it in the subtree.
         */</comment>
        <while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><call><name pos:line="20" pos:column="16">xisdigit<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">input<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="33"/></condition> <block pos:line="20" pos:column="34">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">subid<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">*=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">10<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">subid<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">+=<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">input<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">++<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="31">-<pos:position pos:line="22" pos:column="32"/></operator> <literal type="char" pos:line="22" pos:column="33">'0'<pos:position pos:line="22" pos:column="36"/></literal></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></while>
        <for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">tp<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">subtree<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></init> <condition><expr><name pos:line="24" pos:column="28">tp<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></condition> <incr><expr><name pos:line="24" pos:column="32">tp<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <name><name pos:line="24" pos:column="37">tp<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">next_peer<pos:position pos:line="24" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="51"/></control> <block pos:line="24" pos:column="52">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">tp<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">subid<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">subid<pos:position pos:line="25" pos:column="35"/></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
                <block type="pseudo"><goto pos:line="26" pos:column="17">goto <name pos:line="26" pos:column="22">found<pos:position pos:line="26" pos:column="27"/></name>;<pos:position pos:line="26" pos:column="28"/></goto></block></then></if>
        }<pos:position pos:line="27" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="28" pos:column="9">tp<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">NULL<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then> <else pos:line="29" pos:column="7">else <block pos:line="29" pos:column="12">{
        <comment type="block" pos:line="30" pos:column="9">/*
         * Read the name into a buffer.
         */</comment>
        <while pos:line="33" pos:column="9">while <condition pos:line="33" pos:column="15">(<expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">input<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">!=<pos:position pos:line="33" pos:column="26"/></operator> <literal type="char" pos:line="33" pos:column="27">'\0'<pos:position pos:line="33" pos:column="31"/></literal><operator pos:line="33" pos:column="31">)<pos:position pos:line="33" pos:column="32"/></operator> <operator pos:line="33" pos:column="33">&amp;&amp;<pos:position pos:line="33" pos:column="43"/></operator>
                <operator pos:line="34" pos:column="17">(<pos:position pos:line="34" pos:column="18"/></operator><operator pos:line="34" pos:column="18">*<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">input<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">!=<pos:position pos:line="34" pos:column="27"/></operator> <literal type="char" pos:line="34" pos:column="28">'.'<pos:position pos:line="34" pos:column="31"/></literal><operator pos:line="34" pos:column="31">)<pos:position pos:line="34" pos:column="32"/></operator></expr>)<pos:position pos:line="34" pos:column="33"/></condition> <block pos:line="34" pos:column="34">{
            <expr_stmt><expr><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">to<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">++<pos:position pos:line="35" pos:column="18"/></operator> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="21">*<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">input<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">++<pos:position pos:line="35" pos:column="29"/></operator></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">to<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <literal type="char" pos:line="37" pos:column="15">'\0'<pos:position pos:line="37" pos:column="19"/></literal></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>

        <comment type="block" pos:line="39" pos:column="9">/*
         * Find the name in the subtree;
         */</comment>
        <for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">tp<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">subtree<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></init> <condition><expr><name pos:line="42" pos:column="28">tp<pos:position pos:line="42" pos:column="30"/></name></expr>;<pos:position pos:line="42" pos:column="31"/></condition> <incr><expr><name pos:line="42" pos:column="32">tp<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">=<pos:position pos:line="42" pos:column="36"/></operator> <name><name pos:line="42" pos:column="37">tp<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">next_peer<pos:position pos:line="42" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="42" pos:column="51"/></control> <block pos:line="42" pos:column="52">{
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><call><name pos:line="43" pos:column="17">lc_cmp<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">tp<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">label<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="35">buf<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call> <operator pos:line="43" pos:column="40">==<pos:position pos:line="43" pos:column="42"/></operator> <literal type="number" pos:line="43" pos:column="43">0<pos:position pos:line="43" pos:column="44"/></literal></expr>)<pos:position pos:line="43" pos:column="45"/></condition><then pos:line="43" pos:column="45"> <block pos:line="43" pos:column="46">{
                <expr_stmt><expr><name pos:line="44" pos:column="17">subid<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <name><name pos:line="44" pos:column="25">tp<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">subid<pos:position pos:line="44" pos:column="34"/></name></name></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
                <goto pos:line="45" pos:column="17">goto <name pos:line="45" pos:column="22">found<pos:position pos:line="45" pos:column="27"/></name>;<pos:position pos:line="45" pos:column="28"/></goto>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>
        }<pos:position pos:line="47" pos:column="10"/></block></for>

        <comment type="block" pos:line="49" pos:column="9">/*
         * If we didn't find the entry, punt...
         */</comment>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">tp<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">==<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">NULL<pos:position pos:line="52" pos:column="23"/></name></expr>)<pos:position pos:line="52" pos:column="24"/></condition><then pos:line="52" pos:column="24"> <block pos:line="52" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">snmplib_debug<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><literal type="number" pos:line="53" pos:column="27">0<pos:position pos:line="53" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="30">"sub-identifier not found: %s\n"<pos:position pos:line="53" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="64">buf<pos:position pos:line="53" pos:column="67"/></name></expr></argument>)<pos:position pos:line="53" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="69"/></expr_stmt>
            <return pos:line="54" pos:column="13">return <expr><operator pos:line="54" pos:column="20">(<pos:position pos:line="54" pos:column="21"/></operator><literal type="number" pos:line="54" pos:column="21">0<pos:position pos:line="54" pos:column="22"/></literal><operator pos:line="54" pos:column="22">)<pos:position pos:line="54" pos:column="23"/></operator></expr>;<pos:position pos:line="54" pos:column="24"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>

<label><name pos:line="58" pos:column="1">found<pos:position pos:line="58" pos:column="6"/></name>:<pos:position pos:line="58" pos:column="7"/></label>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">subid<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">&gt;<pos:position pos:line="59" pos:column="19"/></operator> <operator pos:line="59" pos:column="17">(<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">u_int<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">)<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="25">MAX_SUBID<pos:position pos:line="59" pos:column="34"/></name></expr>)<pos:position pos:line="59" pos:column="35"/></condition><then pos:line="59" pos:column="35"> <block pos:line="59" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">snmplib_debug<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><literal type="number" pos:line="60" pos:column="23">0<pos:position pos:line="60" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="26">"sub-identifier too large: %s\n"<pos:position pos:line="60" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="60">buf<pos:position pos:line="60" pos:column="63"/></name></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">0<pos:position pos:line="61" pos:column="18"/></literal><operator pos:line="61" pos:column="18">)<pos:position pos:line="61" pos:column="19"/></operator></expr>;<pos:position pos:line="61" pos:column="20"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">(<pos:position pos:line="63" pos:column="10"/></operator><operator pos:line="63" pos:column="10">*<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="11">out_len<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">)<pos:position pos:line="63" pos:column="19"/></operator><operator pos:line="63" pos:column="19">--<pos:position pos:line="63" pos:column="21"/></operator> <operator pos:line="63" pos:column="22">&lt;=<pos:position pos:line="63" pos:column="27"/></operator> <literal type="number" pos:line="63" pos:column="25">0<pos:position pos:line="63" pos:column="26"/></literal></expr>)<pos:position pos:line="63" pos:column="27"/></condition><then pos:line="63" pos:column="27"> <block pos:line="63" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">snmplib_debug<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><literal type="number" pos:line="64" pos:column="23">0<pos:position pos:line="64" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="26">"object identifier too long\n"<pos:position pos:line="64" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt>
        <return pos:line="65" pos:column="9">return <expr><operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><literal type="number" pos:line="65" pos:column="17">0<pos:position pos:line="65" pos:column="18"/></literal><operator pos:line="65" pos:column="18">)<pos:position pos:line="65" pos:column="19"/></operator></expr>;<pos:position pos:line="65" pos:column="20"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="67" pos:column="5">*<pos:position pos:line="67" pos:column="6"/></operator><name pos:line="67" pos:column="6">output<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">++<pos:position pos:line="67" pos:column="14"/></operator> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <name pos:line="67" pos:column="17">subid<pos:position pos:line="67" pos:column="22"/></name></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">input<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">!=<pos:position pos:line="69" pos:column="18"/></operator> <literal type="char" pos:line="69" pos:column="19">'.'<pos:position pos:line="69" pos:column="22"/></literal></expr>)<pos:position pos:line="69" pos:column="23"/></condition><then pos:line="69" pos:column="23">
        <block type="pseudo"><return pos:line="70" pos:column="9">return <expr><operator pos:line="70" pos:column="16">(<pos:position pos:line="70" pos:column="17"/></operator><literal type="number" pos:line="70" pos:column="17">1<pos:position pos:line="70" pos:column="18"/></literal><operator pos:line="70" pos:column="18">)<pos:position pos:line="70" pos:column="19"/></operator></expr>;<pos:position pos:line="70" pos:column="20"/></return></block></then></if>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><operator pos:line="71" pos:column="9">(<pos:position pos:line="71" pos:column="10"/></operator><operator pos:line="71" pos:column="10">*<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="11">out_len<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator>
                <call><name pos:line="72" pos:column="17">parse_subtree<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><ternary><condition><expr><name pos:line="72" pos:column="31">tp<pos:position pos:line="72" pos:column="33"/></name></expr> ?<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35"> <expr><name><name pos:line="72" pos:column="36">tp<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">-&gt;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="40">child_list<pos:position pos:line="72" pos:column="50"/></name></name></expr> <pos:position pos:line="72" pos:column="51"/></then><else pos:line="72" pos:column="51">: <expr><name pos:line="72" pos:column="53">NULL<pos:position pos:line="72" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="72" pos:column="59">++<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="61">input<pos:position pos:line="72" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="68">output<pos:position pos:line="72" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="76">out_len<pos:position pos:line="72" pos:column="83"/></name></expr></argument>)<pos:position pos:line="72" pos:column="84"/></argument_list></call><operator pos:line="72" pos:column="84">)<pos:position pos:line="72" pos:column="85"/></operator> <operator pos:line="72" pos:column="86">==<pos:position pos:line="72" pos:column="88"/></operator> <literal type="number" pos:line="72" pos:column="89">0<pos:position pos:line="72" pos:column="90"/></literal></expr>)<pos:position pos:line="72" pos:column="91"/></condition><then pos:line="72" pos:column="91">
        <block type="pseudo"><return pos:line="73" pos:column="9">return <expr><operator pos:line="73" pos:column="16">(<pos:position pos:line="73" pos:column="17"/></operator><literal type="number" pos:line="73" pos:column="17">0<pos:position pos:line="73" pos:column="18"/></literal><operator pos:line="73" pos:column="18">)<pos:position pos:line="73" pos:column="19"/></operator></expr>;<pos:position pos:line="73" pos:column="20"/></return></block></then></if>
    <return pos:line="74" pos:column="5">return <expr><operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><operator pos:line="74" pos:column="13">++<pos:position pos:line="74" pos:column="15"/></operator><operator pos:line="74" pos:column="15">*<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="16">out_len<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">)<pos:position pos:line="74" pos:column="24"/></operator></expr>;<pos:position pos:line="74" pos:column="25"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

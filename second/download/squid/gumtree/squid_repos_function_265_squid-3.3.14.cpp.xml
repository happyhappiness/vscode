<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_265_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">clean_nd<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name><name pos:line="2" pos:column="10">struct<pos:position pos:line="2" pos:column="16"/></name> <name pos:line="2" pos:column="17">ndstruct<pos:position pos:line="2" pos:column="25"/></name></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">ndsp<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">ndstruct<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">p<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="33">pp<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">NULL<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">p<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <name pos:line="6" pos:column="9">ndsp<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">p<pos:position pos:line="7" pos:column="13"/></name></expr>)<pos:position pos:line="7" pos:column="14"/></condition> <block pos:line="7" pos:column="15">{
        <while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name><name pos:line="8" pos:column="16">p<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">next<pos:position pos:line="8" pos:column="23"/></name></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition> <block pos:line="8" pos:column="25">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">pp<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">p<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name pos:line="10" pos:column="13">p<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name><name pos:line="10" pos:column="17">p<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">next<pos:position pos:line="10" pos:column="24"/></name></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></while>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">p<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">netbios<pos:position pos:line="12" pos:column="23"/></name></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">xfree<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">p<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">netbios<pos:position pos:line="13" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">p<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">netbios<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">NULL<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">p<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">domain<pos:position pos:line="16" pos:column="22"/></name></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">xfree<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name><name pos:line="17" pos:column="19">p<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">domain<pos:position pos:line="17" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">p<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">domain<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">NULL<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">pp<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">&amp;&amp;<pos:position pos:line="20" pos:column="26"/></operator> <name><name pos:line="20" pos:column="19">pp<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">next<pos:position pos:line="20" pos:column="27"/></name></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">xfree<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name><name pos:line="21" pos:column="19">pp<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">next<pos:position pos:line="21" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">pp<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">next<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">p<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">==<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">ndsp<pos:position pos:line="24" pos:column="22"/></name></expr>)<pos:position pos:line="24" pos:column="23"/></condition><then pos:line="24" pos:column="23"> <block pos:line="24" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">xfree<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">ndsp<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">ndsp<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">NULL<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="28" pos:column="9">p<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <name pos:line="28" pos:column="13">ndsp<pos:position pos:line="28" pos:column="17"/></name></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></while>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

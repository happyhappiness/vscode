<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1833_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">helperDispatch<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">helper_server<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">srv<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="37">Helper<pos:position pos:line="2" pos:column="43"/></name><operator pos:line="2" pos:column="43">::<pos:position pos:line="2" pos:column="45"/></operator><name pos:line="2" pos:column="45">Request<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">r<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">helper<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">hlp<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">srv<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">parent<pos:position pos:line="4" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Helper<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">::<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">Request<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier><modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">ptr<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">slot<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">cbdataReferenceValid<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name><name pos:line="8" pos:column="31">r<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">data<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <block pos:line="8" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">84<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">DBG_IMPORTANT<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="35">"helperDispatch: invalid callback data"<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">delete<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">r<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">slot<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></init> <condition><expr><name pos:line="14" pos:column="20">slot<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">&lt;<pos:position pos:line="14" pos:column="29"/></operator> <operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><ternary><condition><expr><name><name pos:line="14" pos:column="28">hlp<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">childs<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">.<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">concurrency<pos:position pos:line="14" pos:column="51"/></name></name></expr> ?<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53"> <expr><name><name pos:line="14" pos:column="54">hlp<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">-&gt;<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="59">childs<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">.<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="66">concurrency<pos:position pos:line="14" pos:column="77"/></name></name></expr> <pos:position pos:line="14" pos:column="78"/></then><else pos:line="14" pos:column="78">: <expr><literal type="number" pos:line="14" pos:column="80">1<pos:position pos:line="14" pos:column="81"/></literal></expr></else></ternary><operator pos:line="14" pos:column="81">)<pos:position pos:line="14" pos:column="82"/></operator></expr>;<pos:position pos:line="14" pos:column="83"/></condition> <incr><expr><operator pos:line="14" pos:column="84">++<pos:position pos:line="14" pos:column="86"/></operator><name pos:line="14" pos:column="86">slot<pos:position pos:line="14" pos:column="90"/></name></expr></incr>)<pos:position pos:line="14" pos:column="91"/></control> <block pos:line="14" pos:column="92">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">srv<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">requests<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><name pos:line="15" pos:column="28">slot<pos:position pos:line="15" pos:column="32"/></name></expr>]<pos:position pos:line="15" pos:column="33"/></index></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block pos:line="15" pos:column="35">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">ptr<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <operator pos:line="16" pos:column="19">&amp;<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="20">srv<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">requests<pos:position pos:line="16" pos:column="33"/></name><index pos:line="16" pos:column="33">[<expr><name pos:line="16" pos:column="34">slot<pos:position pos:line="16" pos:column="38"/></name></expr>]<pos:position pos:line="16" pos:column="39"/></index></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">ptr<pos:position pos:line="21" pos:column="15"/></name></expr></argument>)<pos:position pos:line="21" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">ptr<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">r<pos:position pos:line="22" pos:column="13"/></name></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">r<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">dispatch_time<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">current_time<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name><name pos:line="25" pos:column="9">srv<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">wqueue<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">isNull<pos:position pos:line="25" pos:column="28"/></name></name><argument_list pos:line="25" pos:column="28">()<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="26" pos:column="9">srv<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">wqueue<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">init<pos:position pos:line="26" pos:column="26"/></name></name><argument_list pos:line="26" pos:column="26">()<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">hlp<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">childs<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">concurrency<pos:position pos:line="28" pos:column="32"/></name></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="29" pos:column="9">srv<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">wqueue<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">Printf<pos:position pos:line="29" pos:column="28"/></name></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"%d %s"<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">slot<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="44">r<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">buf<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt></block></then>
    <else pos:line="30" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="31" pos:column="9">srv<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">wqueue<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">append<pos:position pos:line="31" pos:column="28"/></name></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name><name pos:line="31" pos:column="29">r<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">buf<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="37">strlen<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><name><name pos:line="31" pos:column="44">r<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">buf<pos:position pos:line="31" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt></block></else></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">srv<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">flags<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">writing<pos:position pos:line="33" pos:column="28"/></name></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29"> <block pos:line="33" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">assert<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">NULL<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">==<pos:position pos:line="34" pos:column="23"/></operator> <name><name pos:line="34" pos:column="24">srv<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">writebuf<pos:position pos:line="34" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">srv<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">writebuf<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name><name pos:line="35" pos:column="25">srv<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">wqueue<pos:position pos:line="35" pos:column="36"/></name></name></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">srv<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">wqueue<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <operator pos:line="36" pos:column="23">new<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">MemBuf<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">srv<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">flags<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">writing<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <literal type="boolean" pos:line="37" pos:column="30">true<pos:position pos:line="37" pos:column="34"/></literal></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="38" pos:column="9">AsyncCall<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">::<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">Pointer<pos:position pos:line="38" pos:column="27"/></name></name></type> <name pos:line="38" pos:column="28">call<pos:position pos:line="38" pos:column="32"/></name> <init pos:line="38" pos:column="33">= <expr><call><name pos:line="38" pos:column="35">commCbCall<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><literal type="number" pos:line="38" pos:column="46">5<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="38" pos:column="48">5<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="51">"helperDispatchWriteDone"<pos:position pos:line="38" pos:column="76"/></literal></expr></argument>,
                                             <argument><expr><call><name pos:line="39" pos:column="46">CommIoCbPtrFun<pos:position pos:line="39" pos:column="60"/></name><argument_list pos:line="39" pos:column="60">(<argument><expr><name pos:line="39" pos:column="61">helperDispatchWriteDone<pos:position pos:line="39" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="86">srv<pos:position pos:line="39" pos:column="89"/></name></expr></argument>)<pos:position pos:line="39" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="92"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="40" pos:column="9">Comm<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">::<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">Write<pos:position pos:line="40" pos:column="20"/></name></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name><name pos:line="40" pos:column="21">srv<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">writePipe<pos:position pos:line="40" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="40" pos:column="37">srv<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">writebuf<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">-&gt;<pos:position pos:line="40" pos:column="55"/></operator><name pos:line="40" pos:column="52">content<pos:position pos:line="40" pos:column="59"/></name></name><argument_list pos:line="40" pos:column="59">()<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="40" pos:column="63">srv<pos:position pos:line="40" pos:column="66"/></name><operator pos:line="40" pos:column="66">-&gt;<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="68">writebuf<pos:position pos:line="40" pos:column="76"/></name><operator pos:line="40" pos:column="76">-&gt;<pos:position pos:line="40" pos:column="81"/></operator><name pos:line="40" pos:column="78">contentSize<pos:position pos:line="40" pos:column="89"/></name></name><argument_list pos:line="40" pos:column="89">()<pos:position pos:line="40" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="93">call<pos:position pos:line="40" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="99">NULL<pos:position pos:line="40" pos:column="103"/></name></expr></argument>)<pos:position pos:line="40" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="105"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">debugs<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><literal type="number" pos:line="43" pos:column="12">84<pos:position pos:line="43" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="16">5<pos:position pos:line="43" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="19">"helperDispatch: Request sent to "<pos:position pos:line="43" pos:column="53"/></literal> <operator pos:line="43" pos:column="54">&lt;&lt;<pos:position pos:line="43" pos:column="62"/></operator> <name><name pos:line="43" pos:column="57">hlp<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">-&gt;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="62">id_name<pos:position pos:line="43" pos:column="69"/></name></name> <operator pos:line="43" pos:column="70">&lt;&lt;<pos:position pos:line="43" pos:column="78"/></operator> <literal type="string" pos:line="43" pos:column="73">" #"<pos:position pos:line="43" pos:column="77"/></literal> <operator pos:line="43" pos:column="78">&lt;&lt;<pos:position pos:line="43" pos:column="86"/></operator> <name><name pos:line="43" pos:column="81">srv<pos:position pos:line="43" pos:column="84"/></name><operator pos:line="43" pos:column="84">-&gt;<pos:position pos:line="43" pos:column="89"/></operator><name pos:line="43" pos:column="86">index<pos:position pos:line="43" pos:column="91"/></name></name> <operator pos:line="43" pos:column="92">&lt;&lt;<pos:position pos:line="43" pos:column="100"/></operator> <literal type="string" pos:line="43" pos:column="95">", "<pos:position pos:line="43" pos:column="99"/></literal> <operator pos:line="43" pos:column="100">&lt;&lt;<pos:position pos:line="43" pos:column="108"/></operator> <call><name pos:line="43" pos:column="103">strlen<pos:position pos:line="43" pos:column="109"/></name><argument_list pos:line="43" pos:column="109">(<argument><expr><name><name pos:line="43" pos:column="110">r<pos:position pos:line="43" pos:column="111"/></name><operator pos:line="43" pos:column="111">-&gt;<pos:position pos:line="43" pos:column="116"/></operator><name pos:line="43" pos:column="113">buf<pos:position pos:line="43" pos:column="116"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="117"/></argument_list></call> <operator pos:line="43" pos:column="118">&lt;&lt;<pos:position pos:line="43" pos:column="126"/></operator> <literal type="string" pos:line="43" pos:column="121">" bytes"<pos:position pos:line="43" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="131"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="45" pos:column="5">++<pos:position pos:line="45" pos:column="7"/></operator> <name><name pos:line="45" pos:column="8">srv<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">stats<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">.<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">uses<pos:position pos:line="45" pos:column="23"/></name></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="46" pos:column="5">++<pos:position pos:line="46" pos:column="7"/></operator> <name><name pos:line="46" pos:column="8">srv<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">stats<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">.<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">pending<pos:position pos:line="46" pos:column="26"/></name></name></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="47" pos:column="5">++<pos:position pos:line="47" pos:column="7"/></operator> <name><name pos:line="47" pos:column="8">hlp<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">stats<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">requests<pos:position pos:line="47" pos:column="27"/></name></name></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

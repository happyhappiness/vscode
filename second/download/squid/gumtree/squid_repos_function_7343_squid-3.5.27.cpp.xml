<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7343_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">rfc1035LabelPack<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">buf<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">size_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">sz<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">label<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">off<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">len<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><ternary><condition><expr><name pos:line="5" pos:column="18">label<pos:position pos:line="5" pos:column="23"/></name></expr> ?<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25"> <expr><call><name pos:line="5" pos:column="26">strlen<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">label<pos:position pos:line="5" pos:column="38"/></name></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="40"/></then><else pos:line="5" pos:column="40">: <expr><literal type="number" pos:line="5" pos:column="42">0<pos:position pos:line="5" pos:column="43"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">label<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">!<pos:position pos:line="7" pos:column="17"/></operator><call><name pos:line="7" pos:column="17">strchr<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">label<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="31">'.'<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt></block></then></if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">len<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&gt;<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="15">RFC1035_MAXLABELSZ<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">len<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">RFC1035_MAXLABELSZ<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">sz<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&gt;=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="18">len<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">+<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">buf<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">+<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">off<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">)<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">(<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">char<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">len<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">off<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">++<pos:position pos:line="12" pos:column="10"/></operator></expr>;<pos:position pos:line="12" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memcpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">buf<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">+<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">off<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">label<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">len<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">off<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">+=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">len<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">off<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

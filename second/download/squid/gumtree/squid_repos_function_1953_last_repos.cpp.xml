<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1953_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsShutdownAndFreeState<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">reason<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">DnsSocketA<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&lt;<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal> <operator pos:line="4" pos:column="24">&amp;&amp;<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="27">DnsSocketB<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">&lt;<pos:position pos:line="4" pos:column="42"/></operator> <literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr>)<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">78<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">2<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">reason<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&lt;&lt;<pos:position pos:line="7" pos:column="34"/></operator> <literal type="string" pos:line="7" pos:column="29">": Closing DNS sockets"<pos:position pos:line="7" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">DnsSocketA<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&gt;=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr> )<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">comm_close<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">DnsSocketA<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">DnsSocketA<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator><literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">DnsSocketB<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&gt;=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr> )<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">comm_close<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">DnsSocketB<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">DnsSocketB<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="22">-<pos:position pos:line="16" pos:column="23"/></operator><literal type="number" pos:line="16" pos:column="23">1<pos:position pos:line="16" pos:column="24"/></literal></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><decl><type><name pos:line="19" pos:column="10">int<pos:position pos:line="19" pos:column="13"/></name></type> <name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <init pos:line="19" pos:column="16">= <expr><literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="25">nns<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></condition> <incr><expr><operator pos:line="19" pos:column="30">++<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr></incr>)<pos:position pos:line="19" pos:column="34"/></control> <block pos:line="19" pos:column="35">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<decl><type><name pos:line="20" pos:column="13">nsvc<pos:position pos:line="20" pos:column="17"/></name> <modifier pos:line="20" pos:column="18">*<pos:position pos:line="20" pos:column="19"/></modifier></type><name pos:line="20" pos:column="19">vc<pos:position pos:line="20" pos:column="21"/></name> <init pos:line="20" pos:column="22">= <expr><name><name pos:line="20" pos:column="24">nameservers<pos:position pos:line="20" pos:column="35"/></name><index pos:line="20" pos:column="35">[<expr><name pos:line="20" pos:column="36">i<pos:position pos:line="20" pos:column="37"/></name></expr>]<pos:position pos:line="20" pos:column="38"/></index></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">vc<pos:position pos:line="20" pos:column="41"/></name></expr></init></decl>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42"> <block pos:line="20" pos:column="43">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><call><name><name pos:line="21" pos:column="17">Comm<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">::<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">IsConnOpen<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name><name pos:line="21" pos:column="34">vc<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">conn<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="22" pos:column="17">vc<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">conn<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">close<pos:position pos:line="22" pos:column="32"/></name></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>

    <comment type="line" pos:line="26" pos:column="5">// XXX: vcs are not closed/freed yet and may try to access nameservers[]</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">idnsFreeNameservers<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">()<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">idnsFreeSearchpath<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">()<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1192_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parsePortCfg<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">AnyP<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">PortCfgPointer<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">head<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">optionName<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBuf<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">protoName<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">strcmp<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">optionName<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="28">"http_port"<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call> <operator pos:line="5" pos:column="41">==<pos:position pos:line="5" pos:column="43"/></operator> <literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal> <operator pos:line="5" pos:column="46">||<pos:position pos:line="5" pos:column="48"/></operator>
            <call><name pos:line="6" pos:column="13">strcmp<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">optionName<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"ascii_port"<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call> <operator pos:line="6" pos:column="46">==<pos:position pos:line="6" pos:column="48"/></operator> <literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">protoName<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <literal type="string" pos:line="7" pos:column="21">"HTTP"<pos:position pos:line="7" pos:column="27"/></literal></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt></block></then>
    <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><call><name pos:line="8" pos:column="14">strcmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">optionName<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"https_port"<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call> <operator pos:line="8" pos:column="47">==<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="50">0<pos:position pos:line="8" pos:column="51"/></literal></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">protoName<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="string" pos:line="9" pos:column="21">"HTTPS"<pos:position pos:line="9" pos:column="28"/></literal></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><call><name pos:line="10" pos:column="14">strcmp<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">optionName<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="33">"ftp_port"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call> <operator pos:line="10" pos:column="45">==<pos:position pos:line="10" pos:column="47"/></operator> <literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">protoName<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <literal type="string" pos:line="11" pos:column="21">"FTP"<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt></block></then></if></elseif></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">protoName<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">isEmpty<pos:position pos:line="12" pos:column="26"/></name></name><argument_list pos:line="12" pos:column="26">()<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29"> <block pos:line="12" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">self_destruct<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">()<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">token<pos:position pos:line="17" pos:column="16"/></name> <init pos:line="17" pos:column="17">= <expr><call><name><name pos:line="17" pos:column="19">ConfigParser<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">::<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">NextToken<pos:position pos:line="17" pos:column="42"/></name></name><argument_list pos:line="17" pos:column="42">()<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="45"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">token<pos:position pos:line="19" pos:column="15"/></name></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16"> <block pos:line="19" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">self_destruct<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">()<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">AnyP<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">::<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">PortCfgPointer<pos:position pos:line="24" pos:column="25"/></name></name></type> <name pos:line="24" pos:column="26">s<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><operator pos:line="24" pos:column="30">new<pos:position pos:line="24" pos:column="33"/></operator> <call><name><name pos:line="24" pos:column="34">AnyP<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">::<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">PortCfg<pos:position pos:line="24" pos:column="47"/></name></name><argument_list pos:line="24" pos:column="47">()<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">s<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">transport<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <call><name pos:line="25" pos:column="20">parsePortProtocol<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">protoName<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt> <comment type="line" pos:line="25" pos:column="50">// default; protocol=... overwrites</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">parsePortSpecification<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">s<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="31">token<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* parse options ... */</comment>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">token<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name><name pos:line="29" pos:column="21">ConfigParser<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">::<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">NextToken<pos:position pos:line="29" pos:column="44"/></name></name><argument_list pos:line="29" pos:column="44">()<pos:position pos:line="29" pos:column="46"/></argument_list></call><operator pos:line="29" pos:column="46">)<pos:position pos:line="29" pos:column="47"/></operator></expr>)<pos:position pos:line="29" pos:column="48"/></condition> <block pos:line="29" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">parse_port_option<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">s<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">token<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></while>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">s<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">transport<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">.<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">protocol<pos:position pos:line="33" pos:column="30"/></name></name> <operator pos:line="33" pos:column="31">==<pos:position pos:line="33" pos:column="33"/></operator> <name><name pos:line="33" pos:column="34">AnyP<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">::<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">PROTO_HTTPS<pos:position pos:line="33" pos:column="51"/></name></name></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52"> <block pos:line="33" pos:column="53">{
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">USE_OPENSSL<pos:position pos:line="34" pos:column="16"/></name></expr></cpp:if>
        <comment type="block" pos:line="35" pos:column="9">/* ssl-bump on https_port configuration requires either tproxy or intercept, and vice versa */</comment>
        <decl_stmt><decl><type><specifier pos:line="36" pos:column="9">const<pos:position pos:line="36" pos:column="14"/></specifier> <name pos:line="36" pos:column="15">bool<pos:position pos:line="36" pos:column="19"/></name></type> <name pos:line="36" pos:column="20">hijacked<pos:position pos:line="36" pos:column="28"/></name> <init pos:line="36" pos:column="29">= <expr><call><name><name pos:line="36" pos:column="31">s<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">flags<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">.<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">isIntercepted<pos:position pos:line="36" pos:column="53"/></name></name><argument_list pos:line="36" pos:column="53">()<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="56"/></decl_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">s<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">flags<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">tunnelSslBumping<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">&amp;&amp;<pos:position pos:line="37" pos:column="49"/></operator> <operator pos:line="37" pos:column="42">!<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">hijacked<pos:position pos:line="37" pos:column="51"/></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52"> <block pos:line="37" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">3<pos:position pos:line="38" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="23">DBG_CRITICAL<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="37">"FATAL: ssl-bump on https_port requires tproxy/intercept which is missing."<pos:position pos:line="38" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="114"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">self_destruct<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">()<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">hijacked<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">&amp;&amp;<pos:position pos:line="41" pos:column="32"/></operator> <operator pos:line="41" pos:column="25">!<pos:position pos:line="41" pos:column="26"/></operator><name><name pos:line="41" pos:column="26">s<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">flags<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">.<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">tunnelSslBumping<pos:position pos:line="41" pos:column="51"/></name></name></expr>)<pos:position pos:line="41" pos:column="52"/></condition><then pos:line="41" pos:column="52"> <block pos:line="41" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">debugs<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><literal type="number" pos:line="42" pos:column="20">3<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="23">DBG_CRITICAL<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="37">"FATAL: tproxy/intercept on https_port requires ssl-bump which is missing."<pos:position pos:line="42" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="114"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">self_destruct<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">()<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">s<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">flags<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">.<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">proxySurrogate<pos:position pos:line="46" pos:column="36"/></name></name></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37"> <block pos:line="46" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">debugs<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="number" pos:line="47" pos:column="20">3<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>,<argument><expr><name pos:line="47" pos:column="22">DBG_CRITICAL<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="36">"FATAL: https_port: require-proxy-header option is not supported on HTTPS ports."<pos:position pos:line="47" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="119"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">self_destruct<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">()<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then> <elseif pos:line="50" pos:column="7">else <if pos:line="50" pos:column="12">if <condition pos:line="50" pos:column="15">(<expr><call><name><name pos:line="50" pos:column="16">protoName<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">.<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">cmp<pos:position pos:line="50" pos:column="29"/></name></name><argument_list pos:line="50" pos:column="29">(<argument><expr><literal type="string" pos:line="50" pos:column="30">"FTP"<pos:position pos:line="50" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call> <operator pos:line="50" pos:column="37">==<pos:position pos:line="50" pos:column="39"/></operator> <literal type="number" pos:line="50" pos:column="40">0<pos:position pos:line="50" pos:column="41"/></literal></expr>)<pos:position pos:line="50" pos:column="42"/></condition><then pos:line="50" pos:column="42"> <block pos:line="50" pos:column="43">{
        <comment type="block" pos:line="51" pos:column="9">/* ftp_port does not support ssl-bump */</comment>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">s<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">-&gt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">flags<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">.<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">tunnelSslBumping<pos:position pos:line="52" pos:column="38"/></name></name></expr>)<pos:position pos:line="52" pos:column="39"/></condition><then pos:line="52" pos:column="39"> <block pos:line="52" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">debugs<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><literal type="number" pos:line="53" pos:column="20">3<pos:position pos:line="53" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="23">DBG_CRITICAL<pos:position pos:line="53" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="37">"FATAL: ssl-bump is not supported for ftp_port."<pos:position pos:line="53" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="87"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">self_destruct<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">()<pos:position pos:line="54" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">s<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">flags<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">.<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">proxySurrogate<pos:position pos:line="56" pos:column="36"/></name></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37"> <block pos:line="56" pos:column="38">{
            <comment type="line" pos:line="57" pos:column="13">// Passive FTP data channel does not work without deep protocol inspection in the frontend.</comment>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">debugs<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><literal type="number" pos:line="58" pos:column="20">3<pos:position pos:line="58" pos:column="21"/></literal></expr></argument>,<argument><expr><name pos:line="58" pos:column="22">DBG_CRITICAL<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="36">"FATAL: require-proxy-header option is not supported on ftp_port."<pos:position pos:line="58" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">self_destruct<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">()<pos:position pos:line="59" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name><name pos:line="63" pos:column="9">Ip<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">::<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="13">EnableIpv6<pos:position pos:line="63" pos:column="23"/></name></name><operator pos:line="63" pos:column="23">&amp;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="63" pos:column="47"/></name> <operator pos:line="63" pos:column="48">&amp;&amp;<pos:position pos:line="63" pos:column="58"/></operator> <call><name><name pos:line="63" pos:column="51">s<pos:position pos:line="63" pos:column="52"/></name><operator pos:line="63" pos:column="52">-&gt;<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="54">s<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">.<pos:position pos:line="63" pos:column="56"/></operator><name pos:line="63" pos:column="56">isAnyAddr<pos:position pos:line="63" pos:column="65"/></name></name><argument_list pos:line="63" pos:column="65">()<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="68"/></condition><then pos:line="63" pos:column="68"> <block pos:line="63" pos:column="69">{
        <comment type="line" pos:line="64" pos:column="9">// clone the port options from *s to *(s-&gt;next)</comment>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">s<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">-&gt;<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="12">next<pos:position pos:line="65" pos:column="16"/></name></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <call><name><name pos:line="65" pos:column="19">s<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">clone<pos:position pos:line="65" pos:column="27"/></name></name><argument_list pos:line="65" pos:column="27">()<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="66" pos:column="9">s<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">next<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">s<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">.<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">setIPv4<pos:position pos:line="66" pos:column="27"/></name></name><argument_list pos:line="66" pos:column="27">()<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">debugs<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><literal type="number" pos:line="67" pos:column="16">3<pos:position pos:line="67" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="19">3<pos:position pos:line="67" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="67" pos:column="22">AnyP<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">::<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="28">UriScheme<pos:position pos:line="67" pos:column="37"/></name></name><argument_list pos:line="67" pos:column="37">(<argument><expr><name><name pos:line="67" pos:column="38">s<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">-&gt;<pos:position pos:line="67" pos:column="44"/></operator><name pos:line="67" pos:column="41">transport<pos:position pos:line="67" pos:column="50"/></name><operator pos:line="67" pos:column="50">.<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="51">protocol<pos:position pos:line="67" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="60"/></argument_list></call><operator pos:line="67" pos:column="60">.<pos:position pos:line="67" pos:column="61"/></operator><call><name pos:line="67" pos:column="61">c_str<pos:position pos:line="67" pos:column="66"/></name><argument_list pos:line="67" pos:column="66">()<pos:position pos:line="67" pos:column="68"/></argument_list></call> <operator pos:line="67" pos:column="69">&lt;&lt;<pos:position pos:line="67" pos:column="77"/></operator> <literal type="string" pos:line="67" pos:column="72">"_port: clone wildcard address for split-stack: "<pos:position pos:line="67" pos:column="121"/></literal> <operator pos:line="67" pos:column="122">&lt;&lt;<pos:position pos:line="67" pos:column="130"/></operator> <name><name pos:line="67" pos:column="125">s<pos:position pos:line="67" pos:column="126"/></name><operator pos:line="67" pos:column="126">-&gt;<pos:position pos:line="67" pos:column="131"/></operator><name pos:line="67" pos:column="128">s<pos:position pos:line="67" pos:column="129"/></name></name> <operator pos:line="67" pos:column="130">&lt;&lt;<pos:position pos:line="67" pos:column="138"/></operator> <literal type="string" pos:line="67" pos:column="133">" and "<pos:position pos:line="67" pos:column="140"/></literal> <operator pos:line="67" pos:column="141">&lt;&lt;<pos:position pos:line="67" pos:column="149"/></operator> <name><name pos:line="67" pos:column="144">s<pos:position pos:line="67" pos:column="145"/></name><operator pos:line="67" pos:column="145">-&gt;<pos:position pos:line="67" pos:column="150"/></operator><name pos:line="67" pos:column="147">next<pos:position pos:line="67" pos:column="151"/></name><operator pos:line="67" pos:column="151">-&gt;<pos:position pos:line="67" pos:column="156"/></operator><name pos:line="67" pos:column="153">s<pos:position pos:line="67" pos:column="154"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="155"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="156"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <while pos:line="70" pos:column="5">while <condition pos:line="70" pos:column="11">(<expr><operator pos:line="70" pos:column="12">*<pos:position pos:line="70" pos:column="13"/></operator><name pos:line="70" pos:column="13">head<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">!=<pos:position pos:line="70" pos:column="20"/></operator> <name pos:line="70" pos:column="21">NULL<pos:position pos:line="70" pos:column="25"/></name></expr>)<pos:position pos:line="70" pos:column="26"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="9">head<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <operator pos:line="71" pos:column="16">&amp;<pos:position pos:line="71" pos:column="21"/></operator><operator pos:line="71" pos:column="17">(<pos:position pos:line="71" pos:column="18"/></operator><name><operator pos:line="71" pos:column="18">(<pos:position pos:line="71" pos:column="19"/></operator><operator pos:line="71" pos:column="19">*<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">head<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">)<pos:position pos:line="71" pos:column="25"/></operator><operator pos:line="71" pos:column="25">-&gt;<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="27">next<pos:position pos:line="71" pos:column="31"/></name></name><operator pos:line="71" pos:column="31">)<pos:position pos:line="71" pos:column="32"/></operator></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt></block></while>

    <expr_stmt><expr><operator pos:line="73" pos:column="5">*<pos:position pos:line="73" pos:column="6"/></operator><name pos:line="73" pos:column="6">head<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <name pos:line="73" pos:column="13">s<pos:position pos:line="73" pos:column="14"/></name></expr>;<pos:position pos:line="73" pos:column="15"/></expr_stmt>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_833.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">dump_acl_access<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">StoreEntry<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">entry<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">name<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">acl_access<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type> <name pos:line="2" pos:column="68">head<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">acl_access<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">l<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">l<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">head<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></init> <condition><expr><name pos:line="6" pos:column="20">l<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></condition> <incr><expr><name pos:line="6" pos:column="23">l<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">=<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">l<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">next<pos:position pos:line="6" pos:column="34"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="35"/></control> <block pos:line="6" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">storeAppendPrintf<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">entry<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"%s %s"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>,
                          <argument><expr><name pos:line="8" pos:column="27">name<pos:position pos:line="8" pos:column="31"/></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="9" pos:column="27">l<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">allow<pos:position pos:line="9" pos:column="35"/></name></name></expr> ?<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37"> <expr><literal type="string" pos:line="9" pos:column="38">"Allow"<pos:position pos:line="9" pos:column="45"/></literal></expr> <pos:position pos:line="9" pos:column="46"/></then><else pos:line="9" pos:column="46">: <expr><literal type="string" pos:line="9" pos:column="48">"Deny"<pos:position pos:line="9" pos:column="54"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">dump_acl_list<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">entry<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="30">l<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">aclList<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">storeAppendPrintf<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">entry<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"\n"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></for>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

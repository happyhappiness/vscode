<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_122_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">wcstrcmparray<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">wchar_t<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">str<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">array<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">WCHAR<pos:position pos:line="4" pos:column="10"/></name></type> <name><name pos:line="4" pos:column="11">wszGroup<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><name pos:line="4" pos:column="20">GNLEN<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">+<pos:position pos:line="4" pos:column="27"/></operator> <literal type="number" pos:line="4" pos:column="28">1<pos:position pos:line="4" pos:column="29"/></literal></expr>]<pos:position pos:line="4" pos:column="30"/></index></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>	<comment type="line" pos:line="4" pos:column="33">// Unicode Group</comment>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">array<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition> <block pos:line="6" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">MultiByteToWideChar<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">CP_ACP<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">array<pos:position pos:line="7" pos:column="46"/></name></expr></argument>,
                            <argument><expr><call><name pos:line="8" pos:column="29">strlen<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">array<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">+<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">1<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">wszGroup<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="59">sizeof<argument_list pos:line="8" pos:column="65">(<argument><expr><name pos:line="8" pos:column="66">wszGroup<pos:position pos:line="8" pos:column="74"/></name></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></sizeof> <operator pos:line="8" pos:column="76">/<pos:position pos:line="8" pos:column="77"/></operator> <sizeof pos:line="8" pos:column="78">sizeof<argument_list pos:line="8" pos:column="84">(<argument><expr><name><name pos:line="8" pos:column="85">wszGroup<pos:position pos:line="8" pos:column="93"/></name><index pos:line="8" pos:column="93">[<expr><literal type="number" pos:line="8" pos:column="94">0<pos:position pos:line="8" pos:column="95"/></literal></expr>]<pos:position pos:line="8" pos:column="96"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="97"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debug<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"Windows group: %S, Squid group: %S\n"<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">str<pos:position pos:line="9" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="60">wszGroup<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="70"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><ternary><condition><expr><name pos:line="10" pos:column="14">use_case_insensitive_compare<pos:position pos:line="10" pos:column="42"/></name></expr> ?<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <expr><call><name pos:line="10" pos:column="45">_wcsicmp<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name pos:line="10" pos:column="54">str<pos:position pos:line="10" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">wszGroup<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="10" pos:column="69"/></then><else pos:line="10" pos:column="69">: <expr><call><name pos:line="10" pos:column="71">wcscmp<pos:position pos:line="10" pos:column="77"/></name><argument_list pos:line="10" pos:column="77">(<argument><expr><name pos:line="10" pos:column="78">str<pos:position pos:line="10" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="83">wszGroup<pos:position pos:line="10" pos:column="91"/></name></expr></argument>)<pos:position pos:line="10" pos:column="92"/></argument_list></call></expr></else></ternary><operator pos:line="10" pos:column="92">)<pos:position pos:line="10" pos:column="93"/></operator> <operator pos:line="10" pos:column="94">==<pos:position pos:line="10" pos:column="96"/></operator> <literal type="number" pos:line="10" pos:column="97">0<pos:position pos:line="10" pos:column="98"/></literal></expr>)<pos:position pos:line="10" pos:column="99"/></condition><then pos:line="10" pos:column="99">
            <block type="pseudo"><return pos:line="11" pos:column="13">return <expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="12" pos:column="9">array<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">++<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></while>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

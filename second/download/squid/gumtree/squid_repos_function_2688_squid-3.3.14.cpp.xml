<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2688_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">ConfigParser<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">strtokFile<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">fromFile<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">FILE<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">wordFile<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">t<pos:position pos:line="7" pos:column="12"/></name></decl>, <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="15">fn<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">LOCAL_ARRAY<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">CONFIG_LINE_LIMIT<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>

    <do pos:line="10" pos:column="5">do <block pos:line="10" pos:column="8">{

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">fromFile<pos:position pos:line="12" pos:column="22"/></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23"> <block pos:line="12" pos:column="24">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">t<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><call><name pos:line="13" pos:column="18">strtok<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">NULL<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">w_space<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>

            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><operator pos:line="15" pos:column="17">!<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">t<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">||<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">t<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">==<pos:position pos:line="15" pos:column="28"/></operator> <literal type="char" pos:line="15" pos:column="29">'#'<pos:position pos:line="15" pos:column="32"/></literal></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
                <return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return>
            }<pos:position pos:line="17" pos:column="14"/></block></then> <elseif pos:line="17" pos:column="15">else <if pos:line="17" pos:column="20">if <condition pos:line="17" pos:column="23">(<expr><operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">t<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">==<pos:position pos:line="17" pos:column="29"/></operator> <literal type="char" pos:line="17" pos:column="30">'\"'<pos:position pos:line="17" pos:column="34"/></literal> <operator pos:line="17" pos:column="35">||<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">t<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">==<pos:position pos:line="17" pos:column="43"/></operator> <literal type="char" pos:line="17" pos:column="44">'\''<pos:position pos:line="17" pos:column="48"/></literal></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block pos:line="17" pos:column="50">{
                <comment type="block" pos:line="18" pos:column="17">/* quote found, start reading from file */</comment>
                <expr_stmt><expr><name pos:line="19" pos:column="17">fn<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">++<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">t<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>

                <while pos:line="21" pos:column="17">while <condition pos:line="21" pos:column="23">(<expr><operator pos:line="21" pos:column="24">*<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">t<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">&amp;&amp;<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="30">*<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">t<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">!=<pos:position pos:line="21" pos:column="35"/></operator> <literal type="char" pos:line="21" pos:column="36">'\"'<pos:position pos:line="21" pos:column="40"/></literal> <operator pos:line="21" pos:column="41">&amp;&amp;<pos:position pos:line="21" pos:column="51"/></operator> <operator pos:line="21" pos:column="44">*<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="45">t<pos:position pos:line="21" pos:column="46"/></name> <operator pos:line="21" pos:column="47">!=<pos:position pos:line="21" pos:column="49"/></operator> <literal type="char" pos:line="21" pos:column="50">'\''<pos:position pos:line="21" pos:column="54"/></literal></expr>)<pos:position pos:line="21" pos:column="55"/></condition>
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="21">++<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">t<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt></block></while>

                <expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">t<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="char" pos:line="24" pos:column="22">'\0'<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>

                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">wordFile<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <call><name pos:line="26" pos:column="33">fopen<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">fn<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="43">"r"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call><operator pos:line="26" pos:column="47">)<pos:position pos:line="26" pos:column="48"/></operator> <operator pos:line="26" pos:column="49">==<pos:position pos:line="26" pos:column="51"/></operator> <name pos:line="26" pos:column="52">NULL<pos:position pos:line="26" pos:column="56"/></name></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57"> <block pos:line="26" pos:column="58">{
                    <expr_stmt><expr><call><name pos:line="27" pos:column="21">debugs<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><literal type="number" pos:line="27" pos:column="28">28<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">DBG_CRITICAL<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="46">"strtokFile: "<pos:position pos:line="27" pos:column="60"/></literal> <operator pos:line="27" pos:column="61">&lt;&lt;<pos:position pos:line="27" pos:column="69"/></operator> <name pos:line="27" pos:column="64">fn<pos:position pos:line="27" pos:column="66"/></name> <operator pos:line="27" pos:column="67">&lt;&lt;<pos:position pos:line="27" pos:column="75"/></operator> <literal type="string" pos:line="27" pos:column="70">" not found"<pos:position pos:line="27" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt>
                    <return pos:line="28" pos:column="21">return <expr><operator pos:line="28" pos:column="28">(<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">NULL<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">)<pos:position pos:line="28" pos:column="34"/></operator></expr>;<pos:position pos:line="28" pos:column="35"/></return>
                }<pos:position pos:line="29" pos:column="18"/></block></then></if>

<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="31" pos:column="20"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">setmode<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><call><name pos:line="32" pos:column="25">fileno<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">wordFile<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">O_TEXT<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

                <expr_stmt><expr><name pos:line="35" pos:column="17">fromFile<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <literal type="number" pos:line="35" pos:column="28">1<pos:position pos:line="35" pos:column="29"/></literal></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if></elseif> <else pos:line="36" pos:column="15">else <block pos:line="36" pos:column="20">{
                <return pos:line="37" pos:column="17">return <expr><name pos:line="37" pos:column="24">t<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></return>
            }<pos:position pos:line="38" pos:column="14"/></block></else></if>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="41" pos:column="9">/* fromFile */</comment>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">fgets<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">buf<pos:position pos:line="42" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="24">CONFIG_LINE_LIMIT<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="43">wordFile<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call> <operator pos:line="42" pos:column="53">==<pos:position pos:line="42" pos:column="55"/></operator> <name pos:line="42" pos:column="56">NULL<pos:position pos:line="42" pos:column="60"/></name></expr>)<pos:position pos:line="42" pos:column="61"/></condition><then pos:line="42" pos:column="61"> <block pos:line="42" pos:column="62">{
            <comment type="block" pos:line="43" pos:column="13">/* stop reading from file */</comment>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">fclose<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">wordFile<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">wordFile<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">NULL<pos:position pos:line="45" pos:column="28"/></name></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="46" pos:column="13">fromFile<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">NULL<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then> <else pos:line="48" pos:column="11">else <block pos:line="48" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">char<pos:position pos:line="49" pos:column="17"/></name> <modifier pos:line="49" pos:column="18">*<pos:position pos:line="49" pos:column="19"/></modifier></type><name pos:line="49" pos:column="19">t2<pos:position pos:line="49" pos:column="21"/></name></decl>, <modifier pos:line="49" pos:column="23">*<pos:position pos:line="49" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="49" pos:column="24">t3<pos:position pos:line="49" pos:column="26"/></name></decl>;<pos:position pos:line="49" pos:column="27"/></decl_stmt>
            <expr_stmt><expr><name pos:line="50" pos:column="13">t<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">buf<pos:position pos:line="50" pos:column="20"/></name></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
            <comment type="block" pos:line="51" pos:column="13">/* skip leading and trailing white space */</comment>
            <expr_stmt><expr><name pos:line="52" pos:column="13">t<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">+=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">strspn<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">buf<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="30">w_space<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="53" pos:column="13">t2<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">t<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">+<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">strcspn<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">t<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">w_space<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">t3<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">t2<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">+<pos:position pos:line="54" pos:column="22"/></operator> <call><name pos:line="54" pos:column="23">strspn<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">t2<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">w_space<pos:position pos:line="54" pos:column="41"/></name></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>

            <while pos:line="56" pos:column="13">while <condition pos:line="56" pos:column="19">(<expr><operator pos:line="56" pos:column="20">*<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">t3<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">&amp;&amp;<pos:position pos:line="56" pos:column="34"/></operator> <operator pos:line="56" pos:column="27">*<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">t3<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">!=<pos:position pos:line="56" pos:column="33"/></operator> <literal type="char" pos:line="56" pos:column="34">'#'<pos:position pos:line="56" pos:column="37"/></literal></expr>)<pos:position pos:line="56" pos:column="38"/></condition> <block pos:line="56" pos:column="39">{
                <expr_stmt><expr><name pos:line="57" pos:column="17">t2<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">t3<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">+<pos:position pos:line="57" pos:column="26"/></operator> <call><name pos:line="57" pos:column="27">strcspn<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><name pos:line="57" pos:column="35">t3<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">w_space<pos:position pos:line="57" pos:column="46"/></name></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">t3<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <name pos:line="58" pos:column="22">t2<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">+<pos:position pos:line="58" pos:column="26"/></operator> <call><name pos:line="58" pos:column="27">strspn<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">t2<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">w_space<pos:position pos:line="58" pos:column="45"/></name></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></while>

            <expr_stmt><expr><operator pos:line="61" pos:column="13">*<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">t2<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <literal type="char" pos:line="61" pos:column="19">'\0'<pos:position pos:line="61" pos:column="23"/></literal></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="64" pos:column="9">/* skip comments */</comment>
        <comment type="block" pos:line="65" pos:column="9">/* skip blank lines */</comment>
    }<pos:position pos:line="66" pos:column="6"/></block> while <condition pos:line="66" pos:column="13">( <expr><operator pos:line="66" pos:column="15">*<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">t<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">==<pos:position pos:line="66" pos:column="20"/></operator> <literal type="char" pos:line="66" pos:column="21">'#'<pos:position pos:line="66" pos:column="24"/></literal> <operator pos:line="66" pos:column="25">||<pos:position pos:line="66" pos:column="27"/></operator> <operator pos:line="66" pos:column="28">!<pos:position pos:line="66" pos:column="29"/></operator><operator pos:line="66" pos:column="29">*<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">t<pos:position pos:line="66" pos:column="31"/></name></expr> )<pos:position pos:line="66" pos:column="33"/></condition>;<pos:position pos:line="66" pos:column="34"/></do>

    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">t<pos:position pos:line="68" pos:column="13"/></name></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

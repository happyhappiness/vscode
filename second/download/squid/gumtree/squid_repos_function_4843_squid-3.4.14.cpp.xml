<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4843_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CossMemBuf<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">CossSwapDir<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">createMemBuf<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">off_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">start<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">sfileno<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">curfn<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">int<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">collision<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CossMemBuf<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">newmb<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CossMemBuf<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">t<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StoreEntry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">e<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">dlink_node<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">m<pos:position pos:line="7" pos:column="18"/></name></decl>, <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="21">prev<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">numreleased<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">CBDATA_INIT_TYPE_FREECB<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">CossMemBuf<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">NULL<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">newmb<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">cbdataAlloc<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">CossMemBuf<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">newmb<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">diskstart<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">start<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">79<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">3<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"CossSwapDir::createMemBuf: creating new membuf at "<pos:position pos:line="13" pos:column="71"/></literal> <operator pos:line="13" pos:column="72">&lt;&lt;<pos:position pos:line="13" pos:column="80"/></operator> <name><name pos:line="13" pos:column="75">newmb<pos:position pos:line="13" pos:column="80"/></name><operator pos:line="13" pos:column="80">-&gt;<pos:position pos:line="13" pos:column="85"/></operator><name pos:line="13" pos:column="82">diskstart<pos:position pos:line="13" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">79<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">3<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"CossSwapDir::createMemBuf: at "<pos:position pos:line="14" pos:column="51"/></literal> <operator pos:line="14" pos:column="52">&lt;&lt;<pos:position pos:line="14" pos:column="60"/></operator> <name pos:line="14" pos:column="55">newmb<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">newmb<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">diskend<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name><name pos:line="15" pos:column="22">newmb<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">diskstart<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">+<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">COSS_MEMBUF_SZ<pos:position pos:line="15" pos:column="55"/></name></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">newmb<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">lockcount<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">newmb<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">SD<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">this<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="18" pos:column="5">/* XXX This should be reversed, with the new buffer last in the chain */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">dlinkAdd<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">newmb<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name><name pos:line="19" pos:column="22">newmb<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">node<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="35">&amp;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="36">membufs<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Print out the list of membufs */</comment>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">79<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">3<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="19">"CossSwapDir::createMemBuf: membuflist:"<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>

    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">m<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name><name pos:line="25" pos:column="14">membufs<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">head<pos:position pos:line="25" pos:column="26"/></name></name></expr>;<pos:position pos:line="25" pos:column="27"/></init> <condition><expr><name pos:line="25" pos:column="28">m<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></condition> <incr><expr><name pos:line="25" pos:column="31">m<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <name><name pos:line="25" pos:column="35">m<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">next<pos:position pos:line="25" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="43"/></control> <block pos:line="25" pos:column="44">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">t<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">CossMemBuf<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">*<pos:position pos:line="26" pos:column="26"/></operator><operator pos:line="26" pos:column="26">)<pos:position pos:line="26" pos:column="27"/></operator><name><name pos:line="26" pos:column="27">m<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">data<pos:position pos:line="26" pos:column="34"/></name></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="27" pos:column="9">t<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">describe<pos:position pos:line="27" pos:column="20"/></name></name><argument_list pos:line="27" pos:column="20">(<argument><expr><literal type="number" pos:line="27" pos:column="21">3<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="24">__LINE__<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></for>

    <comment type="block" pos:line="30" pos:column="5">/*
     * Kill objects from the tail to make space for a new chunk
     */</comment>
    <for pos:line="33" pos:column="5">for <control pos:line="33" pos:column="9">(<init><expr><name pos:line="33" pos:column="10">m<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name><name pos:line="33" pos:column="14">cossindex<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">tail<pos:position pos:line="33" pos:column="28"/></name></name></expr>;<pos:position pos:line="33" pos:column="29"/></init> <condition><expr><name pos:line="33" pos:column="30">m<pos:position pos:line="33" pos:column="31"/></name></expr>;<pos:position pos:line="33" pos:column="32"/></condition> <incr><expr><name pos:line="33" pos:column="33">m<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">=<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">prev<pos:position pos:line="33" pos:column="41"/></name></expr></incr>)<pos:position pos:line="33" pos:column="42"/></control> <block pos:line="33" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">off_t<pos:position pos:line="34" pos:column="14"/></name></type> <name pos:line="34" pos:column="15">o<pos:position pos:line="34" pos:column="16"/></name></decl>;<pos:position pos:line="34" pos:column="17"/></decl_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">prev<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name><name pos:line="35" pos:column="16">m<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">prev<pos:position pos:line="35" pos:column="23"/></name></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">e<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">StoreEntry<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator><operator pos:line="36" pos:column="26">)<pos:position pos:line="36" pos:column="27"/></operator><name><name pos:line="36" pos:column="27">m<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">data<pos:position pos:line="36" pos:column="34"/></name></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">o<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <call><name pos:line="37" pos:column="13">storeCossFilenoToDiskOffset<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name><name pos:line="37" pos:column="41">e<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">swap_filen<pos:position pos:line="37" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">curfn<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">==<pos:position pos:line="39" pos:column="21"/></operator> <name><name pos:line="39" pos:column="22">e<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">swap_filen<pos:position pos:line="39" pos:column="35"/></name></name></expr>)<pos:position pos:line="39" pos:column="36"/></condition><then pos:line="39" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">collision<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt></block></then></if>	<comment type="block" pos:line="40" pos:column="33">/* Mark an object alloc collision */</comment>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">o<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">&gt;=<pos:position pos:line="42" pos:column="21"/></operator> <operator pos:line="42" pos:column="19">(<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">off_t<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">)<pos:position pos:line="42" pos:column="26"/></operator><name><name pos:line="42" pos:column="26">newmb<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">diskstart<pos:position pos:line="42" pos:column="42"/></name></name><operator pos:line="42" pos:column="42">)<pos:position pos:line="42" pos:column="43"/></operator> <operator pos:line="42" pos:column="44">&amp;&amp;<pos:position pos:line="42" pos:column="54"/></operator> <operator pos:line="42" pos:column="47">(<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="48">o<pos:position pos:line="42" pos:column="49"/></name> <operator pos:line="42" pos:column="50">&lt;<pos:position pos:line="42" pos:column="54"/></operator> <operator pos:line="42" pos:column="52">(<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="53">off_t<pos:position pos:line="42" pos:column="58"/></name><operator pos:line="42" pos:column="58">)<pos:position pos:line="42" pos:column="59"/></operator><name><name pos:line="42" pos:column="59">newmb<pos:position pos:line="42" pos:column="64"/></name><operator pos:line="42" pos:column="64">-&gt;<pos:position pos:line="42" pos:column="69"/></operator><name pos:line="42" pos:column="66">diskend<pos:position pos:line="42" pos:column="73"/></name></name><operator pos:line="42" pos:column="73">)<pos:position pos:line="42" pos:column="74"/></operator></expr>)<pos:position pos:line="42" pos:column="75"/></condition><then pos:line="42" pos:column="75"> <block pos:line="42" pos:column="76">{
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">e<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">release<pos:position pos:line="43" pos:column="23"/></name></name><argument_list pos:line="43" pos:column="23">()<pos:position pos:line="43" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="44" pos:column="13">++<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">numreleased<pos:position pos:line="44" pos:column="26"/></name></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then> <else pos:line="45" pos:column="11">else
            <block type="pseudo"><break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break></block></else></if>
    }<pos:position pos:line="47" pos:column="6"/></block></for>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">numreleased<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">&gt;<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="23">0<pos:position pos:line="49" pos:column="24"/></literal></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">79<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="20">3<pos:position pos:line="50" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="23">"CossSwapDir::createMemBuf: this allocation released "<pos:position pos:line="50" pos:column="77"/></literal> <operator pos:line="50" pos:column="78">&lt;&lt;<pos:position pos:line="50" pos:column="86"/></operator> <name pos:line="50" pos:column="81">numreleased<pos:position pos:line="50" pos:column="92"/></name> <operator pos:line="50" pos:column="93">&lt;&lt;<pos:position pos:line="50" pos:column="101"/></operator> <literal type="string" pos:line="50" pos:column="96">" storeEntries"<pos:position pos:line="50" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="113"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="52" pos:column="5">++<pos:position pos:line="52" pos:column="7"/></operator> <call><name><name pos:line="52" pos:column="8">StoreFScoss<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">::<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">GetInstance<pos:position pos:line="52" pos:column="32"/></name></name><argument_list pos:line="52" pos:column="32">()<pos:position pos:line="52" pos:column="34"/></argument_list></call><operator pos:line="52" pos:column="34">.<pos:position pos:line="52" pos:column="35"/></operator><name><name pos:line="52" pos:column="35">stats<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">.<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="41">stripes<pos:position pos:line="52" pos:column="48"/></name></name></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>

    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">newmb<pos:position pos:line="54" pos:column="17"/></name></expr>;<pos:position pos:line="54" pos:column="18"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2970_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">HttpRequest<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">getRangeOffsetLimit<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* -2 is the starting value of rangeOffsetLimit.
     * If it is -2, that means we haven't checked it yet.
     *  Otherwise, return the current value */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">rangeOffsetLimit<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">!=<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="29">-<pos:position pos:line="7" pos:column="30"/></operator><literal type="number" pos:line="7" pos:column="30">2<pos:position pos:line="7" pos:column="31"/></literal></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">rangeOffsetLimit<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rangeOffsetLimit<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt> <comment type="line" pos:line="10" pos:column="27">// default value for rangeOffsetLimit</comment>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">ACLFilledChecklist<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">ch<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">NULL<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">this<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">NULL<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></decl>;<pos:position pos:line="12" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">ch<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">.<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">src_addr<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">client_addr<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">ch<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">.<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">my_addr<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator>  <name pos:line="14" pos:column="19">my_addr<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><decl><type><name pos:line="16" pos:column="10">AclSizeLimit<pos:position pos:line="16" pos:column="22"/></name> <modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier></type><name pos:line="16" pos:column="24">l<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><name><name pos:line="16" pos:column="28">Config<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">.<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">rangeOffsetLimit<pos:position pos:line="16" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="52"/></init> <condition><expr><name pos:line="16" pos:column="53">l<pos:position pos:line="16" pos:column="54"/></name></expr>;<pos:position pos:line="16" pos:column="55"/></condition> <incr><expr><name pos:line="16" pos:column="56">l<pos:position pos:line="16" pos:column="57"/></name> <operator pos:line="16" pos:column="58">=<pos:position pos:line="16" pos:column="59"/></operator> <name><name pos:line="16" pos:column="60">l<pos:position pos:line="16" pos:column="61"/></name> <operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator> <name pos:line="16" pos:column="65">next<pos:position pos:line="16" pos:column="69"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="70"/></control> <block pos:line="16" pos:column="71">{
        <comment type="block" pos:line="17" pos:column="9">/* if there is no ACL list or if the ACLs listed match use this limit value */</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name><name pos:line="18" pos:column="14">l<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">aclList<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">||<pos:position pos:line="18" pos:column="27"/></operator> <call><name><name pos:line="18" pos:column="28">ch<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">fastCheck<pos:position pos:line="18" pos:column="40"/></name></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name><name pos:line="18" pos:column="41">l<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">aclList<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call> <operator pos:line="18" pos:column="53">==<pos:position pos:line="18" pos:column="55"/></operator> <name pos:line="18" pos:column="56">ACCESS_ALLOWED<pos:position pos:line="18" pos:column="70"/></name></expr>)<pos:position pos:line="18" pos:column="71"/></condition><then pos:line="18" pos:column="71"> <block pos:line="18" pos:column="72">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">debugs<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="number" pos:line="19" pos:column="20">58<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="24">4<pos:position pos:line="19" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="27">HERE<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&lt;&lt;<pos:position pos:line="19" pos:column="40"/></operator> <literal type="string" pos:line="19" pos:column="35">"rangeOffsetLimit="<pos:position pos:line="19" pos:column="54"/></literal> <operator pos:line="19" pos:column="55">&lt;&lt;<pos:position pos:line="19" pos:column="63"/></operator> <name pos:line="19" pos:column="58">rangeOffsetLimit<pos:position pos:line="19" pos:column="74"/></name></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">rangeOffsetLimit<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">l<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">size<pos:position pos:line="20" pos:column="39"/></name></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt> <comment type="line" pos:line="20" pos:column="41">// may be -1</comment>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></for>

    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">rangeOffsetLimit<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3661_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHdrRangeSpec<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">mergeWith<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">HttpHdrRangeSpec<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">donor<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">merged<pos:position pos:line="4" pos:column="16"/></name> <argument_list pos:line="4" pos:column="17">(<argument><expr><literal type="boolean" pos:line="4" pos:column="18">false<pos:position pos:line="4" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">MERGING_BREAKS_NOTHING<pos:position pos:line="5" pos:column="27"/></name></expr></cpp:if>
    <comment type="block" pos:line="6" pos:column="5">/* Note: this code works, but some clients may not like its effects */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int64_t<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">rhs<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name pos:line="7" pos:column="19">offset<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">+<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">length<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>		<comment type="block" pos:line="7" pos:column="49">/* no -1 ! */</comment>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">int64_t<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">donor_rhs<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name><name pos:line="8" pos:column="31">donor<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">offset<pos:position pos:line="8" pos:column="44"/></name></name> <operator pos:line="8" pos:column="45">+<pos:position pos:line="8" pos:column="46"/></operator> <name><name pos:line="8" pos:column="47">donor<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">-&gt;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="54">length<pos:position pos:line="8" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="61"/></decl_stmt>	<comment type="block" pos:line="8" pos:column="65">/* no -1 ! */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><call><name pos:line="9" pos:column="12">known_spec<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">offset<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><call><name pos:line="10" pos:column="12">known_spec<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name><name pos:line="10" pos:column="23">donor<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">offset<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">length<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&gt;<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">donor<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">length<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">&gt;<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="13" pos:column="5">/* do we have a left hand side overlap? */</comment>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">donor<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">offset<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="25">offset<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&amp;&amp;<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="35">offset<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">&lt;=<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="45">donor_rhs<pos:position pos:line="15" pos:column="54"/></name></expr>)<pos:position pos:line="15" pos:column="55"/></condition><then pos:line="15" pos:column="55"> <block pos:line="15" pos:column="56">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">offset<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name><name pos:line="16" pos:column="18">donor<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">offset<pos:position pos:line="16" pos:column="31"/></name></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>	<comment type="block" pos:line="16" pos:column="33">/* decrease left offset */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">merged<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">1<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* do we have a right hand side overlap? */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">donor<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">offset<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">&lt;=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="26">rhs<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">&amp;&amp;<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="33">rhs<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&lt;<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="39">donor_rhs<pos:position pos:line="21" pos:column="48"/></name></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">rhs<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">donor_rhs<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>	<comment type="block" pos:line="22" pos:column="33">/* increase right offset */</comment>
        <expr_stmt><expr><name pos:line="23" pos:column="9">merged<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">1<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* adjust length if offsets have been changed */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">merged<pos:position pos:line="27" pos:column="15"/></name></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16"> <block pos:line="27" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">assert<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">rhs<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">&gt;<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="22">offset<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">length<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">rhs<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">-<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">offset<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <comment type="block" pos:line="31" pos:column="9">/* does recepient contain donor? */</comment>
        <expr_stmt><expr><name pos:line="32" pos:column="9">merged<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator>
            <name pos:line="33" pos:column="13">offset<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&lt;=<pos:position pos:line="33" pos:column="25"/></operator> <name><name pos:line="33" pos:column="23">donor<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">offset<pos:position pos:line="33" pos:column="36"/></name></name> <operator pos:line="33" pos:column="37">&amp;&amp;<pos:position pos:line="33" pos:column="47"/></operator> <name><name pos:line="33" pos:column="40">donor<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">offset<pos:position pos:line="33" pos:column="53"/></name></name> <operator pos:line="33" pos:column="54">&lt;<pos:position pos:line="33" pos:column="58"/></operator> <name pos:line="33" pos:column="56">rhs<pos:position pos:line="33" pos:column="59"/></name></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">merged<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

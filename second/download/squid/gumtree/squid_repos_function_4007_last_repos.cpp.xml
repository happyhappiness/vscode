<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4007_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">ACLARP<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">dump<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">()<pos:position pos:line="2" pos:column="15"/></parameter_list> <specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBufList<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">sl<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">auto<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">i<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name><name pos:line="5" pos:column="19">aclArpData<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">begin<pos:position pos:line="5" pos:column="35"/></name></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></init> <condition><expr><name pos:line="5" pos:column="39">i<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">!=<pos:position pos:line="5" pos:column="43"/></operator> <call><name><name pos:line="5" pos:column="44">aclArpData<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">.<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="55">end<pos:position pos:line="5" pos:column="58"/></name></name><argument_list pos:line="5" pos:column="58">()<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></condition> <incr><expr><operator pos:line="5" pos:column="62">++<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">i<pos:position pos:line="5" pos:column="65"/></name></expr></incr>)<pos:position pos:line="5" pos:column="66"/></control> <block pos:line="5" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">buf<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><literal type="number" pos:line="6" pos:column="18">48<pos:position pos:line="6" pos:column="20"/></literal></expr>]<pos:position pos:line="6" pos:column="21"/></index></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">encode<pos:position pos:line="7" pos:column="18"/></name></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">buf<pos:position pos:line="7" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="23">48<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">sl<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">push_back<pos:position pos:line="8" pos:column="21"/></name></name><argument_list pos:line="8" pos:column="21">(<argument><expr><call><name pos:line="8" pos:column="22">SBuf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">buf<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">sl<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

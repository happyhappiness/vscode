<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3773_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">readCertFromMemory<pos:position pos:line="1" pos:column="29"/></name></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">Security<pos:position pos:line="1" pos:column="38"/></name><operator pos:line="1" pos:column="38">::<pos:position pos:line="1" pos:column="40"/></operator><name pos:line="1" pos:column="40">CertPointer<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">&amp;<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="54">cert<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type> <name pos:line="1" pos:column="73">bufferToRead<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">Ssl<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">BIO_Pointer<pos:position pos:line="3" pos:column="21"/></name></name></type> <name pos:line="3" pos:column="22">bio<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><call><name pos:line="3" pos:column="26">BIO_new<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><call><name pos:line="3" pos:column="34">BIO_s_mem<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">()<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">BIO_puts<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><call><name><name pos:line="4" pos:column="14">bio<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">get<pos:position pos:line="4" pos:column="21"/></name></name><argument_list pos:line="4" pos:column="21">()<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="4" pos:column="25">bufferToRead<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">X509<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type> <name pos:line="6" pos:column="12">certPtr<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">cert<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">.<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">resetWithoutLocking<pos:position pos:line="7" pos:column="29"/></name></name><argument_list pos:line="7" pos:column="29">(<argument><expr><call><name pos:line="7" pos:column="30">PEM_read_bio_X509<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">(<argument><expr><call><name><name pos:line="7" pos:column="48">bio<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">.<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">get<pos:position pos:line="7" pos:column="55"/></name></name><argument_list pos:line="7" pos:column="55">()<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="7" pos:column="59">&amp;<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="60">certPtr<pos:position pos:line="7" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="69">0<pos:position pos:line="7" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="72">0<pos:position pos:line="7" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="76"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">cert<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>

    <return pos:line="11" pos:column="5">return <expr><literal type="boolean" pos:line="11" pos:column="12">true<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2308_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">accessLogDumpLogFormat<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">StoreEntry<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">entry<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">name<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">logformat<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type> <name pos:line="2" pos:column="74">definitions<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">logformat_token<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">t<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">logformat<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">format<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">logformat_token_table_entry<pos:position pos:line="7" pos:column="39"/></name></name> <modifier pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></modifier></type><name pos:line="7" pos:column="41">te<pos:position pos:line="7" pos:column="43"/></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">46<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">4<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="19">"accessLogDumpLogFormat called"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">format<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">definitions<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></init> <condition><expr><name pos:line="10" pos:column="32">format<pos:position pos:line="10" pos:column="38"/></name></expr>;<pos:position pos:line="10" pos:column="39"/></condition> <incr><expr><name pos:line="10" pos:column="40">format<pos:position pos:line="10" pos:column="46"/></name> <operator pos:line="10" pos:column="47">=<pos:position pos:line="10" pos:column="48"/></operator> <name><name pos:line="10" pos:column="49">format<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">next<pos:position pos:line="10" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="10" pos:column="62"/></control> <block pos:line="10" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">46<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"Dumping logformat definition for "<pos:position pos:line="11" pos:column="58"/></literal> <operator pos:line="11" pos:column="59">&lt;&lt;<pos:position pos:line="11" pos:column="67"/></operator> <name><name pos:line="11" pos:column="62">format<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">-&gt;<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="70">name<pos:position pos:line="11" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">storeAppendPrintf<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">entry<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"logformat %s "<pos:position pos:line="12" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="51">format<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">name<pos:position pos:line="12" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="65"/></expr_stmt>

        <for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">t<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name><name pos:line="14" pos:column="18">format<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">format<pos:position pos:line="14" pos:column="32"/></name></name></expr>;<pos:position pos:line="14" pos:column="33"/></init> <condition><expr><name pos:line="14" pos:column="34">t<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></condition> <incr><expr><name pos:line="14" pos:column="37">t<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <name><name pos:line="14" pos:column="41">t<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">next<pos:position pos:line="14" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="49"/></control> <block pos:line="14" pos:column="50">{
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">t<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">type<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">LFT_STRING<pos:position pos:line="15" pos:column="38"/></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">storeAppendPrintf<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">entry<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="42">"%s"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="48">t<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">data<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">.<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">string<pos:position pos:line="16" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt></block></then>
            <else pos:line="17" pos:column="13">else <block pos:line="17" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name></type> <name><name pos:line="18" pos:column="22">argbuf<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><literal type="number" pos:line="18" pos:column="29">256<pos:position pos:line="18" pos:column="32"/></literal></expr>]<pos:position pos:line="18" pos:column="33"/></index></name></decl>;<pos:position pos:line="18" pos:column="34"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name> <modifier pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></modifier></type><name pos:line="19" pos:column="23">arg<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><name pos:line="19" pos:column="29">NULL<pos:position pos:line="19" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="20" pos:column="17">logformat_bcode_t<pos:position pos:line="20" pos:column="34"/></name></type> <name pos:line="20" pos:column="35">type<pos:position pos:line="20" pos:column="39"/></name> <init pos:line="20" pos:column="40">= <expr><name><name pos:line="20" pos:column="42">t<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">type<pos:position pos:line="20" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="50"/></decl_stmt>

                <switch pos:line="22" pos:column="17">switch <condition pos:line="22" pos:column="24">(<expr><name pos:line="22" pos:column="25">type<pos:position pos:line="22" pos:column="29"/></name></expr>)<pos:position pos:line="22" pos:column="30"/></condition> <block pos:line="22" pos:column="31">{
                    <comment type="block" pos:line="23" pos:column="21">/* special cases */</comment>

                <case pos:line="25" pos:column="17">case <expr><name pos:line="25" pos:column="22">LFT_STRING<pos:position pos:line="25" pos:column="32"/></name></expr>:<pos:position pos:line="25" pos:column="33"/></case>
                    <break pos:line="26" pos:column="21">break;<pos:position pos:line="26" pos:column="27"/></break>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">ICAP_CLIENT<pos:position pos:line="27" pos:column="16"/></name></expr></cpp:if>
                <case pos:line="28" pos:column="17">case <expr><name pos:line="28" pos:column="22">LFT_ICAP_LAST_MATCHED_HEADER_ELEM<pos:position pos:line="28" pos:column="55"/></name></expr>:<pos:position pos:line="28" pos:column="56"/></case>
                <case pos:line="29" pos:column="17">case <expr><name pos:line="29" pos:column="22">LFT_ICAP_REQ_HEADER_ELEM<pos:position pos:line="29" pos:column="46"/></name></expr>:<pos:position pos:line="29" pos:column="47"/></case>
                <case pos:line="30" pos:column="17">case <expr><name pos:line="30" pos:column="22">LFT_ICAP_REP_HEADER_ELEM<pos:position pos:line="30" pos:column="46"/></name></expr>:<pos:position pos:line="30" pos:column="47"/></case>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
                <case pos:line="32" pos:column="17">case <expr><name pos:line="32" pos:column="22">LFT_REQUEST_HEADER_ELEM<pos:position pos:line="32" pos:column="45"/></name></expr>:<pos:position pos:line="32" pos:column="46"/></case>
                <case pos:line="33" pos:column="17">case <expr><name pos:line="33" pos:column="22">LFT_ADAPTED_REQUEST_HEADER_ELEM<pos:position pos:line="33" pos:column="53"/></name></expr>:<pos:position pos:line="33" pos:column="54"/></case>
                <case pos:line="34" pos:column="17">case <expr><name pos:line="34" pos:column="22">LFT_REPLY_HEADER_ELEM<pos:position pos:line="34" pos:column="43"/></name></expr>:<pos:position pos:line="34" pos:column="44"/></case>

                    <if pos:line="36" pos:column="21">if <condition pos:line="36" pos:column="24">(<expr><name><name pos:line="36" pos:column="25">t<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">data<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">.<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">header<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">.<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">separator<pos:position pos:line="36" pos:column="49"/></name></name> <operator pos:line="36" pos:column="50">!=<pos:position pos:line="36" pos:column="52"/></operator> <literal type="char" pos:line="36" pos:column="53">','<pos:position pos:line="36" pos:column="56"/></literal></expr>)<pos:position pos:line="36" pos:column="57"/></condition><then pos:line="36" pos:column="57">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">snprintf<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">argbuf<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="42">sizeof<argument_list pos:line="37" pos:column="48">(<argument><expr><name pos:line="37" pos:column="49">argbuf<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="58">"%s:%c%s"<pos:position pos:line="37" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="69">t<pos:position pos:line="37" pos:column="70"/></name><operator pos:line="37" pos:column="70">-&gt;<pos:position pos:line="37" pos:column="75"/></operator><name pos:line="37" pos:column="72">data<pos:position pos:line="37" pos:column="76"/></name><operator pos:line="37" pos:column="76">.<pos:position pos:line="37" pos:column="77"/></operator><name pos:line="37" pos:column="77">header<pos:position pos:line="37" pos:column="83"/></name><operator pos:line="37" pos:column="83">.<pos:position pos:line="37" pos:column="84"/></operator><name pos:line="37" pos:column="84">header<pos:position pos:line="37" pos:column="90"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="92">t<pos:position pos:line="37" pos:column="93"/></name><operator pos:line="37" pos:column="93">-&gt;<pos:position pos:line="37" pos:column="98"/></operator><name pos:line="37" pos:column="95">data<pos:position pos:line="37" pos:column="99"/></name><operator pos:line="37" pos:column="99">.<pos:position pos:line="37" pos:column="100"/></operator><name pos:line="37" pos:column="100">header<pos:position pos:line="37" pos:column="106"/></name><operator pos:line="37" pos:column="106">.<pos:position pos:line="37" pos:column="107"/></operator><name pos:line="37" pos:column="107">separator<pos:position pos:line="37" pos:column="116"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="118">t<pos:position pos:line="37" pos:column="119"/></name><operator pos:line="37" pos:column="119">-&gt;<pos:position pos:line="37" pos:column="124"/></operator><name pos:line="37" pos:column="121">data<pos:position pos:line="37" pos:column="125"/></name><operator pos:line="37" pos:column="125">.<pos:position pos:line="37" pos:column="126"/></operator><name pos:line="37" pos:column="126">header<pos:position pos:line="37" pos:column="132"/></name><operator pos:line="37" pos:column="132">.<pos:position pos:line="37" pos:column="133"/></operator><name pos:line="37" pos:column="133">element<pos:position pos:line="37" pos:column="140"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="142"/></expr_stmt></block></then>
                    <else pos:line="38" pos:column="21">else
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">snprintf<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">argbuf<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="42">sizeof<argument_list pos:line="39" pos:column="48">(<argument><expr><name pos:line="39" pos:column="49">argbuf<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="58">"%s:%s"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="67">t<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">-&gt;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="70">data<pos:position pos:line="39" pos:column="74"/></name><operator pos:line="39" pos:column="74">.<pos:position pos:line="39" pos:column="75"/></operator><name pos:line="39" pos:column="75">header<pos:position pos:line="39" pos:column="81"/></name><operator pos:line="39" pos:column="81">.<pos:position pos:line="39" pos:column="82"/></operator><name pos:line="39" pos:column="82">header<pos:position pos:line="39" pos:column="88"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="90">t<pos:position pos:line="39" pos:column="91"/></name><operator pos:line="39" pos:column="91">-&gt;<pos:position pos:line="39" pos:column="96"/></operator><name pos:line="39" pos:column="93">data<pos:position pos:line="39" pos:column="97"/></name><operator pos:line="39" pos:column="97">.<pos:position pos:line="39" pos:column="98"/></operator><name pos:line="39" pos:column="98">header<pos:position pos:line="39" pos:column="104"/></name><operator pos:line="39" pos:column="104">.<pos:position pos:line="39" pos:column="105"/></operator><name pos:line="39" pos:column="105">element<pos:position pos:line="39" pos:column="112"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="114"/></expr_stmt></block></else></if>

                    <expr_stmt><expr><name pos:line="41" pos:column="21">arg<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">argbuf<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>

                    <switch pos:line="43" pos:column="21">switch <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">type<pos:position pos:line="43" pos:column="33"/></name></expr>)<pos:position pos:line="43" pos:column="34"/></condition> <block pos:line="43" pos:column="35">{
                    <case pos:line="44" pos:column="21">case <expr><name pos:line="44" pos:column="26">LFT_REQUEST_HEADER_ELEM<pos:position pos:line="44" pos:column="49"/></name></expr>:<pos:position pos:line="44" pos:column="50"/></case>
                        <expr_stmt><expr><name pos:line="45" pos:column="25">type<pos:position pos:line="45" pos:column="29"/></name> <operator pos:line="45" pos:column="30">=<pos:position pos:line="45" pos:column="31"/></operator> <name pos:line="45" pos:column="32">LFT_REQUEST_HEADER_ELEM<pos:position pos:line="45" pos:column="55"/></name></expr>;<pos:position pos:line="45" pos:column="56"/></expr_stmt>
                        <break pos:line="46" pos:column="25">break;<pos:position pos:line="46" pos:column="31"/></break>
                    <case pos:line="47" pos:column="21">case <expr><name pos:line="47" pos:column="26">LFT_ADAPTED_REQUEST_HEADER_ELEM<pos:position pos:line="47" pos:column="57"/></name></expr>:<pos:position pos:line="47" pos:column="58"/></case>
                        <expr_stmt><expr><name pos:line="48" pos:column="25">type<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">=<pos:position pos:line="48" pos:column="31"/></operator> <name pos:line="48" pos:column="32">LFT_ADAPTED_REQUEST_HEADER_ELEM<pos:position pos:line="48" pos:column="63"/></name></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt>
                        <break pos:line="49" pos:column="25">break;<pos:position pos:line="49" pos:column="31"/></break>
                    <case pos:line="50" pos:column="21">case <expr><name pos:line="50" pos:column="26">LFT_REPLY_HEADER_ELEM<pos:position pos:line="50" pos:column="47"/></name></expr>:<pos:position pos:line="50" pos:column="48"/></case>
                        <expr_stmt><expr><name pos:line="51" pos:column="25">type<pos:position pos:line="51" pos:column="29"/></name> <operator pos:line="51" pos:column="30">=<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="32">LFT_REPLY_HEADER_ELEM<pos:position pos:line="51" pos:column="53"/></name></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
                        <break pos:line="52" pos:column="25">break;<pos:position pos:line="52" pos:column="31"/></break>
<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><name pos:line="53" pos:column="5">ICAP_CLIENT<pos:position pos:line="53" pos:column="16"/></name></expr></cpp:if>
                    <case pos:line="54" pos:column="21">case <expr><name pos:line="54" pos:column="26">LFT_ICAP_LAST_MATCHED_HEADER_ELEM<pos:position pos:line="54" pos:column="59"/></name></expr>:<pos:position pos:line="54" pos:column="60"/></case>
                        <expr_stmt><expr><name pos:line="55" pos:column="25">type<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">=<pos:position pos:line="55" pos:column="31"/></operator> <name pos:line="55" pos:column="32">LFT_ICAP_LAST_MATCHED_HEADER<pos:position pos:line="55" pos:column="60"/></name></expr>;<pos:position pos:line="55" pos:column="61"/></expr_stmt>
                        <break pos:line="56" pos:column="25">break;<pos:position pos:line="56" pos:column="31"/></break>
                    <case pos:line="57" pos:column="21">case <expr><name pos:line="57" pos:column="26">LFT_ICAP_REQ_HEADER_ELEM<pos:position pos:line="57" pos:column="50"/></name></expr>:<pos:position pos:line="57" pos:column="51"/></case>
                        <expr_stmt><expr><name pos:line="58" pos:column="25">type<pos:position pos:line="58" pos:column="29"/></name> <operator pos:line="58" pos:column="30">=<pos:position pos:line="58" pos:column="31"/></operator> <name pos:line="58" pos:column="32">LFT_ICAP_REQ_HEADER<pos:position pos:line="58" pos:column="51"/></name></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>
                        <break pos:line="59" pos:column="25">break;<pos:position pos:line="59" pos:column="31"/></break>
                    <case pos:line="60" pos:column="21">case <expr><name pos:line="60" pos:column="26">LFT_ICAP_REP_HEADER_ELEM<pos:position pos:line="60" pos:column="50"/></name></expr>:<pos:position pos:line="60" pos:column="51"/></case>
                        <expr_stmt><expr><name pos:line="61" pos:column="25">type<pos:position pos:line="61" pos:column="29"/></name> <operator pos:line="61" pos:column="30">=<pos:position pos:line="61" pos:column="31"/></operator> <name pos:line="61" pos:column="32">LFT_ICAP_REP_HEADER<pos:position pos:line="61" pos:column="51"/></name></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>
                        <break pos:line="62" pos:column="25">break;<pos:position pos:line="62" pos:column="31"/></break>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
                    <default pos:line="64" pos:column="21">default:<pos:position pos:line="64" pos:column="29"/></default>
                        <break pos:line="65" pos:column="25">break;<pos:position pos:line="65" pos:column="31"/></break>
                    }<pos:position pos:line="66" pos:column="22"/></block></switch>

                    <break pos:line="68" pos:column="21">break;<pos:position pos:line="68" pos:column="27"/></break>

                <case pos:line="70" pos:column="17">case <expr><name pos:line="70" pos:column="22">LFT_REQUEST_ALL_HEADERS<pos:position pos:line="70" pos:column="45"/></name></expr>:<pos:position pos:line="70" pos:column="46"/></case>
                <case pos:line="71" pos:column="17">case <expr><name pos:line="71" pos:column="22">LFT_ADAPTED_REQUEST_ALL_HEADERS<pos:position pos:line="71" pos:column="53"/></name></expr>:<pos:position pos:line="71" pos:column="54"/></case>
                <case pos:line="72" pos:column="17">case <expr><name pos:line="72" pos:column="22">LFT_REPLY_ALL_HEADERS<pos:position pos:line="72" pos:column="43"/></name></expr>:<pos:position pos:line="72" pos:column="44"/></case>

<cpp:if pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">if<pos:position pos:line="74" pos:column="4"/></cpp:directive> <expr><name pos:line="74" pos:column="5">ICAP_CLIENT<pos:position pos:line="74" pos:column="16"/></name></expr></cpp:if>
                <case pos:line="75" pos:column="17">case <expr><name pos:line="75" pos:column="22">LFT_ICAP_LAST_MATCHED_ALL_HEADERS<pos:position pos:line="75" pos:column="55"/></name></expr>:<pos:position pos:line="75" pos:column="56"/></case>
                <case pos:line="76" pos:column="17">case <expr><name pos:line="76" pos:column="22">LFT_ICAP_REQ_ALL_HEADERS<pos:position pos:line="76" pos:column="46"/></name></expr>:<pos:position pos:line="76" pos:column="47"/></case>
                <case pos:line="77" pos:column="17">case <expr><name pos:line="77" pos:column="22">LFT_ICAP_REP_ALL_HEADERS<pos:position pos:line="77" pos:column="46"/></name></expr>:<pos:position pos:line="77" pos:column="47"/></case>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>

                    <switch pos:line="80" pos:column="21">switch <condition pos:line="80" pos:column="28">(<expr><name pos:line="80" pos:column="29">type<pos:position pos:line="80" pos:column="33"/></name></expr>)<pos:position pos:line="80" pos:column="34"/></condition> <block pos:line="80" pos:column="35">{
                    <case pos:line="81" pos:column="21">case <expr><name pos:line="81" pos:column="26">LFT_REQUEST_ALL_HEADERS<pos:position pos:line="81" pos:column="49"/></name></expr>:<pos:position pos:line="81" pos:column="50"/></case>
                        <expr_stmt><expr><name pos:line="82" pos:column="25">type<pos:position pos:line="82" pos:column="29"/></name> <operator pos:line="82" pos:column="30">=<pos:position pos:line="82" pos:column="31"/></operator> <name pos:line="82" pos:column="32">LFT_REQUEST_HEADER<pos:position pos:line="82" pos:column="50"/></name></expr>;<pos:position pos:line="82" pos:column="51"/></expr_stmt>
                        <break pos:line="83" pos:column="25">break;<pos:position pos:line="83" pos:column="31"/></break>
                    <case pos:line="84" pos:column="21">case <expr><name pos:line="84" pos:column="26">LFT_ADAPTED_REQUEST_ALL_HEADERS<pos:position pos:line="84" pos:column="57"/></name></expr>:<pos:position pos:line="84" pos:column="58"/></case>
                        <expr_stmt><expr><name pos:line="85" pos:column="25">type<pos:position pos:line="85" pos:column="29"/></name> <operator pos:line="85" pos:column="30">=<pos:position pos:line="85" pos:column="31"/></operator> <name pos:line="85" pos:column="32">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="85" pos:column="58"/></name></expr>;<pos:position pos:line="85" pos:column="59"/></expr_stmt>
                        <break pos:line="86" pos:column="25">break;<pos:position pos:line="86" pos:column="31"/></break>
                    <case pos:line="87" pos:column="21">case <expr><name pos:line="87" pos:column="26">LFT_REPLY_ALL_HEADERS<pos:position pos:line="87" pos:column="47"/></name></expr>:<pos:position pos:line="87" pos:column="48"/></case>
                        <expr_stmt><expr><name pos:line="88" pos:column="25">type<pos:position pos:line="88" pos:column="29"/></name> <operator pos:line="88" pos:column="30">=<pos:position pos:line="88" pos:column="31"/></operator> <name pos:line="88" pos:column="32">LFT_REPLY_HEADER<pos:position pos:line="88" pos:column="48"/></name></expr>;<pos:position pos:line="88" pos:column="49"/></expr_stmt>
                        <break pos:line="89" pos:column="25">break;<pos:position pos:line="89" pos:column="31"/></break>
<cpp:if pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">if<pos:position pos:line="90" pos:column="4"/></cpp:directive> <expr><name pos:line="90" pos:column="5">ICAP_CLIENT<pos:position pos:line="90" pos:column="16"/></name></expr></cpp:if>
                    <case pos:line="91" pos:column="21">case <expr><name pos:line="91" pos:column="26">LFT_ICAP_LAST_MATCHED_ALL_HEADERS<pos:position pos:line="91" pos:column="59"/></name></expr>:<pos:position pos:line="91" pos:column="60"/></case>
                        <expr_stmt><expr><name pos:line="92" pos:column="25">type<pos:position pos:line="92" pos:column="29"/></name> <operator pos:line="92" pos:column="30">=<pos:position pos:line="92" pos:column="31"/></operator> <name pos:line="92" pos:column="32">LFT_ICAP_LAST_MATCHED_HEADER<pos:position pos:line="92" pos:column="60"/></name></expr>;<pos:position pos:line="92" pos:column="61"/></expr_stmt>
                        <break pos:line="93" pos:column="25">break;<pos:position pos:line="93" pos:column="31"/></break>
                    <case pos:line="94" pos:column="21">case <expr><name pos:line="94" pos:column="26">LFT_ICAP_REQ_ALL_HEADERS<pos:position pos:line="94" pos:column="50"/></name></expr>:<pos:position pos:line="94" pos:column="51"/></case>
                        <expr_stmt><expr><name pos:line="95" pos:column="25">type<pos:position pos:line="95" pos:column="29"/></name> <operator pos:line="95" pos:column="30">=<pos:position pos:line="95" pos:column="31"/></operator> <name pos:line="95" pos:column="32">LFT_ICAP_REQ_HEADER<pos:position pos:line="95" pos:column="51"/></name></expr>;<pos:position pos:line="95" pos:column="52"/></expr_stmt>
                        <break pos:line="96" pos:column="25">break;<pos:position pos:line="96" pos:column="31"/></break>
                    <case pos:line="97" pos:column="21">case <expr><name pos:line="97" pos:column="26">LFT_ICAP_REP_ALL_HEADERS<pos:position pos:line="97" pos:column="50"/></name></expr>:<pos:position pos:line="97" pos:column="51"/></case>
                        <expr_stmt><expr><name pos:line="98" pos:column="25">type<pos:position pos:line="98" pos:column="29"/></name> <operator pos:line="98" pos:column="30">=<pos:position pos:line="98" pos:column="31"/></operator> <name pos:line="98" pos:column="32">LFT_ICAP_REP_HEADER<pos:position pos:line="98" pos:column="51"/></name></expr>;<pos:position pos:line="98" pos:column="52"/></expr_stmt>
                        <break pos:line="99" pos:column="25">break;<pos:position pos:line="99" pos:column="31"/></break>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
                    <default pos:line="101" pos:column="21">default:<pos:position pos:line="101" pos:column="29"/></default>
                        <break pos:line="102" pos:column="25">break;<pos:position pos:line="102" pos:column="31"/></break>
                    }<pos:position pos:line="103" pos:column="22"/></block></switch>

                    <break pos:line="105" pos:column="21">break;<pos:position pos:line="105" pos:column="27"/></break>

                <default pos:line="107" pos:column="17">default:<pos:position pos:line="107" pos:column="25"/></default>
                    <if pos:line="108" pos:column="21">if <condition pos:line="108" pos:column="24">(<expr><name><name pos:line="108" pos:column="25">t<pos:position pos:line="108" pos:column="26"/></name><operator pos:line="108" pos:column="26">-&gt;<pos:position pos:line="108" pos:column="31"/></operator><name pos:line="108" pos:column="28">data<pos:position pos:line="108" pos:column="32"/></name><operator pos:line="108" pos:column="32">.<pos:position pos:line="108" pos:column="33"/></operator><name pos:line="108" pos:column="33">string<pos:position pos:line="108" pos:column="39"/></name></name></expr>)<pos:position pos:line="108" pos:column="40"/></condition><then pos:line="108" pos:column="40">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="25">arg<pos:position pos:line="109" pos:column="28"/></name> <operator pos:line="109" pos:column="29">=<pos:position pos:line="109" pos:column="30"/></operator> <name><name pos:line="109" pos:column="31">t<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">-&gt;<pos:position pos:line="109" pos:column="37"/></operator><name pos:line="109" pos:column="34">data<pos:position pos:line="109" pos:column="38"/></name><operator pos:line="109" pos:column="38">.<pos:position pos:line="109" pos:column="39"/></operator><name pos:line="109" pos:column="39">string<pos:position pos:line="109" pos:column="45"/></name></name></expr>;<pos:position pos:line="109" pos:column="46"/></expr_stmt></block></then></if>

                    <break pos:line="111" pos:column="21">break;<pos:position pos:line="111" pos:column="27"/></break>
                }<pos:position pos:line="112" pos:column="18"/></block></switch>

                <expr_stmt><expr><call><name><name pos:line="114" pos:column="17">entry<pos:position pos:line="114" pos:column="22"/></name><operator pos:line="114" pos:column="22">-&gt;<pos:position pos:line="114" pos:column="27"/></operator><name pos:line="114" pos:column="24">append<pos:position pos:line="114" pos:column="30"/></name></name><argument_list pos:line="114" pos:column="30">(<argument><expr><literal type="string" pos:line="114" pos:column="31">"%"<pos:position pos:line="114" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="36">1<pos:position pos:line="114" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="39"/></expr_stmt>

                <switch pos:line="116" pos:column="17">switch <condition pos:line="116" pos:column="24">(<expr><name><name pos:line="116" pos:column="25">t<pos:position pos:line="116" pos:column="26"/></name><operator pos:line="116" pos:column="26">-&gt;<pos:position pos:line="116" pos:column="31"/></operator><name pos:line="116" pos:column="28">quote<pos:position pos:line="116" pos:column="33"/></name></name></expr>)<pos:position pos:line="116" pos:column="34"/></condition> <block pos:line="116" pos:column="35">{

                <case pos:line="118" pos:column="17">case <expr><name pos:line="118" pos:column="22">LOG_QUOTE_QUOTES<pos:position pos:line="118" pos:column="38"/></name></expr>:<pos:position pos:line="118" pos:column="39"/></case>
                    <expr_stmt><expr><call><name><name pos:line="119" pos:column="21">entry<pos:position pos:line="119" pos:column="26"/></name><operator pos:line="119" pos:column="26">-&gt;<pos:position pos:line="119" pos:column="31"/></operator><name pos:line="119" pos:column="28">append<pos:position pos:line="119" pos:column="34"/></name></name><argument_list pos:line="119" pos:column="34">(<argument><expr><literal type="string" pos:line="119" pos:column="35">"\""<pos:position pos:line="119" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="41">1<pos:position pos:line="119" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="44"/></expr_stmt>
                    <break pos:line="120" pos:column="21">break;<pos:position pos:line="120" pos:column="27"/></break>

                <case pos:line="122" pos:column="17">case <expr><name pos:line="122" pos:column="22">LOG_QUOTE_BRAKETS<pos:position pos:line="122" pos:column="39"/></name></expr>:<pos:position pos:line="122" pos:column="40"/></case>
                    <expr_stmt><expr><call><name><name pos:line="123" pos:column="21">entry<pos:position pos:line="123" pos:column="26"/></name><operator pos:line="123" pos:column="26">-&gt;<pos:position pos:line="123" pos:column="31"/></operator><name pos:line="123" pos:column="28">append<pos:position pos:line="123" pos:column="34"/></name></name><argument_list pos:line="123" pos:column="34">(<argument><expr><literal type="string" pos:line="123" pos:column="35">"["<pos:position pos:line="123" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="40">1<pos:position pos:line="123" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="43"/></expr_stmt>
                    <break pos:line="124" pos:column="21">break;<pos:position pos:line="124" pos:column="27"/></break>

                <case pos:line="126" pos:column="17">case <expr><name pos:line="126" pos:column="22">LOG_QUOTE_URL<pos:position pos:line="126" pos:column="35"/></name></expr>:<pos:position pos:line="126" pos:column="36"/></case>
                    <expr_stmt><expr><call><name><name pos:line="127" pos:column="21">entry<pos:position pos:line="127" pos:column="26"/></name><operator pos:line="127" pos:column="26">-&gt;<pos:position pos:line="127" pos:column="31"/></operator><name pos:line="127" pos:column="28">append<pos:position pos:line="127" pos:column="34"/></name></name><argument_list pos:line="127" pos:column="34">(<argument><expr><literal type="string" pos:line="127" pos:column="35">"#"<pos:position pos:line="127" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="40">1<pos:position pos:line="127" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="43"/></expr_stmt>
                    <break pos:line="128" pos:column="21">break;<pos:position pos:line="128" pos:column="27"/></break>

                <case pos:line="130" pos:column="17">case <expr><name pos:line="130" pos:column="22">LOG_QUOTE_RAW<pos:position pos:line="130" pos:column="35"/></name></expr>:<pos:position pos:line="130" pos:column="36"/></case>
                    <expr_stmt><expr><call><name><name pos:line="131" pos:column="21">entry<pos:position pos:line="131" pos:column="26"/></name><operator pos:line="131" pos:column="26">-&gt;<pos:position pos:line="131" pos:column="31"/></operator><name pos:line="131" pos:column="28">append<pos:position pos:line="131" pos:column="34"/></name></name><argument_list pos:line="131" pos:column="34">(<argument><expr><literal type="string" pos:line="131" pos:column="35">"'"<pos:position pos:line="131" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="40">1<pos:position pos:line="131" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="43"/></expr_stmt>
                    <break pos:line="132" pos:column="21">break;<pos:position pos:line="132" pos:column="27"/></break>

                <case pos:line="134" pos:column="17">case <expr><name pos:line="134" pos:column="22">LOG_QUOTE_NONE<pos:position pos:line="134" pos:column="36"/></name></expr>:<pos:position pos:line="134" pos:column="37"/></case>
                    <break pos:line="135" pos:column="21">break;<pos:position pos:line="135" pos:column="27"/></break>
                }<pos:position pos:line="136" pos:column="18"/></block></switch>

                <if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name><name pos:line="138" pos:column="21">t<pos:position pos:line="138" pos:column="22"/></name><operator pos:line="138" pos:column="22">-&gt;<pos:position pos:line="138" pos:column="27"/></operator><name pos:line="138" pos:column="24">left<pos:position pos:line="138" pos:column="28"/></name></name></expr>)<pos:position pos:line="138" pos:column="29"/></condition><then pos:line="138" pos:column="29">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="139" pos:column="21">entry<pos:position pos:line="139" pos:column="26"/></name><operator pos:line="139" pos:column="26">-&gt;<pos:position pos:line="139" pos:column="31"/></operator><name pos:line="139" pos:column="28">append<pos:position pos:line="139" pos:column="34"/></name></name><argument_list pos:line="139" pos:column="34">(<argument><expr><literal type="string" pos:line="139" pos:column="35">"-"<pos:position pos:line="139" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="40">1<pos:position pos:line="139" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt></block></then></if>

                <if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><name><name pos:line="141" pos:column="21">t<pos:position pos:line="141" pos:column="22"/></name><operator pos:line="141" pos:column="22">-&gt;<pos:position pos:line="141" pos:column="27"/></operator><name pos:line="141" pos:column="24">zero<pos:position pos:line="141" pos:column="28"/></name></name></expr>)<pos:position pos:line="141" pos:column="29"/></condition><then pos:line="141" pos:column="29">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="142" pos:column="21">entry<pos:position pos:line="142" pos:column="26"/></name><operator pos:line="142" pos:column="26">-&gt;<pos:position pos:line="142" pos:column="31"/></operator><name pos:line="142" pos:column="28">append<pos:position pos:line="142" pos:column="34"/></name></name><argument_list pos:line="142" pos:column="34">(<argument><expr><literal type="string" pos:line="142" pos:column="35">"0"<pos:position pos:line="142" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="40">1<pos:position pos:line="142" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="43"/></expr_stmt></block></then></if>

                <if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name><name pos:line="144" pos:column="21">t<pos:position pos:line="144" pos:column="22"/></name><operator pos:line="144" pos:column="22">-&gt;<pos:position pos:line="144" pos:column="27"/></operator><name pos:line="144" pos:column="24">width<pos:position pos:line="144" pos:column="29"/></name></name></expr>)<pos:position pos:line="144" pos:column="30"/></condition><then pos:line="144" pos:column="30">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="21">storeAppendPrintf<pos:position pos:line="145" pos:column="38"/></name><argument_list pos:line="145" pos:column="38">(<argument><expr><name pos:line="145" pos:column="39">entry<pos:position pos:line="145" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="46">"%d"<pos:position pos:line="145" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="145" pos:column="52">(<pos:position pos:line="145" pos:column="53"/></operator><name pos:line="145" pos:column="53">int<pos:position pos:line="145" pos:column="56"/></name><operator pos:line="145" pos:column="56">)<pos:position pos:line="145" pos:column="57"/></operator> <name><name pos:line="145" pos:column="58">t<pos:position pos:line="145" pos:column="59"/></name><operator pos:line="145" pos:column="59">-&gt;<pos:position pos:line="145" pos:column="64"/></operator><name pos:line="145" pos:column="61">width<pos:position pos:line="145" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="68"/></expr_stmt></block></then></if>

                <if pos:line="147" pos:column="17">if <condition pos:line="147" pos:column="20">(<expr><name><name pos:line="147" pos:column="21">t<pos:position pos:line="147" pos:column="22"/></name><operator pos:line="147" pos:column="22">-&gt;<pos:position pos:line="147" pos:column="27"/></operator><name pos:line="147" pos:column="24">precision<pos:position pos:line="147" pos:column="33"/></name></name></expr>)<pos:position pos:line="147" pos:column="34"/></condition><then pos:line="147" pos:column="34">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="148" pos:column="21">storeAppendPrintf<pos:position pos:line="148" pos:column="38"/></name><argument_list pos:line="148" pos:column="38">(<argument><expr><name pos:line="148" pos:column="39">entry<pos:position pos:line="148" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="46">".%d"<pos:position pos:line="148" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="148" pos:column="53">(<pos:position pos:line="148" pos:column="54"/></operator><name pos:line="148" pos:column="54">int<pos:position pos:line="148" pos:column="57"/></name><operator pos:line="148" pos:column="57">)<pos:position pos:line="148" pos:column="58"/></operator> <name><name pos:line="148" pos:column="59">t<pos:position pos:line="148" pos:column="60"/></name><operator pos:line="148" pos:column="60">-&gt;<pos:position pos:line="148" pos:column="65"/></operator><name pos:line="148" pos:column="62">precision<pos:position pos:line="148" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="73"/></expr_stmt></block></then></if>

                <if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><name pos:line="150" pos:column="21">arg<pos:position pos:line="150" pos:column="24"/></name></expr>)<pos:position pos:line="150" pos:column="25"/></condition><then pos:line="150" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="21">storeAppendPrintf<pos:position pos:line="151" pos:column="38"/></name><argument_list pos:line="151" pos:column="38">(<argument><expr><name pos:line="151" pos:column="39">entry<pos:position pos:line="151" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="46">"{%s}"<pos:position pos:line="151" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="54">arg<pos:position pos:line="151" pos:column="57"/></name></expr></argument>)<pos:position pos:line="151" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="59"/></expr_stmt></block></then></if>

                <for pos:line="153" pos:column="17">for <control pos:line="153" pos:column="21">(<init><expr><name pos:line="153" pos:column="22">te<pos:position pos:line="153" pos:column="24"/></name> <operator pos:line="153" pos:column="25">=<pos:position pos:line="153" pos:column="26"/></operator> <name pos:line="153" pos:column="27">logformat_token_table<pos:position pos:line="153" pos:column="48"/></name></expr>;<pos:position pos:line="153" pos:column="49"/></init> <condition><expr><name><name pos:line="153" pos:column="50">te<pos:position pos:line="153" pos:column="52"/></name><operator pos:line="153" pos:column="52">-&gt;<pos:position pos:line="153" pos:column="57"/></operator><name pos:line="153" pos:column="54">config<pos:position pos:line="153" pos:column="60"/></name></name> <operator pos:line="153" pos:column="61">!=<pos:position pos:line="153" pos:column="63"/></operator> <name pos:line="153" pos:column="64">NULL<pos:position pos:line="153" pos:column="68"/></name></expr>;<pos:position pos:line="153" pos:column="69"/></condition> <incr><expr><name pos:line="153" pos:column="70">te<pos:position pos:line="153" pos:column="72"/></name><operator pos:line="153" pos:column="72">++<pos:position pos:line="153" pos:column="74"/></operator></expr></incr>)<pos:position pos:line="153" pos:column="75"/></control> <block pos:line="153" pos:column="76">{
                    <if pos:line="154" pos:column="21">if <condition pos:line="154" pos:column="24">(<expr><name><name pos:line="154" pos:column="25">te<pos:position pos:line="154" pos:column="27"/></name><operator pos:line="154" pos:column="27">-&gt;<pos:position pos:line="154" pos:column="32"/></operator><name pos:line="154" pos:column="29">token_type<pos:position pos:line="154" pos:column="39"/></name></name> <operator pos:line="154" pos:column="40">==<pos:position pos:line="154" pos:column="42"/></operator> <name pos:line="154" pos:column="43">type<pos:position pos:line="154" pos:column="47"/></name></expr>)<pos:position pos:line="154" pos:column="48"/></condition><then pos:line="154" pos:column="48"> <block pos:line="154" pos:column="49">{
                        <expr_stmt><expr><call><name pos:line="155" pos:column="25">storeAppendPrintf<pos:position pos:line="155" pos:column="42"/></name><argument_list pos:line="155" pos:column="42">(<argument><expr><name pos:line="155" pos:column="43">entry<pos:position pos:line="155" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="50">"%s"<pos:position pos:line="155" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="56">te<pos:position pos:line="155" pos:column="58"/></name><operator pos:line="155" pos:column="58">-&gt;<pos:position pos:line="155" pos:column="63"/></operator><name pos:line="155" pos:column="60">config<pos:position pos:line="155" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="68"/></expr_stmt>
                        <break pos:line="156" pos:column="25">break;<pos:position pos:line="156" pos:column="31"/></break>
                    }<pos:position pos:line="157" pos:column="22"/></block></then></if>
                }<pos:position pos:line="158" pos:column="18"/></block></for>

                <if pos:line="160" pos:column="17">if <condition pos:line="160" pos:column="20">(<expr><name><name pos:line="160" pos:column="21">t<pos:position pos:line="160" pos:column="22"/></name><operator pos:line="160" pos:column="22">-&gt;<pos:position pos:line="160" pos:column="27"/></operator><name pos:line="160" pos:column="24">space<pos:position pos:line="160" pos:column="29"/></name></name></expr>)<pos:position pos:line="160" pos:column="30"/></condition><then pos:line="160" pos:column="30">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="161" pos:column="21">entry<pos:position pos:line="161" pos:column="26"/></name><operator pos:line="161" pos:column="26">-&gt;<pos:position pos:line="161" pos:column="31"/></operator><name pos:line="161" pos:column="28">append<pos:position pos:line="161" pos:column="34"/></name></name><argument_list pos:line="161" pos:column="34">(<argument><expr><literal type="string" pos:line="161" pos:column="35">" "<pos:position pos:line="161" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="40">1<pos:position pos:line="161" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="43"/></expr_stmt></block></then></if>

                <expr_stmt><expr><call><name pos:line="163" pos:column="17">assert<pos:position pos:line="163" pos:column="23"/></name><argument_list pos:line="163" pos:column="23">(<argument><expr><name><name pos:line="163" pos:column="24">te<pos:position pos:line="163" pos:column="26"/></name><operator pos:line="163" pos:column="26">-&gt;<pos:position pos:line="163" pos:column="31"/></operator><name pos:line="163" pos:column="28">config<pos:position pos:line="163" pos:column="34"/></name></name> <operator pos:line="163" pos:column="35">!=<pos:position pos:line="163" pos:column="37"/></operator> <name pos:line="163" pos:column="38">NULL<pos:position pos:line="163" pos:column="42"/></name></expr></argument>)<pos:position pos:line="163" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="164" pos:column="14"/></block></else></if>
        }<pos:position pos:line="165" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name><name pos:line="167" pos:column="9">entry<pos:position pos:line="167" pos:column="14"/></name><operator pos:line="167" pos:column="14">-&gt;<pos:position pos:line="167" pos:column="19"/></operator><name pos:line="167" pos:column="16">append<pos:position pos:line="167" pos:column="22"/></name></name><argument_list pos:line="167" pos:column="22">(<argument><expr><literal type="string" pos:line="167" pos:column="23">"\n"<pos:position pos:line="167" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="29">1<pos:position pos:line="167" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="168" pos:column="6"/></block></for>

}<pos:position pos:line="170" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4160_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">putConnection<pos:position pos:line="1" pos:column="49"/></name></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name><name pos:line="1" pos:column="56">Comm<pos:position pos:line="1" pos:column="60"/></name><operator pos:line="1" pos:column="60">::<pos:position pos:line="1" pos:column="62"/></operator><name pos:line="1" pos:column="62">ConnectionPointer<pos:position pos:line="1" pos:column="79"/></name></name> <modifier pos:line="1" pos:column="80">&amp;<pos:position pos:line="1" pos:column="85"/></modifier></type><name pos:line="1" pos:column="81">conn<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="87">bool<pos:position pos:line="1" pos:column="91"/></name></type> <name pos:line="1" pos:column="92">isReusable<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="104">bool<pos:position pos:line="1" pos:column="108"/></name></type> <name pos:line="1" pos:column="109">sendReset<pos:position pos:line="1" pos:column="118"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="120">const<pos:position pos:line="1" pos:column="125"/></specifier> <name pos:line="1" pos:column="126">char<pos:position pos:line="1" pos:column="130"/></name> <modifier pos:line="1" pos:column="131">*<pos:position pos:line="1" pos:column="132"/></modifier></type><name pos:line="1" pos:column="132">comment<pos:position pos:line="1" pos:column="139"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="140"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name><name pos:line="3" pos:column="10">Comm<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">::<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">IsConnOpen<pos:position pos:line="3" pos:column="26"/></name></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">conn<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="34"/></expr_stmt>
    <comment type="line" pos:line="4" pos:column="5">// do not pool an idle connection if we owe connections</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">isReusable<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&amp;&amp;<pos:position pos:line="5" pos:column="30"/></operator> <call><name pos:line="5" pos:column="23">excessConnections<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">()<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">==<pos:position pos:line="5" pos:column="45"/></operator> <literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48"> <block pos:line="5" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">93<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">3<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">HERE<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&lt;&lt;<pos:position pos:line="6" pos:column="36"/></operator> <literal type="string" pos:line="6" pos:column="31">"pushing pconn"<pos:position pos:line="6" pos:column="46"/></literal> <operator pos:line="6" pos:column="47">&lt;&lt;<pos:position pos:line="6" pos:column="55"/></operator> <name pos:line="6" pos:column="50">comment<pos:position pos:line="6" pos:column="57"/></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">commUnsetConnTimeout<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">theIdleConns<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">push<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">93<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">HERE<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&lt;&lt;<pos:position pos:line="10" pos:column="36"/></operator> <operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><ternary><condition><expr><name pos:line="10" pos:column="32">sendReset<pos:position pos:line="10" pos:column="41"/></name></expr> ?<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <expr><literal type="string" pos:line="10" pos:column="44">"RST"<pos:position pos:line="10" pos:column="49"/></literal></expr> <pos:position pos:line="10" pos:column="50"/></then><else pos:line="10" pos:column="50">: <expr><literal type="string" pos:line="10" pos:column="52">"FIN"<pos:position pos:line="10" pos:column="57"/></literal></expr></else></ternary><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator> <operator pos:line="10" pos:column="59">&lt;&lt;<pos:position pos:line="10" pos:column="67"/></operator> <literal type="string" pos:line="10" pos:column="62">"-closing "<pos:position pos:line="10" pos:column="73"/></literal> <operator pos:line="10" pos:column="74">&lt;&lt;<pos:position pos:line="10" pos:column="82"/></operator>
               <name pos:line="11" pos:column="16">comment<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
        <comment type="line" pos:line="12" pos:column="9">// comm_close called from Connection::close will clear timeout</comment>
        <comment type="line" pos:line="13" pos:column="9">// TODO: add "bool sendReset = false" to Connection::close()?</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">sendReset<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">comm_reset_close<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">conn<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt></block></then>
        <else pos:line="16" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="13">conn<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">close<pos:position pos:line="17" pos:column="24"/></name></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt></block></else></if>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">Must<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">theBusyConns<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&gt;<pos:position pos:line="20" pos:column="27"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">--<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">theBusyConns<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
    <comment type="line" pos:line="22" pos:column="5">// a connection slot released. Check if there are waiters....</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">busyCheckpoint<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">()<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

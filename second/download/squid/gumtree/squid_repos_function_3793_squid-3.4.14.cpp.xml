<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3793_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ip<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Qos<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">getNfmarkFromServer<pos:position pos:line="1" pos:column="34"/></name></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name><name pos:line="1" pos:column="41">Comm<pos:position pos:line="1" pos:column="45"/></name><operator pos:line="1" pos:column="45">::<pos:position pos:line="1" pos:column="47"/></operator><name pos:line="1" pos:column="47">ConnectionPointer<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">&amp;<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="66">server<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="74">const<pos:position pos:line="1" pos:column="79"/></specifier> <name pos:line="1" pos:column="80">fde<pos:position pos:line="1" pos:column="83"/></name> <modifier pos:line="1" pos:column="84">*<pos:position pos:line="1" pos:column="85"/></modifier></type><name pos:line="1" pos:column="85">clientFde<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="95"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">USE_LIBNETFILTERCONNTRACK<pos:position pos:line="3" pos:column="30"/></name></expr></cpp:if>
    <comment type="block" pos:line="4" pos:column="5">/* Allocate a new conntrack */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">nf_conntrack<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier><name pos:line="5" pos:column="30">ct<pos:position pos:line="5" pos:column="32"/></name></type> <init pos:line="5" pos:column="33">= <expr><call><name pos:line="5" pos:column="35">nfct_new<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></init></decl>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46"> <block pos:line="5" pos:column="47">{

        <comment type="block" pos:line="7" pos:column="9">/* Prepare data needed to find the connection in the conntrack table.
         * We need the local and remote IP address, and the local and remote
         * port numbers.
         */</comment>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">Ip<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">::<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">EnableIpv6<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">&amp;&amp;<pos:position pos:line="12" pos:column="38"/></operator> <call><name><name pos:line="12" pos:column="31">server<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">local<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">.<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">isIPv6<pos:position pos:line="12" pos:column="51"/></name></name><argument_list pos:line="12" pos:column="51">()<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54"> <block pos:line="12" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">nfct_set_attr_u8<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">ct<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">ATTR_L3PROTO<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">AF_INET6<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="14" pos:column="13">struct<pos:position pos:line="14" pos:column="19"/></name> <name pos:line="14" pos:column="20">in6_addr<pos:position pos:line="14" pos:column="28"/></name></name></type> <name pos:line="14" pos:column="29">serv_fde_remote_ip6<pos:position pos:line="14" pos:column="48"/></name></decl>;<pos:position pos:line="14" pos:column="49"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="15" pos:column="13">server<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">remote<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">getInAddr<pos:position pos:line="15" pos:column="37"/></name></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">serv_fde_remote_ip6<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">nfct_set_attr<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">ct<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">ATTR_IPV6_DST<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="46">serv_fde_remote_ip6<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">.<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="66">s6_addr<pos:position pos:line="16" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="17" pos:column="13">struct<pos:position pos:line="17" pos:column="19"/></name> <name pos:line="17" pos:column="20">in6_addr<pos:position pos:line="17" pos:column="28"/></name></name></type> <name pos:line="17" pos:column="29">serv_fde_local_ip6<pos:position pos:line="17" pos:column="47"/></name></decl>;<pos:position pos:line="17" pos:column="48"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">server<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">local<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">getInAddr<pos:position pos:line="18" pos:column="36"/></name></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">serv_fde_local_ip6<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">nfct_set_attr<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">ct<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">ATTR_IPV6_SRC<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">serv_fde_local_ip6<pos:position pos:line="19" pos:column="64"/></name><operator pos:line="19" pos:column="64">.<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="65">s6_addr<pos:position pos:line="19" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">nfct_set_attr_u8<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">ct<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">ATTR_L3PROTO<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">AF_INET<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="22" pos:column="13">struct<pos:position pos:line="22" pos:column="19"/></name> <name pos:line="22" pos:column="20">in_addr<pos:position pos:line="22" pos:column="27"/></name></name></type> <name pos:line="22" pos:column="28">serv_fde_remote_ip<pos:position pos:line="22" pos:column="46"/></name></decl>;<pos:position pos:line="22" pos:column="47"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">server<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">remote<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">getInAddr<pos:position pos:line="23" pos:column="37"/></name></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">serv_fde_remote_ip<pos:position pos:line="23" pos:column="56"/></name></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">nfct_set_attr_u32<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">ct<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">ATTR_IPV4_DST<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="50">serv_fde_remote_ip<pos:position pos:line="24" pos:column="68"/></name><operator pos:line="24" pos:column="68">.<pos:position pos:line="24" pos:column="69"/></operator><name pos:line="24" pos:column="69">s_addr<pos:position pos:line="24" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="25" pos:column="13">struct<pos:position pos:line="25" pos:column="19"/></name> <name pos:line="25" pos:column="20">in_addr<pos:position pos:line="25" pos:column="27"/></name></name></type> <name pos:line="25" pos:column="28">serv_fde_local_ip<pos:position pos:line="25" pos:column="45"/></name></decl>;<pos:position pos:line="25" pos:column="46"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">server<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">local<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">getInAddr<pos:position pos:line="26" pos:column="36"/></name></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">serv_fde_local_ip<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">nfct_set_attr_u32<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">ct<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">ATTR_IPV4_SRC<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="50">serv_fde_local_ip<pos:position pos:line="27" pos:column="67"/></name><operator pos:line="27" pos:column="67">.<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="68">s_addr<pos:position pos:line="27" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">nfct_set_attr_u8<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">ct<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">ATTR_L4PROTO<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">IPPROTO_TCP<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">nfct_set_attr_u16<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">ct<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="31">ATTR_PORT_DST<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="46">htons<pos:position pos:line="31" pos:column="51"/></name><argument_list pos:line="31" pos:column="51">(<argument><expr><call><name><name pos:line="31" pos:column="52">server<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">-&gt;<pos:position pos:line="31" pos:column="63"/></operator><name pos:line="31" pos:column="60">remote<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">.<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="67">port<pos:position pos:line="31" pos:column="71"/></name></name><argument_list pos:line="31" pos:column="71">()<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">nfct_set_attr_u16<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">ct<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">ATTR_PORT_SRC<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="46">htons<pos:position pos:line="32" pos:column="51"/></name><argument_list pos:line="32" pos:column="51">(<argument><expr><call><name><name pos:line="32" pos:column="52">server<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">local<pos:position pos:line="32" pos:column="65"/></name><operator pos:line="32" pos:column="65">.<pos:position pos:line="32" pos:column="66"/></operator><name pos:line="32" pos:column="66">port<pos:position pos:line="32" pos:column="70"/></name></name><argument_list pos:line="32" pos:column="70">()<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>

        <comment type="block" pos:line="34" pos:column="9">/* Open a handle to the conntrack */</comment>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<decl><type><name><name pos:line="35" pos:column="13">struct<pos:position pos:line="35" pos:column="19"/></name> <name pos:line="35" pos:column="20">nfct_handle<pos:position pos:line="35" pos:column="31"/></name></name> <modifier pos:line="35" pos:column="32">*<pos:position pos:line="35" pos:column="33"/></modifier><name pos:line="35" pos:column="33">h<pos:position pos:line="35" pos:column="34"/></name></type> <init pos:line="35" pos:column="35">= <expr><call><name pos:line="35" pos:column="37">nfct_open<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name pos:line="35" pos:column="47">CONNTRACK<pos:position pos:line="35" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="58">0<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr></init></decl>)<pos:position pos:line="35" pos:column="61"/></condition><then pos:line="35" pos:column="61"> <block pos:line="35" pos:column="62">{
            <comment type="block" pos:line="36" pos:column="13">/* Register the callback. The callback function will record the mark value. */</comment>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">nfct_callback_register<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">h<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">NFCT_T_ALL<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">getNfMarkCallback<pos:position pos:line="37" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="70">(<pos:position pos:line="37" pos:column="71"/></operator><name pos:line="37" pos:column="71">void<pos:position pos:line="37" pos:column="75"/></name> <operator pos:line="37" pos:column="76">*<pos:position pos:line="37" pos:column="77"/></operator><operator pos:line="37" pos:column="77">)<pos:position pos:line="37" pos:column="78"/></operator><name pos:line="37" pos:column="78">clientFde<pos:position pos:line="37" pos:column="87"/></name></expr></argument>)<pos:position pos:line="37" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="89"/></expr_stmt>
            <comment type="block" pos:line="38" pos:column="13">/* Query the conntrack table using the data previously set */</comment>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">int<pos:position pos:line="39" pos:column="16"/></name></type> <name pos:line="39" pos:column="17">x<pos:position pos:line="39" pos:column="18"/></name> <init pos:line="39" pos:column="19">= <expr><call><name pos:line="39" pos:column="21">nfct_query<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">h<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">NFCT_Q_GET<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">ct<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="51"/></decl_stmt>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">x<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">==<pos:position pos:line="40" pos:column="21"/></operator> <operator pos:line="40" pos:column="22">-<pos:position pos:line="40" pos:column="23"/></operator><literal type="number" pos:line="40" pos:column="23">1<pos:position pos:line="40" pos:column="24"/></literal></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">debugs<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><literal type="number" pos:line="41" pos:column="24">17<pos:position pos:line="41" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="28">2<pos:position pos:line="41" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="31">"QOS: Failed to retrieve connection mark: ("<pos:position pos:line="41" pos:column="75"/></literal> <operator pos:line="41" pos:column="76">&lt;&lt;<pos:position pos:line="41" pos:column="84"/></operator> <name pos:line="41" pos:column="79">x<pos:position pos:line="41" pos:column="80"/></name> <operator pos:line="41" pos:column="81">&lt;&lt;<pos:position pos:line="41" pos:column="89"/></operator> <literal type="string" pos:line="41" pos:column="84">") "<pos:position pos:line="41" pos:column="88"/></literal> <operator pos:line="41" pos:column="89">&lt;&lt;<pos:position pos:line="41" pos:column="97"/></operator> <call><name pos:line="41" pos:column="92">strerror<pos:position pos:line="41" pos:column="100"/></name><argument_list pos:line="41" pos:column="100">(<argument><expr><name pos:line="41" pos:column="101">errno<pos:position pos:line="41" pos:column="106"/></name></expr></argument>)<pos:position pos:line="41" pos:column="107"/></argument_list></call>
                       <operator pos:line="42" pos:column="24">&lt;&lt;<pos:position pos:line="42" pos:column="32"/></operator> <literal type="string" pos:line="42" pos:column="27">" (Destination "<pos:position pos:line="42" pos:column="43"/></literal> <operator pos:line="42" pos:column="44">&lt;&lt;<pos:position pos:line="42" pos:column="52"/></operator> <name><name pos:line="42" pos:column="47">server<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">remote<pos:position pos:line="42" pos:column="61"/></name></name> <operator pos:line="42" pos:column="62">&lt;&lt;<pos:position pos:line="42" pos:column="70"/></operator> <literal type="string" pos:line="42" pos:column="65">", source "<pos:position pos:line="42" pos:column="76"/></literal> <operator pos:line="42" pos:column="77">&lt;&lt;<pos:position pos:line="42" pos:column="85"/></operator> <name><name pos:line="42" pos:column="80">server<pos:position pos:line="42" pos:column="86"/></name><operator pos:line="42" pos:column="86">-&gt;<pos:position pos:line="42" pos:column="91"/></operator><name pos:line="42" pos:column="88">local<pos:position pos:line="42" pos:column="93"/></name></name> <operator pos:line="42" pos:column="94">&lt;&lt;<pos:position pos:line="42" pos:column="102"/></operator> <literal type="string" pos:line="42" pos:column="97">")"<pos:position pos:line="42" pos:column="100"/></literal></expr></argument> )<pos:position pos:line="42" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="103"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">nfct_close<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">h<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then> <else pos:line="45" pos:column="11">else <block pos:line="45" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">debugs<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><literal type="number" pos:line="46" pos:column="20">17<pos:position pos:line="46" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="24">2<pos:position pos:line="46" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="27">"QOS: Failed to open conntrack handle for upstream netfilter mark retrieval."<pos:position pos:line="46" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="106"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">nfct_destroy<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">ct<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>

    }<pos:position pos:line="50" pos:column="6"/></block></then> <else pos:line="50" pos:column="7">else <block pos:line="50" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">debugs<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">17<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="20">2<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="23">"QOS: Failed to allocate new conntrack for upstream netfilter mark retrieval."<pos:position pos:line="51" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="103"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

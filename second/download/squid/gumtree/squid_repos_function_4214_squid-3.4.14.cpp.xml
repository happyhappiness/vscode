<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4214_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">time_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Icap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">ServiceRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">optionsFetchTime<pos:position pos:line="2" pos:column="47"/></name></name><parameter_list pos:line="2" pos:column="47">()<pos:position pos:line="2" pos:column="49"/></parameter_list> <specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">theOptions<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&amp;&amp;<pos:position pos:line="4" pos:column="30"/></operator> <call><name><name pos:line="4" pos:column="23">theOptions<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">valid<pos:position pos:line="4" pos:column="40"/></name></name><argument_list pos:line="4" pos:column="40">()<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <block pos:line="4" pos:column="44">{
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">time_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">expire<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name><name pos:line="5" pos:column="31">theOptions<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">expire<pos:position pos:line="5" pos:column="49"/></name></name><argument_list pos:line="5" pos:column="49">()<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">93<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="19">7<pos:position pos:line="6" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="22">HERE<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&lt;&lt;<pos:position pos:line="6" pos:column="35"/></operator> <literal type="string" pos:line="6" pos:column="30">"options expire on "<pos:position pos:line="6" pos:column="50"/></literal> <operator pos:line="6" pos:column="51">&lt;&lt;<pos:position pos:line="6" pos:column="59"/></operator> <name pos:line="6" pos:column="54">expire<pos:position pos:line="6" pos:column="60"/></name> <operator pos:line="6" pos:column="61">&lt;&lt;<pos:position pos:line="6" pos:column="69"/></operator> <literal type="string" pos:line="6" pos:column="64">" &gt;= "<pos:position pos:line="6" pos:column="73"/></literal> <operator pos:line="6" pos:column="71">&lt;&lt;<pos:position pos:line="6" pos:column="79"/></operator> <name pos:line="6" pos:column="74">squid_curtime<pos:position pos:line="6" pos:column="87"/></name></expr></argument>)<pos:position pos:line="6" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="89"/></expr_stmt>

        <comment type="line" pos:line="8" pos:column="9">// conservative estimate of how long the OPTIONS transaction will take</comment>
        <comment type="line" pos:line="9" pos:column="9">// XXX: move hard-coded constants from here to Adaptation::Icap::TheConfig</comment>
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">int<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">expectedWait<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><literal type="number" pos:line="10" pos:column="34">20<pos:position pos:line="10" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt> <comment type="line" pos:line="10" pos:column="38">// seconds</comment>

        <comment type="line" pos:line="12" pos:column="9">// Unknown or invalid (too small) expiration times should not happen.</comment>
        <comment type="line" pos:line="13" pos:column="9">// Adaptation::Icap::Options should use the default TTL, and ICAP servers should not</comment>
        <comment type="line" pos:line="14" pos:column="9">// send invalid TTLs, but bugs and attacks happen.</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">expire<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&lt;<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="22">expectedWait<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35">
            <block type="pseudo"><return pos:line="16" pos:column="13">return <expr><name pos:line="16" pos:column="20">squid_curtime<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></return></block></then>
        <else pos:line="17" pos:column="9">else
            <block type="pseudo"><return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">expire<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">-<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">expectedWait<pos:position pos:line="18" pos:column="41"/></name></expr>;<pos:position pos:line="18" pos:column="42"/></return></block></else></if> <comment type="line" pos:line="18" pos:column="43">// before the current options expire</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="21" pos:column="5">// use revival delay as "expiration" time for a service w/o valid options</comment>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">squid_curtime<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">+<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="28">TheConfig<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">service_revival_delay<pos:position pos:line="22" pos:column="59"/></name></name></expr>;<pos:position pos:line="22" pos:column="60"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

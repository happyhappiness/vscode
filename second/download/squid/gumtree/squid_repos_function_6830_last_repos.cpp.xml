<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6830_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIVarState<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">removeVariable<pos:position pos:line="2" pos:column="28"/></name></name> <parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">String<pos:position pos:line="2" pos:column="36"/></name> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <modifier pos:line="2" pos:column="43">&amp;<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="44">name<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">Variable<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">candidate<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><cast type="static" pos:line="4" pos:column="27">static_cast <argument_list type="generic" pos:line="4" pos:column="39">&lt;<argument><expr><name pos:line="4" pos:column="40">Variable<pos:position pos:line="4" pos:column="48"/></name> <operator pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="54"/></argument_list><argument_list pos:line="4" pos:column="51">(<argument><expr><call><name><name pos:line="4" pos:column="52">variables<pos:position pos:line="4" pos:column="61"/></name><operator pos:line="4" pos:column="61">.<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="62">find<pos:position pos:line="4" pos:column="66"/></name></name> <argument_list pos:line="4" pos:column="67">(<argument><expr><call><name><name pos:line="4" pos:column="68">name<pos:position pos:line="4" pos:column="72"/></name><operator pos:line="4" pos:column="72">.<pos:position pos:line="4" pos:column="73"/></operator><name pos:line="4" pos:column="73">rawBuf<pos:position pos:line="4" pos:column="79"/></name></name><argument_list pos:line="4" pos:column="79">()<pos:position pos:line="4" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="83">name<pos:position pos:line="4" pos:column="87"/></name><operator pos:line="4" pos:column="87">.<pos:position pos:line="4" pos:column="88"/></operator><name pos:line="4" pos:column="88">size<pos:position pos:line="4" pos:column="92"/></name></name><argument_list pos:line="4" pos:column="92">()<pos:position pos:line="4" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="96"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="97"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">candidate<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <block pos:line="6" pos:column="20">{
        <comment type="block" pos:line="7" pos:column="9">/* XXX: remove me */</comment>
        <comment type="block" pos:line="8" pos:column="9">/* Note - this involves:
         * extend libTrie to have a remove() call.
         * delete from the vector.
         * delete the object.
         */</comment>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

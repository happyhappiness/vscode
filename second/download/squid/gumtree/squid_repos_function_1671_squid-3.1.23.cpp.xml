<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1671_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerDigestRequest<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">PeerDigest<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">pd<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">peer<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name><name pos:line="4" pos:column="15">pd<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">peer<pos:position pos:line="4" pos:column="23"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">old_e<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">url<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">cache_key<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">key<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HttpRequest<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">req<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">DigestFetchState<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">fetch<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">StoreIOBuffer<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">tempBuffer<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="12" pos:column="5">pd<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">req_result<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">pd<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">flags<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">requested<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="27">1<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* compute future request components */</comment>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">digest_url<pos:position pos:line="17" pos:column="22"/></name></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">url<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">xstrdup<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name><name pos:line="18" pos:column="23">p<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">digest_url<pos:position pos:line="18" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="19" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">url<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">internalRemoteUri<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name><name pos:line="20" pos:column="33">p<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">host<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="42">p<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">http_port<pos:position pos:line="20" pos:column="54"/></name></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="21" pos:column="33">"/squid-internal-periodic/"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="62">StoreDigestFileName<pos:position pos:line="21" pos:column="81"/></name></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">req<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name><name pos:line="23" pos:column="11">HttpRequest<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">::<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">CreateFromUrl<pos:position pos:line="23" pos:column="37"/></name></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">url<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">req<pos:position pos:line="25" pos:column="15"/></name></expr></argument>)<pos:position pos:line="25" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">key<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name pos:line="27" pos:column="11">storeKeyPublicByRequest<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">req<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debugs<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">72<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="16">2<pos:position pos:line="29" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="19">"peerDigestRequest: "<pos:position pos:line="29" pos:column="40"/></literal> <operator pos:line="29" pos:column="41">&lt;&lt;<pos:position pos:line="29" pos:column="49"/></operator> <name pos:line="29" pos:column="44">url<pos:position pos:line="29" pos:column="47"/></name> <operator pos:line="29" pos:column="48">&lt;&lt;<pos:position pos:line="29" pos:column="56"/></operator> <literal type="string" pos:line="29" pos:column="51">" key: "<pos:position pos:line="29" pos:column="59"/></literal> <operator pos:line="29" pos:column="60">&lt;&lt;<pos:position pos:line="29" pos:column="68"/></operator> <call><name pos:line="29" pos:column="63">storeKeyText<pos:position pos:line="29" pos:column="75"/></name><argument_list pos:line="29" pos:column="75">(<argument><expr><name pos:line="29" pos:column="76">key<pos:position pos:line="29" pos:column="79"/></name></expr></argument>)<pos:position pos:line="29" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="82"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* add custom headers */</comment>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">assert<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><operator pos:line="32" pos:column="12">!<pos:position pos:line="32" pos:column="13"/></operator><name><name pos:line="32" pos:column="13">req<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">header<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">.<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="25">len<pos:position pos:line="32" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="34" pos:column="5">req<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">-&gt;<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="10">header<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">.<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">putStr<pos:position pos:line="34" pos:column="23"/></name></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">HDR_ACCEPT<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">StoreDigestMimeStr<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="36" pos:column="5">req<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">header<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">putStr<pos:position pos:line="36" pos:column="23"/></name></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">HDR_ACCEPT<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="36">"text/html"<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">p<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">login<pos:position pos:line="38" pos:column="17"/></name></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition><then pos:line="38" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="9">xstrncpy<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name><name pos:line="39" pos:column="18">req<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">login<pos:position pos:line="39" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="30">p<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">login<pos:position pos:line="39" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">MAX_LOGIN_SZ<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/* create fetch state structure */</comment>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">DigestFetchState<pos:position pos:line="42" pos:column="38"/></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="44" pos:column="5">fetch<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">cbdataAlloc<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">DigestFetchState<pos:position pos:line="44" pos:column="41"/></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="46" pos:column="5">fetch<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">request<pos:position pos:line="46" pos:column="19"/></name></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <call><name pos:line="46" pos:column="22">HTTPMSGLOCK<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">req<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="48" pos:column="5">fetch<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">pd<pos:position pos:line="48" pos:column="14"/></name></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <call><name pos:line="48" pos:column="17">cbdataReference<pos:position pos:line="48" pos:column="32"/></name><argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">pd<pos:position pos:line="48" pos:column="35"/></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">fetch<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">offset<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <literal type="number" pos:line="50" pos:column="21">0<pos:position pos:line="50" pos:column="22"/></literal></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">fetch<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">state<pos:position pos:line="52" pos:column="17"/></name></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">DIGEST_READ_REPLY<pos:position pos:line="52" pos:column="37"/></name></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* update timestamps */</comment>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">fetch<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">start_time<pos:position pos:line="55" pos:column="22"/></name></name> <operator pos:line="55" pos:column="23">=<pos:position pos:line="55" pos:column="24"/></operator> <name pos:line="55" pos:column="25">squid_curtime<pos:position pos:line="55" pos:column="38"/></name></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="57" pos:column="5">pd<pos:position pos:line="57" pos:column="7"/></name><operator pos:line="57" pos:column="7">-&gt;<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="9">times<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">.<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">requested<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <name pos:line="57" pos:column="27">squid_curtime<pos:position pos:line="57" pos:column="40"/></name></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="59" pos:column="5">pd_last_req_time<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">squid_curtime<pos:position pos:line="59" pos:column="37"/></name></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="61" pos:column="5">req<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">-&gt;<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="10">flags<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">cachable<pos:position pos:line="61" pos:column="24"/></name></name> <operator pos:line="61" pos:column="25">=<pos:position pos:line="61" pos:column="26"/></operator> <literal type="number" pos:line="61" pos:column="27">1<pos:position pos:line="61" pos:column="28"/></literal></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="63" pos:column="5">/* the rest is based on clientProcessExpired() */</comment>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">req<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">flags<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">.<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">refresh<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <literal type="number" pos:line="64" pos:column="26">1<pos:position pos:line="64" pos:column="27"/></literal></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="66" pos:column="5">old_e<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">=<pos:position pos:line="66" pos:column="12"/></operator> <name><name pos:line="66" pos:column="13">fetch<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">old_entry<pos:position pos:line="66" pos:column="29"/></name></name> <operator pos:line="66" pos:column="30">=<pos:position pos:line="66" pos:column="31"/></operator> <call><name><name pos:line="66" pos:column="32">Store<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">::<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="39">Root<pos:position pos:line="66" pos:column="43"/></name></name><argument_list pos:line="66" pos:column="43">()<pos:position pos:line="66" pos:column="45"/></argument_list></call><operator pos:line="66" pos:column="45">.<pos:position pos:line="66" pos:column="46"/></operator><call><name pos:line="66" pos:column="46">get<pos:position pos:line="66" pos:column="49"/></name><argument_list pos:line="66" pos:column="49">(<argument><expr><name pos:line="66" pos:column="50">key<pos:position pos:line="66" pos:column="53"/></name></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">old_e<pos:position pos:line="68" pos:column="14"/></name></expr>)<pos:position pos:line="68" pos:column="15"/></condition><then pos:line="68" pos:column="15"> <block pos:line="68" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debugs<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="number" pos:line="69" pos:column="16">72<pos:position pos:line="69" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="20">5<pos:position pos:line="69" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="23">"peerDigestRequest: found old entry"<pos:position pos:line="69" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="61"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">old_e<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">lock<pos:position pos:line="71" pos:column="20"/></name></name><argument_list pos:line="71" pos:column="20">()<pos:position pos:line="71" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="72" pos:column="9">old_e<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">-&gt;<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="16">createMemObject<pos:position pos:line="72" pos:column="31"/></name></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">url<pos:position pos:line="72" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">url<pos:position pos:line="72" pos:column="40"/></name></expr></argument>)<pos:position pos:line="72" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="74" pos:column="9">fetch<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">-&gt;<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="16">old_sc<pos:position pos:line="74" pos:column="22"/></name></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <call><name pos:line="74" pos:column="25">storeClientListAdd<pos:position pos:line="74" pos:column="43"/></name><argument_list pos:line="74" pos:column="43">(<argument><expr><name pos:line="74" pos:column="44">old_e<pos:position pos:line="74" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">fetch<pos:position pos:line="74" pos:column="56"/></name></expr></argument>)<pos:position pos:line="74" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="77" pos:column="5">e<pos:position pos:line="77" pos:column="6"/></name> <operator pos:line="77" pos:column="7">=<pos:position pos:line="77" pos:column="8"/></operator> <name><name pos:line="77" pos:column="9">fetch<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">-&gt;<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="16">entry<pos:position pos:line="77" pos:column="21"/></name></name> <operator pos:line="77" pos:column="22">=<pos:position pos:line="77" pos:column="23"/></operator> <call><name pos:line="77" pos:column="24">storeCreateEntry<pos:position pos:line="77" pos:column="40"/></name><argument_list pos:line="77" pos:column="40">(<argument><expr><name pos:line="77" pos:column="41">url<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">url<pos:position pos:line="77" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="51">req<pos:position pos:line="77" pos:column="54"/></name><operator pos:line="77" pos:column="54">-&gt;<pos:position pos:line="77" pos:column="59"/></operator><name pos:line="77" pos:column="56">flags<pos:position pos:line="77" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="63">req<pos:position pos:line="77" pos:column="66"/></name><operator pos:line="77" pos:column="66">-&gt;<pos:position pos:line="77" pos:column="71"/></operator><name pos:line="77" pos:column="68">method<pos:position pos:line="77" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">assert<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><call><name pos:line="78" pos:column="12">EBIT_TEST<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name><name pos:line="78" pos:column="22">e<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">-&gt;<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="25">flags<pos:position pos:line="78" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="32">KEY_PRIVATE<pos:position pos:line="78" pos:column="43"/></name></expr></argument>)<pos:position pos:line="78" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">fetch<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">-&gt;<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="12">sc<pos:position pos:line="79" pos:column="14"/></name></name> <operator pos:line="79" pos:column="15">=<pos:position pos:line="79" pos:column="16"/></operator> <call><name pos:line="79" pos:column="17">storeClientListAdd<pos:position pos:line="79" pos:column="35"/></name><argument_list pos:line="79" pos:column="35">(<argument><expr><name pos:line="79" pos:column="36">e<pos:position pos:line="79" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="39">fetch<pos:position pos:line="79" pos:column="44"/></name></expr></argument>)<pos:position pos:line="79" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="80" pos:column="5">/* set lastmod to trigger IMS request if possible */</comment>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">old_e<pos:position pos:line="82" pos:column="14"/></name></expr>)<pos:position pos:line="82" pos:column="15"/></condition><then pos:line="82" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="83" pos:column="9">e<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">-&gt;<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="12">lastmod<pos:position pos:line="83" pos:column="19"/></name></name> <operator pos:line="83" pos:column="20">=<pos:position pos:line="83" pos:column="21"/></operator> <name><name pos:line="83" pos:column="22">old_e<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">-&gt;<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="29">lastmod<pos:position pos:line="83" pos:column="36"/></name></name></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="85" pos:column="5">/* push towards peer cache */</comment>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">debugs<pos:position pos:line="86" pos:column="11"/></name><argument_list pos:line="86" pos:column="11">(<argument><expr><literal type="number" pos:line="86" pos:column="12">72<pos:position pos:line="86" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="16">3<pos:position pos:line="86" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="19">"peerDigestRequest: forwarding to fwdStart..."<pos:position pos:line="86" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="88" pos:column="5">FwdState<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">::<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="15">fwdStart<pos:position pos:line="88" pos:column="23"/></name></name><argument_list pos:line="88" pos:column="23">(<argument><expr><operator pos:line="88" pos:column="24">-<pos:position pos:line="88" pos:column="25"/></operator><literal type="number" pos:line="88" pos:column="25">1<pos:position pos:line="88" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="28">e<pos:position pos:line="88" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="31">req<pos:position pos:line="88" pos:column="34"/></name></expr></argument>)<pos:position pos:line="88" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="90" pos:column="5">tempBuffer<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">.<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">offset<pos:position pos:line="90" pos:column="22"/></name></name> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <literal type="number" pos:line="90" pos:column="25">0<pos:position pos:line="90" pos:column="26"/></literal></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="92" pos:column="5">tempBuffer<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">.<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="16">length<pos:position pos:line="92" pos:column="22"/></name></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <name pos:line="92" pos:column="25">SM_PAGE_SIZE<pos:position pos:line="92" pos:column="37"/></name></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="94" pos:column="5">tempBuffer<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">.<pos:position pos:line="94" pos:column="16"/></operator><name pos:line="94" pos:column="16">data<pos:position pos:line="94" pos:column="20"/></name></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <name><name pos:line="94" pos:column="23">fetch<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">-&gt;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="30">buf<pos:position pos:line="94" pos:column="33"/></name></name></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">storeClientCopy<pos:position pos:line="96" pos:column="20"/></name><argument_list pos:line="96" pos:column="20">(<argument><expr><name><name pos:line="96" pos:column="21">fetch<pos:position pos:line="96" pos:column="26"/></name><operator pos:line="96" pos:column="26">-&gt;<pos:position pos:line="96" pos:column="31"/></operator><name pos:line="96" pos:column="28">sc<pos:position pos:line="96" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="32">e<pos:position pos:line="96" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="35">tempBuffer<pos:position pos:line="96" pos:column="45"/></name></expr></argument>,
                    <argument><expr><name pos:line="97" pos:column="21">peerDigestHandleReply<pos:position pos:line="97" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="44">fetch<pos:position pos:line="97" pos:column="49"/></name></expr></argument>)<pos:position pos:line="97" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="51"/></expr_stmt>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4952_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">IoState<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">close<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">how<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">79<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="27">swap_filen<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">&lt;&lt;<pos:position pos:line="4" pos:column="46"/></operator> <literal type="string" pos:line="4" pos:column="41">" accumulated: "<pos:position pos:line="4" pos:column="57"/></literal> <operator pos:line="4" pos:column="58">&lt;&lt;<pos:position pos:line="4" pos:column="66"/></operator> <name pos:line="4" pos:column="61">offset_<pos:position pos:line="4" pos:column="68"/></name> <operator pos:line="4" pos:column="69">&lt;&lt;<pos:position pos:line="4" pos:column="77"/></operator>
           <literal type="string" pos:line="5" pos:column="12">" how="<pos:position pos:line="5" pos:column="19"/></literal> <operator pos:line="5" pos:column="20">&lt;&lt;<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="23">how<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">how<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">wroteAll<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">&amp;&amp;<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="28">!<pos:position pos:line="6" pos:column="29"/></operator><call><name><name pos:line="6" pos:column="29">theBuf<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">.<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">isNull<pos:position pos:line="6" pos:column="42"/></name></name><argument_list pos:line="6" pos:column="42">()<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="45"/></condition><then pos:line="6" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">startWriting<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt></block></then>
    <else pos:line="8" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="9">callBack<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><ternary><condition><expr><name pos:line="9" pos:column="18">how<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">==<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">writerGone<pos:position pos:line="9" pos:column="35"/></name></expr> ?<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37"> <expr><name pos:line="9" pos:column="38">DISK_ERROR<pos:position pos:line="9" pos:column="48"/></name></expr> <pos:position pos:line="9" pos:column="49"/></then><else pos:line="9" pos:column="49">: <expr><literal type="number" pos:line="9" pos:column="51">0<pos:position pos:line="9" pos:column="52"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt></block></else></if> <comment type="line" pos:line="9" pos:column="55">// TODO: add DISK_CALLER_GONE</comment>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

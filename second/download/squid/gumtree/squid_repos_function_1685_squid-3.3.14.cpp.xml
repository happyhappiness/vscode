<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1685_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">strListGetItem<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">String<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">str<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">del<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier><modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">item<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">int<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">ilen<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="76">const<pos:position pos:line="2" pos:column="81"/></specifier> <name pos:line="2" pos:column="82">char<pos:position pos:line="2" pos:column="86"/></name> <modifier pos:line="2" pos:column="87">*<pos:position pos:line="2" pos:column="88"/></modifier><modifier pos:line="2" pos:column="88">*<pos:position pos:line="2" pos:column="89"/></modifier></type><name pos:line="2" pos:column="89">pos<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="93"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">len<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* ',' is always enabled as field delimiter as this is required for
     * processing merged header values properly, even if Cookie normally
     * uses ';' as delimiter.
     */</comment>
    <decl_stmt><decl><specifier pos:line="9" pos:column="5">static<pos:position pos:line="9" pos:column="11"/></specifier> <type><name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name></type> <name><name pos:line="9" pos:column="17">delim<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><literal type="number" pos:line="9" pos:column="23">3<pos:position pos:line="9" pos:column="24"/></literal></expr>]<pos:position pos:line="9" pos:column="25"/></index><index pos:line="9" pos:column="25">[<expr><literal type="number" pos:line="9" pos:column="26">8<pos:position pos:line="9" pos:column="27"/></literal></expr>]<pos:position pos:line="9" pos:column="28"/></index></name> <init pos:line="9" pos:column="29">= <expr><block pos:line="9" pos:column="31">{
        <expr><literal type="string" pos:line="10" pos:column="9">"\"?,"<pos:position pos:line="10" pos:column="15"/></literal></expr>,
        <expr><literal type="string" pos:line="11" pos:column="9">"\"\\"<pos:position pos:line="11" pos:column="15"/></literal></expr>,
        <expr><literal type="string" pos:line="12" pos:column="9">" ?,\t\r\n"<pos:position pos:line="12" pos:column="20"/></literal></expr>
    }<pos:position pos:line="13" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="7"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">quoted<pos:position pos:line="14" pos:column="15"/></name> <init pos:line="14" pos:column="16">= <expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">str<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&amp;&amp;<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="19">item<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&amp;&amp;<pos:position pos:line="15" pos:column="34"/></operator> <name pos:line="15" pos:column="27">pos<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">delim<pos:position pos:line="17" pos:column="10"/></name><index pos:line="17" pos:column="10">[<expr><literal type="number" pos:line="17" pos:column="11">0<pos:position pos:line="17" pos:column="12"/></literal></expr>]<pos:position pos:line="17" pos:column="13"/></index><index pos:line="17" pos:column="13">[<expr><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal></expr>]<pos:position pos:line="17" pos:column="16"/></index></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">del<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">delim<pos:position pos:line="18" pos:column="10"/></name><index pos:line="18" pos:column="10">[<expr><literal type="number" pos:line="18" pos:column="11">2<pos:position pos:line="18" pos:column="12"/></literal></expr>]<pos:position pos:line="18" pos:column="13"/></index><index pos:line="18" pos:column="13">[<expr><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal></expr>]<pos:position pos:line="18" pos:column="16"/></index></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">del<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><operator pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">pos<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15"> <block pos:line="20" pos:column="16">{
        <expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">pos<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name><name pos:line="21" pos:column="16">str<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">termedBuf<pos:position pos:line="21" pos:column="30"/></name></name><argument_list pos:line="21" pos:column="30">()<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">pos<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19">
            <block type="pseudo"><return pos:line="24" pos:column="13">return <expr><literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></return></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* skip leading whitespace and delimiters */</comment>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">pos<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">+=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">strspn<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><operator pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">pos<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="26">delim<pos:position pos:line="28" pos:column="31"/></name><index pos:line="28" pos:column="31">[<expr><literal type="number" pos:line="28" pos:column="32">2<pos:position pos:line="28" pos:column="33"/></literal></expr>]<pos:position pos:line="28" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">item<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">pos<pos:position pos:line="30" pos:column="17"/></name></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>       <comment type="block" pos:line="30" pos:column="25">/* remember item's start */</comment>

    <comment type="block" pos:line="32" pos:column="5">/* find next delimiter */</comment>
    <do pos:line="33" pos:column="5">do <block pos:line="33" pos:column="8">{
        <expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">pos<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">+=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">strcspn<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><operator pos:line="34" pos:column="25">*<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">pos<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="31">delim<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><name pos:line="34" pos:column="37">quoted<pos:position pos:line="34" pos:column="43"/></name></expr>]<pos:position pos:line="34" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><operator pos:line="35" pos:column="14">*<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">pos<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">==<pos:position pos:line="35" pos:column="21"/></operator> <literal type="char" pos:line="35" pos:column="22">'"'<pos:position pos:line="35" pos:column="25"/></literal></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26"> <block pos:line="35" pos:column="27">{
            <expr_stmt><expr><name pos:line="36" pos:column="13">quoted<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <operator pos:line="36" pos:column="22">!<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">quoted<pos:position pos:line="36" pos:column="29"/></name></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">pos<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">+=<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="21">1<pos:position pos:line="37" pos:column="22"/></literal></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then> <elseif pos:line="38" pos:column="11">else <if pos:line="38" pos:column="16">if <condition pos:line="38" pos:column="19">(<expr><name pos:line="38" pos:column="20">quoted<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&amp;&amp;<pos:position pos:line="38" pos:column="37"/></operator> <operator pos:line="38" pos:column="30">*<pos:position pos:line="38" pos:column="31"/></operator><operator pos:line="38" pos:column="31">*<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">pos<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">==<pos:position pos:line="38" pos:column="38"/></operator> <literal type="char" pos:line="38" pos:column="39">'\\'<pos:position pos:line="38" pos:column="43"/></literal></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44"> <block pos:line="38" pos:column="45">{
            <expr_stmt><expr><operator pos:line="39" pos:column="13">*<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">pos<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">+=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">1<pos:position pos:line="39" pos:column="22"/></literal></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><operator pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></operator><operator pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">pos<pos:position pos:line="40" pos:column="22"/></name></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">pos<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">+=<pos:position pos:line="41" pos:column="24"/></operator> <literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt></block></then></if>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif> <else pos:line="42" pos:column="11">else <block pos:line="42" pos:column="16">{
            <break pos:line="43" pos:column="13">break;<pos:position pos:line="43" pos:column="19"/></break>      <comment type="block" pos:line="43" pos:column="25">/* Delimiter found, marking the end of this value */</comment>
        }<pos:position pos:line="44" pos:column="10"/></block></else></if>
    }<pos:position pos:line="45" pos:column="6"/></block> while <condition pos:line="45" pos:column="13">(<expr><operator pos:line="45" pos:column="14">*<pos:position pos:line="45" pos:column="15"/></operator><operator pos:line="45" pos:column="15">*<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">pos<pos:position pos:line="45" pos:column="19"/></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition>;<pos:position pos:line="45" pos:column="21"/></do>

    <expr_stmt><expr><name pos:line="47" pos:column="5">len<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <operator pos:line="47" pos:column="11">*<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">pos<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">-<pos:position pos:line="47" pos:column="17"/></operator> <operator pos:line="47" pos:column="18">*<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">item<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>     <comment type="block" pos:line="47" pos:column="29">/* *pos points to del or '\0' */</comment>

    <comment type="block" pos:line="49" pos:column="5">/* rtrim */</comment>
    <while pos:line="50" pos:column="5">while <condition pos:line="50" pos:column="11">(<expr><name pos:line="50" pos:column="12">len<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">&gt;<pos:position pos:line="50" pos:column="20"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal> <operator pos:line="50" pos:column="20">&amp;&amp;<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="23">xisspace<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><operator pos:line="50" pos:column="32">(<pos:position pos:line="50" pos:column="33"/></operator><operator pos:line="50" pos:column="33">*<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="34">item<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">)<pos:position pos:line="50" pos:column="39"/></operator><index pos:line="50" pos:column="39">[<expr><name pos:line="50" pos:column="40">len<pos:position pos:line="50" pos:column="43"/></name> <operator pos:line="50" pos:column="44">-<pos:position pos:line="50" pos:column="45"/></operator> <literal type="number" pos:line="50" pos:column="46">1<pos:position pos:line="50" pos:column="47"/></literal></expr>]<pos:position pos:line="50" pos:column="48"/></index></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="50"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="9">--<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">len<pos:position pos:line="51" pos:column="14"/></name></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt></block></while>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">ilen<pos:position pos:line="53" pos:column="13"/></name></expr>)<pos:position pos:line="53" pos:column="14"/></condition><then pos:line="53" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">ilen<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">len<pos:position pos:line="54" pos:column="20"/></name></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt></block></then></if>

    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">len<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">&gt;<pos:position pos:line="56" pos:column="20"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

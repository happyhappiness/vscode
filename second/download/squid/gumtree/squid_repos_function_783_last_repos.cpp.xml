<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_783_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_cachemgrpasswd<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">Mgr<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">ActionPasswordList<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">head<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">passwd<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="null" pos:line="4" pos:column="20">nullptr<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">parse_string<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><operator pos:line="5" pos:column="18">&amp;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="19">passwd<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Mgr<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">ActionPasswordList<pos:position pos:line="7" pos:column="28"/></name></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">p<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><operator pos:line="7" pos:column="34">new<pos:position pos:line="7" pos:column="37"/></operator> <name><name pos:line="7" pos:column="38">Mgr<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">::<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">ActionPasswordList<pos:position pos:line="7" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="62"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">p<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">passwd<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">passwd<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>

    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<decl><type><name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">token<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><call><name><name pos:line="10" pos:column="26">ConfigParser<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">::<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">NextQuotedToken<pos:position pos:line="10" pos:column="55"/></name></name><argument_list pos:line="10" pos:column="55">()<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></init></decl>)<pos:position pos:line="10" pos:column="58"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">actions<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">push_back<pos:position pos:line="11" pos:column="29"/></name></name><argument_list pos:line="11" pos:column="29">(<argument><expr><call><name pos:line="11" pos:column="30">SBuf<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">token<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt></block></while>

    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">Mgr<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">::<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">ActionPasswordList<pos:position pos:line="13" pos:column="28"/></name></name> <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier><modifier pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></modifier></type><name pos:line="13" pos:column="31">P<pos:position pos:line="13" pos:column="32"/></name></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">P<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">head<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></init> <condition><expr><operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">P<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></condition> <incr><expr><name pos:line="14" pos:column="24">P<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name><operator pos:line="14" pos:column="29">(<pos:position pos:line="14" pos:column="30"/></operator><operator pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">P<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">next<pos:position pos:line="14" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="40"/></control> <block pos:line="14" pos:column="41">{
        <comment type="block" pos:line="15" pos:column="9">/*
         * See if any of the actions from this line already have a
         * password from previous lines.  The password checking
         * routines in cache_manager.c take the the password from
         * the first Mgr::ActionPasswordList that contains the
         * requested action.  Thus, we should warn users who might
         * think they can have two passwords for the same action.
         */</comment>
        <for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><decl><type><specifier pos:line="23" pos:column="14">const<pos:position pos:line="23" pos:column="19"/></specifier> <specifier pos:line="23" pos:column="20">auto<pos:position pos:line="23" pos:column="24"/></specifier> <modifier pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></modifier></type><name pos:line="23" pos:column="26">w<pos:position pos:line="23" pos:column="27"/></name> <range pos:line="23" pos:column="28">: <expr><name><operator pos:line="23" pos:column="30">(<pos:position pos:line="23" pos:column="31"/></operator><operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">P<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">)<pos:position pos:line="23" pos:column="34"/></operator><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">actions<pos:position pos:line="23" pos:column="43"/></name></name></expr></range></decl></init>)<pos:position pos:line="23" pos:column="44"/></control> <block pos:line="23" pos:column="45">{
            <for pos:line="24" pos:column="13">for <control pos:line="24" pos:column="17">(<init><decl><type><specifier pos:line="24" pos:column="18">const<pos:position pos:line="24" pos:column="23"/></specifier> <specifier pos:line="24" pos:column="24">auto<pos:position pos:line="24" pos:column="28"/></specifier> <modifier pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></modifier></type><name pos:line="24" pos:column="30">u<pos:position pos:line="24" pos:column="31"/></name> <range pos:line="24" pos:column="32">: <expr><name><name pos:line="24" pos:column="34">p<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">actions<pos:position pos:line="24" pos:column="44"/></name></name></expr></range></decl></init>)<pos:position pos:line="24" pos:column="45"/></control> <block pos:line="24" pos:column="46">{
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">w<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">!=<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">u<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
                    <block type="pseudo"><continue pos:line="26" pos:column="21">continue;<pos:position pos:line="26" pos:column="30"/></continue></block></then></if>

                <expr_stmt><expr><call><name pos:line="28" pos:column="17">debugs<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="27">DBG_PARSE_NOTE<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><literal type="number" pos:line="28" pos:column="42">1<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="46">"ERROR: action '"<pos:position pos:line="28" pos:column="63"/></literal> <operator pos:line="28" pos:column="64">&lt;&lt;<pos:position pos:line="28" pos:column="72"/></operator> <name pos:line="28" pos:column="67">u<pos:position pos:line="28" pos:column="68"/></name> <operator pos:line="28" pos:column="69">&lt;&lt;<pos:position pos:line="28" pos:column="77"/></operator> <literal type="string" pos:line="28" pos:column="72">"' (line "<pos:position pos:line="28" pos:column="82"/></literal> <operator pos:line="28" pos:column="83">&lt;&lt;<pos:position pos:line="28" pos:column="91"/></operator> <name pos:line="28" pos:column="86">config_lineno<pos:position pos:line="28" pos:column="99"/></name> <operator pos:line="28" pos:column="100">&lt;&lt;<pos:position pos:line="28" pos:column="108"/></operator> <literal type="string" pos:line="28" pos:column="103">") already has a password"<pos:position pos:line="28" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="131"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></for>
        }<pos:position pos:line="30" pos:column="10"/></block></for>
    }<pos:position pos:line="31" pos:column="6"/></block></for>

    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">P<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <name pos:line="33" pos:column="10">p<pos:position pos:line="33" pos:column="11"/></name></expr>;<pos:position pos:line="33" pos:column="12"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

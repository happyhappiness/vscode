<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6271_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DiskThreadsDiskFile<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">open<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">flags<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">mode_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">mode<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="51">RefCount<pos:position pos:line="2" pos:column="59"/></name><argument_list type="generic" pos:line="2" pos:column="59">&lt;<argument><expr><name pos:line="2" pos:column="60">IORequestor<pos:position pos:line="2" pos:column="71"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="75"/></argument_list></name></type> <name pos:line="2" pos:column="73">callback<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">++<pos:position pos:line="4" pos:column="7"/></operator><name><name pos:line="4" pos:column="7">statCounter<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">.<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">syscalls<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">.<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">disk<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">.<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">opens<pos:position pos:line="4" pos:column="38"/></name></name></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">!<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">ASYNC_OPEN<pos:position pos:line="5" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><name pos:line="7" pos:column="5">fd<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">file_open<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">path_<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="27">flags<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">fd<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">&lt;<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>)<pos:position pos:line="9" pos:column="16"/></condition><then pos:line="9" pos:column="16"> <block pos:line="9" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">79<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"DiskThreadsDiskFile::open: got failure ("<pos:position pos:line="10" pos:column="65"/></literal> <operator pos:line="10" pos:column="66">&lt;&lt;<pos:position pos:line="10" pos:column="74"/></operator> <name pos:line="10" pos:column="69">errno<pos:position pos:line="10" pos:column="74"/></name> <operator pos:line="10" pos:column="75">&lt;&lt;<pos:position pos:line="10" pos:column="83"/></operator> <literal type="string" pos:line="10" pos:column="78">")"<pos:position pos:line="10" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">errorOccured<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <literal type="boolean" pos:line="11" pos:column="24">true<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">++<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">Opening_FD<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">ioRequestor<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">callback<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="20" pos:column="5">++<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">inProgressIOs<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">ASYNC_OPEN<pos:position pos:line="22" pos:column="15"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">aioOpen<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">path_<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">flags<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">mode<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="33">DiskThreadsDiskFile<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">::<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="54">OpenDone<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="64">this<pos:position pos:line="24" pos:column="68"/></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>

<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">openDone<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">fd<pos:position pos:line="28" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="18">NULL<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="24">fd<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="28">0<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>

<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4094_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">decideOnPreview<pos:position pos:line="1" pos:column="48"/></name></name><parameter_list pos:line="1" pos:column="48">()<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name><name pos:line="3" pos:column="10">TheConfig<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">.<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">preview_enable<pos:position pos:line="3" pos:column="34"/></name></name></expr>)<pos:position pos:line="3" pos:column="35"/></condition><then pos:line="3" pos:column="35"> <block pos:line="3" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">debugs<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><literal type="number" pos:line="4" pos:column="16">93<pos:position pos:line="4" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="20">5<pos:position pos:line="4" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">HERE<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">&lt;&lt;<pos:position pos:line="4" pos:column="36"/></operator> <literal type="string" pos:line="4" pos:column="31">"preview disabled by squid.conf"<pos:position pos:line="4" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt>
        <return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">String<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">urlPath<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><call><name pos:line="8" pos:column="28">virginRequest<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">()<pos:position pos:line="8" pos:column="43"/></argument_list></call><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">urlpath<pos:position pos:line="8" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">wantedSize<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name pos:line="10" pos:column="10">service<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call><operator pos:line="10" pos:column="19">.<pos:position pos:line="10" pos:column="20"/></operator><call><name pos:line="10" pos:column="20">wantsPreview<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">urlPath<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">wantedSize<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54"> <block pos:line="10" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">93<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">5<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">HERE<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&lt;&lt;<pos:position pos:line="11" pos:column="36"/></operator> <literal type="string" pos:line="11" pos:column="31">"should not offer preview for "<pos:position pos:line="11" pos:column="62"/></literal> <operator pos:line="11" pos:column="63">&lt;&lt;<pos:position pos:line="11" pos:column="71"/></operator> <name pos:line="11" pos:column="66">urlPath<pos:position pos:line="11" pos:column="73"/></name></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="15" pos:column="5">// we decided to do preview, now compute its size</comment>

    <comment type="line" pos:line="17" pos:column="5">// cannot preview more than we can backup</comment>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">size_t<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">ad<pos:position pos:line="18" pos:column="14"/></name> <init pos:line="18" pos:column="15">= <expr><call><name pos:line="18" pos:column="17">min<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">wantedSize<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">TheBackupLimit<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="49"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><call><name><name pos:line="20" pos:column="10">virginBody<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">.<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">expected<pos:position pos:line="20" pos:column="29"/></name></name><argument_list pos:line="20" pos:column="29">()<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">ad<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name><name pos:line="22" pos:column="14">virginBody<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">knownSize<pos:position pos:line="22" pos:column="34"/></name></name><argument_list pos:line="22" pos:column="34">()<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">ad<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">min<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><cast type="static" pos:line="23" pos:column="18">static_cast<argument_list type="generic" pos:line="23" pos:column="29">&lt;<argument><expr><name pos:line="23" pos:column="30">uint64_t<pos:position pos:line="23" pos:column="38"/></name></expr></argument>&gt;<pos:position pos:line="23" pos:column="42"/></argument_list><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">ad<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></cast></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="45">virginBody<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">.<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="56">size<pos:position pos:line="23" pos:column="60"/></name></name><argument_list pos:line="23" pos:column="60">()<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt></block></then></if></elseif></if> <comment type="line" pos:line="23" pos:column="65">// not more than we have</comment>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">debugs<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">93<pos:position pos:line="25" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="16">5<pos:position pos:line="25" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="19">HERE<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&lt;&lt;<pos:position pos:line="25" pos:column="32"/></operator> <literal type="string" pos:line="25" pos:column="27">"should offer "<pos:position pos:line="25" pos:column="42"/></literal> <operator pos:line="25" pos:column="43">&lt;&lt;<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="46">ad<pos:position pos:line="25" pos:column="48"/></name> <operator pos:line="25" pos:column="49">&lt;&lt;<pos:position pos:line="25" pos:column="57"/></operator> <literal type="string" pos:line="25" pos:column="52">"-byte preview "<pos:position pos:line="25" pos:column="68"/></literal> <operator pos:line="25" pos:column="69">&lt;&lt;<pos:position pos:line="25" pos:column="77"/></operator>
           <literal type="string" pos:line="26" pos:column="12">"(service wanted "<pos:position pos:line="26" pos:column="30"/></literal> <operator pos:line="26" pos:column="31">&lt;&lt;<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="34">wantedSize<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">&lt;&lt;<pos:position pos:line="26" pos:column="53"/></operator> <literal type="string" pos:line="26" pos:column="48">")"<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">preview<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">enable<pos:position pos:line="28" pos:column="19"/></name></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">ad<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">Must<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><call><name><name pos:line="29" pos:column="10">preview<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">enabled<pos:position pos:line="29" pos:column="25"/></name></name><argument_list pos:line="29" pos:column="25">()<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

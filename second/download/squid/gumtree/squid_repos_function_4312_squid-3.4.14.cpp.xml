<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4312_squid-3.4.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">GetX509Fingerprint<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">X509<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">cert<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">cert<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition><then pos:line="5" pos:column="15">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">n<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">char<pos:position pos:line="9" pos:column="18"/></name></type> <name><name pos:line="9" pos:column="19">md<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><name pos:line="9" pos:column="22">EVP_MAX_MD_SIZE<pos:position pos:line="9" pos:column="37"/></name></expr>]<pos:position pos:line="9" pos:column="38"/></index></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name pos:line="10" pos:column="10">X509_digest<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">cert<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="28">EVP_sha1<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">()<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">md<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="45">n<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">3<pos:position pos:line="13" pos:column="13"/></literal> <operator pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">n<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">+<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal> <operator pos:line="13" pos:column="22">&lt;<pos:position pos:line="13" pos:column="26"/></operator> <sizeof pos:line="13" pos:column="24">sizeof<argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">buf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">s<pos:position pos:line="15" pos:column="12"/></name> <init pos:line="15" pos:column="13">= <expr><name pos:line="15" pos:column="15">buf<pos:position pos:line="15" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><decl><type><name pos:line="16" pos:column="10">unsigned<pos:position pos:line="16" pos:column="18"/></name> <name pos:line="16" pos:column="19">int<pos:position pos:line="16" pos:column="22"/></name></type> <name pos:line="16" pos:column="23">i<pos:position pos:line="16" pos:column="24"/></name><init pos:line="16" pos:column="24">=<expr><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="27"/></init> <condition><expr><name pos:line="16" pos:column="28">i<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">&lt;<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="32">n<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></condition> <incr><expr><operator pos:line="16" pos:column="35">++<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="37">i<pos:position pos:line="16" pos:column="38"/></name></expr><operator pos:line="16" pos:column="38">,<pos:position pos:line="16" pos:column="39"/></operator> <expr><name pos:line="16" pos:column="40">s<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">+=<pos:position pos:line="16" pos:column="44"/></operator> <literal type="number" pos:line="16" pos:column="45">3<pos:position pos:line="16" pos:column="46"/></literal></expr></incr>)<pos:position pos:line="16" pos:column="47"/></control> <block pos:line="16" pos:column="48">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name></type> <name pos:line="17" pos:column="20">term<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><ternary><condition><expr><operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">i<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">+<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="32">1<pos:position pos:line="17" pos:column="33"/></literal> <operator pos:line="17" pos:column="34">&lt;<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="36">n<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator></expr> ?<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40"> <expr><literal type="char" pos:line="17" pos:column="41">':'<pos:position pos:line="17" pos:column="44"/></literal></expr> <pos:position pos:line="17" pos:column="45"/></then><else pos:line="17" pos:column="45">: <expr><literal type="char" pos:line="17" pos:column="47">'\0'<pos:position pos:line="17" pos:column="51"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="17" pos:column="52"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">snprintf<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">s<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="21">4<pos:position pos:line="18" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="24">"%02X%c"<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="34">md<pos:position pos:line="18" pos:column="36"/></name><index pos:line="18" pos:column="36">[<expr><name pos:line="18" pos:column="37">i<pos:position pos:line="18" pos:column="38"/></name></expr>]<pos:position pos:line="18" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">term<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">buf<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

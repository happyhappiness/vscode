<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5753_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AIODiskFile<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">write<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">WriteRequest<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">request<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">slot<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">async_queue_entry_t<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">qe<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">strategy<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">aq<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">aq_state<pos:position pos:line="7" pos:column="33"/></name></name> <operator pos:line="7" pos:column="34">==<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="37">AQ_STATE_SETUP<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Find a free slot */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">slot<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name><name pos:line="10" pos:column="12">strategy<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">findSlot<pos:position pos:line="10" pos:column="30"/></name></name><argument_list pos:line="10" pos:column="30">()<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">slot<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">&lt;<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
        <comment type="block" pos:line="13" pos:column="9">/* No free slot? Callback error, and return */</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">fatal<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><literal type="string" pos:line="14" pos:column="15">"Aiee! out of aiocb slots FIXME and wrap file_write !\n"<pos:position pos:line="14" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">79<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">DBG_IMPORTANT<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"WARNING: out of aiocb slots!"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
        <comment type="block" pos:line="16" pos:column="9">/* fall back to blocking method */</comment>
        <comment type="line" pos:line="17" pos:column="9">//        file_write(fd, offset, buf, len, callback, data, freefunc);</comment>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/* Mark slot as ours */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">qe<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <operator pos:line="22" pos:column="10">&amp;<pos:position pos:line="22" pos:column="15"/></operator><name><name pos:line="22" pos:column="11">strategy<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">aq<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">aq_queue<pos:position pos:line="22" pos:column="32"/></name><index pos:line="22" pos:column="32">[<expr><name pos:line="22" pos:column="33">slot<pos:position pos:line="22" pos:column="37"/></name></expr>]<pos:position pos:line="22" pos:column="38"/></index></name></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">qe<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">aq_e_state<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">AQ_ENTRY_USED<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">qe<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">aq_e_callback_data<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <call><name pos:line="26" pos:column="30">cbdataReference<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name pos:line="26" pos:column="46">request<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">qe<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">theFile<pos:position pos:line="28" pos:column="16"/></name></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">cbdataReference<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">this<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="30" pos:column="5">qe<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">aq_e_type<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">AQ_ENTRY_WRITE<pos:position pos:line="30" pos:column="35"/></name></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">qe<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">aq_e_free<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">request<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">free_func<pos:position pos:line="32" pos:column="39"/></name></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">qe<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">aq_e_buf<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <operator pos:line="34" pos:column="20">(<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">void<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">*<pos:position pos:line="34" pos:column="27"/></operator><operator pos:line="34" pos:column="27">)<pos:position pos:line="34" pos:column="28"/></operator><name><name pos:line="34" pos:column="28">request<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">buf<pos:position pos:line="34" pos:column="40"/></name></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">qe<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">aq_e_fd<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">fd<pos:position pos:line="36" pos:column="21"/></name></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">qe<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">aq_e_aiocb<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">aio_fildes<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="33">fd<pos:position pos:line="38" pos:column="35"/></name></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">qe<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">aq_e_aiocb<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">aio_nbytes<pos:position pos:line="40" pos:column="30"/></name></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <name><name pos:line="40" pos:column="33">request<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">len<pos:position pos:line="40" pos:column="45"/></name></name></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">qe<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">aq_e_aiocb<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">aio_offset<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <name><name pos:line="42" pos:column="33">request<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">offset<pos:position pos:line="42" pos:column="48"/></name></name></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">qe<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">aq_e_aiocb<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">aio_buf<pos:position pos:line="44" pos:column="27"/></name></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="30">(<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">void<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">*<pos:position pos:line="44" pos:column="37"/></operator><operator pos:line="44" pos:column="37">)<pos:position pos:line="44" pos:column="38"/></operator><name><name pos:line="44" pos:column="38">request<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">buf<pos:position pos:line="44" pos:column="50"/></name></name></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Account */</comment>
    <expr_stmt><expr><operator pos:line="47" pos:column="5">++<pos:position pos:line="47" pos:column="7"/></operator><name><name pos:line="47" pos:column="7">strategy<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">aq<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">aq_numpending<pos:position pos:line="47" pos:column="33"/></name></name></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* Initiate aio */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">aio_write<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><operator pos:line="50" pos:column="19">&amp;<pos:position pos:line="50" pos:column="24"/></operator><name><name pos:line="50" pos:column="20">qe<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">aq_e_aiocb<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call> <operator pos:line="50" pos:column="36">&lt;<pos:position pos:line="50" pos:column="40"/></operator> <literal type="number" pos:line="50" pos:column="38">0<pos:position pos:line="50" pos:column="39"/></literal></expr>)<pos:position pos:line="50" pos:column="40"/></condition><then pos:line="50" pos:column="40"> <block pos:line="50" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">fatalf<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="string" pos:line="51" pos:column="16">"Aiee! aio_write() returned error (%d) FIXME and wrap file_write !\n"<pos:position pos:line="51" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="87">errno<pos:position pos:line="51" pos:column="92"/></name></expr></argument>)<pos:position pos:line="51" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="94"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">debugs<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="number" pos:line="52" pos:column="16">79<pos:position pos:line="52" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="20">DBG_IMPORTANT<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="35">"WARNING: aio_write() returned error: "<pos:position pos:line="52" pos:column="74"/></literal> <operator pos:line="52" pos:column="75">&lt;&lt;<pos:position pos:line="52" pos:column="83"/></operator> <call><name pos:line="52" pos:column="78">xstrerror<pos:position pos:line="52" pos:column="87"/></name><argument_list pos:line="52" pos:column="87">()<pos:position pos:line="52" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="91"/></expr_stmt>
        <comment type="block" pos:line="53" pos:column="9">/* fall back to blocking method */</comment>
        <comment type="line" pos:line="54" pos:column="9">//       file_write(fd, offset, buf, len, callback, data, freefunc);</comment>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

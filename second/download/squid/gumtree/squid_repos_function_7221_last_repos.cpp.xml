<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7221_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Mem<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">Segment<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">unlink<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">shm_unlink<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><call><name><name pos:line="4" pos:column="20">theName<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">.<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">termedBuf<pos:position pos:line="4" pos:column="37"/></name></name><argument_list pos:line="4" pos:column="37">()<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call> <operator pos:line="4" pos:column="41">!=<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="44">0<pos:position pos:line="4" pos:column="45"/></literal></expr>)<pos:position pos:line="4" pos:column="46"/></condition><then pos:line="4" pos:column="46"> <block pos:line="4" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">xerrno<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">errno<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">54<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">5<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"shm_unlink("<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">&lt;&lt;<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="40">theName<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">&lt;&lt;<pos:position pos:line="6" pos:column="56"/></operator> <literal type="string" pos:line="6" pos:column="51">"): "<pos:position pos:line="6" pos:column="56"/></literal> <operator pos:line="6" pos:column="57">&lt;&lt;<pos:position pos:line="6" pos:column="65"/></operator> <call><name pos:line="6" pos:column="60">xstrerr<pos:position pos:line="6" pos:column="67"/></name><argument_list pos:line="6" pos:column="67">(<argument><expr><name pos:line="6" pos:column="68">xerrno<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <else pos:line="7" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">54<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">3<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"unlinked "<pos:position pos:line="8" pos:column="34"/></literal> <operator pos:line="8" pos:column="35">&lt;&lt;<pos:position pos:line="8" pos:column="43"/></operator> <name pos:line="8" pos:column="38">theName<pos:position pos:line="8" pos:column="45"/></name> <operator pos:line="8" pos:column="46">&lt;&lt;<pos:position pos:line="8" pos:column="54"/></operator> <literal type="string" pos:line="8" pos:column="49">" segment"<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1736_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CpuAffinitySet<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type>
<name><name pos:line="2" pos:column="1">CpuAffinityMap<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">calculateSet<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">targetProcess<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><call><name><name pos:line="4" pos:column="10">theProcesses<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">size<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call> <operator pos:line="4" pos:column="30">==<pos:position pos:line="4" pos:column="32"/></operator> <call><name><name pos:line="4" pos:column="33">theCores<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">size<pos:position pos:line="4" pos:column="46"/></name></name><argument_list pos:line="4" pos:column="46">()<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">core<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">size_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></init> <condition><expr><name pos:line="6" pos:column="24">i<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">&lt;<pos:position pos:line="6" pos:column="30"/></operator> <call><name><name pos:line="6" pos:column="28">theProcesses<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">.<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">size<pos:position pos:line="6" pos:column="45"/></name></name><argument_list pos:line="6" pos:column="45">()<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></condition> <incr><expr><operator pos:line="6" pos:column="49">++<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">i<pos:position pos:line="6" pos:column="52"/></name></expr></incr>)<pos:position pos:line="6" pos:column="53"/></control> <block pos:line="6" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">int<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">process<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name><name pos:line="7" pos:column="29">theProcesses<pos:position pos:line="7" pos:column="41"/></name><index pos:line="7" pos:column="41">[<expr><name pos:line="7" pos:column="42">i<pos:position pos:line="7" pos:column="43"/></name></expr>]<pos:position pos:line="7" pos:column="44"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">process<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">targetProcess<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38"> <block pos:line="8" pos:column="39">{
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><name pos:line="9" pos:column="17">core<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&gt;<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="10" pos:column="17">debugs<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="number" pos:line="10" pos:column="24">54<pos:position pos:line="10" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">DBG_CRITICAL<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="42">"WARNING: conflicting "<pos:position pos:line="10" pos:column="65"/></literal>
                       <literal type="string" pos:line="11" pos:column="24">"'cpu_affinity_map' for process number "<pos:position pos:line="11" pos:column="64"/></literal> <operator pos:line="11" pos:column="65">&lt;&lt;<pos:position pos:line="11" pos:column="73"/></operator> <name pos:line="11" pos:column="68">process<pos:position pos:line="11" pos:column="75"/></name> <operator pos:line="11" pos:column="76">&lt;&lt;<pos:position pos:line="11" pos:column="84"/></operator>
                       <literal type="string" pos:line="12" pos:column="24">", using the last core seen: "<pos:position pos:line="12" pos:column="54"/></literal> <operator pos:line="12" pos:column="55">&lt;&lt;<pos:position pos:line="12" pos:column="63"/></operator> <name><name pos:line="12" pos:column="58">theCores<pos:position pos:line="12" pos:column="66"/></name><index pos:line="12" pos:column="66">[<expr><name pos:line="12" pos:column="67">i<pos:position pos:line="12" pos:column="68"/></name></expr>]<pos:position pos:line="12" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="13" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="14" pos:column="13">core<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name><name pos:line="14" pos:column="20">theCores<pos:position pos:line="14" pos:column="28"/></name><index pos:line="14" pos:column="28">[<expr><name pos:line="14" pos:column="29">i<pos:position pos:line="14" pos:column="30"/></name></expr>]<pos:position pos:line="14" pos:column="31"/></index></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">CpuAffinitySet<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">cpuAffinitySet<pos:position pos:line="17" pos:column="35"/></name> <init pos:line="17" pos:column="36">= <expr><name pos:line="17" pos:column="38">NULL<pos:position pos:line="17" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="43"/></decl_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">core<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">&gt;<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18"> <block pos:line="18" pos:column="19">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">cpuAffinitySet<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <operator pos:line="19" pos:column="26">new<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">CpuAffinitySet<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">cpu_set_t<pos:position pos:line="20" pos:column="18"/></name></type> <name pos:line="20" pos:column="19">cpuSet<pos:position pos:line="20" pos:column="25"/></name></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">CPU_ZERO<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><operator pos:line="21" pos:column="18">&amp;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="19">cpuSet<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">CPU_SET<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">core<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">-<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="27">&amp;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="28">cpuSet<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">cpuAffinitySet<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">set<pos:position pos:line="23" pos:column="28"/></name></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">cpuSet<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">cpuAffinitySet<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

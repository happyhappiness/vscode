<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6173_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">squidaio_debug<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">squidaio_request_t<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">request<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <switch pos:line="4" pos:column="5">switch <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">request<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">request_type<pos:position pos:line="4" pos:column="34"/></name></name></expr>)<pos:position pos:line="4" pos:column="35"/></condition> <block pos:line="4" pos:column="36">{

    <case pos:line="6" pos:column="5">case <expr><name pos:line="6" pos:column="10">_AIO_OP_OPEN<pos:position pos:line="6" pos:column="22"/></name></expr>:<pos:position pos:line="6" pos:column="23"/></case>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">43<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">5<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"OPEN of "<pos:position pos:line="7" pos:column="33"/></literal> <operator pos:line="7" pos:column="34">&lt;&lt;<pos:position pos:line="7" pos:column="42"/></operator> <name><name pos:line="7" pos:column="37">request<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">path<pos:position pos:line="7" pos:column="50"/></name></name> <operator pos:line="7" pos:column="51">&lt;&lt;<pos:position pos:line="7" pos:column="59"/></operator> <literal type="string" pos:line="7" pos:column="54">" to FD "<pos:position pos:line="7" pos:column="63"/></literal> <operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator> <name><name pos:line="7" pos:column="67">request<pos:position pos:line="7" pos:column="74"/></name><operator pos:line="7" pos:column="74">-&gt;<pos:position pos:line="7" pos:column="79"/></operator><name pos:line="7" pos:column="76">ret<pos:position pos:line="7" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="81"/></expr_stmt>
        <break pos:line="8" pos:column="9">break;<pos:position pos:line="8" pos:column="15"/></break>

    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">_AIO_OP_READ<pos:position pos:line="10" pos:column="22"/></name></expr>:<pos:position pos:line="10" pos:column="23"/></case>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">43<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">5<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"READ on fd: "<pos:position pos:line="11" pos:column="37"/></literal> <operator pos:line="11" pos:column="38">&lt;&lt;<pos:position pos:line="11" pos:column="46"/></operator> <name><name pos:line="11" pos:column="41">request<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">fd<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
        <break pos:line="12" pos:column="9">break;<pos:position pos:line="12" pos:column="15"/></break>

    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">_AIO_OP_WRITE<pos:position pos:line="14" pos:column="23"/></name></expr>:<pos:position pos:line="14" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">43<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">5<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"WRITE on fd: "<pos:position pos:line="15" pos:column="38"/></literal> <operator pos:line="15" pos:column="39">&lt;&lt;<pos:position pos:line="15" pos:column="47"/></operator> <name><name pos:line="15" pos:column="42">request<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">fd<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
        <break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break>

    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">_AIO_OP_CLOSE<pos:position pos:line="18" pos:column="23"/></name></expr>:<pos:position pos:line="18" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">43<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">5<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"CLOSE of fd: "<pos:position pos:line="19" pos:column="38"/></literal> <operator pos:line="19" pos:column="39">&lt;&lt;<pos:position pos:line="19" pos:column="47"/></operator> <name><name pos:line="19" pos:column="42">request<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">-&gt;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="51">fd<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
        <break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break>

    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">_AIO_OP_UNLINK<pos:position pos:line="22" pos:column="24"/></name></expr>:<pos:position pos:line="22" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">43<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="20">5<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"UNLINK of "<pos:position pos:line="23" pos:column="35"/></literal> <operator pos:line="23" pos:column="36">&lt;&lt;<pos:position pos:line="23" pos:column="44"/></operator> <name><name pos:line="23" pos:column="39">request<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">path<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
        <break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>

    <default pos:line="26" pos:column="5">default:<pos:position pos:line="26" pos:column="13"/></default>
        <break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
    }<pos:position pos:line="28" pos:column="6"/></block></switch>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

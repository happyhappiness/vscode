<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7577_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">squid_rn_refines<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">void<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">m_arg<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">void<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">n_arg<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">caddr_t<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">m<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">m_arg<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="33">n<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">n_arg<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">caddr_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">lim<pos:position pos:line="5" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="27">lim2<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">lim<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">=<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">n<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">+<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><operator pos:line="5" pos:column="45">(<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">u_char<pos:position pos:line="5" pos:column="52"/></name> <operator pos:line="5" pos:column="53">*<pos:position pos:line="5" pos:column="54"/></operator><operator pos:line="5" pos:column="54">)<pos:position pos:line="5" pos:column="55"/></operator> <name pos:line="5" pos:column="56">n<pos:position pos:line="5" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">longer<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><operator pos:line="6" pos:column="18">(<pos:position pos:line="6" pos:column="19"/></operator><operator pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></operator><operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">u_char<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">n<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">++<pos:position pos:line="6" pos:column="34"/></operator><operator pos:line="6" pos:column="34">)<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="36">-<pos:position pos:line="6" pos:column="37"/></operator> <call pos:line="6" pos:column="38">(<name pos:line="6" pos:column="39">int<pos:position pos:line="6" pos:column="42"/></name>) <argument_list pos:line="6" pos:column="44">(<argument><expr><operator pos:line="6" pos:column="45">*<pos:position pos:line="6" pos:column="46"/></operator><operator pos:line="6" pos:column="46">(<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="47">u_char<pos:position pos:line="6" pos:column="53"/></name> <operator pos:line="6" pos:column="54">*<pos:position pos:line="6" pos:column="55"/></operator><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator> <name pos:line="6" pos:column="57">m<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">++<pos:position pos:line="6" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">masks_are_equal<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">1<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">longer<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&gt;<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">lim<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">-=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">longer<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt></block></then></if>
    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">n<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="16">lim<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition> <block pos:line="11" pos:column="21">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">n<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&amp;<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="18">~<pos:position pos:line="12" pos:column="19"/></operator><operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><operator pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">m<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
            <block type="pseudo"><return pos:line="13" pos:column="13">return <expr><literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return></block></then></if>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">n<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">++<pos:position pos:line="14" pos:column="17"/></operator> <operator pos:line="14" pos:column="18">!=<pos:position pos:line="14" pos:column="20"/></operator> <operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">m<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">++<pos:position pos:line="14" pos:column="25"/></operator></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="13">masks_are_equal<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></while>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">n<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">&lt;<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="16">lim2<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition>
        <block type="pseudo"><if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">n<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">++<pos:position pos:line="18" pos:column="17"/></operator></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18">
            <block type="pseudo"><return pos:line="19" pos:column="13">return <expr><literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return></block></then></if></block></while>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">masks_are_equal<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">&amp;&amp;<pos:position pos:line="20" pos:column="35"/></operator> <operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">longer<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&lt;<pos:position pos:line="20" pos:column="40"/></operator> <literal type="number" pos:line="20" pos:column="38">0<pos:position pos:line="20" pos:column="39"/></literal><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
        <block type="pseudo"><for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">lim2<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">m<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">-<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">longer<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></init> <condition><expr><name pos:line="21" pos:column="33">m<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">&lt;<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="37">lim2<pos:position pos:line="21" pos:column="41"/></name></expr>;<pos:position pos:line="21" pos:column="42"/></condition><incr/>)<pos:position pos:line="21" pos:column="43"/></control>
            <block type="pseudo"><if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">m<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">++<pos:position pos:line="22" pos:column="21"/></operator></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
                <block type="pseudo"><return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">1<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return></block></then></if></block></for></block></then></if>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">masks_are_equal<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">)<pos:position pos:line="24" pos:column="30"/></operator></expr>;<pos:position pos:line="24" pos:column="31"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

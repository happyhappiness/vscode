<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2065_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">haveParsedReplyHeaders<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">()<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">ServerStateData<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">::<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">haveParsedReplyHeaders<pos:position pos:line="4" pos:column="44"/></name></name><argument_list pos:line="4" pos:column="44">()<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="47"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">Ctx<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ctx<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><call><name pos:line="6" pos:column="15">ctx_enter<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">entry<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">mem_obj<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">url<pos:position pos:line="6" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HttpReply<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">rep<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><call><name pos:line="7" pos:column="22">finalReply<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">entry<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">timestampsSet<pos:position pos:line="9" pos:column="25"/></name></name><argument_list pos:line="9" pos:column="25">()<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Check if object is cacheable or not based on reply code */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">11<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"haveParsedReplyHeaders: HTTP CODE: "<pos:position pos:line="12" pos:column="56"/></literal> <operator pos:line="12" pos:column="57">&lt;&lt;<pos:position pos:line="12" pos:column="65"/></operator> <name><name pos:line="12" pos:column="60">rep<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">-&gt;<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="65">sline<pos:position pos:line="12" pos:column="70"/></name><operator pos:line="12" pos:column="70">.<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="71">status<pos:position pos:line="12" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">neighbors_do_private_keys<pos:position pos:line="14" pos:column="34"/></name></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="9">httpMaybeRemovePublic<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">entry<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="38">rep<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">sline<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">.<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">status<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><name pos:line="17" pos:column="9">rep<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">header<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">has<pos:position pos:line="17" pos:column="24"/></name></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">HDR_VARY<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call>
<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">X_ACCELERATOR_VARY<pos:position pos:line="18" pos:column="23"/></name></expr></cpp:if>
            <operator pos:line="19" pos:column="13">||<pos:position pos:line="19" pos:column="15"/></operator> <call><name><name pos:line="19" pos:column="16">rep<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">header<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">has<pos:position pos:line="19" pos:column="31"/></name></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">HDR_X_ACCELERATOR_VARY<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
       )<pos:position pos:line="21" pos:column="9"/></condition><then pos:line="21" pos:column="9"> <block pos:line="21" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">const<pos:position pos:line="22" pos:column="14"/></specifier> <name pos:line="22" pos:column="15">char<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">vary<pos:position pos:line="22" pos:column="25"/></name> <init pos:line="22" pos:column="26">= <expr><call><name pos:line="22" pos:column="28">httpMakeVaryMark<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">(<argument><expr><name pos:line="22" pos:column="45">request<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">rep<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="59"/></decl_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">vary<pos:position pos:line="24" pos:column="18"/></name></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">entry<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">makePrivate<pos:position pos:line="25" pos:column="31"/></name></name><argument_list pos:line="25" pos:column="31">()<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><call><name><name pos:line="26" pos:column="18">fwd<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">reforwardableStatus<pos:position pos:line="26" pos:column="42"/></name></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name><name pos:line="26" pos:column="43">rep<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">sline<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">.<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="54">status<pos:position pos:line="26" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="62"/></condition><then pos:line="26" pos:column="62">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">EBIT_CLR<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">entry<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">flags<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">ENTRY_FWD_HDR_WAIT<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt></block></then></if>
            <goto pos:line="28" pos:column="13">goto <name pos:line="28" pos:column="18">no_cache<pos:position pos:line="28" pos:column="26"/></name>;<pos:position pos:line="28" pos:column="27"/></goto>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="31" pos:column="9">entry<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">mem_obj<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">vary_headers<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">=<pos:position pos:line="31" pos:column="39"/></operator> <call><name pos:line="31" pos:column="40">xstrdup<pos:position pos:line="31" pos:column="47"/></name><argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">vary<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/*
     * If its not a reply that we will re-forward, then
     * allow the client to get it.
     */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><call><name><name pos:line="38" pos:column="10">fwd<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">reforwardableStatus<pos:position pos:line="38" pos:column="34"/></name></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name><name pos:line="38" pos:column="35">rep<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">sline<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">.<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">status<pos:position pos:line="38" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="54"/></condition><then pos:line="38" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="9">EBIT_CLR<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name><name pos:line="39" pos:column="18">entry<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">flags<pos:position pos:line="39" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">ENTRY_FWD_HDR_WAIT<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt></block></then></if>

    <switch pos:line="41" pos:column="5">switch <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">cacheableReply<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">()<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="30"/></condition> <block pos:line="41" pos:column="31">{

    <case pos:line="43" pos:column="5">case <expr><literal type="number" pos:line="43" pos:column="10">1<pos:position pos:line="43" pos:column="11"/></literal></expr>:<pos:position pos:line="43" pos:column="12"/></case>
        <expr_stmt><expr><call><name><name pos:line="44" pos:column="9">entry<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">makePublic<pos:position pos:line="44" pos:column="26"/></name></name><argument_list pos:line="44" pos:column="26">()<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
        <break pos:line="45" pos:column="9">break;<pos:position pos:line="45" pos:column="15"/></break>

    <case pos:line="47" pos:column="5">case <expr><literal type="number" pos:line="47" pos:column="10">0<pos:position pos:line="47" pos:column="11"/></literal></expr>:<pos:position pos:line="47" pos:column="12"/></case>
        <expr_stmt><expr><call><name><name pos:line="48" pos:column="9">entry<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">makePrivate<pos:position pos:line="48" pos:column="27"/></name></name><argument_list pos:line="48" pos:column="27">()<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
        <break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break>

    <case pos:line="51" pos:column="5">case <expr><operator pos:line="51" pos:column="10">-<pos:position pos:line="51" pos:column="11"/></operator><literal type="number" pos:line="51" pos:column="11">1<pos:position pos:line="51" pos:column="12"/></literal></expr>:<pos:position pos:line="51" pos:column="13"/></case>

<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><name pos:line="53" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="53" pos:column="24"/></name></expr></cpp:if>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">Config<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">negativeTtl<pos:position pos:line="54" pos:column="31"/></name></name> <operator pos:line="54" pos:column="32">&gt;<pos:position pos:line="54" pos:column="36"/></operator> <literal type="number" pos:line="54" pos:column="34">0<pos:position pos:line="54" pos:column="35"/></literal></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="55" pos:column="13">entry<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">cacheNegatively<pos:position pos:line="55" pos:column="35"/></name></name><argument_list pos:line="55" pos:column="35">()<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt></block></then>
        <else pos:line="56" pos:column="9">else
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="58" pos:column="13">entry<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">makePrivate<pos:position pos:line="58" pos:column="31"/></name></name><argument_list pos:line="58" pos:column="31">()<pos:position pos:line="58" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt></block></else></if>

        <break pos:line="60" pos:column="9">break;<pos:position pos:line="60" pos:column="15"/></break>

    <default pos:line="62" pos:column="5">default:<pos:position pos:line="62" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">assert<pos:position pos:line="63" pos:column="15"/></name><argument_list pos:line="63" pos:column="15">(<argument><expr><literal type="number" pos:line="63" pos:column="16">0<pos:position pos:line="63" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="19"/></expr_stmt>

        <break pos:line="65" pos:column="9">break;<pos:position pos:line="65" pos:column="15"/></break>
    }<pos:position pos:line="66" pos:column="6"/></block></switch>

<label><name pos:line="68" pos:column="1">no_cache<pos:position pos:line="68" pos:column="9"/></name>:<pos:position pos:line="68" pos:column="10"/></label>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><operator pos:line="70" pos:column="9">!<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">ignoreCacheControl<pos:position pos:line="70" pos:column="28"/></name></expr>)<pos:position pos:line="70" pos:column="29"/></condition><then pos:line="70" pos:column="29"> <block pos:line="70" pos:column="30">{
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name><name pos:line="71" pos:column="13">rep<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">-&gt;<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="18">cache_control<pos:position pos:line="71" pos:column="31"/></name></name></expr>)<pos:position pos:line="71" pos:column="32"/></condition><then pos:line="71" pos:column="32"> <block pos:line="71" pos:column="33">{
            <comment type="line" pos:line="72" pos:column="13">// We are required to revalidate on many conditions.</comment>
            <comment type="line" pos:line="73" pos:column="13">// For security reasons we do so even if storage was caused by refresh_pattern ignore-* option</comment>

            <comment type="line" pos:line="75" pos:column="13">// CC:must-revalidate or CC:proxy-revalidate</comment>
            <decl_stmt><decl><type><specifier pos:line="76" pos:column="13">const<pos:position pos:line="76" pos:column="18"/></specifier> <name pos:line="76" pos:column="19">bool<pos:position pos:line="76" pos:column="23"/></name></type> <name pos:line="76" pos:column="24">ccMustRevalidate<pos:position pos:line="76" pos:column="40"/></name> <init pos:line="76" pos:column="41">= <expr><operator pos:line="76" pos:column="43">(<pos:position pos:line="76" pos:column="44"/></operator><call><name><name pos:line="76" pos:column="44">rep<pos:position pos:line="76" pos:column="47"/></name><operator pos:line="76" pos:column="47">-&gt;<pos:position pos:line="76" pos:column="52"/></operator><name pos:line="76" pos:column="49">cache_control<pos:position pos:line="76" pos:column="62"/></name><operator pos:line="76" pos:column="62">-&gt;<pos:position pos:line="76" pos:column="67"/></operator><name pos:line="76" pos:column="64">proxyRevalidate<pos:position pos:line="76" pos:column="79"/></name></name><argument_list pos:line="76" pos:column="79">()<pos:position pos:line="76" pos:column="81"/></argument_list></call> <operator pos:line="76" pos:column="82">||<pos:position pos:line="76" pos:column="84"/></operator> <call><name><name pos:line="76" pos:column="85">rep<pos:position pos:line="76" pos:column="88"/></name><operator pos:line="76" pos:column="88">-&gt;<pos:position pos:line="76" pos:column="93"/></operator><name pos:line="76" pos:column="90">cache_control<pos:position pos:line="76" pos:column="103"/></name><operator pos:line="76" pos:column="103">-&gt;<pos:position pos:line="76" pos:column="108"/></operator><name pos:line="76" pos:column="105">mustRevalidate<pos:position pos:line="76" pos:column="119"/></name></name><argument_list pos:line="76" pos:column="119">()<pos:position pos:line="76" pos:column="121"/></argument_list></call><operator pos:line="76" pos:column="121">)<pos:position pos:line="76" pos:column="122"/></operator></expr></init></decl>;<pos:position pos:line="76" pos:column="123"/></decl_stmt>

            <comment type="line" pos:line="78" pos:column="13">// CC:no-cache (only if there are no parameters)</comment>
            <decl_stmt><decl><type><specifier pos:line="79" pos:column="13">const<pos:position pos:line="79" pos:column="18"/></specifier> <name pos:line="79" pos:column="19">bool<pos:position pos:line="79" pos:column="23"/></name></type> <name pos:line="79" pos:column="24">ccNoCacheNoParams<pos:position pos:line="79" pos:column="41"/></name> <init pos:line="79" pos:column="42">= <expr><operator pos:line="79" pos:column="44">(<pos:position pos:line="79" pos:column="45"/></operator><call><name><name pos:line="79" pos:column="45">rep<pos:position pos:line="79" pos:column="48"/></name><operator pos:line="79" pos:column="48">-&gt;<pos:position pos:line="79" pos:column="53"/></operator><name pos:line="79" pos:column="50">cache_control<pos:position pos:line="79" pos:column="63"/></name><operator pos:line="79" pos:column="63">-&gt;<pos:position pos:line="79" pos:column="68"/></operator><name pos:line="79" pos:column="65">hasNoCache<pos:position pos:line="79" pos:column="75"/></name></name><argument_list pos:line="79" pos:column="75">()<pos:position pos:line="79" pos:column="77"/></argument_list></call> <operator pos:line="79" pos:column="78">&amp;&amp;<pos:position pos:line="79" pos:column="88"/></operator> <call><name><name pos:line="79" pos:column="81">rep<pos:position pos:line="79" pos:column="84"/></name><operator pos:line="79" pos:column="84">-&gt;<pos:position pos:line="79" pos:column="89"/></operator><name pos:line="79" pos:column="86">cache_control<pos:position pos:line="79" pos:column="99"/></name><operator pos:line="79" pos:column="99">-&gt;<pos:position pos:line="79" pos:column="104"/></operator><name pos:line="79" pos:column="101">noCache<pos:position pos:line="79" pos:column="108"/></name></name><argument_list pos:line="79" pos:column="108">()<pos:position pos:line="79" pos:column="110"/></argument_list></call><operator pos:line="79" pos:column="110">.<pos:position pos:line="79" pos:column="111"/></operator><call><name pos:line="79" pos:column="111">undefined<pos:position pos:line="79" pos:column="120"/></name><argument_list pos:line="79" pos:column="120">()<pos:position pos:line="79" pos:column="122"/></argument_list></call><operator pos:line="79" pos:column="122">)<pos:position pos:line="79" pos:column="123"/></operator></expr></init></decl>;<pos:position pos:line="79" pos:column="124"/></decl_stmt>

            <comment type="line" pos:line="81" pos:column="13">// CC:s-maxage=N</comment>
            <decl_stmt><decl><type><specifier pos:line="82" pos:column="13">const<pos:position pos:line="82" pos:column="18"/></specifier> <name pos:line="82" pos:column="19">bool<pos:position pos:line="82" pos:column="23"/></name></type> <name pos:line="82" pos:column="24">ccSMaxAge<pos:position pos:line="82" pos:column="33"/></name> <init pos:line="82" pos:column="34">= <expr><call><name><name pos:line="82" pos:column="36">rep<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">-&gt;<pos:position pos:line="82" pos:column="44"/></operator><name pos:line="82" pos:column="41">cache_control<pos:position pos:line="82" pos:column="54"/></name><operator pos:line="82" pos:column="54">-&gt;<pos:position pos:line="82" pos:column="59"/></operator><name pos:line="82" pos:column="56">hasSMaxAge<pos:position pos:line="82" pos:column="66"/></name></name><argument_list pos:line="82" pos:column="66">()<pos:position pos:line="82" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="69"/></decl_stmt>

            <comment type="line" pos:line="84" pos:column="13">// CC:private (yes, these can sometimes be stored)</comment>
            <decl_stmt><decl><type><specifier pos:line="85" pos:column="13">const<pos:position pos:line="85" pos:column="18"/></specifier> <name pos:line="85" pos:column="19">bool<pos:position pos:line="85" pos:column="23"/></name></type> <name pos:line="85" pos:column="24">ccPrivate<pos:position pos:line="85" pos:column="33"/></name> <init pos:line="85" pos:column="34">= <expr><call><name><name pos:line="85" pos:column="36">rep<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">-&gt;<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="41">cache_control<pos:position pos:line="85" pos:column="54"/></name><operator pos:line="85" pos:column="54">-&gt;<pos:position pos:line="85" pos:column="59"/></operator><name pos:line="85" pos:column="56">hasPrivate<pos:position pos:line="85" pos:column="66"/></name></name><argument_list pos:line="85" pos:column="66">()<pos:position pos:line="85" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="69"/></decl_stmt>

            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name pos:line="87" pos:column="17">ccMustRevalidate<pos:position pos:line="87" pos:column="33"/></name> <operator pos:line="87" pos:column="34">||<pos:position pos:line="87" pos:column="36"/></operator> <name pos:line="87" pos:column="37">ccNoCacheNoParams<pos:position pos:line="87" pos:column="54"/></name> <operator pos:line="87" pos:column="55">||<pos:position pos:line="87" pos:column="57"/></operator> <name pos:line="87" pos:column="58">ccSMaxAge<pos:position pos:line="87" pos:column="67"/></name> <operator pos:line="87" pos:column="68">||<pos:position pos:line="87" pos:column="70"/></operator> <name pos:line="87" pos:column="71">ccPrivate<pos:position pos:line="87" pos:column="80"/></name></expr>)<pos:position pos:line="87" pos:column="81"/></condition><then pos:line="87" pos:column="81">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="17">EBIT_SET<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name><name pos:line="88" pos:column="26">entry<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">-&gt;<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="33">flags<pos:position pos:line="88" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="40">ENTRY_REVALIDATE<pos:position pos:line="88" pos:column="56"/></name></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="89" pos:column="10"/></block></then>
<cpp:if pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">if<pos:position pos:line="90" pos:column="4"/></cpp:directive> <expr><name pos:line="90" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="90" pos:column="24"/></name></expr></cpp:if> <comment type="line" pos:line="90" pos:column="25">// response header Pragma::no-cache is undefined in HTTP</comment>
        <else pos:line="91" pos:column="9">else <block pos:line="91" pos:column="14">{
            <comment type="line" pos:line="92" pos:column="13">// Expensive calculation. So only do it IF the CC: header is not present.</comment>

            <comment type="block" pos:line="94" pos:column="13">/* HACK: Pragma: no-cache in _replies_ is not documented in HTTP,
             * but servers like "Active Imaging Webcast/2.0" sure do use it */</comment>
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><call><name><name pos:line="96" pos:column="17">rep<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">-&gt;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="22">header<pos:position pos:line="96" pos:column="28"/></name><operator pos:line="96" pos:column="28">.<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="29">has<pos:position pos:line="96" pos:column="32"/></name></name><argument_list pos:line="96" pos:column="32">(<argument><expr><name pos:line="96" pos:column="33">HDR_PRAGMA<pos:position pos:line="96" pos:column="43"/></name></expr></argument>)<pos:position pos:line="96" pos:column="44"/></argument_list></call> <operator pos:line="96" pos:column="45">&amp;&amp;<pos:position pos:line="96" pos:column="55"/></operator>
                    <call><name><name pos:line="97" pos:column="21">rep<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">-&gt;<pos:position pos:line="97" pos:column="29"/></operator><name pos:line="97" pos:column="26">header<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">.<pos:position pos:line="97" pos:column="33"/></operator><name pos:line="97" pos:column="33">hasListMember<pos:position pos:line="97" pos:column="46"/></name></name><argument_list pos:line="97" pos:column="46">(<argument><expr><name pos:line="97" pos:column="47">HDR_PRAGMA<pos:position pos:line="97" pos:column="57"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="97" pos:column="58">"no-cache"<pos:position pos:line="97" pos:column="68"/></literal></expr></argument>,<argument><expr><literal type="char" pos:line="97" pos:column="69">','<pos:position pos:line="97" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="74"/></condition><then pos:line="97" pos:column="74">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="17">EBIT_SET<pos:position pos:line="98" pos:column="25"/></name><argument_list pos:line="98" pos:column="25">(<argument><expr><name><name pos:line="98" pos:column="26">entry<pos:position pos:line="98" pos:column="31"/></name><operator pos:line="98" pos:column="31">-&gt;<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="33">flags<pos:position pos:line="98" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="40">ENTRY_REVALIDATE<pos:position pos:line="98" pos:column="56"/></name></expr></argument>)<pos:position pos:line="98" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="99" pos:column="10"/></block></else></if>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

<cpp:if pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">if<pos:position pos:line="103" pos:column="4"/></cpp:directive> <expr><name pos:line="103" pos:column="5">HEADERS_LOG<pos:position pos:line="103" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">headersLog<pos:position pos:line="104" pos:column="15"/></name><argument_list pos:line="104" pos:column="15">(<argument><expr><literal type="number" pos:line="104" pos:column="16">1<pos:position pos:line="104" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="19">0<pos:position pos:line="104" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="22">request<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">-&gt;<pos:position pos:line="104" pos:column="34"/></operator><name pos:line="104" pos:column="31">method<pos:position pos:line="104" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="39">rep<pos:position pos:line="104" pos:column="42"/></name></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>

<cpp:endif pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">endif<pos:position pos:line="106" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="108" pos:column="5">ctx_exit<pos:position pos:line="108" pos:column="13"/></name><argument_list pos:line="108" pos:column="13">(<argument><expr><name pos:line="108" pos:column="14">ctx<pos:position pos:line="108" pos:column="17"/></name></expr></argument>)<pos:position pos:line="108" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="19"/></expr_stmt>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

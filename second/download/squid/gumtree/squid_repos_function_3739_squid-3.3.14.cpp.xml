<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3739_squid-3.3.14.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Address<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">operator <name pos:line="2" pos:column="23">=<pos:position pos:line="2" pos:column="24"/></name></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">hostent<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">s<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">in_addr<pos:position pos:line="5" pos:column="19"/></name></name><modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type> <name pos:line="5" pos:column="21">ipv4<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">in6_addr<pos:position pos:line="7" pos:column="20"/></name></name><modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type> <name pos:line="7" pos:column="22">ipv6<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

    <comment type="line" pos:line="9" pos:column="5">//struct hostent {</comment>
    <comment type="line" pos:line="10" pos:column="5">//        char    *h_name;        /* official name of host */</comment>
    <comment type="line" pos:line="11" pos:column="5">//        char    **h_aliases;    /* alias list */</comment>
    <comment type="line" pos:line="12" pos:column="5">//        int     h_addrtype;     /* host address type */</comment>
    <comment type="line" pos:line="13" pos:column="5">//        int     h_length;       /* length of address */</comment>
    <comment type="line" pos:line="14" pos:column="5">//        char    **h_addr_list;  /* list of addresses */</comment>
    <comment type="line" pos:line="15" pos:column="5">//}</comment>

    <switch pos:line="17" pos:column="5">switch <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">s<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">.<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">h_addrtype<pos:position pos:line="17" pos:column="25"/></name></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition> <block pos:line="17" pos:column="27">{

    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">AF_INET<pos:position pos:line="19" pos:column="17"/></name></expr>:<pos:position pos:line="19" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="20" pos:column="9">ipv4<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">in_addr<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">)<pos:position pos:line="20" pos:column="26"/></operator><operator pos:line="20" pos:column="26">(<pos:position pos:line="20" pos:column="27"/></operator><name><name pos:line="20" pos:column="27">s<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">h_addr_list<pos:position pos:line="20" pos:column="40"/></name><index pos:line="20" pos:column="40">[<expr><literal type="number" pos:line="20" pos:column="41">0<pos:position pos:line="20" pos:column="42"/></literal></expr>]<pos:position pos:line="20" pos:column="43"/></index></name><operator pos:line="20" pos:column="43">)<pos:position pos:line="20" pos:column="44"/></operator></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
        <comment type="block" pos:line="21" pos:column="9">/* this */</comment>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">operator<name pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></name></name><argument_list pos:line="22" pos:column="18">(<argument><expr><operator pos:line="22" pos:column="19">*<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">ipv4<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
        <break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>

    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">AF_INET6<pos:position pos:line="25" pos:column="18"/></name></expr>:<pos:position pos:line="25" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="26" pos:column="9">ipv6<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">in6_addr<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">*<pos:position pos:line="26" pos:column="26"/></operator><operator pos:line="26" pos:column="26">)<pos:position pos:line="26" pos:column="27"/></operator><operator pos:line="26" pos:column="27">(<pos:position pos:line="26" pos:column="28"/></operator><name><name pos:line="26" pos:column="28">s<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">.<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">h_addr_list<pos:position pos:line="26" pos:column="41"/></name><index pos:line="26" pos:column="41">[<expr><literal type="number" pos:line="26" pos:column="42">0<pos:position pos:line="26" pos:column="43"/></literal></expr>]<pos:position pos:line="26" pos:column="44"/></index></name><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
        <comment type="block" pos:line="27" pos:column="9">/* this */</comment>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">operator<name pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></name></name><argument_list pos:line="28" pos:column="18">(<argument><expr><operator pos:line="28" pos:column="19">*<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">ipv6<pos:position pos:line="28" pos:column="24"/></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
        <break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>

    <default pos:line="31" pos:column="5">default:<pos:position pos:line="31" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">IASSERT<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><literal type="string" pos:line="32" pos:column="17">"false"<pos:position pos:line="32" pos:column="24"/></literal></expr></argument>,<argument><expr><literal type="boolean" pos:line="32" pos:column="25">false<pos:position pos:line="32" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><literal type="boolean" pos:line="33" pos:column="16">false<pos:position pos:line="33" pos:column="21"/></literal></expr>;<pos:position pos:line="33" pos:column="22"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></switch>

    <return pos:line="36" pos:column="5">return <expr><literal type="boolean" pos:line="36" pos:column="12">true<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5397_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Gateway<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">haveParsedReplyHeaders<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">()<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">Client<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">::<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">haveParsedReplyHeaders<pos:position pos:line="4" pos:column="35"/></name></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StoreEntry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">e<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">entry<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">e<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">timestampsSet<pos:position pos:line="8" pos:column="21"/></name></name><argument_list pos:line="8" pos:column="21">()<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">flags<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">authenticated<pos:position pos:line="10" pos:column="28"/></name></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
        <comment type="block" pos:line="11" pos:column="9">/*
         * Authenticated requests can't be cached.
         */</comment>
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">e<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">release<pos:position pos:line="14" pos:column="19"/></name></name><argument_list pos:line="14" pos:column="19">()<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><operator pos:line="15" pos:column="16">!<pos:position pos:line="15" pos:column="17"/></operator><call><name pos:line="15" pos:column="17">EBIT_TEST<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name><name pos:line="15" pos:column="27">e<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">flags<pos:position pos:line="15" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">RELEASE_REQUEST<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call> <operator pos:line="15" pos:column="54">&amp;&amp;<pos:position pos:line="15" pos:column="64"/></operator> <operator pos:line="15" pos:column="57">!<pos:position pos:line="15" pos:column="58"/></operator><call><name pos:line="15" pos:column="58">getCurrentOffset<pos:position pos:line="15" pos:column="74"/></name><argument_list pos:line="15" pos:column="74">()<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="77"/></condition><then pos:line="15" pos:column="77"> <block pos:line="15" pos:column="78">{
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">e<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">setPublicKey<pos:position pos:line="16" pos:column="24"/></name></name><argument_list pos:line="16" pos:column="24">()<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <else pos:line="17" pos:column="7">else <block pos:line="17" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">e<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">release<pos:position pos:line="18" pos:column="19"/></name></name><argument_list pos:line="18" pos:column="19">()<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

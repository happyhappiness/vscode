<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1705_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">statHistInit<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">StatHist<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">H<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">capacity<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">hbase_f<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type> <name pos:line="2" pos:column="52">val_in<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">hbase_f<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type> <name pos:line="2" pos:column="70">val_out<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="79">double<pos:position pos:line="2" pos:column="85"/></name></type> <name pos:line="2" pos:column="86">min<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="91">double<pos:position pos:line="2" pos:column="97"/></name></type> <name pos:line="2" pos:column="98">max<pos:position pos:line="2" pos:column="101"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="102"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">H<pos:position pos:line="4" pos:column="13"/></name></expr></argument>)<pos:position pos:line="4" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">capacity<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&gt;<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">val_in<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&amp;&amp;<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="22">val_out<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* check before we divide to get scale */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><call><name pos:line="8" pos:column="12">val_in<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">max<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">-<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">min<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call> <operator pos:line="8" pos:column="30">&gt;<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">H<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">bins<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <operator pos:line="9" pos:column="15">(<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">int<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></operator><operator pos:line="9" pos:column="21">)<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">xcalloc<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">capacity<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="40">sizeof<argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">int<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">H<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">min<pos:position pos:line="10" pos:column="11"/></name></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">min<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">H<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">max<pos:position pos:line="11" pos:column="11"/></name></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">max<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">H<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">capacity<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">capacity<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">H<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">scale<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">capacity<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">/<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">val_in<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">max<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">-<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">min<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">H<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">val_in<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">val_in<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">H<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">val_out<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">val_out<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* HPUX users: If you get one of the assertions below, please send
     * [at least] the values of all variables involved in the assertions
     * when reporting a bug!
     */</comment>

    <comment type="block" pos:line="22" pos:column="5">/* check that functions are valid */</comment>
    <comment type="block" pos:line="23" pos:column="5">/* a min value should go into bin[0] */</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><call><name pos:line="24" pos:column="12">statHistBin<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">H<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">min<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call> <operator pos:line="24" pos:column="32">==<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
    <comment type="block" pos:line="25" pos:column="5">/* a max value should go into the last bin */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">assert<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><call><name pos:line="26" pos:column="12">statHistBin<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">H<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="27">max<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call> <operator pos:line="26" pos:column="32">==<pos:position pos:line="26" pos:column="34"/></operator> <name><name pos:line="26" pos:column="35">H<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">capacity<pos:position pos:line="26" pos:column="46"/></name></name> <operator pos:line="26" pos:column="47">-<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">1<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
    <comment type="block" pos:line="27" pos:column="5">/* it is hard to test val_out, here is a crude test */</comment>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">assert<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">int<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">floor<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="number" pos:line="28" pos:column="25">0.99<pos:position pos:line="28" pos:column="29"/></literal> <operator pos:line="28" pos:column="30">+<pos:position pos:line="28" pos:column="31"/></operator> <call><name pos:line="28" pos:column="32">statHistVal<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">(<argument><expr><name pos:line="28" pos:column="44">H<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="47">0<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call> <operator pos:line="28" pos:column="50">-<pos:position pos:line="28" pos:column="51"/></operator> <name pos:line="28" pos:column="52">min<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call><operator pos:line="28" pos:column="56">)<pos:position pos:line="28" pos:column="57"/></operator> <operator pos:line="28" pos:column="58">==<pos:position pos:line="28" pos:column="60"/></operator> <literal type="number" pos:line="28" pos:column="61">0<pos:position pos:line="28" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1356_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerHtcpParentMiss<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">CachePeer<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">p<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">HtcpReplyData<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">htcp<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">ps_state<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type> <name pos:line="2" pos:column="68">ps<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rtt<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_ICMP<pos:position pos:line="6" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">Config<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">onoff<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">query_icmp<pos:position pos:line="7" pos:column="32"/></name></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33"> <block pos:line="7" pos:column="34">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">htcp<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">cto<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">rtt<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">&gt;<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">rtt<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">int<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">)<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="25">htcp<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">cto<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">rtt<pos:position pos:line="9" pos:column="38"/></name></name> <operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator> <literal type="number" pos:line="9" pos:column="41">1000<pos:position pos:line="9" pos:column="45"/></literal></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">int<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">hops<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">int<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">)<pos:position pos:line="10" pos:column="29"/></operator> <name><name pos:line="10" pos:column="30">htcp<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">cto<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">hops<pos:position pos:line="10" pos:column="44"/></name></name> <operator pos:line="10" pos:column="45">*<pos:position pos:line="10" pos:column="46"/></operator> <literal type="number" pos:line="10" pos:column="47">1000<pos:position pos:line="10" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">netdbUpdatePeer<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name><name pos:line="11" pos:column="29">ps<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">request<pos:position pos:line="11" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">p<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">rtt<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">hops<pos:position pos:line="11" pos:column="54"/></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>

            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">rtt<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&amp;&amp;<pos:position pos:line="13" pos:column="31"/></operator> <operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><name><name pos:line="13" pos:column="25">ps<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">ping<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">p_rtt<pos:position pos:line="13" pos:column="39"/></name></name> <operator pos:line="13" pos:column="40">==<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="43">0<pos:position pos:line="13" pos:column="44"/></literal> <operator pos:line="13" pos:column="45">||<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="48">rtt<pos:position pos:line="13" pos:column="51"/></name> <operator pos:line="13" pos:column="52">&lt;<pos:position pos:line="13" pos:column="56"/></operator> <name><name pos:line="13" pos:column="54">ps<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">-&gt;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="58">ping<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">.<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="63">p_rtt<pos:position pos:line="13" pos:column="68"/></name></name><operator pos:line="13" pos:column="68">)<pos:position pos:line="13" pos:column="69"/></operator></expr>)<pos:position pos:line="13" pos:column="70"/></condition><then pos:line="13" pos:column="70"> <block pos:line="13" pos:column="71">{
                <expr_stmt><expr><name><name pos:line="14" pos:column="17">ps<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">closest_parent_miss<pos:position pos:line="14" pos:column="40"/></name></name> <operator pos:line="14" pos:column="41">=<pos:position pos:line="14" pos:column="42"/></operator> <name><name pos:line="14" pos:column="43">p<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">in_addr<pos:position pos:line="14" pos:column="53"/></name></name></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="15" pos:column="17">ps<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">ping<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">.<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">p_rtt<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">rtt<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="19" pos:column="8">/* USE_ICMP */</comment>

    <comment type="block" pos:line="21" pos:column="5">/* if closest-only is set, then don't allow FIRST_PARENT_MISS */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">p<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">options<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">closest_only<pos:position pos:line="22" pos:column="32"/></name></name></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33">
        <block type="pseudo"><return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* set FIRST_MISS if there is no CLOSEST parent */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><call><name><name pos:line="26" pos:column="10">ps<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">closest_parent_miss<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">.<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">isAnyAddr<pos:position pos:line="26" pos:column="43"/></name></name><argument_list pos:line="26" pos:column="43">()<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46">
        <block type="pseudo"><return pos:line="27" pos:column="9">return;<pos:position pos:line="27" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">rtt<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <operator pos:line="29" pos:column="11">(<pos:position pos:line="29" pos:column="12"/></operator><call><name pos:line="29" pos:column="12">tvSubMsec<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name><name pos:line="29" pos:column="22">ps<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">ping<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">start<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">current_time<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call> <operator pos:line="29" pos:column="52">-<pos:position pos:line="29" pos:column="53"/></operator> <name><name pos:line="29" pos:column="54">p<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">basetime<pos:position pos:line="29" pos:column="65"/></name></name><operator pos:line="29" pos:column="65">)<pos:position pos:line="29" pos:column="66"/></operator> <operator pos:line="29" pos:column="67">/<pos:position pos:line="29" pos:column="68"/></operator> <name><name pos:line="29" pos:column="69">p<pos:position pos:line="29" pos:column="70"/></name><operator pos:line="29" pos:column="70">-&gt;<pos:position pos:line="29" pos:column="75"/></operator><name pos:line="29" pos:column="72">weight<pos:position pos:line="29" pos:column="78"/></name></name></expr>;<pos:position pos:line="29" pos:column="79"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">rtt<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">&lt;<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr>)<pos:position pos:line="31" pos:column="17"/></condition><then pos:line="31" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="9">rtt<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name><name pos:line="34" pos:column="9">ps<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">first_parent_miss<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">.<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">isAnyAddr<pos:position pos:line="34" pos:column="40"/></name></name><argument_list pos:line="34" pos:column="40">()<pos:position pos:line="34" pos:column="42"/></argument_list></call> <operator pos:line="34" pos:column="43">||<pos:position pos:line="34" pos:column="45"/></operator> <name pos:line="34" pos:column="46">rtt<pos:position pos:line="34" pos:column="49"/></name> <operator pos:line="34" pos:column="50">&lt;<pos:position pos:line="34" pos:column="54"/></operator> <name><name pos:line="34" pos:column="52">ps<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">-&gt;<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="56">ping<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">.<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="61">w_rtt<pos:position pos:line="34" pos:column="66"/></name></name></expr>)<pos:position pos:line="34" pos:column="67"/></condition><then pos:line="34" pos:column="67"> <block pos:line="34" pos:column="68">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">ps<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">first_parent_miss<pos:position pos:line="35" pos:column="30"/></name></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <name><name pos:line="35" pos:column="33">p<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">in_addr<pos:position pos:line="35" pos:column="43"/></name></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">ps<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">ping<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">w_rtt<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">rtt<pos:position pos:line="36" pos:column="29"/></name></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

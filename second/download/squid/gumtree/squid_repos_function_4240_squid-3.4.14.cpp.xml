<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4240_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">icapLogLog<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">AccessLogEntry<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">Pointer<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">&amp;<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="42">al<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">IcapLogfileStatus<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">==<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">LOG_ENABLE<pos:position pos:line="3" pos:column="40"/></name></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41"> <block pos:line="3" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">ACLFilledChecklist<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">checklist<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">NULL<pos:position pos:line="4" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="44">al<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">adapted_request<pos:position pos:line="4" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="65">NULL<pos:position pos:line="4" pos:column="69"/></name></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></decl>;<pos:position pos:line="4" pos:column="71"/></decl_stmt>
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">al<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">reply<pos:position pos:line="5" pos:column="22"/></name></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block pos:line="5" pos:column="24">{
            <expr_stmt><expr><name><name pos:line="6" pos:column="13">checklist<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">.<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">reply<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">=<pos:position pos:line="6" pos:column="30"/></operator> <name><name pos:line="6" pos:column="31">al<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">reply<pos:position pos:line="6" pos:column="40"/></name></name></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">HTTPMSGLOCK<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name><name pos:line="7" pos:column="25">checklist<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">reply<pos:position pos:line="7" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="8" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">accessLogLogTo<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">Config<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">.<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">Log<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">icaplogs<pos:position pos:line="9" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">al<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="49">&amp;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="50">checklist<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

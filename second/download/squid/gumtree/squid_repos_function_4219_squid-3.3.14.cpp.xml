<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4219_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">icapLogLog<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">AccessLogEntry<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">Pointer<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">&amp;<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="42">al<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">ACLChecklist<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type> <name pos:line="1" pos:column="61">checklist<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">IcapLogfileStatus<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">==<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">LOG_ENABLE<pos:position pos:line="3" pos:column="40"/></name></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="9">accessLogLogTo<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name><name pos:line="4" pos:column="24">Config<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">Log<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">icaplogs<pos:position pos:line="4" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="45">al<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">checklist<pos:position pos:line="4" pos:column="58"/></name></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="60"/></expr_stmt></block></then></if>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5410_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Relay<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">sendCommand<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">fwd<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">request<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">header<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">has<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">HDR_FTP_COMMAND<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="52"/></condition><then pos:line="4" pos:column="52"> <block pos:line="4" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">abortAll<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><literal type="string" pos:line="5" pos:column="18">"Internal error: FTP relay request with no command"<pos:position pos:line="5" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="71"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HttpHeader<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="17">header<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name><name pos:line="9" pos:column="26">fwd<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">request<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">header<pos:position pos:line="9" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><call><name><name pos:line="10" pos:column="12">header<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">has<pos:position pos:line="10" pos:column="22"/></name></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">HDR_FTP_COMMAND<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">String<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">&amp;<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="19">cmd<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><call><name><name pos:line="11" pos:column="25">header<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">findEntry<pos:position pos:line="11" pos:column="41"/></name></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">HDR_FTP_COMMAND<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">value<pos:position pos:line="11" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><call><name><name pos:line="12" pos:column="12">header<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">has<pos:position pos:line="12" pos:column="22"/></name></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">HDR_FTP_ARGUMENTS<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">String<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">&amp;<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="19">params<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><call><name><name pos:line="13" pos:column="28">header<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">.<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">findEntry<pos:position pos:line="13" pos:column="44"/></name></name><argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">HDR_FTP_ARGUMENTS<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call><operator pos:line="13" pos:column="63">-&gt;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="65">value<pos:position pos:line="13" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="71"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">params<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">size<pos:position pos:line="15" pos:column="20"/></name></name><argument_list pos:line="15" pos:column="20">()<pos:position pos:line="15" pos:column="22"/></argument_list></call> <operator pos:line="15" pos:column="23">&gt;<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">9<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="19">5<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="22">"command: "<pos:position pos:line="16" pos:column="33"/></literal> <operator pos:line="16" pos:column="34">&lt;&lt;<pos:position pos:line="16" pos:column="42"/></operator> <name pos:line="16" pos:column="37">cmd<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">&lt;&lt;<pos:position pos:line="16" pos:column="49"/></operator> <literal type="string" pos:line="16" pos:column="44">", parameters: "<pos:position pos:line="16" pos:column="60"/></literal> <operator pos:line="16" pos:column="61">&lt;&lt;<pos:position pos:line="16" pos:column="69"/></operator> <name pos:line="16" pos:column="64">params<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">9<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="19">5<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="22">"command: "<pos:position pos:line="18" pos:column="33"/></literal> <operator pos:line="18" pos:column="34">&lt;&lt;<pos:position pos:line="18" pos:column="42"/></operator> <name pos:line="18" pos:column="37">cmd<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">&lt;&lt;<pos:position pos:line="18" pos:column="49"/></operator> <literal type="string" pos:line="18" pos:column="44">", no parameters"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt></block></else></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">serverState<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">()<pos:position pos:line="20" pos:column="22"/></argument_list></call> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">fssHandlePasv<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">||<pos:position pos:line="20" pos:column="42"/></operator>
            <call><name pos:line="21" pos:column="13">serverState<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">()<pos:position pos:line="21" pos:column="26"/></argument_list></call> <operator pos:line="21" pos:column="27">==<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">fssHandleEpsv<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">||<pos:position pos:line="21" pos:column="46"/></operator>
            <call><name pos:line="22" pos:column="13">serverState<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call> <operator pos:line="22" pos:column="27">==<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">fssHandleEprt<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">||<pos:position pos:line="22" pos:column="46"/></operator>
            <call><name pos:line="23" pos:column="13">serverState<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">()<pos:position pos:line="23" pos:column="26"/></argument_list></call> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">fssHandlePort<pos:position pos:line="23" pos:column="43"/></name></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44"> <block pos:line="23" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">sendPassive<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">()<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="28" pos:column="5">SBuf<pos:position pos:line="28" pos:column="9"/></name></type> <name pos:line="28" pos:column="10">buf<pos:position pos:line="28" pos:column="13"/></name></decl>;<pos:position pos:line="28" pos:column="14"/></decl_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name><name pos:line="29" pos:column="9">params<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">size<pos:position pos:line="29" pos:column="20"/></name></name><argument_list pos:line="29" pos:column="20">()<pos:position pos:line="29" pos:column="22"/></argument_list></call> <operator pos:line="29" pos:column="23">&gt;<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="9">buf<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">Printf<pos:position pos:line="30" pos:column="19"/></name></name><argument_list pos:line="30" pos:column="19">(<argument><expr><literal type="string" pos:line="30" pos:column="20">"%s %s%s"<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="30" pos:column="31">cmd<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">.<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">termedBuf<pos:position pos:line="30" pos:column="44"/></name></name><argument_list pos:line="30" pos:column="44">()<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="30" pos:column="48">params<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">.<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="55">termedBuf<pos:position pos:line="30" pos:column="64"/></name></name><argument_list pos:line="30" pos:column="64">()<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="68">Ftp<pos:position pos:line="30" pos:column="71"/></name><operator pos:line="30" pos:column="71">::<pos:position pos:line="30" pos:column="73"/></operator><name pos:line="30" pos:column="73">crlf<pos:position pos:line="30" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt></block></then>
    <else pos:line="31" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="32" pos:column="9">buf<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">Printf<pos:position pos:line="32" pos:column="19"/></name></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="string" pos:line="32" pos:column="20">"%s%s"<pos:position pos:line="32" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="32" pos:column="28">cmd<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">.<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">termedBuf<pos:position pos:line="32" pos:column="41"/></name></name><argument_list pos:line="32" pos:column="41">()<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="45">Ftp<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">::<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="50">crlf<pos:position pos:line="32" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">writeCommand<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><call><name><name pos:line="34" pos:column="18">buf<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">.<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">c_str<pos:position pos:line="34" pos:column="27"/></name></name><argument_list pos:line="34" pos:column="27">()<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">state<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator>
        <ternary><condition><expr><call><name pos:line="37" pos:column="9">serverState<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">()<pos:position pos:line="37" pos:column="22"/></argument_list></call> <operator pos:line="37" pos:column="23">==<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">fssHandleCdup<pos:position pos:line="37" pos:column="39"/></name></expr> ?<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <expr><name pos:line="37" pos:column="42">SENT_CDUP<pos:position pos:line="37" pos:column="51"/></name></expr> <pos:position pos:line="37" pos:column="52"/></then><else pos:line="37" pos:column="52">:
        <expr><ternary><condition><expr><call><name pos:line="38" pos:column="9">serverState<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">()<pos:position pos:line="38" pos:column="22"/></argument_list></call> <operator pos:line="38" pos:column="23">==<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">fssHandleCwd<pos:position pos:line="38" pos:column="38"/></name></expr> ?<pos:position pos:line="38" pos:column="40"/></condition><then pos:line="38" pos:column="40"> <expr><name pos:line="38" pos:column="41">SENT_CWD<pos:position pos:line="38" pos:column="49"/></name></expr> <pos:position pos:line="38" pos:column="50"/></then><else pos:line="38" pos:column="50">:
        <expr><ternary><condition><expr><call><name pos:line="39" pos:column="9">serverState<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">()<pos:position pos:line="39" pos:column="22"/></argument_list></call> <operator pos:line="39" pos:column="23">==<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">fssHandleFeat<pos:position pos:line="39" pos:column="39"/></name></expr> ?<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41"> <expr><name pos:line="39" pos:column="42">SENT_FEAT<pos:position pos:line="39" pos:column="51"/></name></expr> <pos:position pos:line="39" pos:column="52"/></then><else pos:line="39" pos:column="52">:
        <expr><ternary><condition><expr><call><name pos:line="40" pos:column="9">serverState<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">()<pos:position pos:line="40" pos:column="22"/></argument_list></call> <operator pos:line="40" pos:column="23">==<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">fssHandleDataRequest<pos:position pos:line="40" pos:column="46"/></name></expr> ?<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48"> <expr><name pos:line="40" pos:column="49">SENT_DATA_REQUEST<pos:position pos:line="40" pos:column="66"/></name></expr> <pos:position pos:line="40" pos:column="67"/></then><else pos:line="40" pos:column="67">:
        <expr><ternary><condition><expr><call><name pos:line="41" pos:column="9">serverState<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">()<pos:position pos:line="41" pos:column="22"/></argument_list></call> <operator pos:line="41" pos:column="23">==<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">fssHandleUploadRequest<pos:position pos:line="41" pos:column="48"/></name></expr> ?<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50"> <expr><name pos:line="41" pos:column="51">SENT_DATA_REQUEST<pos:position pos:line="41" pos:column="68"/></name></expr> <pos:position pos:line="41" pos:column="69"/></then><else pos:line="41" pos:column="69">:
        <expr><ternary><condition><expr><call><name pos:line="42" pos:column="9">serverState<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">()<pos:position pos:line="42" pos:column="22"/></argument_list></call> <operator pos:line="42" pos:column="23">==<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">fssConnected<pos:position pos:line="42" pos:column="38"/></name></expr> ?<pos:position pos:line="42" pos:column="40"/></condition><then pos:line="42" pos:column="40"> <expr><name pos:line="42" pos:column="41">SENT_USER<pos:position pos:line="42" pos:column="50"/></name></expr> <pos:position pos:line="42" pos:column="51"/></then><else pos:line="42" pos:column="51">:
        <expr><ternary><condition><expr><call><name pos:line="43" pos:column="9">serverState<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">()<pos:position pos:line="43" pos:column="22"/></argument_list></call> <operator pos:line="43" pos:column="23">==<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">fssHandlePass<pos:position pos:line="43" pos:column="39"/></name></expr> ?<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41"> <expr><name pos:line="43" pos:column="42">SENT_PASS<pos:position pos:line="43" pos:column="51"/></name></expr> <pos:position pos:line="43" pos:column="52"/></then><else pos:line="43" pos:column="52">:
        <expr><name pos:line="44" pos:column="9">SENT_COMMAND<pos:position pos:line="44" pos:column="21"/></name></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">state<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">==<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">SENT_DATA_REQUEST<pos:position pos:line="46" pos:column="35"/></name></expr>)<pos:position pos:line="46" pos:column="36"/></condition><then pos:line="46" pos:column="36"> <block pos:line="46" pos:column="37">{
        <decl_stmt><decl><type><name><name pos:line="47" pos:column="9">CbcPointer<pos:position pos:line="47" pos:column="19"/></name><argument_list type="generic" pos:line="47" pos:column="19">&lt;<argument><expr><name pos:line="47" pos:column="20">ConnStateData<pos:position pos:line="47" pos:column="33"/></name></expr></argument>&gt;<pos:position pos:line="47" pos:column="37"/></argument_list></name> <modifier pos:line="47" pos:column="35">&amp;<pos:position pos:line="47" pos:column="40"/></modifier></type><name pos:line="47" pos:column="36">mgr<pos:position pos:line="47" pos:column="39"/></name> <init pos:line="47" pos:column="40">= <expr><name><name pos:line="47" pos:column="42">fwd<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">-&gt;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="47">request<pos:position pos:line="47" pos:column="54"/></name><operator pos:line="47" pos:column="54">-&gt;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="56">clientConnectionManager<pos:position pos:line="47" pos:column="79"/></name></name></expr></init></decl>;<pos:position pos:line="47" pos:column="80"/></decl_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name><name pos:line="48" pos:column="13">mgr<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">.<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">valid<pos:position pos:line="48" pos:column="22"/></name></name><argument_list pos:line="48" pos:column="22">()<pos:position pos:line="48" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25"> <block pos:line="48" pos:column="26">{
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<decl><type><name><name pos:line="49" pos:column="17">Ftp<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">::<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">Server<pos:position pos:line="49" pos:column="28"/></name></name> <modifier pos:line="49" pos:column="29">*<pos:position pos:line="49" pos:column="30"/></modifier></type><name pos:line="49" pos:column="30">srv<pos:position pos:line="49" pos:column="33"/></name> <init pos:line="49" pos:column="34">= <expr><cast type="dynamic" pos:line="49" pos:column="36">dynamic_cast<argument_list type="generic" pos:line="49" pos:column="48">&lt;<argument><expr><name><name pos:line="49" pos:column="49">Ftp<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">::<pos:position pos:line="49" pos:column="54"/></operator><name pos:line="49" pos:column="54">Server<pos:position pos:line="49" pos:column="60"/></name></name><operator pos:line="49" pos:column="60">*<pos:position pos:line="49" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="49" pos:column="65"/></argument_list><argument_list pos:line="49" pos:column="62">(<argument><expr><call><name><name pos:line="49" pos:column="63">mgr<pos:position pos:line="49" pos:column="66"/></name><operator pos:line="49" pos:column="66">.<pos:position pos:line="49" pos:column="67"/></operator><name pos:line="49" pos:column="67">get<pos:position pos:line="49" pos:column="70"/></name></name><argument_list pos:line="49" pos:column="70">()<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="49" pos:column="74"/></condition><then pos:line="49" pos:column="74"> <block pos:line="49" pos:column="75">{
                <typedef pos:line="50" pos:column="17">typedef <type><name><name pos:line="50" pos:column="25">NullaryMemFunT<pos:position pos:line="50" pos:column="39"/></name><argument_list type="generic" pos:line="50" pos:column="39">&lt;<argument><expr><name><name pos:line="50" pos:column="40">Ftp<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">::<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="45">Server<pos:position pos:line="50" pos:column="51"/></name></name></expr></argument>&gt;<pos:position pos:line="50" pos:column="55"/></argument_list></name></type> <name pos:line="50" pos:column="53">CbDialer<pos:position pos:line="50" pos:column="61"/></name>;<pos:position pos:line="50" pos:column="62"/></typedef>
                <decl_stmt><decl><type><name><name pos:line="51" pos:column="17">AsyncCall<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">::<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">Pointer<pos:position pos:line="51" pos:column="35"/></name></name></type> <name pos:line="51" pos:column="36">call<pos:position pos:line="51" pos:column="40"/></name> <init pos:line="51" pos:column="41">= <expr><call><name pos:line="51" pos:column="43">JobCallback<pos:position pos:line="51" pos:column="54"/></name><argument_list pos:line="51" pos:column="54">(<argument><expr><literal type="number" pos:line="51" pos:column="55">11<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="59">3<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="62">CbDialer<pos:position pos:line="51" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="72">srv<pos:position pos:line="51" pos:column="75"/></name></expr></argument>,
                                                      <argument><expr><name><name pos:line="52" pos:column="55">Ftp<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">::<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="60">Server<pos:position pos:line="52" pos:column="66"/></name><operator pos:line="52" pos:column="66">::<pos:position pos:line="52" pos:column="68"/></operator><name pos:line="52" pos:column="68">startWaitingForOrigin<pos:position pos:line="52" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="91"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">ScheduleCallHere<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">call<pos:position pos:line="53" pos:column="38"/></name></expr></argument>)<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="54" pos:column="17">originWaitInProgress<pos:position pos:line="54" pos:column="37"/></name> <operator pos:line="54" pos:column="38">=<pos:position pos:line="54" pos:column="39"/></operator> <literal type="boolean" pos:line="54" pos:column="40">true<pos:position pos:line="54" pos:column="44"/></literal></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1376_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayConfig<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">parsePoolRates<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">short<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">pool<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">ConfigParser<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">ParseUShort<pos:position pos:line="5" pos:column="30"/></name></name><argument_list pos:line="5" pos:column="30">(<argument><expr><operator pos:line="5" pos:column="31">&amp;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="32">pool<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">pool<pos:position pos:line="7" pos:column="13"/></name> <argument_list type="generic" pos:line="7" pos:column="14">&lt; <argument><expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal> <operator pos:line="7" pos:column="18">||<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">pool<pos:position pos:line="7" pos:column="25"/></name></expr></argument> &gt;<pos:position pos:line="7" pos:column="30"/></argument_list></name> <call><name><name pos:line="7" pos:column="28">DelayPools<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">::<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">pools<pos:position pos:line="7" pos:column="45"/></name></name><argument_list pos:line="7" pos:column="45">()<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="48"/></condition><then pos:line="7" pos:column="48"> <block pos:line="7" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">3<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">DBG_CRITICAL<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"parse_delay_pool_rates: Ignoring pool "<pos:position pos:line="8" pos:column="73"/></literal> <operator pos:line="8" pos:column="74">&lt;&lt;<pos:position pos:line="8" pos:column="82"/></operator> <name pos:line="8" pos:column="77">pool<pos:position pos:line="8" pos:column="81"/></name> <operator pos:line="8" pos:column="82">&lt;&lt;<pos:position pos:line="8" pos:column="90"/></operator> <literal type="string" pos:line="8" pos:column="85">" not in 1 .. "<pos:position pos:line="8" pos:column="100"/></literal> <operator pos:line="8" pos:column="101">&lt;&lt;<pos:position pos:line="8" pos:column="109"/></operator> <call><name><name pos:line="8" pos:column="104">DelayPools<pos:position pos:line="8" pos:column="114"/></name><operator pos:line="8" pos:column="114">::<pos:position pos:line="8" pos:column="116"/></operator><name pos:line="8" pos:column="116">pools<pos:position pos:line="8" pos:column="121"/></name></name><argument_list pos:line="8" pos:column="121">()<pos:position pos:line="8" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="125"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="12" pos:column="5">--<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">pool<pos:position pos:line="12" pos:column="11"/></name></expr>;<pos:position pos:line="12" pos:column="12"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">DelayPools<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">::<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">delay_data<pos:position pos:line="14" pos:column="32"/></name><index pos:line="14" pos:column="32">[<expr><name pos:line="14" pos:column="33">pool<pos:position pos:line="14" pos:column="37"/></name></expr>]<pos:position pos:line="14" pos:column="38"/></index></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><call><name pos:line="14" pos:column="39">theComposite<pos:position pos:line="14" pos:column="51"/></name><argument_list pos:line="14" pos:column="51">()<pos:position pos:line="14" pos:column="53"/></argument_list></call><operator pos:line="14" pos:column="53">.<pos:position pos:line="14" pos:column="54"/></operator><call><name pos:line="14" pos:column="54">getRaw<pos:position pos:line="14" pos:column="60"/></name><argument_list pos:line="14" pos:column="60">()<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63"> <block pos:line="14" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">3<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">DBG_CRITICAL<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"parse_delay_pool_rates: Ignoring pool "<pos:position pos:line="15" pos:column="73"/></literal> <operator pos:line="15" pos:column="74">&lt;&lt;<pos:position pos:line="15" pos:column="82"/></operator> <name pos:line="15" pos:column="77">pool<pos:position pos:line="15" pos:column="81"/></name> <operator pos:line="15" pos:column="82">+<pos:position pos:line="15" pos:column="83"/></operator> <literal type="number" pos:line="15" pos:column="84">1<pos:position pos:line="15" pos:column="85"/></literal> <operator pos:line="15" pos:column="86">&lt;&lt;<pos:position pos:line="15" pos:column="94"/></operator> <literal type="string" pos:line="15" pos:column="89">" attempt to set rates with class not set"<pos:position pos:line="15" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="133"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">DelayPools<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">::<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">delay_data<pos:position pos:line="19" pos:column="27"/></name><index pos:line="19" pos:column="27">[<expr><name pos:line="19" pos:column="28">pool<pos:position pos:line="19" pos:column="32"/></name></expr>]<pos:position pos:line="19" pos:column="33"/></index></name><operator pos:line="19" pos:column="33">.<pos:position pos:line="19" pos:column="34"/></operator><call><name pos:line="19" pos:column="34">parse<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">()<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

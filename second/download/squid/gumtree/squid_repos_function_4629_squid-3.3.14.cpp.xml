<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4629_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLRegexData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">match<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">word<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">word<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">28<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"aclRegexData::match: checking '"<pos:position pos:line="7" pos:column="52"/></literal> <operator pos:line="7" pos:column="53">&lt;&lt;<pos:position pos:line="7" pos:column="61"/></operator> <name pos:line="7" pos:column="56">word<pos:position pos:line="7" pos:column="60"/></name> <operator pos:line="7" pos:column="61">&lt;&lt;<pos:position pos:line="7" pos:column="69"/></operator> <literal type="string" pos:line="7" pos:column="64">"'"<pos:position pos:line="7" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="69"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">RegexList<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">first<pos:position pos:line="9" pos:column="21"/></name></decl>, <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="24">prev<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">first<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">data<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">prev<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">NULL<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">RegexList<pos:position pos:line="15" pos:column="14"/></name> <modifier pos:line="15" pos:column="15">*<pos:position pos:line="15" pos:column="16"/></modifier></type><name pos:line="15" pos:column="16">current<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><name pos:line="15" pos:column="26">first<pos:position pos:line="15" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>

    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">current<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition> <block pos:line="17" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">28<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">3<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"aclRegexData::match: looking for '"<pos:position pos:line="18" pos:column="59"/></literal> <operator pos:line="18" pos:column="60">&lt;&lt;<pos:position pos:line="18" pos:column="68"/></operator> <name><name pos:line="18" pos:column="63">current<pos:position pos:line="18" pos:column="70"/></name><operator pos:line="18" pos:column="70">-&gt;<pos:position pos:line="18" pos:column="75"/></operator><name pos:line="18" pos:column="72">pattern<pos:position pos:line="18" pos:column="79"/></name></name> <operator pos:line="18" pos:column="80">&lt;&lt;<pos:position pos:line="18" pos:column="88"/></operator> <literal type="string" pos:line="18" pos:column="83">"'"<pos:position pos:line="18" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="88"/></expr_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">regexec<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><operator pos:line="20" pos:column="21">&amp;<pos:position pos:line="20" pos:column="26"/></operator><name><name pos:line="20" pos:column="22">current<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">regex<pos:position pos:line="20" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">word<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="47">0<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="50">0<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call> <operator pos:line="20" pos:column="53">==<pos:position pos:line="20" pos:column="55"/></operator> <literal type="number" pos:line="20" pos:column="56">0<pos:position pos:line="20" pos:column="57"/></literal></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58"> <block pos:line="20" pos:column="59">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">prev<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">!=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
                <comment type="block" pos:line="22" pos:column="17">/* shift the element just found to the second position
                 * in the list */</comment>
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">prev<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">next<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <name><name pos:line="24" pos:column="30">current<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">next<pos:position pos:line="24" pos:column="43"/></name></name></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">current<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">next<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <name><name pos:line="25" pos:column="33">first<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">next<pos:position pos:line="25" pos:column="44"/></name></name></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">first<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">next<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">current<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">28<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="24">2<pos:position pos:line="29" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"aclRegexData::match: match '"<pos:position pos:line="29" pos:column="57"/></literal> <operator pos:line="29" pos:column="58">&lt;&lt;<pos:position pos:line="29" pos:column="66"/></operator> <name><name pos:line="29" pos:column="61">current<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">-&gt;<pos:position pos:line="29" pos:column="73"/></operator><name pos:line="29" pos:column="70">pattern<pos:position pos:line="29" pos:column="77"/></name></name> <operator pos:line="29" pos:column="78">&lt;&lt;<pos:position pos:line="29" pos:column="86"/></operator> <literal type="string" pos:line="29" pos:column="81">"' found in '"<pos:position pos:line="29" pos:column="95"/></literal> <operator pos:line="29" pos:column="96">&lt;&lt;<pos:position pos:line="29" pos:column="104"/></operator> <name pos:line="29" pos:column="99">word<pos:position pos:line="29" pos:column="103"/></name> <operator pos:line="29" pos:column="104">&lt;&lt;<pos:position pos:line="29" pos:column="112"/></operator> <literal type="string" pos:line="29" pos:column="107">"'"<pos:position pos:line="29" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="112"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><literal type="number" pos:line="30" pos:column="20">1<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="33" pos:column="9">prev<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">current<pos:position pos:line="33" pos:column="23"/></name></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">current<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name><name pos:line="34" pos:column="19">current<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">next<pos:position pos:line="34" pos:column="32"/></name></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></while>

    <return pos:line="37" pos:column="5">return <expr><literal type="number" pos:line="37" pos:column="12">0<pos:position pos:line="37" pos:column="13"/></literal></expr>;<pos:position pos:line="37" pos:column="14"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

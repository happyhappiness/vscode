<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3323_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">processMiss<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">url<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name><name pos:line="4" pos:column="17">http<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">uri<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpRequest<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">http<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">request<pos:position pos:line="5" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ErrorState<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">err<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">88<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">4<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"clientProcessMiss: '"<pos:position pos:line="7" pos:column="41"/></literal> <operator pos:line="7" pos:column="42">&lt;&lt;<pos:position pos:line="7" pos:column="50"/></operator> <call><name pos:line="7" pos:column="45">RequestMethodStr<pos:position pos:line="7" pos:column="61"/></name><argument_list pos:line="7" pos:column="61">(<argument><expr><name><name pos:line="7" pos:column="62">r<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">-&gt;<pos:position pos:line="7" pos:column="68"/></operator><name pos:line="7" pos:column="65">method<pos:position pos:line="7" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call> <operator pos:line="7" pos:column="73">&lt;&lt;<pos:position pos:line="7" pos:column="81"/></operator> <literal type="string" pos:line="7" pos:column="76">" "<pos:position pos:line="7" pos:column="79"/></literal> <operator pos:line="7" pos:column="80">&lt;&lt;<pos:position pos:line="7" pos:column="88"/></operator> <name pos:line="7" pos:column="83">url<pos:position pos:line="7" pos:column="86"/></name> <operator pos:line="7" pos:column="87">&lt;&lt;<pos:position pos:line="7" pos:column="95"/></operator> <literal type="string" pos:line="7" pos:column="90">"'"<pos:position pos:line="7" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="95"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="9" pos:column="5">/**
     * We might have a left-over StoreEntry from a failed cache hit
     * or IMS request.
     */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name><name pos:line="13" pos:column="9">http<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">storeEntry<pos:position pos:line="13" pos:column="25"/></name></name><argument_list pos:line="13" pos:column="25">()<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">EBIT_TEST<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><call><name><name pos:line="14" pos:column="23">http<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">storeEntry<pos:position pos:line="14" pos:column="39"/></name></name><argument_list pos:line="14" pos:column="39">()<pos:position pos:line="14" pos:column="41"/></argument_list></call><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">flags<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">ENTRY_SPECIAL<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="65"/></condition><then pos:line="14" pos:column="65"> <block pos:line="14" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">88<pos:position pos:line="15" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="27">"clientProcessMiss: miss on a special object ("<pos:position pos:line="15" pos:column="74"/></literal> <operator pos:line="15" pos:column="75">&lt;&lt;<pos:position pos:line="15" pos:column="83"/></operator> <name pos:line="15" pos:column="78">url<pos:position pos:line="15" pos:column="81"/></name> <operator pos:line="15" pos:column="82">&lt;&lt;<pos:position pos:line="15" pos:column="90"/></operator> <literal type="string" pos:line="15" pos:column="85">")."<pos:position pos:line="15" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">debugs<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><literal type="number" pos:line="16" pos:column="20">88<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"\tlog_type = "<pos:position pos:line="16" pos:column="42"/></literal> <operator pos:line="16" pos:column="43">&lt;&lt;<pos:position pos:line="16" pos:column="51"/></operator> <name><name pos:line="16" pos:column="46">log_tags<pos:position pos:line="16" pos:column="54"/></name><index pos:line="16" pos:column="54">[<expr><name><name pos:line="16" pos:column="55">http<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">-&gt;<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="61">logType<pos:position pos:line="16" pos:column="68"/></name></name></expr>]<pos:position pos:line="16" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">http<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">storeEntry<pos:position pos:line="17" pos:column="29"/></name></name><argument_list pos:line="17" pos:column="29">()<pos:position pos:line="17" pos:column="31"/></argument_list></call><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><call><name pos:line="17" pos:column="33">dump<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><literal type="number" pos:line="17" pos:column="38">1<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="20" pos:column="9">removeClientStoreReference<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">sc<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">http<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="23" pos:column="5">/** Check if its a PURGE request to be actioned. */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">r<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">method<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">==<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">METHOD_PURGE<pos:position pos:line="24" pos:column="34"/></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">purgeRequest<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">()<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="29" pos:column="5">/** Check if its an 'OTHER' request. Purge all cached entries if so and continue. */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">r<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">method<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">==<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">METHOD_OTHER<pos:position pos:line="30" pos:column="34"/></name></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35"> <block pos:line="30" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">purgeAllCached<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">()<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="34" pos:column="5">/** Check if 'only-if-cached' flag is set. Action if so. */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name><name pos:line="35" pos:column="9">http<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">onlyIfCached<pos:position pos:line="35" pos:column="27"/></name></name><argument_list pos:line="35" pos:column="27">()<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30"> <block pos:line="35" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">processOnlyIfCachedMiss<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">()<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="line" format="doxygen" pos:line="40" pos:column="5">/// Deny loops for accelerator and interceptor. TODO: deny in all modes?</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">r<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">flags<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">.<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">loopdetect<pos:position pos:line="41" pos:column="28"/></name></name> <operator pos:line="41" pos:column="29">&amp;&amp;<pos:position pos:line="41" pos:column="39"/></operator>
            <operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><name><name pos:line="42" pos:column="14">http<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">flags<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">.<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">accel<pos:position pos:line="42" pos:column="31"/></name></name> <operator pos:line="42" pos:column="32">||<pos:position pos:line="42" pos:column="34"/></operator> <name><name pos:line="42" pos:column="35">http<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">flags<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">.<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="47">intercepted<pos:position pos:line="42" pos:column="58"/></name></name><operator pos:line="42" pos:column="58">)<pos:position pos:line="42" pos:column="59"/></operator></expr>)<pos:position pos:line="42" pos:column="60"/></condition><then pos:line="42" pos:column="60"> <block pos:line="42" pos:column="61">{
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">http<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">al<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">.<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">http<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">code<pos:position pos:line="43" pos:column="27"/></name></name> <operator pos:line="43" pos:column="28">=<pos:position pos:line="43" pos:column="29"/></operator> <name pos:line="43" pos:column="30">HTTP_FORBIDDEN<pos:position pos:line="43" pos:column="44"/></name></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="44" pos:column="9">err<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">clientBuildError<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">ERR_ACCESS_DENIED<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">HTTP_FORBIDDEN<pos:position pos:line="44" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="67">NULL<pos:position pos:line="44" pos:column="71"/></name></expr></argument>, <argument><expr><call><name><name pos:line="44" pos:column="73">http<pos:position pos:line="44" pos:column="77"/></name><operator pos:line="44" pos:column="77">-&gt;<pos:position pos:line="44" pos:column="82"/></operator><name pos:line="44" pos:column="79">getConn<pos:position pos:line="44" pos:column="86"/></name></name><argument_list pos:line="44" pos:column="86">()<pos:position pos:line="44" pos:column="88"/></argument_list></call><operator pos:line="44" pos:column="88">-&gt;<pos:position pos:line="44" pos:column="93"/></operator><name pos:line="44" pos:column="90">peer<pos:position pos:line="44" pos:column="94"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="96">http<pos:position pos:line="44" pos:column="100"/></name><operator pos:line="44" pos:column="100">-&gt;<pos:position pos:line="44" pos:column="105"/></operator><name pos:line="44" pos:column="102">request<pos:position pos:line="44" pos:column="109"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="111"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">createStoreEntry<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name><name pos:line="45" pos:column="26">r<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">method<pos:position pos:line="45" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="37">request_flags<pos:position pos:line="45" pos:column="50"/></name><argument_list pos:line="45" pos:column="50">()<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">errorAppendEntry<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><call><name><name pos:line="46" pos:column="26">http<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">storeEntry<pos:position pos:line="46" pos:column="42"/></name></name><argument_list pos:line="46" pos:column="42">()<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">err<pos:position pos:line="46" pos:column="49"/></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">triggerInitialStoreRead<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">()<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
        <return pos:line="48" pos:column="9">return;<pos:position pos:line="48" pos:column="16"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then> <else pos:line="49" pos:column="7">else <block pos:line="49" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">assert<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name><name pos:line="50" pos:column="16">http<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">out<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">.<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">offset<pos:position pos:line="50" pos:column="32"/></name></name> <operator pos:line="50" pos:column="33">==<pos:position pos:line="50" pos:column="35"/></operator> <literal type="number" pos:line="50" pos:column="36">0<pos:position pos:line="50" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">createStoreEntry<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name><name pos:line="51" pos:column="26">r<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">-&gt;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="29">method<pos:position pos:line="51" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="37">r<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">flags<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">triggerInitialStoreRead<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">()<pos:position pos:line="52" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>

        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">http<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">redirect<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">.<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">status<pos:position pos:line="54" pos:column="34"/></name></name></expr>)<pos:position pos:line="54" pos:column="35"/></condition><then pos:line="54" pos:column="35"> <block pos:line="54" pos:column="36">{
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">HttpReply<pos:position pos:line="55" pos:column="22"/></name> <modifier pos:line="55" pos:column="23">*<pos:position pos:line="55" pos:column="24"/></modifier></type><name pos:line="55" pos:column="24">rep<pos:position pos:line="55" pos:column="27"/></name> <init pos:line="55" pos:column="28">= <expr><operator pos:line="55" pos:column="30">new<pos:position pos:line="55" pos:column="33"/></operator> <name pos:line="55" pos:column="34">HttpReply<pos:position pos:line="55" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="55" pos:column="44"/></decl_stmt>
<cpp:if pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">if<pos:position pos:line="56" pos:column="4"/></cpp:directive> <expr><name pos:line="56" pos:column="5">LOG_TCP_REDIRECTS<pos:position pos:line="56" pos:column="22"/></name></expr></cpp:if>

            <expr_stmt><expr><name><name pos:line="58" pos:column="13">http<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">logType<pos:position pos:line="58" pos:column="26"/></name></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <name pos:line="58" pos:column="29">LOG_TCP_REDIRECT<pos:position pos:line="58" pos:column="45"/></name></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif>

            <expr_stmt><expr><call><name><name pos:line="61" pos:column="13">http<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">-&gt;<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="19">storeEntry<pos:position pos:line="61" pos:column="29"/></name></name><argument_list pos:line="61" pos:column="29">()<pos:position pos:line="61" pos:column="31"/></argument_list></call><operator pos:line="61" pos:column="31">-&gt;<pos:position pos:line="61" pos:column="36"/></operator><call><name pos:line="61" pos:column="33">releaseRequest<pos:position pos:line="61" pos:column="47"/></name><argument_list pos:line="61" pos:column="47">()<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="62" pos:column="13">rep<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">redirect<pos:position pos:line="62" pos:column="26"/></name></name><argument_list pos:line="62" pos:column="26">(<argument><expr><name><name pos:line="62" pos:column="27">http<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">-&gt;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="33">redirect<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">.<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="42">status<pos:position pos:line="62" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="50">http<pos:position pos:line="62" pos:column="54"/></name><operator pos:line="62" pos:column="54">-&gt;<pos:position pos:line="62" pos:column="59"/></operator><name pos:line="62" pos:column="56">redirect<pos:position pos:line="62" pos:column="64"/></name><operator pos:line="62" pos:column="64">.<pos:position pos:line="62" pos:column="65"/></operator><name pos:line="62" pos:column="65">location<pos:position pos:line="62" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">http<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">-&gt;<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="19">storeEntry<pos:position pos:line="63" pos:column="29"/></name></name><argument_list pos:line="63" pos:column="29">()<pos:position pos:line="63" pos:column="31"/></argument_list></call><operator pos:line="63" pos:column="31">-&gt;<pos:position pos:line="63" pos:column="36"/></operator><call><name pos:line="63" pos:column="33">replaceHttpReply<pos:position pos:line="63" pos:column="49"/></name><argument_list pos:line="63" pos:column="49">(<argument><expr><name pos:line="63" pos:column="50">rep<pos:position pos:line="63" pos:column="53"/></name></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="64" pos:column="13">http<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">storeEntry<pos:position pos:line="64" pos:column="29"/></name></name><argument_list pos:line="64" pos:column="29">()<pos:position pos:line="64" pos:column="31"/></argument_list></call><operator pos:line="64" pos:column="31">-&gt;<pos:position pos:line="64" pos:column="36"/></operator><call><name pos:line="64" pos:column="33">complete<pos:position pos:line="64" pos:column="41"/></name><argument_list pos:line="64" pos:column="41">()<pos:position pos:line="64" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
            <return pos:line="65" pos:column="13">return;<pos:position pos:line="65" pos:column="20"/></return>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>

        <comment type="block" format="doxygen" pos:line="68" pos:column="9">/** Check for internal requests. Update Protocol info if so. */</comment>
        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name><name pos:line="69" pos:column="13">http<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">-&gt;<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="19">flags<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">.<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="25">internal<pos:position pos:line="69" pos:column="33"/></name></name></expr>)<pos:position pos:line="69" pos:column="34"/></condition><then pos:line="69" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="13">r<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">protocol<pos:position pos:line="70" pos:column="24"/></name></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <name pos:line="70" pos:column="27">PROTO_INTERNAL<pos:position pos:line="70" pos:column="41"/></name></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt></block></then></if>

        <comment type="block" format="doxygen" pos:line="72" pos:column="9">/** Start forwarding to get the new object from network */</comment>
        <expr_stmt><expr><call><name><name pos:line="73" pos:column="9">FwdState<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">::<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="19">fwdStart<pos:position pos:line="73" pos:column="27"/></name></name><argument_list pos:line="73" pos:column="27">(<argument><expr><ternary><condition><expr><call><name><name pos:line="73" pos:column="28">http<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">-&gt;<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="34">getConn<pos:position pos:line="73" pos:column="41"/></name></name><argument_list pos:line="73" pos:column="41">()<pos:position pos:line="73" pos:column="43"/></argument_list></call> <operator pos:line="73" pos:column="44">!=<pos:position pos:line="73" pos:column="46"/></operator> <name pos:line="73" pos:column="47">NULL<pos:position pos:line="73" pos:column="51"/></name></expr> ?<pos:position pos:line="73" pos:column="53"/></condition><then pos:line="73" pos:column="53"> <expr><call><name><name pos:line="73" pos:column="54">http<pos:position pos:line="73" pos:column="58"/></name><operator pos:line="73" pos:column="58">-&gt;<pos:position pos:line="73" pos:column="63"/></operator><name pos:line="73" pos:column="60">getConn<pos:position pos:line="73" pos:column="67"/></name></name><argument_list pos:line="73" pos:column="67">()<pos:position pos:line="73" pos:column="69"/></argument_list></call><operator pos:line="73" pos:column="69">-&gt;<pos:position pos:line="73" pos:column="74"/></operator><name pos:line="73" pos:column="71">fd<pos:position pos:line="73" pos:column="73"/></name></expr> <pos:position pos:line="73" pos:column="74"/></then><else pos:line="73" pos:column="74">: <expr><operator pos:line="73" pos:column="76">-<pos:position pos:line="73" pos:column="77"/></operator><literal type="number" pos:line="73" pos:column="77">1<pos:position pos:line="73" pos:column="78"/></literal></expr></else></ternary></expr></argument>,
                           <argument><expr><call><name><name pos:line="74" pos:column="28">http<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">-&gt;<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="34">storeEntry<pos:position pos:line="74" pos:column="44"/></name></name><argument_list pos:line="74" pos:column="44">()<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="75" pos:column="28">r<pos:position pos:line="75" pos:column="29"/></name></expr></argument>)<pos:position pos:line="75" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

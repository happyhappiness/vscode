<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3257_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">snmpHandleUdp<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">sock<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">void<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">not_used<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">SNMP_REQUEST_SIZE<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="47"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">IpAddress<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">from<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">snmp_request_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">snmp_rq<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">49<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">5<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"snmpHandleUdp: Called."<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">commSetSelect<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">sock<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">COMM_SELECT_READ<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">snmpHandleUdp<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">NULL<pos:position pos:line="11" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="64">0<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memset<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">buf<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="17">'\0'<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">SNMP_REQUEST_SIZE<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">len<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">comm_udp_recvfrom<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">sock<pos:position pos:line="15" pos:column="33"/></name></expr></argument>,
                            <argument><expr><name pos:line="16" pos:column="29">buf<pos:position pos:line="16" pos:column="32"/></name></expr></argument>,
                            <argument><expr><name pos:line="17" pos:column="29">SNMP_REQUEST_SIZE<pos:position pos:line="17" pos:column="46"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="18" pos:column="29">0<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>,
                            <argument><expr><name pos:line="19" pos:column="29">from<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">len<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">&gt;<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17"> <block pos:line="21" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">buf<pos:position pos:line="22" pos:column="12"/></name><index pos:line="22" pos:column="12">[<expr><name pos:line="22" pos:column="13">len<pos:position pos:line="22" pos:column="16"/></name></expr>]<pos:position pos:line="22" pos:column="17"/></index></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="char" pos:line="22" pos:column="20">'\0'<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">49<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="20">3<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"snmpHandleUdp: FD "<pos:position pos:line="23" pos:column="43"/></literal> <operator pos:line="23" pos:column="44">&lt;&lt;<pos:position pos:line="23" pos:column="52"/></operator> <name pos:line="23" pos:column="47">sock<pos:position pos:line="23" pos:column="51"/></name> <operator pos:line="23" pos:column="52">&lt;&lt;<pos:position pos:line="23" pos:column="60"/></operator> <literal type="string" pos:line="23" pos:column="55">": received "<pos:position pos:line="23" pos:column="68"/></literal> <operator pos:line="23" pos:column="69">&lt;&lt;<pos:position pos:line="23" pos:column="77"/></operator> <name pos:line="23" pos:column="72">len<pos:position pos:line="23" pos:column="75"/></name> <operator pos:line="23" pos:column="76">&lt;&lt;<pos:position pos:line="23" pos:column="84"/></operator> <literal type="string" pos:line="23" pos:column="79">" bytes from "<pos:position pos:line="23" pos:column="93"/></literal> <operator pos:line="23" pos:column="94">&lt;&lt;<pos:position pos:line="23" pos:column="102"/></operator> <name pos:line="23" pos:column="97">from<pos:position pos:line="23" pos:column="101"/></name> <operator pos:line="23" pos:column="102">&lt;&lt;<pos:position pos:line="23" pos:column="110"/></operator> <literal type="string" pos:line="23" pos:column="105">"."<pos:position pos:line="23" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="110"/></expr_stmt>

        <expr_stmt><expr><name pos:line="25" pos:column="9">snmp_rq<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">snmp_request_t<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">*<pos:position pos:line="25" pos:column="36"/></operator><operator pos:line="25" pos:column="36">)<pos:position pos:line="25" pos:column="37"/></operator><call><name pos:line="25" pos:column="37">xcalloc<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><literal type="number" pos:line="25" pos:column="45">1<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="48">sizeof<argument_list pos:line="25" pos:column="54">(<argument><expr><name pos:line="25" pos:column="55">snmp_request_t<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">snmp_rq<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">buf<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">u_char<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">)<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">buf<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">snmp_rq<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">len<pos:position pos:line="27" pos:column="21"/></name></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">len<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">snmp_rq<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">sock<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">sock<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">snmp_rq<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">outbuf<pos:position pos:line="29" pos:column="24"/></name></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <operator pos:line="29" pos:column="27">(<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">unsigned<pos:position pos:line="29" pos:column="36"/></name> <name pos:line="29" pos:column="37">char<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">*<pos:position pos:line="29" pos:column="43"/></operator><operator pos:line="29" pos:column="43">)<pos:position pos:line="29" pos:column="44"/></operator><call><name pos:line="29" pos:column="44">xmalloc<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name><name pos:line="29" pos:column="52">snmp_rq<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">-&gt;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="61">outlen<pos:position pos:line="29" pos:column="67"/></name></name> <operator pos:line="29" pos:column="68">=<pos:position pos:line="29" pos:column="69"/></operator> <name pos:line="29" pos:column="70">SNMP_REQUEST_SIZE<pos:position pos:line="29" pos:column="87"/></name></expr></argument>)<pos:position pos:line="29" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">snmp_rq<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">from<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">from<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">snmpDecodePacket<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">snmp_rq<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">xfree<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><name><name pos:line="32" pos:column="15">snmp_rq<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">outbuf<pos:position pos:line="32" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">xfree<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">snmp_rq<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then> <else pos:line="34" pos:column="7">else <block pos:line="34" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">49<pos:position pos:line="35" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="20">1<pos:position pos:line="35" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="23">"snmpHandleUdp: FD "<pos:position pos:line="35" pos:column="43"/></literal> <operator pos:line="35" pos:column="44">&lt;&lt;<pos:position pos:line="35" pos:column="52"/></operator> <name pos:line="35" pos:column="47">sock<pos:position pos:line="35" pos:column="51"/></name> <operator pos:line="35" pos:column="52">&lt;&lt;<pos:position pos:line="35" pos:column="60"/></operator> <literal type="string" pos:line="35" pos:column="55">" recvfrom: "<pos:position pos:line="35" pos:column="68"/></literal> <operator pos:line="35" pos:column="69">&lt;&lt;<pos:position pos:line="35" pos:column="77"/></operator> <call><name pos:line="35" pos:column="72">xstrerror<pos:position pos:line="35" pos:column="81"/></name><argument_list pos:line="35" pos:column="81">()<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="85"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

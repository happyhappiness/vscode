<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1019_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">configDoConfigure<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">memset<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">&amp;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="13">Config2<pos:position pos:line="4" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="22">'\0'<pos:position pos:line="4" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="28">sizeof<argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">SquidConfig2<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* init memory as early as possible */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">memConfigure<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">()<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* Sanity checks */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">Config<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">cacheSwap<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">.<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">swapDirs<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">==<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="38">NULL<pos:position pos:line="9" pos:column="42"/></name></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
        <comment type="block" pos:line="10" pos:column="9">/* Memory-only cache probably in effect. */</comment>
        <comment type="block" pos:line="11" pos:column="9">/* turn off the cache rebuild delays... */</comment>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">StoreController<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">::<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">store_dirs_rebuilding<pos:position pos:line="12" pos:column="47"/></name></name> <operator pos:line="12" pos:column="48">=<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">Debug<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">::<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">rotateNumber<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">&lt;<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">Debug<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">::<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">rotateNumber<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name><name pos:line="16" pos:column="31">Config<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">Log<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">.<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">rotateNumber<pos:position pos:line="16" pos:column="54"/></name></name></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">SIZEOF_OFF_T<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">&lt;=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="21">4<pos:position pos:line="19" pos:column="22"/></literal></expr></cpp:if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">Config<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">Store<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">maxObjectSize<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">&gt;<pos:position pos:line="20" pos:column="40"/></operator> <literal type="number" pos:line="20" pos:column="38">0x7FFF0000<pos:position pos:line="20" pos:column="48"/></literal></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">3<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="19">0<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="22">"WARNING: This Squid binary can not handle files larger than 2GB. Limiting maximum_object_size to just below 2GB"<pos:position pos:line="21" pos:column="135"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="137"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">Config<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">Store<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">maxObjectSize<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="38">0x7FFF0000<pos:position pos:line="22" pos:column="48"/></literal></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><literal type="number" pos:line="25" pos:column="9">0<pos:position pos:line="25" pos:column="10"/></literal> <operator pos:line="25" pos:column="11">==<pos:position pos:line="25" pos:column="13"/></operator> <call><name><name pos:line="25" pos:column="14">Store<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">::<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">Root<pos:position pos:line="25" pos:column="25"/></name></name><argument_list pos:line="25" pos:column="25">()<pos:position pos:line="25" pos:column="27"/></argument_list></call><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><call><name pos:line="25" pos:column="28">maxSize<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">()<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38">
        <comment type="block" pos:line="26" pos:column="9">/* people might want a zero-sized cache on purpose */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">void<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">)<pos:position pos:line="27" pos:column="15"/></operator> <literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><call><name><name pos:line="28" pos:column="14">Store<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">::<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">Root<pos:position pos:line="28" pos:column="25"/></name></name><argument_list pos:line="28" pos:column="25">()<pos:position pos:line="28" pos:column="27"/></argument_list></call><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><call><name pos:line="28" pos:column="28">maxSize<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">()<pos:position pos:line="28" pos:column="37"/></argument_list></call> <operator pos:line="28" pos:column="38">&lt;<pos:position pos:line="28" pos:column="42"/></operator> <operator pos:line="28" pos:column="40">(<pos:position pos:line="28" pos:column="41"/></operator><name><name pos:line="28" pos:column="41">Config<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">.<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">memMaxSize<pos:position pos:line="28" pos:column="58"/></name></name> <operator pos:line="28" pos:column="59">&gt;&gt;<pos:position pos:line="28" pos:column="64"/></operator> <literal type="number" pos:line="28" pos:column="62">10<pos:position pos:line="28" pos:column="64"/></literal><operator pos:line="28" pos:column="64">)<pos:position pos:line="28" pos:column="65"/></operator></expr>)<pos:position pos:line="28" pos:column="66"/></condition><then pos:line="28" pos:column="66">
        <comment type="block" pos:line="29" pos:column="9">/* This is bogus. folk with NULL caches will want this */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">3<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="22">"WARNING cache_mem is larger than total disk cache space!"<pos:position pos:line="30" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="82"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">Config<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">Announce<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">.<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="25">period<pos:position pos:line="32" pos:column="31"/></name></name> <operator pos:line="32" pos:column="32">&gt;<pos:position pos:line="32" pos:column="36"/></operator> <literal type="number" pos:line="32" pos:column="34">0<pos:position pos:line="32" pos:column="35"/></literal></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36"> <block pos:line="32" pos:column="37">{
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">Config<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">.<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">onoff<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">.<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">announce<pos:position pos:line="33" pos:column="30"/></name></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <literal type="number" pos:line="33" pos:column="33">1<pos:position pos:line="33" pos:column="34"/></literal></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then> <elseif pos:line="34" pos:column="7">else <if pos:line="34" pos:column="12">if <condition pos:line="34" pos:column="15">(<expr><name><name pos:line="34" pos:column="16">Config<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">.<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">Announce<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">period<pos:position pos:line="34" pos:column="38"/></name></name> <operator pos:line="34" pos:column="39">&lt;<pos:position pos:line="34" pos:column="43"/></operator> <literal type="number" pos:line="34" pos:column="41">1<pos:position pos:line="34" pos:column="42"/></literal></expr>)<pos:position pos:line="34" pos:column="43"/></condition><then pos:line="34" pos:column="43"> <block pos:line="34" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">Config<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">.<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">Announce<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">period<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="34">86400<pos:position pos:line="35" pos:column="39"/></literal> <operator pos:line="35" pos:column="40">*<pos:position pos:line="35" pos:column="41"/></operator> <literal type="number" pos:line="35" pos:column="42">365<pos:position pos:line="35" pos:column="45"/></literal></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>	<comment type="block" pos:line="35" pos:column="49">/* one year */</comment>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">Config<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">.<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">onoff<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">.<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">announce<pos:position pos:line="36" pos:column="30"/></name></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <literal type="number" pos:line="36" pos:column="33">0<pos:position pos:line="36" pos:column="34"/></literal></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">Config<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">.<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">onoff<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">httpd_suppress_version_string<pos:position pos:line="39" pos:column="51"/></name></name></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">visible_appname_string<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <operator pos:line="40" pos:column="34">(<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">char<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">*<pos:position pos:line="40" pos:column="41"/></operator><operator pos:line="40" pos:column="41">)<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="42">appname_string<pos:position pos:line="40" pos:column="56"/></name></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="41" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">visible_appname_string<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <operator pos:line="42" pos:column="34">(<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">char<pos:position pos:line="42" pos:column="39"/></name> <specifier pos:line="42" pos:column="40">const<pos:position pos:line="42" pos:column="45"/></specifier> <operator pos:line="42" pos:column="46">*<pos:position pos:line="42" pos:column="47"/></operator><operator pos:line="42" pos:column="47">)<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="48">APP_FULLNAME<pos:position pos:line="42" pos:column="60"/></name></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt></block></else></if>

<cpp:if pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">if<pos:position pos:line="44" pos:column="4"/></cpp:directive> <expr><name pos:line="44" pos:column="5">USE_DNSSERVERS<pos:position pos:line="44" pos:column="19"/></name></expr></cpp:if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">Config<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">dnsChildren<pos:position pos:line="46" pos:column="27"/></name></name> <operator pos:line="46" pos:column="28">&lt;<pos:position pos:line="46" pos:column="32"/></operator> <literal type="number" pos:line="46" pos:column="30">1<pos:position pos:line="46" pos:column="31"/></literal></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">fatal<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><literal type="string" pos:line="47" pos:column="15">"No dnsservers allocated"<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt></block></then></if>

<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">Config<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">.<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">Program<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">.<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">redirect<pos:position pos:line="51" pos:column="32"/></name></name></expr>)<pos:position pos:line="51" pos:column="33"/></condition><then pos:line="51" pos:column="33"> <block pos:line="51" pos:column="34">{
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">Config<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">redirectChildren<pos:position pos:line="52" pos:column="36"/></name></name> <operator pos:line="52" pos:column="37">&lt;<pos:position pos:line="52" pos:column="41"/></operator> <literal type="number" pos:line="52" pos:column="39">1<pos:position pos:line="52" pos:column="40"/></literal></expr>)<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <block pos:line="52" pos:column="42">{
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">Config<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">.<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">redirectChildren<pos:position pos:line="53" pos:column="36"/></name></name> <operator pos:line="53" pos:column="37">=<pos:position pos:line="53" pos:column="38"/></operator> <literal type="number" pos:line="53" pos:column="39">0<pos:position pos:line="53" pos:column="40"/></literal></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">wordlistDestroy<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><operator pos:line="54" pos:column="29">&amp;<pos:position pos:line="54" pos:column="34"/></operator><name><name pos:line="54" pos:column="30">Config<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">.<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="37">Program<pos:position pos:line="54" pos:column="44"/></name><operator pos:line="54" pos:column="44">.<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="45">redirect<pos:position pos:line="54" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">Config<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">.<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">appendDomain<pos:position pos:line="58" pos:column="28"/></name></name></expr>)<pos:position pos:line="58" pos:column="29"/></condition><then pos:line="58" pos:column="29">
        <block type="pseudo"><if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">*<pos:position pos:line="59" pos:column="14"/></operator><name><name pos:line="59" pos:column="14">Config<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">.<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">appendDomain<pos:position pos:line="59" pos:column="33"/></name></name> <operator pos:line="59" pos:column="34">!=<pos:position pos:line="59" pos:column="36"/></operator> <literal type="char" pos:line="59" pos:column="37">'.'<pos:position pos:line="59" pos:column="40"/></literal></expr>)<pos:position pos:line="59" pos:column="41"/></condition><then pos:line="59" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="13">fatal<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">(<argument><expr><literal type="string" pos:line="60" pos:column="19">"append_domain must begin with a '.'"<pos:position pos:line="60" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt></block></then></if></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">Config<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">.<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">errHtmlText<pos:position pos:line="62" pos:column="27"/></name></name> <operator pos:line="62" pos:column="28">==<pos:position pos:line="62" pos:column="30"/></operator> <name pos:line="62" pos:column="31">NULL<pos:position pos:line="62" pos:column="35"/></name></expr>)<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="9">Config<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">.<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="16">errHtmlText<pos:position pos:line="63" pos:column="27"/></name></name> <operator pos:line="63" pos:column="28">=<pos:position pos:line="63" pos:column="29"/></operator> <call><name pos:line="63" pos:column="30">xstrdup<pos:position pos:line="63" pos:column="37"/></name><argument_list pos:line="63" pos:column="37">(<argument><expr><name pos:line="63" pos:column="38">null_string<pos:position pos:line="63" pos:column="49"/></name></expr></argument>)<pos:position pos:line="63" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="51"/></expr_stmt></block></then></if>

<cpp:if pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">if<pos:position pos:line="65" pos:column="4"/></cpp:directive> <expr><operator pos:line="65" pos:column="5">!<pos:position pos:line="65" pos:column="6"/></operator><name pos:line="65" pos:column="6">HAVE_SETRLIMIT<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">||<pos:position pos:line="65" pos:column="23"/></operator> <operator pos:line="65" pos:column="24">!<pos:position pos:line="65" pos:column="25"/></operator><call><name pos:line="65" pos:column="25">defined<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">RLIMIT_NOFILE<pos:position pos:line="65" pos:column="46"/></name></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr></cpp:if>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">Config<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">.<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">max_filedescriptors<pos:position pos:line="66" pos:column="35"/></name></name> <operator pos:line="66" pos:column="36">&gt;<pos:position pos:line="66" pos:column="40"/></operator> <literal type="number" pos:line="66" pos:column="38">0<pos:position pos:line="66" pos:column="39"/></literal></expr>)<pos:position pos:line="66" pos:column="40"/></condition><then pos:line="66" pos:column="40"> <block pos:line="66" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">debugs<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><literal type="number" pos:line="67" pos:column="16">0<pos:position pos:line="67" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="19">DBG_IMPORTANT<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="34">"WARNING: max_filedescriptors disabled. Operating System setrlimit(RLIMIT_NOFILE) is missing."<pos:position pos:line="67" pos:column="128"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="130"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
<cpp:elif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">elif<pos:position pos:line="69" pos:column="6"/></cpp:directive> <expr><name pos:line="69" pos:column="7">USE_SELECT<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">||<pos:position pos:line="69" pos:column="20"/></operator> <name pos:line="69" pos:column="21">USE_SELECT_WIN32<pos:position pos:line="69" pos:column="37"/></name></expr></cpp:elif>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">Config<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">.<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">max_filedescriptors<pos:position pos:line="70" pos:column="35"/></name></name> <operator pos:line="70" pos:column="36">&gt;<pos:position pos:line="70" pos:column="40"/></operator> <name pos:line="70" pos:column="38">FD_SETSIZE<pos:position pos:line="70" pos:column="48"/></name></expr>)<pos:position pos:line="70" pos:column="49"/></condition><then pos:line="70" pos:column="49"> <block pos:line="70" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">debugs<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><literal type="number" pos:line="71" pos:column="16">0<pos:position pos:line="71" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="19">DBG_IMPORTANT<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="34">"WARNING: max_filedescriptors limited to "<pos:position pos:line="71" pos:column="76"/></literal> <operator pos:line="71" pos:column="77">&lt;&lt;<pos:position pos:line="71" pos:column="85"/></operator> <name pos:line="71" pos:column="80">FD_SETSIZE<pos:position pos:line="71" pos:column="90"/></name> <operator pos:line="71" pos:column="91">&lt;&lt;<pos:position pos:line="71" pos:column="99"/></operator> <literal type="string" pos:line="71" pos:column="94">" by select() algorithm."<pos:position pos:line="71" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="121"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="75" pos:column="5">storeConfigure<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">()<pos:position pos:line="75" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">snprintf<pos:position pos:line="77" pos:column="13"/></name><argument_list pos:line="77" pos:column="13">(<argument><expr><name pos:line="77" pos:column="14">ThisCache<pos:position pos:line="77" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="25">sizeof<argument_list pos:line="77" pos:column="31">(<argument><expr><name pos:line="77" pos:column="32">ThisCache<pos:position pos:line="77" pos:column="41"/></name></expr></argument>)<pos:position pos:line="77" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="44">"%s (%s)"<pos:position pos:line="77" pos:column="53"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="78" pos:column="14">uniqueHostname<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">()<pos:position pos:line="78" pos:column="30"/></argument_list></call></expr></argument>,
             <argument><expr><name pos:line="79" pos:column="14">visible_appname_string<pos:position pos:line="79" pos:column="36"/></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="81" pos:column="5">/*
     * the extra space is for loop detection in client_side.c -- we search
     * for substrings in the Via header.
     */</comment>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">snprintf<pos:position pos:line="85" pos:column="13"/></name><argument_list pos:line="85" pos:column="13">(<argument><expr><name pos:line="85" pos:column="14">ThisCache2<pos:position pos:line="85" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="26">sizeof<argument_list pos:line="85" pos:column="32">(<argument><expr><name pos:line="85" pos:column="33">ThisCache<pos:position pos:line="85" pos:column="42"/></name></expr></argument>)<pos:position pos:line="85" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="45">" %s (%s)"<pos:position pos:line="85" pos:column="55"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="86" pos:column="14">uniqueHostname<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">()<pos:position pos:line="86" pos:column="30"/></argument_list></call></expr></argument>,
             <argument><expr><name pos:line="87" pos:column="14">visible_appname_string<pos:position pos:line="87" pos:column="36"/></name></expr></argument>)<pos:position pos:line="87" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="38"/></expr_stmt>

    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><operator pos:line="89" pos:column="9">!<pos:position pos:line="89" pos:column="10"/></operator><name><name pos:line="89" pos:column="10">Config<pos:position pos:line="89" pos:column="16"/></name><operator pos:line="89" pos:column="16">.<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">udpMaxHitObjsz<pos:position pos:line="89" pos:column="31"/></name></name> <operator pos:line="89" pos:column="32">||<pos:position pos:line="89" pos:column="34"/></operator> <name><name pos:line="89" pos:column="35">Config<pos:position pos:line="89" pos:column="41"/></name><operator pos:line="89" pos:column="41">.<pos:position pos:line="89" pos:column="42"/></operator><name pos:line="89" pos:column="42">udpMaxHitObjsz<pos:position pos:line="89" pos:column="56"/></name></name> <operator pos:line="89" pos:column="57">&gt;<pos:position pos:line="89" pos:column="61"/></operator> <name pos:line="89" pos:column="59">SQUID_UDP_SO_SNDBUF<pos:position pos:line="89" pos:column="78"/></name></expr>)<pos:position pos:line="89" pos:column="79"/></condition><then pos:line="89" pos:column="79">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="90" pos:column="9">Config<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">.<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">udpMaxHitObjsz<pos:position pos:line="90" pos:column="30"/></name></name> <operator pos:line="90" pos:column="31">=<pos:position pos:line="90" pos:column="32"/></operator> <name pos:line="90" pos:column="33">SQUID_UDP_SO_SNDBUF<pos:position pos:line="90" pos:column="52"/></name></expr>;<pos:position pos:line="90" pos:column="53"/></expr_stmt></block></then></if>

    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">Config<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">.<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="16">appendDomain<pos:position pos:line="92" pos:column="28"/></name></name></expr>)<pos:position pos:line="92" pos:column="29"/></condition><then pos:line="92" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="93" pos:column="9">Config<pos:position pos:line="93" pos:column="15"/></name><operator pos:line="93" pos:column="15">.<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="16">appendDomainLen<pos:position pos:line="93" pos:column="31"/></name></name> <operator pos:line="93" pos:column="32">=<pos:position pos:line="93" pos:column="33"/></operator> <call><name pos:line="93" pos:column="34">strlen<pos:position pos:line="93" pos:column="40"/></name><argument_list pos:line="93" pos:column="40">(<argument><expr><name><name pos:line="93" pos:column="41">Config<pos:position pos:line="93" pos:column="47"/></name><operator pos:line="93" pos:column="47">.<pos:position pos:line="93" pos:column="48"/></operator><name pos:line="93" pos:column="48">appendDomain<pos:position pos:line="93" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="62"/></expr_stmt></block></then>
    <else pos:line="94" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="9">Config<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">.<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="16">appendDomainLen<pos:position pos:line="95" pos:column="31"/></name></name> <operator pos:line="95" pos:column="32">=<pos:position pos:line="95" pos:column="33"/></operator> <literal type="number" pos:line="95" pos:column="34">0<pos:position pos:line="95" pos:column="35"/></literal></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt></block></else></if>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name><name pos:line="97" pos:column="9">Config<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">.<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">retry<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">.<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="22">maxtries<pos:position pos:line="97" pos:column="30"/></name></name> <operator pos:line="97" pos:column="31">&gt;<pos:position pos:line="97" pos:column="35"/></operator> <literal type="number" pos:line="97" pos:column="33">10<pos:position pos:line="97" pos:column="35"/></literal></expr>)<pos:position pos:line="97" pos:column="36"/></condition><then pos:line="97" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="9">fatal<pos:position pos:line="98" pos:column="14"/></name><argument_list pos:line="98" pos:column="14">(<argument><expr><literal type="string" pos:line="98" pos:column="15">"maximum_single_addr_tries cannot be larger than 10"<pos:position pos:line="98" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="69"/></expr_stmt></block></then></if>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name><name pos:line="100" pos:column="9">Config<pos:position pos:line="100" pos:column="15"/></name><operator pos:line="100" pos:column="15">.<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="16">retry<pos:position pos:line="100" pos:column="21"/></name><operator pos:line="100" pos:column="21">.<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">maxtries<pos:position pos:line="100" pos:column="30"/></name></name> <operator pos:line="100" pos:column="31">&lt;<pos:position pos:line="100" pos:column="35"/></operator> <literal type="number" pos:line="100" pos:column="33">1<pos:position pos:line="100" pos:column="34"/></literal></expr>)<pos:position pos:line="100" pos:column="35"/></condition><then pos:line="100" pos:column="35"> <block pos:line="100" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">debugs<pos:position pos:line="101" pos:column="15"/></name><argument_list pos:line="101" pos:column="15">(<argument><expr><literal type="number" pos:line="101" pos:column="16">3<pos:position pos:line="101" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="19">0<pos:position pos:line="101" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="22">"WARNING: resetting 'maximum_single_addr_tries to 1"<pos:position pos:line="101" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="102" pos:column="9">Config<pos:position pos:line="102" pos:column="15"/></name><operator pos:line="102" pos:column="15">.<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="16">retry<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">.<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="22">maxtries<pos:position pos:line="102" pos:column="30"/></name></name> <operator pos:line="102" pos:column="31">=<pos:position pos:line="102" pos:column="32"/></operator> <literal type="number" pos:line="102" pos:column="33">1<pos:position pos:line="102" pos:column="34"/></literal></expr>;<pos:position pos:line="102" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="105" pos:column="5">requirePathnameExists<pos:position pos:line="105" pos:column="26"/></name><argument_list pos:line="105" pos:column="26">(<argument><expr><literal type="string" pos:line="105" pos:column="27">"MIME Config Table"<pos:position pos:line="105" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="48">Config<pos:position pos:line="105" pos:column="54"/></name><operator pos:line="105" pos:column="54">.<pos:position pos:line="105" pos:column="55"/></operator><name pos:line="105" pos:column="55">mimeTablePathname<pos:position pos:line="105" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="74"/></expr_stmt>
<cpp:if pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">if<pos:position pos:line="106" pos:column="4"/></cpp:directive> <expr><name pos:line="106" pos:column="5">USE_DNSSERVERS<pos:position pos:line="106" pos:column="19"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="108" pos:column="5">requirePathnameExists<pos:position pos:line="108" pos:column="26"/></name><argument_list pos:line="108" pos:column="26">(<argument><expr><literal type="string" pos:line="108" pos:column="27">"cache_dns_program"<pos:position pos:line="108" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="48">Config<pos:position pos:line="108" pos:column="54"/></name><operator pos:line="108" pos:column="54">.<pos:position pos:line="108" pos:column="55"/></operator><name pos:line="108" pos:column="55">Program<pos:position pos:line="108" pos:column="62"/></name><operator pos:line="108" pos:column="62">.<pos:position pos:line="108" pos:column="63"/></operator><name pos:line="108" pos:column="63">dnsserver<pos:position pos:line="108" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="74"/></expr_stmt>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">if<pos:position pos:line="110" pos:column="4"/></cpp:directive> <expr><name pos:line="110" pos:column="5">USE_UNLINKD<pos:position pos:line="110" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">requirePathnameExists<pos:position pos:line="112" pos:column="26"/></name><argument_list pos:line="112" pos:column="26">(<argument><expr><literal type="string" pos:line="112" pos:column="27">"unlinkd_program"<pos:position pos:line="112" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="46">Config<pos:position pos:line="112" pos:column="52"/></name><operator pos:line="112" pos:column="52">.<pos:position pos:line="112" pos:column="53"/></operator><name pos:line="112" pos:column="53">Program<pos:position pos:line="112" pos:column="60"/></name><operator pos:line="112" pos:column="60">.<pos:position pos:line="112" pos:column="61"/></operator><name pos:line="112" pos:column="61">unlinkd<pos:position pos:line="112" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><name><name pos:line="115" pos:column="9">Config<pos:position pos:line="115" pos:column="15"/></name><operator pos:line="115" pos:column="15">.<pos:position pos:line="115" pos:column="16"/></operator><name pos:line="115" pos:column="16">Program<pos:position pos:line="115" pos:column="23"/></name><operator pos:line="115" pos:column="23">.<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="24">redirect<pos:position pos:line="115" pos:column="32"/></name></name></expr>)<pos:position pos:line="115" pos:column="33"/></condition><then pos:line="115" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="9">requirePathnameExists<pos:position pos:line="116" pos:column="30"/></name><argument_list pos:line="116" pos:column="30">(<argument><expr><literal type="string" pos:line="116" pos:column="31">"redirect_program"<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="51">Config<pos:position pos:line="116" pos:column="57"/></name><operator pos:line="116" pos:column="57">.<pos:position pos:line="116" pos:column="58"/></operator><name pos:line="116" pos:column="58">Program<pos:position pos:line="116" pos:column="65"/></name><operator pos:line="116" pos:column="65">.<pos:position pos:line="116" pos:column="66"/></operator><name pos:line="116" pos:column="66">redirect<pos:position pos:line="116" pos:column="74"/></name><operator pos:line="116" pos:column="74">-&gt;<pos:position pos:line="116" pos:column="79"/></operator><name pos:line="116" pos:column="76">key<pos:position pos:line="116" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="81"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="118" pos:column="5">requirePathnameExists<pos:position pos:line="118" pos:column="26"/></name><argument_list pos:line="118" pos:column="26">(<argument><expr><literal type="string" pos:line="118" pos:column="27">"Icon Directory"<pos:position pos:line="118" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="45">Config<pos:position pos:line="118" pos:column="51"/></name><operator pos:line="118" pos:column="51">.<pos:position pos:line="118" pos:column="52"/></operator><name pos:line="118" pos:column="52">icons<pos:position pos:line="118" pos:column="57"/></name><operator pos:line="118" pos:column="57">.<pos:position pos:line="118" pos:column="58"/></operator><name pos:line="118" pos:column="58">directory<pos:position pos:line="118" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="69"/></expr_stmt>

    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name><name pos:line="120" pos:column="9">Config<pos:position pos:line="120" pos:column="15"/></name><operator pos:line="120" pos:column="15">.<pos:position pos:line="120" pos:column="16"/></operator><name pos:line="120" pos:column="16">errorDirectory<pos:position pos:line="120" pos:column="30"/></name></name></expr>)<pos:position pos:line="120" pos:column="31"/></condition><then pos:line="120" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="9">requirePathnameExists<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">(<argument><expr><literal type="string" pos:line="121" pos:column="31">"Error Directory"<pos:position pos:line="121" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="50">Config<pos:position pos:line="121" pos:column="56"/></name><operator pos:line="121" pos:column="56">.<pos:position pos:line="121" pos:column="57"/></operator><name pos:line="121" pos:column="57">errorDirectory<pos:position pos:line="121" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="73"/></expr_stmt></block></then></if>

<cpp:if pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">if<pos:position pos:line="123" pos:column="4"/></cpp:directive> <expr><name pos:line="123" pos:column="5">HTTP_VIOLATIONS<pos:position pos:line="123" pos:column="20"/></name></expr></cpp:if>

    <block pos:line="125" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="126" pos:column="9">const<pos:position pos:line="126" pos:column="14"/></specifier> <name pos:line="126" pos:column="15">refresh_t<pos:position pos:line="126" pos:column="24"/></name> <modifier pos:line="126" pos:column="25">*<pos:position pos:line="126" pos:column="26"/></modifier></type><name pos:line="126" pos:column="26">R<pos:position pos:line="126" pos:column="27"/></name></decl>;<pos:position pos:line="126" pos:column="28"/></decl_stmt>

        <for pos:line="128" pos:column="9">for <control pos:line="128" pos:column="13">(<init><expr><name pos:line="128" pos:column="14">R<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">=<pos:position pos:line="128" pos:column="17"/></operator> <name><name pos:line="128" pos:column="18">Config<pos:position pos:line="128" pos:column="24"/></name><operator pos:line="128" pos:column="24">.<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="25">Refresh<pos:position pos:line="128" pos:column="32"/></name></name></expr>;<pos:position pos:line="128" pos:column="33"/></init> <condition><expr><name pos:line="128" pos:column="34">R<pos:position pos:line="128" pos:column="35"/></name></expr>;<pos:position pos:line="128" pos:column="36"/></condition> <incr><expr><name pos:line="128" pos:column="37">R<pos:position pos:line="128" pos:column="38"/></name> <operator pos:line="128" pos:column="39">=<pos:position pos:line="128" pos:column="40"/></operator> <name><name pos:line="128" pos:column="41">R<pos:position pos:line="128" pos:column="42"/></name><operator pos:line="128" pos:column="42">-&gt;<pos:position pos:line="128" pos:column="47"/></operator><name pos:line="128" pos:column="44">next<pos:position pos:line="128" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="128" pos:column="49"/></control> <block pos:line="128" pos:column="50">{
            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><operator pos:line="129" pos:column="17">!<pos:position pos:line="129" pos:column="18"/></operator><name><name pos:line="129" pos:column="18">R<pos:position pos:line="129" pos:column="19"/></name><operator pos:line="129" pos:column="19">-&gt;<pos:position pos:line="129" pos:column="24"/></operator><name pos:line="129" pos:column="21">flags<pos:position pos:line="129" pos:column="26"/></name><operator pos:line="129" pos:column="26">.<pos:position pos:line="129" pos:column="27"/></operator><name pos:line="129" pos:column="27">override_expire<pos:position pos:line="129" pos:column="42"/></name></name></expr>)<pos:position pos:line="129" pos:column="43"/></condition><then pos:line="129" pos:column="43">
                <block type="pseudo"><continue pos:line="130" pos:column="17">continue;<pos:position pos:line="130" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="132" pos:column="13">debugs<pos:position pos:line="132" pos:column="19"/></name><argument_list pos:line="132" pos:column="19">(<argument><expr><literal type="number" pos:line="132" pos:column="20">22<pos:position pos:line="132" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="24">1<pos:position pos:line="132" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="27">"WARNING: use of 'override-expire' in 'refresh_pattern' violates HTTP"<pos:position pos:line="132" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="99"/></expr_stmt>

            <break pos:line="134" pos:column="13">break;<pos:position pos:line="134" pos:column="19"/></break>
        }<pos:position pos:line="135" pos:column="10"/></block></for>

        <for pos:line="137" pos:column="9">for <control pos:line="137" pos:column="13">(<init><expr><name pos:line="137" pos:column="14">R<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">=<pos:position pos:line="137" pos:column="17"/></operator> <name><name pos:line="137" pos:column="18">Config<pos:position pos:line="137" pos:column="24"/></name><operator pos:line="137" pos:column="24">.<pos:position pos:line="137" pos:column="25"/></operator><name pos:line="137" pos:column="25">Refresh<pos:position pos:line="137" pos:column="32"/></name></name></expr>;<pos:position pos:line="137" pos:column="33"/></init> <condition><expr><name pos:line="137" pos:column="34">R<pos:position pos:line="137" pos:column="35"/></name></expr>;<pos:position pos:line="137" pos:column="36"/></condition> <incr><expr><name pos:line="137" pos:column="37">R<pos:position pos:line="137" pos:column="38"/></name> <operator pos:line="137" pos:column="39">=<pos:position pos:line="137" pos:column="40"/></operator> <name><name pos:line="137" pos:column="41">R<pos:position pos:line="137" pos:column="42"/></name><operator pos:line="137" pos:column="42">-&gt;<pos:position pos:line="137" pos:column="47"/></operator><name pos:line="137" pos:column="44">next<pos:position pos:line="137" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="137" pos:column="49"/></control> <block pos:line="137" pos:column="50">{
            <if pos:line="138" pos:column="13">if <condition pos:line="138" pos:column="16">(<expr><operator pos:line="138" pos:column="17">!<pos:position pos:line="138" pos:column="18"/></operator><name><name pos:line="138" pos:column="18">R<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">-&gt;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="21">flags<pos:position pos:line="138" pos:column="26"/></name><operator pos:line="138" pos:column="26">.<pos:position pos:line="138" pos:column="27"/></operator><name pos:line="138" pos:column="27">override_lastmod<pos:position pos:line="138" pos:column="43"/></name></name></expr>)<pos:position pos:line="138" pos:column="44"/></condition><then pos:line="138" pos:column="44">
                <block type="pseudo"><continue pos:line="139" pos:column="17">continue;<pos:position pos:line="139" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="141" pos:column="13">debugs<pos:position pos:line="141" pos:column="19"/></name><argument_list pos:line="141" pos:column="19">(<argument><expr><literal type="number" pos:line="141" pos:column="20">22<pos:position pos:line="141" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="24">1<pos:position pos:line="141" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="27">"WARNING: use of 'override-lastmod' in 'refresh_pattern' violates HTTP"<pos:position pos:line="141" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="100"/></expr_stmt>

            <break pos:line="143" pos:column="13">break;<pos:position pos:line="143" pos:column="19"/></break>
        }<pos:position pos:line="144" pos:column="10"/></block></for>

        <for pos:line="146" pos:column="9">for <control pos:line="146" pos:column="13">(<init><expr><name pos:line="146" pos:column="14">R<pos:position pos:line="146" pos:column="15"/></name> <operator pos:line="146" pos:column="16">=<pos:position pos:line="146" pos:column="17"/></operator> <name><name pos:line="146" pos:column="18">Config<pos:position pos:line="146" pos:column="24"/></name><operator pos:line="146" pos:column="24">.<pos:position pos:line="146" pos:column="25"/></operator><name pos:line="146" pos:column="25">Refresh<pos:position pos:line="146" pos:column="32"/></name></name></expr>;<pos:position pos:line="146" pos:column="33"/></init> <condition><expr><name pos:line="146" pos:column="34">R<pos:position pos:line="146" pos:column="35"/></name></expr>;<pos:position pos:line="146" pos:column="36"/></condition> <incr><expr><name pos:line="146" pos:column="37">R<pos:position pos:line="146" pos:column="38"/></name> <operator pos:line="146" pos:column="39">=<pos:position pos:line="146" pos:column="40"/></operator> <name><name pos:line="146" pos:column="41">R<pos:position pos:line="146" pos:column="42"/></name><operator pos:line="146" pos:column="42">-&gt;<pos:position pos:line="146" pos:column="47"/></operator><name pos:line="146" pos:column="44">next<pos:position pos:line="146" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="146" pos:column="49"/></control> <block pos:line="146" pos:column="50">{
            <if pos:line="147" pos:column="13">if <condition pos:line="147" pos:column="16">(<expr><operator pos:line="147" pos:column="17">!<pos:position pos:line="147" pos:column="18"/></operator><name><name pos:line="147" pos:column="18">R<pos:position pos:line="147" pos:column="19"/></name><operator pos:line="147" pos:column="19">-&gt;<pos:position pos:line="147" pos:column="24"/></operator><name pos:line="147" pos:column="21">flags<pos:position pos:line="147" pos:column="26"/></name><operator pos:line="147" pos:column="26">.<pos:position pos:line="147" pos:column="27"/></operator><name pos:line="147" pos:column="27">reload_into_ims<pos:position pos:line="147" pos:column="42"/></name></name></expr>)<pos:position pos:line="147" pos:column="43"/></condition><then pos:line="147" pos:column="43">
                <block type="pseudo"><continue pos:line="148" pos:column="17">continue;<pos:position pos:line="148" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="150" pos:column="13">debugs<pos:position pos:line="150" pos:column="19"/></name><argument_list pos:line="150" pos:column="19">(<argument><expr><literal type="number" pos:line="150" pos:column="20">22<pos:position pos:line="150" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="24">1<pos:position pos:line="150" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="27">"WARNING: use of 'reload-into-ims' in 'refresh_pattern' violates HTTP"<pos:position pos:line="150" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="99"/></expr_stmt>

            <break pos:line="152" pos:column="13">break;<pos:position pos:line="152" pos:column="19"/></break>
        }<pos:position pos:line="153" pos:column="10"/></block></for>

        <for pos:line="155" pos:column="9">for <control pos:line="155" pos:column="13">(<init><expr><name pos:line="155" pos:column="14">R<pos:position pos:line="155" pos:column="15"/></name> <operator pos:line="155" pos:column="16">=<pos:position pos:line="155" pos:column="17"/></operator> <name><name pos:line="155" pos:column="18">Config<pos:position pos:line="155" pos:column="24"/></name><operator pos:line="155" pos:column="24">.<pos:position pos:line="155" pos:column="25"/></operator><name pos:line="155" pos:column="25">Refresh<pos:position pos:line="155" pos:column="32"/></name></name></expr>;<pos:position pos:line="155" pos:column="33"/></init> <condition><expr><name pos:line="155" pos:column="34">R<pos:position pos:line="155" pos:column="35"/></name></expr>;<pos:position pos:line="155" pos:column="36"/></condition> <incr><expr><name pos:line="155" pos:column="37">R<pos:position pos:line="155" pos:column="38"/></name> <operator pos:line="155" pos:column="39">=<pos:position pos:line="155" pos:column="40"/></operator> <name><name pos:line="155" pos:column="41">R<pos:position pos:line="155" pos:column="42"/></name><operator pos:line="155" pos:column="42">-&gt;<pos:position pos:line="155" pos:column="47"/></operator><name pos:line="155" pos:column="44">next<pos:position pos:line="155" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="155" pos:column="49"/></control> <block pos:line="155" pos:column="50">{
            <if pos:line="156" pos:column="13">if <condition pos:line="156" pos:column="16">(<expr><operator pos:line="156" pos:column="17">!<pos:position pos:line="156" pos:column="18"/></operator><name><name pos:line="156" pos:column="18">R<pos:position pos:line="156" pos:column="19"/></name><operator pos:line="156" pos:column="19">-&gt;<pos:position pos:line="156" pos:column="24"/></operator><name pos:line="156" pos:column="21">flags<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">.<pos:position pos:line="156" pos:column="27"/></operator><name pos:line="156" pos:column="27">ignore_reload<pos:position pos:line="156" pos:column="40"/></name></name></expr>)<pos:position pos:line="156" pos:column="41"/></condition><then pos:line="156" pos:column="41">
                <block type="pseudo"><continue pos:line="157" pos:column="17">continue;<pos:position pos:line="157" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="159" pos:column="13">debugs<pos:position pos:line="159" pos:column="19"/></name><argument_list pos:line="159" pos:column="19">(<argument><expr><literal type="number" pos:line="159" pos:column="20">22<pos:position pos:line="159" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="24">1<pos:position pos:line="159" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="27">"WARNING: use of 'ignore-reload' in 'refresh_pattern' violates HTTP"<pos:position pos:line="159" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="97"/></expr_stmt>

            <break pos:line="161" pos:column="13">break;<pos:position pos:line="161" pos:column="19"/></break>
        }<pos:position pos:line="162" pos:column="10"/></block></for>

        <for pos:line="164" pos:column="9">for <control pos:line="164" pos:column="13">(<init><expr><name pos:line="164" pos:column="14">R<pos:position pos:line="164" pos:column="15"/></name> <operator pos:line="164" pos:column="16">=<pos:position pos:line="164" pos:column="17"/></operator> <name><name pos:line="164" pos:column="18">Config<pos:position pos:line="164" pos:column="24"/></name><operator pos:line="164" pos:column="24">.<pos:position pos:line="164" pos:column="25"/></operator><name pos:line="164" pos:column="25">Refresh<pos:position pos:line="164" pos:column="32"/></name></name></expr>;<pos:position pos:line="164" pos:column="33"/></init> <condition><expr><name pos:line="164" pos:column="34">R<pos:position pos:line="164" pos:column="35"/></name></expr>;<pos:position pos:line="164" pos:column="36"/></condition> <incr><expr><name pos:line="164" pos:column="37">R<pos:position pos:line="164" pos:column="38"/></name> <operator pos:line="164" pos:column="39">=<pos:position pos:line="164" pos:column="40"/></operator> <name><name pos:line="164" pos:column="41">R<pos:position pos:line="164" pos:column="42"/></name><operator pos:line="164" pos:column="42">-&gt;<pos:position pos:line="164" pos:column="47"/></operator><name pos:line="164" pos:column="44">next<pos:position pos:line="164" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="164" pos:column="49"/></control> <block pos:line="164" pos:column="50">{
            <if pos:line="165" pos:column="13">if <condition pos:line="165" pos:column="16">(<expr><operator pos:line="165" pos:column="17">!<pos:position pos:line="165" pos:column="18"/></operator><name><name pos:line="165" pos:column="18">R<pos:position pos:line="165" pos:column="19"/></name><operator pos:line="165" pos:column="19">-&gt;<pos:position pos:line="165" pos:column="24"/></operator><name pos:line="165" pos:column="21">flags<pos:position pos:line="165" pos:column="26"/></name><operator pos:line="165" pos:column="26">.<pos:position pos:line="165" pos:column="27"/></operator><name pos:line="165" pos:column="27">ignore_no_cache<pos:position pos:line="165" pos:column="42"/></name></name></expr>)<pos:position pos:line="165" pos:column="43"/></condition><then pos:line="165" pos:column="43">
                <block type="pseudo"><continue pos:line="166" pos:column="17">continue;<pos:position pos:line="166" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="168" pos:column="13">debugs<pos:position pos:line="168" pos:column="19"/></name><argument_list pos:line="168" pos:column="19">(<argument><expr><literal type="number" pos:line="168" pos:column="20">22<pos:position pos:line="168" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="24">1<pos:position pos:line="168" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="27">"WARNING: use of 'ignore-no-cache' in 'refresh_pattern' violates HTTP"<pos:position pos:line="168" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="99"/></expr_stmt>

            <break pos:line="170" pos:column="13">break;<pos:position pos:line="170" pos:column="19"/></break>
        }<pos:position pos:line="171" pos:column="10"/></block></for>

        <for pos:line="173" pos:column="9">for <control pos:line="173" pos:column="13">(<init><expr><name pos:line="173" pos:column="14">R<pos:position pos:line="173" pos:column="15"/></name> <operator pos:line="173" pos:column="16">=<pos:position pos:line="173" pos:column="17"/></operator> <name><name pos:line="173" pos:column="18">Config<pos:position pos:line="173" pos:column="24"/></name><operator pos:line="173" pos:column="24">.<pos:position pos:line="173" pos:column="25"/></operator><name pos:line="173" pos:column="25">Refresh<pos:position pos:line="173" pos:column="32"/></name></name></expr>;<pos:position pos:line="173" pos:column="33"/></init> <condition><expr><name pos:line="173" pos:column="34">R<pos:position pos:line="173" pos:column="35"/></name></expr>;<pos:position pos:line="173" pos:column="36"/></condition> <incr><expr><name pos:line="173" pos:column="37">R<pos:position pos:line="173" pos:column="38"/></name> <operator pos:line="173" pos:column="39">=<pos:position pos:line="173" pos:column="40"/></operator> <name><name pos:line="173" pos:column="41">R<pos:position pos:line="173" pos:column="42"/></name><operator pos:line="173" pos:column="42">-&gt;<pos:position pos:line="173" pos:column="47"/></operator><name pos:line="173" pos:column="44">next<pos:position pos:line="173" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="173" pos:column="49"/></control> <block pos:line="173" pos:column="50">{
            <if pos:line="174" pos:column="13">if <condition pos:line="174" pos:column="16">(<expr><operator pos:line="174" pos:column="17">!<pos:position pos:line="174" pos:column="18"/></operator><name><name pos:line="174" pos:column="18">R<pos:position pos:line="174" pos:column="19"/></name><operator pos:line="174" pos:column="19">-&gt;<pos:position pos:line="174" pos:column="24"/></operator><name pos:line="174" pos:column="21">flags<pos:position pos:line="174" pos:column="26"/></name><operator pos:line="174" pos:column="26">.<pos:position pos:line="174" pos:column="27"/></operator><name pos:line="174" pos:column="27">ignore_no_store<pos:position pos:line="174" pos:column="42"/></name></name></expr>)<pos:position pos:line="174" pos:column="43"/></condition><then pos:line="174" pos:column="43">
                <block type="pseudo"><continue pos:line="175" pos:column="17">continue;<pos:position pos:line="175" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="177" pos:column="13">debugs<pos:position pos:line="177" pos:column="19"/></name><argument_list pos:line="177" pos:column="19">(<argument><expr><literal type="number" pos:line="177" pos:column="20">22<pos:position pos:line="177" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="177" pos:column="24">1<pos:position pos:line="177" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="27">"WARNING: use of 'ignore-no-store' in 'refresh_pattern' violates HTTP"<pos:position pos:line="177" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="99"/></expr_stmt>

            <break pos:line="179" pos:column="13">break;<pos:position pos:line="179" pos:column="19"/></break>
        }<pos:position pos:line="180" pos:column="10"/></block></for>

        <for pos:line="182" pos:column="9">for <control pos:line="182" pos:column="13">(<init><expr><name pos:line="182" pos:column="14">R<pos:position pos:line="182" pos:column="15"/></name> <operator pos:line="182" pos:column="16">=<pos:position pos:line="182" pos:column="17"/></operator> <name><name pos:line="182" pos:column="18">Config<pos:position pos:line="182" pos:column="24"/></name><operator pos:line="182" pos:column="24">.<pos:position pos:line="182" pos:column="25"/></operator><name pos:line="182" pos:column="25">Refresh<pos:position pos:line="182" pos:column="32"/></name></name></expr>;<pos:position pos:line="182" pos:column="33"/></init> <condition><expr><name pos:line="182" pos:column="34">R<pos:position pos:line="182" pos:column="35"/></name></expr>;<pos:position pos:line="182" pos:column="36"/></condition> <incr><expr><name pos:line="182" pos:column="37">R<pos:position pos:line="182" pos:column="38"/></name> <operator pos:line="182" pos:column="39">=<pos:position pos:line="182" pos:column="40"/></operator> <name><name pos:line="182" pos:column="41">R<pos:position pos:line="182" pos:column="42"/></name><operator pos:line="182" pos:column="42">-&gt;<pos:position pos:line="182" pos:column="47"/></operator><name pos:line="182" pos:column="44">next<pos:position pos:line="182" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="182" pos:column="49"/></control> <block pos:line="182" pos:column="50">{
            <if pos:line="183" pos:column="13">if <condition pos:line="183" pos:column="16">(<expr><operator pos:line="183" pos:column="17">!<pos:position pos:line="183" pos:column="18"/></operator><name><name pos:line="183" pos:column="18">R<pos:position pos:line="183" pos:column="19"/></name><operator pos:line="183" pos:column="19">-&gt;<pos:position pos:line="183" pos:column="24"/></operator><name pos:line="183" pos:column="21">flags<pos:position pos:line="183" pos:column="26"/></name><operator pos:line="183" pos:column="26">.<pos:position pos:line="183" pos:column="27"/></operator><name pos:line="183" pos:column="27">ignore_must_revalidate<pos:position pos:line="183" pos:column="49"/></name></name></expr>)<pos:position pos:line="183" pos:column="50"/></condition><then pos:line="183" pos:column="50">
                <block type="pseudo"><continue pos:line="184" pos:column="17">continue;<pos:position pos:line="184" pos:column="26"/></continue></block></then></if>
            <expr_stmt><expr><call><name pos:line="185" pos:column="13">debugs<pos:position pos:line="185" pos:column="19"/></name><argument_list pos:line="185" pos:column="19">(<argument><expr><literal type="number" pos:line="185" pos:column="20">22<pos:position pos:line="185" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="24">1<pos:position pos:line="185" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="27">"WARNING: use of 'ignore-must-revalidate' in 'refresh_pattern' violates HTTP"<pos:position pos:line="185" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="106"/></expr_stmt>
            <break pos:line="186" pos:column="13">break;<pos:position pos:line="186" pos:column="19"/></break>
        }<pos:position pos:line="187" pos:column="10"/></block></for>

        <for pos:line="189" pos:column="9">for <control pos:line="189" pos:column="13">(<init><expr><name pos:line="189" pos:column="14">R<pos:position pos:line="189" pos:column="15"/></name> <operator pos:line="189" pos:column="16">=<pos:position pos:line="189" pos:column="17"/></operator> <name><name pos:line="189" pos:column="18">Config<pos:position pos:line="189" pos:column="24"/></name><operator pos:line="189" pos:column="24">.<pos:position pos:line="189" pos:column="25"/></operator><name pos:line="189" pos:column="25">Refresh<pos:position pos:line="189" pos:column="32"/></name></name></expr>;<pos:position pos:line="189" pos:column="33"/></init> <condition><expr><name pos:line="189" pos:column="34">R<pos:position pos:line="189" pos:column="35"/></name></expr>;<pos:position pos:line="189" pos:column="36"/></condition> <incr><expr><name pos:line="189" pos:column="37">R<pos:position pos:line="189" pos:column="38"/></name> <operator pos:line="189" pos:column="39">=<pos:position pos:line="189" pos:column="40"/></operator> <name><name pos:line="189" pos:column="41">R<pos:position pos:line="189" pos:column="42"/></name><operator pos:line="189" pos:column="42">-&gt;<pos:position pos:line="189" pos:column="47"/></operator><name pos:line="189" pos:column="44">next<pos:position pos:line="189" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="189" pos:column="49"/></control> <block pos:line="189" pos:column="50">{
            <if pos:line="190" pos:column="13">if <condition pos:line="190" pos:column="16">(<expr><operator pos:line="190" pos:column="17">!<pos:position pos:line="190" pos:column="18"/></operator><name><name pos:line="190" pos:column="18">R<pos:position pos:line="190" pos:column="19"/></name><operator pos:line="190" pos:column="19">-&gt;<pos:position pos:line="190" pos:column="24"/></operator><name pos:line="190" pos:column="21">flags<pos:position pos:line="190" pos:column="26"/></name><operator pos:line="190" pos:column="26">.<pos:position pos:line="190" pos:column="27"/></operator><name pos:line="190" pos:column="27">ignore_private<pos:position pos:line="190" pos:column="41"/></name></name></expr>)<pos:position pos:line="190" pos:column="42"/></condition><then pos:line="190" pos:column="42">
                <block type="pseudo"><continue pos:line="191" pos:column="17">continue;<pos:position pos:line="191" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="193" pos:column="13">debugs<pos:position pos:line="193" pos:column="19"/></name><argument_list pos:line="193" pos:column="19">(<argument><expr><literal type="number" pos:line="193" pos:column="20">22<pos:position pos:line="193" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="24">1<pos:position pos:line="193" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="27">"WARNING: use of 'ignore-private' in 'refresh_pattern' violates HTTP"<pos:position pos:line="193" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="98"/></expr_stmt>

            <break pos:line="195" pos:column="13">break;<pos:position pos:line="195" pos:column="19"/></break>
        }<pos:position pos:line="196" pos:column="10"/></block></for>

        <for pos:line="198" pos:column="9">for <control pos:line="198" pos:column="13">(<init><expr><name pos:line="198" pos:column="14">R<pos:position pos:line="198" pos:column="15"/></name> <operator pos:line="198" pos:column="16">=<pos:position pos:line="198" pos:column="17"/></operator> <name><name pos:line="198" pos:column="18">Config<pos:position pos:line="198" pos:column="24"/></name><operator pos:line="198" pos:column="24">.<pos:position pos:line="198" pos:column="25"/></operator><name pos:line="198" pos:column="25">Refresh<pos:position pos:line="198" pos:column="32"/></name></name></expr>;<pos:position pos:line="198" pos:column="33"/></init> <condition><expr><name pos:line="198" pos:column="34">R<pos:position pos:line="198" pos:column="35"/></name></expr>;<pos:position pos:line="198" pos:column="36"/></condition> <incr><expr><name pos:line="198" pos:column="37">R<pos:position pos:line="198" pos:column="38"/></name> <operator pos:line="198" pos:column="39">=<pos:position pos:line="198" pos:column="40"/></operator> <name><name pos:line="198" pos:column="41">R<pos:position pos:line="198" pos:column="42"/></name><operator pos:line="198" pos:column="42">-&gt;<pos:position pos:line="198" pos:column="47"/></operator><name pos:line="198" pos:column="44">next<pos:position pos:line="198" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="198" pos:column="49"/></control> <block pos:line="198" pos:column="50">{
            <if pos:line="199" pos:column="13">if <condition pos:line="199" pos:column="16">(<expr><operator pos:line="199" pos:column="17">!<pos:position pos:line="199" pos:column="18"/></operator><name><name pos:line="199" pos:column="18">R<pos:position pos:line="199" pos:column="19"/></name><operator pos:line="199" pos:column="19">-&gt;<pos:position pos:line="199" pos:column="24"/></operator><name pos:line="199" pos:column="21">flags<pos:position pos:line="199" pos:column="26"/></name><operator pos:line="199" pos:column="26">.<pos:position pos:line="199" pos:column="27"/></operator><name pos:line="199" pos:column="27">ignore_auth<pos:position pos:line="199" pos:column="38"/></name></name></expr>)<pos:position pos:line="199" pos:column="39"/></condition><then pos:line="199" pos:column="39">
                <block type="pseudo"><continue pos:line="200" pos:column="17">continue;<pos:position pos:line="200" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="202" pos:column="13">debugs<pos:position pos:line="202" pos:column="19"/></name><argument_list pos:line="202" pos:column="19">(<argument><expr><literal type="number" pos:line="202" pos:column="20">22<pos:position pos:line="202" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="24">1<pos:position pos:line="202" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="27">"WARNING: use of 'ignore-auth' in 'refresh_pattern' violates HTTP"<pos:position pos:line="202" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="95"/></expr_stmt>

            <break pos:line="204" pos:column="13">break;<pos:position pos:line="204" pos:column="19"/></break>
        }<pos:position pos:line="205" pos:column="10"/></block></for>

    }<pos:position pos:line="207" pos:column="6"/></block>
<cpp:endif pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">endif<pos:position pos:line="208" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">if<pos:position pos:line="209" pos:column="4"/></cpp:directive> <expr><operator pos:line="209" pos:column="5">!<pos:position pos:line="209" pos:column="6"/></operator><name pos:line="209" pos:column="6">HTTP_VIOLATIONS<pos:position pos:line="209" pos:column="21"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="210" pos:column="5">Config<pos:position pos:line="210" pos:column="11"/></name><operator pos:line="210" pos:column="11">.<pos:position pos:line="210" pos:column="12"/></operator><name pos:line="210" pos:column="12">onoff<pos:position pos:line="210" pos:column="17"/></name><operator pos:line="210" pos:column="17">.<pos:position pos:line="210" pos:column="18"/></operator><name pos:line="210" pos:column="18">via<pos:position pos:line="210" pos:column="21"/></name></name> <operator pos:line="210" pos:column="22">=<pos:position pos:line="210" pos:column="23"/></operator> <literal type="number" pos:line="210" pos:column="24">1<pos:position pos:line="210" pos:column="25"/></literal></expr>;<pos:position pos:line="210" pos:column="26"/></expr_stmt>
<cpp:else pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">else<pos:position pos:line="211" pos:column="6"/></cpp:directive></cpp:else>

    <if pos:line="213" pos:column="5">if <condition pos:line="213" pos:column="8">(<expr><operator pos:line="213" pos:column="9">!<pos:position pos:line="213" pos:column="10"/></operator><name><name pos:line="213" pos:column="10">Config<pos:position pos:line="213" pos:column="16"/></name><operator pos:line="213" pos:column="16">.<pos:position pos:line="213" pos:column="17"/></operator><name pos:line="213" pos:column="17">onoff<pos:position pos:line="213" pos:column="22"/></name><operator pos:line="213" pos:column="22">.<pos:position pos:line="213" pos:column="23"/></operator><name pos:line="213" pos:column="23">via<pos:position pos:line="213" pos:column="26"/></name></name></expr>)<pos:position pos:line="213" pos:column="27"/></condition><then pos:line="213" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="214" pos:column="9">debugs<pos:position pos:line="214" pos:column="15"/></name><argument_list pos:line="214" pos:column="15">(<argument><expr><literal type="number" pos:line="214" pos:column="16">22<pos:position pos:line="214" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="20">1<pos:position pos:line="214" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="23">"WARNING: HTTP requires the use of Via"<pos:position pos:line="214" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="64"/></expr_stmt></block></then></if>

<cpp:endif pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">endif<pos:position pos:line="216" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="218" pos:column="5">// we enable runtime PURGE checks if there is at least one PURGE method ACL</comment>
    <comment type="line" pos:line="219" pos:column="5">// TODO: replace with a dedicated "purge" ACL option?</comment>
    <expr_stmt><expr><name><name pos:line="220" pos:column="5">Config2<pos:position pos:line="220" pos:column="12"/></name><operator pos:line="220" pos:column="12">.<pos:position pos:line="220" pos:column="13"/></operator><name pos:line="220" pos:column="13">onoff<pos:position pos:line="220" pos:column="18"/></name><operator pos:line="220" pos:column="18">.<pos:position pos:line="220" pos:column="19"/></operator><name pos:line="220" pos:column="19">enable_purge<pos:position pos:line="220" pos:column="31"/></name></name> <operator pos:line="220" pos:column="32">=<pos:position pos:line="220" pos:column="33"/></operator> <operator pos:line="220" pos:column="34">(<pos:position pos:line="220" pos:column="35"/></operator><name><name pos:line="220" pos:column="35">ACLMethodData<pos:position pos:line="220" pos:column="48"/></name><operator pos:line="220" pos:column="48">::<pos:position pos:line="220" pos:column="50"/></operator><name pos:line="220" pos:column="50">ThePurgeCount<pos:position pos:line="220" pos:column="63"/></name></name> <operator pos:line="220" pos:column="64">&gt;<pos:position pos:line="220" pos:column="68"/></operator> <literal type="number" pos:line="220" pos:column="66">0<pos:position pos:line="220" pos:column="67"/></literal><operator pos:line="220" pos:column="67">)<pos:position pos:line="220" pos:column="68"/></operator></expr>;<pos:position pos:line="220" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="222" pos:column="5">Config2<pos:position pos:line="222" pos:column="12"/></name><operator pos:line="222" pos:column="12">.<pos:position pos:line="222" pos:column="13"/></operator><name pos:line="222" pos:column="13">onoff<pos:position pos:line="222" pos:column="18"/></name><operator pos:line="222" pos:column="18">.<pos:position pos:line="222" pos:column="19"/></operator><name pos:line="222" pos:column="19">mangle_request_headers<pos:position pos:line="222" pos:column="41"/></name></name> <operator pos:line="222" pos:column="42">=<pos:position pos:line="222" pos:column="43"/></operator> <call><name pos:line="222" pos:column="44">httpReqHdrManglersConfigured<pos:position pos:line="222" pos:column="72"/></name><argument_list pos:line="222" pos:column="72">()<pos:position pos:line="222" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="75"/></expr_stmt>

    <if pos:line="224" pos:column="5">if <condition pos:line="224" pos:column="8">(<expr><call><name pos:line="224" pos:column="9">geteuid<pos:position pos:line="224" pos:column="16"/></name><argument_list pos:line="224" pos:column="16">()<pos:position pos:line="224" pos:column="18"/></argument_list></call> <operator pos:line="224" pos:column="19">==<pos:position pos:line="224" pos:column="21"/></operator> <literal type="number" pos:line="224" pos:column="22">0<pos:position pos:line="224" pos:column="23"/></literal></expr>)<pos:position pos:line="224" pos:column="24"/></condition><then pos:line="224" pos:column="24"> <block pos:line="224" pos:column="25">{
        <if pos:line="225" pos:column="9">if <condition pos:line="225" pos:column="12">(<expr><name pos:line="225" pos:column="13">NULL<pos:position pos:line="225" pos:column="17"/></name> <operator pos:line="225" pos:column="18">!=<pos:position pos:line="225" pos:column="20"/></operator> <name><name pos:line="225" pos:column="21">Config<pos:position pos:line="225" pos:column="27"/></name><operator pos:line="225" pos:column="27">.<pos:position pos:line="225" pos:column="28"/></operator><name pos:line="225" pos:column="28">effectiveUser<pos:position pos:line="225" pos:column="41"/></name></name></expr>)<pos:position pos:line="225" pos:column="42"/></condition><then pos:line="225" pos:column="42"> <block pos:line="225" pos:column="43">{

            <decl_stmt><decl><type><name><name pos:line="227" pos:column="13">struct<pos:position pos:line="227" pos:column="19"/></name> <name pos:line="227" pos:column="20">passwd<pos:position pos:line="227" pos:column="26"/></name></name> <modifier pos:line="227" pos:column="27">*<pos:position pos:line="227" pos:column="28"/></modifier></type><name pos:line="227" pos:column="28">pwd<pos:position pos:line="227" pos:column="31"/></name> <init pos:line="227" pos:column="32">= <expr><call><name pos:line="227" pos:column="34">getpwnam<pos:position pos:line="227" pos:column="42"/></name><argument_list pos:line="227" pos:column="42">(<argument><expr><name><name pos:line="227" pos:column="43">Config<pos:position pos:line="227" pos:column="49"/></name><operator pos:line="227" pos:column="49">.<pos:position pos:line="227" pos:column="50"/></operator><name pos:line="227" pos:column="50">effectiveUser<pos:position pos:line="227" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="227" pos:column="65"/></decl_stmt>

            <if pos:line="229" pos:column="13">if <condition pos:line="229" pos:column="16">(<expr><name pos:line="229" pos:column="17">NULL<pos:position pos:line="229" pos:column="21"/></name> <operator pos:line="229" pos:column="22">==<pos:position pos:line="229" pos:column="24"/></operator> <name pos:line="229" pos:column="25">pwd<pos:position pos:line="229" pos:column="28"/></name></expr>)<pos:position pos:line="229" pos:column="29"/></condition><then pos:line="229" pos:column="29"> <block pos:line="229" pos:column="30">{
                <comment type="block" pos:line="230" pos:column="17">/*
                 * Andres Kroonmaa &lt;andre@online.ee&gt;:
                 * Some getpwnam() implementations (Solaris?) require
                 * an available FD &lt; 256 for opening a FILE* to the
                 * passwd file.
                 * DW:
                 * This should be safe at startup, but might still fail
                 * during reconfigure.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="239" pos:column="17">fatalf<pos:position pos:line="239" pos:column="23"/></name><argument_list pos:line="239" pos:column="23">(<argument><expr><literal type="string" pos:line="239" pos:column="24">"getpwnam failed to find userid for effective user '%s'"<pos:position pos:line="239" pos:column="80"/></literal></expr></argument>,
                       <argument><expr><name><name pos:line="240" pos:column="24">Config<pos:position pos:line="240" pos:column="30"/></name><operator pos:line="240" pos:column="30">.<pos:position pos:line="240" pos:column="31"/></operator><name pos:line="240" pos:column="31">effectiveUser<pos:position pos:line="240" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="240" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="46"/></expr_stmt>
                <return pos:line="241" pos:column="17">return;<pos:position pos:line="241" pos:column="24"/></return>
            }<pos:position pos:line="242" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="244" pos:column="13">Config2<pos:position pos:line="244" pos:column="20"/></name><operator pos:line="244" pos:column="20">.<pos:position pos:line="244" pos:column="21"/></operator><name pos:line="244" pos:column="21">effectiveUserID<pos:position pos:line="244" pos:column="36"/></name></name> <operator pos:line="244" pos:column="37">=<pos:position pos:line="244" pos:column="38"/></operator> <name><name pos:line="244" pos:column="39">pwd<pos:position pos:line="244" pos:column="42"/></name><operator pos:line="244" pos:column="42">-&gt;<pos:position pos:line="244" pos:column="47"/></operator><name pos:line="244" pos:column="44">pw_uid<pos:position pos:line="244" pos:column="50"/></name></name></expr>;<pos:position pos:line="244" pos:column="51"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="246" pos:column="13">Config2<pos:position pos:line="246" pos:column="20"/></name><operator pos:line="246" pos:column="20">.<pos:position pos:line="246" pos:column="21"/></operator><name pos:line="246" pos:column="21">effectiveGroupID<pos:position pos:line="246" pos:column="37"/></name></name> <operator pos:line="246" pos:column="38">=<pos:position pos:line="246" pos:column="39"/></operator> <name><name pos:line="246" pos:column="40">pwd<pos:position pos:line="246" pos:column="43"/></name><operator pos:line="246" pos:column="43">-&gt;<pos:position pos:line="246" pos:column="48"/></operator><name pos:line="246" pos:column="45">pw_gid<pos:position pos:line="246" pos:column="51"/></name></name></expr>;<pos:position pos:line="246" pos:column="52"/></expr_stmt>

<cpp:if pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">if<pos:position pos:line="248" pos:column="4"/></cpp:directive> <expr><name pos:line="248" pos:column="5">HAVE_PUTENV<pos:position pos:line="248" pos:column="16"/></name></expr></cpp:if>

            <if pos:line="250" pos:column="13">if <condition pos:line="250" pos:column="16">(<expr><name><name pos:line="250" pos:column="17">pwd<pos:position pos:line="250" pos:column="20"/></name><operator pos:line="250" pos:column="20">-&gt;<pos:position pos:line="250" pos:column="25"/></operator><name pos:line="250" pos:column="22">pw_dir<pos:position pos:line="250" pos:column="28"/></name></name> <operator pos:line="250" pos:column="29">&amp;&amp;<pos:position pos:line="250" pos:column="39"/></operator> <operator pos:line="250" pos:column="32">*<pos:position pos:line="250" pos:column="33"/></operator><name><name pos:line="250" pos:column="33">pwd<pos:position pos:line="250" pos:column="36"/></name><operator pos:line="250" pos:column="36">-&gt;<pos:position pos:line="250" pos:column="41"/></operator><name pos:line="250" pos:column="38">pw_dir<pos:position pos:line="250" pos:column="44"/></name></name></expr>)<pos:position pos:line="250" pos:column="45"/></condition><then pos:line="250" pos:column="45"> <block pos:line="250" pos:column="46">{
                <decl_stmt><decl><type><name pos:line="251" pos:column="17">int<pos:position pos:line="251" pos:column="20"/></name></type> <name pos:line="251" pos:column="21">len<pos:position pos:line="251" pos:column="24"/></name></decl>;<pos:position pos:line="251" pos:column="25"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="252" pos:column="17">char<pos:position pos:line="252" pos:column="21"/></name> <modifier pos:line="252" pos:column="22">*<pos:position pos:line="252" pos:column="23"/></modifier></type><name pos:line="252" pos:column="23">env_str<pos:position pos:line="252" pos:column="30"/></name> <init pos:line="252" pos:column="31">= <expr><operator pos:line="252" pos:column="33">(<pos:position pos:line="252" pos:column="34"/></operator><name pos:line="252" pos:column="34">char<pos:position pos:line="252" pos:column="38"/></name> <operator pos:line="252" pos:column="39">*<pos:position pos:line="252" pos:column="40"/></operator><operator pos:line="252" pos:column="40">)<pos:position pos:line="252" pos:column="41"/></operator><call><name pos:line="252" pos:column="41">xcalloc<pos:position pos:line="252" pos:column="48"/></name><argument_list pos:line="252" pos:column="48">(<argument><expr><operator pos:line="252" pos:column="49">(<pos:position pos:line="252" pos:column="50"/></operator><name pos:line="252" pos:column="50">len<pos:position pos:line="252" pos:column="53"/></name> <operator pos:line="252" pos:column="54">=<pos:position pos:line="252" pos:column="55"/></operator> <call><name pos:line="252" pos:column="56">strlen<pos:position pos:line="252" pos:column="62"/></name><argument_list pos:line="252" pos:column="62">(<argument><expr><name><name pos:line="252" pos:column="63">pwd<pos:position pos:line="252" pos:column="66"/></name><operator pos:line="252" pos:column="66">-&gt;<pos:position pos:line="252" pos:column="71"/></operator><name pos:line="252" pos:column="68">pw_dir<pos:position pos:line="252" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="252" pos:column="75"/></argument_list></call> <operator pos:line="252" pos:column="76">+<pos:position pos:line="252" pos:column="77"/></operator> <literal type="number" pos:line="252" pos:column="78">6<pos:position pos:line="252" pos:column="79"/></literal><operator pos:line="252" pos:column="79">)<pos:position pos:line="252" pos:column="80"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="252" pos:column="82">1<pos:position pos:line="252" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="252" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="252" pos:column="85"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="253" pos:column="17">snprintf<pos:position pos:line="253" pos:column="25"/></name><argument_list pos:line="253" pos:column="25">(<argument><expr><name pos:line="253" pos:column="26">env_str<pos:position pos:line="253" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="35">len<pos:position pos:line="253" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="40">"HOME=%s"<pos:position pos:line="253" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="253" pos:column="51">pwd<pos:position pos:line="253" pos:column="54"/></name><operator pos:line="253" pos:column="54">-&gt;<pos:position pos:line="253" pos:column="59"/></operator><name pos:line="253" pos:column="56">pw_dir<pos:position pos:line="253" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="253" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="254" pos:column="17">putenv<pos:position pos:line="254" pos:column="23"/></name><argument_list pos:line="254" pos:column="23">(<argument><expr><name pos:line="254" pos:column="24">env_str<pos:position pos:line="254" pos:column="31"/></name></expr></argument>)<pos:position pos:line="254" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="255" pos:column="14"/></block></then></if>

<cpp:endif pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">endif<pos:position pos:line="257" pos:column="7"/></cpp:directive></cpp:endif>

        }<pos:position pos:line="259" pos:column="10"/></block></then></if>
    }<pos:position pos:line="260" pos:column="6"/></block></then> <else pos:line="260" pos:column="7">else <block pos:line="260" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="261" pos:column="9">Config2<pos:position pos:line="261" pos:column="16"/></name><operator pos:line="261" pos:column="16">.<pos:position pos:line="261" pos:column="17"/></operator><name pos:line="261" pos:column="17">effectiveUserID<pos:position pos:line="261" pos:column="32"/></name></name> <operator pos:line="261" pos:column="33">=<pos:position pos:line="261" pos:column="34"/></operator> <call><name pos:line="261" pos:column="35">geteuid<pos:position pos:line="261" pos:column="42"/></name><argument_list pos:line="261" pos:column="42">()<pos:position pos:line="261" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="262" pos:column="9">Config2<pos:position pos:line="262" pos:column="16"/></name><operator pos:line="262" pos:column="16">.<pos:position pos:line="262" pos:column="17"/></operator><name pos:line="262" pos:column="17">effectiveGroupID<pos:position pos:line="262" pos:column="33"/></name></name> <operator pos:line="262" pos:column="34">=<pos:position pos:line="262" pos:column="35"/></operator> <call><name pos:line="262" pos:column="36">getegid<pos:position pos:line="262" pos:column="43"/></name><argument_list pos:line="262" pos:column="43">()<pos:position pos:line="262" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="263" pos:column="6"/></block></else></if>

    <if pos:line="265" pos:column="5">if <condition pos:line="265" pos:column="8">(<expr><name pos:line="265" pos:column="9">NULL<pos:position pos:line="265" pos:column="13"/></name> <operator pos:line="265" pos:column="14">!=<pos:position pos:line="265" pos:column="16"/></operator> <name><name pos:line="265" pos:column="17">Config<pos:position pos:line="265" pos:column="23"/></name><operator pos:line="265" pos:column="23">.<pos:position pos:line="265" pos:column="24"/></operator><name pos:line="265" pos:column="24">effectiveGroup<pos:position pos:line="265" pos:column="38"/></name></name></expr>)<pos:position pos:line="265" pos:column="39"/></condition><then pos:line="265" pos:column="39"> <block pos:line="265" pos:column="40">{

        <decl_stmt><decl><type><name><name pos:line="267" pos:column="9">struct<pos:position pos:line="267" pos:column="15"/></name> <name pos:line="267" pos:column="16">group<pos:position pos:line="267" pos:column="21"/></name></name> <modifier pos:line="267" pos:column="22">*<pos:position pos:line="267" pos:column="23"/></modifier></type><name pos:line="267" pos:column="23">grp<pos:position pos:line="267" pos:column="26"/></name> <init pos:line="267" pos:column="27">= <expr><call><name pos:line="267" pos:column="29">getgrnam<pos:position pos:line="267" pos:column="37"/></name><argument_list pos:line="267" pos:column="37">(<argument><expr><name><name pos:line="267" pos:column="38">Config<pos:position pos:line="267" pos:column="44"/></name><operator pos:line="267" pos:column="44">.<pos:position pos:line="267" pos:column="45"/></operator><name pos:line="267" pos:column="45">effectiveGroup<pos:position pos:line="267" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="267" pos:column="61"/></decl_stmt>

        <if pos:line="269" pos:column="9">if <condition pos:line="269" pos:column="12">(<expr><name pos:line="269" pos:column="13">NULL<pos:position pos:line="269" pos:column="17"/></name> <operator pos:line="269" pos:column="18">==<pos:position pos:line="269" pos:column="20"/></operator> <name pos:line="269" pos:column="21">grp<pos:position pos:line="269" pos:column="24"/></name></expr>)<pos:position pos:line="269" pos:column="25"/></condition><then pos:line="269" pos:column="25"> <block pos:line="269" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="270" pos:column="13">fatalf<pos:position pos:line="270" pos:column="19"/></name><argument_list pos:line="270" pos:column="19">(<argument><expr><literal type="string" pos:line="270" pos:column="20">"getgrnam failed to find groupid for effective group '%s'"<pos:position pos:line="270" pos:column="78"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="271" pos:column="20">Config<pos:position pos:line="271" pos:column="26"/></name><operator pos:line="271" pos:column="26">.<pos:position pos:line="271" pos:column="27"/></operator><name pos:line="271" pos:column="27">effectiveGroup<pos:position pos:line="271" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="43"/></expr_stmt>
            <return pos:line="272" pos:column="13">return;<pos:position pos:line="272" pos:column="20"/></return>
        }<pos:position pos:line="273" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="275" pos:column="9">Config2<pos:position pos:line="275" pos:column="16"/></name><operator pos:line="275" pos:column="16">.<pos:position pos:line="275" pos:column="17"/></operator><name pos:line="275" pos:column="17">effectiveGroupID<pos:position pos:line="275" pos:column="33"/></name></name> <operator pos:line="275" pos:column="34">=<pos:position pos:line="275" pos:column="35"/></operator> <name><name pos:line="275" pos:column="36">grp<pos:position pos:line="275" pos:column="39"/></name><operator pos:line="275" pos:column="39">-&gt;<pos:position pos:line="275" pos:column="44"/></operator><name pos:line="275" pos:column="41">gr_gid<pos:position pos:line="275" pos:column="47"/></name></name></expr>;<pos:position pos:line="275" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="276" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="278" pos:column="5">HttpRequestMethod<pos:position pos:line="278" pos:column="22"/></name><operator pos:line="278" pos:column="22">::<pos:position pos:line="278" pos:column="24"/></operator><name pos:line="278" pos:column="24">Configure<pos:position pos:line="278" pos:column="33"/></name></name><argument_list pos:line="278" pos:column="33">(<argument><expr><name pos:line="278" pos:column="34">Config<pos:position pos:line="278" pos:column="40"/></name></expr></argument>)<pos:position pos:line="278" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="42"/></expr_stmt>
<cpp:if pos:line="279" pos:column="1">#<cpp:directive pos:line="279" pos:column="2">if<pos:position pos:line="279" pos:column="4"/></cpp:directive> <expr><name pos:line="279" pos:column="5">USE_SSL<pos:position pos:line="279" pos:column="12"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="281" pos:column="5">debugs<pos:position pos:line="281" pos:column="11"/></name><argument_list pos:line="281" pos:column="11">(<argument><expr><literal type="number" pos:line="281" pos:column="12">3<pos:position pos:line="281" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="281" pos:column="15">1<pos:position pos:line="281" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="281" pos:column="18">"Initializing https proxy context"<pos:position pos:line="281" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="281" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="283" pos:column="5">Config<pos:position pos:line="283" pos:column="11"/></name><operator pos:line="283" pos:column="11">.<pos:position pos:line="283" pos:column="12"/></operator><name pos:line="283" pos:column="12">ssl_client<pos:position pos:line="283" pos:column="22"/></name><operator pos:line="283" pos:column="22">.<pos:position pos:line="283" pos:column="23"/></operator><name pos:line="283" pos:column="23">sslContext<pos:position pos:line="283" pos:column="33"/></name></name> <operator pos:line="283" pos:column="34">=<pos:position pos:line="283" pos:column="35"/></operator> <call><name pos:line="283" pos:column="36">sslCreateClientContext<pos:position pos:line="283" pos:column="58"/></name><argument_list pos:line="283" pos:column="58">(<argument><expr><name><name pos:line="283" pos:column="59">Config<pos:position pos:line="283" pos:column="65"/></name><operator pos:line="283" pos:column="65">.<pos:position pos:line="283" pos:column="66"/></operator><name pos:line="283" pos:column="66">ssl_client<pos:position pos:line="283" pos:column="76"/></name><operator pos:line="283" pos:column="76">.<pos:position pos:line="283" pos:column="77"/></operator><name pos:line="283" pos:column="77">cert<pos:position pos:line="283" pos:column="81"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="83">Config<pos:position pos:line="283" pos:column="89"/></name><operator pos:line="283" pos:column="89">.<pos:position pos:line="283" pos:column="90"/></operator><name pos:line="283" pos:column="90">ssl_client<pos:position pos:line="283" pos:column="100"/></name><operator pos:line="283" pos:column="100">.<pos:position pos:line="283" pos:column="101"/></operator><name pos:line="283" pos:column="101">key<pos:position pos:line="283" pos:column="104"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="106">Config<pos:position pos:line="283" pos:column="112"/></name><operator pos:line="283" pos:column="112">.<pos:position pos:line="283" pos:column="113"/></operator><name pos:line="283" pos:column="113">ssl_client<pos:position pos:line="283" pos:column="123"/></name><operator pos:line="283" pos:column="123">.<pos:position pos:line="283" pos:column="124"/></operator><name pos:line="283" pos:column="124">version<pos:position pos:line="283" pos:column="131"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="133">Config<pos:position pos:line="283" pos:column="139"/></name><operator pos:line="283" pos:column="139">.<pos:position pos:line="283" pos:column="140"/></operator><name pos:line="283" pos:column="140">ssl_client<pos:position pos:line="283" pos:column="150"/></name><operator pos:line="283" pos:column="150">.<pos:position pos:line="283" pos:column="151"/></operator><name pos:line="283" pos:column="151">cipher<pos:position pos:line="283" pos:column="157"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="159">Config<pos:position pos:line="283" pos:column="165"/></name><operator pos:line="283" pos:column="165">.<pos:position pos:line="283" pos:column="166"/></operator><name pos:line="283" pos:column="166">ssl_client<pos:position pos:line="283" pos:column="176"/></name><operator pos:line="283" pos:column="176">.<pos:position pos:line="283" pos:column="177"/></operator><name pos:line="283" pos:column="177">options<pos:position pos:line="283" pos:column="184"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="186">Config<pos:position pos:line="283" pos:column="192"/></name><operator pos:line="283" pos:column="192">.<pos:position pos:line="283" pos:column="193"/></operator><name pos:line="283" pos:column="193">ssl_client<pos:position pos:line="283" pos:column="203"/></name><operator pos:line="283" pos:column="203">.<pos:position pos:line="283" pos:column="204"/></operator><name pos:line="283" pos:column="204">flags<pos:position pos:line="283" pos:column="209"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="211">Config<pos:position pos:line="283" pos:column="217"/></name><operator pos:line="283" pos:column="217">.<pos:position pos:line="283" pos:column="218"/></operator><name pos:line="283" pos:column="218">ssl_client<pos:position pos:line="283" pos:column="228"/></name><operator pos:line="283" pos:column="228">.<pos:position pos:line="283" pos:column="229"/></operator><name pos:line="283" pos:column="229">cafile<pos:position pos:line="283" pos:column="235"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="237">Config<pos:position pos:line="283" pos:column="243"/></name><operator pos:line="283" pos:column="243">.<pos:position pos:line="283" pos:column="244"/></operator><name pos:line="283" pos:column="244">ssl_client<pos:position pos:line="283" pos:column="254"/></name><operator pos:line="283" pos:column="254">.<pos:position pos:line="283" pos:column="255"/></operator><name pos:line="283" pos:column="255">capath<pos:position pos:line="283" pos:column="261"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="263">Config<pos:position pos:line="283" pos:column="269"/></name><operator pos:line="283" pos:column="269">.<pos:position pos:line="283" pos:column="270"/></operator><name pos:line="283" pos:column="270">ssl_client<pos:position pos:line="283" pos:column="280"/></name><operator pos:line="283" pos:column="280">.<pos:position pos:line="283" pos:column="281"/></operator><name pos:line="283" pos:column="281">crlfile<pos:position pos:line="283" pos:column="288"/></name></name></expr></argument>)<pos:position pos:line="283" pos:column="289"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="290"/></expr_stmt>

    <block pos:line="285" pos:column="5">{

        <decl_stmt><decl><type><name pos:line="287" pos:column="9">peer<pos:position pos:line="287" pos:column="13"/></name> <modifier pos:line="287" pos:column="14">*<pos:position pos:line="287" pos:column="15"/></modifier></type><name pos:line="287" pos:column="15">p<pos:position pos:line="287" pos:column="16"/></name></decl>;<pos:position pos:line="287" pos:column="17"/></decl_stmt>

        <for pos:line="289" pos:column="9">for <control pos:line="289" pos:column="13">(<init><expr><name pos:line="289" pos:column="14">p<pos:position pos:line="289" pos:column="15"/></name> <operator pos:line="289" pos:column="16">=<pos:position pos:line="289" pos:column="17"/></operator> <name><name pos:line="289" pos:column="18">Config<pos:position pos:line="289" pos:column="24"/></name><operator pos:line="289" pos:column="24">.<pos:position pos:line="289" pos:column="25"/></operator><name pos:line="289" pos:column="25">peers<pos:position pos:line="289" pos:column="30"/></name></name></expr>;<pos:position pos:line="289" pos:column="31"/></init> <condition><expr><name pos:line="289" pos:column="32">p<pos:position pos:line="289" pos:column="33"/></name> <operator pos:line="289" pos:column="34">!=<pos:position pos:line="289" pos:column="36"/></operator> <name pos:line="289" pos:column="37">NULL<pos:position pos:line="289" pos:column="41"/></name></expr>;<pos:position pos:line="289" pos:column="42"/></condition> <incr><expr><name pos:line="289" pos:column="43">p<pos:position pos:line="289" pos:column="44"/></name> <operator pos:line="289" pos:column="45">=<pos:position pos:line="289" pos:column="46"/></operator> <name><name pos:line="289" pos:column="47">p<pos:position pos:line="289" pos:column="48"/></name><operator pos:line="289" pos:column="48">-&gt;<pos:position pos:line="289" pos:column="53"/></operator><name pos:line="289" pos:column="50">next<pos:position pos:line="289" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="289" pos:column="55"/></control> <block pos:line="289" pos:column="56">{
            <if pos:line="290" pos:column="13">if <condition pos:line="290" pos:column="16">(<expr><name><name pos:line="290" pos:column="17">p<pos:position pos:line="290" pos:column="18"/></name><operator pos:line="290" pos:column="18">-&gt;<pos:position pos:line="290" pos:column="23"/></operator><name pos:line="290" pos:column="20">use_ssl<pos:position pos:line="290" pos:column="27"/></name></name></expr>)<pos:position pos:line="290" pos:column="28"/></condition><then pos:line="290" pos:column="28"> <block pos:line="290" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="291" pos:column="17">debugs<pos:position pos:line="291" pos:column="23"/></name><argument_list pos:line="291" pos:column="23">(<argument><expr><literal type="number" pos:line="291" pos:column="24">3<pos:position pos:line="291" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="291" pos:column="27">1<pos:position pos:line="291" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="30">"Initializing cache_peer "<pos:position pos:line="291" pos:column="56"/></literal> <operator pos:line="291" pos:column="57">&lt;&lt;<pos:position pos:line="291" pos:column="65"/></operator> <name><name pos:line="291" pos:column="60">p<pos:position pos:line="291" pos:column="61"/></name><operator pos:line="291" pos:column="61">-&gt;<pos:position pos:line="291" pos:column="66"/></operator><name pos:line="291" pos:column="63">name<pos:position pos:line="291" pos:column="67"/></name></name> <operator pos:line="291" pos:column="68">&lt;&lt;<pos:position pos:line="291" pos:column="76"/></operator> <literal type="string" pos:line="291" pos:column="71">" SSL context"<pos:position pos:line="291" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="87"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="292" pos:column="17">p<pos:position pos:line="292" pos:column="18"/></name><operator pos:line="292" pos:column="18">-&gt;<pos:position pos:line="292" pos:column="23"/></operator><name pos:line="292" pos:column="20">sslContext<pos:position pos:line="292" pos:column="30"/></name></name> <operator pos:line="292" pos:column="31">=<pos:position pos:line="292" pos:column="32"/></operator> <call><name pos:line="292" pos:column="33">sslCreateClientContext<pos:position pos:line="292" pos:column="55"/></name><argument_list pos:line="292" pos:column="55">(<argument><expr><name><name pos:line="292" pos:column="56">p<pos:position pos:line="292" pos:column="57"/></name><operator pos:line="292" pos:column="57">-&gt;<pos:position pos:line="292" pos:column="62"/></operator><name pos:line="292" pos:column="59">sslcert<pos:position pos:line="292" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="68">p<pos:position pos:line="292" pos:column="69"/></name><operator pos:line="292" pos:column="69">-&gt;<pos:position pos:line="292" pos:column="74"/></operator><name pos:line="292" pos:column="71">sslkey<pos:position pos:line="292" pos:column="77"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="79">p<pos:position pos:line="292" pos:column="80"/></name><operator pos:line="292" pos:column="80">-&gt;<pos:position pos:line="292" pos:column="85"/></operator><name pos:line="292" pos:column="82">sslversion<pos:position pos:line="292" pos:column="92"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="94">p<pos:position pos:line="292" pos:column="95"/></name><operator pos:line="292" pos:column="95">-&gt;<pos:position pos:line="292" pos:column="100"/></operator><name pos:line="292" pos:column="97">sslcipher<pos:position pos:line="292" pos:column="106"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="108">p<pos:position pos:line="292" pos:column="109"/></name><operator pos:line="292" pos:column="109">-&gt;<pos:position pos:line="292" pos:column="114"/></operator><name pos:line="292" pos:column="111">ssloptions<pos:position pos:line="292" pos:column="121"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="123">p<pos:position pos:line="292" pos:column="124"/></name><operator pos:line="292" pos:column="124">-&gt;<pos:position pos:line="292" pos:column="129"/></operator><name pos:line="292" pos:column="126">sslflags<pos:position pos:line="292" pos:column="134"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="136">p<pos:position pos:line="292" pos:column="137"/></name><operator pos:line="292" pos:column="137">-&gt;<pos:position pos:line="292" pos:column="142"/></operator><name pos:line="292" pos:column="139">sslcafile<pos:position pos:line="292" pos:column="148"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="150">p<pos:position pos:line="292" pos:column="151"/></name><operator pos:line="292" pos:column="151">-&gt;<pos:position pos:line="292" pos:column="156"/></operator><name pos:line="292" pos:column="153">sslcapath<pos:position pos:line="292" pos:column="162"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="164">p<pos:position pos:line="292" pos:column="165"/></name><operator pos:line="292" pos:column="165">-&gt;<pos:position pos:line="292" pos:column="170"/></operator><name pos:line="292" pos:column="167">sslcrlfile<pos:position pos:line="292" pos:column="177"/></name></name></expr></argument>)<pos:position pos:line="292" pos:column="178"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="179"/></expr_stmt>
            }<pos:position pos:line="293" pos:column="14"/></block></then></if>
        }<pos:position pos:line="294" pos:column="10"/></block></for>
    }<pos:position pos:line="295" pos:column="6"/></block>

    <block pos:line="297" pos:column="5">{

        <decl_stmt><decl><type><name pos:line="299" pos:column="9">http_port_list<pos:position pos:line="299" pos:column="23"/></name> <modifier pos:line="299" pos:column="24">*<pos:position pos:line="299" pos:column="25"/></modifier></type><name pos:line="299" pos:column="25">s<pos:position pos:line="299" pos:column="26"/></name></decl>;<pos:position pos:line="299" pos:column="27"/></decl_stmt>

        <for pos:line="301" pos:column="9">for <control pos:line="301" pos:column="13">(<init><expr><name pos:line="301" pos:column="14">s<pos:position pos:line="301" pos:column="15"/></name> <operator pos:line="301" pos:column="16">=<pos:position pos:line="301" pos:column="17"/></operator> <name><name pos:line="301" pos:column="18">Config<pos:position pos:line="301" pos:column="24"/></name><operator pos:line="301" pos:column="24">.<pos:position pos:line="301" pos:column="25"/></operator><name pos:line="301" pos:column="25">Sockaddr<pos:position pos:line="301" pos:column="33"/></name><operator pos:line="301" pos:column="33">.<pos:position pos:line="301" pos:column="34"/></operator><name pos:line="301" pos:column="34">http<pos:position pos:line="301" pos:column="38"/></name></name></expr>;<pos:position pos:line="301" pos:column="39"/></init> <condition><expr><name pos:line="301" pos:column="40">s<pos:position pos:line="301" pos:column="41"/></name> <operator pos:line="301" pos:column="42">!=<pos:position pos:line="301" pos:column="44"/></operator> <name pos:line="301" pos:column="45">NULL<pos:position pos:line="301" pos:column="49"/></name></expr>;<pos:position pos:line="301" pos:column="50"/></condition> <incr><expr><name pos:line="301" pos:column="51">s<pos:position pos:line="301" pos:column="52"/></name> <operator pos:line="301" pos:column="53">=<pos:position pos:line="301" pos:column="54"/></operator> <operator pos:line="301" pos:column="55">(<pos:position pos:line="301" pos:column="56"/></operator><name pos:line="301" pos:column="56">http_port_list<pos:position pos:line="301" pos:column="70"/></name> <operator pos:line="301" pos:column="71">*<pos:position pos:line="301" pos:column="72"/></operator><operator pos:line="301" pos:column="72">)<pos:position pos:line="301" pos:column="73"/></operator> <name><name pos:line="301" pos:column="74">s<pos:position pos:line="301" pos:column="75"/></name><operator pos:line="301" pos:column="75">-&gt;<pos:position pos:line="301" pos:column="80"/></operator><name pos:line="301" pos:column="77">next<pos:position pos:line="301" pos:column="81"/></name></name></expr></incr>)<pos:position pos:line="301" pos:column="82"/></control> <block pos:line="301" pos:column="83">{
            <if pos:line="302" pos:column="13">if <condition pos:line="302" pos:column="16">(<expr><operator pos:line="302" pos:column="17">!<pos:position pos:line="302" pos:column="18"/></operator><name><name pos:line="302" pos:column="18">s<pos:position pos:line="302" pos:column="19"/></name><operator pos:line="302" pos:column="19">-&gt;<pos:position pos:line="302" pos:column="24"/></operator><name pos:line="302" pos:column="21">cert<pos:position pos:line="302" pos:column="25"/></name></name> <operator pos:line="302" pos:column="26">&amp;&amp;<pos:position pos:line="302" pos:column="36"/></operator> <operator pos:line="302" pos:column="29">!<pos:position pos:line="302" pos:column="30"/></operator><name><name pos:line="302" pos:column="30">s<pos:position pos:line="302" pos:column="31"/></name><operator pos:line="302" pos:column="31">-&gt;<pos:position pos:line="302" pos:column="36"/></operator><name pos:line="302" pos:column="33">key<pos:position pos:line="302" pos:column="36"/></name></name></expr>)<pos:position pos:line="302" pos:column="37"/></condition><then pos:line="302" pos:column="37">
                <block type="pseudo"><continue pos:line="303" pos:column="17">continue;<pos:position pos:line="303" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="305" pos:column="13">debugs<pos:position pos:line="305" pos:column="19"/></name><argument_list pos:line="305" pos:column="19">(<argument><expr><literal type="number" pos:line="305" pos:column="20">3<pos:position pos:line="305" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="305" pos:column="23">1<pos:position pos:line="305" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="305" pos:column="26">"Initializing http_port "<pos:position pos:line="305" pos:column="51"/></literal> <operator pos:line="305" pos:column="52">&lt;&lt;<pos:position pos:line="305" pos:column="60"/></operator> <name><name pos:line="305" pos:column="55">s<pos:position pos:line="305" pos:column="56"/></name><operator pos:line="305" pos:column="56">-&gt;<pos:position pos:line="305" pos:column="61"/></operator><name pos:line="305" pos:column="58">http<pos:position pos:line="305" pos:column="62"/></name><operator pos:line="305" pos:column="62">.<pos:position pos:line="305" pos:column="63"/></operator><name pos:line="305" pos:column="63">s<pos:position pos:line="305" pos:column="64"/></name></name> <operator pos:line="305" pos:column="65">&lt;&lt;<pos:position pos:line="305" pos:column="73"/></operator> <literal type="string" pos:line="305" pos:column="68">" SSL context"<pos:position pos:line="305" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="84"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="307" pos:column="13">s<pos:position pos:line="307" pos:column="14"/></name><operator pos:line="307" pos:column="14">-&gt;<pos:position pos:line="307" pos:column="19"/></operator><name pos:line="307" pos:column="16">staticSslContext<pos:position pos:line="307" pos:column="32"/></name><operator pos:line="307" pos:column="32">.<pos:position pos:line="307" pos:column="33"/></operator><name pos:line="307" pos:column="33">reset<pos:position pos:line="307" pos:column="38"/></name></name><argument_list pos:line="307" pos:column="38">(
                <argument><expr><call><name pos:line="308" pos:column="17">sslCreateServerContext<pos:position pos:line="308" pos:column="39"/></name><argument_list pos:line="308" pos:column="39">(<argument><expr><name><name pos:line="308" pos:column="40">s<pos:position pos:line="308" pos:column="41"/></name><operator pos:line="308" pos:column="41">-&gt;<pos:position pos:line="308" pos:column="46"/></operator><name pos:line="308" pos:column="43">cert<pos:position pos:line="308" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="308" pos:column="49">s<pos:position pos:line="308" pos:column="50"/></name><operator pos:line="308" pos:column="50">-&gt;<pos:position pos:line="308" pos:column="55"/></operator><name pos:line="308" pos:column="52">key<pos:position pos:line="308" pos:column="55"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="309" pos:column="40">s<pos:position pos:line="309" pos:column="41"/></name><operator pos:line="309" pos:column="41">-&gt;<pos:position pos:line="309" pos:column="46"/></operator><name pos:line="309" pos:column="43">version<pos:position pos:line="309" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="309" pos:column="52">s<pos:position pos:line="309" pos:column="53"/></name><operator pos:line="309" pos:column="53">-&gt;<pos:position pos:line="309" pos:column="58"/></operator><name pos:line="309" pos:column="55">cipher<pos:position pos:line="309" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="309" pos:column="63">s<pos:position pos:line="309" pos:column="64"/></name><operator pos:line="309" pos:column="64">-&gt;<pos:position pos:line="309" pos:column="69"/></operator><name pos:line="309" pos:column="66">options<pos:position pos:line="309" pos:column="73"/></name></name></expr></argument>, <argument><expr><name><name pos:line="309" pos:column="75">s<pos:position pos:line="309" pos:column="76"/></name><operator pos:line="309" pos:column="76">-&gt;<pos:position pos:line="309" pos:column="81"/></operator><name pos:line="309" pos:column="78">sslflags<pos:position pos:line="309" pos:column="86"/></name></name></expr></argument>, <argument><expr><name><name pos:line="309" pos:column="88">s<pos:position pos:line="309" pos:column="89"/></name><operator pos:line="309" pos:column="89">-&gt;<pos:position pos:line="309" pos:column="94"/></operator><name pos:line="309" pos:column="91">clientca<pos:position pos:line="309" pos:column="99"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="310" pos:column="40">s<pos:position pos:line="310" pos:column="41"/></name><operator pos:line="310" pos:column="41">-&gt;<pos:position pos:line="310" pos:column="46"/></operator><name pos:line="310" pos:column="43">cafile<pos:position pos:line="310" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="51">s<pos:position pos:line="310" pos:column="52"/></name><operator pos:line="310" pos:column="52">-&gt;<pos:position pos:line="310" pos:column="57"/></operator><name pos:line="310" pos:column="54">capath<pos:position pos:line="310" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="62">s<pos:position pos:line="310" pos:column="63"/></name><operator pos:line="310" pos:column="63">-&gt;<pos:position pos:line="310" pos:column="68"/></operator><name pos:line="310" pos:column="65">crlfile<pos:position pos:line="310" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="74">s<pos:position pos:line="310" pos:column="75"/></name><operator pos:line="310" pos:column="75">-&gt;<pos:position pos:line="310" pos:column="80"/></operator><name pos:line="310" pos:column="77">dhfile<pos:position pos:line="310" pos:column="83"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="311" pos:column="40">s<pos:position pos:line="311" pos:column="41"/></name><operator pos:line="311" pos:column="41">-&gt;<pos:position pos:line="311" pos:column="46"/></operator><name pos:line="311" pos:column="43">sslContextSessionId<pos:position pos:line="311" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="311" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="311" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="313" pos:column="13">Ssl<pos:position pos:line="313" pos:column="16"/></name><operator pos:line="313" pos:column="16">::<pos:position pos:line="313" pos:column="18"/></operator><name pos:line="313" pos:column="18">readCertAndPrivateKeyFromFiles<pos:position pos:line="313" pos:column="48"/></name></name><argument_list pos:line="313" pos:column="48">(<argument><expr><name><name pos:line="313" pos:column="49">s<pos:position pos:line="313" pos:column="50"/></name><operator pos:line="313" pos:column="50">-&gt;<pos:position pos:line="313" pos:column="55"/></operator><name pos:line="313" pos:column="52">signingCert<pos:position pos:line="313" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="313" pos:column="65">s<pos:position pos:line="313" pos:column="66"/></name><operator pos:line="313" pos:column="66">-&gt;<pos:position pos:line="313" pos:column="71"/></operator><name pos:line="313" pos:column="68">signPkey<pos:position pos:line="313" pos:column="76"/></name></name></expr></argument>, <argument><expr><name><name pos:line="313" pos:column="78">s<pos:position pos:line="313" pos:column="79"/></name><operator pos:line="313" pos:column="79">-&gt;<pos:position pos:line="313" pos:column="84"/></operator><name pos:line="313" pos:column="81">cert<pos:position pos:line="313" pos:column="85"/></name></name></expr></argument>, <argument><expr><name><name pos:line="313" pos:column="87">s<pos:position pos:line="313" pos:column="88"/></name><operator pos:line="313" pos:column="88">-&gt;<pos:position pos:line="313" pos:column="93"/></operator><name pos:line="313" pos:column="90">key<pos:position pos:line="313" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="313" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="95"/></expr_stmt>
        }<pos:position pos:line="314" pos:column="10"/></block></for>
    }<pos:position pos:line="315" pos:column="6"/></block>

    <block pos:line="317" pos:column="5">{

        <decl_stmt><decl><type><name pos:line="319" pos:column="9">https_port_list<pos:position pos:line="319" pos:column="24"/></name> <modifier pos:line="319" pos:column="25">*<pos:position pos:line="319" pos:column="26"/></modifier></type><name pos:line="319" pos:column="26">s<pos:position pos:line="319" pos:column="27"/></name></decl>;<pos:position pos:line="319" pos:column="28"/></decl_stmt>

        <for pos:line="321" pos:column="9">for <control pos:line="321" pos:column="13">(<init><expr><name pos:line="321" pos:column="14">s<pos:position pos:line="321" pos:column="15"/></name> <operator pos:line="321" pos:column="16">=<pos:position pos:line="321" pos:column="17"/></operator> <name><name pos:line="321" pos:column="18">Config<pos:position pos:line="321" pos:column="24"/></name><operator pos:line="321" pos:column="24">.<pos:position pos:line="321" pos:column="25"/></operator><name pos:line="321" pos:column="25">Sockaddr<pos:position pos:line="321" pos:column="33"/></name><operator pos:line="321" pos:column="33">.<pos:position pos:line="321" pos:column="34"/></operator><name pos:line="321" pos:column="34">https<pos:position pos:line="321" pos:column="39"/></name></name></expr>;<pos:position pos:line="321" pos:column="40"/></init> <condition><expr><name pos:line="321" pos:column="41">s<pos:position pos:line="321" pos:column="42"/></name> <operator pos:line="321" pos:column="43">!=<pos:position pos:line="321" pos:column="45"/></operator> <name pos:line="321" pos:column="46">NULL<pos:position pos:line="321" pos:column="50"/></name></expr>;<pos:position pos:line="321" pos:column="51"/></condition> <incr><expr><name pos:line="321" pos:column="52">s<pos:position pos:line="321" pos:column="53"/></name> <operator pos:line="321" pos:column="54">=<pos:position pos:line="321" pos:column="55"/></operator> <operator pos:line="321" pos:column="56">(<pos:position pos:line="321" pos:column="57"/></operator><name pos:line="321" pos:column="57">https_port_list<pos:position pos:line="321" pos:column="72"/></name> <operator pos:line="321" pos:column="73">*<pos:position pos:line="321" pos:column="74"/></operator><operator pos:line="321" pos:column="74">)<pos:position pos:line="321" pos:column="75"/></operator> <name><name pos:line="321" pos:column="76">s<pos:position pos:line="321" pos:column="77"/></name><operator pos:line="321" pos:column="77">-&gt;<pos:position pos:line="321" pos:column="82"/></operator><name pos:line="321" pos:column="79">http<pos:position pos:line="321" pos:column="83"/></name><operator pos:line="321" pos:column="83">.<pos:position pos:line="321" pos:column="84"/></operator><name pos:line="321" pos:column="84">next<pos:position pos:line="321" pos:column="88"/></name></name></expr></incr>)<pos:position pos:line="321" pos:column="89"/></control> <block pos:line="321" pos:column="90">{
            <expr_stmt><expr><call><name pos:line="322" pos:column="13">debugs<pos:position pos:line="322" pos:column="19"/></name><argument_list pos:line="322" pos:column="19">(<argument><expr><literal type="number" pos:line="322" pos:column="20">3<pos:position pos:line="322" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="322" pos:column="23">1<pos:position pos:line="322" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="26">"Initializing https_port "<pos:position pos:line="322" pos:column="52"/></literal> <operator pos:line="322" pos:column="53">&lt;&lt;<pos:position pos:line="322" pos:column="61"/></operator> <name><name pos:line="322" pos:column="56">s<pos:position pos:line="322" pos:column="57"/></name><operator pos:line="322" pos:column="57">-&gt;<pos:position pos:line="322" pos:column="62"/></operator><name pos:line="322" pos:column="59">http<pos:position pos:line="322" pos:column="63"/></name><operator pos:line="322" pos:column="63">.<pos:position pos:line="322" pos:column="64"/></operator><name pos:line="322" pos:column="64">s<pos:position pos:line="322" pos:column="65"/></name></name> <operator pos:line="322" pos:column="66">&lt;&lt;<pos:position pos:line="322" pos:column="74"/></operator> <literal type="string" pos:line="322" pos:column="69">" SSL context"<pos:position pos:line="322" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="85"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="324" pos:column="13">s<pos:position pos:line="324" pos:column="14"/></name><operator pos:line="324" pos:column="14">-&gt;<pos:position pos:line="324" pos:column="19"/></operator><name pos:line="324" pos:column="16">staticSslContext<pos:position pos:line="324" pos:column="32"/></name><operator pos:line="324" pos:column="32">.<pos:position pos:line="324" pos:column="33"/></operator><name pos:line="324" pos:column="33">reset<pos:position pos:line="324" pos:column="38"/></name></name><argument_list pos:line="324" pos:column="38">(
                <argument><expr><call><name pos:line="325" pos:column="17">sslCreateServerContext<pos:position pos:line="325" pos:column="39"/></name><argument_list pos:line="325" pos:column="39">(<argument><expr><name><name pos:line="325" pos:column="40">s<pos:position pos:line="325" pos:column="41"/></name><operator pos:line="325" pos:column="41">-&gt;<pos:position pos:line="325" pos:column="46"/></operator><name pos:line="325" pos:column="43">cert<pos:position pos:line="325" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="325" pos:column="49">s<pos:position pos:line="325" pos:column="50"/></name><operator pos:line="325" pos:column="50">-&gt;<pos:position pos:line="325" pos:column="55"/></operator><name pos:line="325" pos:column="52">key<pos:position pos:line="325" pos:column="55"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="326" pos:column="40">s<pos:position pos:line="326" pos:column="41"/></name><operator pos:line="326" pos:column="41">-&gt;<pos:position pos:line="326" pos:column="46"/></operator><name pos:line="326" pos:column="43">version<pos:position pos:line="326" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="326" pos:column="52">s<pos:position pos:line="326" pos:column="53"/></name><operator pos:line="326" pos:column="53">-&gt;<pos:position pos:line="326" pos:column="58"/></operator><name pos:line="326" pos:column="55">cipher<pos:position pos:line="326" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="326" pos:column="63">s<pos:position pos:line="326" pos:column="64"/></name><operator pos:line="326" pos:column="64">-&gt;<pos:position pos:line="326" pos:column="69"/></operator><name pos:line="326" pos:column="66">options<pos:position pos:line="326" pos:column="73"/></name></name></expr></argument>, <argument><expr><name><name pos:line="326" pos:column="75">s<pos:position pos:line="326" pos:column="76"/></name><operator pos:line="326" pos:column="76">-&gt;<pos:position pos:line="326" pos:column="81"/></operator><name pos:line="326" pos:column="78">sslflags<pos:position pos:line="326" pos:column="86"/></name></name></expr></argument>, <argument><expr><name><name pos:line="326" pos:column="88">s<pos:position pos:line="326" pos:column="89"/></name><operator pos:line="326" pos:column="89">-&gt;<pos:position pos:line="326" pos:column="94"/></operator><name pos:line="326" pos:column="91">clientca<pos:position pos:line="326" pos:column="99"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="327" pos:column="40">s<pos:position pos:line="327" pos:column="41"/></name><operator pos:line="327" pos:column="41">-&gt;<pos:position pos:line="327" pos:column="46"/></operator><name pos:line="327" pos:column="43">cafile<pos:position pos:line="327" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="327" pos:column="51">s<pos:position pos:line="327" pos:column="52"/></name><operator pos:line="327" pos:column="52">-&gt;<pos:position pos:line="327" pos:column="57"/></operator><name pos:line="327" pos:column="54">capath<pos:position pos:line="327" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="327" pos:column="62">s<pos:position pos:line="327" pos:column="63"/></name><operator pos:line="327" pos:column="63">-&gt;<pos:position pos:line="327" pos:column="68"/></operator><name pos:line="327" pos:column="65">crlfile<pos:position pos:line="327" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="327" pos:column="74">s<pos:position pos:line="327" pos:column="75"/></name><operator pos:line="327" pos:column="75">-&gt;<pos:position pos:line="327" pos:column="80"/></operator><name pos:line="327" pos:column="77">dhfile<pos:position pos:line="327" pos:column="83"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="328" pos:column="40">s<pos:position pos:line="328" pos:column="41"/></name><operator pos:line="328" pos:column="41">-&gt;<pos:position pos:line="328" pos:column="46"/></operator><name pos:line="328" pos:column="43">sslContextSessionId<pos:position pos:line="328" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="328" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="328" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="329" pos:column="10"/></block></for>
    }<pos:position pos:line="330" pos:column="6"/></block>

<cpp:endif pos:line="332" pos:column="1">#<cpp:directive pos:line="332" pos:column="2">endif<pos:position pos:line="332" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="334" pos:column="5">// prevent infinite fetch loops in the request parser</comment>
    <comment type="line" pos:line="335" pos:column="5">// due to buffer full but not enough data recived to finish parse</comment>
    <if pos:line="336" pos:column="5">if <condition pos:line="336" pos:column="8">(<expr><name><name pos:line="336" pos:column="9">Config<pos:position pos:line="336" pos:column="15"/></name><operator pos:line="336" pos:column="15">.<pos:position pos:line="336" pos:column="16"/></operator><name pos:line="336" pos:column="16">maxRequestBufferSize<pos:position pos:line="336" pos:column="36"/></name></name> <operator pos:line="336" pos:column="37">&lt;=<pos:position pos:line="336" pos:column="42"/></operator> <name><name pos:line="336" pos:column="40">Config<pos:position pos:line="336" pos:column="46"/></name><operator pos:line="336" pos:column="46">.<pos:position pos:line="336" pos:column="47"/></operator><name pos:line="336" pos:column="47">maxRequestHeaderSize<pos:position pos:line="336" pos:column="67"/></name></name></expr>)<pos:position pos:line="336" pos:column="68"/></condition><then pos:line="336" pos:column="68"> <block pos:line="336" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="337" pos:column="9">fatalf<pos:position pos:line="337" pos:column="15"/></name><argument_list pos:line="337" pos:column="15">(<argument><expr><literal type="string" pos:line="337" pos:column="16">"Client request buffer of %u bytes cannot hold a request with %u bytes of headers."<pos:position pos:line="337" pos:column="99"/></literal> \
               <literal type="string" pos:line="338" pos:column="16">" Change client_request_buffer_max or request_header_max_size limits."<pos:position pos:line="338" pos:column="86"/></literal></expr></argument>,
               <argument><expr><operator pos:line="339" pos:column="16">(<pos:position pos:line="339" pos:column="17"/></operator><name pos:line="339" pos:column="17">uint32_t<pos:position pos:line="339" pos:column="25"/></name><operator pos:line="339" pos:column="25">)<pos:position pos:line="339" pos:column="26"/></operator><name><name pos:line="339" pos:column="26">Config<pos:position pos:line="339" pos:column="32"/></name><operator pos:line="339" pos:column="32">.<pos:position pos:line="339" pos:column="33"/></operator><name pos:line="339" pos:column="33">maxRequestBufferSize<pos:position pos:line="339" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="339" pos:column="55">(<pos:position pos:line="339" pos:column="56"/></operator><name pos:line="339" pos:column="56">uint32_t<pos:position pos:line="339" pos:column="64"/></name><operator pos:line="339" pos:column="64">)<pos:position pos:line="339" pos:column="65"/></operator><name><name pos:line="339" pos:column="65">Config<pos:position pos:line="339" pos:column="71"/></name><operator pos:line="339" pos:column="71">.<pos:position pos:line="339" pos:column="72"/></operator><name pos:line="339" pos:column="72">maxRequestHeaderSize<pos:position pos:line="339" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="339" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="94"/></expr_stmt>
    }<pos:position pos:line="340" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="342" pos:column="5">/*
     * disable client side request pipelining. There is a race with
     * Negotiate and NTLM when the client sends a second request on an
     * connection before the authenticate challenge is sent. With
     * pipelining OFF, the client may fail to authenticate, but squid's
     * state will be preserved.
     */</comment>
    <if pos:line="349" pos:column="5">if <condition pos:line="349" pos:column="8">(<expr><name><name pos:line="349" pos:column="9">Config<pos:position pos:line="349" pos:column="15"/></name><operator pos:line="349" pos:column="15">.<pos:position pos:line="349" pos:column="16"/></operator><name pos:line="349" pos:column="16">onoff<pos:position pos:line="349" pos:column="21"/></name><operator pos:line="349" pos:column="21">.<pos:position pos:line="349" pos:column="22"/></operator><name pos:line="349" pos:column="22">pipeline_prefetch<pos:position pos:line="349" pos:column="39"/></name></name></expr>)<pos:position pos:line="349" pos:column="40"/></condition><then pos:line="349" pos:column="40"> <block pos:line="349" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="350" pos:column="9">AuthConfig<pos:position pos:line="350" pos:column="19"/></name> <modifier pos:line="350" pos:column="20">*<pos:position pos:line="350" pos:column="21"/></modifier></type><name pos:line="350" pos:column="21">nego<pos:position pos:line="350" pos:column="25"/></name> <init pos:line="350" pos:column="26">= <expr><call><name><name pos:line="350" pos:column="28">AuthConfig<pos:position pos:line="350" pos:column="38"/></name><operator pos:line="350" pos:column="38">::<pos:position pos:line="350" pos:column="40"/></operator><name pos:line="350" pos:column="40">Find<pos:position pos:line="350" pos:column="44"/></name></name><argument_list pos:line="350" pos:column="44">(<argument><expr><literal type="string" pos:line="350" pos:column="45">"Negotiate"<pos:position pos:line="350" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="350" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="350" pos:column="58"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="351" pos:column="9">AuthConfig<pos:position pos:line="351" pos:column="19"/></name> <modifier pos:line="351" pos:column="20">*<pos:position pos:line="351" pos:column="21"/></modifier></type><name pos:line="351" pos:column="21">ntlm<pos:position pos:line="351" pos:column="25"/></name> <init pos:line="351" pos:column="26">= <expr><call><name><name pos:line="351" pos:column="28">AuthConfig<pos:position pos:line="351" pos:column="38"/></name><operator pos:line="351" pos:column="38">::<pos:position pos:line="351" pos:column="40"/></operator><name pos:line="351" pos:column="40">Find<pos:position pos:line="351" pos:column="44"/></name></name><argument_list pos:line="351" pos:column="44">(<argument><expr><literal type="string" pos:line="351" pos:column="45">"NTLM"<pos:position pos:line="351" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="351" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="351" pos:column="53"/></decl_stmt>
        <if pos:line="352" pos:column="9">if <condition pos:line="352" pos:column="12">(<expr><operator pos:line="352" pos:column="13">(<pos:position pos:line="352" pos:column="14"/></operator><name pos:line="352" pos:column="14">nego<pos:position pos:line="352" pos:column="18"/></name> <operator pos:line="352" pos:column="19">&amp;&amp;<pos:position pos:line="352" pos:column="29"/></operator> <call><name><name pos:line="352" pos:column="22">nego<pos:position pos:line="352" pos:column="26"/></name><operator pos:line="352" pos:column="26">-&gt;<pos:position pos:line="352" pos:column="31"/></operator><name pos:line="352" pos:column="28">active<pos:position pos:line="352" pos:column="34"/></name></name><argument_list pos:line="352" pos:column="34">()<pos:position pos:line="352" pos:column="36"/></argument_list></call><operator pos:line="352" pos:column="36">)<pos:position pos:line="352" pos:column="37"/></operator> <operator pos:line="352" pos:column="38">||<pos:position pos:line="352" pos:column="40"/></operator> <operator pos:line="352" pos:column="41">(<pos:position pos:line="352" pos:column="42"/></operator><name pos:line="352" pos:column="42">ntlm<pos:position pos:line="352" pos:column="46"/></name> <operator pos:line="352" pos:column="47">&amp;&amp;<pos:position pos:line="352" pos:column="57"/></operator> <call><name><name pos:line="352" pos:column="50">ntlm<pos:position pos:line="352" pos:column="54"/></name><operator pos:line="352" pos:column="54">-&gt;<pos:position pos:line="352" pos:column="59"/></operator><name pos:line="352" pos:column="56">active<pos:position pos:line="352" pos:column="62"/></name></name><argument_list pos:line="352" pos:column="62">()<pos:position pos:line="352" pos:column="64"/></argument_list></call><operator pos:line="352" pos:column="64">)<pos:position pos:line="352" pos:column="65"/></operator></expr>)<pos:position pos:line="352" pos:column="66"/></condition><then pos:line="352" pos:column="66"> <block pos:line="352" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="353" pos:column="13">debugs<pos:position pos:line="353" pos:column="19"/></name><argument_list pos:line="353" pos:column="19">(<argument><expr><literal type="number" pos:line="353" pos:column="20">3<pos:position pos:line="353" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="353" pos:column="23">DBG_IMPORTANT<pos:position pos:line="353" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="353" pos:column="38">"WARNING: pipeline_prefetch breaks NTLM and Negotiate authentication. Forced OFF."<pos:position pos:line="353" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="122"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="354" pos:column="13">Config<pos:position pos:line="354" pos:column="19"/></name><operator pos:line="354" pos:column="19">.<pos:position pos:line="354" pos:column="20"/></operator><name pos:line="354" pos:column="20">onoff<pos:position pos:line="354" pos:column="25"/></name><operator pos:line="354" pos:column="25">.<pos:position pos:line="354" pos:column="26"/></operator><name pos:line="354" pos:column="26">pipeline_prefetch<pos:position pos:line="354" pos:column="43"/></name></name> <operator pos:line="354" pos:column="44">=<pos:position pos:line="354" pos:column="45"/></operator> <literal type="number" pos:line="354" pos:column="46">0<pos:position pos:line="354" pos:column="47"/></literal></expr>;<pos:position pos:line="354" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="355" pos:column="10"/></block></then></if>
    }<pos:position pos:line="356" pos:column="6"/></block></then></if>
}<pos:position pos:line="357" pos:column="2"/></block></function></unit>

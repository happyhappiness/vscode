<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_232.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">start<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">sendRequest<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">()<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24"> <block pos:line="4" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">11<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"httpStart: aborted"<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">mustStop<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><literal type="string" pos:line="6" pos:column="18">"HttpStateData::start failed"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">++<pos:position pos:line="10" pos:column="7"/></operator> <name><name pos:line="10" pos:column="8">statCounter<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">.<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">server<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">all<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">requests<pos:position pos:line="10" pos:column="39"/></name></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">++<pos:position pos:line="11" pos:column="7"/></operator> <name><name pos:line="11" pos:column="8">statCounter<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">server<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">.<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">http<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">requests<pos:position pos:line="11" pos:column="40"/></name></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/*
     * We used to set the read timeout here, but not any more.
     * Now its set in httpSendComplete() after the full request,
     * including request body, has been written to the server.
     */</comment>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5072_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSStoreState<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">ioCompletedNotification<pos:position pos:line="2" pos:column="48"/></name></name><parameter_list pos:line="2" pos:column="48">()<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">opening<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">opening<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <literal type="boolean" pos:line="5" pos:column="19">false<pos:position pos:line="5" pos:column="24"/></literal></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">79<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">3<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"UFSStoreState::ioCompletedNotification: dirno "<pos:position pos:line="6" pos:column="71"/></literal> <operator pos:line="6" pos:column="72">&lt;&lt;<pos:position pos:line="6" pos:column="80"/></operator>
               <name pos:line="7" pos:column="16">swap_dirn<pos:position pos:line="7" pos:column="25"/></name>  <operator pos:line="7" pos:column="27">&lt;&lt;<pos:position pos:line="7" pos:column="35"/></operator> <literal type="string" pos:line="7" pos:column="30">", fileno "<pos:position pos:line="7" pos:column="41"/></literal><operator pos:line="7" pos:column="41">&lt;&lt;<pos:position pos:line="7" pos:column="49"/></operator> <call><name><name pos:line="7" pos:column="44">std<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">::<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">setfill<pos:position pos:line="7" pos:column="56"/></name></name><argument_list pos:line="7" pos:column="56">(<argument><expr><literal type="char" pos:line="7" pos:column="57">'0'<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call> <operator pos:line="7" pos:column="62">&lt;&lt;<pos:position pos:line="7" pos:column="70"/></operator> <name><name pos:line="7" pos:column="65">std<pos:position pos:line="7" pos:column="68"/></name><operator pos:line="7" pos:column="68">::<pos:position pos:line="7" pos:column="70"/></operator><name pos:line="7" pos:column="70">hex<pos:position pos:line="7" pos:column="73"/></name></name> <operator pos:line="7" pos:column="74">&lt;&lt;<pos:position pos:line="7" pos:column="82"/></operator>
               <call><name><name pos:line="8" pos:column="16">std<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">::<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">setw<pos:position pos:line="8" pos:column="25"/></name></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">8<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call> <operator pos:line="8" pos:column="29">&lt;&lt;<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="32">swap_filen<pos:position pos:line="8" pos:column="42"/></name>  <operator pos:line="8" pos:column="44">&lt;&lt;<pos:position pos:line="8" pos:column="52"/></operator> <literal type="string" pos:line="8" pos:column="47">" status "<pos:position pos:line="8" pos:column="57"/></literal><operator pos:line="8" pos:column="57">&lt;&lt;<pos:position pos:line="8" pos:column="65"/></operator> <call><name><name pos:line="8" pos:column="60">std<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">::<pos:position pos:line="8" pos:column="65"/></operator><name pos:line="8" pos:column="65">setfill<pos:position pos:line="8" pos:column="72"/></name></name><argument_list pos:line="8" pos:column="72">(<argument><expr><literal type="char" pos:line="8" pos:column="73">' '<pos:position pos:line="8" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call> <operator pos:line="8" pos:column="78">&lt;&lt;<pos:position pos:line="8" pos:column="86"/></operator>
               <name><name pos:line="9" pos:column="16">std<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">::<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">dec<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">&lt;&lt;<pos:position pos:line="9" pos:column="33"/></operator> <call><name><name pos:line="9" pos:column="28">theFile<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">error<pos:position pos:line="9" pos:column="42"/></name></name><argument_list pos:line="9" pos:column="42">()<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><call><name pos:line="11" pos:column="17">FILE_MODE<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">mode<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call> <operator pos:line="11" pos:column="33">==<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">O_RDONLY<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">openDone<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">()<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>

        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">creating<pos:position pos:line="17" pos:column="17"/></name></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18"> <block pos:line="17" pos:column="19">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">creating<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="boolean" pos:line="18" pos:column="20">false<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">79<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">3<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"UFSStoreState::ioCompletedNotification: dirno "<pos:position pos:line="19" pos:column="71"/></literal> <operator pos:line="19" pos:column="72">&lt;&lt;<pos:position pos:line="19" pos:column="80"/></operator>
               <name pos:line="20" pos:column="16">swap_dirn<pos:position pos:line="20" pos:column="25"/></name>  <operator pos:line="20" pos:column="27">&lt;&lt;<pos:position pos:line="20" pos:column="35"/></operator> <literal type="string" pos:line="20" pos:column="30">", fileno "<pos:position pos:line="20" pos:column="41"/></literal><operator pos:line="20" pos:column="41">&lt;&lt;<pos:position pos:line="20" pos:column="49"/></operator> <call><name><name pos:line="20" pos:column="44">std<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">::<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">setfill<pos:position pos:line="20" pos:column="56"/></name></name><argument_list pos:line="20" pos:column="56">(<argument><expr><literal type="char" pos:line="20" pos:column="57">'0'<pos:position pos:line="20" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call> <operator pos:line="20" pos:column="62">&lt;&lt;<pos:position pos:line="20" pos:column="70"/></operator> <name><name pos:line="20" pos:column="65">std<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">::<pos:position pos:line="20" pos:column="70"/></operator><name pos:line="20" pos:column="70">hex<pos:position pos:line="20" pos:column="73"/></name></name> <operator pos:line="20" pos:column="74">&lt;&lt;<pos:position pos:line="20" pos:column="82"/></operator>
               <call><name><name pos:line="21" pos:column="16">std<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">::<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">setw<pos:position pos:line="21" pos:column="25"/></name></name><argument_list pos:line="21" pos:column="25">(<argument><expr><literal type="number" pos:line="21" pos:column="26">8<pos:position pos:line="21" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call> <operator pos:line="21" pos:column="29">&lt;&lt;<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="32">swap_filen<pos:position pos:line="21" pos:column="42"/></name>  <operator pos:line="21" pos:column="44">&lt;&lt;<pos:position pos:line="21" pos:column="52"/></operator> <literal type="string" pos:line="21" pos:column="47">" status "<pos:position pos:line="21" pos:column="57"/></literal><operator pos:line="21" pos:column="57">&lt;&lt;<pos:position pos:line="21" pos:column="65"/></operator> <call><name><name pos:line="21" pos:column="60">std<pos:position pos:line="21" pos:column="63"/></name><operator pos:line="21" pos:column="63">::<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="65">setfill<pos:position pos:line="21" pos:column="72"/></name></name><argument_list pos:line="21" pos:column="72">(<argument><expr><literal type="char" pos:line="21" pos:column="73">' '<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call> <operator pos:line="21" pos:column="78">&lt;&lt;<pos:position pos:line="21" pos:column="86"/></operator>
               <name><name pos:line="22" pos:column="16">std<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">::<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">dec<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">&lt;&lt;<pos:position pos:line="22" pos:column="33"/></operator> <call><name><name pos:line="22" pos:column="28">theFile<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">error<pos:position pos:line="22" pos:column="42"/></name></name><argument_list pos:line="22" pos:column="42">()<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">openDone<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">()<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>

        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">assert<pos:position pos:line="29" pos:column="11"/></name> <argument_list pos:line="29" pos:column="12">(<argument><expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">closing<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">||<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">opening<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">)<pos:position pos:line="29" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">debugs<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="number" pos:line="30" pos:column="12">79<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="16">3<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="19">"diskd::ioCompleted: dirno "<pos:position pos:line="30" pos:column="47"/></literal> <operator pos:line="30" pos:column="48">&lt;&lt;<pos:position pos:line="30" pos:column="56"/></operator> <name pos:line="30" pos:column="51">swap_dirn<pos:position pos:line="30" pos:column="60"/></name>  <operator pos:line="30" pos:column="62">&lt;&lt;<pos:position pos:line="30" pos:column="70"/></operator> <literal type="string" pos:line="30" pos:column="65">", fileno "<pos:position pos:line="30" pos:column="76"/></literal><operator pos:line="30" pos:column="76">&lt;&lt;<pos:position pos:line="30" pos:column="84"/></operator>
           <call><name><name pos:line="31" pos:column="12">std<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">::<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">setfill<pos:position pos:line="31" pos:column="24"/></name></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="char" pos:line="31" pos:column="25">'0'<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call> <operator pos:line="31" pos:column="30">&lt;&lt;<pos:position pos:line="31" pos:column="38"/></operator> <name><name pos:line="31" pos:column="33">std<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">::<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">hex<pos:position pos:line="31" pos:column="41"/></name></name> <operator pos:line="31" pos:column="42">&lt;&lt;<pos:position pos:line="31" pos:column="50"/></operator> <call><name><name pos:line="31" pos:column="45">std<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">::<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">setw<pos:position pos:line="31" pos:column="54"/></name></name><argument_list pos:line="31" pos:column="54">(<argument><expr><literal type="number" pos:line="31" pos:column="55">8<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call> <operator pos:line="31" pos:column="58">&lt;&lt;<pos:position pos:line="31" pos:column="66"/></operator> <name pos:line="31" pos:column="61">swap_filen<pos:position pos:line="31" pos:column="71"/></name>  <operator pos:line="31" pos:column="73">&lt;&lt;<pos:position pos:line="31" pos:column="81"/></operator>
           <literal type="string" pos:line="32" pos:column="12">" status "<pos:position pos:line="32" pos:column="22"/></literal><operator pos:line="32" pos:column="22">&lt;&lt;<pos:position pos:line="32" pos:column="30"/></operator> <call><name><name pos:line="32" pos:column="25">std<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">::<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">setfill<pos:position pos:line="32" pos:column="37"/></name></name><argument_list pos:line="32" pos:column="37">(<argument><expr><literal type="char" pos:line="32" pos:column="38">' '<pos:position pos:line="32" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call> <operator pos:line="32" pos:column="43">&lt;&lt;<pos:position pos:line="32" pos:column="51"/></operator> <name><name pos:line="32" pos:column="46">std<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">::<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="51">dec<pos:position pos:line="32" pos:column="54"/></name></name> <operator pos:line="32" pos:column="55">&lt;&lt;<pos:position pos:line="32" pos:column="63"/></operator> <call><name><name pos:line="32" pos:column="58">theFile<pos:position pos:line="32" pos:column="65"/></name><operator pos:line="32" pos:column="65">-&gt;<pos:position pos:line="32" pos:column="70"/></operator><name pos:line="32" pos:column="67">error<pos:position pos:line="32" pos:column="72"/></name></name><argument_list pos:line="32" pos:column="72">()<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Ok, notification past open means an error has occured */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">assert<pos:position pos:line="35" pos:column="11"/></name> <argument_list pos:line="35" pos:column="12">(<argument><expr><call><name><name pos:line="35" pos:column="13">theFile<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">error<pos:position pos:line="35" pos:column="27"/></name></name><argument_list pos:line="35" pos:column="27">()<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">tryClosing<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">()<pos:position pos:line="36" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

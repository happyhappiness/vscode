<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7388_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">initialize<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name><name pos:line="2" pos:column="37">Security<pos:position pos:line="2" pos:column="45"/></name><operator pos:line="2" pos:column="45">::<pos:position pos:line="2" pos:column="47"/></operator><name pos:line="2" pos:column="47">SessionPointer<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">&amp;<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="63">serverSession<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Security<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">ContextPointer<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">ctx<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><call><name pos:line="4" pos:column="34">getTlsContext<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">()<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">83<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">5<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="19">serverConnection<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call> <operator pos:line="5" pos:column="38">&lt;&lt;<pos:position pos:line="5" pos:column="46"/></operator> <literal type="string" pos:line="5" pos:column="41">", ctx="<pos:position pos:line="5" pos:column="49"/></literal> <operator pos:line="5" pos:column="50">&lt;&lt;<pos:position pos:line="5" pos:column="58"/></operator> <operator pos:line="5" pos:column="53">(<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="54">void<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></operator><operator pos:line="5" pos:column="59">)<pos:position pos:line="5" pos:column="60"/></operator><call><name><name pos:line="5" pos:column="60">ctx<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">.<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">get<pos:position pos:line="5" pos:column="67"/></name></name><argument_list pos:line="5" pos:column="67">()<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="71"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">ctx<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">||<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">!<pos:position pos:line="7" pos:column="18"/></operator><call><name><name pos:line="7" pos:column="18">Security<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">::<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">CreateClientSession<pos:position pos:line="7" pos:column="47"/></name></name><argument_list pos:line="7" pos:column="47">(<argument><expr><name pos:line="7" pos:column="48">ctx<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="53">serverConnection<pos:position pos:line="7" pos:column="69"/></name><argument_list pos:line="7" pos:column="69">()<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="73">"server https start"<pos:position pos:line="7" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="94"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="95"/></condition><then pos:line="7" pos:column="95"> <block pos:line="7" pos:column="96">{
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <specifier pos:line="8" pos:column="15">auto<pos:position pos:line="8" pos:column="19"/></specifier></type> <name pos:line="8" pos:column="20">xerrno<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">errno<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ctx<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">debugs<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="number" pos:line="10" pos:column="20">83<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">DBG_IMPORTANT<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"Error initializing TLS connection: No security context."<pos:position pos:line="10" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="98"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if> <comment type="line" pos:line="11" pos:column="11">// else CreateClientSession() did the appropriate debugs() already</comment>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">ErrorState<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">anErr<pos:position pos:line="12" pos:column="26"/></name> <init pos:line="12" pos:column="27">= <expr><operator pos:line="12" pos:column="29">new<pos:position pos:line="12" pos:column="32"/></operator> <call><name pos:line="12" pos:column="33">ErrorState<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">ERR_SOCKET_FAILURE<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="64">Http<pos:position pos:line="12" pos:column="68"/></name><operator pos:line="12" pos:column="68">::<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="70">scInternalServerError<pos:position pos:line="12" pos:column="91"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="12" pos:column="93">request<pos:position pos:line="12" pos:column="100"/></name><operator pos:line="12" pos:column="100">.<pos:position pos:line="12" pos:column="101"/></operator><name pos:line="12" pos:column="101">getRaw<pos:position pos:line="12" pos:column="107"/></name></name><argument_list pos:line="12" pos:column="107">()<pos:position pos:line="12" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="110"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="111"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">anErr<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">xerrno<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">xerrno<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">noteNegotiationDone<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">anErr<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">bail<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">anErr<pos:position pos:line="15" pos:column="19"/></name></expr></argument>)<pos:position pos:line="15" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><literal type="boolean" pos:line="16" pos:column="16">false<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="19" pos:column="5">// A TLS/SSL session has now been created for the connection and stored in fd_table</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">serverSession<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="21">fd_table<pos:position pos:line="20" pos:column="29"/></name><index pos:line="20" pos:column="29">[<expr><call><name pos:line="20" pos:column="30">serverConnection<pos:position pos:line="20" pos:column="46"/></name><argument_list pos:line="20" pos:column="46">()<pos:position pos:line="20" pos:column="48"/></argument_list></call><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">fd<pos:position pos:line="20" pos:column="52"/></name></expr>]<pos:position pos:line="20" pos:column="53"/></index></name><operator pos:line="20" pos:column="53">.<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">ssl<pos:position pos:line="20" pos:column="57"/></name></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">83<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">5<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="19">serverConnection<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">()<pos:position pos:line="21" pos:column="37"/></argument_list></call> <operator pos:line="21" pos:column="38">&lt;&lt;<pos:position pos:line="21" pos:column="46"/></operator> <literal type="string" pos:line="21" pos:column="41">", session="<pos:position pos:line="21" pos:column="53"/></literal> <operator pos:line="21" pos:column="54">&lt;&lt;<pos:position pos:line="21" pos:column="62"/></operator> <operator pos:line="21" pos:column="57">(<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">void<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">*<pos:position pos:line="21" pos:column="63"/></operator><operator pos:line="21" pos:column="63">)<pos:position pos:line="21" pos:column="64"/></operator><call><name><name pos:line="21" pos:column="64">serverSession<pos:position pos:line="21" pos:column="77"/></name><operator pos:line="21" pos:column="77">.<pos:position pos:line="21" pos:column="78"/></operator><name pos:line="21" pos:column="78">get<pos:position pos:line="21" pos:column="81"/></name></name><argument_list pos:line="21" pos:column="81">()<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="85"/></expr_stmt>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">USE_OPENSSL<pos:position pos:line="23" pos:column="16"/></name></expr></cpp:if>
    <comment type="line" pos:line="24" pos:column="5">// If CertValidation Helper used do not lookup checklist for errors,</comment>
    <comment type="line" pos:line="25" pos:column="5">// but keep a list of errors to send it to CertValidator</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">Ssl<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">::<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">TheConfig<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">ssl_crt_validator<pos:position pos:line="26" pos:column="42"/></name></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
        <comment type="line" pos:line="27" pos:column="9">// Create the ACL check list now, while we have access to more info.</comment>
        <comment type="line" pos:line="28" pos:column="9">// The list is used in ssl_verify_cb() and is freed in ssl_free().</comment>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<decl><type><name pos:line="29" pos:column="13">acl_access<pos:position pos:line="29" pos:column="23"/></name> <modifier pos:line="29" pos:column="24">*<pos:position pos:line="29" pos:column="25"/></modifier></type><name pos:line="29" pos:column="25">acl<pos:position pos:line="29" pos:column="28"/></name> <init pos:line="29" pos:column="29">= <expr><name><operator pos:line="29" pos:column="31">::<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">Config<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">.<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="40">ssl_client<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">.<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="51">cert_error<pos:position pos:line="29" pos:column="61"/></name></name></expr></init></decl>)<pos:position pos:line="29" pos:column="62"/></condition><then pos:line="29" pos:column="62"> <block pos:line="29" pos:column="63">{
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">ACLFilledChecklist<pos:position pos:line="30" pos:column="31"/></name> <modifier pos:line="30" pos:column="32">*<pos:position pos:line="30" pos:column="33"/></modifier></type><name pos:line="30" pos:column="33">check<pos:position pos:line="30" pos:column="38"/></name> <init pos:line="30" pos:column="39">= <expr><operator pos:line="30" pos:column="41">new<pos:position pos:line="30" pos:column="44"/></operator> <call><name pos:line="30" pos:column="45">ACLFilledChecklist<pos:position pos:line="30" pos:column="63"/></name><argument_list pos:line="30" pos:column="63">(<argument><expr><name pos:line="30" pos:column="64">acl<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><call><name><name pos:line="30" pos:column="69">request<pos:position pos:line="30" pos:column="76"/></name><operator pos:line="30" pos:column="76">.<pos:position pos:line="30" pos:column="77"/></operator><name pos:line="30" pos:column="77">getRaw<pos:position pos:line="30" pos:column="83"/></name></name><argument_list pos:line="30" pos:column="83">()<pos:position pos:line="30" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="87">dash_str<pos:position pos:line="30" pos:column="95"/></name></expr></argument>)<pos:position pos:line="30" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="97"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">check<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">al<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">al<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
            <comment type="line" pos:line="32" pos:column="13">// check-&gt;fd(fd); XXX: need client FD here</comment>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">SSL_set_ex_data<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><call><name><name pos:line="33" pos:column="29">serverSession<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">.<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">get<pos:position pos:line="33" pos:column="46"/></name></name><argument_list pos:line="33" pos:column="46">()<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">ssl_ex_index_cert_error_check<pos:position pos:line="33" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="81">check<pos:position pos:line="33" pos:column="86"/></name></expr></argument>)<pos:position pos:line="33" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="88"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="38" pos:column="5">return <expr><literal type="boolean" pos:line="38" pos:column="12">true<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

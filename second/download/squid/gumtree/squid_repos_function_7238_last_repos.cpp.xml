<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7238_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Mem<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PageStack<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">SharedMemorySize<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">uint32_t<pos:position pos:line="2" pos:column="53"/></name></type></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">unsigned<pos:position pos:line="2" pos:column="69"/></name> <name pos:line="2" pos:column="70">int<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">capacity<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="84">const<pos:position pos:line="2" pos:column="89"/></specifier> <name pos:line="2" pos:column="90">size_t<pos:position pos:line="2" pos:column="96"/></name></type> <name pos:line="2" pos:column="97">pageSize<pos:position pos:line="2" pos:column="105"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="106"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">size_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">levelsSize<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name><name pos:line="4" pos:column="31">PageId<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">::<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">maxPurpose<pos:position pos:line="4" pos:column="49"/></name></name> <operator pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></operator> <sizeof pos:line="4" pos:column="52">sizeof<argument_list pos:line="4" pos:column="58">(<argument><expr><name><name pos:line="4" pos:column="59">std<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">::<pos:position pos:line="4" pos:column="64"/></operator><name><name pos:line="4" pos:column="64">atomic<pos:position pos:line="4" pos:column="70"/></name><argument_list type="generic" pos:line="4" pos:column="70">&lt;<argument><expr><name><name pos:line="4" pos:column="71">Ipc<pos:position pos:line="4" pos:column="74"/></name><operator pos:line="4" pos:column="74">::<pos:position pos:line="4" pos:column="76"/></operator><name pos:line="4" pos:column="76">Mem<pos:position pos:line="4" pos:column="79"/></name><operator pos:line="4" pos:column="79">::<pos:position pos:line="4" pos:column="81"/></operator><name pos:line="4" pos:column="81">PageStack<pos:position pos:line="4" pos:column="90"/></name><operator pos:line="4" pos:column="90">::<pos:position pos:line="4" pos:column="92"/></operator><name pos:line="4" pos:column="92">Value<pos:position pos:line="4" pos:column="97"/></name></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="101"/></argument_list></name></name></expr></argument>)<pos:position pos:line="4" pos:column="99"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="100"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">size_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">pagesDataSize<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">capacity<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></operator> <name pos:line="5" pos:column="45">pageSize<pos:position pos:line="5" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
    <return pos:line="6" pos:column="5">return <expr><call><name pos:line="6" pos:column="12">StackSize<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">capacity<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call> <operator pos:line="6" pos:column="32">+<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">pagesDataSize<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">+<pos:position pos:line="6" pos:column="49"/></operator> <name pos:line="6" pos:column="50">levelsSize<pos:position pos:line="6" pos:column="60"/></name></expr>;<pos:position pos:line="6" pos:column="61"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7626_squid-3.5.27.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">print_double_string<pos:position pos:line="2" pos:column="20"/></name><argument_list pos:line="2" pos:column="20">(<argument><expr><name pos:line="2" pos:column="21">where<pos:position pos:line="2" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="28">string1<pos:position pos:line="2" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="37">size1<pos:position pos:line="2" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="44">string2<pos:position pos:line="2" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="53">size2<pos:position pos:line="2" pos:column="58"/></name></expr></argument>)<pos:position pos:line="2" pos:column="59"/></argument_list>
const <name pos:line="3" pos:column="7">char<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier><name pos:line="3" pos:column="13">where<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="4" pos:column="1">const<pos:position pos:line="4" pos:column="6"/></specifier> <name pos:line="4" pos:column="7">char<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">string1<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="5" pos:column="1">const<pos:position pos:line="5" pos:column="6"/></specifier> <name pos:line="5" pos:column="7">char<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">string2<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">size1<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">int<pos:position pos:line="7" pos:column="4"/></name></type> <name pos:line="7" pos:column="5">size2<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">this_char<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">where<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">printf<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"(null)"<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">FIRST_STRING_P<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">where<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <block pos:line="14" pos:column="36">{
            <for pos:line="15" pos:column="13">for <control pos:line="15" pos:column="17">(<init><expr><name pos:line="15" pos:column="18">this_char<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">where<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">-<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">string1<pos:position pos:line="15" pos:column="45"/></name></expr>;<pos:position pos:line="15" pos:column="46"/></init> <condition><expr><name pos:line="15" pos:column="47">this_char<pos:position pos:line="15" pos:column="56"/></name> <operator pos:line="15" pos:column="57">&lt;<pos:position pos:line="15" pos:column="61"/></operator> <name pos:line="15" pos:column="59">size1<pos:position pos:line="15" pos:column="64"/></name></expr>;<pos:position pos:line="15" pos:column="65"/></condition> <incr><expr><name pos:line="15" pos:column="66">this_char<pos:position pos:line="15" pos:column="75"/></name><operator pos:line="15" pos:column="75">++<pos:position pos:line="15" pos:column="77"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="78"/></control>
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">printchar<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name><name pos:line="16" pos:column="27">string1<pos:position pos:line="16" pos:column="34"/></name><index pos:line="16" pos:column="34">[<expr><name pos:line="16" pos:column="35">this_char<pos:position pos:line="16" pos:column="44"/></name></expr>]<pos:position pos:line="16" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt></block></for>

            <expr_stmt><expr><name pos:line="18" pos:column="13">where<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">string2<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">this_char<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">where<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">-<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">string2<pos:position pos:line="20" pos:column="41"/></name></expr>;<pos:position pos:line="20" pos:column="42"/></init> <condition><expr><name pos:line="20" pos:column="43">this_char<pos:position pos:line="20" pos:column="52"/></name> <operator pos:line="20" pos:column="53">&lt;<pos:position pos:line="20" pos:column="57"/></operator> <name pos:line="20" pos:column="55">size2<pos:position pos:line="20" pos:column="60"/></name></expr>;<pos:position pos:line="20" pos:column="61"/></condition> <incr><expr><name pos:line="20" pos:column="62">this_char<pos:position pos:line="20" pos:column="71"/></name><operator pos:line="20" pos:column="71">++<pos:position pos:line="20" pos:column="73"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="74"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">printchar<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name><name pos:line="21" pos:column="23">string2<pos:position pos:line="21" pos:column="30"/></name><index pos:line="21" pos:column="30">[<expr><name pos:line="21" pos:column="31">this_char<pos:position pos:line="21" pos:column="40"/></name></expr>]<pos:position pos:line="21" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt></block></for>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
}<pos:position pos:line="23" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5375_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Client<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">handleAdaptationCompleted<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">11<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <literal type="string" pos:line="4" pos:column="26">"handleAdaptationCompleted"<pos:position pos:line="4" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">cleanAdaptation<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">()<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>

    <comment type="line" pos:line="7" pos:column="5">// We stop reading origin response because we have no place to put it(*) and</comment>
    <comment type="line" pos:line="8" pos:column="5">// cannot use it. If some origin servers do not like that or if we want to</comment>
    <comment type="line" pos:line="9" pos:column="5">// reuse more pconns, we can add code to discard unneeded origin responses.</comment>
    <comment type="line" pos:line="10" pos:column="5">// (*) TODO: Is it possible that the adaptation xaction is still running?</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">mayReadVirginReplyBody<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">()<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">11<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="19">3<pos:position pos:line="12" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="22">HERE<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&lt;&lt;<pos:position pos:line="12" pos:column="35"/></operator> <literal type="string" pos:line="12" pos:column="30">"closing origin conn due to ICAP completion"<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">closeServer<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">()<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">completeForwarding<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">()<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

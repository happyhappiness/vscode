<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1101_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ICP2State<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">created<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">newEntry<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">entry<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><ternary><condition><expr><call><name><name pos:line="4" pos:column="25">newEntry<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">isNull<pos:position pos:line="4" pos:column="41"/></name></name> <argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr> ?<pos:position pos:line="4" pos:column="46"/></condition><then pos:line="4" pos:column="46"> <expr><name pos:line="4" pos:column="47">NULL<pos:position pos:line="4" pos:column="51"/></name></expr> <pos:position pos:line="4" pos:column="52"/></then><else pos:line="4" pos:column="52">: <expr><name pos:line="4" pos:column="54">newEntry<pos:position pos:line="4" pos:column="62"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">12<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">5<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"icpHandleIcpV2: OPCODE "<pos:position pos:line="5" pos:column="44"/></literal> <operator pos:line="5" pos:column="45">&lt;&lt;<pos:position pos:line="5" pos:column="53"/></operator> <name><name pos:line="5" pos:column="48">icp_opcode_str<pos:position pos:line="5" pos:column="62"/></name><index pos:line="5" pos:column="62">[<expr><name><name pos:line="5" pos:column="63">header<pos:position pos:line="5" pos:column="69"/></name><operator pos:line="5" pos:column="69">.<pos:position pos:line="5" pos:column="70"/></operator><name pos:line="5" pos:column="70">opcode<pos:position pos:line="5" pos:column="76"/></name></name></expr>]<pos:position pos:line="5" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="79"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">icp_opcode<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">codeToSend<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">icpCheckUdpHit<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">entry<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">request<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <block pos:line="8" pos:column="41">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">codeToSend<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">ICP_HIT<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <else pos:line="10" pos:column="7">else <block pos:line="10" pos:column="12">{
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">USE_ICMP<pos:position pos:line="11" pos:column="13"/></name></expr></cpp:if>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">Config<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">onoff<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">test_reachability<pos:position pos:line="12" pos:column="43"/></name></name> <operator pos:line="12" pos:column="44">&amp;&amp;<pos:position pos:line="12" pos:column="54"/></operator> <name pos:line="12" pos:column="47">rtt<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">==<pos:position pos:line="12" pos:column="53"/></operator> <literal type="number" pos:line="12" pos:column="54">0<pos:position pos:line="12" pos:column="55"/></literal></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">rtt<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">netdbHostRtt<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><call><name><name pos:line="13" pos:column="37">request<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">url<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">.<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">host<pos:position pos:line="13" pos:column="54"/></name></name><argument_list pos:line="13" pos:column="54">()<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call><operator pos:line="13" pos:column="57">)<pos:position pos:line="13" pos:column="58"/></operator> <operator pos:line="13" pos:column="59">==<pos:position pos:line="13" pos:column="61"/></operator> <literal type="number" pos:line="13" pos:column="62">0<pos:position pos:line="13" pos:column="63"/></literal></expr>)<pos:position pos:line="13" pos:column="64"/></condition><then pos:line="13" pos:column="64">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">netdbPingSite<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><call><name><name pos:line="14" pos:column="31">request<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">url<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">host<pos:position pos:line="14" pos:column="48"/></name></name><argument_list pos:line="14" pos:column="48">()<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt></block></then></if>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="16" pos:column="8">/* USE_ICMP */</comment>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">icpGetCommonOpcode<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">()<pos:position pos:line="18" pos:column="33"/></argument_list></call> <operator pos:line="18" pos:column="34">!=<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">ICP_ERR<pos:position pos:line="18" pos:column="44"/></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="13">codeToSend<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">icpGetCommonOpcode<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">()<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt></block></then>
        <elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><name><name pos:line="20" pos:column="18">Config<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">onoff<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">.<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="31">test_reachability<pos:position pos:line="20" pos:column="48"/></name></name> <operator pos:line="20" pos:column="49">&amp;&amp;<pos:position pos:line="20" pos:column="59"/></operator> <name pos:line="20" pos:column="52">rtt<pos:position pos:line="20" pos:column="55"/></name> <operator pos:line="20" pos:column="56">==<pos:position pos:line="20" pos:column="58"/></operator> <literal type="number" pos:line="20" pos:column="59">0<pos:position pos:line="20" pos:column="60"/></literal></expr>)<pos:position pos:line="20" pos:column="61"/></condition><then pos:line="20" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="13">codeToSend<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">ICP_MISS_NOFETCH<pos:position pos:line="21" pos:column="42"/></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt></block></then></if></elseif>
        <else pos:line="22" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">codeToSend<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">ICP_MISS<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt></block></else></if>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">icpCreateAndSend<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">codeToSend<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">flags<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">url<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="46">header<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">.<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">reqnum<pos:position pos:line="26" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">src_rtt<pos:position pos:line="26" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="70">fd<pos:position pos:line="26" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="74">from<pos:position pos:line="26" pos:column="78"/></name></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="27" pos:column="5">delete<pos:position pos:line="27" pos:column="11"/></operator> <name pos:line="27" pos:column="12">this<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

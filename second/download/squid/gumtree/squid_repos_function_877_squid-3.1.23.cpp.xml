<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_877_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnectStateData<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">connect<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">defaults<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">()<pos:position pos:line="4" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">5<pos:position pos:line="6" pos:column="13"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="14">5<pos:position pos:line="6" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="17">HERE<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">&lt;&lt;<pos:position pos:line="6" pos:column="30"/></operator> <literal type="string" pos:line="6" pos:column="25">"to "<pos:position pos:line="6" pos:column="30"/></literal> <operator pos:line="6" pos:column="31">&lt;&lt;<pos:position pos:line="6" pos:column="39"/></operator> <name pos:line="6" pos:column="34">S<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>

    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">comm_connect_addr<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">fd<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">S<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr> )<pos:position pos:line="8" pos:column="39"/></condition> <block pos:line="8" pos:column="40">{

    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">COMM_INPROGRESS<pos:position pos:line="10" pos:column="25"/></name></expr>:<pos:position pos:line="10" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">5<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="19">5<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="22">HERE<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&lt;&lt;<pos:position pos:line="11" pos:column="35"/></operator> <literal type="string" pos:line="11" pos:column="30">"FD "<pos:position pos:line="11" pos:column="35"/></literal> <operator pos:line="11" pos:column="36">&lt;&lt;<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="39">fd<pos:position pos:line="11" pos:column="41"/></name> <operator pos:line="11" pos:column="42">&lt;&lt;<pos:position pos:line="11" pos:column="50"/></operator> <literal type="string" pos:line="11" pos:column="45">": COMM_INPROGRESS"<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">commSetSelect<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">fd<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">COMM_SELECT_WRITE<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="46">ConnectStateData<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">::<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="64">Connect<pos:position pos:line="12" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="73">this<pos:position pos:line="12" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="79">0<pos:position pos:line="12" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="82"/></expr_stmt>
        <break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break>

    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">COMM_OK<pos:position pos:line="15" pos:column="17"/></name></expr>:<pos:position pos:line="15" pos:column="18"/></case>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">5<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="19">5<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">HERE<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&lt;&lt;<pos:position pos:line="16" pos:column="35"/></operator> <literal type="string" pos:line="16" pos:column="30">"FD "<pos:position pos:line="16" pos:column="35"/></literal> <operator pos:line="16" pos:column="36">&lt;&lt;<pos:position pos:line="16" pos:column="44"/></operator> <name pos:line="16" pos:column="39">fd<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">&lt;&lt;<pos:position pos:line="16" pos:column="50"/></operator> <literal type="string" pos:line="16" pos:column="45">": COMM_OK - connected"<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ipcacheMarkGoodAddr<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">host<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">S<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">callCallback<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">COMM_OK<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>

    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">COMM_ERR_PROTOCOL<pos:position pos:line="21" pos:column="27"/></name></expr>:<pos:position pos:line="21" pos:column="28"/></case>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">5<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="19">5<pos:position pos:line="22" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">HERE<pos:position pos:line="22" pos:column="26"/></name> <literal type="string" pos:line="22" pos:column="27">"FD "<pos:position pos:line="22" pos:column="32"/></literal> <operator pos:line="22" pos:column="33">&lt;&lt;<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="36">fd<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">&lt;&lt;<pos:position pos:line="22" pos:column="47"/></operator> <literal type="string" pos:line="22" pos:column="42">": COMM_ERR_PROTOCOL - try again"<pos:position pos:line="22" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
        <comment type="block" pos:line="23" pos:column="9">/* problem using the desired protocol over this socket.
         * skip to the next address and hope it's more compatible
         * but do not mark the current address as bad
         */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">tries<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">++<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">commRetryConnect<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">()<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32"> <block pos:line="28" pos:column="33">{
            <comment type="block" pos:line="29" pos:column="13">/* Force an addr cycle to move forward to the next possible address */</comment>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">ipcacheCycleAddr<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">host<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">NULL<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">eventAdd<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><literal type="string" pos:line="31" pos:column="22">"commReconnect"<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">commReconnect<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">this<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="31" pos:column="60">this<pos:position pos:line="31" pos:column="64"/></name><operator pos:line="31" pos:column="64">-&gt;<pos:position pos:line="31" pos:column="69"/></operator><name pos:line="31" pos:column="66">addrcount<pos:position pos:line="31" pos:column="75"/></name></name> <operator pos:line="31" pos:column="76">==<pos:position pos:line="31" pos:column="78"/></operator> <literal type="number" pos:line="31" pos:column="79">1<pos:position pos:line="31" pos:column="80"/></literal></expr> ?<pos:position pos:line="31" pos:column="82"/></condition><then pos:line="31" pos:column="82"> <expr><literal type="number" pos:line="31" pos:column="83">0.05<pos:position pos:line="31" pos:column="87"/></literal></expr> <pos:position pos:line="31" pos:column="88"/></then><else pos:line="31" pos:column="88">: <expr><literal type="number" pos:line="31" pos:column="90">0.0<pos:position pos:line="31" pos:column="93"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="95">0<pos:position pos:line="31" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="98"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">debugs<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="number" pos:line="33" pos:column="20">5<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="23">5<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="26">HERE<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">&lt;&lt;<pos:position pos:line="33" pos:column="39"/></operator> <literal type="string" pos:line="33" pos:column="34">"FD "<pos:position pos:line="33" pos:column="39"/></literal> <operator pos:line="33" pos:column="40">&lt;&lt;<pos:position pos:line="33" pos:column="48"/></operator> <name pos:line="33" pos:column="43">fd<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">&lt;&lt;<pos:position pos:line="33" pos:column="54"/></operator> <literal type="string" pos:line="33" pos:column="49">": COMM_ERR_PROTOCOL - ERR tried too many times already."<pos:position pos:line="33" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="108"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">callCallback<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">COMM_ERR_CONNECT<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">errno<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></else></if>
        <break pos:line="36" pos:column="9">break;<pos:position pos:line="36" pos:column="15"/></break>

    <default pos:line="38" pos:column="5">default:<pos:position pos:line="38" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">debugs<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="number" pos:line="39" pos:column="16">5<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="19">5<pos:position pos:line="39" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="22">HERE<pos:position pos:line="39" pos:column="26"/></name> <literal type="string" pos:line="39" pos:column="27">"FD "<pos:position pos:line="39" pos:column="32"/></literal> <operator pos:line="39" pos:column="33">&lt;&lt;<pos:position pos:line="39" pos:column="41"/></operator> <name pos:line="39" pos:column="36">fd<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">&lt;&lt;<pos:position pos:line="39" pos:column="47"/></operator> <literal type="string" pos:line="39" pos:column="42">": * - try again"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">tries<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">++<pos:position pos:line="40" pos:column="16"/></operator></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ipcacheMarkBadAddr<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">host<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">S<pos:position pos:line="41" pos:column="35"/></name></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>

<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">USE_ICMP<pos:position pos:line="43" pos:column="13"/></name></expr></cpp:if>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">Config<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">onoff<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">.<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="26">test_reachability<pos:position pos:line="44" pos:column="43"/></name></name></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="13">netdbDeleteAddrNetwork<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">S<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">commRetryConnect<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">()<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32"> <block pos:line="48" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">eventAdd<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><literal type="string" pos:line="49" pos:column="22">"commReconnect"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">commReconnect<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">this<pos:position pos:line="49" pos:column="58"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="49" pos:column="60">this<pos:position pos:line="49" pos:column="64"/></name><operator pos:line="49" pos:column="64">-&gt;<pos:position pos:line="49" pos:column="69"/></operator><name pos:line="49" pos:column="66">addrcount<pos:position pos:line="49" pos:column="75"/></name></name> <operator pos:line="49" pos:column="76">==<pos:position pos:line="49" pos:column="78"/></operator> <literal type="number" pos:line="49" pos:column="79">1<pos:position pos:line="49" pos:column="80"/></literal></expr> ?<pos:position pos:line="49" pos:column="82"/></condition><then pos:line="49" pos:column="82"> <expr><literal type="number" pos:line="49" pos:column="83">0.05<pos:position pos:line="49" pos:column="87"/></literal></expr> <pos:position pos:line="49" pos:column="88"/></then><else pos:line="49" pos:column="88">: <expr><literal type="number" pos:line="49" pos:column="90">0.0<pos:position pos:line="49" pos:column="93"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="95">0<pos:position pos:line="49" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="98"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then> <else pos:line="50" pos:column="11">else <block pos:line="50" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">debugs<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="number" pos:line="51" pos:column="20">5<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="23">5<pos:position pos:line="51" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="26">HERE<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&lt;&lt;<pos:position pos:line="51" pos:column="39"/></operator> <literal type="string" pos:line="51" pos:column="34">"FD "<pos:position pos:line="51" pos:column="39"/></literal> <operator pos:line="51" pos:column="40">&lt;&lt;<pos:position pos:line="51" pos:column="48"/></operator> <name pos:line="51" pos:column="43">fd<pos:position pos:line="51" pos:column="45"/></name> <operator pos:line="51" pos:column="46">&lt;&lt;<pos:position pos:line="51" pos:column="54"/></operator> <literal type="string" pos:line="51" pos:column="49">": * - ERR tried too many times already."<pos:position pos:line="51" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">callCallback<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">COMM_ERR_CONNECT<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">errno<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block></switch>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

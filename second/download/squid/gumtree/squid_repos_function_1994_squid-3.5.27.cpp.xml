<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1994_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerProbeConnect<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">CachePeer<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">p<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">time_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">ctimeout<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><ternary><condition><expr><name><name pos:line="4" pos:column="23">p<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">connect_timeout<pos:position pos:line="4" pos:column="41"/></name></name> <operator pos:line="4" pos:column="42">&gt;<pos:position pos:line="4" pos:column="46"/></operator> <literal type="number" pos:line="4" pos:column="44">0<pos:position pos:line="4" pos:column="45"/></literal></expr> ?<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47"> <expr><name><name pos:line="4" pos:column="48">p<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">-&gt;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="51">connect_timeout<pos:position pos:line="4" pos:column="66"/></name></name></expr> <pos:position pos:line="4" pos:column="67"/></then><else pos:line="4" pos:column="67">: <expr><name><name pos:line="4" pos:column="69">Config<pos:position pos:line="4" pos:column="75"/></name><operator pos:line="4" pos:column="75">.<pos:position pos:line="4" pos:column="76"/></operator><name pos:line="4" pos:column="76">Timeout<pos:position pos:line="4" pos:column="83"/></name><operator pos:line="4" pos:column="83">.<pos:position pos:line="4" pos:column="84"/></operator><name pos:line="4" pos:column="84">peer_connect<pos:position pos:line="4" pos:column="96"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="97"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">bool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ret<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">squid_curtime<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">-<pos:position pos:line="5" pos:column="32"/></operator> <name><name pos:line="5" pos:column="33">p<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">stats<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">last_connect_failure<pos:position pos:line="5" pos:column="62"/></name></name><operator pos:line="5" pos:column="62">)<pos:position pos:line="5" pos:column="63"/></operator> <operator pos:line="5" pos:column="64">&gt;<pos:position pos:line="5" pos:column="68"/></operator> <operator pos:line="5" pos:column="66">(<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="67">ctimeout<pos:position pos:line="5" pos:column="75"/></name> <operator pos:line="5" pos:column="76">*<pos:position pos:line="5" pos:column="77"/></operator> <literal type="number" pos:line="5" pos:column="78">10<pos:position pos:line="5" pos:column="80"/></literal><operator pos:line="5" pos:column="80">)<pos:position pos:line="5" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="82"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">testing_now<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">&gt;<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">ret<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></return></block></then></if><comment type="block" pos:line="8" pos:column="20">/* probe already running */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">squid_curtime<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">-<pos:position pos:line="10" pos:column="24"/></operator> <name><name pos:line="10" pos:column="25">p<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">stats<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">.<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">last_connect_probe<pos:position pos:line="10" pos:column="52"/></name></name> <operator pos:line="10" pos:column="53">==<pos:position pos:line="10" pos:column="55"/></operator> <literal type="number" pos:line="10" pos:column="56">0<pos:position pos:line="10" pos:column="57"/></literal></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">ret<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return></block></then></if><comment type="block" pos:line="11" pos:column="20">/* don't probe to often */</comment>

    <comment type="block" pos:line="13" pos:column="5">/* for each IP address of this CachePeer. find one that we can connect to and probe it. */</comment>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><decl><type><name pos:line="14" pos:column="10">int<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <init pos:line="14" pos:column="16">= <expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">n_addresses<pos:position pos:line="14" pos:column="39"/></name></name></expr>;<pos:position pos:line="14" pos:column="40"/></condition> <incr><expr><operator pos:line="14" pos:column="41">++<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">i<pos:position pos:line="14" pos:column="44"/></name></expr></incr>)<pos:position pos:line="14" pos:column="45"/></control> <block pos:line="14" pos:column="46">{
        <decl_stmt><decl><type><name><name pos:line="15" pos:column="9">Comm<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">::<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">ConnectionPointer<pos:position pos:line="15" pos:column="32"/></name></name></type> <name pos:line="15" pos:column="33">conn<pos:position pos:line="15" pos:column="37"/></name> <init pos:line="15" pos:column="38">= <expr><operator pos:line="15" pos:column="40">new<pos:position pos:line="15" pos:column="43"/></operator> <name><name pos:line="15" pos:column="44">Comm<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">::<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">Connection<pos:position pos:line="15" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="61"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">conn<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">remote<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="24">p<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">addresses<pos:position pos:line="16" pos:column="36"/></name><index pos:line="16" pos:column="36">[<expr><name pos:line="16" pos:column="37">i<pos:position pos:line="16" pos:column="38"/></name></expr>]<pos:position pos:line="16" pos:column="39"/></index></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">conn<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">remote<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">port<pos:position pos:line="17" pos:column="26"/></name></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">p<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">http_port<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">conn<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">setPeer<pos:position pos:line="18" pos:column="22"/></name></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">p<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">getOutgoingAddress<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">conn<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="21" pos:column="9">++<pos:position pos:line="21" pos:column="11"/></operator> <name><name pos:line="21" pos:column="12">p<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">testing_now<pos:position pos:line="21" pos:column="26"/></name></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>

        <decl_stmt><decl><type><name><name pos:line="23" pos:column="9">AsyncCall<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">::<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">Pointer<pos:position pos:line="23" pos:column="27"/></name></name></type> <name pos:line="23" pos:column="28">call<pos:position pos:line="23" pos:column="32"/></name> <init pos:line="23" pos:column="33">= <expr><call><name pos:line="23" pos:column="35">commCbCall<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><literal type="number" pos:line="23" pos:column="46">15<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="23" pos:column="49">3<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="52">"peerProbeConnectDone"<pos:position pos:line="23" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="76">CommConnectCbPtrFun<pos:position pos:line="23" pos:column="95"/></name><argument_list pos:line="23" pos:column="95">(<argument><expr><name pos:line="23" pos:column="96">peerProbeConnectDone<pos:position pos:line="23" pos:column="116"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="118">p<pos:position pos:line="23" pos:column="119"/></name></expr></argument>)<pos:position pos:line="23" pos:column="120"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="121"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="122"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="24" pos:column="9">Comm<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">::<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">ConnOpener<pos:position pos:line="24" pos:column="25"/></name></name> <modifier pos:line="24" pos:column="26">*<pos:position pos:line="24" pos:column="27"/></modifier></type><name pos:line="24" pos:column="27">cs<pos:position pos:line="24" pos:column="29"/></name> <init pos:line="24" pos:column="30">= <expr><operator pos:line="24" pos:column="32">new<pos:position pos:line="24" pos:column="35"/></operator> <call><name><name pos:line="24" pos:column="36">Comm<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">::<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">ConnOpener<pos:position pos:line="24" pos:column="52"/></name></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">conn<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="59">call<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">ctimeout<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="75"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">cs<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">setHost<pos:position pos:line="25" pos:column="20"/></name></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">p<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">host<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">AsyncJob<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">::<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">Start<pos:position pos:line="26" pos:column="24"/></name></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">cs<pos:position pos:line="26" pos:column="27"/></name></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">p<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">stats<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">.<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">last_connect_probe<pos:position pos:line="29" pos:column="32"/></name></name> <operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="35">squid_curtime<pos:position pos:line="29" pos:column="48"/></name></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>

    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">ret<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3064_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">startPeekAndSplice<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// This is the Step2 of the SSL bumping</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">sslServerBump<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Http<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">::<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">StreamPointer<pos:position pos:line="6" pos:column="24"/></name></name></type> <name pos:line="6" pos:column="25">context<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><call><name><name pos:line="6" pos:column="35">pipeline<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">.<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">front<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ClientHttpRequest<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">http<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><ternary><condition><expr><name pos:line="7" pos:column="31">context<pos:position pos:line="7" pos:column="38"/></name></expr> ?<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40"> <expr><name><name pos:line="7" pos:column="41">context<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">http<pos:position pos:line="7" pos:column="54"/></name></name></expr> <pos:position pos:line="7" pos:column="55"/></then><else pos:line="7" pos:column="55">: <expr><literal type="null" pos:line="7" pos:column="57">nullptr<pos:position pos:line="7" pos:column="64"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="65"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">sslServerBump<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">step<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <name><name pos:line="9" pos:column="32">Ssl<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">::<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">bumpStep1<pos:position pos:line="9" pos:column="46"/></name></name></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <block pos:line="9" pos:column="48">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">sslServerBump<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">step<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <name><name pos:line="10" pos:column="31">Ssl<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">::<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">bumpStep2<pos:position pos:line="10" pos:column="45"/></name></name></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
        <comment type="line" pos:line="11" pos:column="9">// Run a accessList check to check if want to splice or continue bumping</comment>

        <decl_stmt><decl><type><name pos:line="13" pos:column="9">ACLFilledChecklist<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">acl_checklist<pos:position pos:line="13" pos:column="42"/></name> <init pos:line="13" pos:column="43">= <expr><operator pos:line="13" pos:column="45">new<pos:position pos:line="13" pos:column="48"/></operator> <call><name pos:line="13" pos:column="49">ACLFilledChecklist<pos:position pos:line="13" pos:column="67"/></name><argument_list pos:line="13" pos:column="67">(<argument><expr><name><name pos:line="13" pos:column="68">Config<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">.<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="75">accessList<pos:position pos:line="13" pos:column="85"/></name><operator pos:line="13" pos:column="85">.<pos:position pos:line="13" pos:column="86"/></operator><name pos:line="13" pos:column="86">ssl_bump<pos:position pos:line="13" pos:column="94"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="96">sslServerBump<pos:position pos:line="13" pos:column="109"/></name><operator pos:line="13" pos:column="109">-&gt;<pos:position pos:line="13" pos:column="114"/></operator><name pos:line="13" pos:column="111">request<pos:position pos:line="13" pos:column="118"/></name><operator pos:line="13" pos:column="118">.<pos:position pos:line="13" pos:column="119"/></operator><name pos:line="13" pos:column="119">getRaw<pos:position pos:line="13" pos:column="125"/></name></name><argument_list pos:line="13" pos:column="125">()<pos:position pos:line="13" pos:column="127"/></argument_list></call></expr></argument>, <argument><expr><literal type="null" pos:line="13" pos:column="129">nullptr<pos:position pos:line="13" pos:column="136"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="137"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="138"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">acl_checklist<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">al<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <ternary><condition><expr><name pos:line="14" pos:column="29">http<pos:position pos:line="14" pos:column="33"/></name></expr> ?<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <expr><name><name pos:line="14" pos:column="36">http<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">al<pos:position pos:line="14" pos:column="44"/></name></name></expr> <pos:position pos:line="14" pos:column="45"/></then><else pos:line="14" pos:column="45">: <expr><literal type="null" pos:line="14" pos:column="47">nullptr<pos:position pos:line="14" pos:column="54"/></literal></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
        <comment type="line" pos:line="15" pos:column="9">//acl_checklist-&gt;src_addr = params.conn-&gt;remote;</comment>
        <comment type="line" pos:line="16" pos:column="9">//acl_checklist-&gt;my_addr = s-&gt;s;</comment>
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">acl_checklist<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">banAction<pos:position pos:line="17" pos:column="33"/></name></name><argument_list pos:line="17" pos:column="33">(<argument><expr><call><name pos:line="17" pos:column="34">allow_t<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">ACCESS_ALLOWED<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="58">Ssl<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">::<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="63">bumpNone<pos:position pos:line="17" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">acl_checklist<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">banAction<pos:position pos:line="18" pos:column="33"/></name></name><argument_list pos:line="18" pos:column="33">(<argument><expr><call><name pos:line="18" pos:column="34">allow_t<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">ACCESS_ALLOWED<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="58">Ssl<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">::<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="63">bumpClientFirst<pos:position pos:line="18" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">acl_checklist<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">banAction<pos:position pos:line="19" pos:column="33"/></name></name><argument_list pos:line="19" pos:column="33">(<argument><expr><call><name pos:line="19" pos:column="34">allow_t<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">ACCESS_ALLOWED<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="58">Ssl<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">::<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="63">bumpServerFirst<pos:position pos:line="19" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">acl_checklist<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">nonBlockingCheck<pos:position pos:line="20" pos:column="40"/></name></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">httpsSslBumpStep2AccessCheckDone<pos:position pos:line="20" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="75">this<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="24" pos:column="5">// will call httpsPeeked() with certificate and connection, eventually</comment>
    <decl_stmt><decl><type><name><name pos:line="25" pos:column="5">Security<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">::<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">ContextPointer<pos:position pos:line="25" pos:column="29"/></name></name></type> <name pos:line="25" pos:column="30">unConfiguredCTX<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><call><name><name pos:line="25" pos:column="46">Ssl<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">::<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">createSSLContext<pos:position pos:line="25" pos:column="67"/></name></name><argument_list pos:line="25" pos:column="67">(<argument><expr><name><name pos:line="25" pos:column="68">port<pos:position pos:line="25" pos:column="72"/></name><operator pos:line="25" pos:column="72">-&gt;<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="74">signingCert<pos:position pos:line="25" pos:column="85"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="87">port<pos:position pos:line="25" pos:column="91"/></name><operator pos:line="25" pos:column="91">-&gt;<pos:position pos:line="25" pos:column="96"/></operator><name pos:line="25" pos:column="93">signPkey<pos:position pos:line="25" pos:column="101"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="103">*<pos:position pos:line="25" pos:column="104"/></operator><name pos:line="25" pos:column="104">port<pos:position pos:line="25" pos:column="108"/></name></expr></argument>)<pos:position pos:line="25" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="110"/></argument_list></decl>;<pos:position pos:line="25" pos:column="111"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">fd_table<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><name><name pos:line="26" pos:column="14">clientConnection<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">fd<pos:position pos:line="26" pos:column="34"/></name></name></expr>]<pos:position pos:line="26" pos:column="35"/></index></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">dynamicTlsContext<pos:position pos:line="26" pos:column="53"/></name> <operator pos:line="26" pos:column="54">=<pos:position pos:line="26" pos:column="55"/></operator> <name pos:line="26" pos:column="56">unConfiguredCTX<pos:position pos:line="26" pos:column="71"/></name></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><call><name pos:line="28" pos:column="10">httpsCreate<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">clientConnection<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">unConfiguredCTX<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57">
        <block type="pseudo"><return pos:line="29" pos:column="9">return;<pos:position pos:line="29" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">switchedToHttps_<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <literal type="boolean" pos:line="31" pos:column="24">true<pos:position pos:line="31" pos:column="28"/></literal></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="33" pos:column="5">auto<pos:position pos:line="33" pos:column="9"/></name></type> <name pos:line="33" pos:column="10">ssl<pos:position pos:line="33" pos:column="13"/></name> <init pos:line="33" pos:column="14">= <expr><name><name pos:line="33" pos:column="16">fd_table<pos:position pos:line="33" pos:column="24"/></name><index pos:line="33" pos:column="24">[<expr><name><name pos:line="33" pos:column="25">clientConnection<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">fd<pos:position pos:line="33" pos:column="45"/></name></name></expr>]<pos:position pos:line="33" pos:column="46"/></index></name><operator pos:line="33" pos:column="46">.<pos:position pos:line="33" pos:column="47"/></operator><call><name><name pos:line="33" pos:column="47">ssl<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">.<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="51">get<pos:position pos:line="33" pos:column="54"/></name></name><argument_list pos:line="33" pos:column="54">()<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">BIO<pos:position pos:line="34" pos:column="8"/></name> <modifier pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></modifier></type><name pos:line="34" pos:column="10">b<pos:position pos:line="34" pos:column="11"/></name> <init pos:line="34" pos:column="12">= <expr><call><name pos:line="34" pos:column="14">SSL_get_rbio<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">ssl<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">Ssl<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">::<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">ClientBio<pos:position pos:line="35" pos:column="19"/></name></name> <modifier pos:line="35" pos:column="20">*<pos:position pos:line="35" pos:column="21"/></modifier></type><name pos:line="35" pos:column="21">bio<pos:position pos:line="35" pos:column="24"/></name> <init pos:line="35" pos:column="25">= <expr><cast type="static" pos:line="35" pos:column="27">static_cast<argument_list type="generic" pos:line="35" pos:column="38">&lt;<argument><expr><name><name pos:line="35" pos:column="39">Ssl<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">::<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="44">ClientBio<pos:position pos:line="35" pos:column="53"/></name></name> <operator pos:line="35" pos:column="54">*<pos:position pos:line="35" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="35" pos:column="59"/></argument_list><argument_list pos:line="35" pos:column="56">(<argument><expr><call><name pos:line="35" pos:column="57">BIO_get_data<pos:position pos:line="35" pos:column="69"/></name><argument_list pos:line="35" pos:column="69">(<argument><expr><name pos:line="35" pos:column="70">b<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="35" pos:column="74"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="36" pos:column="5">bio<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">setReadBufData<pos:position pos:line="36" pos:column="24"/></name></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">inBuf<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">bio<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">hold<pos:position pos:line="37" pos:column="14"/></name></name><argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="boolean" pos:line="37" pos:column="15">true<pos:position pos:line="37" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>

    <comment type="line" pos:line="39" pos:column="5">// Here squid should have all of the client hello message so the</comment>
    <comment type="line" pos:line="40" pos:column="5">// Squid_SSL_accept should return 0;</comment>
    <comment type="line" pos:line="41" pos:column="5">// This block exist only to force openSSL parse client hello and detect</comment>
    <comment type="line" pos:line="42" pos:column="5">// ERR_SECURE_ACCEPT_FAIL error, which should be checked and splice if required.</comment>
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">int<pos:position pos:line="43" pos:column="8"/></name></type> <name pos:line="43" pos:column="9">ret<pos:position pos:line="43" pos:column="12"/></name> <init pos:line="43" pos:column="13">= <expr><literal type="number" pos:line="43" pos:column="15">0<pos:position pos:line="43" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="17"/></decl_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">ret<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">Squid_SSL_accept<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">this<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">NULL<pos:position pos:line="44" pos:column="43"/></name></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call><operator pos:line="44" pos:column="44">)<pos:position pos:line="44" pos:column="45"/></operator> <operator pos:line="44" pos:column="46">&lt;<pos:position pos:line="44" pos:column="50"/></operator> <literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal></expr>)<pos:position pos:line="44" pos:column="50"/></condition><then pos:line="44" pos:column="50"> <block pos:line="44" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">debugs<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="number" pos:line="45" pos:column="16">83<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="20">2<pos:position pos:line="45" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="23">"SSL_accept failed."<pos:position pos:line="45" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="46" pos:column="9">HttpRequest<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">::<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">Pointer<pos:position pos:line="46" pos:column="29"/></name></name></type> <name pos:line="46" pos:column="30">request<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><ternary><condition><expr><name pos:line="46" pos:column="38">http<pos:position pos:line="46" pos:column="42"/></name></expr> ?<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44"> <expr><name><name pos:line="46" pos:column="45">http<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">request<pos:position pos:line="46" pos:column="58"/></name></name></expr> <pos:position pos:line="46" pos:column="59"/></then><else pos:line="46" pos:column="59">: <expr><literal type="null" pos:line="46" pos:column="61">nullptr<pos:position pos:line="46" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></decl>;<pos:position pos:line="46" pos:column="70"/></decl_stmt>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><call><name pos:line="47" pos:column="14">clientTunnelOnError<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">this<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">context<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">request<pos:position pos:line="47" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="58">HttpRequestMethod<pos:position pos:line="47" pos:column="75"/></name><argument_list pos:line="47" pos:column="75">()<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="79">ERR_SECURE_ACCEPT_FAIL<pos:position pos:line="47" pos:column="101"/></name></expr></argument>)<pos:position pos:line="47" pos:column="102"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="103"/></condition><then pos:line="47" pos:column="103">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="48" pos:column="13">clientConnection<pos:position pos:line="48" pos:column="29"/></name><operator pos:line="48" pos:column="29">-&gt;<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="31">close<pos:position pos:line="48" pos:column="36"/></name></name><argument_list pos:line="48" pos:column="36">()<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt></block></then></if>
        <return pos:line="49" pos:column="9">return;<pos:position pos:line="49" pos:column="16"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="52" pos:column="5">// We need to reset inBuf here, to be used by incoming requests in the case</comment>
    <comment type="line" pos:line="53" pos:column="5">// of SSL bump</comment>
    <expr_stmt><expr><call><name><name pos:line="54" pos:column="5">inBuf<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">.<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">clear<pos:position pos:line="54" pos:column="16"/></name></name><argument_list pos:line="54" pos:column="16">()<pos:position pos:line="54" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">debugs<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><literal type="number" pos:line="56" pos:column="12">83<pos:position pos:line="56" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="16">5<pos:position pos:line="56" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="19">"Peek and splice at step2 done. Start forwarding the request!!! "<pos:position pos:line="56" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="57" pos:column="5">FwdState<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">::<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">Start<pos:position pos:line="57" pos:column="20"/></name></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">clientConnection<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="39">sslServerBump<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">entry<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="57" pos:column="61">sslServerBump<pos:position pos:line="57" pos:column="74"/></name><operator pos:line="57" pos:column="74">-&gt;<pos:position pos:line="57" pos:column="79"/></operator><name pos:line="57" pos:column="76">request<pos:position pos:line="57" pos:column="83"/></name><operator pos:line="57" pos:column="83">.<pos:position pos:line="57" pos:column="84"/></operator><name pos:line="57" pos:column="84">getRaw<pos:position pos:line="57" pos:column="90"/></name></name><argument_list pos:line="57" pos:column="90">()<pos:position pos:line="57" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="57" pos:column="94">http<pos:position pos:line="57" pos:column="98"/></name></expr> ?<pos:position pos:line="57" pos:column="100"/></condition><then pos:line="57" pos:column="100"> <expr><name><name pos:line="57" pos:column="101">http<pos:position pos:line="57" pos:column="105"/></name><operator pos:line="57" pos:column="105">-&gt;<pos:position pos:line="57" pos:column="110"/></operator><name pos:line="57" pos:column="107">al<pos:position pos:line="57" pos:column="109"/></name></name></expr> <pos:position pos:line="57" pos:column="110"/></then><else pos:line="57" pos:column="110">: <expr><name pos:line="57" pos:column="112">NULL<pos:position pos:line="57" pos:column="116"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="57" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="118"/></expr_stmt>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

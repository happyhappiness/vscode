<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3448_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientSocketContext<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">sendStartOfMessage<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name pos:line="2" pos:column="41">HttpReply<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">rep<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">StoreIOBuffer<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">bodyData<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">prepareReply<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">rep<pos:position pos:line="4" pos:column="21"/></name></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">rep<pos:position pos:line="5" pos:column="16"/></name></expr></argument>)<pos:position pos:line="5" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">MemBuf<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">mb<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><call><name><name pos:line="6" pos:column="18">rep<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">pack<pos:position pos:line="6" pos:column="27"/></name></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* Save length of headers for persistent conn checks */</comment>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">http<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">out<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">headers_sz<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <call><name><name pos:line="8" pos:column="28">mb<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">contentSize<pos:position pos:line="8" pos:column="43"/></name></name><argument_list pos:line="8" pos:column="43">()<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">HEADERS_LOG<pos:position pos:line="9" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">headersLog<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="22">http<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">request<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">method<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">rep<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">bodyData<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">data<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">&amp;&amp;<pos:position pos:line="14" pos:column="33"/></operator> <name><name pos:line="14" pos:column="26">bodyData<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">.<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">length<pos:position pos:line="14" pos:column="41"/></name></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">multipartRangeRequest<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">()<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38"> <block pos:line="15" pos:column="39">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">size_t<pos:position pos:line="16" pos:column="19"/></name></type> <name pos:line="16" pos:column="20">length<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><call><name pos:line="16" pos:column="29">lengthToSend<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><call><name><name pos:line="16" pos:column="42">bodyData<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">.<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">range<pos:position pos:line="16" pos:column="56"/></name></name><argument_list pos:line="16" pos:column="56">()<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="60"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">noteSentBodyBytes<pos:position pos:line="17" pos:column="30"/></name> <argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">length<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">mb<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">append<pos:position pos:line="19" pos:column="23"/></name></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name><name pos:line="19" pos:column="24">bodyData<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">.<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">data<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">length<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">packRange<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">bodyData<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">mb<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></else></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* write */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">33<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="26" pos:column="15">7<pos:position pos:line="26" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="18">HERE<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;&lt;<pos:position pos:line="26" pos:column="31"/></operator> <literal type="string" pos:line="26" pos:column="26">"sendStartOfMessage schedules clientWriteComplete"<pos:position pos:line="26" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="27" pos:column="5">AsyncCall<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">::<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">Pointer<pos:position pos:line="27" pos:column="23"/></name></name></type> <name pos:line="27" pos:column="24">call<pos:position pos:line="27" pos:column="28"/></name> <init pos:line="27" pos:column="29">= <expr><call><name pos:line="27" pos:column="31">commCbCall<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><literal type="number" pos:line="27" pos:column="42">33<pos:position pos:line="27" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="46">5<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="49">"clientWriteComplete"<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>,
                                         <argument><expr><call><name pos:line="28" pos:column="42">CommIoCbPtrFun<pos:position pos:line="28" pos:column="56"/></name><argument_list pos:line="28" pos:column="56">(<argument><expr><name pos:line="28" pos:column="57">clientWriteComplete<pos:position pos:line="28" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="78">this<pos:position pos:line="28" pos:column="82"/></name></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="85"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">comm_write_mbuf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><call><name pos:line="29" pos:column="21">fd<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">()<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">mb<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">call<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="31" pos:column="5">delete<pos:position pos:line="31" pos:column="11"/></operator> <name pos:line="31" pos:column="12">mb<pos:position pos:line="31" pos:column="14"/></name></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5270_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">netdbSaveState<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">foo<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">strcmp<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name><name pos:line="4" pos:column="16">Config<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">netdbFilename<pos:position pos:line="4" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="38">"none"<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call> <operator pos:line="4" pos:column="46">==<pos:position pos:line="4" pos:column="48"/></operator> <literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">Logfile<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">lf<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">netdbEntry<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">n<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">net_db_name<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">x<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">timeval<pos:position pos:line="11" pos:column="19"/></name></name></type> <name pos:line="11" pos:column="20">start<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name pos:line="11" pos:column="28">current_time<pos:position pos:line="11" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">count<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <comment type="block" pos:line="13" pos:column="5">/*
     * This was nicer when we were using stdio, but thanks to
     * Solaris bugs, its a bad idea.  fopen can fail if more than
     * 256 FDs are open.
     */</comment>
    <comment type="block" pos:line="18" pos:column="5">/*
     * unlink() is here because there is currently no way to make
     * logfileOpen() use O_TRUNC.
     */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">unlink<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">Config<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">netdbFilename<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">lf<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">logfileOpen<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name><name pos:line="23" pos:column="22">Config<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">.<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">netdbFilename<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="44">4096<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="50">0<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">NULL<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">==<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">lf<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20"> <block pos:line="25" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">50<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="20">1<pos:position pos:line="26" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"netdbSaveState: "<pos:position pos:line="26" pos:column="41"/></literal> <operator pos:line="26" pos:column="42">&lt;&lt;<pos:position pos:line="26" pos:column="50"/></operator> <name><name pos:line="26" pos:column="45">Config<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">.<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">netdbFilename<pos:position pos:line="26" pos:column="65"/></name></name> <operator pos:line="26" pos:column="66">&lt;&lt;<pos:position pos:line="26" pos:column="74"/></operator> <literal type="string" pos:line="26" pos:column="69">": "<pos:position pos:line="26" pos:column="73"/></literal> <operator pos:line="26" pos:column="74">&lt;&lt;<pos:position pos:line="26" pos:column="82"/></operator> <call><name pos:line="26" pos:column="77">xstrerror<pos:position pos:line="26" pos:column="86"/></name><argument_list pos:line="26" pos:column="86">()<pos:position pos:line="26" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="90"/></expr_stmt>
        <return pos:line="27" pos:column="9">return;<pos:position pos:line="27" pos:column="16"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">hash_first<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">addr_table<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>

    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">n<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">netdbEntry<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">*<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator> <call><name pos:line="32" pos:column="32">hash_next<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">addr_table<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call><operator pos:line="32" pos:column="53">)<pos:position pos:line="32" pos:column="54"/></operator></expr>)<pos:position pos:line="32" pos:column="55"/></condition> <block pos:line="32" pos:column="56">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">n<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">pings_recv<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">==<pos:position pos:line="33" pos:column="29"/></operator> <literal type="number" pos:line="33" pos:column="30">0<pos:position pos:line="33" pos:column="31"/></literal></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32">
            <block type="pseudo"><continue pos:line="34" pos:column="13">continue;<pos:position pos:line="34" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="36" pos:column="9">logfilePrintf<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">lf<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"%s %d %d %10.5f %10.5f %d %d"<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="37" pos:column="23">n<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">-&gt;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="26">network<pos:position pos:line="37" pos:column="33"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="38" pos:column="23">n<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">pings_sent<pos:position pos:line="38" pos:column="36"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="39" pos:column="23">n<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">pings_recv<pos:position pos:line="39" pos:column="36"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="40" pos:column="23">n<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">hops<pos:position pos:line="40" pos:column="30"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="41" pos:column="23">n<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">rtt<pos:position pos:line="41" pos:column="29"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="42" pos:column="23">(<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">int<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">)<pos:position pos:line="42" pos:column="28"/></operator> <name><name pos:line="42" pos:column="29">n<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">next_ping_time<pos:position pos:line="42" pos:column="46"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="43" pos:column="23">(<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">int<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">)<pos:position pos:line="43" pos:column="28"/></operator> <name><name pos:line="43" pos:column="29">n<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">last_use_time<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>

        <for pos:line="45" pos:column="9">for <control pos:line="45" pos:column="13">(<init><expr><name pos:line="45" pos:column="14">x<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <name><name pos:line="45" pos:column="18">n<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">hosts<pos:position pos:line="45" pos:column="26"/></name></name></expr>;<pos:position pos:line="45" pos:column="27"/></init> <condition><expr><name pos:line="45" pos:column="28">x<pos:position pos:line="45" pos:column="29"/></name></expr>;<pos:position pos:line="45" pos:column="30"/></condition> <incr><expr><name pos:line="45" pos:column="31">x<pos:position pos:line="45" pos:column="32"/></name> <operator pos:line="45" pos:column="33">=<pos:position pos:line="45" pos:column="34"/></operator> <name><name pos:line="45" pos:column="35">x<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">next<pos:position pos:line="45" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="45" pos:column="43"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="13">logfilePrintf<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">lf<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="31">" %s"<pos:position pos:line="46" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="38">hashKeyStr<pos:position pos:line="46" pos:column="48"/></name><argument_list pos:line="46" pos:column="48">(<argument><expr><operator pos:line="46" pos:column="49">&amp;<pos:position pos:line="46" pos:column="54"/></operator><name><name pos:line="46" pos:column="50">x<pos:position pos:line="46" pos:column="51"/></name><operator pos:line="46" pos:column="51">-&gt;<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="53">hash<pos:position pos:line="46" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt></block></for>

        <expr_stmt><expr><call><name pos:line="48" pos:column="9">logfilePrintf<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">lf<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"\n"<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name pos:line="50" pos:column="9">count<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">++<pos:position pos:line="50" pos:column="16"/></operator></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>

<cpp:undef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">undef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">RBUF_SZ<pos:position pos:line="52" pos:column="15"/></name></cpp:undef>

    }<pos:position pos:line="54" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">logfileClose<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">lf<pos:position pos:line="56" pos:column="20"/></name></expr></argument>)<pos:position pos:line="56" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">getCurrentTime<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">()<pos:position pos:line="57" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">debugs<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><literal type="number" pos:line="58" pos:column="12">38<pos:position pos:line="58" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="16">1<pos:position pos:line="58" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="19">"NETDB state saved; "<pos:position pos:line="58" pos:column="40"/></literal> <operator pos:line="58" pos:column="41">&lt;&lt;<pos:position pos:line="58" pos:column="49"/></operator>
           <name pos:line="59" pos:column="12">count<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">&lt;&lt;<pos:position pos:line="59" pos:column="26"/></operator> <literal type="string" pos:line="59" pos:column="21">" entries, "<pos:position pos:line="59" pos:column="33"/></literal> <operator pos:line="59" pos:column="34">&lt;&lt;<pos:position pos:line="59" pos:column="42"/></operator>
           <call><name pos:line="60" pos:column="12">tvSubMsec<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">start<pos:position pos:line="60" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="29">current_time<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call> <operator pos:line="60" pos:column="43">&lt;&lt;<pos:position pos:line="60" pos:column="51"/></operator> <literal type="string" pos:line="60" pos:column="46">" msec"<pos:position pos:line="60" pos:column="53"/></literal></expr></argument> )<pos:position pos:line="60" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">eventAddIsh<pos:position pos:line="61" pos:column="16"/></name><argument_list pos:line="61" pos:column="16">(<argument><expr><literal type="string" pos:line="61" pos:column="17">"netdbSaveState"<pos:position pos:line="61" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="35">netdbSaveState<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="51">NULL<pos:position pos:line="61" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="57">3600.0<pos:position pos:line="61" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="65">1<pos:position pos:line="61" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="68"/></expr_stmt>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

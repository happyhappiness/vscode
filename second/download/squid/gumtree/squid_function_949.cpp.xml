<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_949.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">Engine<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">kickAsyncServices<pos:position pos:line="2" pos:column="44"/></name></name><parameter_list pos:line="2" pos:column="44">(<parameter><decl><type><name pos:line="2" pos:column="45">timeval<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">&amp;<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="54">timeout<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">AsyncServices<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">empty<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">()<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">93<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"async services: "<pos:position pos:line="7" pos:column="37"/></literal> <operator pos:line="7" pos:column="38">&lt;&lt;<pos:position pos:line="7" pos:column="46"/></operator> <call><name><name pos:line="7" pos:column="41">AsyncServices<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">.<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">size<pos:position pos:line="7" pos:column="59"/></name></name><argument_list pos:line="7" pos:column="59">()<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="63"/></expr_stmt>

    <comment type="line" pos:line="9" pos:column="5">// Activate waiting async transactions, if any.</comment>
    <typedef pos:line="10" pos:column="5">typedef <type><name><name pos:line="10" pos:column="13">AdapterServices<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">::<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">iterator<pos:position pos:line="10" pos:column="38"/></name></name></type> <name pos:line="10" pos:column="39">ASI<pos:position pos:line="10" pos:column="42"/></name>;<pos:position pos:line="10" pos:column="43"/></typedef>
    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><decl><type><name pos:line="11" pos:column="10">ASI<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">s<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><call><name><name pos:line="11" pos:column="18">AsyncServices<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">begin<pos:position pos:line="11" pos:column="37"/></name></name><argument_list pos:line="11" pos:column="37">()<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></init> <condition><expr><name pos:line="11" pos:column="41">s<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">!=<pos:position pos:line="11" pos:column="45"/></operator> <call><name><name pos:line="11" pos:column="46">AsyncServices<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">.<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="60">end<pos:position pos:line="11" pos:column="63"/></name></name><argument_list pos:line="11" pos:column="63">()<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></condition> <incr><expr><operator pos:line="11" pos:column="67">++<pos:position pos:line="11" pos:column="69"/></operator><name pos:line="11" pos:column="69">s<pos:position pos:line="11" pos:column="70"/></name></expr></incr>)<pos:position pos:line="11" pos:column="71"/></control> <block pos:line="11" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">assert<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">s<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">second<pos:position pos:line="12" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">s<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">second<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">resume<pos:position pos:line="13" pos:column="26"/></name></name><argument_list pos:line="13" pos:column="26">()<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt> <comment type="line" pos:line="13" pos:column="30">// may call Ecap::Xaction::resume()</comment>
    }<pos:position pos:line="14" pos:column="6"/></block></for>

    <comment type="line" pos:line="16" pos:column="5">// Give services a chance to decrease the default timeout.</comment>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><decl><type><name pos:line="17" pos:column="10">ASI<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">s<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><call><name><name pos:line="17" pos:column="18">AsyncServices<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">.<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">begin<pos:position pos:line="17" pos:column="37"/></name></name><argument_list pos:line="17" pos:column="37">()<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="40"/></init> <condition><expr><name pos:line="17" pos:column="41">s<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">!=<pos:position pos:line="17" pos:column="45"/></operator> <call><name><name pos:line="17" pos:column="46">AsyncServices<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">.<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">end<pos:position pos:line="17" pos:column="63"/></name></name><argument_list pos:line="17" pos:column="63">()<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></condition> <incr><expr><operator pos:line="17" pos:column="67">++<pos:position pos:line="17" pos:column="69"/></operator><name pos:line="17" pos:column="69">s<pos:position pos:line="17" pos:column="70"/></name></expr></incr>)<pos:position pos:line="17" pos:column="71"/></control> <block pos:line="17" pos:column="72">{
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">s<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">second<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">suspend<pos:position pos:line="18" pos:column="27"/></name></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">timeout<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></for>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3484_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientProcessRequest<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">ConnStateData<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">conn<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">HttpParser<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">hp<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">ClientSocketContext<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">context<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="89">const<pos:position pos:line="2" pos:column="94"/></specifier> <name pos:line="2" pos:column="95">HttpRequestMethod<pos:position pos:line="2" pos:column="112"/></name><modifier pos:line="2" pos:column="112">&amp;<pos:position pos:line="2" pos:column="117"/></modifier></type> <name pos:line="2" pos:column="114">method<pos:position pos:line="2" pos:column="120"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="122">HttpVersion<pos:position pos:line="2" pos:column="133"/></name></type> <name pos:line="2" pos:column="134">http_ver<pos:position pos:line="2" pos:column="142"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="143"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ClientHttpRequest<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">http<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name><name pos:line="4" pos:column="31">context<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">http<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpRequest<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">request<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">notedUseOfBuffer<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="boolean" pos:line="6" pos:column="29">false<pos:position pos:line="6" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bool<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">tePresent<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="boolean" pos:line="7" pos:column="22">false<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">bool<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">deChunked<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="boolean" pos:line="8" pos:column="22">false<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">bool<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">mustReplyToOptions<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><literal type="boolean" pos:line="9" pos:column="31">false<pos:position pos:line="9" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">bool<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">unsupportedTe<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><literal type="boolean" pos:line="10" pos:column="26">false<pos:position pos:line="10" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* We have an initial client stream in place should it be needed */</comment>
    <comment type="block" pos:line="13" pos:column="5">/* setup our private context */</comment>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">context<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">registerWithConn<pos:position pos:line="14" pos:column="30"/></name></name><argument_list pos:line="14" pos:column="30">()<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">context<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">flags<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">.<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">parsed_ok<pos:position pos:line="16" pos:column="33"/></name></name> <operator pos:line="16" pos:column="34">==<pos:position pos:line="16" pos:column="36"/></operator> <literal type="number" pos:line="16" pos:column="37">0<pos:position pos:line="16" pos:column="38"/></literal></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39"> <block pos:line="16" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">clientStreamNode<pos:position pos:line="17" pos:column="25"/></name> <modifier pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></modifier></type><name pos:line="17" pos:column="27">node<pos:position pos:line="17" pos:column="31"/></name> <init pos:line="17" pos:column="32">= <expr><call><name><name pos:line="17" pos:column="34">context<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">getClientReplyContext<pos:position pos:line="17" pos:column="64"/></name></name><argument_list pos:line="17" pos:column="64">()<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="67"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">33<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">2<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"clientProcessRequest: Invalid Request"<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
        <comment type="line" pos:line="19" pos:column="9">// setLogUri should called before repContext-&gt;setReplyToError</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">setLogUri<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">http<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="25">http<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">uri<pos:position pos:line="20" pos:column="34"/></name></name></expr></argument>,  <argument><expr><literal type="boolean" pos:line="20" pos:column="37">true<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">clientReplyContext<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">repContext<pos:position pos:line="21" pos:column="39"/></name> <init pos:line="21" pos:column="40">= <expr><cast type="dynamic" pos:line="21" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="21" pos:column="54">&lt;<argument><expr><name pos:line="21" pos:column="55">clientReplyContext<pos:position pos:line="21" pos:column="73"/></name> <operator pos:line="21" pos:column="74">*<pos:position pos:line="21" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="21" pos:column="79"/></argument_list><argument_list pos:line="21" pos:column="76">(<argument><expr><call><name><name pos:line="21" pos:column="77">node<pos:position pos:line="21" pos:column="81"/></name><operator pos:line="21" pos:column="81">-&gt;<pos:position pos:line="21" pos:column="86"/></operator><name pos:line="21" pos:column="83">data<pos:position pos:line="21" pos:column="87"/></name><operator pos:line="21" pos:column="87">.<pos:position pos:line="21" pos:column="88"/></operator><name pos:line="21" pos:column="88">getRaw<pos:position pos:line="21" pos:column="94"/></name></name><argument_list pos:line="21" pos:column="94">()<pos:position pos:line="21" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="21" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">assert<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">repContext<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">repContext<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">setReplyToError<pos:position pos:line="23" pos:column="36"/></name></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">ERR_INVALID_REQ<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">HTTP_BAD_REQUEST<pos:position pos:line="23" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="72">method<pos:position pos:line="23" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="80">NULL<pos:position pos:line="23" pos:column="84"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="86">conn<pos:position pos:line="23" pos:column="90"/></name><operator pos:line="23" pos:column="90">-&gt;<pos:position pos:line="23" pos:column="95"/></operator><name pos:line="23" pos:column="92">peer<pos:position pos:line="23" pos:column="96"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="98">NULL<pos:position pos:line="23" pos:column="102"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="104">conn<pos:position pos:line="23" pos:column="108"/></name><operator pos:line="23" pos:column="108">-&gt;<pos:position pos:line="23" pos:column="113"/></operator><name pos:line="23" pos:column="110">in<pos:position pos:line="23" pos:column="112"/></name><operator pos:line="23" pos:column="112">.<pos:position pos:line="23" pos:column="113"/></operator><name pos:line="23" pos:column="113">buf<pos:position pos:line="23" pos:column="116"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="118">NULL<pos:position pos:line="23" pos:column="122"/></name></expr></argument>)<pos:position pos:line="23" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="124"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">assert<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name><name pos:line="24" pos:column="16">context<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">http<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">out<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">offset<pos:position pos:line="24" pos:column="41"/></name></name> <operator pos:line="24" pos:column="42">==<pos:position pos:line="24" pos:column="44"/></operator> <literal type="number" pos:line="24" pos:column="45">0<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">context<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">pullData<pos:position pos:line="25" pos:column="26"/></name></name><argument_list pos:line="25" pos:column="26">()<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">conn<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">flags<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">readMoreRequests<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <literal type="boolean" pos:line="26" pos:column="40">false<pos:position pos:line="26" pos:column="45"/></literal></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
        <goto pos:line="27" pos:column="9">goto <name pos:line="27" pos:column="14">finish<pos:position pos:line="27" pos:column="20"/></name>;<pos:position pos:line="27" pos:column="21"/></goto>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">request<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <call><name><name pos:line="30" pos:column="20">HttpRequest<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">::<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">CreateFromUrlAndMethod<pos:position pos:line="30" pos:column="55"/></name></name><argument_list pos:line="30" pos:column="55">(<argument><expr><name><name pos:line="30" pos:column="56">http<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">-&gt;<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="62">uri<pos:position pos:line="30" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="67">method<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call><operator pos:line="30" pos:column="74">)<pos:position pos:line="30" pos:column="75"/></operator> <operator pos:line="30" pos:column="76">==<pos:position pos:line="30" pos:column="78"/></operator> <name pos:line="30" pos:column="79">NULL<pos:position pos:line="30" pos:column="83"/></name></expr>)<pos:position pos:line="30" pos:column="84"/></condition><then pos:line="30" pos:column="84"> <block pos:line="30" pos:column="85">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">clientStreamNode<pos:position pos:line="31" pos:column="25"/></name> <modifier pos:line="31" pos:column="26">*<pos:position pos:line="31" pos:column="27"/></modifier></type><name pos:line="31" pos:column="27">node<pos:position pos:line="31" pos:column="31"/></name> <init pos:line="31" pos:column="32">= <expr><call><name><name pos:line="31" pos:column="34">context<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">getClientReplyContext<pos:position pos:line="31" pos:column="64"/></name></name><argument_list pos:line="31" pos:column="64">()<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="67"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">33<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="20">5<pos:position pos:line="32" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="23">"Invalid URL: "<pos:position pos:line="32" pos:column="38"/></literal> <operator pos:line="32" pos:column="39">&lt;&lt;<pos:position pos:line="32" pos:column="47"/></operator> <name><name pos:line="32" pos:column="42">http<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">uri<pos:position pos:line="32" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
        <comment type="line" pos:line="33" pos:column="9">// setLogUri should called before repContext-&gt;setReplyToError</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">setLogUri<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">http<pos:position pos:line="34" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="25">http<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">uri<pos:position pos:line="34" pos:column="34"/></name></name></expr></argument>,  <argument><expr><literal type="boolean" pos:line="34" pos:column="37">true<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">clientReplyContext<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">repContext<pos:position pos:line="35" pos:column="39"/></name> <init pos:line="35" pos:column="40">= <expr><cast type="dynamic" pos:line="35" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="35" pos:column="54">&lt;<argument><expr><name pos:line="35" pos:column="55">clientReplyContext<pos:position pos:line="35" pos:column="73"/></name> <operator pos:line="35" pos:column="74">*<pos:position pos:line="35" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="35" pos:column="79"/></argument_list><argument_list pos:line="35" pos:column="76">(<argument><expr><call><name><name pos:line="35" pos:column="77">node<pos:position pos:line="35" pos:column="81"/></name><operator pos:line="35" pos:column="81">-&gt;<pos:position pos:line="35" pos:column="86"/></operator><name pos:line="35" pos:column="83">data<pos:position pos:line="35" pos:column="87"/></name><operator pos:line="35" pos:column="87">.<pos:position pos:line="35" pos:column="88"/></operator><name pos:line="35" pos:column="88">getRaw<pos:position pos:line="35" pos:column="94"/></name></name><argument_list pos:line="35" pos:column="94">()<pos:position pos:line="35" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="35" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">assert<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">repContext<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="37" pos:column="9">repContext<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">setReplyToError<pos:position pos:line="37" pos:column="36"/></name></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">ERR_INVALID_URL<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">HTTP_BAD_REQUEST<pos:position pos:line="37" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="72">method<pos:position pos:line="37" pos:column="78"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="80">http<pos:position pos:line="37" pos:column="84"/></name><operator pos:line="37" pos:column="84">-&gt;<pos:position pos:line="37" pos:column="89"/></operator><name pos:line="37" pos:column="86">uri<pos:position pos:line="37" pos:column="89"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="91">conn<pos:position pos:line="37" pos:column="95"/></name><operator pos:line="37" pos:column="95">-&gt;<pos:position pos:line="37" pos:column="100"/></operator><name pos:line="37" pos:column="97">peer<pos:position pos:line="37" pos:column="101"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="103">NULL<pos:position pos:line="37" pos:column="107"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="109">NULL<pos:position pos:line="37" pos:column="113"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="115">NULL<pos:position pos:line="37" pos:column="119"/></name></expr></argument>)<pos:position pos:line="37" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="121"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">assert<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name><name pos:line="38" pos:column="16">context<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">http<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">out<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">.<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="35">offset<pos:position pos:line="38" pos:column="41"/></name></name> <operator pos:line="38" pos:column="42">==<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="45">0<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="39" pos:column="9">context<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">pullData<pos:position pos:line="39" pos:column="26"/></name></name><argument_list pos:line="39" pos:column="26">()<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">conn<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">flags<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">readMoreRequests<pos:position pos:line="40" pos:column="37"/></name></name> <operator pos:line="40" pos:column="38">=<pos:position pos:line="40" pos:column="39"/></operator> <literal type="boolean" pos:line="40" pos:column="40">false<pos:position pos:line="40" pos:column="45"/></literal></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
        <goto pos:line="41" pos:column="9">goto <name pos:line="41" pos:column="14">finish<pos:position pos:line="41" pos:column="20"/></name>;<pos:position pos:line="41" pos:column="21"/></goto>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="44" pos:column="5">/* RFC 2616 section 10.5.6 : handle unsupported HTTP versions cleanly. */</comment>
    <comment type="block" pos:line="45" pos:column="5">/* We currently only accept 0.9, 1.0, 1.1 */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">( <expr><operator pos:line="46" pos:column="10">(<pos:position pos:line="46" pos:column="11"/></operator><name><name pos:line="46" pos:column="11">http_ver<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">.<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">major<pos:position pos:line="46" pos:column="25"/></name></name> <operator pos:line="46" pos:column="26">==<pos:position pos:line="46" pos:column="28"/></operator> <literal type="number" pos:line="46" pos:column="29">0<pos:position pos:line="46" pos:column="30"/></literal> <operator pos:line="46" pos:column="31">&amp;&amp;<pos:position pos:line="46" pos:column="41"/></operator> <name><name pos:line="46" pos:column="34">http_ver<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">.<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">minor<pos:position pos:line="46" pos:column="48"/></name></name> <operator pos:line="46" pos:column="49">!=<pos:position pos:line="46" pos:column="51"/></operator> <literal type="number" pos:line="46" pos:column="52">9<pos:position pos:line="46" pos:column="53"/></literal><operator pos:line="46" pos:column="53">)<pos:position pos:line="46" pos:column="54"/></operator> <operator pos:line="46" pos:column="55">||<pos:position pos:line="46" pos:column="57"/></operator>
            <operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name><name pos:line="47" pos:column="14">http_ver<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">.<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">major<pos:position pos:line="47" pos:column="28"/></name></name> <operator pos:line="47" pos:column="29">==<pos:position pos:line="47" pos:column="31"/></operator> <literal type="number" pos:line="47" pos:column="32">1<pos:position pos:line="47" pos:column="33"/></literal> <operator pos:line="47" pos:column="34">&amp;&amp;<pos:position pos:line="47" pos:column="44"/></operator> <name><name pos:line="47" pos:column="37">http_ver<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">.<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="46">minor<pos:position pos:line="47" pos:column="51"/></name></name> <operator pos:line="47" pos:column="52">&gt;<pos:position pos:line="47" pos:column="56"/></operator> <literal type="number" pos:line="47" pos:column="54">1<pos:position pos:line="47" pos:column="55"/></literal> <operator pos:line="47" pos:column="56">)<pos:position pos:line="47" pos:column="57"/></operator> <operator pos:line="47" pos:column="58">||<pos:position pos:line="47" pos:column="60"/></operator>
            <operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name><name pos:line="48" pos:column="14">http_ver<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">.<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">major<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">&gt;<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="31">1<pos:position pos:line="48" pos:column="32"/></literal><operator pos:line="48" pos:column="32">)<pos:position pos:line="48" pos:column="33"/></operator></expr> )<pos:position pos:line="48" pos:column="35"/></condition><then pos:line="48" pos:column="35"> <block pos:line="48" pos:column="36">{

        <decl_stmt><decl><type><name pos:line="50" pos:column="9">clientStreamNode<pos:position pos:line="50" pos:column="25"/></name> <modifier pos:line="50" pos:column="26">*<pos:position pos:line="50" pos:column="27"/></modifier></type><name pos:line="50" pos:column="27">node<pos:position pos:line="50" pos:column="31"/></name> <init pos:line="50" pos:column="32">= <expr><call><name><name pos:line="50" pos:column="34">context<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">getClientReplyContext<pos:position pos:line="50" pos:column="64"/></name></name><argument_list pos:line="50" pos:column="64">()<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="67"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">debugs<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">33<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="20">5<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="23">"Unsupported HTTP version discovered. :\n"<pos:position pos:line="51" pos:column="65"/></literal> <operator pos:line="51" pos:column="66">&lt;&lt;<pos:position pos:line="51" pos:column="74"/></operator> <call><name pos:line="51" pos:column="69">HttpParserHdrBuf<pos:position pos:line="51" pos:column="85"/></name><argument_list pos:line="51" pos:column="85">(<argument><expr><name pos:line="51" pos:column="86">hp<pos:position pos:line="51" pos:column="88"/></name></expr></argument>)<pos:position pos:line="51" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="91"/></expr_stmt>
        <comment type="line" pos:line="52" pos:column="9">// setLogUri should called before repContext-&gt;setReplyToError</comment>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">setLogUri<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name pos:line="53" pos:column="19">http<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="25">http<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">-&gt;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="31">uri<pos:position pos:line="53" pos:column="34"/></name></name></expr></argument>,  <argument><expr><literal type="boolean" pos:line="53" pos:column="37">true<pos:position pos:line="53" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">clientReplyContext<pos:position pos:line="54" pos:column="27"/></name> <modifier pos:line="54" pos:column="28">*<pos:position pos:line="54" pos:column="29"/></modifier></type><name pos:line="54" pos:column="29">repContext<pos:position pos:line="54" pos:column="39"/></name> <init pos:line="54" pos:column="40">= <expr><cast type="dynamic" pos:line="54" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="54" pos:column="54">&lt;<argument><expr><name pos:line="54" pos:column="55">clientReplyContext<pos:position pos:line="54" pos:column="73"/></name> <operator pos:line="54" pos:column="74">*<pos:position pos:line="54" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="54" pos:column="79"/></argument_list><argument_list pos:line="54" pos:column="76">(<argument><expr><call><name><name pos:line="54" pos:column="77">node<pos:position pos:line="54" pos:column="81"/></name><operator pos:line="54" pos:column="81">-&gt;<pos:position pos:line="54" pos:column="86"/></operator><name pos:line="54" pos:column="83">data<pos:position pos:line="54" pos:column="87"/></name><operator pos:line="54" pos:column="87">.<pos:position pos:line="54" pos:column="88"/></operator><name pos:line="54" pos:column="88">getRaw<pos:position pos:line="54" pos:column="94"/></name></name><argument_list pos:line="54" pos:column="94">()<pos:position pos:line="54" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="54" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">assert<pos:position pos:line="55" pos:column="15"/></name> <argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">repContext<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="56" pos:column="9">repContext<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">setReplyToError<pos:position pos:line="56" pos:column="36"/></name></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">ERR_UNSUP_HTTPVERSION<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">HTTP_HTTP_VERSION_NOT_SUPPORTED<pos:position pos:line="56" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="93">method<pos:position pos:line="56" pos:column="99"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="101">http<pos:position pos:line="56" pos:column="105"/></name><operator pos:line="56" pos:column="105">-&gt;<pos:position pos:line="56" pos:column="110"/></operator><name pos:line="56" pos:column="107">uri<pos:position pos:line="56" pos:column="110"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="112">conn<pos:position pos:line="56" pos:column="116"/></name><operator pos:line="56" pos:column="116">-&gt;<pos:position pos:line="56" pos:column="121"/></operator><name pos:line="56" pos:column="118">peer<pos:position pos:line="56" pos:column="122"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="124">NULL<pos:position pos:line="56" pos:column="128"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="130">HttpParserHdrBuf<pos:position pos:line="56" pos:column="146"/></name><argument_list pos:line="56" pos:column="146">(<argument><expr><name pos:line="56" pos:column="147">hp<pos:position pos:line="56" pos:column="149"/></name></expr></argument>)<pos:position pos:line="56" pos:column="150"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="56" pos:column="152">NULL<pos:position pos:line="56" pos:column="156"/></name></expr></argument>)<pos:position pos:line="56" pos:column="157"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="158"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">assert<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><name><name pos:line="57" pos:column="16">context<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">-&gt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">http<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">out<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">.<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">offset<pos:position pos:line="57" pos:column="41"/></name></name> <operator pos:line="57" pos:column="42">==<pos:position pos:line="57" pos:column="44"/></operator> <literal type="number" pos:line="57" pos:column="45">0<pos:position pos:line="57" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="58" pos:column="9">context<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">pullData<pos:position pos:line="58" pos:column="26"/></name></name><argument_list pos:line="58" pos:column="26">()<pos:position pos:line="58" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">conn<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">-&gt;<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="15">flags<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">.<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">readMoreRequests<pos:position pos:line="59" pos:column="37"/></name></name> <operator pos:line="59" pos:column="38">=<pos:position pos:line="59" pos:column="39"/></operator> <literal type="boolean" pos:line="59" pos:column="40">false<pos:position pos:line="59" pos:column="45"/></literal></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
        <goto pos:line="60" pos:column="9">goto <name pos:line="60" pos:column="14">finish<pos:position pos:line="60" pos:column="20"/></name>;<pos:position pos:line="60" pos:column="21"/></goto>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="63" pos:column="5">/* compile headers */</comment>
    <comment type="block" pos:line="64" pos:column="5">/* we should skip request line! */</comment>
    <comment type="block" pos:line="65" pos:column="5">/* XXX should actually know the damned buffer size here */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">http_ver<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">.<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">major<pos:position pos:line="66" pos:column="23"/></name></name> <operator pos:line="66" pos:column="24">&gt;=<pos:position pos:line="66" pos:column="29"/></operator> <literal type="number" pos:line="66" pos:column="27">1<pos:position pos:line="66" pos:column="28"/></literal> <operator pos:line="66" pos:column="29">&amp;&amp;<pos:position pos:line="66" pos:column="39"/></operator> <operator pos:line="66" pos:column="32">!<pos:position pos:line="66" pos:column="33"/></operator><call><name><name pos:line="66" pos:column="33">request<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">parseHeader<pos:position pos:line="66" pos:column="53"/></name></name><argument_list pos:line="66" pos:column="53">(<argument><expr><call><name pos:line="66" pos:column="54">HttpParserHdrBuf<pos:position pos:line="66" pos:column="70"/></name><argument_list pos:line="66" pos:column="70">(<argument><expr><name pos:line="66" pos:column="71">hp<pos:position pos:line="66" pos:column="73"/></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="76">HttpParserHdrSz<pos:position pos:line="66" pos:column="91"/></name><argument_list pos:line="66" pos:column="91">(<argument><expr><name pos:line="66" pos:column="92">hp<pos:position pos:line="66" pos:column="94"/></name></expr></argument>)<pos:position pos:line="66" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="96"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="97"/></condition><then pos:line="66" pos:column="97"> <block pos:line="66" pos:column="98">{
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">clientStreamNode<pos:position pos:line="67" pos:column="25"/></name> <modifier pos:line="67" pos:column="26">*<pos:position pos:line="67" pos:column="27"/></modifier></type><name pos:line="67" pos:column="27">node<pos:position pos:line="67" pos:column="31"/></name> <init pos:line="67" pos:column="32">= <expr><call><name><name pos:line="67" pos:column="34">context<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">-&gt;<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="43">getClientReplyContext<pos:position pos:line="67" pos:column="64"/></name></name><argument_list pos:line="67" pos:column="64">()<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="67"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">debugs<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><literal type="number" pos:line="68" pos:column="16">33<pos:position pos:line="68" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="20">5<pos:position pos:line="68" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="23">"Failed to parse request headers:\n"<pos:position pos:line="68" pos:column="59"/></literal> <operator pos:line="68" pos:column="60">&lt;&lt;<pos:position pos:line="68" pos:column="68"/></operator> <call><name pos:line="68" pos:column="63">HttpParserHdrBuf<pos:position pos:line="68" pos:column="79"/></name><argument_list pos:line="68" pos:column="79">(<argument><expr><name pos:line="68" pos:column="80">hp<pos:position pos:line="68" pos:column="82"/></name></expr></argument>)<pos:position pos:line="68" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="85"/></expr_stmt>
        <comment type="line" pos:line="69" pos:column="9">// setLogUri should called before repContext-&gt;setReplyToError</comment>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">setLogUri<pos:position pos:line="70" pos:column="18"/></name><argument_list pos:line="70" pos:column="18">(<argument><expr><name pos:line="70" pos:column="19">http<pos:position pos:line="70" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="25">http<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">-&gt;<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="31">uri<pos:position pos:line="70" pos:column="34"/></name></name></expr></argument>,  <argument><expr><literal type="boolean" pos:line="70" pos:column="37">true<pos:position pos:line="70" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="71" pos:column="9">clientReplyContext<pos:position pos:line="71" pos:column="27"/></name> <modifier pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></modifier></type><name pos:line="71" pos:column="29">repContext<pos:position pos:line="71" pos:column="39"/></name> <init pos:line="71" pos:column="40">= <expr><cast type="dynamic" pos:line="71" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="71" pos:column="54">&lt;<argument><expr><name pos:line="71" pos:column="55">clientReplyContext<pos:position pos:line="71" pos:column="73"/></name> <operator pos:line="71" pos:column="74">*<pos:position pos:line="71" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="71" pos:column="79"/></argument_list><argument_list pos:line="71" pos:column="76">(<argument><expr><call><name><name pos:line="71" pos:column="77">node<pos:position pos:line="71" pos:column="81"/></name><operator pos:line="71" pos:column="81">-&gt;<pos:position pos:line="71" pos:column="86"/></operator><name pos:line="71" pos:column="83">data<pos:position pos:line="71" pos:column="87"/></name><operator pos:line="71" pos:column="87">.<pos:position pos:line="71" pos:column="88"/></operator><name pos:line="71" pos:column="88">getRaw<pos:position pos:line="71" pos:column="94"/></name></name><argument_list pos:line="71" pos:column="94">()<pos:position pos:line="71" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="71" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">assert<pos:position pos:line="72" pos:column="15"/></name> <argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">repContext<pos:position pos:line="72" pos:column="27"/></name></expr></argument>)<pos:position pos:line="72" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="73" pos:column="9">repContext<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">setReplyToError<pos:position pos:line="73" pos:column="36"/></name></name><argument_list pos:line="73" pos:column="36">(<argument><expr><name pos:line="73" pos:column="37">ERR_INVALID_REQ<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="54">HTTP_BAD_REQUEST<pos:position pos:line="73" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="72">method<pos:position pos:line="73" pos:column="78"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="80">http<pos:position pos:line="73" pos:column="84"/></name><operator pos:line="73" pos:column="84">-&gt;<pos:position pos:line="73" pos:column="89"/></operator><name pos:line="73" pos:column="86">uri<pos:position pos:line="73" pos:column="89"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="91">conn<pos:position pos:line="73" pos:column="95"/></name><operator pos:line="73" pos:column="95">-&gt;<pos:position pos:line="73" pos:column="100"/></operator><name pos:line="73" pos:column="97">peer<pos:position pos:line="73" pos:column="101"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="103">NULL<pos:position pos:line="73" pos:column="107"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="109">NULL<pos:position pos:line="73" pos:column="113"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="115">NULL<pos:position pos:line="73" pos:column="119"/></name></expr></argument>)<pos:position pos:line="73" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="121"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">assert<pos:position pos:line="74" pos:column="15"/></name><argument_list pos:line="74" pos:column="15">(<argument><expr><name><name pos:line="74" pos:column="16">context<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">-&gt;<pos:position pos:line="74" pos:column="28"/></operator><name pos:line="74" pos:column="25">http<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">out<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">.<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">offset<pos:position pos:line="74" pos:column="41"/></name></name> <operator pos:line="74" pos:column="42">==<pos:position pos:line="74" pos:column="44"/></operator> <literal type="number" pos:line="74" pos:column="45">0<pos:position pos:line="74" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">context<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">-&gt;<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="18">pullData<pos:position pos:line="75" pos:column="26"/></name></name><argument_list pos:line="75" pos:column="26">()<pos:position pos:line="75" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">conn<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">flags<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">.<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="21">readMoreRequests<pos:position pos:line="76" pos:column="37"/></name></name> <operator pos:line="76" pos:column="38">=<pos:position pos:line="76" pos:column="39"/></operator> <literal type="boolean" pos:line="76" pos:column="40">false<pos:position pos:line="76" pos:column="45"/></literal></expr>;<pos:position pos:line="76" pos:column="46"/></expr_stmt>
        <goto pos:line="77" pos:column="9">goto <name pos:line="77" pos:column="14">finish<pos:position pos:line="77" pos:column="20"/></name>;<pos:position pos:line="77" pos:column="21"/></goto>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="80" pos:column="5">request<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">-&gt;<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="14">flags<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">.<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="20">accelerated<pos:position pos:line="80" pos:column="31"/></name></name> <operator pos:line="80" pos:column="32">=<pos:position pos:line="80" pos:column="33"/></operator> <name><name pos:line="80" pos:column="34">http<pos:position pos:line="80" pos:column="38"/></name><operator pos:line="80" pos:column="38">-&gt;<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="40">flags<pos:position pos:line="80" pos:column="45"/></name><operator pos:line="80" pos:column="45">.<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="46">accel<pos:position pos:line="80" pos:column="51"/></name></name></expr>;<pos:position pos:line="80" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">request<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">flags<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">.<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">sslBumped<pos:position pos:line="81" pos:column="29"/></name></name> <operator pos:line="81" pos:column="30">=<pos:position pos:line="81" pos:column="31"/></operator> <call><name><name pos:line="81" pos:column="32">conn<pos:position pos:line="81" pos:column="36"/></name><operator pos:line="81" pos:column="36">-&gt;<pos:position pos:line="81" pos:column="41"/></operator><name pos:line="81" pos:column="38">switchedToHttps<pos:position pos:line="81" pos:column="53"/></name></name><argument_list pos:line="81" pos:column="53">()<pos:position pos:line="81" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="82" pos:column="5">request<pos:position pos:line="82" pos:column="12"/></name><operator pos:line="82" pos:column="12">-&gt;<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="14">flags<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">.<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">ignore_cc<pos:position pos:line="82" pos:column="29"/></name></name> <operator pos:line="82" pos:column="30">=<pos:position pos:line="82" pos:column="31"/></operator> <name><name pos:line="82" pos:column="32">conn<pos:position pos:line="82" pos:column="36"/></name><operator pos:line="82" pos:column="36">-&gt;<pos:position pos:line="82" pos:column="41"/></operator><name pos:line="82" pos:column="38">port<pos:position pos:line="82" pos:column="42"/></name><operator pos:line="82" pos:column="42">-&gt;<pos:position pos:line="82" pos:column="47"/></operator><name pos:line="82" pos:column="44">ignore_cc<pos:position pos:line="82" pos:column="53"/></name></name></expr>;<pos:position pos:line="82" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">request<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">-&gt;<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="14">flags<pos:position pos:line="83" pos:column="19"/></name><operator pos:line="83" pos:column="19">.<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="20">no_direct<pos:position pos:line="83" pos:column="29"/></name></name> <operator pos:line="83" pos:column="30">=<pos:position pos:line="83" pos:column="31"/></operator> <ternary><condition><expr><name><name pos:line="83" pos:column="32">request<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">-&gt;<pos:position pos:line="83" pos:column="44"/></operator><name pos:line="83" pos:column="41">flags<pos:position pos:line="83" pos:column="46"/></name><operator pos:line="83" pos:column="46">.<pos:position pos:line="83" pos:column="47"/></operator><name pos:line="83" pos:column="47">accelerated<pos:position pos:line="83" pos:column="58"/></name></name></expr> ?<pos:position pos:line="83" pos:column="60"/></condition><then pos:line="83" pos:column="60"> <expr><operator pos:line="83" pos:column="61">!<pos:position pos:line="83" pos:column="62"/></operator><name><name pos:line="83" pos:column="62">conn<pos:position pos:line="83" pos:column="66"/></name><operator pos:line="83" pos:column="66">-&gt;<pos:position pos:line="83" pos:column="71"/></operator><name pos:line="83" pos:column="68">port<pos:position pos:line="83" pos:column="72"/></name><operator pos:line="83" pos:column="72">-&gt;<pos:position pos:line="83" pos:column="77"/></operator><name pos:line="83" pos:column="74">allow_direct<pos:position pos:line="83" pos:column="86"/></name></name></expr> <pos:position pos:line="83" pos:column="87"/></then><else pos:line="83" pos:column="87">: <expr><literal type="number" pos:line="83" pos:column="89">0<pos:position pos:line="83" pos:column="90"/></literal></expr></else></ternary></expr>;<pos:position pos:line="83" pos:column="91"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="85" pos:column="5">/** \par
     * If transparent or interception mode is working clone the transparent and interception flags
     * from the port settings to the request.
     */</comment>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><call><name><name pos:line="89" pos:column="9">IpInterceptor<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">.<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="23">InterceptActive<pos:position pos:line="89" pos:column="38"/></name></name><argument_list pos:line="89" pos:column="38">()<pos:position pos:line="89" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="41"/></condition><then pos:line="89" pos:column="41"> <block pos:line="89" pos:column="42">{
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">request<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">flags<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">.<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">intercepted<pos:position pos:line="90" pos:column="35"/></name></name> <operator pos:line="90" pos:column="36">=<pos:position pos:line="90" pos:column="37"/></operator> <name><name pos:line="90" pos:column="38">http<pos:position pos:line="90" pos:column="42"/></name><operator pos:line="90" pos:column="42">-&gt;<pos:position pos:line="90" pos:column="47"/></operator><name pos:line="90" pos:column="44">flags<pos:position pos:line="90" pos:column="49"/></name><operator pos:line="90" pos:column="49">.<pos:position pos:line="90" pos:column="50"/></operator><name pos:line="90" pos:column="50">intercepted<pos:position pos:line="90" pos:column="61"/></name></name></expr>;<pos:position pos:line="90" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><call><name><name pos:line="92" pos:column="9">IpInterceptor<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">.<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="23">TransparentActive<pos:position pos:line="92" pos:column="40"/></name></name><argument_list pos:line="92" pos:column="40">()<pos:position pos:line="92" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="43"/></condition><then pos:line="92" pos:column="43"> <block pos:line="92" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">request<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">-&gt;<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="18">flags<pos:position pos:line="93" pos:column="23"/></name><operator pos:line="93" pos:column="23">.<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="24">spoof_client_ip<pos:position pos:line="93" pos:column="39"/></name></name> <operator pos:line="93" pos:column="40">=<pos:position pos:line="93" pos:column="41"/></operator> <name><name pos:line="93" pos:column="42">conn<pos:position pos:line="93" pos:column="46"/></name><operator pos:line="93" pos:column="46">-&gt;<pos:position pos:line="93" pos:column="51"/></operator><name pos:line="93" pos:column="48">port<pos:position pos:line="93" pos:column="52"/></name><operator pos:line="93" pos:column="52">-&gt;<pos:position pos:line="93" pos:column="57"/></operator><name pos:line="93" pos:column="54">spoof_client_ip<pos:position pos:line="93" pos:column="69"/></name></name></expr>;<pos:position pos:line="93" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><call><name pos:line="96" pos:column="9">internalCheck<pos:position pos:line="96" pos:column="22"/></name><argument_list pos:line="96" pos:column="22">(<argument><expr><call><name><name pos:line="96" pos:column="23">request<pos:position pos:line="96" pos:column="30"/></name><operator pos:line="96" pos:column="30">-&gt;<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="32">urlpath<pos:position pos:line="96" pos:column="39"/></name><operator pos:line="96" pos:column="39">.<pos:position pos:line="96" pos:column="40"/></operator><name pos:line="96" pos:column="40">termedBuf<pos:position pos:line="96" pos:column="49"/></name></name><argument_list pos:line="96" pos:column="49">()<pos:position pos:line="96" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="53"/></condition><then pos:line="96" pos:column="53"> <block pos:line="96" pos:column="54">{
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><call><name pos:line="97" pos:column="13">internalHostnameIs<pos:position pos:line="97" pos:column="31"/></name><argument_list pos:line="97" pos:column="31">(<argument><expr><call><name><name pos:line="97" pos:column="32">request<pos:position pos:line="97" pos:column="39"/></name><operator pos:line="97" pos:column="39">-&gt;<pos:position pos:line="97" pos:column="44"/></operator><name pos:line="97" pos:column="41">GetHost<pos:position pos:line="97" pos:column="48"/></name></name><argument_list pos:line="97" pos:column="48">()<pos:position pos:line="97" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="51"/></argument_list></call> <operator pos:line="97" pos:column="52">&amp;&amp;<pos:position pos:line="97" pos:column="62"/></operator>
                <name><name pos:line="98" pos:column="17">request<pos:position pos:line="98" pos:column="24"/></name><operator pos:line="98" pos:column="24">-&gt;<pos:position pos:line="98" pos:column="29"/></operator><name pos:line="98" pos:column="26">port<pos:position pos:line="98" pos:column="30"/></name></name> <operator pos:line="98" pos:column="31">==<pos:position pos:line="98" pos:column="33"/></operator> <call><name pos:line="98" pos:column="34">getMyPort<pos:position pos:line="98" pos:column="43"/></name><argument_list pos:line="98" pos:column="43">()<pos:position pos:line="98" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="46"/></condition><then pos:line="98" pos:column="46"> <block pos:line="98" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">http<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">-&gt;<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="19">flags<pos:position pos:line="99" pos:column="24"/></name><operator pos:line="99" pos:column="24">.<pos:position pos:line="99" pos:column="25"/></operator><name pos:line="99" pos:column="25">internal<pos:position pos:line="99" pos:column="33"/></name></name> <operator pos:line="99" pos:column="34">=<pos:position pos:line="99" pos:column="35"/></operator> <literal type="number" pos:line="99" pos:column="36">1<pos:position pos:line="99" pos:column="37"/></literal></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then> <elseif pos:line="100" pos:column="11">else <if pos:line="100" pos:column="16">if <condition pos:line="100" pos:column="19">(<expr><name><name pos:line="100" pos:column="20">Config<pos:position pos:line="100" pos:column="26"/></name><operator pos:line="100" pos:column="26">.<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="27">onoff<pos:position pos:line="100" pos:column="32"/></name><operator pos:line="100" pos:column="32">.<pos:position pos:line="100" pos:column="33"/></operator><name pos:line="100" pos:column="33">global_internal_static<pos:position pos:line="100" pos:column="55"/></name></name> <operator pos:line="100" pos:column="56">&amp;&amp;<pos:position pos:line="100" pos:column="66"/></operator> <call><name pos:line="100" pos:column="59">internalStaticCheck<pos:position pos:line="100" pos:column="78"/></name><argument_list pos:line="100" pos:column="78">(<argument><expr><call><name><name pos:line="100" pos:column="79">request<pos:position pos:line="100" pos:column="86"/></name><operator pos:line="100" pos:column="86">-&gt;<pos:position pos:line="100" pos:column="91"/></operator><name pos:line="100" pos:column="88">urlpath<pos:position pos:line="100" pos:column="95"/></name><operator pos:line="100" pos:column="95">.<pos:position pos:line="100" pos:column="96"/></operator><name pos:line="100" pos:column="96">termedBuf<pos:position pos:line="100" pos:column="105"/></name></name><argument_list pos:line="100" pos:column="105">()<pos:position pos:line="100" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="108"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="109"/></condition><then pos:line="100" pos:column="109"> <block pos:line="100" pos:column="110">{
            <expr_stmt><expr><call><name><name pos:line="101" pos:column="13">request<pos:position pos:line="101" pos:column="20"/></name><operator pos:line="101" pos:column="20">-&gt;<pos:position pos:line="101" pos:column="25"/></operator><name pos:line="101" pos:column="22">SetHost<pos:position pos:line="101" pos:column="29"/></name></name><argument_list pos:line="101" pos:column="29">(<argument><expr><call><name pos:line="101" pos:column="30">internalHostname<pos:position pos:line="101" pos:column="46"/></name><argument_list pos:line="101" pos:column="46">()<pos:position pos:line="101" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="102" pos:column="13">request<pos:position pos:line="102" pos:column="20"/></name><operator pos:line="102" pos:column="20">-&gt;<pos:position pos:line="102" pos:column="25"/></operator><name pos:line="102" pos:column="22">port<pos:position pos:line="102" pos:column="26"/></name></name> <operator pos:line="102" pos:column="27">=<pos:position pos:line="102" pos:column="28"/></operator> <call><name pos:line="102" pos:column="29">getMyPort<pos:position pos:line="102" pos:column="38"/></name><argument_list pos:line="102" pos:column="38">()<pos:position pos:line="102" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">http<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">flags<pos:position pos:line="103" pos:column="24"/></name><operator pos:line="103" pos:column="24">.<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="25">internal<pos:position pos:line="103" pos:column="33"/></name></name> <operator pos:line="103" pos:column="34">=<pos:position pos:line="103" pos:column="35"/></operator> <literal type="number" pos:line="103" pos:column="36">1<pos:position pos:line="103" pos:column="37"/></literal></expr>;<pos:position pos:line="103" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name><name pos:line="107" pos:column="9">http<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">-&gt;<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="15">flags<pos:position pos:line="107" pos:column="20"/></name><operator pos:line="107" pos:column="20">.<pos:position pos:line="107" pos:column="21"/></operator><name pos:line="107" pos:column="21">internal<pos:position pos:line="107" pos:column="29"/></name></name></expr>)<pos:position pos:line="107" pos:column="30"/></condition><then pos:line="107" pos:column="30"> <block pos:line="107" pos:column="31">{
        <expr_stmt><expr><name><name pos:line="108" pos:column="9">request<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">-&gt;<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="18">protocol<pos:position pos:line="108" pos:column="26"/></name></name> <operator pos:line="108" pos:column="27">=<pos:position pos:line="108" pos:column="28"/></operator> <name pos:line="108" pos:column="29">PROTO_HTTP<pos:position pos:line="108" pos:column="39"/></name></expr>;<pos:position pos:line="108" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="109" pos:column="9">request<pos:position pos:line="109" pos:column="16"/></name><operator pos:line="109" pos:column="16">-&gt;<pos:position pos:line="109" pos:column="21"/></operator><name pos:line="109" pos:column="18">login<pos:position pos:line="109" pos:column="23"/></name><index pos:line="109" pos:column="23">[<expr><literal type="number" pos:line="109" pos:column="24">0<pos:position pos:line="109" pos:column="25"/></literal></expr>]<pos:position pos:line="109" pos:column="26"/></index></name> <operator pos:line="109" pos:column="27">=<pos:position pos:line="109" pos:column="28"/></operator> <literal type="char" pos:line="109" pos:column="29">'\0'<pos:position pos:line="109" pos:column="33"/></literal></expr>;<pos:position pos:line="109" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="112" pos:column="5">request<pos:position pos:line="112" pos:column="12"/></name><operator pos:line="112" pos:column="12">-&gt;<pos:position pos:line="112" pos:column="17"/></operator><name pos:line="112" pos:column="14">flags<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">.<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="20">internal<pos:position pos:line="112" pos:column="28"/></name></name> <operator pos:line="112" pos:column="29">=<pos:position pos:line="112" pos:column="30"/></operator> <name><name pos:line="112" pos:column="31">http<pos:position pos:line="112" pos:column="35"/></name><operator pos:line="112" pos:column="35">-&gt;<pos:position pos:line="112" pos:column="40"/></operator><name pos:line="112" pos:column="37">flags<pos:position pos:line="112" pos:column="42"/></name><operator pos:line="112" pos:column="42">.<pos:position pos:line="112" pos:column="43"/></operator><name pos:line="112" pos:column="43">internal<pos:position pos:line="112" pos:column="51"/></name></name></expr>;<pos:position pos:line="112" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">setLogUri<pos:position pos:line="113" pos:column="14"/></name> <argument_list pos:line="113" pos:column="15">(<argument><expr><name pos:line="113" pos:column="16">http<pos:position pos:line="113" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="113" pos:column="22">urlCanonicalClean<pos:position pos:line="113" pos:column="39"/></name><argument_list pos:line="113" pos:column="39">(<argument><expr><name pos:line="113" pos:column="40">request<pos:position pos:line="113" pos:column="47"/></name></expr></argument>)<pos:position pos:line="113" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="113" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="114" pos:column="5">request<pos:position pos:line="114" pos:column="12"/></name><operator pos:line="114" pos:column="12">-&gt;<pos:position pos:line="114" pos:column="17"/></operator><name pos:line="114" pos:column="14">client_addr<pos:position pos:line="114" pos:column="25"/></name></name> <operator pos:line="114" pos:column="26">=<pos:position pos:line="114" pos:column="27"/></operator> <name><name pos:line="114" pos:column="28">conn<pos:position pos:line="114" pos:column="32"/></name><operator pos:line="114" pos:column="32">-&gt;<pos:position pos:line="114" pos:column="37"/></operator><name pos:line="114" pos:column="34">peer<pos:position pos:line="114" pos:column="38"/></name></name></expr>;<pos:position pos:line="114" pos:column="39"/></expr_stmt>
<cpp:if pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">if<pos:position pos:line="115" pos:column="4"/></cpp:directive> <expr><name pos:line="115" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="115" pos:column="27"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="116" pos:column="5">request<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">-&gt;<pos:position pos:line="116" pos:column="17"/></operator><name pos:line="116" pos:column="14">indirect_client_addr<pos:position pos:line="116" pos:column="34"/></name></name> <operator pos:line="116" pos:column="35">=<pos:position pos:line="116" pos:column="36"/></operator> <name><name pos:line="116" pos:column="37">conn<pos:position pos:line="116" pos:column="41"/></name><operator pos:line="116" pos:column="41">-&gt;<pos:position pos:line="116" pos:column="46"/></operator><name pos:line="116" pos:column="43">peer<pos:position pos:line="116" pos:column="47"/></name></name></expr>;<pos:position pos:line="116" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">endif<pos:position pos:line="117" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="117" pos:column="8">/* FOLLOW_X_FORWARDED_FOR */</comment>
    <expr_stmt><expr><name><name pos:line="118" pos:column="5">request<pos:position pos:line="118" pos:column="12"/></name><operator pos:line="118" pos:column="12">-&gt;<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="14">my_addr<pos:position pos:line="118" pos:column="21"/></name></name> <operator pos:line="118" pos:column="22">=<pos:position pos:line="118" pos:column="23"/></operator> <name><name pos:line="118" pos:column="24">conn<pos:position pos:line="118" pos:column="28"/></name><operator pos:line="118" pos:column="28">-&gt;<pos:position pos:line="118" pos:column="33"/></operator><name pos:line="118" pos:column="30">me<pos:position pos:line="118" pos:column="32"/></name></name></expr>;<pos:position pos:line="118" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="119" pos:column="5">request<pos:position pos:line="119" pos:column="12"/></name><operator pos:line="119" pos:column="12">-&gt;<pos:position pos:line="119" pos:column="17"/></operator><name pos:line="119" pos:column="14">myportname<pos:position pos:line="119" pos:column="24"/></name></name> <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <name><name pos:line="119" pos:column="27">conn<pos:position pos:line="119" pos:column="31"/></name><operator pos:line="119" pos:column="31">-&gt;<pos:position pos:line="119" pos:column="36"/></operator><name pos:line="119" pos:column="33">port<pos:position pos:line="119" pos:column="37"/></name><operator pos:line="119" pos:column="37">-&gt;<pos:position pos:line="119" pos:column="42"/></operator><name pos:line="119" pos:column="39">name<pos:position pos:line="119" pos:column="43"/></name></name></expr>;<pos:position pos:line="119" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="120" pos:column="5">request<pos:position pos:line="120" pos:column="12"/></name><operator pos:line="120" pos:column="12">-&gt;<pos:position pos:line="120" pos:column="17"/></operator><name pos:line="120" pos:column="14">http_ver<pos:position pos:line="120" pos:column="22"/></name></name> <operator pos:line="120" pos:column="23">=<pos:position pos:line="120" pos:column="24"/></operator> <name pos:line="120" pos:column="25">http_ver<pos:position pos:line="120" pos:column="33"/></name></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="122" pos:column="5">tePresent<pos:position pos:line="122" pos:column="14"/></name> <operator pos:line="122" pos:column="15">=<pos:position pos:line="122" pos:column="16"/></operator> <call><name><name pos:line="122" pos:column="17">request<pos:position pos:line="122" pos:column="24"/></name><operator pos:line="122" pos:column="24">-&gt;<pos:position pos:line="122" pos:column="29"/></operator><name pos:line="122" pos:column="26">header<pos:position pos:line="122" pos:column="32"/></name><operator pos:line="122" pos:column="32">.<pos:position pos:line="122" pos:column="33"/></operator><name pos:line="122" pos:column="33">has<pos:position pos:line="122" pos:column="36"/></name></name><argument_list pos:line="122" pos:column="36">(<argument><expr><name pos:line="122" pos:column="37">HDR_TRANSFER_ENCODING<pos:position pos:line="122" pos:column="58"/></name></expr></argument>)<pos:position pos:line="122" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="123" pos:column="5">deChunked<pos:position pos:line="123" pos:column="14"/></name> <operator pos:line="123" pos:column="15">=<pos:position pos:line="123" pos:column="16"/></operator> <name><name pos:line="123" pos:column="17">conn<pos:position pos:line="123" pos:column="21"/></name><operator pos:line="123" pos:column="21">-&gt;<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="23">in<pos:position pos:line="123" pos:column="25"/></name><operator pos:line="123" pos:column="25">.<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="26">dechunkingState<pos:position pos:line="123" pos:column="41"/></name></name> <operator pos:line="123" pos:column="42">==<pos:position pos:line="123" pos:column="44"/></operator> <name><name pos:line="123" pos:column="45">ConnStateData<pos:position pos:line="123" pos:column="58"/></name><operator pos:line="123" pos:column="58">::<pos:position pos:line="123" pos:column="60"/></operator><name pos:line="123" pos:column="60">chunkReady<pos:position pos:line="123" pos:column="70"/></name></name></expr>;<pos:position pos:line="123" pos:column="71"/></expr_stmt>
    <if pos:line="124" pos:column="5">if <condition pos:line="124" pos:column="8">(<expr><name pos:line="124" pos:column="9">deChunked<pos:position pos:line="124" pos:column="18"/></name></expr>)<pos:position pos:line="124" pos:column="19"/></condition><then pos:line="124" pos:column="19"> <block pos:line="124" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">assert<pos:position pos:line="125" pos:column="15"/></name><argument_list pos:line="125" pos:column="15">(<argument><expr><name pos:line="125" pos:column="16">tePresent<pos:position pos:line="125" pos:column="25"/></name></expr></argument>)<pos:position pos:line="125" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="126" pos:column="9">request<pos:position pos:line="126" pos:column="16"/></name><operator pos:line="126" pos:column="16">-&gt;<pos:position pos:line="126" pos:column="21"/></operator><name pos:line="126" pos:column="18">setContentLength<pos:position pos:line="126" pos:column="34"/></name></name><argument_list pos:line="126" pos:column="34">(<argument><expr><call><name><name pos:line="126" pos:column="35">conn<pos:position pos:line="126" pos:column="39"/></name><operator pos:line="126" pos:column="39">-&gt;<pos:position pos:line="126" pos:column="44"/></operator><name pos:line="126" pos:column="41">in<pos:position pos:line="126" pos:column="43"/></name><operator pos:line="126" pos:column="43">.<pos:position pos:line="126" pos:column="44"/></operator><name pos:line="126" pos:column="44">dechunked<pos:position pos:line="126" pos:column="53"/></name><operator pos:line="126" pos:column="53">.<pos:position pos:line="126" pos:column="54"/></operator><name pos:line="126" pos:column="54">contentSize<pos:position pos:line="126" pos:column="65"/></name></name><argument_list pos:line="126" pos:column="65">()<pos:position pos:line="126" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="126" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="127" pos:column="9">request<pos:position pos:line="127" pos:column="16"/></name><operator pos:line="127" pos:column="16">-&gt;<pos:position pos:line="127" pos:column="21"/></operator><name pos:line="127" pos:column="18">header<pos:position pos:line="127" pos:column="24"/></name><operator pos:line="127" pos:column="24">.<pos:position pos:line="127" pos:column="25"/></operator><name pos:line="127" pos:column="25">delById<pos:position pos:line="127" pos:column="32"/></name></name><argument_list pos:line="127" pos:column="32">(<argument><expr><name pos:line="127" pos:column="33">HDR_TRANSFER_ENCODING<pos:position pos:line="127" pos:column="54"/></name></expr></argument>)<pos:position pos:line="127" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="128" pos:column="9">conn<pos:position pos:line="128" pos:column="13"/></name><operator pos:line="128" pos:column="13">-&gt;<pos:position pos:line="128" pos:column="18"/></operator><name pos:line="128" pos:column="15">finishDechunkingRequest<pos:position pos:line="128" pos:column="38"/></name></name><argument_list pos:line="128" pos:column="38">(<argument><expr><name pos:line="128" pos:column="39">hp<pos:position pos:line="128" pos:column="41"/></name></expr></argument>)<pos:position pos:line="128" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="129" pos:column="6"/></block></then> <else pos:line="129" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="130" pos:column="9">conn<pos:position pos:line="130" pos:column="13"/></name><operator pos:line="130" pos:column="13">-&gt;<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="15">cleanDechunkingRequest<pos:position pos:line="130" pos:column="37"/></name></name><argument_list pos:line="130" pos:column="37">()<pos:position pos:line="130" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="40"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="132" pos:column="5">mustReplyToOptions<pos:position pos:line="132" pos:column="23"/></name> <operator pos:line="132" pos:column="24">=<pos:position pos:line="132" pos:column="25"/></operator> <operator pos:line="132" pos:column="26">(<pos:position pos:line="132" pos:column="27"/></operator><name pos:line="132" pos:column="27">method<pos:position pos:line="132" pos:column="33"/></name> <operator pos:line="132" pos:column="34">==<pos:position pos:line="132" pos:column="36"/></operator> <name pos:line="132" pos:column="37">METHOD_OPTIONS<pos:position pos:line="132" pos:column="51"/></name><operator pos:line="132" pos:column="51">)<pos:position pos:line="132" pos:column="52"/></operator> <operator pos:line="132" pos:column="53">&amp;&amp;<pos:position pos:line="132" pos:column="63"/></operator>
                         <operator pos:line="133" pos:column="26">(<pos:position pos:line="133" pos:column="27"/></operator><call><name><name pos:line="133" pos:column="27">request<pos:position pos:line="133" pos:column="34"/></name><operator pos:line="133" pos:column="34">-&gt;<pos:position pos:line="133" pos:column="39"/></operator><name pos:line="133" pos:column="36">header<pos:position pos:line="133" pos:column="42"/></name><operator pos:line="133" pos:column="42">.<pos:position pos:line="133" pos:column="43"/></operator><name pos:line="133" pos:column="43">getInt64<pos:position pos:line="133" pos:column="51"/></name></name><argument_list pos:line="133" pos:column="51">(<argument><expr><name pos:line="133" pos:column="52">HDR_MAX_FORWARDS<pos:position pos:line="133" pos:column="68"/></name></expr></argument>)<pos:position pos:line="133" pos:column="69"/></argument_list></call> <operator pos:line="133" pos:column="70">==<pos:position pos:line="133" pos:column="72"/></operator> <literal type="number" pos:line="133" pos:column="73">0<pos:position pos:line="133" pos:column="74"/></literal><operator pos:line="133" pos:column="74">)<pos:position pos:line="133" pos:column="75"/></operator></expr>;<pos:position pos:line="133" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name pos:line="134" pos:column="5">unsupportedTe<pos:position pos:line="134" pos:column="18"/></name> <operator pos:line="134" pos:column="19">=<pos:position pos:line="134" pos:column="20"/></operator> <name pos:line="134" pos:column="21">tePresent<pos:position pos:line="134" pos:column="30"/></name> <operator pos:line="134" pos:column="31">&amp;&amp;<pos:position pos:line="134" pos:column="41"/></operator> <operator pos:line="134" pos:column="34">!<pos:position pos:line="134" pos:column="35"/></operator><name pos:line="134" pos:column="35">deChunked<pos:position pos:line="134" pos:column="44"/></name></expr>;<pos:position pos:line="134" pos:column="45"/></expr_stmt>
    <if pos:line="135" pos:column="5">if <condition pos:line="135" pos:column="8">(<expr><operator pos:line="135" pos:column="9">!<pos:position pos:line="135" pos:column="10"/></operator><call><name pos:line="135" pos:column="10">urlCheckRequest<pos:position pos:line="135" pos:column="25"/></name><argument_list pos:line="135" pos:column="25">(<argument><expr><name pos:line="135" pos:column="26">request<pos:position pos:line="135" pos:column="33"/></name></expr></argument>)<pos:position pos:line="135" pos:column="34"/></argument_list></call> <operator pos:line="135" pos:column="35">||<pos:position pos:line="135" pos:column="37"/></operator> <name pos:line="135" pos:column="38">mustReplyToOptions<pos:position pos:line="135" pos:column="56"/></name> <operator pos:line="135" pos:column="57">||<pos:position pos:line="135" pos:column="59"/></operator> <name pos:line="135" pos:column="60">unsupportedTe<pos:position pos:line="135" pos:column="73"/></name></expr>)<pos:position pos:line="135" pos:column="74"/></condition><then pos:line="135" pos:column="74"> <block pos:line="135" pos:column="75">{
        <decl_stmt><decl><type><name pos:line="136" pos:column="9">clientStreamNode<pos:position pos:line="136" pos:column="25"/></name> <modifier pos:line="136" pos:column="26">*<pos:position pos:line="136" pos:column="27"/></modifier></type><name pos:line="136" pos:column="27">node<pos:position pos:line="136" pos:column="31"/></name> <init pos:line="136" pos:column="32">= <expr><call><name><name pos:line="136" pos:column="34">context<pos:position pos:line="136" pos:column="41"/></name><operator pos:line="136" pos:column="41">-&gt;<pos:position pos:line="136" pos:column="46"/></operator><name pos:line="136" pos:column="43">getClientReplyContext<pos:position pos:line="136" pos:column="64"/></name></name><argument_list pos:line="136" pos:column="64">()<pos:position pos:line="136" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="136" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="137" pos:column="9">clientReplyContext<pos:position pos:line="137" pos:column="27"/></name> <modifier pos:line="137" pos:column="28">*<pos:position pos:line="137" pos:column="29"/></modifier></type><name pos:line="137" pos:column="29">repContext<pos:position pos:line="137" pos:column="39"/></name> <init pos:line="137" pos:column="40">= <expr><cast type="dynamic" pos:line="137" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="137" pos:column="54">&lt;<argument><expr><name pos:line="137" pos:column="55">clientReplyContext<pos:position pos:line="137" pos:column="73"/></name> <operator pos:line="137" pos:column="74">*<pos:position pos:line="137" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="137" pos:column="79"/></argument_list><argument_list pos:line="137" pos:column="76">(<argument><expr><call><name><name pos:line="137" pos:column="77">node<pos:position pos:line="137" pos:column="81"/></name><operator pos:line="137" pos:column="81">-&gt;<pos:position pos:line="137" pos:column="86"/></operator><name pos:line="137" pos:column="83">data<pos:position pos:line="137" pos:column="87"/></name><operator pos:line="137" pos:column="87">.<pos:position pos:line="137" pos:column="88"/></operator><name pos:line="137" pos:column="88">getRaw<pos:position pos:line="137" pos:column="94"/></name></name><argument_list pos:line="137" pos:column="94">()<pos:position pos:line="137" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="137" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">assert<pos:position pos:line="138" pos:column="15"/></name> <argument_list pos:line="138" pos:column="16">(<argument><expr><name pos:line="138" pos:column="17">repContext<pos:position pos:line="138" pos:column="27"/></name></expr></argument>)<pos:position pos:line="138" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="139" pos:column="9">repContext<pos:position pos:line="139" pos:column="19"/></name><operator pos:line="139" pos:column="19">-&gt;<pos:position pos:line="139" pos:column="24"/></operator><name pos:line="139" pos:column="21">setReplyToError<pos:position pos:line="139" pos:column="36"/></name></name><argument_list pos:line="139" pos:column="36">(<argument><expr><name pos:line="139" pos:column="37">ERR_UNSUP_REQ<pos:position pos:line="139" pos:column="50"/></name></expr></argument>,
                                    <argument><expr><name pos:line="140" pos:column="37">HTTP_NOT_IMPLEMENTED<pos:position pos:line="140" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="59">request<pos:position pos:line="140" pos:column="66"/></name><operator pos:line="140" pos:column="66">-&gt;<pos:position pos:line="140" pos:column="71"/></operator><name pos:line="140" pos:column="68">method<pos:position pos:line="140" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="76">NULL<pos:position pos:line="140" pos:column="80"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="141" pos:column="37">conn<pos:position pos:line="141" pos:column="41"/></name><operator pos:line="141" pos:column="41">-&gt;<pos:position pos:line="141" pos:column="46"/></operator><name pos:line="141" pos:column="43">peer<pos:position pos:line="141" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="49">request<pos:position pos:line="141" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="58">NULL<pos:position pos:line="141" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="64">NULL<pos:position pos:line="141" pos:column="68"/></name></expr></argument>)<pos:position pos:line="141" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">assert<pos:position pos:line="142" pos:column="15"/></name><argument_list pos:line="142" pos:column="15">(<argument><expr><name><name pos:line="142" pos:column="16">context<pos:position pos:line="142" pos:column="23"/></name><operator pos:line="142" pos:column="23">-&gt;<pos:position pos:line="142" pos:column="28"/></operator><name pos:line="142" pos:column="25">http<pos:position pos:line="142" pos:column="29"/></name><operator pos:line="142" pos:column="29">-&gt;<pos:position pos:line="142" pos:column="34"/></operator><name pos:line="142" pos:column="31">out<pos:position pos:line="142" pos:column="34"/></name><operator pos:line="142" pos:column="34">.<pos:position pos:line="142" pos:column="35"/></operator><name pos:line="142" pos:column="35">offset<pos:position pos:line="142" pos:column="41"/></name></name> <operator pos:line="142" pos:column="42">==<pos:position pos:line="142" pos:column="44"/></operator> <literal type="number" pos:line="142" pos:column="45">0<pos:position pos:line="142" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="143" pos:column="9">context<pos:position pos:line="143" pos:column="16"/></name><operator pos:line="143" pos:column="16">-&gt;<pos:position pos:line="143" pos:column="21"/></operator><name pos:line="143" pos:column="18">pullData<pos:position pos:line="143" pos:column="26"/></name></name><argument_list pos:line="143" pos:column="26">()<pos:position pos:line="143" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="144" pos:column="9">conn<pos:position pos:line="144" pos:column="13"/></name><operator pos:line="144" pos:column="13">-&gt;<pos:position pos:line="144" pos:column="18"/></operator><name pos:line="144" pos:column="15">flags<pos:position pos:line="144" pos:column="20"/></name><operator pos:line="144" pos:column="20">.<pos:position pos:line="144" pos:column="21"/></operator><name pos:line="144" pos:column="21">readMoreRequests<pos:position pos:line="144" pos:column="37"/></name></name> <operator pos:line="144" pos:column="38">=<pos:position pos:line="144" pos:column="39"/></operator> <literal type="boolean" pos:line="144" pos:column="40">false<pos:position pos:line="144" pos:column="45"/></literal></expr>;<pos:position pos:line="144" pos:column="46"/></expr_stmt>
        <goto pos:line="145" pos:column="9">goto <name pos:line="145" pos:column="14">finish<pos:position pos:line="145" pos:column="20"/></name>;<pos:position pos:line="145" pos:column="21"/></goto>
    }<pos:position pos:line="146" pos:column="6"/></block></then></if>


    <if pos:line="149" pos:column="5">if <condition pos:line="149" pos:column="8">(<expr><operator pos:line="149" pos:column="9">!<pos:position pos:line="149" pos:column="10"/></operator><call><name pos:line="149" pos:column="10">clientIsContentLengthValid<pos:position pos:line="149" pos:column="36"/></name><argument_list pos:line="149" pos:column="36">(<argument><expr><name pos:line="149" pos:column="37">request<pos:position pos:line="149" pos:column="44"/></name></expr></argument>)<pos:position pos:line="149" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="149" pos:column="46"/></condition><then pos:line="149" pos:column="46"> <block pos:line="149" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="150" pos:column="9">clientStreamNode<pos:position pos:line="150" pos:column="25"/></name> <modifier pos:line="150" pos:column="26">*<pos:position pos:line="150" pos:column="27"/></modifier></type><name pos:line="150" pos:column="27">node<pos:position pos:line="150" pos:column="31"/></name> <init pos:line="150" pos:column="32">= <expr><call><name><name pos:line="150" pos:column="34">context<pos:position pos:line="150" pos:column="41"/></name><operator pos:line="150" pos:column="41">-&gt;<pos:position pos:line="150" pos:column="46"/></operator><name pos:line="150" pos:column="43">getClientReplyContext<pos:position pos:line="150" pos:column="64"/></name></name><argument_list pos:line="150" pos:column="64">()<pos:position pos:line="150" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="150" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="151" pos:column="9">clientReplyContext<pos:position pos:line="151" pos:column="27"/></name> <modifier pos:line="151" pos:column="28">*<pos:position pos:line="151" pos:column="29"/></modifier></type><name pos:line="151" pos:column="29">repContext<pos:position pos:line="151" pos:column="39"/></name> <init pos:line="151" pos:column="40">= <expr><cast type="dynamic" pos:line="151" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="151" pos:column="54">&lt;<argument><expr><name pos:line="151" pos:column="55">clientReplyContext<pos:position pos:line="151" pos:column="73"/></name> <operator pos:line="151" pos:column="74">*<pos:position pos:line="151" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="151" pos:column="79"/></argument_list><argument_list pos:line="151" pos:column="76">(<argument><expr><call><name><name pos:line="151" pos:column="77">node<pos:position pos:line="151" pos:column="81"/></name><operator pos:line="151" pos:column="81">-&gt;<pos:position pos:line="151" pos:column="86"/></operator><name pos:line="151" pos:column="83">data<pos:position pos:line="151" pos:column="87"/></name><operator pos:line="151" pos:column="87">.<pos:position pos:line="151" pos:column="88"/></operator><name pos:line="151" pos:column="88">getRaw<pos:position pos:line="151" pos:column="94"/></name></name><argument_list pos:line="151" pos:column="94">()<pos:position pos:line="151" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="151" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="151" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="152" pos:column="9">assert<pos:position pos:line="152" pos:column="15"/></name> <argument_list pos:line="152" pos:column="16">(<argument><expr><name pos:line="152" pos:column="17">repContext<pos:position pos:line="152" pos:column="27"/></name></expr></argument>)<pos:position pos:line="152" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="153" pos:column="9">repContext<pos:position pos:line="153" pos:column="19"/></name><operator pos:line="153" pos:column="19">-&gt;<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="21">setReplyToError<pos:position pos:line="153" pos:column="36"/></name></name><argument_list pos:line="153" pos:column="36">(<argument><expr><name pos:line="153" pos:column="37">ERR_INVALID_REQ<pos:position pos:line="153" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><name pos:line="154" pos:column="37">HTTP_LENGTH_REQUIRED<pos:position pos:line="154" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="59">request<pos:position pos:line="154" pos:column="66"/></name><operator pos:line="154" pos:column="66">-&gt;<pos:position pos:line="154" pos:column="71"/></operator><name pos:line="154" pos:column="68">method<pos:position pos:line="154" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="76">NULL<pos:position pos:line="154" pos:column="80"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="155" pos:column="37">conn<pos:position pos:line="155" pos:column="41"/></name><operator pos:line="155" pos:column="41">-&gt;<pos:position pos:line="155" pos:column="46"/></operator><name pos:line="155" pos:column="43">peer<pos:position pos:line="155" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="49">request<pos:position pos:line="155" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="58">NULL<pos:position pos:line="155" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="64">NULL<pos:position pos:line="155" pos:column="68"/></name></expr></argument>)<pos:position pos:line="155" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="156" pos:column="9">assert<pos:position pos:line="156" pos:column="15"/></name><argument_list pos:line="156" pos:column="15">(<argument><expr><name><name pos:line="156" pos:column="16">context<pos:position pos:line="156" pos:column="23"/></name><operator pos:line="156" pos:column="23">-&gt;<pos:position pos:line="156" pos:column="28"/></operator><name pos:line="156" pos:column="25">http<pos:position pos:line="156" pos:column="29"/></name><operator pos:line="156" pos:column="29">-&gt;<pos:position pos:line="156" pos:column="34"/></operator><name pos:line="156" pos:column="31">out<pos:position pos:line="156" pos:column="34"/></name><operator pos:line="156" pos:column="34">.<pos:position pos:line="156" pos:column="35"/></operator><name pos:line="156" pos:column="35">offset<pos:position pos:line="156" pos:column="41"/></name></name> <operator pos:line="156" pos:column="42">==<pos:position pos:line="156" pos:column="44"/></operator> <literal type="number" pos:line="156" pos:column="45">0<pos:position pos:line="156" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="157" pos:column="9">context<pos:position pos:line="157" pos:column="16"/></name><operator pos:line="157" pos:column="16">-&gt;<pos:position pos:line="157" pos:column="21"/></operator><name pos:line="157" pos:column="18">pullData<pos:position pos:line="157" pos:column="26"/></name></name><argument_list pos:line="157" pos:column="26">()<pos:position pos:line="157" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="158" pos:column="9">conn<pos:position pos:line="158" pos:column="13"/></name><operator pos:line="158" pos:column="13">-&gt;<pos:position pos:line="158" pos:column="18"/></operator><name pos:line="158" pos:column="15">flags<pos:position pos:line="158" pos:column="20"/></name><operator pos:line="158" pos:column="20">.<pos:position pos:line="158" pos:column="21"/></operator><name pos:line="158" pos:column="21">readMoreRequests<pos:position pos:line="158" pos:column="37"/></name></name> <operator pos:line="158" pos:column="38">=<pos:position pos:line="158" pos:column="39"/></operator> <literal type="boolean" pos:line="158" pos:column="40">false<pos:position pos:line="158" pos:column="45"/></literal></expr>;<pos:position pos:line="158" pos:column="46"/></expr_stmt>
        <goto pos:line="159" pos:column="9">goto <name pos:line="159" pos:column="14">finish<pos:position pos:line="159" pos:column="20"/></name>;<pos:position pos:line="159" pos:column="21"/></goto>
    }<pos:position pos:line="160" pos:column="6"/></block></then></if>

    <if pos:line="162" pos:column="5">if <condition pos:line="162" pos:column="8">(<expr><call><name><name pos:line="162" pos:column="9">request<pos:position pos:line="162" pos:column="16"/></name><operator pos:line="162" pos:column="16">-&gt;<pos:position pos:line="162" pos:column="21"/></operator><name pos:line="162" pos:column="18">header<pos:position pos:line="162" pos:column="24"/></name><operator pos:line="162" pos:column="24">.<pos:position pos:line="162" pos:column="25"/></operator><name pos:line="162" pos:column="25">has<pos:position pos:line="162" pos:column="28"/></name></name><argument_list pos:line="162" pos:column="28">(<argument><expr><name pos:line="162" pos:column="29">HDR_EXPECT<pos:position pos:line="162" pos:column="39"/></name></expr></argument>)<pos:position pos:line="162" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="41"/></condition><then pos:line="162" pos:column="41"> <block pos:line="162" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="163" pos:column="9">int<pos:position pos:line="163" pos:column="12"/></name></type> <name pos:line="163" pos:column="13">ignore<pos:position pos:line="163" pos:column="19"/></name> <init pos:line="163" pos:column="20">= <expr><literal type="number" pos:line="163" pos:column="22">0<pos:position pos:line="163" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="163" pos:column="24"/></decl_stmt>
<cpp:if pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">if<pos:position pos:line="164" pos:column="4"/></cpp:directive> <expr><name pos:line="164" pos:column="5">HTTP_VIOLATIONS<pos:position pos:line="164" pos:column="20"/></name></expr></cpp:if>
        <if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name><name pos:line="165" pos:column="13">Config<pos:position pos:line="165" pos:column="19"/></name><operator pos:line="165" pos:column="19">.<pos:position pos:line="165" pos:column="20"/></operator><name pos:line="165" pos:column="20">onoff<pos:position pos:line="165" pos:column="25"/></name><operator pos:line="165" pos:column="25">.<pos:position pos:line="165" pos:column="26"/></operator><name pos:line="165" pos:column="26">ignore_expect_100<pos:position pos:line="165" pos:column="43"/></name></name></expr>)<pos:position pos:line="165" pos:column="44"/></condition><then pos:line="165" pos:column="44"> <block pos:line="165" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="166" pos:column="13">String<pos:position pos:line="166" pos:column="19"/></name></type> <name pos:line="166" pos:column="20">expect<pos:position pos:line="166" pos:column="26"/></name> <init pos:line="166" pos:column="27">= <expr><call><name><name pos:line="166" pos:column="29">request<pos:position pos:line="166" pos:column="36"/></name><operator pos:line="166" pos:column="36">-&gt;<pos:position pos:line="166" pos:column="41"/></operator><name pos:line="166" pos:column="38">header<pos:position pos:line="166" pos:column="44"/></name><operator pos:line="166" pos:column="44">.<pos:position pos:line="166" pos:column="45"/></operator><name pos:line="166" pos:column="45">getList<pos:position pos:line="166" pos:column="52"/></name></name><argument_list pos:line="166" pos:column="52">(<argument><expr><name pos:line="166" pos:column="53">HDR_EXPECT<pos:position pos:line="166" pos:column="63"/></name></expr></argument>)<pos:position pos:line="166" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="166" pos:column="65"/></decl_stmt>
            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><call><name><name pos:line="167" pos:column="17">expect<pos:position pos:line="167" pos:column="23"/></name><operator pos:line="167" pos:column="23">.<pos:position pos:line="167" pos:column="24"/></operator><name pos:line="167" pos:column="24">caseCmp<pos:position pos:line="167" pos:column="31"/></name></name><argument_list pos:line="167" pos:column="31">(<argument><expr><literal type="string" pos:line="167" pos:column="32">"100-continue"<pos:position pos:line="167" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="47"/></argument_list></call> <operator pos:line="167" pos:column="48">==<pos:position pos:line="167" pos:column="50"/></operator> <literal type="number" pos:line="167" pos:column="51">0<pos:position pos:line="167" pos:column="52"/></literal></expr>)<pos:position pos:line="167" pos:column="53"/></condition><then pos:line="167" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><name pos:line="168" pos:column="17">ignore<pos:position pos:line="168" pos:column="23"/></name> <operator pos:line="168" pos:column="24">=<pos:position pos:line="168" pos:column="25"/></operator> <literal type="number" pos:line="168" pos:column="26">1<pos:position pos:line="168" pos:column="27"/></literal></expr>;<pos:position pos:line="168" pos:column="28"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="169" pos:column="13">expect<pos:position pos:line="169" pos:column="19"/></name><operator pos:line="169" pos:column="19">.<pos:position pos:line="169" pos:column="20"/></operator><name pos:line="169" pos:column="20">clean<pos:position pos:line="169" pos:column="25"/></name></name><argument_list pos:line="169" pos:column="25">()<pos:position pos:line="169" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="170" pos:column="10"/></block></then></if>
<cpp:endif pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">endif<pos:position pos:line="171" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">!<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="14">ignore<pos:position pos:line="172" pos:column="20"/></name></expr>)<pos:position pos:line="172" pos:column="21"/></condition><then pos:line="172" pos:column="21"> <block pos:line="172" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="173" pos:column="13">clientStreamNode<pos:position pos:line="173" pos:column="29"/></name> <modifier pos:line="173" pos:column="30">*<pos:position pos:line="173" pos:column="31"/></modifier></type><name pos:line="173" pos:column="31">node<pos:position pos:line="173" pos:column="35"/></name> <init pos:line="173" pos:column="36">= <expr><call><name><name pos:line="173" pos:column="38">context<pos:position pos:line="173" pos:column="45"/></name><operator pos:line="173" pos:column="45">-&gt;<pos:position pos:line="173" pos:column="50"/></operator><name pos:line="173" pos:column="47">getClientReplyContext<pos:position pos:line="173" pos:column="68"/></name></name><argument_list pos:line="173" pos:column="68">()<pos:position pos:line="173" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="173" pos:column="71"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="174" pos:column="13">clientReplyContext<pos:position pos:line="174" pos:column="31"/></name> <modifier pos:line="174" pos:column="32">*<pos:position pos:line="174" pos:column="33"/></modifier></type><name pos:line="174" pos:column="33">repContext<pos:position pos:line="174" pos:column="43"/></name> <init pos:line="174" pos:column="44">= <expr><cast type="dynamic" pos:line="174" pos:column="46">dynamic_cast<argument_list type="generic" pos:line="174" pos:column="58">&lt;<argument><expr><name pos:line="174" pos:column="59">clientReplyContext<pos:position pos:line="174" pos:column="77"/></name> <operator pos:line="174" pos:column="78">*<pos:position pos:line="174" pos:column="79"/></operator></expr></argument>&gt;<pos:position pos:line="174" pos:column="83"/></argument_list><argument_list pos:line="174" pos:column="80">(<argument><expr><call><name><name pos:line="174" pos:column="81">node<pos:position pos:line="174" pos:column="85"/></name><operator pos:line="174" pos:column="85">-&gt;<pos:position pos:line="174" pos:column="90"/></operator><name pos:line="174" pos:column="87">data<pos:position pos:line="174" pos:column="91"/></name><operator pos:line="174" pos:column="91">.<pos:position pos:line="174" pos:column="92"/></operator><name pos:line="174" pos:column="92">getRaw<pos:position pos:line="174" pos:column="98"/></name></name><argument_list pos:line="174" pos:column="98">()<pos:position pos:line="174" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="174" pos:column="101"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="174" pos:column="102"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="175" pos:column="13">assert<pos:position pos:line="175" pos:column="19"/></name> <argument_list pos:line="175" pos:column="20">(<argument><expr><name pos:line="175" pos:column="21">repContext<pos:position pos:line="175" pos:column="31"/></name></expr></argument>)<pos:position pos:line="175" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="176" pos:column="13">repContext<pos:position pos:line="176" pos:column="23"/></name><operator pos:line="176" pos:column="23">-&gt;<pos:position pos:line="176" pos:column="28"/></operator><name pos:line="176" pos:column="25">setReplyToError<pos:position pos:line="176" pos:column="40"/></name></name><argument_list pos:line="176" pos:column="40">(<argument><expr><name pos:line="176" pos:column="41">ERR_INVALID_REQ<pos:position pos:line="176" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="58">HTTP_EXPECTATION_FAILED<pos:position pos:line="176" pos:column="81"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="83">request<pos:position pos:line="176" pos:column="90"/></name><operator pos:line="176" pos:column="90">-&gt;<pos:position pos:line="176" pos:column="95"/></operator><name pos:line="176" pos:column="92">method<pos:position pos:line="176" pos:column="98"/></name></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="100">http<pos:position pos:line="176" pos:column="104"/></name><operator pos:line="176" pos:column="104">-&gt;<pos:position pos:line="176" pos:column="109"/></operator><name pos:line="176" pos:column="106">uri<pos:position pos:line="176" pos:column="109"/></name></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="111">conn<pos:position pos:line="176" pos:column="115"/></name><operator pos:line="176" pos:column="115">-&gt;<pos:position pos:line="176" pos:column="120"/></operator><name pos:line="176" pos:column="117">peer<pos:position pos:line="176" pos:column="121"/></name></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="123">request<pos:position pos:line="176" pos:column="130"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="132">NULL<pos:position pos:line="176" pos:column="136"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="138">NULL<pos:position pos:line="176" pos:column="142"/></name></expr></argument>)<pos:position pos:line="176" pos:column="143"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="144"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="177" pos:column="13">assert<pos:position pos:line="177" pos:column="19"/></name><argument_list pos:line="177" pos:column="19">(<argument><expr><name><name pos:line="177" pos:column="20">context<pos:position pos:line="177" pos:column="27"/></name><operator pos:line="177" pos:column="27">-&gt;<pos:position pos:line="177" pos:column="32"/></operator><name pos:line="177" pos:column="29">http<pos:position pos:line="177" pos:column="33"/></name><operator pos:line="177" pos:column="33">-&gt;<pos:position pos:line="177" pos:column="38"/></operator><name pos:line="177" pos:column="35">out<pos:position pos:line="177" pos:column="38"/></name><operator pos:line="177" pos:column="38">.<pos:position pos:line="177" pos:column="39"/></operator><name pos:line="177" pos:column="39">offset<pos:position pos:line="177" pos:column="45"/></name></name> <operator pos:line="177" pos:column="46">==<pos:position pos:line="177" pos:column="48"/></operator> <literal type="number" pos:line="177" pos:column="49">0<pos:position pos:line="177" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="178" pos:column="13">context<pos:position pos:line="178" pos:column="20"/></name><operator pos:line="178" pos:column="20">-&gt;<pos:position pos:line="178" pos:column="25"/></operator><name pos:line="178" pos:column="22">pullData<pos:position pos:line="178" pos:column="30"/></name></name><argument_list pos:line="178" pos:column="30">()<pos:position pos:line="178" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="33"/></expr_stmt>
            <goto pos:line="179" pos:column="13">goto <name pos:line="179" pos:column="18">finish<pos:position pos:line="179" pos:column="24"/></name>;<pos:position pos:line="179" pos:column="25"/></goto>
        }<pos:position pos:line="180" pos:column="10"/></block></then></if>
    }<pos:position pos:line="181" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="183" pos:column="5">http<pos:position pos:line="183" pos:column="9"/></name><operator pos:line="183" pos:column="9">-&gt;<pos:position pos:line="183" pos:column="14"/></operator><name pos:line="183" pos:column="11">request<pos:position pos:line="183" pos:column="18"/></name></name> <operator pos:line="183" pos:column="19">=<pos:position pos:line="183" pos:column="20"/></operator> <call><name pos:line="183" pos:column="21">HTTPMSGLOCK<pos:position pos:line="183" pos:column="32"/></name><argument_list pos:line="183" pos:column="32">(<argument><expr><name pos:line="183" pos:column="33">request<pos:position pos:line="183" pos:column="40"/></name></expr></argument>)<pos:position pos:line="183" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="184" pos:column="5">clientSetKeepaliveFlag<pos:position pos:line="184" pos:column="27"/></name><argument_list pos:line="184" pos:column="27">(<argument><expr><name pos:line="184" pos:column="28">http<pos:position pos:line="184" pos:column="32"/></name></expr></argument>)<pos:position pos:line="184" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="186" pos:column="5">/* If this is a CONNECT, don't schedule a read - ssl.c will handle it */</comment>
    <if pos:line="187" pos:column="5">if <condition pos:line="187" pos:column="8">(<expr><name><name pos:line="187" pos:column="9">http<pos:position pos:line="187" pos:column="13"/></name><operator pos:line="187" pos:column="13">-&gt;<pos:position pos:line="187" pos:column="18"/></operator><name pos:line="187" pos:column="15">request<pos:position pos:line="187" pos:column="22"/></name><operator pos:line="187" pos:column="22">-&gt;<pos:position pos:line="187" pos:column="27"/></operator><name pos:line="187" pos:column="24">method<pos:position pos:line="187" pos:column="30"/></name></name> <operator pos:line="187" pos:column="31">==<pos:position pos:line="187" pos:column="33"/></operator> <name pos:line="187" pos:column="34">METHOD_CONNECT<pos:position pos:line="187" pos:column="48"/></name></expr>)<pos:position pos:line="187" pos:column="49"/></condition><then pos:line="187" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="188" pos:column="9">context<pos:position pos:line="188" pos:column="16"/></name><operator pos:line="188" pos:column="16">-&gt;<pos:position pos:line="188" pos:column="21"/></operator><name pos:line="188" pos:column="18">mayUseConnection<pos:position pos:line="188" pos:column="34"/></name></name><argument_list pos:line="188" pos:column="34">(<argument><expr><literal type="boolean" pos:line="188" pos:column="35">true<pos:position pos:line="188" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="41"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="190" pos:column="5">/* Do we expect a request-body? */</comment>
    <if pos:line="191" pos:column="5">if <condition pos:line="191" pos:column="8">(<expr><operator pos:line="191" pos:column="9">!<pos:position pos:line="191" pos:column="10"/></operator><call><name><name pos:line="191" pos:column="10">context<pos:position pos:line="191" pos:column="17"/></name><operator pos:line="191" pos:column="17">-&gt;<pos:position pos:line="191" pos:column="22"/></operator><name pos:line="191" pos:column="19">mayUseConnection<pos:position pos:line="191" pos:column="35"/></name></name><argument_list pos:line="191" pos:column="35">()<pos:position pos:line="191" pos:column="37"/></argument_list></call> <operator pos:line="191" pos:column="38">&amp;&amp;<pos:position pos:line="191" pos:column="48"/></operator> <name><name pos:line="191" pos:column="41">request<pos:position pos:line="191" pos:column="48"/></name><operator pos:line="191" pos:column="48">-&gt;<pos:position pos:line="191" pos:column="53"/></operator><name pos:line="191" pos:column="50">content_length<pos:position pos:line="191" pos:column="64"/></name></name> <operator pos:line="191" pos:column="65">&gt;<pos:position pos:line="191" pos:column="69"/></operator> <literal type="number" pos:line="191" pos:column="67">0<pos:position pos:line="191" pos:column="68"/></literal></expr>)<pos:position pos:line="191" pos:column="69"/></condition><then pos:line="191" pos:column="69"> <block pos:line="191" pos:column="70">{
        <expr_stmt><expr><name><name pos:line="192" pos:column="9">request<pos:position pos:line="192" pos:column="16"/></name><operator pos:line="192" pos:column="16">-&gt;<pos:position pos:line="192" pos:column="21"/></operator><name pos:line="192" pos:column="18">body_pipe<pos:position pos:line="192" pos:column="27"/></name></name> <operator pos:line="192" pos:column="28">=<pos:position pos:line="192" pos:column="29"/></operator> <call><name><name pos:line="192" pos:column="30">conn<pos:position pos:line="192" pos:column="34"/></name><operator pos:line="192" pos:column="34">-&gt;<pos:position pos:line="192" pos:column="39"/></operator><name pos:line="192" pos:column="36">expectRequestBody<pos:position pos:line="192" pos:column="53"/></name></name><argument_list pos:line="192" pos:column="53">(<argument><expr><name><name pos:line="192" pos:column="54">request<pos:position pos:line="192" pos:column="61"/></name><operator pos:line="192" pos:column="61">-&gt;<pos:position pos:line="192" pos:column="66"/></operator><name pos:line="192" pos:column="63">content_length<pos:position pos:line="192" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="79"/></expr_stmt>

        <comment type="line" pos:line="194" pos:column="9">// consume header early so that body pipe gets just the body</comment>
        <expr_stmt><expr><call><name pos:line="195" pos:column="9">connNoteUseOfBuffer<pos:position pos:line="195" pos:column="28"/></name><argument_list pos:line="195" pos:column="28">(<argument><expr><name pos:line="195" pos:column="29">conn<pos:position pos:line="195" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="35">http<pos:position pos:line="195" pos:column="39"/></name><operator pos:line="195" pos:column="39">-&gt;<pos:position pos:line="195" pos:column="44"/></operator><name pos:line="195" pos:column="41">req_sz<pos:position pos:line="195" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="196" pos:column="9">notedUseOfBuffer<pos:position pos:line="196" pos:column="25"/></name> <operator pos:line="196" pos:column="26">=<pos:position pos:line="196" pos:column="27"/></operator> <literal type="boolean" pos:line="196" pos:column="28">true<pos:position pos:line="196" pos:column="32"/></literal></expr>;<pos:position pos:line="196" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="198" pos:column="9">conn<pos:position pos:line="198" pos:column="13"/></name><operator pos:line="198" pos:column="13">-&gt;<pos:position pos:line="198" pos:column="18"/></operator><name pos:line="198" pos:column="15">handleRequestBodyData<pos:position pos:line="198" pos:column="36"/></name></name><argument_list pos:line="198" pos:column="36">()<pos:position pos:line="198" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="39"/></expr_stmt> <comment type="line" pos:line="198" pos:column="40">// may comm_close and stop producing</comment>

        <comment type="block" pos:line="200" pos:column="9">/* Is it too large? */</comment>

        <if pos:line="202" pos:column="9">if <condition pos:line="202" pos:column="12">(<expr><operator pos:line="202" pos:column="13">!<pos:position pos:line="202" pos:column="14"/></operator><call><name pos:line="202" pos:column="14">clientIsRequestBodyValid<pos:position pos:line="202" pos:column="38"/></name><argument_list pos:line="202" pos:column="38">(<argument><expr><name><name pos:line="202" pos:column="39">request<pos:position pos:line="202" pos:column="46"/></name><operator pos:line="202" pos:column="46">-&gt;<pos:position pos:line="202" pos:column="51"/></operator><name pos:line="202" pos:column="48">content_length<pos:position pos:line="202" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="63"/></argument_list></call> <operator pos:line="202" pos:column="64">||<pos:position pos:line="202" pos:column="66"/></operator>
                <call><name pos:line="203" pos:column="17">clientIsRequestBodyTooLargeForPolicy<pos:position pos:line="203" pos:column="53"/></name><argument_list pos:line="203" pos:column="53">(<argument><expr><name><name pos:line="203" pos:column="54">request<pos:position pos:line="203" pos:column="61"/></name><operator pos:line="203" pos:column="61">-&gt;<pos:position pos:line="203" pos:column="66"/></operator><name pos:line="203" pos:column="63">content_length<pos:position pos:line="203" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="203" pos:column="79"/></condition><then pos:line="203" pos:column="79"> <block pos:line="203" pos:column="80">{
            <decl_stmt><decl><type><name pos:line="204" pos:column="13">clientStreamNode<pos:position pos:line="204" pos:column="29"/></name> <modifier pos:line="204" pos:column="30">*<pos:position pos:line="204" pos:column="31"/></modifier></type><name pos:line="204" pos:column="31">node<pos:position pos:line="204" pos:column="35"/></name> <init pos:line="204" pos:column="36">= <expr><call><name><name pos:line="204" pos:column="38">context<pos:position pos:line="204" pos:column="45"/></name><operator pos:line="204" pos:column="45">-&gt;<pos:position pos:line="204" pos:column="50"/></operator><name pos:line="204" pos:column="47">getClientReplyContext<pos:position pos:line="204" pos:column="68"/></name></name><argument_list pos:line="204" pos:column="68">()<pos:position pos:line="204" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="204" pos:column="71"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="205" pos:column="13">clientReplyContext<pos:position pos:line="205" pos:column="31"/></name> <modifier pos:line="205" pos:column="32">*<pos:position pos:line="205" pos:column="33"/></modifier></type><name pos:line="205" pos:column="33">repContext<pos:position pos:line="205" pos:column="43"/></name> <init pos:line="205" pos:column="44">= <expr><cast type="dynamic" pos:line="205" pos:column="46">dynamic_cast<argument_list type="generic" pos:line="205" pos:column="58">&lt;<argument><expr><name pos:line="205" pos:column="59">clientReplyContext<pos:position pos:line="205" pos:column="77"/></name> <operator pos:line="205" pos:column="78">*<pos:position pos:line="205" pos:column="79"/></operator></expr></argument>&gt;<pos:position pos:line="205" pos:column="83"/></argument_list><argument_list pos:line="205" pos:column="80">(<argument><expr><call><name><name pos:line="205" pos:column="81">node<pos:position pos:line="205" pos:column="85"/></name><operator pos:line="205" pos:column="85">-&gt;<pos:position pos:line="205" pos:column="90"/></operator><name pos:line="205" pos:column="87">data<pos:position pos:line="205" pos:column="91"/></name><operator pos:line="205" pos:column="91">.<pos:position pos:line="205" pos:column="92"/></operator><name pos:line="205" pos:column="92">getRaw<pos:position pos:line="205" pos:column="98"/></name></name><argument_list pos:line="205" pos:column="98">()<pos:position pos:line="205" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="205" pos:column="101"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="205" pos:column="102"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="206" pos:column="13">assert<pos:position pos:line="206" pos:column="19"/></name> <argument_list pos:line="206" pos:column="20">(<argument><expr><name pos:line="206" pos:column="21">repContext<pos:position pos:line="206" pos:column="31"/></name></expr></argument>)<pos:position pos:line="206" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="207" pos:column="13">repContext<pos:position pos:line="207" pos:column="23"/></name><operator pos:line="207" pos:column="23">-&gt;<pos:position pos:line="207" pos:column="28"/></operator><name pos:line="207" pos:column="25">setReplyToError<pos:position pos:line="207" pos:column="40"/></name></name><argument_list pos:line="207" pos:column="40">(<argument><expr><name pos:line="207" pos:column="41">ERR_TOO_BIG<pos:position pos:line="207" pos:column="52"/></name></expr></argument>,
                                        <argument><expr><name pos:line="208" pos:column="41">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="208" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="72">METHOD_NONE<pos:position pos:line="208" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="85">NULL<pos:position pos:line="208" pos:column="89"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="209" pos:column="41">conn<pos:position pos:line="209" pos:column="45"/></name><operator pos:line="209" pos:column="45">-&gt;<pos:position pos:line="209" pos:column="50"/></operator><name pos:line="209" pos:column="47">peer<pos:position pos:line="209" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="53">http<pos:position pos:line="209" pos:column="57"/></name><operator pos:line="209" pos:column="57">-&gt;<pos:position pos:line="209" pos:column="62"/></operator><name pos:line="209" pos:column="59">request<pos:position pos:line="209" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="68">NULL<pos:position pos:line="209" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="74">NULL<pos:position pos:line="209" pos:column="78"/></name></expr></argument>)<pos:position pos:line="209" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="210" pos:column="13">assert<pos:position pos:line="210" pos:column="19"/></name><argument_list pos:line="210" pos:column="19">(<argument><expr><name><name pos:line="210" pos:column="20">context<pos:position pos:line="210" pos:column="27"/></name><operator pos:line="210" pos:column="27">-&gt;<pos:position pos:line="210" pos:column="32"/></operator><name pos:line="210" pos:column="29">http<pos:position pos:line="210" pos:column="33"/></name><operator pos:line="210" pos:column="33">-&gt;<pos:position pos:line="210" pos:column="38"/></operator><name pos:line="210" pos:column="35">out<pos:position pos:line="210" pos:column="38"/></name><operator pos:line="210" pos:column="38">.<pos:position pos:line="210" pos:column="39"/></operator><name pos:line="210" pos:column="39">offset<pos:position pos:line="210" pos:column="45"/></name></name> <operator pos:line="210" pos:column="46">==<pos:position pos:line="210" pos:column="48"/></operator> <literal type="number" pos:line="210" pos:column="49">0<pos:position pos:line="210" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="211" pos:column="13">context<pos:position pos:line="211" pos:column="20"/></name><operator pos:line="211" pos:column="20">-&gt;<pos:position pos:line="211" pos:column="25"/></operator><name pos:line="211" pos:column="22">pullData<pos:position pos:line="211" pos:column="30"/></name></name><argument_list pos:line="211" pos:column="30">()<pos:position pos:line="211" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="33"/></expr_stmt>
            <goto pos:line="212" pos:column="13">goto <name pos:line="212" pos:column="18">finish<pos:position pos:line="212" pos:column="24"/></name>;<pos:position pos:line="212" pos:column="25"/></goto>
        }<pos:position pos:line="213" pos:column="10"/></block></then></if>

        <if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><operator pos:line="215" pos:column="13">!<pos:position pos:line="215" pos:column="14"/></operator><call><name><name pos:line="215" pos:column="14">request<pos:position pos:line="215" pos:column="21"/></name><operator pos:line="215" pos:column="21">-&gt;<pos:position pos:line="215" pos:column="26"/></operator><name pos:line="215" pos:column="23">body_pipe<pos:position pos:line="215" pos:column="32"/></name><operator pos:line="215" pos:column="32">-&gt;<pos:position pos:line="215" pos:column="37"/></operator><name pos:line="215" pos:column="34">productionEnded<pos:position pos:line="215" pos:column="49"/></name></name><argument_list pos:line="215" pos:column="49">()<pos:position pos:line="215" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="215" pos:column="52"/></condition><then pos:line="215" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="216" pos:column="13">conn<pos:position pos:line="216" pos:column="17"/></name><operator pos:line="216" pos:column="17">-&gt;<pos:position pos:line="216" pos:column="22"/></operator><name pos:line="216" pos:column="19">readSomeData<pos:position pos:line="216" pos:column="31"/></name></name><argument_list pos:line="216" pos:column="31">()<pos:position pos:line="216" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="34"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="218" pos:column="9">context<pos:position pos:line="218" pos:column="16"/></name><operator pos:line="218" pos:column="16">-&gt;<pos:position pos:line="218" pos:column="21"/></operator><name pos:line="218" pos:column="18">mayUseConnection<pos:position pos:line="218" pos:column="34"/></name></name><argument_list pos:line="218" pos:column="34">(<argument><expr><operator pos:line="218" pos:column="35">!<pos:position pos:line="218" pos:column="36"/></operator><call><name><name pos:line="218" pos:column="36">request<pos:position pos:line="218" pos:column="43"/></name><operator pos:line="218" pos:column="43">-&gt;<pos:position pos:line="218" pos:column="48"/></operator><name pos:line="218" pos:column="45">body_pipe<pos:position pos:line="218" pos:column="54"/></name><operator pos:line="218" pos:column="54">-&gt;<pos:position pos:line="218" pos:column="59"/></operator><name pos:line="218" pos:column="56">productionEnded<pos:position pos:line="218" pos:column="71"/></name></name><argument_list pos:line="218" pos:column="71">()<pos:position pos:line="218" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="218" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="219" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="221" pos:column="5">http<pos:position pos:line="221" pos:column="9"/></name><operator pos:line="221" pos:column="9">-&gt;<pos:position pos:line="221" pos:column="14"/></operator><name pos:line="221" pos:column="11">calloutContext<pos:position pos:line="221" pos:column="25"/></name></name> <operator pos:line="221" pos:column="26">=<pos:position pos:line="221" pos:column="27"/></operator> <operator pos:line="221" pos:column="28">new<pos:position pos:line="221" pos:column="31"/></operator> <call><name pos:line="221" pos:column="32">ClientRequestContext<pos:position pos:line="221" pos:column="52"/></name><argument_list pos:line="221" pos:column="52">(<argument><expr><name pos:line="221" pos:column="53">http<pos:position pos:line="221" pos:column="57"/></name></expr></argument>)<pos:position pos:line="221" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="223" pos:column="5">http<pos:position pos:line="223" pos:column="9"/></name><operator pos:line="223" pos:column="9">-&gt;<pos:position pos:line="223" pos:column="14"/></operator><name pos:line="223" pos:column="11">doCallouts<pos:position pos:line="223" pos:column="21"/></name></name><argument_list pos:line="223" pos:column="21">()<pos:position pos:line="223" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="24"/></expr_stmt>

<label><name pos:line="225" pos:column="1">finish<pos:position pos:line="225" pos:column="7"/></name>:<pos:position pos:line="225" pos:column="8"/></label>
    <if pos:line="226" pos:column="5">if <condition pos:line="226" pos:column="8">(<expr><operator pos:line="226" pos:column="9">!<pos:position pos:line="226" pos:column="10"/></operator><name pos:line="226" pos:column="10">notedUseOfBuffer<pos:position pos:line="226" pos:column="26"/></name></expr>)<pos:position pos:line="226" pos:column="27"/></condition><then pos:line="226" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="227" pos:column="9">connNoteUseOfBuffer<pos:position pos:line="227" pos:column="28"/></name><argument_list pos:line="227" pos:column="28">(<argument><expr><name pos:line="227" pos:column="29">conn<pos:position pos:line="227" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="227" pos:column="35">http<pos:position pos:line="227" pos:column="39"/></name><operator pos:line="227" pos:column="39">-&gt;<pos:position pos:line="227" pos:column="44"/></operator><name pos:line="227" pos:column="41">req_sz<pos:position pos:line="227" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="49"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="229" pos:column="5">/*
     * DPW 2007-05-18
     * Moved the TCP_RESET feature from clientReplyContext::sendMoreData
     * to here because calling comm_reset_close() causes http to
     * be freed and the above connNoteUseOfBuffer() would hit an
     * assertion, not to mention that we were accessing freed memory.
     */</comment>
    <if pos:line="236" pos:column="5">if <condition pos:line="236" pos:column="8">(<expr><call><name><name pos:line="236" pos:column="9">http<pos:position pos:line="236" pos:column="13"/></name><operator pos:line="236" pos:column="13">-&gt;<pos:position pos:line="236" pos:column="18"/></operator><name pos:line="236" pos:column="15">request<pos:position pos:line="236" pos:column="22"/></name><operator pos:line="236" pos:column="22">-&gt;<pos:position pos:line="236" pos:column="27"/></operator><name pos:line="236" pos:column="24">flags<pos:position pos:line="236" pos:column="29"/></name><operator pos:line="236" pos:column="29">.<pos:position pos:line="236" pos:column="30"/></operator><name pos:line="236" pos:column="30">resetTCP<pos:position pos:line="236" pos:column="38"/></name></name><argument_list pos:line="236" pos:column="38">()<pos:position pos:line="236" pos:column="40"/></argument_list></call> <operator pos:line="236" pos:column="41">&amp;&amp;<pos:position pos:line="236" pos:column="51"/></operator> <name><name pos:line="236" pos:column="44">conn<pos:position pos:line="236" pos:column="48"/></name><operator pos:line="236" pos:column="48">-&gt;<pos:position pos:line="236" pos:column="53"/></operator><name pos:line="236" pos:column="50">fd<pos:position pos:line="236" pos:column="52"/></name></name> <operator pos:line="236" pos:column="53">&gt;<pos:position pos:line="236" pos:column="57"/></operator> <operator pos:line="236" pos:column="55">-<pos:position pos:line="236" pos:column="56"/></operator><literal type="number" pos:line="236" pos:column="56">1<pos:position pos:line="236" pos:column="57"/></literal></expr>)<pos:position pos:line="236" pos:column="58"/></condition><then pos:line="236" pos:column="58"> <block pos:line="236" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="237" pos:column="9">debugs<pos:position pos:line="237" pos:column="15"/></name><argument_list pos:line="237" pos:column="15">(<argument><expr><literal type="number" pos:line="237" pos:column="16">33<pos:position pos:line="237" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="237" pos:column="20">3<pos:position pos:line="237" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="237" pos:column="23">HERE<pos:position pos:line="237" pos:column="27"/></name> <operator pos:line="237" pos:column="28">&lt;&lt;<pos:position pos:line="237" pos:column="36"/></operator> <literal type="string" pos:line="237" pos:column="31">"Sending TCP RST on FD "<pos:position pos:line="237" pos:column="55"/></literal> <operator pos:line="237" pos:column="56">&lt;&lt;<pos:position pos:line="237" pos:column="64"/></operator> <name><name pos:line="237" pos:column="59">conn<pos:position pos:line="237" pos:column="63"/></name><operator pos:line="237" pos:column="63">-&gt;<pos:position pos:line="237" pos:column="68"/></operator><name pos:line="237" pos:column="65">fd<pos:position pos:line="237" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="237" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="238" pos:column="9">conn<pos:position pos:line="238" pos:column="13"/></name><operator pos:line="238" pos:column="13">-&gt;<pos:position pos:line="238" pos:column="18"/></operator><name pos:line="238" pos:column="15">flags<pos:position pos:line="238" pos:column="20"/></name><operator pos:line="238" pos:column="20">.<pos:position pos:line="238" pos:column="21"/></operator><name pos:line="238" pos:column="21">readMoreRequests<pos:position pos:line="238" pos:column="37"/></name></name> <operator pos:line="238" pos:column="38">=<pos:position pos:line="238" pos:column="39"/></operator> <literal type="boolean" pos:line="238" pos:column="40">false<pos:position pos:line="238" pos:column="45"/></literal></expr>;<pos:position pos:line="238" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="239" pos:column="9">comm_reset_close<pos:position pos:line="239" pos:column="25"/></name><argument_list pos:line="239" pos:column="25">(<argument><expr><name><name pos:line="239" pos:column="26">conn<pos:position pos:line="239" pos:column="30"/></name><operator pos:line="239" pos:column="30">-&gt;<pos:position pos:line="239" pos:column="35"/></operator><name pos:line="239" pos:column="32">fd<pos:position pos:line="239" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="239" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="36"/></expr_stmt>
        <return pos:line="240" pos:column="9">return;<pos:position pos:line="240" pos:column="16"/></return>
    }<pos:position pos:line="241" pos:column="6"/></block></then></if>
}<pos:position pos:line="242" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_776_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">isUnsignedNumeric<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">str<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">size_t<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">len<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">len<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">&lt;<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="15">1<pos:position pos:line="4" pos:column="16"/></literal></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block type="pseudo"><return pos:line="4" pos:column="18">return <expr><literal type="boolean" pos:line="4" pos:column="25">false<pos:position pos:line="4" pos:column="30"/></literal></expr>;<pos:position pos:line="4" pos:column="31"/></return></block></then></if>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init pos:line="6" pos:column="10">;<pos:position pos:line="6" pos:column="11"/></init> <condition><expr><name pos:line="6" pos:column="12">len<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&gt;<pos:position pos:line="6" pos:column="20"/></operator><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal> <operator pos:line="6" pos:column="19">&amp;&amp;<pos:position pos:line="6" pos:column="29"/></operator> <operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">str<pos:position pos:line="6" pos:column="26"/></name></expr>;<pos:position pos:line="6" pos:column="27"/></condition> <incr><expr><operator pos:line="6" pos:column="28">++<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">str<pos:position pos:line="6" pos:column="33"/></name></expr><operator pos:line="6" pos:column="33">,<pos:position pos:line="6" pos:column="34"/></operator> <expr><operator pos:line="6" pos:column="35">--<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="37">len<pos:position pos:line="6" pos:column="40"/></name></expr></incr>)<pos:position pos:line="6" pos:column="41"/></control> <block pos:line="6" pos:column="42">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">isdigit<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">str<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
            <block type="pseudo"><return pos:line="8" pos:column="13">return <expr><literal type="boolean" pos:line="8" pos:column="20">false<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
    <return pos:line="10" pos:column="5">return <expr><literal type="boolean" pos:line="10" pos:column="12">true<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_807_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpReply<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">expectedBodyTooLarge<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">HttpRequest<pos:position pos:line="2" pos:column="44"/></name><modifier pos:line="2" pos:column="44">&amp;<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="46">request<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">calcMaxBodySize<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">request<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">58<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">7<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">HERE<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <literal type="string" pos:line="5" pos:column="27">"bodySizeMax="<pos:position pos:line="5" pos:column="41"/></literal> <operator pos:line="5" pos:column="42">&lt;&lt;<pos:position pos:line="5" pos:column="50"/></operator> <name pos:line="5" pos:column="45">bodySizeMax<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">bodySizeMax<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <comment type="line" pos:line="7" pos:column="26">// no body size limit</comment>
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int64_t<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">expectedSize<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><operator pos:line="10" pos:column="28">-<pos:position pos:line="10" pos:column="29"/></operator><literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">expectingBody<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">request<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">method<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">expectedSize<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="boolean" pos:line="12" pos:column="16">false<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">58<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">6<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="19">HERE<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&lt;&lt;<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="27">expectedSize<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">&lt;&lt;<pos:position pos:line="14" pos:column="48"/></operator> <literal type="string" pos:line="14" pos:column="43">" &gt;? "<pos:position pos:line="14" pos:column="52"/></literal> <operator pos:line="14" pos:column="50">&lt;&lt;<pos:position pos:line="14" pos:column="58"/></operator> <name pos:line="14" pos:column="53">bodySizeMax<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">expectedSize<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">&lt;<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <comment type="line" pos:line="16" pos:column="27">// expecting body of an unknown length</comment>
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><literal type="boolean" pos:line="17" pos:column="16">false<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></return></block></then></if>

    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">expectedSize<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&gt;<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="27">bodySizeMax<pos:position pos:line="19" pos:column="38"/></name></expr>;<pos:position pos:line="19" pos:column="39"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

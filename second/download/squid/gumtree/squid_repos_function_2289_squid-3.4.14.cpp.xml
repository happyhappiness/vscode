<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2289_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ServerStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">handleAdaptationAborted<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><name pos:line="2" pos:column="42">bool<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">bypassable<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">11<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <literal type="string" pos:line="4" pos:column="26">"handleAdaptationAborted; bypassable: "<pos:position pos:line="4" pos:column="65"/></literal> <operator pos:line="4" pos:column="66">&lt;&lt;<pos:position pos:line="4" pos:column="74"/></operator> <name pos:line="4" pos:column="69">bypassable<pos:position pos:line="4" pos:column="79"/></name> <operator pos:line="4" pos:column="80">&lt;&lt;<pos:position pos:line="4" pos:column="88"/></operator>
           <literal type="string" pos:line="5" pos:column="12">", entry empty: "<pos:position pos:line="5" pos:column="29"/></literal> <operator pos:line="5" pos:column="30">&lt;&lt;<pos:position pos:line="5" pos:column="38"/></operator> <call><name><name pos:line="5" pos:column="33">entry<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">isEmpty<pos:position pos:line="5" pos:column="47"/></name></name><argument_list pos:line="5" pos:column="47">()<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">abortOnBadEntry<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><literal type="string" pos:line="7" pos:column="25">"entry went bad while ICAP aborted"<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// TODO: bypass if possible</comment>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">entry<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">isEmpty<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">11<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="19">9<pos:position pos:line="13" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">HERE<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&lt;&lt;<pos:position pos:line="13" pos:column="35"/></operator> <literal type="string" pos:line="13" pos:column="30">"creating ICAP error entry after ICAP failure"<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">ErrorState<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">err<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><operator pos:line="14" pos:column="27">new<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="31">ErrorState<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">ERR_ICAP_FAILURE<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="60">Http<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">::<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="66">scInternalServerError<pos:position pos:line="14" pos:column="87"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="89">request<pos:position pos:line="14" pos:column="96"/></name></expr></argument>)<pos:position pos:line="14" pos:column="97"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">err<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">detailError<pos:position pos:line="15" pos:column="25"/></name></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">ERR_DETAIL_ICAP_RESPMOD_EARLY<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">fwd<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">fail<pos:position pos:line="16" pos:column="18"/></name></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">err<pos:position pos:line="16" pos:column="22"/></name></expr></argument>)<pos:position pos:line="16" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">fwd<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">dontRetry<pos:position pos:line="17" pos:column="23"/></name></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="boolean" pos:line="17" pos:column="24">true<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <elseif pos:line="18" pos:column="7">else <if pos:line="18" pos:column="12">if <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">request<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{ <comment type="line" pos:line="18" pos:column="27">// update logged info directly</comment>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">request<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">detailError<pos:position pos:line="19" pos:column="29"/></name></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">ERR_ICAP_FAILURE<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">ERR_DETAIL_ICAP_RESPMOD_LATE<pos:position pos:line="19" pos:column="76"/></name></expr></argument>)<pos:position pos:line="19" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">abortTransaction<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><literal type="string" pos:line="22" pos:column="22">"ICAP failure"<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4377_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name><name pos:line="1" pos:column="8">Ssl<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">CertificateDb<pos:position pos:line="1" pos:column="26"/></name><operator pos:line="1" pos:column="26">::<pos:position pos:line="1" pos:column="28"/></operator><name pos:line="1" pos:column="28">readSize<pos:position pos:line="1" pos:column="36"/></name></name><parameter_list pos:line="1" pos:column="36">()<pos:position pos:line="1" pos:column="38"/></parameter_list> <specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <block pos:line="1" pos:column="45">{
    <decl_stmt><decl><type><name><name pos:line="2" pos:column="5">std<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">ifstream<pos:position pos:line="2" pos:column="18"/></name></name></type> <name pos:line="2" pos:column="19">size_file<pos:position pos:line="2" pos:column="28"/></name><argument_list pos:line="2" pos:column="28">(<argument><expr><call><name><name pos:line="2" pos:column="29">size_full<pos:position pos:line="2" pos:column="38"/></name><operator pos:line="2" pos:column="38">.<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">c_str<pos:position pos:line="2" pos:column="44"/></name></name><argument_list pos:line="2" pos:column="44">()<pos:position pos:line="2" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="2" pos:column="47"/></argument_list></decl>;<pos:position pos:line="2" pos:column="48"/></decl_stmt>
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">size_file<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">&amp;&amp;<pos:position pos:line="3" pos:column="30"/></operator> <name pos:line="3" pos:column="23">enabled_disk_store<pos:position pos:line="3" pos:column="41"/></name></expr>)<pos:position pos:line="3" pos:column="42"/></condition><then pos:line="3" pos:column="42">
        <block type="pseudo"><throw pos:line="4" pos:column="9">throw <expr><call><name><name pos:line="4" pos:column="15">std<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">runtime_error<pos:position pos:line="4" pos:column="33"/></name></name><argument_list pos:line="4" pos:column="33">(<argument><expr><literal type="string" pos:line="4" pos:column="34">"cannot open for reading: "<pos:position pos:line="4" pos:column="61"/></literal> <operator pos:line="4" pos:column="62">+<pos:position pos:line="4" pos:column="63"/></operator> <name pos:line="4" pos:column="64">size_full<pos:position pos:line="4" pos:column="73"/></name></expr></argument>)<pos:position pos:line="4" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="75"/></throw></block></then></if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">db_size<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">size_file<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&gt;&gt;<pos:position pos:line="6" pos:column="26"/></operator> <name pos:line="6" pos:column="24">db_size<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
        <block type="pseudo"><throw pos:line="7" pos:column="9">throw <expr><call><name><name pos:line="7" pos:column="15">std<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">::<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">runtime_error<pos:position pos:line="7" pos:column="33"/></name></name><argument_list pos:line="7" pos:column="33">(<argument><expr><literal type="string" pos:line="7" pos:column="34">"error while reading "<pos:position pos:line="7" pos:column="56"/></literal> <operator pos:line="7" pos:column="57">+<pos:position pos:line="7" pos:column="58"/></operator> <name pos:line="7" pos:column="59">size_full<pos:position pos:line="7" pos:column="68"/></name></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="70"/></throw></block></then></if>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">db_size<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4118_squid-3.1.23.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name><name pos:line="1" pos:column="13">Ssl<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">ErrorDetail<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">ca_name<pos:position pos:line="1" pos:column="38"/></name></name><parameter_list pos:line="1" pos:column="38">()<pos:position pos:line="1" pos:column="40"/></parameter_list> <specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">peer_cert<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20">
        <block type="pseudo"><return pos:line="4" pos:column="9">return <expr><literal type="string" pos:line="4" pos:column="16">"[Not available]"<pos:position pos:line="4" pos:column="33"/></literal></expr>;<pos:position pos:line="4" pos:column="34"/></return></block></then></if>

    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">tmpBuffer<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[<expr><literal type="number" pos:line="6" pos:column="27">256<pos:position pos:line="6" pos:column="30"/></literal></expr>]<pos:position pos:line="6" pos:column="31"/></index></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt> <comment type="line" pos:line="6" pos:column="33">// A temporary buffer</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">X509_NAME_oneline<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><call><name pos:line="7" pos:column="23">X509_get_issuer_name<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><call><name><name pos:line="7" pos:column="44">peer_cert<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">.<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="54">get<pos:position pos:line="7" pos:column="57"/></name></name><argument_list pos:line="7" pos:column="57">()<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="62">tmpBuffer<pos:position pos:line="7" pos:column="71"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="73">sizeof<argument_list pos:line="7" pos:column="79">(<argument><expr><name pos:line="7" pos:column="80">tmpBuffer<pos:position pos:line="7" pos:column="89"/></name></expr></argument>)<pos:position pos:line="7" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="92"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">tmpBuffer<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

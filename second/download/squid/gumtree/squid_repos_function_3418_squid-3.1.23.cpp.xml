<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3418_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientHttpRequest<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">logRequest<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">out<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">.<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">size<pos:position pos:line="4" pos:column="17"/></name></name> <operator pos:line="4" pos:column="18">||<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">logType<pos:position pos:line="4" pos:column="28"/></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="5" pos:column="9">al<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">icp<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">.<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">opcode<pos:position pos:line="5" pos:column="22"/></name></name> <operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">ICP_INVALID<pos:position pos:line="5" pos:column="36"/></name></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">al<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">url<pos:position pos:line="6" pos:column="15"/></name></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">log_uri<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">33<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">9<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"clientLogRequest: al.url='"<pos:position pos:line="7" pos:column="51"/></literal> <operator pos:line="7" pos:column="52">&lt;&lt;<pos:position pos:line="7" pos:column="60"/></operator> <name><name pos:line="7" pos:column="55">al<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">.<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="58">url<pos:position pos:line="7" pos:column="61"/></name></name> <operator pos:line="7" pos:column="62">&lt;&lt;<pos:position pos:line="7" pos:column="70"/></operator> <literal type="string" pos:line="7" pos:column="65">"'"<pos:position pos:line="7" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="70"/></expr_stmt>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">al<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">reply<pos:position pos:line="9" pos:column="21"/></name></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22"> <block pos:line="9" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="10" pos:column="13">al<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">http<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">code<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <name><name pos:line="10" pos:column="28">al<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">reply<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">sline<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">.<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">status<pos:position pos:line="10" pos:column="50"/></name></name></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">al<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">http<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">.<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">content_type<pos:position pos:line="11" pos:column="33"/></name></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <call><name><name pos:line="11" pos:column="36">al<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">reply<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">content_type<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">.<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="59">termedBuf<pos:position pos:line="11" pos:column="68"/></name></name><argument_list pos:line="11" pos:column="68">()<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then> <elseif pos:line="12" pos:column="11">else <if pos:line="12" pos:column="16">if <condition pos:line="12" pos:column="19">(<expr><call><name pos:line="12" pos:column="20">loggingEntry<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">()<pos:position pos:line="12" pos:column="34"/></argument_list></call> <operator pos:line="12" pos:column="35">&amp;&amp;<pos:position pos:line="12" pos:column="45"/></operator> <call><name pos:line="12" pos:column="38">loggingEntry<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">()<pos:position pos:line="12" pos:column="52"/></argument_list></call><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">mem_obj<pos:position pos:line="12" pos:column="61"/></name></expr>)<pos:position pos:line="12" pos:column="62"/></condition><then pos:line="12" pos:column="62"> <block pos:line="12" pos:column="63">{
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">al<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">http<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">code<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">loggingEntry<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">()<pos:position pos:line="13" pos:column="42"/></argument_list></call><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><call><name><name pos:line="13" pos:column="44">mem_obj<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">getReply<pos:position pos:line="13" pos:column="61"/></name></name><argument_list pos:line="13" pos:column="61">()<pos:position pos:line="13" pos:column="63"/></argument_list></call><operator pos:line="13" pos:column="63">-&gt;<pos:position pos:line="13" pos:column="68"/></operator><name><name pos:line="13" pos:column="65">sline<pos:position pos:line="13" pos:column="70"/></name><operator pos:line="13" pos:column="70">.<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="71">status<pos:position pos:line="13" pos:column="77"/></name></name></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">al<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">http<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">content_type<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <call><name pos:line="14" pos:column="36">loggingEntry<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">()<pos:position pos:line="14" pos:column="50"/></argument_list></call><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><call><name><name pos:line="14" pos:column="52">mem_obj<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">getReply<pos:position pos:line="14" pos:column="69"/></name></name><argument_list pos:line="14" pos:column="69">()<pos:position pos:line="14" pos:column="71"/></argument_list></call><operator pos:line="14" pos:column="71">-&gt;<pos:position pos:line="14" pos:column="76"/></operator><call><name><name pos:line="14" pos:column="73">content_type<pos:position pos:line="14" pos:column="85"/></name><operator pos:line="14" pos:column="85">.<pos:position pos:line="14" pos:column="86"/></operator><name pos:line="14" pos:column="86">termedBuf<pos:position pos:line="14" pos:column="95"/></name></name><argument_list pos:line="14" pos:column="95">()<pos:position pos:line="14" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="98"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">33<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">9<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"clientLogRequest: http.code='"<pos:position pos:line="17" pos:column="54"/></literal> <operator pos:line="17" pos:column="55">&lt;&lt;<pos:position pos:line="17" pos:column="63"/></operator> <name><name pos:line="17" pos:column="58">al<pos:position pos:line="17" pos:column="60"/></name><operator pos:line="17" pos:column="60">.<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="61">http<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">.<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="66">code<pos:position pos:line="17" pos:column="70"/></name></name> <operator pos:line="17" pos:column="71">&lt;&lt;<pos:position pos:line="17" pos:column="79"/></operator> <literal type="string" pos:line="17" pos:column="74">"'"<pos:position pos:line="17" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="79"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">loggingEntry<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">()<pos:position pos:line="19" pos:column="27"/></argument_list></call> <operator pos:line="19" pos:column="28">&amp;&amp;<pos:position pos:line="19" pos:column="38"/></operator> <call><name pos:line="19" pos:column="31">loggingEntry<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">()<pos:position pos:line="19" pos:column="45"/></argument_list></call><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">mem_obj<pos:position pos:line="19" pos:column="54"/></name></expr>)<pos:position pos:line="19" pos:column="55"/></condition><then pos:line="19" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="13">al<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">cache<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">objectSize<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <call><name pos:line="20" pos:column="35">loggingEntry<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">()<pos:position pos:line="20" pos:column="49"/></argument_list></call><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><call><name pos:line="20" pos:column="51">contentLen<pos:position pos:line="20" pos:column="61"/></name><argument_list pos:line="20" pos:column="61">()<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">al<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">cache<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">caddr<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">SetNoAddr<pos:position pos:line="22" pos:column="33"/></name></name><argument_list pos:line="22" pos:column="33">()<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">getConn<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">()<pos:position pos:line="24" pos:column="22"/></argument_list></call> <operator pos:line="24" pos:column="23">!=<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">NULL<pos:position pos:line="24" pos:column="30"/></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="32">al<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">cache<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">.<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">caddr<pos:position pos:line="24" pos:column="46"/></name></name> <operator pos:line="24" pos:column="47">=<pos:position pos:line="24" pos:column="48"/></operator> <call><name pos:line="24" pos:column="49">getConn<pos:position pos:line="24" pos:column="56"/></name><argument_list pos:line="24" pos:column="56">()<pos:position pos:line="24" pos:column="58"/></argument_list></call><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">log_addr<pos:position pos:line="24" pos:column="68"/></name></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="26" pos:column="9">al<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">cache<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">requestSize<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">req_sz<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">al<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">cache<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">requestHeadersSize<pos:position pos:line="27" pos:column="36"/></name></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="39">req_sz<pos:position pos:line="27" pos:column="45"/></name></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="29" pos:column="9">al<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">cache<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">replySize<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name><name pos:line="29" pos:column="30">out<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">.<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">size<pos:position pos:line="29" pos:column="38"/></name></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">al<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">cache<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">replyHeadersSize<pos:position pos:line="30" pos:column="34"/></name></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <name><name pos:line="30" pos:column="37">out<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">.<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">headers_sz<pos:position pos:line="30" pos:column="51"/></name></name></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="32" pos:column="9">al<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">cache<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">highOffset<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name><name pos:line="32" pos:column="31">out<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">.<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">offset<pos:position pos:line="32" pos:column="41"/></name></name></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="34" pos:column="9">al<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">.<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">cache<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">code<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">logType<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="36" pos:column="9">al<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">cache<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">msec<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <call><name pos:line="36" pos:column="25">tvSubMsec<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">start_time<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">current_time<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">request<pos:position pos:line="38" pos:column="20"/></name></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="13">prepareLogWithRequestDetails<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">request<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="51">&amp;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="52">al<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt></block></then></if>

        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">getConn<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">()<pos:position pos:line="41" pos:column="22"/></argument_list></call> <operator pos:line="41" pos:column="23">!=<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">NULL<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">&amp;&amp;<pos:position pos:line="41" pos:column="41"/></operator> <call><name pos:line="41" pos:column="34">getConn<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">()<pos:position pos:line="41" pos:column="43"/></argument_list></call><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name><name pos:line="41" pos:column="45">rfc931<pos:position pos:line="41" pos:column="51"/></name><index pos:line="41" pos:column="51">[<expr><literal type="number" pos:line="41" pos:column="52">0<pos:position pos:line="41" pos:column="53"/></literal></expr>]<pos:position pos:line="41" pos:column="54"/></index></name></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="13">al<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">.<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="16">cache<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">rfc931<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <call><name pos:line="42" pos:column="31">getConn<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">()<pos:position pos:line="42" pos:column="40"/></argument_list></call><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">rfc931<pos:position pos:line="42" pos:column="48"/></name></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt></block></then></if>

<cpp:if pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">if<pos:position pos:line="44" pos:column="4"/></cpp:directive> <expr><name pos:line="44" pos:column="5">USE_SSL<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">&amp;&amp;<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr></cpp:if>

        <comment type="block" pos:line="46" pos:column="9">/* This is broken. Fails if the connection has been closed. Needs
         * to snarf the ssl details some place earlier..
         */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">getConn<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">()<pos:position pos:line="49" pos:column="22"/></argument_list></call> <operator pos:line="49" pos:column="23">!=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">NULL<pos:position pos:line="49" pos:column="30"/></name></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="13">al<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">.<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">cache<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">.<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">ssluser<pos:position pos:line="50" pos:column="29"/></name></name> <operator pos:line="50" pos:column="30">=<pos:position pos:line="50" pos:column="31"/></operator> <call><name pos:line="50" pos:column="32">sslGetUserEmail<pos:position pos:line="50" pos:column="47"/></name><argument_list pos:line="50" pos:column="47">(<argument><expr><name><name pos:line="50" pos:column="48">fd_table<pos:position pos:line="50" pos:column="56"/></name><index pos:line="50" pos:column="56">[<expr><call><name pos:line="50" pos:column="57">getConn<pos:position pos:line="50" pos:column="64"/></name><argument_list pos:line="50" pos:column="64">()<pos:position pos:line="50" pos:column="66"/></argument_list></call><operator pos:line="50" pos:column="66">-&gt;<pos:position pos:line="50" pos:column="71"/></operator><name pos:line="50" pos:column="68">fd<pos:position pos:line="50" pos:column="70"/></name></expr>]<pos:position pos:line="50" pos:column="71"/></index></name><operator pos:line="50" pos:column="71">.<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="72">ssl<pos:position pos:line="50" pos:column="75"/></name></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="77"/></expr_stmt></block></then></if>

<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>

        <decl_stmt><decl><type><name pos:line="54" pos:column="9">ACLFilledChecklist<pos:position pos:line="54" pos:column="27"/></name> <modifier pos:line="54" pos:column="28">*<pos:position pos:line="54" pos:column="29"/></modifier></type><name pos:line="54" pos:column="29">checklist<pos:position pos:line="54" pos:column="38"/></name> <init pos:line="54" pos:column="39">= <expr><call><name pos:line="54" pos:column="41">clientAclChecklistCreate<pos:position pos:line="54" pos:column="65"/></name><argument_list pos:line="54" pos:column="65">(<argument><expr><name><name pos:line="54" pos:column="66">Config<pos:position pos:line="54" pos:column="72"/></name><operator pos:line="54" pos:column="72">.<pos:position pos:line="54" pos:column="73"/></operator><name pos:line="54" pos:column="73">accessList<pos:position pos:line="54" pos:column="83"/></name><operator pos:line="54" pos:column="83">.<pos:position pos:line="54" pos:column="84"/></operator><name pos:line="54" pos:column="84">log<pos:position pos:line="54" pos:column="87"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="89">this<pos:position pos:line="54" pos:column="93"/></name></expr></argument>)<pos:position pos:line="54" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="95"/></decl_stmt>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">al<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">.<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">reply<pos:position pos:line="56" pos:column="21"/></name></name></expr>)<pos:position pos:line="56" pos:column="22"/></condition><then pos:line="56" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="13">checklist<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">-&gt;<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="24">reply<pos:position pos:line="57" pos:column="29"/></name></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <call><name pos:line="57" pos:column="32">HTTPMSGLOCK<pos:position pos:line="57" pos:column="43"/></name><argument_list pos:line="57" pos:column="43">(<argument><expr><name><name pos:line="57" pos:column="44">al<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">.<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="47">reply<pos:position pos:line="57" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt></block></then></if>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><name><name pos:line="59" pos:column="14">Config<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">.<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">accessList<pos:position pos:line="59" pos:column="31"/></name><operator pos:line="59" pos:column="31">.<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="32">log<pos:position pos:line="59" pos:column="35"/></name></name> <operator pos:line="59" pos:column="36">||<pos:position pos:line="59" pos:column="38"/></operator> <call><name><name pos:line="59" pos:column="39">checklist<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">-&gt;<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="50">fastCheck<pos:position pos:line="59" pos:column="59"/></name></name><argument_list pos:line="59" pos:column="59">()<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62"> <block pos:line="59" pos:column="63">{
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">request<pos:position pos:line="60" pos:column="24"/></name></expr>)<pos:position pos:line="60" pos:column="25"/></condition><then pos:line="60" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="61" pos:column="17">al<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">adapted_request<pos:position pos:line="61" pos:column="35"/></name></name> <operator pos:line="61" pos:column="36">=<pos:position pos:line="61" pos:column="37"/></operator> <call><name pos:line="61" pos:column="38">HTTPMSGLOCK<pos:position pos:line="61" pos:column="49"/></name><argument_list pos:line="61" pos:column="49">(<argument><expr><name pos:line="61" pos:column="50">request<pos:position pos:line="61" pos:column="57"/></name></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">accessLogLog<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><operator pos:line="62" pos:column="26">&amp;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="27">al<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="31">checklist<pos:position pos:line="62" pos:column="40"/></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">updateCounters<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">()<pos:position pos:line="63" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>

            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><call><name pos:line="65" pos:column="17">getConn<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">()<pos:position pos:line="65" pos:column="26"/></argument_list></call> <operator pos:line="65" pos:column="27">!=<pos:position pos:line="65" pos:column="29"/></operator> <name pos:line="65" pos:column="30">NULL<pos:position pos:line="65" pos:column="34"/></name></expr>)<pos:position pos:line="65" pos:column="35"/></condition><then pos:line="65" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="17">clientdbUpdate<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><call><name pos:line="66" pos:column="32">getConn<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">()<pos:position pos:line="66" pos:column="41"/></argument_list></call><operator pos:line="66" pos:column="41">-&gt;<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="43">peer<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="49">logType<pos:position pos:line="66" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="58">PROTO_HTTP<pos:position pos:line="66" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="70">out<pos:position pos:line="66" pos:column="73"/></name><operator pos:line="66" pos:column="73">.<pos:position pos:line="66" pos:column="74"/></operator><name pos:line="66" pos:column="74">size<pos:position pos:line="66" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt></block></then></if>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="69" pos:column="9">delete<pos:position pos:line="69" pos:column="15"/></operator> <name pos:line="69" pos:column="16">checklist<pos:position pos:line="69" pos:column="25"/></name></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">accessLogFreeMemory<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><operator pos:line="72" pos:column="25">&amp;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="26">al<pos:position pos:line="72" pos:column="28"/></name></expr></argument>)<pos:position pos:line="72" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

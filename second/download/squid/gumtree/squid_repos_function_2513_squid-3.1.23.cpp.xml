<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2513_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">dots_fill<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">size_t<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">len<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">256<pos:position pos:line="4" pos:column="24"/></literal></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">i<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">&gt;<pos:position pos:line="7" pos:column="17"/></operator> <name><name pos:line="7" pos:column="15">Config<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">Ftp<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">list_width<pos:position pos:line="7" pos:column="36"/></name></name></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block pos:line="7" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">memset<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">buf<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="21">' '<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="26">256<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">buf<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[<expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr>]<pos:position pos:line="9" pos:column="15"/></index></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="char" pos:line="9" pos:column="18">'\n'<pos:position pos:line="9" pos:column="22"/></literal></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">buf<pos:position pos:line="10" pos:column="12"/></name><index pos:line="10" pos:column="12">[<expr><name><name pos:line="10" pos:column="13">Config<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">.<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">Ftp<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">list_width<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">+<pos:position pos:line="10" pos:column="36"/></operator> <literal type="number" pos:line="10" pos:column="37">4<pos:position pos:line="10" pos:column="38"/></literal></expr>]<pos:position pos:line="10" pos:column="39"/></index></name> <operator pos:line="10" pos:column="40">=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="char" pos:line="10" pos:column="42">'\0'<pos:position pos:line="10" pos:column="46"/></literal></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">buf<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">len<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></init> <condition><expr><name pos:line="14" pos:column="19">i<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&lt;<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="23">Config<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">Ftp<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">.<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">list_width<pos:position pos:line="14" pos:column="44"/></name></name></expr>;<pos:position pos:line="14" pos:column="45"/></condition> <incr><expr><name pos:line="14" pos:column="46">i<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">++<pos:position pos:line="14" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="50"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="9">buf<pos:position pos:line="15" pos:column="12"/></name><index pos:line="15" pos:column="12">[<expr><name pos:line="15" pos:column="13">i<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">-<pos:position pos:line="15" pos:column="16"/></operator> <name pos:line="15" pos:column="17">len<pos:position pos:line="15" pos:column="20"/></name></expr>]<pos:position pos:line="15" pos:column="21"/></index></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <ternary><condition><expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">i<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">%<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="29">2<pos:position pos:line="15" pos:column="30"/></literal><operator pos:line="15" pos:column="30">)<pos:position pos:line="15" pos:column="31"/></operator></expr> ?<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <expr><literal type="char" pos:line="15" pos:column="34">'.'<pos:position pos:line="15" pos:column="37"/></literal></expr> <pos:position pos:line="15" pos:column="38"/></then><else pos:line="15" pos:column="38">: <expr><literal type="char" pos:line="15" pos:column="40">' '<pos:position pos:line="15" pos:column="43"/></literal></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">buf<pos:position pos:line="17" pos:column="8"/></name><index pos:line="17" pos:column="8">[<expr><name pos:line="17" pos:column="9">i<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">-<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name></expr>]<pos:position pos:line="17" pos:column="17"/></index></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <literal type="char" pos:line="17" pos:column="20">'\0'<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>

    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">buf<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

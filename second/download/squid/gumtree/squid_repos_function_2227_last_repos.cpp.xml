<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2227_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelStartShoveling<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">TunnelStateData<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">tunnelState<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name><name pos:line="4" pos:column="13">tunnelState<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">waitingForConnectExchange<pos:position pos:line="4" pos:column="51"/></name></name><argument_list pos:line="4" pos:column="51">()<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="5" pos:column="5">*<pos:position pos:line="5" pos:column="6"/></operator><name><name pos:line="5" pos:column="6">tunnelState<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">status_ptr<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">=<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="32">Http<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">::<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">scOkay<pos:position pos:line="5" pos:column="44"/></name></name></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">tunnelState<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">logTag_ptr<pos:position pos:line="6" pos:column="32"/></name></name></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">tunnelState<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">logTag_ptr<pos:position pos:line="7" pos:column="33"/></name></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="36">LOG_TCP_TUNNEL<pos:position pos:line="7" pos:column="50"/></name></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt></block></then></if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">cbdataReferenceValid<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">tunnelState<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43"> <block pos:line="8" pos:column="44">{

        <comment type="line" pos:line="10" pos:column="9">// Shovel any payload already pushed into reply buffer by the server response</comment>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">tunnelState<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">server<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">len<pos:position pos:line="11" pos:column="37"/></name></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="13">tunnelState<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">copyServerBytes<pos:position pos:line="12" pos:column="41"/></name></name><argument_list pos:line="12" pos:column="41">()<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then>
        <else pos:line="13" pos:column="9">else <block pos:line="13" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">26<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="24">DBG_DATA<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"Tunnel server PUSH Payload: \n"<pos:position pos:line="14" pos:column="66"/></literal> <operator pos:line="14" pos:column="67">&lt;&lt;<pos:position pos:line="14" pos:column="75"/></operator> <call><name pos:line="14" pos:column="70">Raw<pos:position pos:line="14" pos:column="73"/></name><argument_list pos:line="14" pos:column="73">(<argument><expr><literal type="string" pos:line="14" pos:column="74">""<pos:position pos:line="14" pos:column="76"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="78">tunnelState<pos:position pos:line="14" pos:column="89"/></name><operator pos:line="14" pos:column="89">-&gt;<pos:position pos:line="14" pos:column="94"/></operator><name pos:line="14" pos:column="91">server<pos:position pos:line="14" pos:column="97"/></name><operator pos:line="14" pos:column="97">.<pos:position pos:line="14" pos:column="98"/></operator><name pos:line="14" pos:column="98">buf<pos:position pos:line="14" pos:column="101"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="103">tunnelState<pos:position pos:line="14" pos:column="114"/></name><operator pos:line="14" pos:column="114">-&gt;<pos:position pos:line="14" pos:column="119"/></operator><name pos:line="14" pos:column="116">server<pos:position pos:line="14" pos:column="122"/></name><operator pos:line="14" pos:column="122">.<pos:position pos:line="14" pos:column="123"/></operator><name pos:line="14" pos:column="123">len<pos:position pos:line="14" pos:column="126"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="127"/></argument_list></call> <operator pos:line="14" pos:column="128">&lt;&lt;<pos:position pos:line="14" pos:column="136"/></operator> <literal type="string" pos:line="14" pos:column="131">"\n----------"<pos:position pos:line="14" pos:column="145"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="146"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="147"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="15" pos:column="13">tunnelState<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">copy<pos:position pos:line="15" pos:column="30"/></name></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name><name pos:line="15" pos:column="31">tunnelState<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">server<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">.<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">len<pos:position pos:line="15" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="56">tunnelState<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">-&gt;<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="69">server<pos:position pos:line="15" pos:column="75"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="77">tunnelState<pos:position pos:line="15" pos:column="88"/></name><operator pos:line="15" pos:column="88">-&gt;<pos:position pos:line="15" pos:column="93"/></operator><name pos:line="15" pos:column="90">client<pos:position pos:line="15" pos:column="96"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="98">TunnelStateData<pos:position pos:line="15" pos:column="113"/></name><operator pos:line="15" pos:column="113">::<pos:position pos:line="15" pos:column="115"/></operator><name pos:line="15" pos:column="115">WriteClientDone<pos:position pos:line="15" pos:column="130"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="132"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></else></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name><name pos:line="18" pos:column="13">tunnelState<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">http<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">valid<pos:position pos:line="18" pos:column="36"/></name></name><argument_list pos:line="18" pos:column="36">()<pos:position pos:line="18" pos:column="38"/></argument_list></call> <operator pos:line="18" pos:column="39">&amp;&amp;<pos:position pos:line="18" pos:column="49"/></operator> <call><name><name pos:line="18" pos:column="42">tunnelState<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">http<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">-&gt;<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="61">getConn<pos:position pos:line="18" pos:column="68"/></name></name><argument_list pos:line="18" pos:column="68">()<pos:position pos:line="18" pos:column="70"/></argument_list></call> <operator pos:line="18" pos:column="71">&amp;&amp;<pos:position pos:line="18" pos:column="81"/></operator> <operator pos:line="18" pos:column="74">!<pos:position pos:line="18" pos:column="75"/></operator><call><name><name pos:line="18" pos:column="75">tunnelState<pos:position pos:line="18" pos:column="86"/></name><operator pos:line="18" pos:column="86">-&gt;<pos:position pos:line="18" pos:column="91"/></operator><name pos:line="18" pos:column="88">http<pos:position pos:line="18" pos:column="92"/></name><operator pos:line="18" pos:column="92">-&gt;<pos:position pos:line="18" pos:column="97"/></operator><name pos:line="18" pos:column="94">getConn<pos:position pos:line="18" pos:column="101"/></name></name><argument_list pos:line="18" pos:column="101">()<pos:position pos:line="18" pos:column="103"/></argument_list></call><operator pos:line="18" pos:column="103">-&gt;<pos:position pos:line="18" pos:column="108"/></operator><call><name><name pos:line="18" pos:column="105">inBuf<pos:position pos:line="18" pos:column="110"/></name><operator pos:line="18" pos:column="110">.<pos:position pos:line="18" pos:column="111"/></operator><name pos:line="18" pos:column="111">isEmpty<pos:position pos:line="18" pos:column="118"/></name></name><argument_list pos:line="18" pos:column="118">()<pos:position pos:line="18" pos:column="120"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="121"/></condition><then pos:line="18" pos:column="121"> <block pos:line="18" pos:column="122">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">SBuf<pos:position pos:line="19" pos:column="17"/></name> <modifier pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></modifier> <specifier pos:line="19" pos:column="20">const<pos:position pos:line="19" pos:column="25"/></specifier></type> <name pos:line="19" pos:column="26">in<pos:position pos:line="19" pos:column="28"/></name> <init pos:line="19" pos:column="29">= <expr><operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><call><name><name pos:line="19" pos:column="32">tunnelState<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">-&gt;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="45">http<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">-&gt;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="51">getConn<pos:position pos:line="19" pos:column="58"/></name></name><argument_list pos:line="19" pos:column="58">()<pos:position pos:line="19" pos:column="60"/></argument_list></call><operator pos:line="19" pos:column="60">-&gt;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="62">inBuf<pos:position pos:line="19" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="68"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">26<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">DBG_DATA<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"Tunnel client PUSH Payload: \n"<pos:position pos:line="20" pos:column="66"/></literal> <operator pos:line="20" pos:column="67">&lt;&lt;<pos:position pos:line="20" pos:column="75"/></operator> <operator pos:line="20" pos:column="70">*<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="71">in<pos:position pos:line="20" pos:column="73"/></name> <operator pos:line="20" pos:column="74">&lt;&lt;<pos:position pos:line="20" pos:column="82"/></operator> <literal type="string" pos:line="20" pos:column="77">"\n----------"<pos:position pos:line="20" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="93"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">tunnelState<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">preReadClientData<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">.<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">append<pos:position pos:line="21" pos:column="50"/></name></name><argument_list pos:line="21" pos:column="50">(<argument><expr><operator pos:line="21" pos:column="51">*<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">in<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">in<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">consume<pos:position pos:line="22" pos:column="24"/></name></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt> <comment type="line" pos:line="22" pos:column="28">// ConnStateData buffer accounting after the shuffle.</comment>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">tunnelState<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">copyClientBytes<pos:position pos:line="24" pos:column="37"/></name></name><argument_list pos:line="24" pos:column="37">()<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

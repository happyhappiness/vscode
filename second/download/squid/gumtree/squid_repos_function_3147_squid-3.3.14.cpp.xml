<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3147_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">MemBuf<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type>
<name><name pos:line="2" pos:column="1">ErrorState<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">BuildContent<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">m<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">page_id<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">&gt;<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="22">ERR_NONE<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">&amp;&amp;<pos:position pos:line="6" pos:column="41"/></operator> <name pos:line="6" pos:column="34">page_id<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">&lt;<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="44">error_page_count<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="8" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ErrorPageFile<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">localeTmpl<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>

    <comment type="block" format="doxygen" pos:line="11" pos:column="5">/** error_directory option in squid.conf overrides translations.
     * Custom errors are always found either in error_directory or the templates directory.
     * Otherwise locate the Accept-Language header
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">Config<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">errorDirectory<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">&amp;&amp;<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="35">page_id<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">&lt;<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="45">ERR_MAX<pos:position pos:line="15" pos:column="52"/></name></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53"> <block pos:line="15" pos:column="54">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">err_language<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&amp;&amp;<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="29">err_language<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">!=<pos:position pos:line="16" pos:column="44"/></operator> <name><name pos:line="16" pos:column="45">Config<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">.<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">errorDefaultLanguage<pos:position pos:line="16" pos:column="72"/></name></name></expr>)<pos:position pos:line="16" pos:column="73"/></condition><then pos:line="16" pos:column="73">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">safe_free<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">err_language<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="19" pos:column="9">localeTmpl<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">new<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">ErrorPageFile<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name><name pos:line="19" pos:column="40">err_type_str<pos:position pos:line="19" pos:column="52"/></name><index pos:line="19" pos:column="52">[<expr><name pos:line="19" pos:column="53">page_id<pos:position pos:line="19" pos:column="60"/></name></expr>]<pos:position pos:line="19" pos:column="61"/></index></name></expr></argument>, <argument><expr><cast type="static" pos:line="19" pos:column="63">static_cast<argument_list type="generic" pos:line="19" pos:column="74">&lt;<argument><expr><name pos:line="19" pos:column="75">err_type<pos:position pos:line="19" pos:column="83"/></name></expr></argument>&gt;<pos:position pos:line="19" pos:column="87"/></argument_list><argument_list pos:line="19" pos:column="84">(<argument><expr><name pos:line="19" pos:column="85">page_id<pos:position pos:line="19" pos:column="92"/></name></expr></argument>)<pos:position pos:line="19" pos:column="93"/></argument_list></cast></expr></argument>)<pos:position pos:line="19" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="95"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name><name pos:line="20" pos:column="13">localeTmpl<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">loadFor<pos:position pos:line="20" pos:column="32"/></name></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">request<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42"> <block pos:line="20" pos:column="43">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">m<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name><name pos:line="21" pos:column="17">localeTmpl<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">text<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">()<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">assert<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><call><name><name pos:line="22" pos:column="20">localeTmpl<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">language<pos:position pos:line="22" pos:column="40"/></name></name><argument_list pos:line="22" pos:column="40">()<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="23" pos:column="13">err_language<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <call><name pos:line="23" pos:column="28">xstrdup<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><call><name><name pos:line="23" pos:column="36">localeTmpl<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">language<pos:position pos:line="23" pos:column="56"/></name></name><argument_list pos:line="23" pos:column="56">()<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="26" pos:column="8">/* USE_ERR_LOCALES */</comment>

    <comment type="block" format="doxygen" pos:line="28" pos:column="5">/** \par
     * If client-specific error templates are not enabled or available.
     * fall back to the old style squid.conf settings.
     */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">m<pos:position pos:line="32" pos:column="11"/></name></expr>)<pos:position pos:line="32" pos:column="12"/></condition><then pos:line="32" pos:column="12"> <block pos:line="32" pos:column="13">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">m<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <name><name pos:line="33" pos:column="13">error_text<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><name pos:line="33" pos:column="24">page_id<pos:position pos:line="33" pos:column="31"/></name></expr>]<pos:position pos:line="33" pos:column="32"/></index></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="34" pos:column="20"/></name></expr></cpp:if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name><name pos:line="35" pos:column="14">Config<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">errorDirectory<pos:position pos:line="35" pos:column="35"/></name></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="13">err_language<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <name><name pos:line="36" pos:column="28">Config<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">errorDefaultLanguage<pos:position pos:line="36" pos:column="55"/></name></name></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">debugs<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><literal type="number" pos:line="38" pos:column="16">4<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="19">2<pos:position pos:line="38" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="22">HERE<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&lt;&lt;<pos:position pos:line="38" pos:column="35"/></operator> <literal type="string" pos:line="38" pos:column="30">"No existing error page language negotiated for "<pos:position pos:line="38" pos:column="79"/></literal> <operator pos:line="38" pos:column="80">&lt;&lt;<pos:position pos:line="38" pos:column="88"/></operator> <call><name pos:line="38" pos:column="83">errorPageName<pos:position pos:line="38" pos:column="96"/></name><argument_list pos:line="38" pos:column="96">(<argument><expr><name pos:line="38" pos:column="97">page_id<pos:position pos:line="38" pos:column="104"/></name></expr></argument>)<pos:position pos:line="38" pos:column="105"/></argument_list></call> <operator pos:line="38" pos:column="106">&lt;&lt;<pos:position pos:line="38" pos:column="114"/></operator> <literal type="string" pos:line="38" pos:column="109">". Using default error file."<pos:position pos:line="38" pos:column="138"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="140"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="41" pos:column="5">MemBuf<pos:position pos:line="41" pos:column="11"/></name> <modifier pos:line="41" pos:column="12">*<pos:position pos:line="41" pos:column="13"/></modifier></type><name pos:line="41" pos:column="13">result<pos:position pos:line="41" pos:column="19"/></name> <init pos:line="41" pos:column="20">= <expr><call><name pos:line="41" pos:column="22">ConvertText<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">m<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="41" pos:column="37">true<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="43"/></decl_stmt>
<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><name pos:line="42" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="42" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">localeTmpl<pos:position pos:line="43" pos:column="19"/></name></expr>)<pos:position pos:line="43" pos:column="20"/></condition><then pos:line="43" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="9">delete<pos:position pos:line="44" pos:column="15"/></operator> <name pos:line="44" pos:column="16">localeTmpl<pos:position pos:line="44" pos:column="26"/></name></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt></block></then></if>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">result<pos:position pos:line="46" pos:column="18"/></name></expr>;<pos:position pos:line="46" pos:column="19"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6925_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Format<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">Token<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">parse<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">def<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">Quoting<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">quoting<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">cur<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">def<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">l<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">l<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">strcspn<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">cur<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="22">"%"<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">l<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&gt;<pos:position pos:line="10" pos:column="15"/></operator> <literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr>)<pos:position pos:line="10" pos:column="15"/></condition><then pos:line="10" pos:column="15"> <block pos:line="10" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">cp<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>
        <comment type="block" pos:line="12" pos:column="9">/* it's a string for sure, until \0 or the next % */</comment>
        <expr_stmt><expr><name pos:line="13" pos:column="9">cp<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></operator><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">xmalloc<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">l<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">+<pos:position pos:line="13" pos:column="33"/></operator> <literal type="number" pos:line="13" pos:column="34">1<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">xstrncpy<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">cp<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">cur<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">l<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">+<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">1<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">type<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">LFT_STRING<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">data<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">string<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">cp<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

        <while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">l<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">&gt;<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>)<pos:position pos:line="18" pos:column="22"/></condition> <block pos:line="18" pos:column="23">{
            <switch pos:line="19" pos:column="13">switch <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">cur<pos:position pos:line="19" pos:column="25"/></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition> <block pos:line="19" pos:column="27">{

            <case pos:line="21" pos:column="13">case <expr><literal type="char" pos:line="21" pos:column="18">'"'<pos:position pos:line="21" pos:column="21"/></literal></expr>:<pos:position pos:line="21" pos:column="22"/></case>

                <if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">quoting<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">==<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">LOG_QUOTE_NONE<pos:position pos:line="23" pos:column="47"/></name></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">quoting<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">=<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">LOG_QUOTE_QUOTES<pos:position pos:line="24" pos:column="48"/></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt></block></then>
                <elseif pos:line="25" pos:column="17">else <if pos:line="25" pos:column="22">if <condition pos:line="25" pos:column="25">(<expr><operator pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">quoting<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">==<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="38">LOG_QUOTE_QUOTES<pos:position pos:line="25" pos:column="54"/></name></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">quoting<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">LOG_QUOTE_NONE<pos:position pos:line="26" pos:column="46"/></name></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt></block></then></if></elseif></if>

                <break pos:line="28" pos:column="17">break;<pos:position pos:line="28" pos:column="23"/></break>

            <case pos:line="30" pos:column="13">case <expr><literal type="char" pos:line="30" pos:column="18">'['<pos:position pos:line="30" pos:column="21"/></literal></expr>:<pos:position pos:line="30" pos:column="22"/></case>
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">quoting<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">==<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">LOG_QUOTE_NONE<pos:position pos:line="31" pos:column="47"/></name></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="32" pos:column="21">*<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">quoting<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">LOG_QUOTE_MIMEBLOB<pos:position pos:line="32" pos:column="50"/></name></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt></block></then></if>

                <break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>

            <case pos:line="36" pos:column="13">case <expr><literal type="char" pos:line="36" pos:column="18">']'<pos:position pos:line="36" pos:column="21"/></literal></expr>:<pos:position pos:line="36" pos:column="22"/></case>
                <if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">*<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">quoting<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">==<pos:position pos:line="37" pos:column="32"/></operator> <name pos:line="37" pos:column="33">LOG_QUOTE_MIMEBLOB<pos:position pos:line="37" pos:column="51"/></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="21">*<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">quoting<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">LOG_QUOTE_NONE<pos:position pos:line="38" pos:column="46"/></name></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt></block></then></if>

                <break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>
            }<pos:position pos:line="41" pos:column="14"/></block></switch>

            <expr_stmt><expr><operator pos:line="43" pos:column="13">++<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">cur<pos:position pos:line="43" pos:column="18"/></name></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="44" pos:column="13">--<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">l<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></while>

    }<pos:position pos:line="47" pos:column="6"/></block></then> <elseif pos:line="47" pos:column="7">else <if pos:line="47" pos:column="12">if <condition pos:line="47" pos:column="15">(<expr><operator pos:line="47" pos:column="16">*<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">cur<pos:position pos:line="47" pos:column="20"/></name></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <block pos:line="47" pos:column="22">{

        <expr_stmt><expr><operator pos:line="49" pos:column="9">++<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">cur<pos:position pos:line="49" pos:column="14"/></name></expr>;<pos:position pos:line="49" pos:column="15"/></expr_stmt>

        <comment type="line" pos:line="51" pos:column="9">// select quoting style for his particular token</comment>
        <switch pos:line="52" pos:column="9">switch <condition pos:line="52" pos:column="16">(<expr><operator pos:line="52" pos:column="17">*<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">cur<pos:position pos:line="52" pos:column="21"/></name></expr>)<pos:position pos:line="52" pos:column="22"/></condition> <block pos:line="52" pos:column="23">{

        <case pos:line="54" pos:column="9">case <expr><literal type="char" pos:line="54" pos:column="14">'"'<pos:position pos:line="54" pos:column="17"/></literal></expr>:<pos:position pos:line="54" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="55" pos:column="13">quote<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <name pos:line="55" pos:column="21">LOG_QUOTE_QUOTES<pos:position pos:line="55" pos:column="37"/></name></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="56" pos:column="13">++<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="15">cur<pos:position pos:line="56" pos:column="18"/></name></expr>;<pos:position pos:line="56" pos:column="19"/></expr_stmt>
            <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>

        <case pos:line="59" pos:column="9">case <expr><literal type="char" pos:line="59" pos:column="14">'\''<pos:position pos:line="59" pos:column="18"/></literal></expr>:<pos:position pos:line="59" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="60" pos:column="13">quote<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <name pos:line="60" pos:column="21">LOG_QUOTE_RAW<pos:position pos:line="60" pos:column="34"/></name></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="61" pos:column="13">++<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">cur<pos:position pos:line="61" pos:column="18"/></name></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
            <break pos:line="62" pos:column="13">break;<pos:position pos:line="62" pos:column="19"/></break>

        <case pos:line="64" pos:column="9">case <expr><literal type="char" pos:line="64" pos:column="14">'['<pos:position pos:line="64" pos:column="17"/></literal></expr>:<pos:position pos:line="64" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="65" pos:column="13">quote<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <name pos:line="65" pos:column="21">LOG_QUOTE_MIMEBLOB<pos:position pos:line="65" pos:column="39"/></name></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="66" pos:column="13">++<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="15">cur<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
            <break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break>

        <case pos:line="69" pos:column="9">case <expr><literal type="char" pos:line="69" pos:column="14">'#'<pos:position pos:line="69" pos:column="17"/></literal></expr>:<pos:position pos:line="69" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="70" pos:column="13">quote<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <name pos:line="70" pos:column="21">LOG_QUOTE_URL<pos:position pos:line="70" pos:column="34"/></name></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="71" pos:column="13">++<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">cur<pos:position pos:line="71" pos:column="18"/></name></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
            <break pos:line="72" pos:column="13">break;<pos:position pos:line="72" pos:column="19"/></break>

        <case pos:line="74" pos:column="9">case <expr><literal type="char" pos:line="74" pos:column="14">'/'<pos:position pos:line="74" pos:column="17"/></literal></expr>:<pos:position pos:line="74" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="75" pos:column="13">quote<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">LOG_QUOTE_SHELL<pos:position pos:line="75" pos:column="36"/></name></expr>;<pos:position pos:line="75" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="76" pos:column="13">++<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="15">cur<pos:position pos:line="76" pos:column="18"/></name></expr>;<pos:position pos:line="76" pos:column="19"/></expr_stmt>
            <break pos:line="77" pos:column="13">break;<pos:position pos:line="77" pos:column="19"/></break>

        <default pos:line="79" pos:column="9">default:<pos:position pos:line="79" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="80" pos:column="13">quote<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">=<pos:position pos:line="80" pos:column="20"/></operator> <operator pos:line="80" pos:column="21">*<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">quoting<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt>
            <break pos:line="81" pos:column="13">break;<pos:position pos:line="81" pos:column="19"/></break>
        }<pos:position pos:line="82" pos:column="10"/></block></switch>

        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">*<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">cur<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">==<pos:position pos:line="84" pos:column="20"/></operator> <literal type="char" pos:line="84" pos:column="21">'-'<pos:position pos:line="84" pos:column="24"/></literal></expr>)<pos:position pos:line="84" pos:column="25"/></condition><then pos:line="84" pos:column="25"> <block pos:line="84" pos:column="26">{
            <expr_stmt><expr><name pos:line="85" pos:column="13">left<pos:position pos:line="85" pos:column="17"/></name> <operator pos:line="85" pos:column="18">=<pos:position pos:line="85" pos:column="19"/></operator> <literal type="boolean" pos:line="85" pos:column="20">true<pos:position pos:line="85" pos:column="24"/></literal></expr>;<pos:position pos:line="85" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="86" pos:column="13">++<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="15">cur<pos:position pos:line="86" pos:column="18"/></name></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">*<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">cur<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">==<pos:position pos:line="89" pos:column="20"/></operator> <literal type="char" pos:line="89" pos:column="21">'0'<pos:position pos:line="89" pos:column="24"/></literal></expr>)<pos:position pos:line="89" pos:column="25"/></condition><then pos:line="89" pos:column="25"> <block pos:line="89" pos:column="26">{
            <expr_stmt><expr><name pos:line="90" pos:column="13">zero<pos:position pos:line="90" pos:column="17"/></name> <operator pos:line="90" pos:column="18">=<pos:position pos:line="90" pos:column="19"/></operator> <literal type="boolean" pos:line="90" pos:column="20">true<pos:position pos:line="90" pos:column="24"/></literal></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="91" pos:column="13">++<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="15">cur<pos:position pos:line="91" pos:column="18"/></name></expr>;<pos:position pos:line="91" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="94" pos:column="9">char<pos:position pos:line="94" pos:column="13"/></name> <modifier pos:line="94" pos:column="14">*<pos:position pos:line="94" pos:column="15"/></modifier></type><name pos:line="94" pos:column="15">endp<pos:position pos:line="94" pos:column="19"/></name></decl>;<pos:position pos:line="94" pos:column="20"/></decl_stmt>
        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><call><name pos:line="95" pos:column="13">xisdigit<pos:position pos:line="95" pos:column="21"/></name><argument_list pos:line="95" pos:column="21">(<argument><expr><operator pos:line="95" pos:column="22">*<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="23">cur<pos:position pos:line="95" pos:column="26"/></name></expr></argument>)<pos:position pos:line="95" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="28"/></condition><then pos:line="95" pos:column="28"> <block pos:line="95" pos:column="29">{
            <expr_stmt><expr><name pos:line="96" pos:column="13">widthMin<pos:position pos:line="96" pos:column="21"/></name> <operator pos:line="96" pos:column="22">=<pos:position pos:line="96" pos:column="23"/></operator> <call><name pos:line="96" pos:column="24">strtol<pos:position pos:line="96" pos:column="30"/></name><argument_list pos:line="96" pos:column="30">(<argument><expr><name pos:line="96" pos:column="31">cur<pos:position pos:line="96" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="36">&amp;<pos:position pos:line="96" pos:column="41"/></operator><name pos:line="96" pos:column="37">endp<pos:position pos:line="96" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="43">10<pos:position pos:line="96" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="97" pos:column="13">cur<pos:position pos:line="97" pos:column="16"/></name> <operator pos:line="97" pos:column="17">=<pos:position pos:line="97" pos:column="18"/></operator> <name pos:line="97" pos:column="19">endp<pos:position pos:line="97" pos:column="23"/></name></expr>;<pos:position pos:line="97" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><operator pos:line="100" pos:column="13">*<pos:position pos:line="100" pos:column="14"/></operator><name pos:line="100" pos:column="14">cur<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">==<pos:position pos:line="100" pos:column="20"/></operator> <literal type="char" pos:line="100" pos:column="21">'.'<pos:position pos:line="100" pos:column="24"/></literal> <operator pos:line="100" pos:column="25">&amp;&amp;<pos:position pos:line="100" pos:column="35"/></operator> <call><name pos:line="100" pos:column="28">xisdigit<pos:position pos:line="100" pos:column="36"/></name><argument_list pos:line="100" pos:column="36">(<argument><expr><operator pos:line="100" pos:column="37">*<pos:position pos:line="100" pos:column="38"/></operator><operator pos:line="100" pos:column="38">(<pos:position pos:line="100" pos:column="39"/></operator><operator pos:line="100" pos:column="39">++<pos:position pos:line="100" pos:column="41"/></operator><name pos:line="100" pos:column="41">cur<pos:position pos:line="100" pos:column="44"/></name><operator pos:line="100" pos:column="44">)<pos:position pos:line="100" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="47"/></condition><then pos:line="100" pos:column="47"> <block pos:line="100" pos:column="48">{
            <expr_stmt><expr><name pos:line="101" pos:column="13">widthMax<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">=<pos:position pos:line="101" pos:column="23"/></operator> <call><name pos:line="101" pos:column="24">strtol<pos:position pos:line="101" pos:column="30"/></name><argument_list pos:line="101" pos:column="30">(<argument><expr><name pos:line="101" pos:column="31">cur<pos:position pos:line="101" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="36">&amp;<pos:position pos:line="101" pos:column="41"/></operator><name pos:line="101" pos:column="37">endp<pos:position pos:line="101" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="43">10<pos:position pos:line="101" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="102" pos:column="13">cur<pos:position pos:line="102" pos:column="16"/></name> <operator pos:line="102" pos:column="17">=<pos:position pos:line="102" pos:column="18"/></operator> <name pos:line="102" pos:column="19">endp<pos:position pos:line="102" pos:column="23"/></name></expr>;<pos:position pos:line="102" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="105" pos:column="9">// when {arg} field is before the token (old logformat syntax)</comment>
        <if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><operator pos:line="106" pos:column="13">*<pos:position pos:line="106" pos:column="14"/></operator><name pos:line="106" pos:column="14">cur<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">==<pos:position pos:line="106" pos:column="20"/></operator> <literal type="char" pos:line="106" pos:column="21">'{'<pos:position pos:line="106" pos:column="24"/></literal></expr>)<pos:position pos:line="106" pos:column="25"/></condition><then pos:line="106" pos:column="25"> <block pos:line="106" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="107" pos:column="13">char<pos:position pos:line="107" pos:column="17"/></name> <modifier pos:line="107" pos:column="18">*<pos:position pos:line="107" pos:column="19"/></modifier></type><name pos:line="107" pos:column="19">cp<pos:position pos:line="107" pos:column="21"/></name></decl>;<pos:position pos:line="107" pos:column="22"/></decl_stmt>
            <expr_stmt><expr><operator pos:line="108" pos:column="13">++<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="15">cur<pos:position pos:line="108" pos:column="18"/></name></expr>;<pos:position pos:line="108" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><name pos:line="109" pos:column="13">l<pos:position pos:line="109" pos:column="14"/></name> <operator pos:line="109" pos:column="15">=<pos:position pos:line="109" pos:column="16"/></operator> <call><name pos:line="109" pos:column="17">strcspn<pos:position pos:line="109" pos:column="24"/></name><argument_list pos:line="109" pos:column="24">(<argument><expr><name pos:line="109" pos:column="25">cur<pos:position pos:line="109" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="30">"}"<pos:position pos:line="109" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="110" pos:column="13">cp<pos:position pos:line="110" pos:column="15"/></name> <operator pos:line="110" pos:column="16">=<pos:position pos:line="110" pos:column="17"/></operator> <operator pos:line="110" pos:column="18">(<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="19">char<pos:position pos:line="110" pos:column="23"/></name> <operator pos:line="110" pos:column="24">*<pos:position pos:line="110" pos:column="25"/></operator><operator pos:line="110" pos:column="25">)<pos:position pos:line="110" pos:column="26"/></operator><call><name pos:line="110" pos:column="26">xmalloc<pos:position pos:line="110" pos:column="33"/></name><argument_list pos:line="110" pos:column="33">(<argument><expr><name pos:line="110" pos:column="34">l<pos:position pos:line="110" pos:column="35"/></name> <operator pos:line="110" pos:column="36">+<pos:position pos:line="110" pos:column="37"/></operator> <literal type="number" pos:line="110" pos:column="38">1<pos:position pos:line="110" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">xstrncpy<pos:position pos:line="111" pos:column="21"/></name><argument_list pos:line="111" pos:column="21">(<argument><expr><name pos:line="111" pos:column="22">cp<pos:position pos:line="111" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="26">cur<pos:position pos:line="111" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="31">l<pos:position pos:line="111" pos:column="32"/></name> <operator pos:line="111" pos:column="33">+<pos:position pos:line="111" pos:column="34"/></operator> <literal type="number" pos:line="111" pos:column="35">1<pos:position pos:line="111" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="112" pos:column="13">data<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">.<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="18">string<pos:position pos:line="112" pos:column="24"/></name></name> <operator pos:line="112" pos:column="25">=<pos:position pos:line="112" pos:column="26"/></operator> <name pos:line="112" pos:column="27">cp<pos:position pos:line="112" pos:column="29"/></name></expr>;<pos:position pos:line="112" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="113" pos:column="13">cur<pos:position pos:line="113" pos:column="16"/></name> <operator pos:line="113" pos:column="17">+=<pos:position pos:line="113" pos:column="19"/></operator> <name pos:line="113" pos:column="20">l<pos:position pos:line="113" pos:column="21"/></name></expr>;<pos:position pos:line="113" pos:column="22"/></expr_stmt>

            <if pos:line="115" pos:column="13">if <condition pos:line="115" pos:column="16">(<expr><operator pos:line="115" pos:column="17">*<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="18">cur<pos:position pos:line="115" pos:column="21"/></name> <operator pos:line="115" pos:column="22">==<pos:position pos:line="115" pos:column="24"/></operator> <literal type="char" pos:line="115" pos:column="25">'}'<pos:position pos:line="115" pos:column="28"/></literal></expr>)<pos:position pos:line="115" pos:column="29"/></condition><then pos:line="115" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="116" pos:column="17">++<pos:position pos:line="116" pos:column="19"/></operator><name pos:line="116" pos:column="19">cur<pos:position pos:line="116" pos:column="22"/></name></expr>;<pos:position pos:line="116" pos:column="23"/></expr_stmt></block></then></if>
        }<pos:position pos:line="117" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="119" pos:column="9">type<pos:position pos:line="119" pos:column="13"/></name> <operator pos:line="119" pos:column="14">=<pos:position pos:line="119" pos:column="15"/></operator> <name pos:line="119" pos:column="16">LFT_NONE<pos:position pos:line="119" pos:column="24"/></name></expr>;<pos:position pos:line="119" pos:column="25"/></expr_stmt>

        <comment type="line" pos:line="121" pos:column="9">// Scan each registered token namespace</comment>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">debugs<pos:position pos:line="122" pos:column="15"/></name><argument_list pos:line="122" pos:column="15">(<argument><expr><literal type="number" pos:line="122" pos:column="16">46<pos:position pos:line="122" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="20">9<pos:position pos:line="122" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="23">HERE<pos:position pos:line="122" pos:column="27"/></name> <operator pos:line="122" pos:column="28">&lt;&lt;<pos:position pos:line="122" pos:column="36"/></operator> <literal type="string" pos:line="122" pos:column="31">"check for token in "<pos:position pos:line="122" pos:column="52"/></literal> <operator pos:line="122" pos:column="53">&lt;&lt;<pos:position pos:line="122" pos:column="61"/></operator> <call><name><name pos:line="122" pos:column="56">TheConfig<pos:position pos:line="122" pos:column="65"/></name><operator pos:line="122" pos:column="65">.<pos:position pos:line="122" pos:column="66"/></operator><name pos:line="122" pos:column="66">tokens<pos:position pos:line="122" pos:column="72"/></name><operator pos:line="122" pos:column="72">.<pos:position pos:line="122" pos:column="73"/></operator><name pos:line="122" pos:column="73">size<pos:position pos:line="122" pos:column="77"/></name></name><argument_list pos:line="122" pos:column="77">()<pos:position pos:line="122" pos:column="79"/></argument_list></call> <operator pos:line="122" pos:column="80">&lt;&lt;<pos:position pos:line="122" pos:column="88"/></operator> <literal type="string" pos:line="122" pos:column="83">" namespaces."<pos:position pos:line="122" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="99"/></expr_stmt>
        <for pos:line="123" pos:column="9">for <control pos:line="123" pos:column="13">(<init><decl><type><name><name pos:line="123" pos:column="14">std<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">::<pos:position pos:line="123" pos:column="19"/></operator><name><name pos:line="123" pos:column="19">list<pos:position pos:line="123" pos:column="23"/></name><argument_list type="generic" pos:line="123" pos:column="23">&lt;<argument><expr><name pos:line="123" pos:column="24">TokenNamespace<pos:position pos:line="123" pos:column="38"/></name></expr></argument>&gt;<pos:position pos:line="123" pos:column="42"/></argument_list></name><operator pos:line="123" pos:column="39">::<pos:position pos:line="123" pos:column="41"/></operator><name pos:line="123" pos:column="41">const_iterator<pos:position pos:line="123" pos:column="55"/></name></name></type> <name pos:line="123" pos:column="56">itr<pos:position pos:line="123" pos:column="59"/></name> <init pos:line="123" pos:column="60">= <expr><call><name><name pos:line="123" pos:column="62">TheConfig<pos:position pos:line="123" pos:column="71"/></name><operator pos:line="123" pos:column="71">.<pos:position pos:line="123" pos:column="72"/></operator><name pos:line="123" pos:column="72">tokens<pos:position pos:line="123" pos:column="78"/></name><operator pos:line="123" pos:column="78">.<pos:position pos:line="123" pos:column="79"/></operator><name pos:line="123" pos:column="79">begin<pos:position pos:line="123" pos:column="84"/></name></name><argument_list pos:line="123" pos:column="84">()<pos:position pos:line="123" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="123" pos:column="87"/></init> <condition><expr><name pos:line="123" pos:column="88">itr<pos:position pos:line="123" pos:column="91"/></name> <operator pos:line="123" pos:column="92">!=<pos:position pos:line="123" pos:column="94"/></operator> <call><name><name pos:line="123" pos:column="95">TheConfig<pos:position pos:line="123" pos:column="104"/></name><operator pos:line="123" pos:column="104">.<pos:position pos:line="123" pos:column="105"/></operator><name pos:line="123" pos:column="105">tokens<pos:position pos:line="123" pos:column="111"/></name><operator pos:line="123" pos:column="111">.<pos:position pos:line="123" pos:column="112"/></operator><name pos:line="123" pos:column="112">end<pos:position pos:line="123" pos:column="115"/></name></name><argument_list pos:line="123" pos:column="115">()<pos:position pos:line="123" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="118"/></condition> <incr><expr><operator pos:line="123" pos:column="119">++<pos:position pos:line="123" pos:column="121"/></operator><name pos:line="123" pos:column="121">itr<pos:position pos:line="123" pos:column="124"/></name></expr></incr>)<pos:position pos:line="123" pos:column="125"/></control> <block pos:line="123" pos:column="126">{
            <expr_stmt><expr><call><name pos:line="124" pos:column="13">debugs<pos:position pos:line="124" pos:column="19"/></name><argument_list pos:line="124" pos:column="19">(<argument><expr><literal type="number" pos:line="124" pos:column="20">46<pos:position pos:line="124" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="24">7<pos:position pos:line="124" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="27">HERE<pos:position pos:line="124" pos:column="31"/></name> <operator pos:line="124" pos:column="32">&lt;&lt;<pos:position pos:line="124" pos:column="40"/></operator> <literal type="string" pos:line="124" pos:column="35">"check for possible "<pos:position pos:line="124" pos:column="56"/></literal> <operator pos:line="124" pos:column="57">&lt;&lt;<pos:position pos:line="124" pos:column="65"/></operator> <name><name pos:line="124" pos:column="60">itr<pos:position pos:line="124" pos:column="63"/></name><operator pos:line="124" pos:column="63">-&gt;<pos:position pos:line="124" pos:column="68"/></operator><name pos:line="124" pos:column="65">prefix<pos:position pos:line="124" pos:column="71"/></name></name> <operator pos:line="124" pos:column="72">&lt;&lt;<pos:position pos:line="124" pos:column="80"/></operator> <literal type="string" pos:line="124" pos:column="75">":: token"<pos:position pos:line="124" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="87"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="125" pos:column="13">const<pos:position pos:line="125" pos:column="18"/></specifier> <name pos:line="125" pos:column="19">size_t<pos:position pos:line="125" pos:column="25"/></name></type> <name pos:line="125" pos:column="26">len<pos:position pos:line="125" pos:column="29"/></name> <init pos:line="125" pos:column="30">= <expr><call><name><name pos:line="125" pos:column="32">itr<pos:position pos:line="125" pos:column="35"/></name><operator pos:line="125" pos:column="35">-&gt;<pos:position pos:line="125" pos:column="40"/></operator><name pos:line="125" pos:column="37">prefix<pos:position pos:line="125" pos:column="43"/></name><operator pos:line="125" pos:column="43">.<pos:position pos:line="125" pos:column="44"/></operator><name pos:line="125" pos:column="44">size<pos:position pos:line="125" pos:column="48"/></name></name><argument_list pos:line="125" pos:column="48">()<pos:position pos:line="125" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="125" pos:column="51"/></decl_stmt>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><call><name><name pos:line="126" pos:column="17">itr<pos:position pos:line="126" pos:column="20"/></name><operator pos:line="126" pos:column="20">-&gt;<pos:position pos:line="126" pos:column="25"/></operator><name pos:line="126" pos:column="22">prefix<pos:position pos:line="126" pos:column="28"/></name><operator pos:line="126" pos:column="28">.<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="29">cmp<pos:position pos:line="126" pos:column="32"/></name></name><argument_list pos:line="126" pos:column="32">(<argument><expr><name pos:line="126" pos:column="33">cur<pos:position pos:line="126" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="38">len<pos:position pos:line="126" pos:column="41"/></name></expr></argument>)<pos:position pos:line="126" pos:column="42"/></argument_list></call> <operator pos:line="126" pos:column="43">==<pos:position pos:line="126" pos:column="45"/></operator> <literal type="number" pos:line="126" pos:column="46">0<pos:position pos:line="126" pos:column="47"/></literal> <operator pos:line="126" pos:column="48">&amp;&amp;<pos:position pos:line="126" pos:column="58"/></operator> <name><name pos:line="126" pos:column="51">cur<pos:position pos:line="126" pos:column="54"/></name><index pos:line="126" pos:column="54">[<expr><name pos:line="126" pos:column="55">len<pos:position pos:line="126" pos:column="58"/></name></expr>]<pos:position pos:line="126" pos:column="59"/></index></name> <operator pos:line="126" pos:column="60">==<pos:position pos:line="126" pos:column="62"/></operator> <literal type="char" pos:line="126" pos:column="63">':'<pos:position pos:line="126" pos:column="66"/></literal> <operator pos:line="126" pos:column="67">&amp;&amp;<pos:position pos:line="126" pos:column="77"/></operator> <name><name pos:line="126" pos:column="70">cur<pos:position pos:line="126" pos:column="73"/></name><index pos:line="126" pos:column="73">[<expr><name pos:line="126" pos:column="74">len<pos:position pos:line="126" pos:column="77"/></name><operator pos:line="126" pos:column="77">+<pos:position pos:line="126" pos:column="78"/></operator><literal type="number" pos:line="126" pos:column="78">1<pos:position pos:line="126" pos:column="79"/></literal></expr>]<pos:position pos:line="126" pos:column="80"/></index></name> <operator pos:line="126" pos:column="81">==<pos:position pos:line="126" pos:column="83"/></operator> <literal type="char" pos:line="126" pos:column="84">':'<pos:position pos:line="126" pos:column="87"/></literal></expr>)<pos:position pos:line="126" pos:column="88"/></condition><then pos:line="126" pos:column="88"> <block pos:line="126" pos:column="89">{
                <expr_stmt><expr><call><name pos:line="127" pos:column="17">debugs<pos:position pos:line="127" pos:column="23"/></name><argument_list pos:line="127" pos:column="23">(<argument><expr><literal type="number" pos:line="127" pos:column="24">46<pos:position pos:line="127" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="28">5<pos:position pos:line="127" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="31">HERE<pos:position pos:line="127" pos:column="35"/></name> <operator pos:line="127" pos:column="36">&lt;&lt;<pos:position pos:line="127" pos:column="44"/></operator> <literal type="string" pos:line="127" pos:column="39">"check for "<pos:position pos:line="127" pos:column="51"/></literal> <operator pos:line="127" pos:column="52">&lt;&lt;<pos:position pos:line="127" pos:column="60"/></operator> <name><name pos:line="127" pos:column="55">itr<pos:position pos:line="127" pos:column="58"/></name><operator pos:line="127" pos:column="58">-&gt;<pos:position pos:line="127" pos:column="63"/></operator><name pos:line="127" pos:column="60">prefix<pos:position pos:line="127" pos:column="66"/></name></name> <operator pos:line="127" pos:column="67">&lt;&lt;<pos:position pos:line="127" pos:column="75"/></operator> <literal type="string" pos:line="127" pos:column="70">":: token in '"<pos:position pos:line="127" pos:column="85"/></literal> <operator pos:line="127" pos:column="86">&lt;&lt;<pos:position pos:line="127" pos:column="94"/></operator> <name pos:line="127" pos:column="89">cur<pos:position pos:line="127" pos:column="92"/></name> <operator pos:line="127" pos:column="93">&lt;&lt;<pos:position pos:line="127" pos:column="101"/></operator> <literal type="string" pos:line="127" pos:column="96">"'"<pos:position pos:line="127" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="101"/></expr_stmt>
                <decl_stmt><decl><type><specifier pos:line="128" pos:column="17">const<pos:position pos:line="128" pos:column="22"/></specifier> <name pos:line="128" pos:column="23">char<pos:position pos:line="128" pos:column="27"/></name> <modifier pos:line="128" pos:column="28">*<pos:position pos:line="128" pos:column="29"/></modifier></type><name pos:line="128" pos:column="29">old<pos:position pos:line="128" pos:column="32"/></name> <init pos:line="128" pos:column="33">= <expr><name pos:line="128" pos:column="35">cur<pos:position pos:line="128" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="128" pos:column="39"/></decl_stmt>
                <expr_stmt><expr><name pos:line="129" pos:column="17">cur<pos:position pos:line="129" pos:column="20"/></name> <operator pos:line="129" pos:column="21">=<pos:position pos:line="129" pos:column="22"/></operator> <call><name pos:line="129" pos:column="23">scanForToken<pos:position pos:line="129" pos:column="35"/></name><argument_list pos:line="129" pos:column="35">(<argument><expr><name><name pos:line="129" pos:column="36">itr<pos:position pos:line="129" pos:column="39"/></name><operator pos:line="129" pos:column="39">-&gt;<pos:position pos:line="129" pos:column="44"/></operator><name pos:line="129" pos:column="41">tokenSet<pos:position pos:line="129" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="51">cur<pos:position pos:line="129" pos:column="54"/></name><operator pos:line="129" pos:column="54">+<pos:position pos:line="129" pos:column="55"/></operator><name pos:line="129" pos:column="55">len<pos:position pos:line="129" pos:column="58"/></name><operator pos:line="129" pos:column="58">+<pos:position pos:line="129" pos:column="59"/></operator><literal type="number" pos:line="129" pos:column="59">2<pos:position pos:line="129" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="62"/></expr_stmt>
                <if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><name pos:line="130" pos:column="21">old<pos:position pos:line="130" pos:column="24"/></name> <operator pos:line="130" pos:column="25">!=<pos:position pos:line="130" pos:column="27"/></operator> <name pos:line="130" pos:column="28">cur<pos:position pos:line="130" pos:column="31"/></name></expr>)<pos:position pos:line="130" pos:column="32"/></condition><then pos:line="130" pos:column="32"> <comment type="line" pos:line="130" pos:column="33">// found</comment>
                    <block type="pseudo"><break pos:line="131" pos:column="21">break;<pos:position pos:line="131" pos:column="27"/></break></block></then>
                <else pos:line="132" pos:column="17">else <comment type="line" pos:line="132" pos:column="22">// reset to start of namespace</comment>
                    <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="21">cur<pos:position pos:line="133" pos:column="24"/></name> <operator pos:line="133" pos:column="25">=<pos:position pos:line="133" pos:column="26"/></operator> <name pos:line="133" pos:column="27">cur<pos:position pos:line="133" pos:column="30"/></name> <operator pos:line="133" pos:column="31">-<pos:position pos:line="133" pos:column="32"/></operator> <name pos:line="133" pos:column="33">len<pos:position pos:line="133" pos:column="36"/></name> <operator pos:line="133" pos:column="37">-<pos:position pos:line="133" pos:column="38"/></operator> <literal type="number" pos:line="133" pos:column="39">2<pos:position pos:line="133" pos:column="40"/></literal></expr>;<pos:position pos:line="133" pos:column="41"/></expr_stmt></block></else></if>
            }<pos:position pos:line="134" pos:column="14"/></block></then></if>
        }<pos:position pos:line="135" pos:column="10"/></block></for>

        <if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">type<pos:position pos:line="137" pos:column="17"/></name> <operator pos:line="137" pos:column="18">==<pos:position pos:line="137" pos:column="20"/></operator> <name pos:line="137" pos:column="21">LFT_NONE<pos:position pos:line="137" pos:column="29"/></name></expr>)<pos:position pos:line="137" pos:column="30"/></condition><then pos:line="137" pos:column="30"> <block pos:line="137" pos:column="31">{
            <comment type="line" pos:line="138" pos:column="13">// For upward compatibility, assume "http::" prefix as default prefix</comment>
            <comment type="line" pos:line="139" pos:column="13">// for all log access formatting codes, except those starting with a</comment>
            <comment type="line" pos:line="140" pos:column="13">// "%" or a known namespace. (ie "icap::", "adapt::")</comment>
            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><call><name pos:line="141" pos:column="17">strncmp<pos:position pos:line="141" pos:column="24"/></name><argument_list pos:line="141" pos:column="24">(<argument><expr><name pos:line="141" pos:column="25">cur<pos:position pos:line="141" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="141" pos:column="29">"http::"<pos:position pos:line="141" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="39">6<pos:position pos:line="141" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="41"/></argument_list></call> <operator pos:line="141" pos:column="42">==<pos:position pos:line="141" pos:column="44"/></operator> <literal type="number" pos:line="141" pos:column="45">0<pos:position pos:line="141" pos:column="46"/></literal> <operator pos:line="141" pos:column="47">&amp;&amp;<pos:position pos:line="141" pos:column="57"/></operator> <operator pos:line="141" pos:column="50">*<pos:position pos:line="141" pos:column="51"/></operator><operator pos:line="141" pos:column="51">(<pos:position pos:line="141" pos:column="52"/></operator><name pos:line="141" pos:column="52">cur<pos:position pos:line="141" pos:column="55"/></name><operator pos:line="141" pos:column="55">+<pos:position pos:line="141" pos:column="56"/></operator><literal type="number" pos:line="141" pos:column="56">6<pos:position pos:line="141" pos:column="57"/></literal><operator pos:line="141" pos:column="57">)<pos:position pos:line="141" pos:column="58"/></operator> <operator pos:line="141" pos:column="59">!=<pos:position pos:line="141" pos:column="61"/></operator> <literal type="char" pos:line="141" pos:column="62">'%'<pos:position pos:line="141" pos:column="65"/></literal></expr> )<pos:position pos:line="141" pos:column="67"/></condition><then pos:line="141" pos:column="67">
                <block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="17">cur<pos:position pos:line="142" pos:column="20"/></name> <operator pos:line="142" pos:column="21">+=<pos:position pos:line="142" pos:column="23"/></operator> <literal type="number" pos:line="142" pos:column="24">6<pos:position pos:line="142" pos:column="25"/></literal></expr>;<pos:position pos:line="142" pos:column="26"/></expr_stmt></block></then></if>

            <comment type="line" pos:line="144" pos:column="13">// NP: scan the sets of tokens in decreasing size to guarantee no</comment>
            <comment type="line" pos:line="145" pos:column="13">//     mistakes made with overlapping names. (Bug 3310)</comment>

            <comment type="line" pos:line="147" pos:column="13">// Scan for various long tokens</comment>
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">debugs<pos:position pos:line="148" pos:column="19"/></name><argument_list pos:line="148" pos:column="19">(<argument><expr><literal type="number" pos:line="148" pos:column="20">46<pos:position pos:line="148" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="24">5<pos:position pos:line="148" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="148" pos:column="27">HERE<pos:position pos:line="148" pos:column="31"/></name> <operator pos:line="148" pos:column="32">&lt;&lt;<pos:position pos:line="148" pos:column="40"/></operator> <literal type="string" pos:line="148" pos:column="35">"scan for possible Misc token"<pos:position pos:line="148" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name pos:line="149" pos:column="13">cur<pos:position pos:line="149" pos:column="16"/></name> <operator pos:line="149" pos:column="17">=<pos:position pos:line="149" pos:column="18"/></operator> <call><name pos:line="149" pos:column="19">scanForToken<pos:position pos:line="149" pos:column="31"/></name><argument_list pos:line="149" pos:column="31">(<argument><expr><name pos:line="149" pos:column="32">TokenTableMisc<pos:position pos:line="149" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="48">cur<pos:position pos:line="149" pos:column="51"/></name></expr></argument>)<pos:position pos:line="149" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="53"/></expr_stmt>
            <comment type="line" pos:line="150" pos:column="13">// scan for 2-char tokens</comment>
            <if pos:line="151" pos:column="13">if <condition pos:line="151" pos:column="16">(<expr><name pos:line="151" pos:column="17">type<pos:position pos:line="151" pos:column="21"/></name> <operator pos:line="151" pos:column="22">==<pos:position pos:line="151" pos:column="24"/></operator> <name pos:line="151" pos:column="25">LFT_NONE<pos:position pos:line="151" pos:column="33"/></name></expr>)<pos:position pos:line="151" pos:column="34"/></condition><then pos:line="151" pos:column="34"> <block pos:line="151" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="152" pos:column="17">debugs<pos:position pos:line="152" pos:column="23"/></name><argument_list pos:line="152" pos:column="23">(<argument><expr><literal type="number" pos:line="152" pos:column="24">46<pos:position pos:line="152" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="28">5<pos:position pos:line="152" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="31">HERE<pos:position pos:line="152" pos:column="35"/></name> <operator pos:line="152" pos:column="36">&lt;&lt;<pos:position pos:line="152" pos:column="44"/></operator> <literal type="string" pos:line="152" pos:column="39">"scan for possible 2C token"<pos:position pos:line="152" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name pos:line="153" pos:column="17">cur<pos:position pos:line="153" pos:column="20"/></name> <operator pos:line="153" pos:column="21">=<pos:position pos:line="153" pos:column="22"/></operator> <call><name pos:line="153" pos:column="23">scanForToken<pos:position pos:line="153" pos:column="35"/></name><argument_list pos:line="153" pos:column="35">(<argument><expr><name pos:line="153" pos:column="36">TokenTable2C<pos:position pos:line="153" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="50">cur<pos:position pos:line="153" pos:column="53"/></name></expr></argument>)<pos:position pos:line="153" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="154" pos:column="14"/></block></then></if>
            <comment type="line" pos:line="155" pos:column="13">// finally scan for 1-char tokens.</comment>
            <if pos:line="156" pos:column="13">if <condition pos:line="156" pos:column="16">(<expr><name pos:line="156" pos:column="17">type<pos:position pos:line="156" pos:column="21"/></name> <operator pos:line="156" pos:column="22">==<pos:position pos:line="156" pos:column="24"/></operator> <name pos:line="156" pos:column="25">LFT_NONE<pos:position pos:line="156" pos:column="33"/></name></expr>)<pos:position pos:line="156" pos:column="34"/></condition><then pos:line="156" pos:column="34"> <block pos:line="156" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="157" pos:column="17">debugs<pos:position pos:line="157" pos:column="23"/></name><argument_list pos:line="157" pos:column="23">(<argument><expr><literal type="number" pos:line="157" pos:column="24">46<pos:position pos:line="157" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="28">5<pos:position pos:line="157" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="31">HERE<pos:position pos:line="157" pos:column="35"/></name> <operator pos:line="157" pos:column="36">&lt;&lt;<pos:position pos:line="157" pos:column="44"/></operator> <literal type="string" pos:line="157" pos:column="39">"scan for possible 1C token"<pos:position pos:line="157" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name pos:line="158" pos:column="17">cur<pos:position pos:line="158" pos:column="20"/></name> <operator pos:line="158" pos:column="21">=<pos:position pos:line="158" pos:column="22"/></operator> <call><name pos:line="158" pos:column="23">scanForToken<pos:position pos:line="158" pos:column="35"/></name><argument_list pos:line="158" pos:column="35">(<argument><expr><name pos:line="158" pos:column="36">TokenTable1C<pos:position pos:line="158" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="50">cur<pos:position pos:line="158" pos:column="53"/></name></expr></argument>)<pos:position pos:line="158" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="159" pos:column="14"/></block></then></if>
        }<pos:position pos:line="160" pos:column="10"/></block></then></if>

        <if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name pos:line="162" pos:column="13">type<pos:position pos:line="162" pos:column="17"/></name> <operator pos:line="162" pos:column="18">==<pos:position pos:line="162" pos:column="20"/></operator> <name pos:line="162" pos:column="21">LFT_NONE<pos:position pos:line="162" pos:column="29"/></name></expr>)<pos:position pos:line="162" pos:column="30"/></condition><then pos:line="162" pos:column="30"> <block pos:line="162" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="163" pos:column="13">fatalf<pos:position pos:line="163" pos:column="19"/></name><argument_list pos:line="163" pos:column="19">(<argument><expr><literal type="string" pos:line="163" pos:column="20">"Can't parse configuration token: '%s'\n"<pos:position pos:line="163" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="63">def<pos:position pos:line="163" pos:column="66"/></name></expr></argument>)<pos:position pos:line="163" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="164" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="166" pos:column="9">// when {arg} field is after the token (old external_acl_type token syntax)</comment>
        <comment type="line" pos:line="167" pos:column="9">// but accept only if there was none before the token</comment>
        <if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><operator pos:line="168" pos:column="13">*<pos:position pos:line="168" pos:column="14"/></operator><name pos:line="168" pos:column="14">cur<pos:position pos:line="168" pos:column="17"/></name> <operator pos:line="168" pos:column="18">==<pos:position pos:line="168" pos:column="20"/></operator> <literal type="char" pos:line="168" pos:column="21">'{'<pos:position pos:line="168" pos:column="24"/></literal> <operator pos:line="168" pos:column="25">&amp;&amp;<pos:position pos:line="168" pos:column="35"/></operator> <operator pos:line="168" pos:column="28">!<pos:position pos:line="168" pos:column="29"/></operator><name><name pos:line="168" pos:column="29">data<pos:position pos:line="168" pos:column="33"/></name><operator pos:line="168" pos:column="33">.<pos:position pos:line="168" pos:column="34"/></operator><name pos:line="168" pos:column="34">string<pos:position pos:line="168" pos:column="40"/></name></name></expr>)<pos:position pos:line="168" pos:column="41"/></condition><then pos:line="168" pos:column="41"> <block pos:line="168" pos:column="42">{
            <decl_stmt><decl><type><name pos:line="169" pos:column="13">char<pos:position pos:line="169" pos:column="17"/></name> <modifier pos:line="169" pos:column="18">*<pos:position pos:line="169" pos:column="19"/></modifier></type><name pos:line="169" pos:column="19">cp<pos:position pos:line="169" pos:column="21"/></name></decl>;<pos:position pos:line="169" pos:column="22"/></decl_stmt>
            <expr_stmt><expr><operator pos:line="170" pos:column="13">++<pos:position pos:line="170" pos:column="15"/></operator><name pos:line="170" pos:column="15">cur<pos:position pos:line="170" pos:column="18"/></name></expr>;<pos:position pos:line="170" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><name pos:line="171" pos:column="13">l<pos:position pos:line="171" pos:column="14"/></name> <operator pos:line="171" pos:column="15">=<pos:position pos:line="171" pos:column="16"/></operator> <call><name pos:line="171" pos:column="17">strcspn<pos:position pos:line="171" pos:column="24"/></name><argument_list pos:line="171" pos:column="24">(<argument><expr><name pos:line="171" pos:column="25">cur<pos:position pos:line="171" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="30">"}"<pos:position pos:line="171" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="172" pos:column="13">cp<pos:position pos:line="172" pos:column="15"/></name> <operator pos:line="172" pos:column="16">=<pos:position pos:line="172" pos:column="17"/></operator> <operator pos:line="172" pos:column="18">(<pos:position pos:line="172" pos:column="19"/></operator><name pos:line="172" pos:column="19">char<pos:position pos:line="172" pos:column="23"/></name> <operator pos:line="172" pos:column="24">*<pos:position pos:line="172" pos:column="25"/></operator><operator pos:line="172" pos:column="25">)<pos:position pos:line="172" pos:column="26"/></operator><call><name pos:line="172" pos:column="26">xmalloc<pos:position pos:line="172" pos:column="33"/></name><argument_list pos:line="172" pos:column="33">(<argument><expr><name pos:line="172" pos:column="34">l<pos:position pos:line="172" pos:column="35"/></name> <operator pos:line="172" pos:column="36">+<pos:position pos:line="172" pos:column="37"/></operator> <literal type="number" pos:line="172" pos:column="38">1<pos:position pos:line="172" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="173" pos:column="13">xstrncpy<pos:position pos:line="173" pos:column="21"/></name><argument_list pos:line="173" pos:column="21">(<argument><expr><name pos:line="173" pos:column="22">cp<pos:position pos:line="173" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="26">cur<pos:position pos:line="173" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="31">l<pos:position pos:line="173" pos:column="32"/></name> <operator pos:line="173" pos:column="33">+<pos:position pos:line="173" pos:column="34"/></operator> <literal type="number" pos:line="173" pos:column="35">1<pos:position pos:line="173" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="174" pos:column="13">data<pos:position pos:line="174" pos:column="17"/></name><operator pos:line="174" pos:column="17">.<pos:position pos:line="174" pos:column="18"/></operator><name pos:line="174" pos:column="18">string<pos:position pos:line="174" pos:column="24"/></name></name> <operator pos:line="174" pos:column="25">=<pos:position pos:line="174" pos:column="26"/></operator> <name pos:line="174" pos:column="27">cp<pos:position pos:line="174" pos:column="29"/></name></expr>;<pos:position pos:line="174" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="175" pos:column="13">cur<pos:position pos:line="175" pos:column="16"/></name> <operator pos:line="175" pos:column="17">+=<pos:position pos:line="175" pos:column="19"/></operator> <name pos:line="175" pos:column="20">l<pos:position pos:line="175" pos:column="21"/></name></expr>;<pos:position pos:line="175" pos:column="22"/></expr_stmt>

            <if pos:line="177" pos:column="13">if <condition pos:line="177" pos:column="16">(<expr><operator pos:line="177" pos:column="17">*<pos:position pos:line="177" pos:column="18"/></operator><name pos:line="177" pos:column="18">cur<pos:position pos:line="177" pos:column="21"/></name> <operator pos:line="177" pos:column="22">==<pos:position pos:line="177" pos:column="24"/></operator> <literal type="char" pos:line="177" pos:column="25">'}'<pos:position pos:line="177" pos:column="28"/></literal></expr>)<pos:position pos:line="177" pos:column="29"/></condition><then pos:line="177" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="178" pos:column="17">++<pos:position pos:line="178" pos:column="19"/></operator><name pos:line="178" pos:column="19">cur<pos:position pos:line="178" pos:column="22"/></name></expr>;<pos:position pos:line="178" pos:column="23"/></expr_stmt></block></then></if>
        }<pos:position pos:line="179" pos:column="10"/></block></then></if>

        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><operator pos:line="181" pos:column="13">*<pos:position pos:line="181" pos:column="14"/></operator><name pos:line="181" pos:column="14">cur<pos:position pos:line="181" pos:column="17"/></name> <operator pos:line="181" pos:column="18">==<pos:position pos:line="181" pos:column="20"/></operator> <literal type="char" pos:line="181" pos:column="21">' '<pos:position pos:line="181" pos:column="24"/></literal></expr>)<pos:position pos:line="181" pos:column="25"/></condition><then pos:line="181" pos:column="25"> <block pos:line="181" pos:column="26">{
            <expr_stmt><expr><name pos:line="182" pos:column="13">space<pos:position pos:line="182" pos:column="18"/></name> <operator pos:line="182" pos:column="19">=<pos:position pos:line="182" pos:column="20"/></operator> <literal type="boolean" pos:line="182" pos:column="21">true<pos:position pos:line="182" pos:column="25"/></literal></expr>;<pos:position pos:line="182" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="183" pos:column="13">++<pos:position pos:line="183" pos:column="15"/></operator><name pos:line="183" pos:column="15">cur<pos:position pos:line="183" pos:column="18"/></name></expr>;<pos:position pos:line="183" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="184" pos:column="10"/></block></then></if>
    }<pos:position pos:line="185" pos:column="6"/></block></then></if></elseif></if>

    <switch pos:line="187" pos:column="5">switch <condition pos:line="187" pos:column="12">(<expr><name pos:line="187" pos:column="13">type<pos:position pos:line="187" pos:column="17"/></name></expr>)<pos:position pos:line="187" pos:column="18"/></condition> <block pos:line="187" pos:column="19">{

<cpp:if pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">if<pos:position pos:line="189" pos:column="4"/></cpp:directive> <expr><name pos:line="189" pos:column="5">USE_ADAPTATION<pos:position pos:line="189" pos:column="19"/></name></expr></cpp:if>
    <case pos:line="190" pos:column="5">case <expr><name pos:line="190" pos:column="10">LFT_ADAPTATION_LAST_HEADER<pos:position pos:line="190" pos:column="36"/></name></expr>:<pos:position pos:line="190" pos:column="37"/></case>
<cpp:endif pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">endif<pos:position pos:line="191" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">if<pos:position pos:line="193" pos:column="4"/></cpp:directive> <expr><name pos:line="193" pos:column="5">ICAP_CLIENT<pos:position pos:line="193" pos:column="16"/></name></expr></cpp:if>
    <case pos:line="194" pos:column="5">case <expr><name pos:line="194" pos:column="10">LFT_ICAP_REQ_HEADER<pos:position pos:line="194" pos:column="29"/></name></expr>:<pos:position pos:line="194" pos:column="30"/></case>

    <case pos:line="196" pos:column="5">case <expr><name pos:line="196" pos:column="10">LFT_ICAP_REP_HEADER<pos:position pos:line="196" pos:column="29"/></name></expr>:<pos:position pos:line="196" pos:column="30"/></case>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>

    <case pos:line="199" pos:column="5">case <expr><name pos:line="199" pos:column="10">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="199" pos:column="36"/></name></expr>:<pos:position pos:line="199" pos:column="37"/></case>

    <case pos:line="201" pos:column="5">case <expr><name pos:line="201" pos:column="10">LFT_REQUEST_HEADER<pos:position pos:line="201" pos:column="28"/></name></expr>:<pos:position pos:line="201" pos:column="29"/></case>

    <case pos:line="203" pos:column="5">case <expr><name pos:line="203" pos:column="10">LFT_REPLY_HEADER<pos:position pos:line="203" pos:column="26"/></name></expr>:<pos:position pos:line="203" pos:column="27"/></case>

    <case pos:line="205" pos:column="5">case <expr><name pos:line="205" pos:column="10">LFT_NOTE<pos:position pos:line="205" pos:column="18"/></name></expr>:<pos:position pos:line="205" pos:column="19"/></case>

        <if pos:line="207" pos:column="9">if <condition pos:line="207" pos:column="12">(<expr><name><name pos:line="207" pos:column="13">data<pos:position pos:line="207" pos:column="17"/></name><operator pos:line="207" pos:column="17">.<pos:position pos:line="207" pos:column="18"/></operator><name pos:line="207" pos:column="18">string<pos:position pos:line="207" pos:column="24"/></name></name></expr>)<pos:position pos:line="207" pos:column="25"/></condition><then pos:line="207" pos:column="25"> <block pos:line="207" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="208" pos:column="13">char<pos:position pos:line="208" pos:column="17"/></name> <modifier pos:line="208" pos:column="18">*<pos:position pos:line="208" pos:column="19"/></modifier></type><name pos:line="208" pos:column="19">header<pos:position pos:line="208" pos:column="25"/></name> <init pos:line="208" pos:column="26">= <expr><name><name pos:line="208" pos:column="28">data<pos:position pos:line="208" pos:column="32"/></name><operator pos:line="208" pos:column="32">.<pos:position pos:line="208" pos:column="33"/></operator><name pos:line="208" pos:column="33">string<pos:position pos:line="208" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="208" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="209" pos:column="13">char<pos:position pos:line="209" pos:column="17"/></name> <modifier pos:line="209" pos:column="18">*<pos:position pos:line="209" pos:column="19"/></modifier></type><name pos:line="209" pos:column="19">cp<pos:position pos:line="209" pos:column="21"/></name> <init pos:line="209" pos:column="22">= <expr><call><name pos:line="209" pos:column="24">strchr<pos:position pos:line="209" pos:column="30"/></name><argument_list pos:line="209" pos:column="30">(<argument><expr><name pos:line="209" pos:column="31">header<pos:position pos:line="209" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="209" pos:column="39">':'<pos:position pos:line="209" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="209" pos:column="44"/></decl_stmt>

            <if pos:line="211" pos:column="13">if <condition pos:line="211" pos:column="16">(<expr><name pos:line="211" pos:column="17">cp<pos:position pos:line="211" pos:column="19"/></name></expr>)<pos:position pos:line="211" pos:column="20"/></condition><then pos:line="211" pos:column="20"> <block pos:line="211" pos:column="21">{
                <expr_stmt><expr><operator pos:line="212" pos:column="17">*<pos:position pos:line="212" pos:column="18"/></operator><name pos:line="212" pos:column="18">cp<pos:position pos:line="212" pos:column="20"/></name> <operator pos:line="212" pos:column="21">=<pos:position pos:line="212" pos:column="22"/></operator> <literal type="char" pos:line="212" pos:column="23">'\0'<pos:position pos:line="212" pos:column="27"/></literal></expr>;<pos:position pos:line="212" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="213" pos:column="17">++<pos:position pos:line="213" pos:column="19"/></operator><name pos:line="213" pos:column="19">cp<pos:position pos:line="213" pos:column="21"/></name></expr>;<pos:position pos:line="213" pos:column="22"/></expr_stmt>

                <if pos:line="215" pos:column="17">if <condition pos:line="215" pos:column="20">(<expr><operator pos:line="215" pos:column="21">*<pos:position pos:line="215" pos:column="22"/></operator><name pos:line="215" pos:column="22">cp<pos:position pos:line="215" pos:column="24"/></name> <operator pos:line="215" pos:column="25">==<pos:position pos:line="215" pos:column="27"/></operator> <literal type="char" pos:line="215" pos:column="28">','<pos:position pos:line="215" pos:column="31"/></literal> <operator pos:line="215" pos:column="32">||<pos:position pos:line="215" pos:column="34"/></operator> <operator pos:line="215" pos:column="35">*<pos:position pos:line="215" pos:column="36"/></operator><name pos:line="215" pos:column="36">cp<pos:position pos:line="215" pos:column="38"/></name> <operator pos:line="215" pos:column="39">==<pos:position pos:line="215" pos:column="41"/></operator> <literal type="char" pos:line="215" pos:column="42">';'<pos:position pos:line="215" pos:column="45"/></literal> <operator pos:line="215" pos:column="46">||<pos:position pos:line="215" pos:column="48"/></operator> <operator pos:line="215" pos:column="49">*<pos:position pos:line="215" pos:column="50"/></operator><name pos:line="215" pos:column="50">cp<pos:position pos:line="215" pos:column="52"/></name> <operator pos:line="215" pos:column="53">==<pos:position pos:line="215" pos:column="55"/></operator> <literal type="char" pos:line="215" pos:column="56">':'<pos:position pos:line="215" pos:column="59"/></literal></expr>)<pos:position pos:line="215" pos:column="60"/></condition><then pos:line="215" pos:column="60"> <block pos:line="215" pos:column="61">{
                    <expr_stmt><expr><name><name pos:line="216" pos:column="21">data<pos:position pos:line="216" pos:column="25"/></name><operator pos:line="216" pos:column="25">.<pos:position pos:line="216" pos:column="26"/></operator><name pos:line="216" pos:column="26">header<pos:position pos:line="216" pos:column="32"/></name><operator pos:line="216" pos:column="32">.<pos:position pos:line="216" pos:column="33"/></operator><name pos:line="216" pos:column="33">separator<pos:position pos:line="216" pos:column="42"/></name></name> <operator pos:line="216" pos:column="43">=<pos:position pos:line="216" pos:column="44"/></operator> <operator pos:line="216" pos:column="45">*<pos:position pos:line="216" pos:column="46"/></operator><name pos:line="216" pos:column="46">cp<pos:position pos:line="216" pos:column="48"/></name></expr>;<pos:position pos:line="216" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="217" pos:column="21">++<pos:position pos:line="217" pos:column="23"/></operator><name pos:line="217" pos:column="23">cp<pos:position pos:line="217" pos:column="25"/></name></expr>;<pos:position pos:line="217" pos:column="26"/></expr_stmt>
                }<pos:position pos:line="218" pos:column="18"/></block></then> <else pos:line="218" pos:column="19">else <block pos:line="218" pos:column="24">{
                    <expr_stmt><expr><name><name pos:line="219" pos:column="21">data<pos:position pos:line="219" pos:column="25"/></name><operator pos:line="219" pos:column="25">.<pos:position pos:line="219" pos:column="26"/></operator><name pos:line="219" pos:column="26">header<pos:position pos:line="219" pos:column="32"/></name><operator pos:line="219" pos:column="32">.<pos:position pos:line="219" pos:column="33"/></operator><name pos:line="219" pos:column="33">separator<pos:position pos:line="219" pos:column="42"/></name></name> <operator pos:line="219" pos:column="43">=<pos:position pos:line="219" pos:column="44"/></operator> <literal type="char" pos:line="219" pos:column="45">','<pos:position pos:line="219" pos:column="48"/></literal></expr>;<pos:position pos:line="219" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="220" pos:column="18"/></block></else></if>

                <expr_stmt><expr><name><name pos:line="222" pos:column="17">data<pos:position pos:line="222" pos:column="21"/></name><operator pos:line="222" pos:column="21">.<pos:position pos:line="222" pos:column="22"/></operator><name pos:line="222" pos:column="22">header<pos:position pos:line="222" pos:column="28"/></name><operator pos:line="222" pos:column="28">.<pos:position pos:line="222" pos:column="29"/></operator><name pos:line="222" pos:column="29">element<pos:position pos:line="222" pos:column="36"/></name></name> <operator pos:line="222" pos:column="37">=<pos:position pos:line="222" pos:column="38"/></operator> <name pos:line="222" pos:column="39">cp<pos:position pos:line="222" pos:column="41"/></name></expr>;<pos:position pos:line="222" pos:column="42"/></expr_stmt>

                <switch pos:line="224" pos:column="17">switch <condition pos:line="224" pos:column="24">(<expr><name pos:line="224" pos:column="25">type<pos:position pos:line="224" pos:column="29"/></name></expr>)<pos:position pos:line="224" pos:column="30"/></condition> <block pos:line="224" pos:column="31">{
                <case pos:line="225" pos:column="17">case <expr><name pos:line="225" pos:column="22">LFT_REQUEST_HEADER<pos:position pos:line="225" pos:column="40"/></name></expr>:<pos:position pos:line="225" pos:column="41"/></case>
                    <expr_stmt><expr><name pos:line="226" pos:column="21">type<pos:position pos:line="226" pos:column="25"/></name> <operator pos:line="226" pos:column="26">=<pos:position pos:line="226" pos:column="27"/></operator> <name pos:line="226" pos:column="28">LFT_REQUEST_HEADER_ELEM<pos:position pos:line="226" pos:column="51"/></name></expr>;<pos:position pos:line="226" pos:column="52"/></expr_stmt>
                    <break pos:line="227" pos:column="21">break;<pos:position pos:line="227" pos:column="27"/></break>

                <case pos:line="229" pos:column="17">case <expr><name pos:line="229" pos:column="22">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="229" pos:column="48"/></name></expr>:<pos:position pos:line="229" pos:column="49"/></case>
                    <expr_stmt><expr><name pos:line="230" pos:column="21">type<pos:position pos:line="230" pos:column="25"/></name> <operator pos:line="230" pos:column="26">=<pos:position pos:line="230" pos:column="27"/></operator> <name pos:line="230" pos:column="28">LFT_ADAPTED_REQUEST_HEADER_ELEM<pos:position pos:line="230" pos:column="59"/></name></expr>;<pos:position pos:line="230" pos:column="60"/></expr_stmt>
                    <break pos:line="231" pos:column="21">break;<pos:position pos:line="231" pos:column="27"/></break>

                <case pos:line="233" pos:column="17">case <expr><name pos:line="233" pos:column="22">LFT_REPLY_HEADER<pos:position pos:line="233" pos:column="38"/></name></expr>:<pos:position pos:line="233" pos:column="39"/></case>
                    <expr_stmt><expr><name pos:line="234" pos:column="21">type<pos:position pos:line="234" pos:column="25"/></name> <operator pos:line="234" pos:column="26">=<pos:position pos:line="234" pos:column="27"/></operator> <name pos:line="234" pos:column="28">LFT_REPLY_HEADER_ELEM<pos:position pos:line="234" pos:column="49"/></name></expr>;<pos:position pos:line="234" pos:column="50"/></expr_stmt>
                    <break pos:line="235" pos:column="21">break;<pos:position pos:line="235" pos:column="27"/></break>
<cpp:if pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">if<pos:position pos:line="236" pos:column="4"/></cpp:directive> <expr><name pos:line="236" pos:column="5">USE_ADAPTATION<pos:position pos:line="236" pos:column="19"/></name></expr></cpp:if>
                <case pos:line="237" pos:column="17">case <expr><name pos:line="237" pos:column="22">LFT_ADAPTATION_LAST_HEADER<pos:position pos:line="237" pos:column="48"/></name></expr>:<pos:position pos:line="237" pos:column="49"/></case>
                    <expr_stmt><expr><name pos:line="238" pos:column="21">type<pos:position pos:line="238" pos:column="25"/></name> <operator pos:line="238" pos:column="26">=<pos:position pos:line="238" pos:column="27"/></operator> <name pos:line="238" pos:column="28">LFT_ADAPTATION_LAST_HEADER_ELEM<pos:position pos:line="238" pos:column="59"/></name></expr>;<pos:position pos:line="238" pos:column="60"/></expr_stmt>
                    <break pos:line="239" pos:column="21">break;<pos:position pos:line="239" pos:column="27"/></break>
<cpp:endif pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">endif<pos:position pos:line="240" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">if<pos:position pos:line="241" pos:column="4"/></cpp:directive> <expr><name pos:line="241" pos:column="5">ICAP_CLIENT<pos:position pos:line="241" pos:column="16"/></name></expr></cpp:if>
                <case pos:line="242" pos:column="17">case <expr><name pos:line="242" pos:column="22">LFT_ICAP_REQ_HEADER<pos:position pos:line="242" pos:column="41"/></name></expr>:<pos:position pos:line="242" pos:column="42"/></case>
                    <expr_stmt><expr><name pos:line="243" pos:column="21">type<pos:position pos:line="243" pos:column="25"/></name> <operator pos:line="243" pos:column="26">=<pos:position pos:line="243" pos:column="27"/></operator> <name pos:line="243" pos:column="28">LFT_ICAP_REQ_HEADER_ELEM<pos:position pos:line="243" pos:column="52"/></name></expr>;<pos:position pos:line="243" pos:column="53"/></expr_stmt>
                    <break pos:line="244" pos:column="21">break;<pos:position pos:line="244" pos:column="27"/></break>
                <case pos:line="245" pos:column="17">case <expr><name pos:line="245" pos:column="22">LFT_ICAP_REP_HEADER<pos:position pos:line="245" pos:column="41"/></name></expr>:<pos:position pos:line="245" pos:column="42"/></case>
                    <expr_stmt><expr><name pos:line="246" pos:column="21">type<pos:position pos:line="246" pos:column="25"/></name> <operator pos:line="246" pos:column="26">=<pos:position pos:line="246" pos:column="27"/></operator> <name pos:line="246" pos:column="28">LFT_ICAP_REP_HEADER_ELEM<pos:position pos:line="246" pos:column="52"/></name></expr>;<pos:position pos:line="246" pos:column="53"/></expr_stmt>
                    <break pos:line="247" pos:column="21">break;<pos:position pos:line="247" pos:column="27"/></break>
<cpp:endif pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">endif<pos:position pos:line="248" pos:column="7"/></cpp:directive></cpp:endif>
                <default pos:line="249" pos:column="17">default:<pos:position pos:line="249" pos:column="25"/></default>
                    <break pos:line="250" pos:column="21">break;<pos:position pos:line="250" pos:column="27"/></break>
                }<pos:position pos:line="251" pos:column="18"/></block></switch>
            }<pos:position pos:line="252" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="254" pos:column="13">data<pos:position pos:line="254" pos:column="17"/></name><operator pos:line="254" pos:column="17">.<pos:position pos:line="254" pos:column="18"/></operator><name pos:line="254" pos:column="18">header<pos:position pos:line="254" pos:column="24"/></name><operator pos:line="254" pos:column="24">.<pos:position pos:line="254" pos:column="25"/></operator><name pos:line="254" pos:column="25">header<pos:position pos:line="254" pos:column="31"/></name></name> <operator pos:line="254" pos:column="32">=<pos:position pos:line="254" pos:column="33"/></operator> <name pos:line="254" pos:column="34">header<pos:position pos:line="254" pos:column="40"/></name></expr>;<pos:position pos:line="254" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="255" pos:column="10"/></block></then> <else pos:line="255" pos:column="11">else <block pos:line="255" pos:column="16">{
            <switch pos:line="256" pos:column="13">switch <condition pos:line="256" pos:column="20">(<expr><name pos:line="256" pos:column="21">type<pos:position pos:line="256" pos:column="25"/></name></expr>)<pos:position pos:line="256" pos:column="26"/></condition> <block pos:line="256" pos:column="27">{
            <case pos:line="257" pos:column="13">case <expr><name pos:line="257" pos:column="18">LFT_REQUEST_HEADER<pos:position pos:line="257" pos:column="36"/></name></expr>:<pos:position pos:line="257" pos:column="37"/></case>
                <expr_stmt><expr><name pos:line="258" pos:column="17">type<pos:position pos:line="258" pos:column="21"/></name> <operator pos:line="258" pos:column="22">=<pos:position pos:line="258" pos:column="23"/></operator> <name pos:line="258" pos:column="24">LFT_REQUEST_ALL_HEADERS<pos:position pos:line="258" pos:column="47"/></name></expr>;<pos:position pos:line="258" pos:column="48"/></expr_stmt>
                <break pos:line="259" pos:column="17">break;<pos:position pos:line="259" pos:column="23"/></break>

            <case pos:line="261" pos:column="13">case <expr><name pos:line="261" pos:column="18">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="261" pos:column="44"/></name></expr>:<pos:position pos:line="261" pos:column="45"/></case>
                <expr_stmt><expr><name pos:line="262" pos:column="17">type<pos:position pos:line="262" pos:column="21"/></name> <operator pos:line="262" pos:column="22">=<pos:position pos:line="262" pos:column="23"/></operator> <name pos:line="262" pos:column="24">LFT_ADAPTED_REQUEST_ALL_HEADERS<pos:position pos:line="262" pos:column="55"/></name></expr>;<pos:position pos:line="262" pos:column="56"/></expr_stmt>
                <break pos:line="263" pos:column="17">break;<pos:position pos:line="263" pos:column="23"/></break>

            <case pos:line="265" pos:column="13">case <expr><name pos:line="265" pos:column="18">LFT_REPLY_HEADER<pos:position pos:line="265" pos:column="34"/></name></expr>:<pos:position pos:line="265" pos:column="35"/></case>
                <expr_stmt><expr><name pos:line="266" pos:column="17">type<pos:position pos:line="266" pos:column="21"/></name> <operator pos:line="266" pos:column="22">=<pos:position pos:line="266" pos:column="23"/></operator> <name pos:line="266" pos:column="24">LFT_REPLY_ALL_HEADERS<pos:position pos:line="266" pos:column="45"/></name></expr>;<pos:position pos:line="266" pos:column="46"/></expr_stmt>
                <break pos:line="267" pos:column="17">break;<pos:position pos:line="267" pos:column="23"/></break>
<cpp:if pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">if<pos:position pos:line="268" pos:column="4"/></cpp:directive> <expr><name pos:line="268" pos:column="5">USE_ADAPTATION<pos:position pos:line="268" pos:column="19"/></name></expr></cpp:if>
            <case pos:line="269" pos:column="13">case <expr><name pos:line="269" pos:column="18">LFT_ADAPTATION_LAST_HEADER<pos:position pos:line="269" pos:column="44"/></name></expr>:<pos:position pos:line="269" pos:column="45"/></case>
                <expr_stmt><expr><name pos:line="270" pos:column="17">type<pos:position pos:line="270" pos:column="21"/></name> <operator pos:line="270" pos:column="22">=<pos:position pos:line="270" pos:column="23"/></operator> <name pos:line="270" pos:column="24">LFT_ADAPTATION_LAST_ALL_HEADERS<pos:position pos:line="270" pos:column="55"/></name></expr>;<pos:position pos:line="270" pos:column="56"/></expr_stmt>
                <break pos:line="271" pos:column="17">break;<pos:position pos:line="271" pos:column="23"/></break>
<cpp:endif pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">endif<pos:position pos:line="272" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">if<pos:position pos:line="273" pos:column="4"/></cpp:directive> <expr><name pos:line="273" pos:column="5">ICAP_CLIENT<pos:position pos:line="273" pos:column="16"/></name></expr></cpp:if>
            <case pos:line="274" pos:column="13">case <expr><name pos:line="274" pos:column="18">LFT_ICAP_REQ_HEADER<pos:position pos:line="274" pos:column="37"/></name></expr>:<pos:position pos:line="274" pos:column="38"/></case>
                <expr_stmt><expr><name pos:line="275" pos:column="17">type<pos:position pos:line="275" pos:column="21"/></name> <operator pos:line="275" pos:column="22">=<pos:position pos:line="275" pos:column="23"/></operator> <name pos:line="275" pos:column="24">LFT_ICAP_REQ_ALL_HEADERS<pos:position pos:line="275" pos:column="48"/></name></expr>;<pos:position pos:line="275" pos:column="49"/></expr_stmt>
                <break pos:line="276" pos:column="17">break;<pos:position pos:line="276" pos:column="23"/></break>
            <case pos:line="277" pos:column="13">case <expr><name pos:line="277" pos:column="18">LFT_ICAP_REP_HEADER<pos:position pos:line="277" pos:column="37"/></name></expr>:<pos:position pos:line="277" pos:column="38"/></case>
                <expr_stmt><expr><name pos:line="278" pos:column="17">type<pos:position pos:line="278" pos:column="21"/></name> <operator pos:line="278" pos:column="22">=<pos:position pos:line="278" pos:column="23"/></operator> <name pos:line="278" pos:column="24">LFT_ICAP_REP_ALL_HEADERS<pos:position pos:line="278" pos:column="48"/></name></expr>;<pos:position pos:line="278" pos:column="49"/></expr_stmt>
                <break pos:line="279" pos:column="17">break;<pos:position pos:line="279" pos:column="23"/></break>
<cpp:endif pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">endif<pos:position pos:line="280" pos:column="7"/></cpp:directive></cpp:endif>
            <default pos:line="281" pos:column="13">default:<pos:position pos:line="281" pos:column="21"/></default>
                <break pos:line="282" pos:column="17">break;<pos:position pos:line="282" pos:column="23"/></break>
            }<pos:position pos:line="283" pos:column="14"/></block></switch>
            <expr_stmt><expr><name><name pos:line="284" pos:column="13">Config<pos:position pos:line="284" pos:column="19"/></name><operator pos:line="284" pos:column="19">.<pos:position pos:line="284" pos:column="20"/></operator><name pos:line="284" pos:column="20">onoff<pos:position pos:line="284" pos:column="25"/></name><operator pos:line="284" pos:column="25">.<pos:position pos:line="284" pos:column="26"/></operator><name pos:line="284" pos:column="26">log_mime_hdrs<pos:position pos:line="284" pos:column="39"/></name></name> <operator pos:line="284" pos:column="40">=<pos:position pos:line="284" pos:column="41"/></operator> <literal type="number" pos:line="284" pos:column="42">1<pos:position pos:line="284" pos:column="43"/></literal></expr>;<pos:position pos:line="284" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="285" pos:column="10"/></block></else></if>

        <break pos:line="287" pos:column="9">break;<pos:position pos:line="287" pos:column="15"/></break>

    <case pos:line="289" pos:column="5">case <expr><name pos:line="289" pos:column="10">LFT_CLIENT_FQDN<pos:position pos:line="289" pos:column="25"/></name></expr>:<pos:position pos:line="289" pos:column="26"/></case>
        <expr_stmt><expr><name><name pos:line="290" pos:column="9">Config<pos:position pos:line="290" pos:column="15"/></name><operator pos:line="290" pos:column="15">.<pos:position pos:line="290" pos:column="16"/></operator><name pos:line="290" pos:column="16">onoff<pos:position pos:line="290" pos:column="21"/></name><operator pos:line="290" pos:column="21">.<pos:position pos:line="290" pos:column="22"/></operator><name pos:line="290" pos:column="22">log_fqdn<pos:position pos:line="290" pos:column="30"/></name></name> <operator pos:line="290" pos:column="31">=<pos:position pos:line="290" pos:column="32"/></operator> <literal type="number" pos:line="290" pos:column="33">1<pos:position pos:line="290" pos:column="34"/></literal></expr>;<pos:position pos:line="290" pos:column="35"/></expr_stmt>
        <break pos:line="291" pos:column="9">break;<pos:position pos:line="291" pos:column="15"/></break>

    <case pos:line="293" pos:column="5">case <expr><name pos:line="293" pos:column="10">LFT_TIME_TO_HANDLE_REQUEST<pos:position pos:line="293" pos:column="36"/></name></expr>:<pos:position pos:line="293" pos:column="37"/></case>
    <case pos:line="294" pos:column="5">case <expr><name pos:line="294" pos:column="10">LFT_PEER_RESPONSE_TIME<pos:position pos:line="294" pos:column="32"/></name></expr>:<pos:position pos:line="294" pos:column="33"/></case>
    <case pos:line="295" pos:column="5">case <expr><name pos:line="295" pos:column="10">LFT_TOTAL_SERVER_SIDE_RESPONSE_TIME<pos:position pos:line="295" pos:column="45"/></name></expr>:<pos:position pos:line="295" pos:column="46"/></case>
    <case pos:line="296" pos:column="5">case <expr><name pos:line="296" pos:column="10">LFT_DNS_WAIT_TIME<pos:position pos:line="296" pos:column="27"/></name></expr>:<pos:position pos:line="296" pos:column="28"/></case>
<cpp:if pos:line="297" pos:column="1">#<cpp:directive pos:line="297" pos:column="2">if<pos:position pos:line="297" pos:column="4"/></cpp:directive> <expr><name pos:line="297" pos:column="5">ICAP_CLIENT<pos:position pos:line="297" pos:column="16"/></name></expr></cpp:if>
    <case pos:line="298" pos:column="5">case <expr><name pos:line="298" pos:column="10">LFT_ICAP_TR_RESPONSE_TIME<pos:position pos:line="298" pos:column="35"/></name></expr>:<pos:position pos:line="298" pos:column="36"/></case>
    <case pos:line="299" pos:column="5">case <expr><name pos:line="299" pos:column="10">LFT_ICAP_IO_TIME<pos:position pos:line="299" pos:column="26"/></name></expr>:<pos:position pos:line="299" pos:column="27"/></case>
    <case pos:line="300" pos:column="5">case <expr><name pos:line="300" pos:column="10">LFT_ICAP_TOTAL_TIME<pos:position pos:line="300" pos:column="29"/></name></expr>:<pos:position pos:line="300" pos:column="30"/></case>
<cpp:endif pos:line="301" pos:column="1">#<cpp:directive pos:line="301" pos:column="2">endif<pos:position pos:line="301" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="302" pos:column="5">case <expr><name pos:line="302" pos:column="10">LFT_TIME_START<pos:position pos:line="302" pos:column="24"/></name></expr>:<pos:position pos:line="302" pos:column="25"/></case>
    <case pos:line="303" pos:column="5">case <expr><name pos:line="303" pos:column="10">LFT_TIME_SUBSECOND<pos:position pos:line="303" pos:column="28"/></name></expr>:<pos:position pos:line="303" pos:column="29"/></case>
        <expr_stmt><expr><name pos:line="304" pos:column="9">divisor<pos:position pos:line="304" pos:column="16"/></name> <operator pos:line="304" pos:column="17">=<pos:position pos:line="304" pos:column="18"/></operator> <literal type="number" pos:line="304" pos:column="19">1000<pos:position pos:line="304" pos:column="23"/></literal></expr>;<pos:position pos:line="304" pos:column="24"/></expr_stmt>

        <if pos:line="306" pos:column="9">if <condition pos:line="306" pos:column="12">(<expr><name pos:line="306" pos:column="13">widthMax<pos:position pos:line="306" pos:column="21"/></name> <operator pos:line="306" pos:column="22">&gt;<pos:position pos:line="306" pos:column="26"/></operator> <literal type="number" pos:line="306" pos:column="24">0<pos:position pos:line="306" pos:column="25"/></literal></expr>)<pos:position pos:line="306" pos:column="26"/></condition><then pos:line="306" pos:column="26"> <block pos:line="306" pos:column="27">{
            <expr_stmt><expr><name pos:line="307" pos:column="13">divisor<pos:position pos:line="307" pos:column="20"/></name> <operator pos:line="307" pos:column="21">=<pos:position pos:line="307" pos:column="22"/></operator> <literal type="number" pos:line="307" pos:column="23">1000000<pos:position pos:line="307" pos:column="30"/></literal></expr>;<pos:position pos:line="307" pos:column="31"/></expr_stmt>

            <for pos:line="309" pos:column="13">for <control pos:line="309" pos:column="17">(<init><decl><type><name pos:line="309" pos:column="18">int<pos:position pos:line="309" pos:column="21"/></name></type> <name pos:line="309" pos:column="22">i<pos:position pos:line="309" pos:column="23"/></name> <init pos:line="309" pos:column="24">= <expr><name pos:line="309" pos:column="26">widthMax<pos:position pos:line="309" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="309" pos:column="35"/></init> <condition><expr><name pos:line="309" pos:column="36">i<pos:position pos:line="309" pos:column="37"/></name> <operator pos:line="309" pos:column="38">&gt;<pos:position pos:line="309" pos:column="42"/></operator> <literal type="number" pos:line="309" pos:column="40">0<pos:position pos:line="309" pos:column="41"/></literal></expr>;<pos:position pos:line="309" pos:column="42"/></condition> <incr><expr><operator pos:line="309" pos:column="43">--<pos:position pos:line="309" pos:column="45"/></operator><name pos:line="309" pos:column="45">i<pos:position pos:line="309" pos:column="46"/></name></expr></incr>)<pos:position pos:line="309" pos:column="47"/></control>
                <block type="pseudo"><expr_stmt><expr><name pos:line="310" pos:column="17">divisor<pos:position pos:line="310" pos:column="24"/></name> <operator pos:line="310" pos:column="25">/=<pos:position pos:line="310" pos:column="27"/></operator> <literal type="number" pos:line="310" pos:column="28">10<pos:position pos:line="310" pos:column="30"/></literal></expr>;<pos:position pos:line="310" pos:column="31"/></expr_stmt></block></for>

            <if pos:line="312" pos:column="13">if <condition pos:line="312" pos:column="16">(<expr><operator pos:line="312" pos:column="17">!<pos:position pos:line="312" pos:column="18"/></operator><name pos:line="312" pos:column="18">divisor<pos:position pos:line="312" pos:column="25"/></name></expr>)<pos:position pos:line="312" pos:column="26"/></condition><then pos:line="312" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><name pos:line="313" pos:column="17">divisor<pos:position pos:line="313" pos:column="24"/></name> <operator pos:line="313" pos:column="25">=<pos:position pos:line="313" pos:column="26"/></operator> <literal type="number" pos:line="313" pos:column="27">1<pos:position pos:line="313" pos:column="28"/></literal></expr>;<pos:position pos:line="313" pos:column="29"/></expr_stmt></block></then></if>
        }<pos:position pos:line="314" pos:column="10"/></block></then></if>
        <break pos:line="315" pos:column="9">break;<pos:position pos:line="315" pos:column="15"/></break>

    <case pos:line="317" pos:column="5">case <expr><name pos:line="317" pos:column="10">LFT_HTTP_SENT_STATUS_CODE_OLD_30<pos:position pos:line="317" pos:column="42"/></name></expr>:<pos:position pos:line="317" pos:column="43"/></case>
        <expr_stmt><expr><call><name pos:line="318" pos:column="9">debugs<pos:position pos:line="318" pos:column="15"/></name><argument_list pos:line="318" pos:column="15">(<argument><expr><literal type="number" pos:line="318" pos:column="16">46<pos:position pos:line="318" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="318" pos:column="20">DBG_PARSE_NOTE<pos:position pos:line="318" pos:column="34"/></name><argument_list pos:line="318" pos:column="34">(<argument><expr><name pos:line="318" pos:column="35">DBG_IMPORTANT<pos:position pos:line="318" pos:column="48"/></name></expr></argument>)<pos:position pos:line="318" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="318" pos:column="51">"WARNING: The \"Hs\" formatting code is deprecated. Use the \"&gt;Hs\" instead."<pos:position pos:line="318" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="318" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="130"/></expr_stmt>
        <expr_stmt><expr><name pos:line="319" pos:column="9">type<pos:position pos:line="319" pos:column="13"/></name> <operator pos:line="319" pos:column="14">=<pos:position pos:line="319" pos:column="15"/></operator> <name pos:line="319" pos:column="16">LFT_HTTP_SENT_STATUS_CODE<pos:position pos:line="319" pos:column="41"/></name></expr>;<pos:position pos:line="319" pos:column="42"/></expr_stmt>
        <break pos:line="320" pos:column="9">break;<pos:position pos:line="320" pos:column="15"/></break>

    <case pos:line="322" pos:column="5">case <expr><name pos:line="322" pos:column="10">LFT_SERVER_LOCAL_IP_OLD_27<pos:position pos:line="322" pos:column="36"/></name></expr>:<pos:position pos:line="322" pos:column="37"/></case>
        <expr_stmt><expr><call><name pos:line="323" pos:column="9">debugs<pos:position pos:line="323" pos:column="15"/></name><argument_list pos:line="323" pos:column="15">(<argument><expr><literal type="number" pos:line="323" pos:column="16">46<pos:position pos:line="323" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="323" pos:column="20">DBG_PARSE_NOTE<pos:position pos:line="323" pos:column="34"/></name><argument_list pos:line="323" pos:column="34">(<argument><expr><name pos:line="323" pos:column="35">DBG_IMPORTANT<pos:position pos:line="323" pos:column="48"/></name></expr></argument>)<pos:position pos:line="323" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="323" pos:column="51">"WARNING: The \"oa\" formatting code is deprecated. Use the \"&lt;la\" instead."<pos:position pos:line="323" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="323" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="130"/></expr_stmt>
        <expr_stmt><expr><name pos:line="324" pos:column="9">type<pos:position pos:line="324" pos:column="13"/></name> <operator pos:line="324" pos:column="14">=<pos:position pos:line="324" pos:column="15"/></operator> <name pos:line="324" pos:column="16">LFT_SERVER_LOCAL_IP<pos:position pos:line="324" pos:column="35"/></name></expr>;<pos:position pos:line="324" pos:column="36"/></expr_stmt>
        <break pos:line="325" pos:column="9">break;<pos:position pos:line="325" pos:column="15"/></break>

    <case pos:line="327" pos:column="5">case <expr><name pos:line="327" pos:column="10">LFT_REQUEST_URLPATH_OLD_31<pos:position pos:line="327" pos:column="36"/></name></expr>:<pos:position pos:line="327" pos:column="37"/></case>
        <expr_stmt><expr><call><name pos:line="328" pos:column="9">debugs<pos:position pos:line="328" pos:column="15"/></name><argument_list pos:line="328" pos:column="15">(<argument><expr><literal type="number" pos:line="328" pos:column="16">46<pos:position pos:line="328" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="328" pos:column="20">DBG_PARSE_NOTE<pos:position pos:line="328" pos:column="34"/></name><argument_list pos:line="328" pos:column="34">(<argument><expr><name pos:line="328" pos:column="35">DBG_IMPORTANT<pos:position pos:line="328" pos:column="48"/></name></expr></argument>)<pos:position pos:line="328" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="328" pos:column="51">"WARNING: The \"rp\" formatting code is deprecated. Use the \"&gt;rp\" instead."<pos:position pos:line="328" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="328" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="130"/></expr_stmt>
        <expr_stmt><expr><name pos:line="329" pos:column="9">type<pos:position pos:line="329" pos:column="13"/></name> <operator pos:line="329" pos:column="14">=<pos:position pos:line="329" pos:column="15"/></operator> <name pos:line="329" pos:column="16">LFT_CLIENT_REQ_URLPATH<pos:position pos:line="329" pos:column="38"/></name></expr>;<pos:position pos:line="329" pos:column="39"/></expr_stmt>
        <break pos:line="330" pos:column="9">break;<pos:position pos:line="330" pos:column="15"/></break>

    <case pos:line="332" pos:column="5">case <expr><name pos:line="332" pos:column="10">LFT_REQUEST_VERSION_OLD_2X<pos:position pos:line="332" pos:column="36"/></name></expr>:<pos:position pos:line="332" pos:column="37"/></case>
        <expr_stmt><expr><call><name pos:line="333" pos:column="9">debugs<pos:position pos:line="333" pos:column="15"/></name><argument_list pos:line="333" pos:column="15">(<argument><expr><literal type="number" pos:line="333" pos:column="16">46<pos:position pos:line="333" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="333" pos:column="20">DBG_PARSE_NOTE<pos:position pos:line="333" pos:column="34"/></name><argument_list pos:line="333" pos:column="34">(<argument><expr><name pos:line="333" pos:column="35">DBG_IMPORTANT<pos:position pos:line="333" pos:column="48"/></name></expr></argument>)<pos:position pos:line="333" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="51">"WARNING: The \"&gt;v\" formatting code is deprecated. Use the \"&gt;rv\" instead."<pos:position pos:line="333" pos:column="134"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="130"/></expr_stmt>
        <expr_stmt><expr><name pos:line="334" pos:column="9">type<pos:position pos:line="334" pos:column="13"/></name> <operator pos:line="334" pos:column="14">=<pos:position pos:line="334" pos:column="15"/></operator> <name pos:line="334" pos:column="16">LFT_REQUEST_VERSION<pos:position pos:line="334" pos:column="35"/></name></expr>;<pos:position pos:line="334" pos:column="36"/></expr_stmt>
        <break pos:line="335" pos:column="9">break;<pos:position pos:line="335" pos:column="15"/></break>

<cpp:if pos:line="337" pos:column="1">#<cpp:directive pos:line="337" pos:column="2">if<pos:position pos:line="337" pos:column="4"/></cpp:directive> <expr><operator pos:line="337" pos:column="5">!<pos:position pos:line="337" pos:column="6"/></operator><name pos:line="337" pos:column="6">USE_SQUID_EUI<pos:position pos:line="337" pos:column="19"/></name></expr></cpp:if>
    <case pos:line="338" pos:column="5">case <expr><name pos:line="338" pos:column="10">LFT_CLIENT_EUI<pos:position pos:line="338" pos:column="24"/></name></expr>:<pos:position pos:line="338" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="339" pos:column="9">debugs<pos:position pos:line="339" pos:column="15"/></name><argument_list pos:line="339" pos:column="15">(<argument><expr><literal type="number" pos:line="339" pos:column="16">46<pos:position pos:line="339" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="339" pos:column="20">DBG_CRITICAL<pos:position pos:line="339" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="34">"WARNING: The \"&gt;eui\" formatting code requires EUI features which are disabled in this Squid."<pos:position pos:line="339" pos:column="132"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="131"/></expr_stmt>
        <break pos:line="340" pos:column="9">break;<pos:position pos:line="340" pos:column="15"/></break>
<cpp:endif pos:line="341" pos:column="1">#<cpp:directive pos:line="341" pos:column="2">endif<pos:position pos:line="341" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="343" pos:column="1">#<cpp:directive pos:line="343" pos:column="2">if<pos:position pos:line="343" pos:column="4"/></cpp:directive> <expr><name pos:line="343" pos:column="5">USE_OPENSSL<pos:position pos:line="343" pos:column="16"/></name></expr></cpp:if>
    <case pos:line="344" pos:column="5">case <expr><name pos:line="344" pos:column="10">LFT_TLS_SERVER_NEGOTIATED_VERSION<pos:position pos:line="344" pos:column="43"/></name></expr>:<pos:position pos:line="344" pos:column="44"/></case>
    <case pos:line="345" pos:column="5">case <expr><name pos:line="345" pos:column="10">LFT_TLS_SERVER_RECEIVED_HELLO_VERSION<pos:position pos:line="345" pos:column="47"/></name></expr>:<pos:position pos:line="345" pos:column="48"/></case>
    <case pos:line="346" pos:column="5">case <expr><name pos:line="346" pos:column="10">LFT_TLS_SERVER_SUPPORTED_VERSION<pos:position pos:line="346" pos:column="42"/></name></expr>:<pos:position pos:line="346" pos:column="43"/></case>
        <expr_stmt><expr><name><name pos:line="347" pos:column="9">Config<pos:position pos:line="347" pos:column="15"/></name><operator pos:line="347" pos:column="15">.<pos:position pos:line="347" pos:column="16"/></operator><name pos:line="347" pos:column="16">onoff<pos:position pos:line="347" pos:column="21"/></name><operator pos:line="347" pos:column="21">.<pos:position pos:line="347" pos:column="22"/></operator><name pos:line="347" pos:column="22">logTlsServerHelloDetails<pos:position pos:line="347" pos:column="46"/></name></name> <operator pos:line="347" pos:column="47">=<pos:position pos:line="347" pos:column="48"/></operator> <literal type="boolean" pos:line="347" pos:column="49">true<pos:position pos:line="347" pos:column="53"/></literal></expr>;<pos:position pos:line="347" pos:column="54"/></expr_stmt>
        <break pos:line="348" pos:column="9">break;<pos:position pos:line="348" pos:column="15"/></break>
<cpp:endif pos:line="349" pos:column="1">#<cpp:directive pos:line="349" pos:column="2">endif<pos:position pos:line="349" pos:column="7"/></cpp:directive></cpp:endif>

    <case pos:line="351" pos:column="5">case <expr><name pos:line="351" pos:column="10">LFT_REQUEST_URLGROUP_OLD_2X<pos:position pos:line="351" pos:column="37"/></name></expr>:<pos:position pos:line="351" pos:column="38"/></case>
        <expr_stmt><expr><call><name pos:line="352" pos:column="9">debugs<pos:position pos:line="352" pos:column="15"/></name><argument_list pos:line="352" pos:column="15">(<argument><expr><literal type="number" pos:line="352" pos:column="16">46<pos:position pos:line="352" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="352" pos:column="20">DBG_PARSE_NOTE<pos:position pos:line="352" pos:column="34"/></name><argument_list pos:line="352" pos:column="34">(<argument><expr><name pos:line="352" pos:column="35">DBG_IMPORTANT<pos:position pos:line="352" pos:column="48"/></name></expr></argument>)<pos:position pos:line="352" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="51">"WARNING: The \"rG\" formatting code is deprecated. Use \"note{urlgroup}\" instead."<pos:position pos:line="352" pos:column="135"/></literal></expr></argument>)<pos:position pos:line="352" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="137"/></expr_stmt>
        <expr_stmt><expr><name pos:line="353" pos:column="9">type<pos:position pos:line="353" pos:column="13"/></name> <operator pos:line="353" pos:column="14">=<pos:position pos:line="353" pos:column="15"/></operator> <name pos:line="353" pos:column="16">LFT_NOTE<pos:position pos:line="353" pos:column="24"/></name></expr>;<pos:position pos:line="353" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="354" pos:column="9">data<pos:position pos:line="354" pos:column="13"/></name><operator pos:line="354" pos:column="13">.<pos:position pos:line="354" pos:column="14"/></operator><name pos:line="354" pos:column="14">header<pos:position pos:line="354" pos:column="20"/></name><operator pos:line="354" pos:column="20">.<pos:position pos:line="354" pos:column="21"/></operator><name pos:line="354" pos:column="21">header<pos:position pos:line="354" pos:column="27"/></name></name> <operator pos:line="354" pos:column="28">=<pos:position pos:line="354" pos:column="29"/></operator> <call><name pos:line="354" pos:column="30">xstrdup<pos:position pos:line="354" pos:column="37"/></name><argument_list pos:line="354" pos:column="37">(<argument><expr><literal type="string" pos:line="354" pos:column="38">"urlgroup"<pos:position pos:line="354" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="50"/></expr_stmt>
        <break pos:line="355" pos:column="9">break;<pos:position pos:line="355" pos:column="15"/></break>

    <default pos:line="357" pos:column="5">default:<pos:position pos:line="357" pos:column="13"/></default>
        <break pos:line="358" pos:column="9">break;<pos:position pos:line="358" pos:column="15"/></break>
    }<pos:position pos:line="359" pos:column="6"/></block></switch>

    <return pos:line="361" pos:column="5">return <expr><operator pos:line="361" pos:column="12">(<pos:position pos:line="361" pos:column="13"/></operator><name pos:line="361" pos:column="13">cur<pos:position pos:line="361" pos:column="16"/></name> <operator pos:line="361" pos:column="17">-<pos:position pos:line="361" pos:column="18"/></operator> <name pos:line="361" pos:column="19">def<pos:position pos:line="361" pos:column="22"/></name><operator pos:line="361" pos:column="22">)<pos:position pos:line="361" pos:column="23"/></operator></expr>;<pos:position pos:line="361" pos:column="24"/></return>
}<pos:position pos:line="362" pos:column="2"/></block></function></unit>

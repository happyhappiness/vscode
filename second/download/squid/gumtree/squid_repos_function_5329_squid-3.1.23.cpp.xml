<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5329_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">esiProcessStream<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">clientStreamNode<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">thisNode<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">ClientHttpRequest<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">http<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">HttpReply<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type><name pos:line="2" pos:column="83">rep<pos:position pos:line="2" pos:column="86"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="88">StoreIOBuffer<pos:position pos:line="2" pos:column="101"/></name></type> <name pos:line="2" pos:column="102">receivedData<pos:position pos:line="2" pos:column="114"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="115"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* test preconditions */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">thisNode<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">!=<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* ESI TODO: handle thisNode rather than asserting - it should only ever
     * happen if we cause an abort and the callback chain
     * loops back to here, so we can simply return. However, that itself
     * shouldn't happen, so it stays as an assert for now. */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><call><name pos:line="10" pos:column="13">cbdataReferenceValid<pos:position pos:line="10" pos:column="33"/></name> <argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">thisNode<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/*
     * if data is NULL thisNode is the first entrance. If rep is also NULL,
     * something is wrong.
     * */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><call><name><name pos:line="15" pos:column="13">thisNode<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">data<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">getRaw<pos:position pos:line="15" pos:column="34"/></name></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call> <operator pos:line="15" pos:column="37">!=<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">NULL<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">||<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="48">rep<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name><name pos:line="16" pos:column="13">thisNode<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">node<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">.<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">next<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">!=<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">NULL<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name><name pos:line="18" pos:column="10">thisNode<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">data<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">getRaw<pos:position pos:line="18" pos:column="31"/></name></name><argument_list pos:line="18" pos:column="31">()<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
        <comment type="block" pos:line="19" pos:column="9">/* setup ESI context from reply headers */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="9">thisNode<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">data<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">ESIContextNew<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">rep<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">thisNode<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">http<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="22" pos:column="5">ESIContext<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">::<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">Pointer<pos:position pos:line="22" pos:column="24"/></name></name></type> <name pos:line="22" pos:column="25">context<pos:position pos:line="22" pos:column="32"/></name> <init pos:line="22" pos:column="33">= <expr><cast type="dynamic" pos:line="22" pos:column="35">dynamic_cast<argument_list type="generic" pos:line="22" pos:column="47">&lt;<argument><expr><name pos:line="22" pos:column="48">ESIContext<pos:position pos:line="22" pos:column="58"/></name> <operator pos:line="22" pos:column="59">*<pos:position pos:line="22" pos:column="60"/></operator></expr></argument>&gt;<pos:position pos:line="22" pos:column="64"/></argument_list><argument_list pos:line="22" pos:column="61">(<argument><expr><call><name><name pos:line="22" pos:column="62">thisNode<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">-&gt;<pos:position pos:line="22" pos:column="75"/></operator><name pos:line="22" pos:column="72">data<pos:position pos:line="22" pos:column="76"/></name><operator pos:line="22" pos:column="76">.<pos:position pos:line="22" pos:column="77"/></operator><name pos:line="22" pos:column="77">getRaw<pos:position pos:line="22" pos:column="83"/></name></name><argument_list pos:line="22" pos:column="83">()<pos:position pos:line="22" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="86"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="22" pos:column="87"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name> <argument_list pos:line="24" pos:column="12">(<argument><expr><call><name><name pos:line="24" pos:column="13">context<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">getRaw<pos:position pos:line="24" pos:column="27"/></name></name><argument_list pos:line="24" pos:column="27">()<pos:position pos:line="24" pos:column="29"/></argument_list></call> <operator pos:line="24" pos:column="30">!=<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">NULL<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">context<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">finishRead<pos:position pos:line="26" pos:column="24"/></name></name><argument_list pos:line="26" pos:column="24">()<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* Skipping all ESI processing. All remaining data gets untouched.
     * Mainly used when an error or other non-ESI processable entity
     * has been detected to prevent ESI processing the error body
     */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">context<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">flags<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">passthrough<pos:position pos:line="32" pos:column="35"/></name></name></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36"> <block pos:line="32" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">clientStreamCallback<pos:position pos:line="33" pos:column="29"/></name> <argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">thisNode<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">http<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">rep<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">receivedData<pos:position pos:line="33" pos:column="64"/></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
        <return pos:line="34" pos:column="9">return;<pos:position pos:line="34" pos:column="16"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">86<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="16">3<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="19">"esiProcessStream: Processing thisNode "<pos:position pos:line="37" pos:column="59"/></literal> <operator pos:line="37" pos:column="60">&lt;&lt;<pos:position pos:line="37" pos:column="68"/></operator> <name pos:line="37" pos:column="63">thisNode<pos:position pos:line="37" pos:column="71"/></name> <operator pos:line="37" pos:column="72">&lt;&lt;<pos:position pos:line="37" pos:column="80"/></operator>
           <literal type="string" pos:line="38" pos:column="12">" context "<pos:position pos:line="38" pos:column="23"/></literal> <operator pos:line="38" pos:column="24">&lt;&lt;<pos:position pos:line="38" pos:column="32"/></operator> <call><name><name pos:line="38" pos:column="27">context<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">.<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="35">getRaw<pos:position pos:line="38" pos:column="41"/></name></name><argument_list pos:line="38" pos:column="41">()<pos:position pos:line="38" pos:column="43"/></argument_list></call> <operator pos:line="38" pos:column="44">&lt;&lt;<pos:position pos:line="38" pos:column="52"/></operator> <literal type="string" pos:line="38" pos:column="47">" offset "<pos:position pos:line="38" pos:column="57"/></literal> <operator pos:line="38" pos:column="58">&lt;&lt;<pos:position pos:line="38" pos:column="66"/></operator>
           <operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">int<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">)<pos:position pos:line="39" pos:column="17"/></operator> <name><name pos:line="39" pos:column="18">receivedData<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">.<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">offset<pos:position pos:line="39" pos:column="37"/></name></name> <operator pos:line="39" pos:column="38">&lt;&lt;<pos:position pos:line="39" pos:column="46"/></operator> <literal type="string" pos:line="39" pos:column="41">" length "<pos:position pos:line="39" pos:column="51"/></literal> <operator pos:line="39" pos:column="52">&lt;&lt;<pos:position pos:line="39" pos:column="60"/></operator>
           <operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">unsigned<pos:position pos:line="40" pos:column="21"/></name> <name pos:line="40" pos:column="22">int<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">)<pos:position pos:line="40" pos:column="26"/></operator><name><name pos:line="40" pos:column="26">receivedData<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">.<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">length<pos:position pos:line="40" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* once we finish the template, we *cannot* return here */</comment>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">assert<pos:position pos:line="43" pos:column="11"/></name> <argument_list pos:line="43" pos:column="12">(<argument><expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name><name pos:line="43" pos:column="14">context<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">flags<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">.<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">finishedtemplate<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">assert<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name><name pos:line="44" pos:column="14">context<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">cachedASTInUse<pos:position pos:line="44" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Can we generate any data ?*/</comment>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">receivedData<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">.<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">data<pos:position pos:line="48" pos:column="26"/></name></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27"> <block pos:line="48" pos:column="28">{
        <comment type="block" pos:line="49" pos:column="9">/* Increase our buffer area with incoming data */</comment>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">assert<pos:position pos:line="50" pos:column="15"/></name> <argument_list pos:line="50" pos:column="16">(<argument><expr><name><name pos:line="50" pos:column="17">receivedData<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">.<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">length<pos:position pos:line="50" pos:column="36"/></name></name> <operator pos:line="50" pos:column="37">&lt;=<pos:position pos:line="50" pos:column="42"/></operator> <name pos:line="50" pos:column="40">HTTP_REQBUF_SZ<pos:position pos:line="50" pos:column="54"/></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">assert<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><name><name pos:line="51" pos:column="17">thisNode<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">readBuffer<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">.<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="38">offset<pos:position pos:line="51" pos:column="44"/></name></name> <operator pos:line="51" pos:column="45">==<pos:position pos:line="51" pos:column="47"/></operator> <name><name pos:line="51" pos:column="48">receivedData<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">.<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="61">offset<pos:position pos:line="51" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">debugs<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><literal type="number" pos:line="52" pos:column="17">86<pos:position pos:line="52" pos:column="19"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="52" pos:column="20">5<pos:position pos:line="52" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="23">"esiProcessStream found "<pos:position pos:line="52" pos:column="48"/></literal> <operator pos:line="52" pos:column="49">&lt;&lt;<pos:position pos:line="52" pos:column="57"/></operator> <name><name pos:line="52" pos:column="52">receivedData<pos:position pos:line="52" pos:column="64"/></name><operator pos:line="52" pos:column="64">.<pos:position pos:line="52" pos:column="65"/></operator><name pos:line="52" pos:column="65">length<pos:position pos:line="52" pos:column="71"/></name></name> <operator pos:line="52" pos:column="72">&lt;&lt;<pos:position pos:line="52" pos:column="80"/></operator> <literal type="string" pos:line="52" pos:column="75">" bytes of body data at offset "<pos:position pos:line="52" pos:column="107"/></literal> <operator pos:line="52" pos:column="108">&lt;&lt;<pos:position pos:line="52" pos:column="116"/></operator> <name><name pos:line="52" pos:column="111">receivedData<pos:position pos:line="52" pos:column="123"/></name><operator pos:line="52" pos:column="123">.<pos:position pos:line="52" pos:column="124"/></operator><name pos:line="52" pos:column="124">offset<pos:position pos:line="52" pos:column="130"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="132"/></expr_stmt>
        <comment type="block" pos:line="53" pos:column="9">/* secure the data for later use */</comment>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><call><name><name pos:line="55" pos:column="14">context<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">incoming<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">.<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">getRaw<pos:position pos:line="55" pos:column="38"/></name></name><argument_list pos:line="55" pos:column="38">()<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41"> <block pos:line="55" pos:column="42">{
            <comment type="block" pos:line="56" pos:column="13">/* create a new buffer segment */</comment>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">debugs<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="number" pos:line="57" pos:column="20">86<pos:position pos:line="57" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="24">5<pos:position pos:line="57" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="27">"esiProcessStream: Setting up incoming buffer"<pos:position pos:line="57" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">context<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">buffered<pos:position pos:line="58" pos:column="30"/></name></name> <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <operator pos:line="58" pos:column="33">new<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">ESISegment<pos:position pos:line="58" pos:column="47"/></name></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">context<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">incoming<pos:position pos:line="59" pos:column="30"/></name></name> <operator pos:line="59" pos:column="31">=<pos:position pos:line="59" pos:column="32"/></operator> <name><name pos:line="59" pos:column="33">context<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">buffered<pos:position pos:line="59" pos:column="50"/></name></name></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">receivedData<pos:position pos:line="62" pos:column="25"/></name><operator pos:line="62" pos:column="25">.<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">data<pos:position pos:line="62" pos:column="30"/></name></name> <operator pos:line="62" pos:column="31">!=<pos:position pos:line="62" pos:column="33"/></operator> <operator pos:line="62" pos:column="34">&amp;<pos:position pos:line="62" pos:column="39"/></operator><name><name pos:line="62" pos:column="35">context<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">incoming<pos:position pos:line="62" pos:column="52"/></name><operator pos:line="62" pos:column="52">-&gt;<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="54">buf<pos:position pos:line="62" pos:column="57"/></name><index pos:line="62" pos:column="57">[<expr><name><name pos:line="62" pos:column="58">context<pos:position pos:line="62" pos:column="65"/></name><operator pos:line="62" pos:column="65">-&gt;<pos:position pos:line="62" pos:column="70"/></operator><name pos:line="62" pos:column="67">incoming<pos:position pos:line="62" pos:column="75"/></name><operator pos:line="62" pos:column="75">-&gt;<pos:position pos:line="62" pos:column="80"/></operator><name pos:line="62" pos:column="77">len<pos:position pos:line="62" pos:column="80"/></name></name></expr>]<pos:position pos:line="62" pos:column="81"/></index></name></expr>)<pos:position pos:line="62" pos:column="82"/></condition><then pos:line="62" pos:column="82"> <block pos:line="62" pos:column="83">{
            <comment type="block" pos:line="63" pos:column="13">/* We have to copy the data out because we didn't supply thisNode buffer */</comment>
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">size_t<pos:position pos:line="64" pos:column="19"/></name></type> <name pos:line="64" pos:column="20">space<pos:position pos:line="64" pos:column="25"/></name> <init pos:line="64" pos:column="26">= <expr><name pos:line="64" pos:column="28">HTTP_REQBUF_SZ<pos:position pos:line="64" pos:column="42"/></name> <operator pos:line="64" pos:column="43">-<pos:position pos:line="64" pos:column="44"/></operator> <name><name pos:line="64" pos:column="45">context<pos:position pos:line="64" pos:column="52"/></name><operator pos:line="64" pos:column="52">-&gt;<pos:position pos:line="64" pos:column="57"/></operator><name pos:line="64" pos:column="54">incoming<pos:position pos:line="64" pos:column="62"/></name><operator pos:line="64" pos:column="62">-&gt;<pos:position pos:line="64" pos:column="67"/></operator><name pos:line="64" pos:column="64">len<pos:position pos:line="64" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="64" pos:column="68"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">size_t<pos:position pos:line="65" pos:column="19"/></name></type> <name pos:line="65" pos:column="20">len<pos:position pos:line="65" pos:column="23"/></name> <init pos:line="65" pos:column="24">= <expr><call><name pos:line="65" pos:column="26">min<pos:position pos:line="65" pos:column="29"/></name> <argument_list pos:line="65" pos:column="30">(<argument><expr><name pos:line="65" pos:column="31">space<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="38">receivedData<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">.<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="51">length<pos:position pos:line="65" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="59"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">debugs<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><literal type="number" pos:line="66" pos:column="20">86<pos:position pos:line="66" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="24">5<pos:position pos:line="66" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="27">"Copying data from "<pos:position pos:line="66" pos:column="47"/></literal> <operator pos:line="66" pos:column="48">&lt;&lt;<pos:position pos:line="66" pos:column="56"/></operator> <name><name pos:line="66" pos:column="51">receivedData<pos:position pos:line="66" pos:column="63"/></name><operator pos:line="66" pos:column="63">.<pos:position pos:line="66" pos:column="64"/></operator><name pos:line="66" pos:column="64">data<pos:position pos:line="66" pos:column="68"/></name></name> <operator pos:line="66" pos:column="69">&lt;&lt;<pos:position pos:line="66" pos:column="77"/></operator> <literal type="string" pos:line="66" pos:column="72">" to "<pos:position pos:line="66" pos:column="78"/></literal> <operator pos:line="66" pos:column="79">&lt;&lt;<pos:position pos:line="66" pos:column="87"/></operator>
                   <operator pos:line="67" pos:column="20">&amp;<pos:position pos:line="67" pos:column="25"/></operator><name><name pos:line="67" pos:column="21">context<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">incoming<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">buf<pos:position pos:line="67" pos:column="43"/></name><index pos:line="67" pos:column="43">[<expr><name><name pos:line="67" pos:column="44">context<pos:position pos:line="67" pos:column="51"/></name><operator pos:line="67" pos:column="51">-&gt;<pos:position pos:line="67" pos:column="56"/></operator><name pos:line="67" pos:column="53">incoming<pos:position pos:line="67" pos:column="61"/></name><operator pos:line="67" pos:column="61">-&gt;<pos:position pos:line="67" pos:column="66"/></operator><name pos:line="67" pos:column="63">len<pos:position pos:line="67" pos:column="66"/></name></name></expr>]<pos:position pos:line="67" pos:column="67"/></index></name> <operator pos:line="67" pos:column="68">&lt;&lt;<pos:position pos:line="67" pos:column="76"/></operator>
                   <literal type="string" pos:line="68" pos:column="20">" because our buffer was not used"<pos:position pos:line="68" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="56"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="70" pos:column="13">xmemcpy<pos:position pos:line="70" pos:column="20"/></name> <argument_list pos:line="70" pos:column="21">(<argument><expr><operator pos:line="70" pos:column="22">&amp;<pos:position pos:line="70" pos:column="27"/></operator><name><name pos:line="70" pos:column="23">context<pos:position pos:line="70" pos:column="30"/></name><operator pos:line="70" pos:column="30">-&gt;<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="32">incoming<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">buf<pos:position pos:line="70" pos:column="45"/></name><index pos:line="70" pos:column="45">[<expr><name><name pos:line="70" pos:column="46">context<pos:position pos:line="70" pos:column="53"/></name><operator pos:line="70" pos:column="53">-&gt;<pos:position pos:line="70" pos:column="58"/></operator><name pos:line="70" pos:column="55">incoming<pos:position pos:line="70" pos:column="63"/></name><operator pos:line="70" pos:column="63">-&gt;<pos:position pos:line="70" pos:column="68"/></operator><name pos:line="70" pos:column="65">len<pos:position pos:line="70" pos:column="68"/></name></name></expr>]<pos:position pos:line="70" pos:column="69"/></index></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="71">receivedData<pos:position pos:line="70" pos:column="83"/></name><operator pos:line="70" pos:column="83">.<pos:position pos:line="70" pos:column="84"/></operator><name pos:line="70" pos:column="84">data<pos:position pos:line="70" pos:column="88"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="90">len<pos:position pos:line="70" pos:column="93"/></name></expr></argument>)<pos:position pos:line="70" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">context<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">-&gt;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="22">incoming<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">-&gt;<pos:position pos:line="71" pos:column="35"/></operator><name pos:line="71" pos:column="32">len<pos:position pos:line="71" pos:column="35"/></name></name> <operator pos:line="71" pos:column="36">+=<pos:position pos:line="71" pos:column="38"/></operator> <name pos:line="71" pos:column="39">len<pos:position pos:line="71" pos:column="42"/></name></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>

            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name><name pos:line="73" pos:column="17">context<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">-&gt;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="26">incoming<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">len<pos:position pos:line="73" pos:column="39"/></name></name> <operator pos:line="73" pos:column="40">==<pos:position pos:line="73" pos:column="42"/></operator> <name pos:line="73" pos:column="43">HTTP_REQBUF_SZ<pos:position pos:line="73" pos:column="57"/></name></expr>)<pos:position pos:line="73" pos:column="58"/></condition><then pos:line="73" pos:column="58"> <block pos:line="73" pos:column="59">{
                <comment type="block" pos:line="74" pos:column="17">/* append another buffer */</comment>
                <expr_stmt><expr><name><name pos:line="75" pos:column="17">context<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">incoming<pos:position pos:line="75" pos:column="34"/></name><operator pos:line="75" pos:column="34">-&gt;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="36">next<pos:position pos:line="75" pos:column="40"/></name></name> <operator pos:line="75" pos:column="41">=<pos:position pos:line="75" pos:column="42"/></operator> <operator pos:line="75" pos:column="43">new<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="47">ESISegment<pos:position pos:line="75" pos:column="57"/></name></expr>;<pos:position pos:line="75" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="76" pos:column="17">context<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">incoming<pos:position pos:line="76" pos:column="34"/></name></name> <operator pos:line="76" pos:column="35">=<pos:position pos:line="76" pos:column="36"/></operator> <name><name pos:line="76" pos:column="37">context<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">incoming<pos:position pos:line="76" pos:column="54"/></name><operator pos:line="76" pos:column="54">-&gt;<pos:position pos:line="76" pos:column="59"/></operator><name pos:line="76" pos:column="56">next<pos:position pos:line="76" pos:column="60"/></name></name></expr>;<pos:position pos:line="76" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="77" pos:column="14"/></block></then></if>

            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><name pos:line="79" pos:column="17">len<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">!=<pos:position pos:line="79" pos:column="23"/></operator> <name><name pos:line="79" pos:column="24">receivedData<pos:position pos:line="79" pos:column="36"/></name><operator pos:line="79" pos:column="36">.<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="37">length<pos:position pos:line="79" pos:column="43"/></name></name></expr>)<pos:position pos:line="79" pos:column="44"/></condition><then pos:line="79" pos:column="44"> <block pos:line="79" pos:column="45">{
                <comment type="block" pos:line="80" pos:column="17">/* capture the remnants */</comment>
                <expr_stmt><expr><call><name pos:line="81" pos:column="17">xmemcpy<pos:position pos:line="81" pos:column="24"/></name> <argument_list pos:line="81" pos:column="25">(<argument><expr><name><name pos:line="81" pos:column="26">context<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">-&gt;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="35">incoming<pos:position pos:line="81" pos:column="43"/></name><operator pos:line="81" pos:column="43">-&gt;<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="45">buf<pos:position pos:line="81" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="50">&amp;<pos:position pos:line="81" pos:column="55"/></operator><name><name pos:line="81" pos:column="51">receivedData<pos:position pos:line="81" pos:column="63"/></name><operator pos:line="81" pos:column="63">.<pos:position pos:line="81" pos:column="64"/></operator><name pos:line="81" pos:column="64">data<pos:position pos:line="81" pos:column="68"/></name><index pos:line="81" pos:column="68">[<expr><name pos:line="81" pos:column="69">len<pos:position pos:line="81" pos:column="72"/></name></expr>]<pos:position pos:line="81" pos:column="73"/></index></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="75">receivedData<pos:position pos:line="81" pos:column="87"/></name><operator pos:line="81" pos:column="87">.<pos:position pos:line="81" pos:column="88"/></operator><name pos:line="81" pos:column="88">length<pos:position pos:line="81" pos:column="94"/></name></name> <operator pos:line="81" pos:column="95">-<pos:position pos:line="81" pos:column="96"/></operator> <name pos:line="81" pos:column="97">len<pos:position pos:line="81" pos:column="100"/></name></expr></argument>)<pos:position pos:line="81" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="102"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="82" pos:column="17">context<pos:position pos:line="82" pos:column="24"/></name><operator pos:line="82" pos:column="24">-&gt;<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="26">incoming<pos:position pos:line="82" pos:column="34"/></name><operator pos:line="82" pos:column="34">-&gt;<pos:position pos:line="82" pos:column="39"/></operator><name pos:line="82" pos:column="36">len<pos:position pos:line="82" pos:column="39"/></name></name> <operator pos:line="82" pos:column="40">=<pos:position pos:line="82" pos:column="41"/></operator> <name><name pos:line="82" pos:column="42">receivedData<pos:position pos:line="82" pos:column="54"/></name><operator pos:line="82" pos:column="54">.<pos:position pos:line="82" pos:column="55"/></operator><name pos:line="82" pos:column="55">length<pos:position pos:line="82" pos:column="61"/></name></name> <operator pos:line="82" pos:column="62">-<pos:position pos:line="82" pos:column="63"/></operator> <name pos:line="82" pos:column="64">len<pos:position pos:line="82" pos:column="67"/></name></expr>;<pos:position pos:line="82" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="83" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="85" pos:column="13">/* and note where we are up to */</comment>
            <expr_stmt><expr><name><name pos:line="86" pos:column="13">context<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">-&gt;<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="22">readpos<pos:position pos:line="86" pos:column="29"/></name></name> <operator pos:line="86" pos:column="30">+=<pos:position pos:line="86" pos:column="32"/></operator> <name><name pos:line="86" pos:column="33">receivedData<pos:position pos:line="86" pos:column="45"/></name><operator pos:line="86" pos:column="45">.<pos:position pos:line="86" pos:column="46"/></operator><name pos:line="86" pos:column="46">length<pos:position pos:line="86" pos:column="52"/></name></name></expr>;<pos:position pos:line="86" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then> <else pos:line="87" pos:column="11">else <block pos:line="87" pos:column="16">{
            <comment type="block" pos:line="88" pos:column="13">/* update our position counters, and if needed assign a new buffer */</comment>
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">context<pos:position pos:line="89" pos:column="20"/></name><operator pos:line="89" pos:column="20">-&gt;<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="22">incoming<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">len<pos:position pos:line="89" pos:column="35"/></name></name> <operator pos:line="89" pos:column="36">+=<pos:position pos:line="89" pos:column="38"/></operator> <name><name pos:line="89" pos:column="39">receivedData<pos:position pos:line="89" pos:column="51"/></name><operator pos:line="89" pos:column="51">.<pos:position pos:line="89" pos:column="52"/></operator><name pos:line="89" pos:column="52">length<pos:position pos:line="89" pos:column="58"/></name></name></expr>;<pos:position pos:line="89" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">assert<pos:position pos:line="90" pos:column="19"/></name> <argument_list pos:line="90" pos:column="20">(<argument><expr><name><name pos:line="90" pos:column="21">context<pos:position pos:line="90" pos:column="28"/></name><operator pos:line="90" pos:column="28">-&gt;<pos:position pos:line="90" pos:column="33"/></operator><name pos:line="90" pos:column="30">incoming<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">-&gt;<pos:position pos:line="90" pos:column="43"/></operator><name pos:line="90" pos:column="40">len<pos:position pos:line="90" pos:column="43"/></name></name> <operator pos:line="90" pos:column="44">&lt;=<pos:position pos:line="90" pos:column="49"/></operator> <name pos:line="90" pos:column="47">HTTP_REQBUF_SZ<pos:position pos:line="90" pos:column="61"/></name></expr></argument>)<pos:position pos:line="90" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="63"/></expr_stmt>

            <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><name><name pos:line="92" pos:column="17">context<pos:position pos:line="92" pos:column="24"/></name><operator pos:line="92" pos:column="24">-&gt;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="26">incoming<pos:position pos:line="92" pos:column="34"/></name><operator pos:line="92" pos:column="34">-&gt;<pos:position pos:line="92" pos:column="39"/></operator><name pos:line="92" pos:column="36">len<pos:position pos:line="92" pos:column="39"/></name></name> <operator pos:line="92" pos:column="40">&gt;<pos:position pos:line="92" pos:column="44"/></operator> <name pos:line="92" pos:column="42">HTTP_REQBUF_SZ<pos:position pos:line="92" pos:column="56"/></name> <operator pos:line="92" pos:column="57">*<pos:position pos:line="92" pos:column="58"/></operator> <literal type="number" pos:line="92" pos:column="59">3<pos:position pos:line="92" pos:column="60"/></literal> <operator pos:line="92" pos:column="61">/<pos:position pos:line="92" pos:column="62"/></operator> <literal type="number" pos:line="92" pos:column="63">4<pos:position pos:line="92" pos:column="64"/></literal></expr>)<pos:position pos:line="92" pos:column="65"/></condition><then pos:line="92" pos:column="65"> <block pos:line="92" pos:column="66">{
                <comment type="block" pos:line="93" pos:column="17">/* allocate a new buffer - to stop us asking for ridiculously small amounts */</comment>
                <expr_stmt><expr><name><name pos:line="94" pos:column="17">context<pos:position pos:line="94" pos:column="24"/></name><operator pos:line="94" pos:column="24">-&gt;<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="26">incoming<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">-&gt;<pos:position pos:line="94" pos:column="39"/></operator><name pos:line="94" pos:column="36">next<pos:position pos:line="94" pos:column="40"/></name></name> <operator pos:line="94" pos:column="41">=<pos:position pos:line="94" pos:column="42"/></operator> <operator pos:line="94" pos:column="43">new<pos:position pos:line="94" pos:column="46"/></operator> <name pos:line="94" pos:column="47">ESISegment<pos:position pos:line="94" pos:column="57"/></name></expr>;<pos:position pos:line="94" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="95" pos:column="17">context<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">-&gt;<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="26">incoming<pos:position pos:line="95" pos:column="34"/></name></name> <operator pos:line="95" pos:column="35">=<pos:position pos:line="95" pos:column="36"/></operator> <name><name pos:line="95" pos:column="37">context<pos:position pos:line="95" pos:column="44"/></name><operator pos:line="95" pos:column="44">-&gt;<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="46">incoming<pos:position pos:line="95" pos:column="54"/></name><operator pos:line="95" pos:column="54">-&gt;<pos:position pos:line="95" pos:column="59"/></operator><name pos:line="95" pos:column="56">next<pos:position pos:line="95" pos:column="60"/></name></name></expr>;<pos:position pos:line="95" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="98" pos:column="13">context<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">-&gt;<pos:position pos:line="98" pos:column="25"/></operator><name pos:line="98" pos:column="22">readpos<pos:position pos:line="98" pos:column="29"/></name></name> <operator pos:line="98" pos:column="30">+=<pos:position pos:line="98" pos:column="32"/></operator> <name><name pos:line="98" pos:column="33">receivedData<pos:position pos:line="98" pos:column="45"/></name><operator pos:line="98" pos:column="45">.<pos:position pos:line="98" pos:column="46"/></operator><name pos:line="98" pos:column="46">length<pos:position pos:line="98" pos:column="52"/></name></name></expr>;<pos:position pos:line="98" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="99" pos:column="10"/></block></else></if>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="102" pos:column="5">/* EOF / Read error /  aborted entry */</comment>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><name pos:line="103" pos:column="9">rep<pos:position pos:line="103" pos:column="12"/></name> <operator pos:line="103" pos:column="13">==<pos:position pos:line="103" pos:column="15"/></operator> <name pos:line="103" pos:column="16">NULL<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">&amp;&amp;<pos:position pos:line="103" pos:column="31"/></operator> <name><name pos:line="103" pos:column="24">receivedData<pos:position pos:line="103" pos:column="36"/></name><operator pos:line="103" pos:column="36">.<pos:position pos:line="103" pos:column="37"/></operator><name pos:line="103" pos:column="37">data<pos:position pos:line="103" pos:column="41"/></name></name> <operator pos:line="103" pos:column="42">==<pos:position pos:line="103" pos:column="44"/></operator> <name pos:line="103" pos:column="45">NULL<pos:position pos:line="103" pos:column="49"/></name> <operator pos:line="103" pos:column="50">&amp;&amp;<pos:position pos:line="103" pos:column="60"/></operator> <name><name pos:line="103" pos:column="53">receivedData<pos:position pos:line="103" pos:column="65"/></name><operator pos:line="103" pos:column="65">.<pos:position pos:line="103" pos:column="66"/></operator><name pos:line="103" pos:column="66">length<pos:position pos:line="103" pos:column="72"/></name></name> <operator pos:line="103" pos:column="73">==<pos:position pos:line="103" pos:column="75"/></operator> <literal type="number" pos:line="103" pos:column="76">0<pos:position pos:line="103" pos:column="77"/></literal> <operator pos:line="103" pos:column="78">&amp;&amp;<pos:position pos:line="103" pos:column="88"/></operator> <operator pos:line="103" pos:column="81">!<pos:position pos:line="103" pos:column="82"/></operator><name><name pos:line="103" pos:column="82">context<pos:position pos:line="103" pos:column="89"/></name><operator pos:line="103" pos:column="89">-&gt;<pos:position pos:line="103" pos:column="94"/></operator><name pos:line="103" pos:column="91">flags<pos:position pos:line="103" pos:column="96"/></name><operator pos:line="103" pos:column="96">.<pos:position pos:line="103" pos:column="97"/></operator><name pos:line="103" pos:column="97">finishedtemplate<pos:position pos:line="103" pos:column="113"/></name></name></expr>)<pos:position pos:line="103" pos:column="114"/></condition><then pos:line="103" pos:column="114"> <block pos:line="103" pos:column="115">{
        <comment type="block" pos:line="104" pos:column="9">/* TODO: get stream status to test the entry for aborts */</comment>
        <comment type="block" pos:line="105" pos:column="9">/* else flush the esi processor */</comment>
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">debugs<pos:position pos:line="106" pos:column="15"/></name><argument_list pos:line="106" pos:column="15">(<argument><expr><literal type="number" pos:line="106" pos:column="16">86<pos:position pos:line="106" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="20">5<pos:position pos:line="106" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="23">"esiProcess: "<pos:position pos:line="106" pos:column="37"/></literal> <operator pos:line="106" pos:column="38">&lt;&lt;<pos:position pos:line="106" pos:column="46"/></operator> <call><name><name pos:line="106" pos:column="41">context<pos:position pos:line="106" pos:column="48"/></name><operator pos:line="106" pos:column="48">.<pos:position pos:line="106" pos:column="49"/></operator><name pos:line="106" pos:column="49">getRaw<pos:position pos:line="106" pos:column="55"/></name></name><argument_list pos:line="106" pos:column="55">()<pos:position pos:line="106" pos:column="57"/></argument_list></call> <operator pos:line="106" pos:column="58">&lt;&lt;<pos:position pos:line="106" pos:column="66"/></operator> <literal type="string" pos:line="106" pos:column="61">" Finished reading upstream data"<pos:position pos:line="106" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="96"/></expr_stmt>
        <comment type="block" pos:line="107" pos:column="9">/* This is correct */</comment>
        <expr_stmt><expr><name><name pos:line="108" pos:column="9">context<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">-&gt;<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="18">flags<pos:position pos:line="108" pos:column="23"/></name><operator pos:line="108" pos:column="23">.<pos:position pos:line="108" pos:column="24"/></operator><name pos:line="108" pos:column="24">finishedtemplate<pos:position pos:line="108" pos:column="40"/></name></name> <operator pos:line="108" pos:column="41">=<pos:position pos:line="108" pos:column="42"/></operator> <literal type="number" pos:line="108" pos:column="43">1<pos:position pos:line="108" pos:column="44"/></literal></expr>;<pos:position pos:line="108" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <switch pos:line="111" pos:column="5">switch <condition pos:line="111" pos:column="12">(<expr><call><name><name pos:line="111" pos:column="13">context<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">-&gt;<pos:position pos:line="111" pos:column="25"/></operator><name pos:line="111" pos:column="22">kick<pos:position pos:line="111" pos:column="26"/></name></name><argument_list pos:line="111" pos:column="26">()<pos:position pos:line="111" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="29"/></condition> <block pos:line="111" pos:column="30">{

    <case pos:line="113" pos:column="5">case <expr><name><name pos:line="113" pos:column="10">ESIContext<pos:position pos:line="113" pos:column="20"/></name><operator pos:line="113" pos:column="20">::<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="22">ESI_KICK_FAILED<pos:position pos:line="113" pos:column="37"/></name></name></expr>:<pos:position pos:line="113" pos:column="38"/></case>
        <comment type="block" pos:line="114" pos:column="9">/* thisNode can not happen - processing can't fail until we have data,
         * and when we come here we have sent data to the client
         */</comment>
        <return pos:line="117" pos:column="9">return;<pos:position pos:line="117" pos:column="16"/></return>

    <case pos:line="119" pos:column="5">case <expr><name><name pos:line="119" pos:column="10">ESIContext<pos:position pos:line="119" pos:column="20"/></name><operator pos:line="119" pos:column="20">::<pos:position pos:line="119" pos:column="22"/></operator><name pos:line="119" pos:column="22">ESI_KICK_SENT<pos:position pos:line="119" pos:column="35"/></name></name></expr>:<pos:position pos:line="119" pos:column="36"/></case>

    <case pos:line="121" pos:column="5">case <expr><name><name pos:line="121" pos:column="10">ESIContext<pos:position pos:line="121" pos:column="20"/></name><operator pos:line="121" pos:column="20">::<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="22">ESI_KICK_INPROGRESS<pos:position pos:line="121" pos:column="41"/></name></name></expr>:<pos:position pos:line="121" pos:column="42"/></case>
        <return pos:line="122" pos:column="9">return;<pos:position pos:line="122" pos:column="16"/></return>

    <case pos:line="124" pos:column="5">case <expr><name><name pos:line="124" pos:column="10">ESIContext<pos:position pos:line="124" pos:column="20"/></name><operator pos:line="124" pos:column="20">::<pos:position pos:line="124" pos:column="22"/></operator><name pos:line="124" pos:column="22">ESI_KICK_PENDING<pos:position pos:line="124" pos:column="38"/></name></name></expr>:<pos:position pos:line="124" pos:column="39"/></case>
        <break pos:line="125" pos:column="9">break;<pos:position pos:line="125" pos:column="15"/></break>
    }<pos:position pos:line="126" pos:column="6"/></block></switch>

    <comment type="block" pos:line="128" pos:column="5">/* ok.. no data sent, try to pull more data in from upstream.
     * FIXME: Don't try thisNode if we have finished reading the template
     */</comment>
    <if pos:line="131" pos:column="5">if <condition pos:line="131" pos:column="8">(<expr><operator pos:line="131" pos:column="9">!<pos:position pos:line="131" pos:column="10"/></operator><name><name pos:line="131" pos:column="10">context<pos:position pos:line="131" pos:column="17"/></name><operator pos:line="131" pos:column="17">-&gt;<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="19">flags<pos:position pos:line="131" pos:column="24"/></name><operator pos:line="131" pos:column="24">.<pos:position pos:line="131" pos:column="25"/></operator><name pos:line="131" pos:column="25">finishedtemplate<pos:position pos:line="131" pos:column="41"/></name></name> <operator pos:line="131" pos:column="42">&amp;&amp;<pos:position pos:line="131" pos:column="52"/></operator> <operator pos:line="131" pos:column="45">!<pos:position pos:line="131" pos:column="46"/></operator><call><name><name pos:line="131" pos:column="46">context<pos:position pos:line="131" pos:column="53"/></name><operator pos:line="131" pos:column="53">-&gt;<pos:position pos:line="131" pos:column="58"/></operator><name pos:line="131" pos:column="55">reading<pos:position pos:line="131" pos:column="62"/></name></name><argument_list pos:line="131" pos:column="62">()<pos:position pos:line="131" pos:column="64"/></argument_list></call>
            <operator pos:line="132" pos:column="13">&amp;&amp;<pos:position pos:line="132" pos:column="23"/></operator> <operator pos:line="132" pos:column="16">!<pos:position pos:line="132" pos:column="17"/></operator><name><name pos:line="132" pos:column="17">context<pos:position pos:line="132" pos:column="24"/></name><operator pos:line="132" pos:column="24">-&gt;<pos:position pos:line="132" pos:column="29"/></operator><name pos:line="132" pos:column="26">cachedASTInUse<pos:position pos:line="132" pos:column="40"/></name></name></expr>)<pos:position pos:line="132" pos:column="41"/></condition><then pos:line="132" pos:column="41"> <block pos:line="132" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="133" pos:column="9">StoreIOBuffer<pos:position pos:line="133" pos:column="22"/></name></type> <name pos:line="133" pos:column="23">tempBuffer<pos:position pos:line="133" pos:column="33"/></name></decl>;<pos:position pos:line="133" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="134" pos:column="9">assert<pos:position pos:line="134" pos:column="15"/></name> <argument_list pos:line="134" pos:column="16">(<argument><expr><call><name><name pos:line="134" pos:column="17">context<pos:position pos:line="134" pos:column="24"/></name><operator pos:line="134" pos:column="24">-&gt;<pos:position pos:line="134" pos:column="29"/></operator><name pos:line="134" pos:column="26">incoming<pos:position pos:line="134" pos:column="34"/></name><operator pos:line="134" pos:column="34">.<pos:position pos:line="134" pos:column="35"/></operator><name pos:line="134" pos:column="35">getRaw<pos:position pos:line="134" pos:column="41"/></name></name><argument_list pos:line="134" pos:column="41">()<pos:position pos:line="134" pos:column="43"/></argument_list></call> <operator pos:line="134" pos:column="44">&amp;&amp;<pos:position pos:line="134" pos:column="54"/></operator> <name><name pos:line="134" pos:column="47">context<pos:position pos:line="134" pos:column="54"/></name><operator pos:line="134" pos:column="54">-&gt;<pos:position pos:line="134" pos:column="59"/></operator><name pos:line="134" pos:column="56">incoming<pos:position pos:line="134" pos:column="64"/></name><operator pos:line="134" pos:column="64">-&gt;<pos:position pos:line="134" pos:column="69"/></operator><name pos:line="134" pos:column="66">len<pos:position pos:line="134" pos:column="69"/></name></name> <operator pos:line="134" pos:column="70">&lt;<pos:position pos:line="134" pos:column="74"/></operator> <name pos:line="134" pos:column="72">HTTP_REQBUF_SZ<pos:position pos:line="134" pos:column="86"/></name></expr></argument>)<pos:position pos:line="134" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="135" pos:column="9">tempBuffer<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">.<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="20">offset<pos:position pos:line="135" pos:column="26"/></name></name> <operator pos:line="135" pos:column="27">=<pos:position pos:line="135" pos:column="28"/></operator> <name><name pos:line="135" pos:column="29">context<pos:position pos:line="135" pos:column="36"/></name><operator pos:line="135" pos:column="36">-&gt;<pos:position pos:line="135" pos:column="41"/></operator><name pos:line="135" pos:column="38">readpos<pos:position pos:line="135" pos:column="45"/></name></name></expr>;<pos:position pos:line="135" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="136" pos:column="9">tempBuffer<pos:position pos:line="136" pos:column="19"/></name><operator pos:line="136" pos:column="19">.<pos:position pos:line="136" pos:column="20"/></operator><name pos:line="136" pos:column="20">length<pos:position pos:line="136" pos:column="26"/></name></name> <operator pos:line="136" pos:column="27">=<pos:position pos:line="136" pos:column="28"/></operator>  <name pos:line="136" pos:column="30">HTTP_REQBUF_SZ<pos:position pos:line="136" pos:column="44"/></name> <operator pos:line="136" pos:column="45">-<pos:position pos:line="136" pos:column="46"/></operator> <name><name pos:line="136" pos:column="47">context<pos:position pos:line="136" pos:column="54"/></name><operator pos:line="136" pos:column="54">-&gt;<pos:position pos:line="136" pos:column="59"/></operator><name pos:line="136" pos:column="56">incoming<pos:position pos:line="136" pos:column="64"/></name><operator pos:line="136" pos:column="64">-&gt;<pos:position pos:line="136" pos:column="69"/></operator><name pos:line="136" pos:column="66">len<pos:position pos:line="136" pos:column="69"/></name></name></expr>;<pos:position pos:line="136" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="137" pos:column="9">tempBuffer<pos:position pos:line="137" pos:column="19"/></name><operator pos:line="137" pos:column="19">.<pos:position pos:line="137" pos:column="20"/></operator><name pos:line="137" pos:column="20">data<pos:position pos:line="137" pos:column="24"/></name></name> <operator pos:line="137" pos:column="25">=<pos:position pos:line="137" pos:column="26"/></operator> <operator pos:line="137" pos:column="27">&amp;<pos:position pos:line="137" pos:column="32"/></operator><name><name pos:line="137" pos:column="28">context<pos:position pos:line="137" pos:column="35"/></name><operator pos:line="137" pos:column="35">-&gt;<pos:position pos:line="137" pos:column="40"/></operator><name pos:line="137" pos:column="37">incoming<pos:position pos:line="137" pos:column="45"/></name><operator pos:line="137" pos:column="45">-&gt;<pos:position pos:line="137" pos:column="50"/></operator><name pos:line="137" pos:column="47">buf<pos:position pos:line="137" pos:column="50"/></name><index pos:line="137" pos:column="50">[<expr><name><name pos:line="137" pos:column="51">context<pos:position pos:line="137" pos:column="58"/></name><operator pos:line="137" pos:column="58">-&gt;<pos:position pos:line="137" pos:column="63"/></operator><name pos:line="137" pos:column="60">incoming<pos:position pos:line="137" pos:column="68"/></name><operator pos:line="137" pos:column="68">-&gt;<pos:position pos:line="137" pos:column="73"/></operator><name pos:line="137" pos:column="70">len<pos:position pos:line="137" pos:column="73"/></name></name></expr>]<pos:position pos:line="137" pos:column="74"/></index></name></expr>;<pos:position pos:line="137" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="138" pos:column="9">context<pos:position pos:line="138" pos:column="16"/></name><operator pos:line="138" pos:column="16">-&gt;<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="18">startRead<pos:position pos:line="138" pos:column="27"/></name></name><argument_list pos:line="138" pos:column="27">()<pos:position pos:line="138" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">clientStreamRead<pos:position pos:line="139" pos:column="25"/></name> <argument_list pos:line="139" pos:column="26">(<argument><expr><name pos:line="139" pos:column="27">thisNode<pos:position pos:line="139" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="37">http<pos:position pos:line="139" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="43">tempBuffer<pos:position pos:line="139" pos:column="53"/></name></expr></argument>)<pos:position pos:line="139" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="55"/></expr_stmt>
        <return pos:line="140" pos:column="9">return;<pos:position pos:line="140" pos:column="16"/></return>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="143" pos:column="5">debugs<pos:position pos:line="143" pos:column="11"/></name><argument_list pos:line="143" pos:column="11">(<argument><expr><literal type="number" pos:line="143" pos:column="12">86<pos:position pos:line="143" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="16">3<pos:position pos:line="143" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="19">"esiProcessStream: no data to send, no data to read, awaiting a callback"<pos:position pos:line="143" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="94"/></expr_stmt>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

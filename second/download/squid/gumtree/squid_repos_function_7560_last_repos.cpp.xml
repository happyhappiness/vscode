<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7560_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">StoreEntry<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">lru_purgeNext<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">RemovalPurgeWalker<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">walker<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">LruPurgeData<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">lru_walker<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><operator pos:line="4" pos:column="32">(<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">LruPurgeData<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></operator><operator pos:line="4" pos:column="47">)<pos:position pos:line="4" pos:column="48"/></operator><name><name pos:line="4" pos:column="48">walker<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">-&gt;<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="56">_data<pos:position pos:line="4" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">RemovalPolicy<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">policy<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">walker<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">_policy<pos:position pos:line="5" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">LruPolicyData<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">lru<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><operator pos:line="6" pos:column="26">(<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">LruPolicyData<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></operator><operator pos:line="6" pos:column="42">)<pos:position pos:line="6" pos:column="43"/></operator><name><name pos:line="6" pos:column="43">policy<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">_data<pos:position pos:line="6" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">LruNode<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">lru_node<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">StoreEntry<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">entry<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

<label><name pos:line="10" pos:column="1">try_again<pos:position pos:line="10" pos:column="10"/></name>:<pos:position pos:line="10" pos:column="11"/></label>
    <expr_stmt><expr><name pos:line="11" pos:column="5">lru_node<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">lru_walker<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">current<pos:position pos:line="11" pos:column="35"/></name></name></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">lru_node<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">||<pos:position pos:line="13" pos:column="21"/></operator> <name><name pos:line="13" pos:column="22">walker<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">scanned<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">&gt;=<pos:position pos:line="13" pos:column="43"/></operator> <name><name pos:line="13" pos:column="41">walker<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">-&gt;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="49">max_scan<pos:position pos:line="13" pos:column="57"/></name></name></expr>)<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">walker<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">scanned<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">+=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">1<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">lru_walker<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">current<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <operator pos:line="18" pos:column="27">(<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">LruNode<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">*<pos:position pos:line="18" pos:column="37"/></operator><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator> <name><name pos:line="18" pos:column="39">lru_node<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">node<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">.<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="54">next<pos:position pos:line="18" pos:column="58"/></name></name></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">lru_walker<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">current<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">==<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">lru_walker<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">start<pos:position pos:line="20" pos:column="49"/></name></name></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50"> <block pos:line="20" pos:column="51">{
        <comment type="block" pos:line="21" pos:column="9">/* Last node found */</comment>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">lru_walker<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">current<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">NULL<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">entry<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">StoreEntry<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></operator><operator pos:line="25" pos:column="26">)<pos:position pos:line="25" pos:column="27"/></operator> <name><name pos:line="25" pos:column="28">lru_node<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">node<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">data<pos:position pos:line="25" pos:column="47"/></name></name></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">dlinkDelete<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><operator pos:line="26" pos:column="17">&amp;<pos:position pos:line="26" pos:column="22"/></operator><name><name pos:line="26" pos:column="18">lru_node<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">node<pos:position pos:line="26" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">&amp;<pos:position pos:line="26" pos:column="39"/></operator><name><name pos:line="26" pos:column="35">lru<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">list<pos:position pos:line="26" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name><name pos:line="28" pos:column="9">entry<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">locked<pos:position pos:line="28" pos:column="22"/></name></name><argument_list pos:line="28" pos:column="22">()<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25"> <block pos:line="28" pos:column="26">{
        <comment type="block" pos:line="29" pos:column="9">/* Shit, it is locked. we can't return this one */</comment>
        <expr_stmt><expr><operator pos:line="30" pos:column="9">++<pos:position pos:line="30" pos:column="11"/></operator> <name><name pos:line="30" pos:column="12">walker<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">locked<pos:position pos:line="30" pos:column="26"/></name></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">dlinkAddTail<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">entry<pos:position pos:line="31" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="29">&amp;<pos:position pos:line="31" pos:column="34"/></operator><name><name pos:line="31" pos:column="30">lru_node<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">node<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="46">&amp;<pos:position pos:line="31" pos:column="51"/></operator><name><name pos:line="31" pos:column="47">lru<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">-&gt;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="52">list<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>
        <goto pos:line="32" pos:column="9">goto <name pos:line="32" pos:column="14">try_again<pos:position pos:line="32" pos:column="23"/></name>;<pos:position pos:line="32" pos:column="24"/></goto>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">lru_node_pool<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">freeOne<pos:position pos:line="35" pos:column="27"/></name></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">lru_node<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">lru<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">-&gt;<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="10">count<pos:position pos:line="36" pos:column="15"/></name></name> <operator pos:line="36" pos:column="16">-=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">1<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">lru<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">setPolicyNode<pos:position pos:line="37" pos:column="23"/></name></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">entry<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="31">NULL<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">entry<pos:position pos:line="38" pos:column="17"/></name></expr>;<pos:position pos:line="38" pos:column="18"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

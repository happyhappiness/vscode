<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3653_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Icap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">ServiceRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">finalize<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">Adaptation<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">Service<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">::<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">finalize<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">()<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// use /etc/services or default port if needed</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">bool<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">have_port<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><call><name pos:line="7" pos:column="28">cfg<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">port<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">&gt;=<pos:position pos:line="7" pos:column="44"/></operator> <literal type="number" pos:line="7" pos:column="42">0<pos:position pos:line="7" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">have_port<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <block pos:line="8" pos:column="21">{
        <decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">servent<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">serv<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">cfg<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">()<pos:position pos:line="10" pos:column="18"/></argument_list></call><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><call><name><name pos:line="10" pos:column="19">protocol<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">caseCmp<pos:position pos:line="10" pos:column="35"/></name></name><argument_list pos:line="10" pos:column="35">(<argument><expr><literal type="string" pos:line="10" pos:column="36">"icaps"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call> <operator pos:line="10" pos:column="45">==<pos:position pos:line="10" pos:column="47"/></operator> <literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="13">serv<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">getservbyname<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><literal type="string" pos:line="11" pos:column="34">"icaps"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="43">"tcp"<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt></block></then>
        <else pos:line="12" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="13">serv<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <call><name pos:line="13" pos:column="20">getservbyname<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><literal type="string" pos:line="13" pos:column="34">"icap"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"tcp"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt></block></else></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">serv<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18"> <block pos:line="15" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">writeableCfg<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">()<pos:position pos:line="16" pos:column="27"/></argument_list></call><operator pos:line="16" pos:column="27">.<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">port<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <call><name pos:line="16" pos:column="35">htons<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name><name pos:line="16" pos:column="41">serv<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">s_port<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else <block pos:line="17" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">writeableCfg<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">()<pos:position pos:line="18" pos:column="27"/></argument_list></call><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">port<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">=<pos:position pos:line="18" pos:column="34"/></operator> <ternary><condition><expr><call><name pos:line="18" pos:column="35">cfg<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">()<pos:position pos:line="18" pos:column="40"/></argument_list></call><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><call><name><name pos:line="18" pos:column="41">protocol<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">caseCmp<pos:position pos:line="18" pos:column="57"/></name></name><argument_list pos:line="18" pos:column="57">(<argument><expr><literal type="string" pos:line="18" pos:column="58">"icaps"<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call> <operator pos:line="18" pos:column="67">==<pos:position pos:line="18" pos:column="69"/></operator> <literal type="number" pos:line="18" pos:column="70">0<pos:position pos:line="18" pos:column="71"/></literal></expr> ?<pos:position pos:line="18" pos:column="73"/></condition><then pos:line="18" pos:column="73"> <expr><name pos:line="18" pos:column="74">DEFAULT_ICAPS_PORT<pos:position pos:line="18" pos:column="92"/></name></expr> <pos:position pos:line="18" pos:column="93"/></then><else pos:line="18" pos:column="93">: <expr><name pos:line="18" pos:column="95">DEFAULT_ICAP_PORT<pos:position pos:line="18" pos:column="112"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="113"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></else></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">cfg<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">()<pos:position pos:line="22" pos:column="14"/></argument_list></call><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><call><name><name pos:line="22" pos:column="15">protocol<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">caseCmp<pos:position pos:line="22" pos:column="31"/></name></name><argument_list pos:line="22" pos:column="31">(<argument><expr><literal type="string" pos:line="22" pos:column="32">"icaps"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call> <operator pos:line="22" pos:column="41">==<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">0<pos:position pos:line="22" pos:column="45"/></literal></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">writeableCfg<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">()<pos:position pos:line="23" pos:column="23"/></argument_list></call><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name><name pos:line="23" pos:column="24">secure<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">encryptTransport<pos:position pos:line="23" pos:column="47"/></name></name> <operator pos:line="23" pos:column="48">=<pos:position pos:line="23" pos:column="49"/></operator> <literal type="boolean" pos:line="23" pos:column="50">true<pos:position pos:line="23" pos:column="54"/></literal></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">cfg<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">()<pos:position pos:line="25" pos:column="14"/></argument_list></call><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name><name pos:line="25" pos:column="15">secure<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">encryptTransport<pos:position pos:line="25" pos:column="38"/></name></name></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <block pos:line="25" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">3<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">DBG_IMPORTANT<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"Initializing service "<pos:position pos:line="26" pos:column="57"/></literal> <operator pos:line="26" pos:column="58">&lt;&lt;<pos:position pos:line="26" pos:column="66"/></operator> <call><name pos:line="26" pos:column="61">cfg<pos:position pos:line="26" pos:column="64"/></name><argument_list pos:line="26" pos:column="64">()<pos:position pos:line="26" pos:column="66"/></argument_list></call><operator pos:line="26" pos:column="66">.<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="67">resource<pos:position pos:line="26" pos:column="75"/></name> <operator pos:line="26" pos:column="76">&lt;&lt;<pos:position pos:line="26" pos:column="84"/></operator> <literal type="string" pos:line="26" pos:column="79">" SSL context"<pos:position pos:line="26" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="95"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">sslContext<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">writeableCfg<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">()<pos:position pos:line="27" pos:column="36"/></argument_list></call><operator pos:line="27" pos:column="36">.<pos:position pos:line="27" pos:column="37"/></operator><call><name><name pos:line="27" pos:column="37">secure<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">.<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">createClientContext<pos:position pos:line="27" pos:column="63"/></name></name><argument_list pos:line="27" pos:column="63">(<argument><expr><literal type="boolean" pos:line="27" pos:column="64">true<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><call><name pos:line="30" pos:column="10">cfg<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">()<pos:position pos:line="30" pos:column="15"/></argument_list></call><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><call><name><name pos:line="30" pos:column="16">connectionEncryption<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">.<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">configured<pos:position pos:line="30" pos:column="47"/></name></name><argument_list pos:line="30" pos:column="47">()<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">writeableCfg<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">()<pos:position pos:line="31" pos:column="23"/></argument_list></call><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><call><name><name pos:line="31" pos:column="24">connectionEncryption<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">.<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">defaultTo<pos:position pos:line="31" pos:column="54"/></name></name><argument_list pos:line="31" pos:column="54">(<argument><expr><call><name pos:line="31" pos:column="55">cfg<pos:position pos:line="31" pos:column="58"/></name><argument_list pos:line="31" pos:column="58">()<pos:position pos:line="31" pos:column="60"/></argument_list></call><operator pos:line="31" pos:column="60">.<pos:position pos:line="31" pos:column="61"/></operator><name><name pos:line="31" pos:column="61">secure<pos:position pos:line="31" pos:column="67"/></name><operator pos:line="31" pos:column="67">.<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="68">encryptTransport<pos:position pos:line="31" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="86"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">theSessionFailures<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">configure<pos:position pos:line="33" pos:column="33"/></name></name><argument_list pos:line="33" pos:column="33">(<argument><expr><ternary><condition><expr><name><name pos:line="33" pos:column="34">TheConfig<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">.<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="44">oldest_service_failure<pos:position pos:line="33" pos:column="66"/></name></name> <operator pos:line="33" pos:column="67">&gt;<pos:position pos:line="33" pos:column="71"/></operator> <literal type="number" pos:line="33" pos:column="69">0<pos:position pos:line="33" pos:column="70"/></literal></expr> ?<pos:position pos:line="33" pos:column="72"/></condition><then pos:line="33" pos:column="72">
                                 <expr><name><name pos:line="34" pos:column="34">TheConfig<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">.<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="44">oldest_service_failure<pos:position pos:line="34" pos:column="66"/></name></name></expr> <pos:position pos:line="34" pos:column="67"/></then><else pos:line="34" pos:column="67">: <expr><operator pos:line="34" pos:column="69">-<pos:position pos:line="34" pos:column="70"/></operator><literal type="number" pos:line="34" pos:column="70">1<pos:position pos:line="34" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

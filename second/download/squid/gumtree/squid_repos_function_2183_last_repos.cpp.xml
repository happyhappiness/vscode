<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2183_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">ConfigParser<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">QuoteString<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">String<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">var<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">String<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">quotedStr<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">s<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name><name pos:line="5" pos:column="21">var<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">.<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">termedBuf<pos:position pos:line="5" pos:column="34"/></name></name><argument_list pos:line="5" pos:column="34">()<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type>  <name pos:line="6" pos:column="11">needQuote<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="boolean" pos:line="6" pos:column="23">false<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><specifier pos:line="8" pos:column="10">const<pos:position pos:line="8" pos:column="15"/></specifier> <name pos:line="8" pos:column="16">char<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">l<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name pos:line="8" pos:column="26">s<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></init> <condition><expr><operator pos:line="8" pos:column="29">!<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">needQuote<pos:position pos:line="8" pos:column="39"/></name> <operator pos:line="8" pos:column="40">&amp;&amp;<pos:position pos:line="8" pos:column="50"/></operator>  <operator pos:line="8" pos:column="44">*<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">l<pos:position pos:line="8" pos:column="46"/></name> <operator pos:line="8" pos:column="47">!=<pos:position pos:line="8" pos:column="49"/></operator> <literal type="char" pos:line="8" pos:column="50">'\0'<pos:position pos:line="8" pos:column="54"/></literal></expr>;<pos:position pos:line="8" pos:column="55"/></condition> <incr><expr><operator pos:line="8" pos:column="56">++<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="58">l<pos:position pos:line="8" pos:column="59"/></name></expr></incr>  )<pos:position pos:line="8" pos:column="62"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">needQuote<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">isalnum<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">l<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt></block></for>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">needQuote<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">s<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">quotedStr<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">clean<pos:position pos:line="14" pos:column="20"/></name></name><argument_list pos:line="14" pos:column="20">()<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">quotedStr<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">append<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="char" pos:line="15" pos:column="22">'"'<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init pos:line="16" pos:column="10">;<pos:position pos:line="16" pos:column="11"/></init> <condition><expr><operator pos:line="16" pos:column="12">*<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">s<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">!=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="char" pos:line="16" pos:column="18">'\0'<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></condition> <incr><expr><operator pos:line="16" pos:column="24">++<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">s<pos:position pos:line="16" pos:column="27"/></name></expr></incr>)<pos:position pos:line="16" pos:column="28"/></control> <block pos:line="16" pos:column="29">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">s<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <literal type="char" pos:line="17" pos:column="19">'"'<pos:position pos:line="17" pos:column="22"/></literal> <operator pos:line="17" pos:column="23">||<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">s<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">==<pos:position pos:line="17" pos:column="31"/></operator> <literal type="char" pos:line="17" pos:column="32">'\\'<pos:position pos:line="17" pos:column="36"/></literal></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="18" pos:column="13">quotedStr<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">append<pos:position pos:line="18" pos:column="29"/></name></name><argument_list pos:line="18" pos:column="29">(<argument><expr><literal type="char" pos:line="18" pos:column="30">'\\'<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">quotedStr<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">append<pos:position pos:line="19" pos:column="25"/></name></name><argument_list pos:line="19" pos:column="25">(<argument><expr><operator pos:line="19" pos:column="26">*<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">s<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">quotedStr<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">append<pos:position pos:line="21" pos:column="21"/></name></name><argument_list pos:line="21" pos:column="21">(<argument><expr><literal type="char" pos:line="21" pos:column="22">'"'<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><call><name><name pos:line="22" pos:column="12">quotedStr<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">termedBuf<pos:position pos:line="22" pos:column="31"/></name></name><argument_list pos:line="22" pos:column="31">()<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

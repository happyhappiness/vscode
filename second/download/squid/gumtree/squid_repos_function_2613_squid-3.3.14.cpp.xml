<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2613_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">leave_suid<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">21<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"leave_suid: PID "<pos:position pos:line="4" pos:column="37"/></literal> <operator pos:line="4" pos:column="38">&lt;&lt;<pos:position pos:line="4" pos:column="46"/></operator> <call><name pos:line="4" pos:column="41">getpid<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">()<pos:position pos:line="4" pos:column="49"/></argument_list></call> <operator pos:line="4" pos:column="50">&lt;&lt;<pos:position pos:line="4" pos:column="58"/></operator> <literal type="string" pos:line="4" pos:column="53">" called"<pos:position pos:line="4" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="64"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">Config<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">effectiveGroup<pos:position pos:line="6" pos:column="30"/></name></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31"> <block pos:line="6" pos:column="32">{

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">HAVE_SETGROUPS<pos:position pos:line="8" pos:column="19"/></name></expr></cpp:if>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">setgroups<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="number" pos:line="10" pos:column="19">1<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="22">&amp;<pos:position pos:line="10" pos:column="27"/></operator><name><name pos:line="10" pos:column="23">Config2<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">effectiveGroupID<pos:position pos:line="10" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>

<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">setgid<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name><name pos:line="14" pos:column="20">Config2<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">effectiveGroupID<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call> <operator pos:line="14" pos:column="46">&lt;<pos:position pos:line="14" pos:column="50"/></operator> <literal type="number" pos:line="14" pos:column="48">0<pos:position pos:line="14" pos:column="49"/></literal></expr>)<pos:position pos:line="14" pos:column="50"/></condition><then pos:line="14" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">50<pos:position pos:line="15" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="24">DBG_CRITICAL<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"ALERT: setgid: "<pos:position pos:line="15" pos:column="55"/></literal> <operator pos:line="15" pos:column="56">&lt;&lt;<pos:position pos:line="15" pos:column="64"/></operator> <call><name pos:line="15" pos:column="59">xstrerror<pos:position pos:line="15" pos:column="68"/></name><argument_list pos:line="15" pos:column="68">()<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt></block></then></if>

    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">geteuid<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">()<pos:position pos:line="19" pos:column="18"/></argument_list></call> <operator pos:line="19" pos:column="19">!=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24">
        <block type="pseudo"><return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* Started as a root, check suid option */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">Config<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">effectiveUser<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">==<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">NULL<pos:position pos:line="23" pos:column="37"/></name></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38">
        <block type="pseudo"><return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">21<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">3<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"leave_suid: PID "<pos:position pos:line="26" pos:column="37"/></literal> <operator pos:line="26" pos:column="38">&lt;&lt;<pos:position pos:line="26" pos:column="46"/></operator> <call><name pos:line="26" pos:column="41">getpid<pos:position pos:line="26" pos:column="47"/></name><argument_list pos:line="26" pos:column="47">()<pos:position pos:line="26" pos:column="49"/></argument_list></call> <operator pos:line="26" pos:column="50">&lt;&lt;<pos:position pos:line="26" pos:column="58"/></operator> <literal type="string" pos:line="26" pos:column="53">" giving up root, becoming '"<pos:position pos:line="26" pos:column="82"/></literal> <operator pos:line="26" pos:column="83">&lt;&lt;<pos:position pos:line="26" pos:column="91"/></operator> <name><name pos:line="26" pos:column="86">Config<pos:position pos:line="26" pos:column="92"/></name><operator pos:line="26" pos:column="92">.<pos:position pos:line="26" pos:column="93"/></operator><name pos:line="26" pos:column="93">effectiveUser<pos:position pos:line="26" pos:column="106"/></name></name> <operator pos:line="26" pos:column="107">&lt;&lt;<pos:position pos:line="26" pos:column="115"/></operator> <literal type="string" pos:line="26" pos:column="110">"'"<pos:position pos:line="26" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="115"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name><name pos:line="28" pos:column="10">Config<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">effectiveGroup<pos:position pos:line="28" pos:column="31"/></name></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32"> <block pos:line="28" pos:column="33">{

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">setgid<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name><name pos:line="30" pos:column="20">Config2<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">effectiveGroupID<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call> <operator pos:line="30" pos:column="46">&lt;<pos:position pos:line="30" pos:column="50"/></operator> <literal type="number" pos:line="30" pos:column="48">0<pos:position pos:line="30" pos:column="49"/></literal></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">debugs<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="number" pos:line="31" pos:column="20">50<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">DBG_CRITICAL<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="38">"ALERT: setgid: "<pos:position pos:line="31" pos:column="55"/></literal> <operator pos:line="31" pos:column="56">&lt;&lt;<pos:position pos:line="31" pos:column="64"/></operator> <call><name pos:line="31" pos:column="59">xstrerror<pos:position pos:line="31" pos:column="68"/></name><argument_list pos:line="31" pos:column="68">()<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt></block></then></if>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">initgroups<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name><name pos:line="33" pos:column="24">Config<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">effectiveUser<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="46">Config2<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">.<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="54">effectiveGroupID<pos:position pos:line="33" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call> <operator pos:line="33" pos:column="72">&lt;<pos:position pos:line="33" pos:column="76"/></operator> <literal type="number" pos:line="33" pos:column="74">0<pos:position pos:line="33" pos:column="75"/></literal></expr>)<pos:position pos:line="33" pos:column="76"/></condition><then pos:line="33" pos:column="76"> <block pos:line="33" pos:column="77">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">50<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">DBG_CRITICAL<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="38">"ALERT: initgroups: unable to set groups for User "<pos:position pos:line="34" pos:column="89"/></literal> <operator pos:line="34" pos:column="90">&lt;&lt;<pos:position pos:line="34" pos:column="98"/></operator>
                   <name><name pos:line="35" pos:column="20">Config<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">effectiveUser<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">&lt;&lt;<pos:position pos:line="35" pos:column="49"/></operator> <literal type="string" pos:line="35" pos:column="44">" and Group "<pos:position pos:line="35" pos:column="57"/></literal> <operator pos:line="35" pos:column="58">&lt;&lt;<pos:position pos:line="35" pos:column="66"/></operator>
                   <operator pos:line="36" pos:column="20">(<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">unsigned<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">)<pos:position pos:line="36" pos:column="30"/></operator> <name><name pos:line="36" pos:column="31">Config2<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">.<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">effectiveGroupID<pos:position pos:line="36" pos:column="55"/></name></name> <operator pos:line="36" pos:column="56">&lt;&lt;<pos:position pos:line="36" pos:column="64"/></operator> <literal type="string" pos:line="36" pos:column="59">""<pos:position pos:line="36" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">HAVE_SETRESUID<pos:position pos:line="40" pos:column="19"/></name></expr></cpp:if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">setresuid<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name><name pos:line="42" pos:column="19">Config2<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">effectiveUserID<pos:position pos:line="42" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="44">Config2<pos:position pos:line="42" pos:column="51"/></name><operator pos:line="42" pos:column="51">.<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">effectiveUserID<pos:position pos:line="42" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="69">0<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call> <operator pos:line="42" pos:column="72">&lt;<pos:position pos:line="42" pos:column="76"/></operator> <literal type="number" pos:line="42" pos:column="74">0<pos:position pos:line="42" pos:column="75"/></literal></expr>)<pos:position pos:line="42" pos:column="76"/></condition><then pos:line="42" pos:column="76">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">50<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">DBG_CRITICAL<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"ALERT: setresuid: "<pos:position pos:line="43" pos:column="54"/></literal> <operator pos:line="43" pos:column="55">&lt;&lt;<pos:position pos:line="43" pos:column="63"/></operator> <call><name pos:line="43" pos:column="58">xstrerror<pos:position pos:line="43" pos:column="67"/></name><argument_list pos:line="43" pos:column="67">()<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt></block></then></if>

<cpp:elif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">elif<pos:position pos:line="45" pos:column="6"/></cpp:directive> <expr><name pos:line="45" pos:column="7">HAVE_SETEUID<pos:position pos:line="45" pos:column="19"/></name></expr></cpp:elif>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">seteuid<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name><name pos:line="47" pos:column="17">Config2<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">.<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="25">effectiveUserID<pos:position pos:line="47" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call> <operator pos:line="47" pos:column="42">&lt;<pos:position pos:line="47" pos:column="46"/></operator> <literal type="number" pos:line="47" pos:column="44">0<pos:position pos:line="47" pos:column="45"/></literal></expr>)<pos:position pos:line="47" pos:column="46"/></condition><then pos:line="47" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="9">debugs<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="number" pos:line="48" pos:column="16">50<pos:position pos:line="48" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="20">DBG_CRITICAL<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="34">"ALERT: seteuid: "<pos:position pos:line="48" pos:column="52"/></literal> <operator pos:line="48" pos:column="53">&lt;&lt;<pos:position pos:line="48" pos:column="61"/></operator> <call><name pos:line="48" pos:column="56">xstrerror<pos:position pos:line="48" pos:column="65"/></name><argument_list pos:line="48" pos:column="65">()<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt></block></then></if>

<cpp:else pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">else<pos:position pos:line="50" pos:column="6"/></cpp:directive></cpp:else>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">setuid<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name><name pos:line="52" pos:column="16">Config2<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">.<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">effectiveUserID<pos:position pos:line="52" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call> <operator pos:line="52" pos:column="41">&lt;<pos:position pos:line="52" pos:column="45"/></operator> <literal type="number" pos:line="52" pos:column="43">0<pos:position pos:line="52" pos:column="44"/></literal></expr>)<pos:position pos:line="52" pos:column="45"/></condition><then pos:line="52" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="9">debugs<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><literal type="number" pos:line="53" pos:column="16">50<pos:position pos:line="53" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="20">DBG_CRITICAL<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="34">"ALERT: setuid: "<pos:position pos:line="53" pos:column="51"/></literal> <operator pos:line="53" pos:column="52">&lt;&lt;<pos:position pos:line="53" pos:column="60"/></operator> <call><name pos:line="53" pos:column="55">xstrerror<pos:position pos:line="53" pos:column="64"/></name><argument_list pos:line="53" pos:column="64">()<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="68"/></expr_stmt></block></then></if>

<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="57" pos:column="5">restoreCapabilities<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><literal type="number" pos:line="57" pos:column="25">1<pos:position pos:line="57" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>

<cpp:if pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">if<pos:position pos:line="59" pos:column="4"/></cpp:directive> <expr><name pos:line="59" pos:column="5">HAVE_PRCTL<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">&amp;&amp;<pos:position pos:line="59" pos:column="26"/></operator> <call><name pos:line="59" pos:column="19">defined<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name pos:line="59" pos:column="27">PR_SET_DUMPABLE<pos:position pos:line="59" pos:column="42"/></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="60" pos:column="5">/* Set Linux DUMPABLE flag */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name><name pos:line="61" pos:column="9">Config<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">coredump_dir<pos:position pos:line="61" pos:column="28"/></name></name> <operator pos:line="61" pos:column="29">&amp;&amp;<pos:position pos:line="61" pos:column="39"/></operator> <call><name pos:line="61" pos:column="32">prctl<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">PR_SET_DUMPABLE<pos:position pos:line="61" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="55">1<pos:position pos:line="61" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call> <operator pos:line="61" pos:column="58">!=<pos:position pos:line="61" pos:column="60"/></operator> <literal type="number" pos:line="61" pos:column="61">0<pos:position pos:line="61" pos:column="62"/></literal></expr>)<pos:position pos:line="61" pos:column="63"/></condition><then pos:line="61" pos:column="63">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="9">debugs<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="number" pos:line="62" pos:column="16">50<pos:position pos:line="62" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="20">2<pos:position pos:line="62" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="23">"ALERT: prctl: "<pos:position pos:line="62" pos:column="39"/></literal> <operator pos:line="62" pos:column="40">&lt;&lt;<pos:position pos:line="62" pos:column="48"/></operator> <call><name pos:line="62" pos:column="43">xstrerror<pos:position pos:line="62" pos:column="52"/></name><argument_list pos:line="62" pos:column="52">()<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="56"/></expr_stmt></block></then></if>

<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

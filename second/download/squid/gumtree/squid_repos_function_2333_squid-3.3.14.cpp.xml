<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2333_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeClientCopy2<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">StoreEntry<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">e<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">store_client<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">sc<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* reentrancy not allowed  - note this could lead to
     * dropped events
     */</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">sc<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">flags<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">copy_event_pending<pos:position pos:line="8" pos:column="37"/></name></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38"> <block pos:line="8" pos:column="39">{
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">EBIT_TEST<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">e<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">flags<pos:position pos:line="12" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">ENTRY_FWD_HDR_WAIT<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">90<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">5<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"storeClientCopy2: returning because ENTRY_FWD_HDR_WAIT set"<pos:position pos:line="13" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="85"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">sc<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">flags<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">.<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">store_copying<pos:position pos:line="17" pos:column="32"/></name></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33"> <block pos:line="17" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">sc<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">flags<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">copy_event_pending<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">1<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">90<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">3<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"storeClientCopy2: Queueing storeClientCopyEvent()"<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">eventAdd<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><literal type="string" pos:line="20" pos:column="18">"storeClientCopyEvent"<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">storeClientCopyEvent<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">sc<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="68">0.0<pos:position pos:line="20" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="73">0<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">90<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">3<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"storeClientCopy2: "<pos:position pos:line="24" pos:column="39"/></literal> <operator pos:line="24" pos:column="40">&lt;&lt;<pos:position pos:line="24" pos:column="48"/></operator> <call><name><name pos:line="24" pos:column="43">e<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">getMD5Text<pos:position pos:line="24" pos:column="56"/></name></name><argument_list pos:line="24" pos:column="56">()<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><call><name><name pos:line="25" pos:column="12">sc<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">_callback<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">pending<pos:position pos:line="25" pos:column="33"/></name></name><argument_list pos:line="25" pos:column="33">()<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="26" pos:column="5">/*
     * We used to check for ENTRY_ABORTED here.  But there were some
     * problems.  For example, we might have a slow client (or two) and
     * the server-side is reading far ahead and swapping to disk.  Even
     * if the server-side aborts, we want to give the client(s)
     * everything we got before the abort condition occurred.
     */</comment>
    <comment type="block" pos:line="33" pos:column="5">/* Warning: doCopy may indirectly free itself in callbacks,
     * hence the lock to keep it active for the duration of
     * this function
     * XXX: Locking does not prevent calling sc destructor (it only prevents
     * freeing sc memory) so sc may become invalid from C++ p.o.v.
     *
     */</comment>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">cbdataInternalLock<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">sc<pos:position pos:line="40" pos:column="26"/></name></expr></argument>)<pos:position pos:line="40" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">assert<pos:position pos:line="41" pos:column="11"/></name> <argument_list pos:line="41" pos:column="12">(<argument><expr><name><name pos:line="41" pos:column="13">sc<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">flags<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">store_copying<pos:position pos:line="41" pos:column="36"/></name></name> <operator pos:line="41" pos:column="37">==<pos:position pos:line="41" pos:column="39"/></operator> <literal type="number" pos:line="41" pos:column="40">0<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="42" pos:column="5">sc<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">doCopy<pos:position pos:line="42" pos:column="15"/></name></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">e<pos:position pos:line="42" pos:column="17"/></name></expr></argument>)<pos:position pos:line="42" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">assert<pos:position pos:line="43" pos:column="11"/></name> <argument_list pos:line="43" pos:column="12">(<argument><expr><name><name pos:line="43" pos:column="13">sc<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">flags<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">store_copying<pos:position pos:line="43" pos:column="36"/></name></name> <operator pos:line="43" pos:column="37">==<pos:position pos:line="43" pos:column="39"/></operator> <literal type="number" pos:line="43" pos:column="40">0<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">cbdataInternalUnlock<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">sc<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

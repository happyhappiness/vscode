<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2353_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ipcacheHandleCnameRecurse<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">ipcache_addrs<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">addrs<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">DnsLookupDetails<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">&amp;<pos:position pos:line="2" pos:column="83"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="81">void<pos:position pos:line="2" pos:column="85"/></name> <modifier pos:line="2" pos:column="86">*<pos:position pos:line="2" pos:column="87"/></modifier></type><name pos:line="2" pos:column="87">cbdata<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">DNS_CNAME<pos:position pos:line="4" pos:column="14"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ipcache_entry<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">i<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">pname<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">IpAddress<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">tmpbuf<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">fc<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ttl<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">generic_cbdata<pos:position pos:line="10" pos:column="19"/></name><modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type> <name pos:line="10" pos:column="21">gcb<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><operator pos:line="10" pos:column="27">(<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">generic_cbdata<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">*<pos:position pos:line="10" pos:column="43"/></operator><operator pos:line="10" pos:column="43">)<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">cbdata<pos:position pos:line="10" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
    <comment type="line" pos:line="11" pos:column="5">// count of addrs at parent and child (REQ as .count is a char type!)</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">ccount<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="21">pcount<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><literal type="number" pos:line="12" pos:column="30">0<pos:position pos:line="12" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">14<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">5<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"ipcacheHandleCnameRecurse: Handling basic A/AAAA response."<pos:position pos:line="14" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="81"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* IFF no CNAME recursion being processed. do nothing. */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">cbdata<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">==<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24">
        <block type="pseudo"><return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">gcb<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">unwrap<pos:position pos:line="20" pos:column="16"/></name></name><argument_list pos:line="20" pos:column="16">(<argument><expr><operator pos:line="20" pos:column="17">&amp;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="18">i<pos:position pos:line="20" pos:column="19"/></name></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">!=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">NULL<pos:position pos:line="21" pos:column="21"/></name></expr></argument>)<pos:position pos:line="21" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>

    <comment type="line" pos:line="23" pos:column="5">// make sure we are actualy waiting for a CNAME callback to be run.</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name><name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">cname_wait<pos:position pos:line="24" pos:column="25"/></name></name> <operator pos:line="24" pos:column="26">&gt;<pos:position pos:line="24" pos:column="30"/></operator> <literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
    <comment type="line" pos:line="25" pos:column="5">// count this event. its being handled.</comment>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">i<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">cname_wait<pos:position pos:line="26" pos:column="18"/></name></name><operator pos:line="26" pos:column="18">--<pos:position pos:line="26" pos:column="20"/></operator></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">pname<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">char<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">*<pos:position pos:line="28" pos:column="19"/></operator><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator><name><name pos:line="28" pos:column="20">i<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">hash<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">key<pos:position pos:line="28" pos:column="31"/></name></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">assert<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">pname<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">!=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">NULL<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">debugs<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="number" pos:line="31" pos:column="12">14<pos:position pos:line="31" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="16">5<pos:position pos:line="31" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="19">"ipcacheHandleCnameRecurse: Handling CNAME recursion. CBDATA('"<pos:position pos:line="31" pos:column="82"/></literal> <operator pos:line="31" pos:column="83">&lt;&lt;<pos:position pos:line="31" pos:column="91"/></operator> <name><name pos:line="31" pos:column="86">gcb<pos:position pos:line="31" pos:column="89"/></name><operator pos:line="31" pos:column="89">-&gt;<pos:position pos:line="31" pos:column="94"/></operator><name pos:line="31" pos:column="91">data<pos:position pos:line="31" pos:column="95"/></name></name> <operator pos:line="31" pos:column="96">&lt;&lt;<pos:position pos:line="31" pos:column="104"/></operator> <literal type="string" pos:line="31" pos:column="99">"')='"<pos:position pos:line="31" pos:column="105"/></literal> <operator pos:line="31" pos:column="106">&lt;&lt;<pos:position pos:line="31" pos:column="114"/></operator> <name pos:line="31" pos:column="109">pname<pos:position pos:line="31" pos:column="114"/></name> <operator pos:line="31" pos:column="115">&lt;&lt;<pos:position pos:line="31" pos:column="123"/></operator> <literal type="string" pos:line="31" pos:column="118">"' -&gt; "<pos:position pos:line="31" pos:column="128"/></literal> <operator pos:line="31" pos:column="126">&lt;&lt;<pos:position pos:line="31" pos:column="134"/></operator> <name><name pos:line="31" pos:column="129">std<pos:position pos:line="31" pos:column="132"/></name><operator pos:line="31" pos:column="132">::<pos:position pos:line="31" pos:column="134"/></operator><name pos:line="31" pos:column="134">hex<pos:position pos:line="31" pos:column="137"/></name></name> <operator pos:line="31" pos:column="138">&lt;&lt;<pos:position pos:line="31" pos:column="146"/></operator> <name pos:line="31" pos:column="141">i<pos:position pos:line="31" pos:column="142"/></name></expr></argument>)<pos:position pos:line="31" pos:column="143"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="144"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">i<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">==<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">NULL<pos:position pos:line="33" pos:column="18"/></name></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
        <return pos:line="34" pos:column="9">return;<pos:position pos:line="34" pos:column="16"/></return> <comment type="line" pos:line="34" pos:column="17">// Parent has expired. Don't merge, just leave for future Ref:</comment>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* IFF addrs is NULL (Usually an Error or Timeout occured on lookup.) */</comment>
    <comment type="block" pos:line="38" pos:column="5">/* Ignore it and HOPE that we got some Additional records to use.     */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">addrs<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">==<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">NULL<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23">
        <block type="pseudo"><return pos:line="40" pos:column="9">return;<pos:position pos:line="40" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="42" pos:column="5">ccount<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><literal type="number" pos:line="42" pos:column="15">0<pos:position pos:line="42" pos:column="16"/></literal><operator pos:line="42" pos:column="16">+<pos:position pos:line="42" pos:column="17"/></operator> <name><name pos:line="42" pos:column="18">addrs<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">count<pos:position pos:line="42" pos:column="30"/></name></name><operator pos:line="42" pos:column="30">)<pos:position pos:line="42" pos:column="31"/></operator></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">pcount<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <operator pos:line="43" pos:column="14">(<pos:position pos:line="43" pos:column="15"/></operator><literal type="number" pos:line="43" pos:column="15">0<pos:position pos:line="43" pos:column="16"/></literal><operator pos:line="43" pos:column="16">+<pos:position pos:line="43" pos:column="17"/></operator> <name><name pos:line="43" pos:column="18">i<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="21">addrs<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">.<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="27">count<pos:position pos:line="43" pos:column="32"/></name></name><operator pos:line="43" pos:column="32">)<pos:position pos:line="43" pos:column="33"/></operator></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">ttl<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <name><name pos:line="44" pos:column="11">i<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">expires<pos:position pos:line="44" pos:column="21"/></name></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* IFF no CNAME results. do none of the processing BUT finish anyway. */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">addrs<pos:position pos:line="47" pos:column="14"/></name></expr>)<pos:position pos:line="47" pos:column="15"/></condition><then pos:line="47" pos:column="15"> <block pos:line="47" pos:column="16">{

        <expr_stmt><expr><call><name pos:line="49" pos:column="9">debugs<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="number" pos:line="49" pos:column="16">14<pos:position pos:line="49" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="20">5<pos:position pos:line="49" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"ipcacheHandleCnameRecurse: Merge IP Lists for "<pos:position pos:line="49" pos:column="71"/></literal> <operator pos:line="49" pos:column="72">&lt;&lt;<pos:position pos:line="49" pos:column="80"/></operator> <name pos:line="49" pos:column="75">pname<pos:position pos:line="49" pos:column="80"/></name> <operator pos:line="49" pos:column="81">&lt;&lt;<pos:position pos:line="49" pos:column="89"/></operator> <literal type="string" pos:line="49" pos:column="84">" ("<pos:position pos:line="49" pos:column="88"/></literal> <operator pos:line="49" pos:column="89">&lt;&lt;<pos:position pos:line="49" pos:column="97"/></operator> <name pos:line="49" pos:column="92">pcount<pos:position pos:line="49" pos:column="98"/></name> <operator pos:line="49" pos:column="99">&lt;&lt;<pos:position pos:line="49" pos:column="107"/></operator> <literal type="string" pos:line="49" pos:column="102">"+"<pos:position pos:line="49" pos:column="105"/></literal> <operator pos:line="49" pos:column="106">&lt;&lt;<pos:position pos:line="49" pos:column="114"/></operator> <name pos:line="49" pos:column="109">ccount<pos:position pos:line="49" pos:column="115"/></name> <operator pos:line="49" pos:column="116">&lt;&lt;<pos:position pos:line="49" pos:column="124"/></operator> <literal type="string" pos:line="49" pos:column="119">")"<pos:position pos:line="49" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="124"/></expr_stmt>

        <comment type="block" pos:line="51" pos:column="9">/* add new IP records to entry */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">tmpbuf<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <name><name pos:line="52" pos:column="18">i<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">addrs<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">.<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">in_addrs<pos:position pos:line="52" pos:column="35"/></name></name></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">i<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">addrs<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">.<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">in_addrs<pos:position pos:line="53" pos:column="26"/></name></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">NULL<pos:position pos:line="53" pos:column="33"/></name></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ipcacheMergeIPLists<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">tmpbuf<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">pcount<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="45">addrs<pos:position pos:line="54" pos:column="50"/></name><operator pos:line="54" pos:column="50">-&gt;<pos:position pos:line="54" pos:column="55"/></operator><name pos:line="54" pos:column="52">in_addrs<pos:position pos:line="54" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="62">ccount<pos:position pos:line="54" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="70">&amp;<pos:position pos:line="54" pos:column="75"/></operator><operator pos:line="54" pos:column="71">(<pos:position pos:line="54" pos:column="72"/></operator><name><name pos:line="54" pos:column="72">i<pos:position pos:line="54" pos:column="73"/></name><operator pos:line="54" pos:column="73">-&gt;<pos:position pos:line="54" pos:column="78"/></operator><name pos:line="54" pos:column="75">addrs<pos:position pos:line="54" pos:column="80"/></name><operator pos:line="54" pos:column="80">.<pos:position pos:line="54" pos:column="81"/></operator><name pos:line="54" pos:column="81">in_addrs<pos:position pos:line="54" pos:column="89"/></name></name><operator pos:line="54" pos:column="89">)<pos:position pos:line="54" pos:column="90"/></operator></expr></argument>, <argument><expr><name pos:line="54" pos:column="92">fc<pos:position pos:line="54" pos:column="94"/></name></expr></argument>)<pos:position pos:line="54" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">debugs<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="number" pos:line="55" pos:column="16">14<pos:position pos:line="55" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="55" pos:column="19">8<pos:position pos:line="55" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="22">HERE<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">&lt;&lt;<pos:position pos:line="55" pos:column="35"/></operator> <literal type="string" pos:line="55" pos:column="30">"in="<pos:position pos:line="55" pos:column="35"/></literal> <operator pos:line="55" pos:column="36">&lt;&lt;<pos:position pos:line="55" pos:column="44"/></operator> <name pos:line="55" pos:column="39">tmpbuf<pos:position pos:line="55" pos:column="45"/></name> <operator pos:line="55" pos:column="46">&lt;&lt;<pos:position pos:line="55" pos:column="54"/></operator> <literal type="string" pos:line="55" pos:column="49">", out="<pos:position pos:line="55" pos:column="57"/></literal> <operator pos:line="55" pos:column="58">&lt;&lt;<pos:position pos:line="55" pos:column="66"/></operator> <name><name pos:line="55" pos:column="61">i<pos:position pos:line="55" pos:column="62"/></name><operator pos:line="55" pos:column="62">-&gt;<pos:position pos:line="55" pos:column="67"/></operator><name pos:line="55" pos:column="64">addrs<pos:position pos:line="55" pos:column="69"/></name><operator pos:line="55" pos:column="69">.<pos:position pos:line="55" pos:column="70"/></operator><name pos:line="55" pos:column="70">in_addrs<pos:position pos:line="55" pos:column="78"/></name></name></expr></argument> )<pos:position pos:line="55" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">assert<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">( <argument><expr><operator pos:line="56" pos:column="17">(<pos:position pos:line="56" pos:column="18"/></operator><ternary><condition><expr><name pos:line="56" pos:column="18">pcount<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">&gt;<pos:position pos:line="56" pos:column="28"/></operator><literal type="number" pos:line="56" pos:column="25">0<pos:position pos:line="56" pos:column="26"/></literal></expr> ?<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28"> <expr><name pos:line="56" pos:column="29">tmpbuf<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">!=<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="37">NULL<pos:position pos:line="56" pos:column="41"/></name></expr> <pos:position pos:line="56" pos:column="42"/></then><else pos:line="56" pos:column="42">: <expr><name pos:line="56" pos:column="44">tmpbuf<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">==<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="52">NULL<pos:position pos:line="56" pos:column="56"/></name></expr></else></ternary><operator pos:line="56" pos:column="56">)<pos:position pos:line="56" pos:column="57"/></operator></expr></argument> )<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">safe_free<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><name pos:line="57" pos:column="19">tmpbuf<pos:position pos:line="57" pos:column="25"/></name></expr></argument>)<pos:position pos:line="57" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">( <expr><name pos:line="59" pos:column="14">pcount<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">&gt;<pos:position pos:line="59" pos:column="25"/></operator> <literal type="number" pos:line="59" pos:column="23">0<pos:position pos:line="59" pos:column="24"/></literal></expr>)<pos:position pos:line="59" pos:column="25"/></condition><then pos:line="59" pos:column="25"> <block pos:line="59" pos:column="26">{
            <comment type="block" pos:line="60" pos:column="13">/* IFF the parent initial lookup was given Additional records with A */</comment>
            <comment type="line" pos:line="61" pos:column="13">// clear the 'bad IP mask'</comment>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">safe_free<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name><name pos:line="62" pos:column="23">i<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">-&gt;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="26">addrs<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">.<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="32">bad_mask<pos:position pos:line="62" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="64" pos:column="9">// create a new bad IP mask to fit the new size needed.</comment>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">fc<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">&gt;<pos:position pos:line="65" pos:column="20"/></operator> <literal type="number" pos:line="65" pos:column="18">0<pos:position pos:line="65" pos:column="19"/></literal></expr>)<pos:position pos:line="65" pos:column="20"/></condition><then pos:line="65" pos:column="20"> <block pos:line="65" pos:column="21">{
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">i<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">addrs<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">.<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">bad_mask<pos:position pos:line="66" pos:column="30"/></name></name> <operator pos:line="66" pos:column="31">=<pos:position pos:line="66" pos:column="32"/></operator> <operator pos:line="66" pos:column="33">(<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="34">unsigned<pos:position pos:line="66" pos:column="42"/></name> <name pos:line="66" pos:column="43">char<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">*<pos:position pos:line="66" pos:column="48"/></operator><operator pos:line="66" pos:column="48">)<pos:position pos:line="66" pos:column="49"/></operator><call><name pos:line="66" pos:column="49">xcalloc<pos:position pos:line="66" pos:column="56"/></name><argument_list pos:line="66" pos:column="56">(<argument><expr><name pos:line="66" pos:column="57">fc<pos:position pos:line="66" pos:column="59"/></name></expr></argument>, <argument><expr pos:line="66" pos:column="61">sizeof<operator pos:line="66" pos:column="67">(<pos:position pos:line="66" pos:column="68"/></operator><name pos:line="66" pos:column="68">unsigned<pos:position pos:line="66" pos:column="76"/></name> <name pos:line="66" pos:column="77">char<pos:position pos:line="66" pos:column="81"/></name><operator pos:line="66" pos:column="81">)<pos:position pos:line="66" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="66" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">memset<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><name><name pos:line="67" pos:column="20">i<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">addrs<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">.<pos:position pos:line="67" pos:column="29"/></operator><name pos:line="67" pos:column="29">bad_mask<pos:position pos:line="67" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="39">0<pos:position pos:line="67" pos:column="40"/></literal></expr></argument>, <argument><expr pos:line="67" pos:column="42">sizeof<operator pos:line="67" pos:column="48">(<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="49">unsigned<pos:position pos:line="67" pos:column="57"/></name> <name pos:line="67" pos:column="58">char<pos:position pos:line="67" pos:column="62"/></name><operator pos:line="67" pos:column="62">)<pos:position pos:line="67" pos:column="63"/></operator><operator pos:line="67" pos:column="63">*<pos:position pos:line="67" pos:column="64"/></operator><name pos:line="67" pos:column="64">fc<pos:position pos:line="67" pos:column="66"/></name></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">fc<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">&lt;<pos:position pos:line="70" pos:column="20"/></operator> <literal type="number" pos:line="70" pos:column="18">256<pos:position pos:line="70" pos:column="21"/></literal></expr>)<pos:position pos:line="70" pos:column="22"/></condition><then pos:line="70" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="13">i<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">addrs<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">.<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="22">count<pos:position pos:line="71" pos:column="27"/></name></name> <operator pos:line="71" pos:column="28">=<pos:position pos:line="71" pos:column="29"/></operator> <operator pos:line="71" pos:column="30">(<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="31">unsigned<pos:position pos:line="71" pos:column="39"/></name> <name pos:line="71" pos:column="40">char<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">)<pos:position pos:line="71" pos:column="45"/></operator> <name pos:line="71" pos:column="46">fc<pos:position pos:line="71" pos:column="48"/></name></expr>;<pos:position pos:line="71" pos:column="49"/></expr_stmt></block></then>
        <else pos:line="72" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="13">i<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">-&gt;<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="16">addrs<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">.<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">count<pos:position pos:line="73" pos:column="27"/></name></name> <operator pos:line="73" pos:column="28">=<pos:position pos:line="73" pos:column="29"/></operator> <literal type="number" pos:line="73" pos:column="30">255<pos:position pos:line="73" pos:column="33"/></literal></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt></block></else></if>

        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">ttl<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">==<pos:position pos:line="75" pos:column="19"/></operator> <literal type="number" pos:line="75" pos:column="20">0<pos:position pos:line="75" pos:column="21"/></literal> <operator pos:line="75" pos:column="22">||<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">ttl<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">&gt;<pos:position pos:line="75" pos:column="33"/></operator> <name><name pos:line="75" pos:column="31">Config<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">.<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">positiveDnsTtl<pos:position pos:line="75" pos:column="52"/></name></name></expr>)<pos:position pos:line="75" pos:column="53"/></condition><then pos:line="75" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="13">ttl<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator> <name><name pos:line="76" pos:column="19">Config<pos:position pos:line="76" pos:column="25"/></name><operator pos:line="76" pos:column="25">.<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">positiveDnsTtl<pos:position pos:line="76" pos:column="40"/></name></name></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt></block></then></if>

        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">ttl<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">&lt;<pos:position pos:line="78" pos:column="21"/></operator> <name><name pos:line="78" pos:column="19">Config<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">.<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="26">negativeDnsTtl<pos:position pos:line="78" pos:column="40"/></name></name></expr>)<pos:position pos:line="78" pos:column="41"/></condition><then pos:line="78" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="13">ttl<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">=<pos:position pos:line="79" pos:column="18"/></operator> <name><name pos:line="79" pos:column="19">Config<pos:position pos:line="79" pos:column="25"/></name><operator pos:line="79" pos:column="25">.<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="26">negativeDnsTtl<pos:position pos:line="79" pos:column="40"/></name></name></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="81" pos:column="9">i<pos:position pos:line="81" pos:column="10"/></name><operator pos:line="81" pos:column="10">-&gt;<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="12">expires<pos:position pos:line="81" pos:column="19"/></name></name> <operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator> <name pos:line="81" pos:column="22">squid_curtime<pos:position pos:line="81" pos:column="35"/></name> <operator pos:line="81" pos:column="36">+<pos:position pos:line="81" pos:column="37"/></operator> <name pos:line="81" pos:column="38">ttl<pos:position pos:line="81" pos:column="41"/></name></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="83" pos:column="9">i<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">-&gt;<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="12">flags<pos:position pos:line="83" pos:column="17"/></name><operator pos:line="83" pos:column="17">.<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="18">negcached<pos:position pos:line="83" pos:column="27"/></name></name> <operator pos:line="83" pos:column="28">=<pos:position pos:line="83" pos:column="29"/></operator> <literal type="number" pos:line="83" pos:column="30">0<pos:position pos:line="83" pos:column="31"/></literal></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="85" pos:column="9">i<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">-&gt;<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="12">addrs<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">.<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="18">cur<pos:position pos:line="85" pos:column="21"/></name></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <literal type="number" pos:line="85" pos:column="24">0<pos:position pos:line="85" pos:column="25"/></literal></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="87" pos:column="9">i<pos:position pos:line="87" pos:column="10"/></name><operator pos:line="87" pos:column="10">-&gt;<pos:position pos:line="87" pos:column="15"/></operator><name pos:line="87" pos:column="12">addrs<pos:position pos:line="87" pos:column="17"/></name><operator pos:line="87" pos:column="17">.<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="18">badcount<pos:position pos:line="87" pos:column="26"/></name></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <literal type="number" pos:line="87" pos:column="29">0<pos:position pos:line="87" pos:column="30"/></literal></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">fc<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">==<pos:position pos:line="90" pos:column="14"/></operator> <literal type="number" pos:line="90" pos:column="15">0<pos:position pos:line="90" pos:column="16"/></literal></expr>)<pos:position pos:line="90" pos:column="17"/></condition><then pos:line="90" pos:column="17"> <block pos:line="90" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">i<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">-&gt;<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="12">error_message<pos:position pos:line="91" pos:column="25"/></name></name> <operator pos:line="91" pos:column="26">=<pos:position pos:line="91" pos:column="27"/></operator> <call><name pos:line="91" pos:column="28">xstrdup<pos:position pos:line="91" pos:column="35"/></name><argument_list pos:line="91" pos:column="35">(<argument><expr><literal type="string" pos:line="91" pos:column="36">"No DNS Records"<pos:position pos:line="91" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="94" pos:column="5">/* finish the lookup we were doing on parent when we got side-tracked for CNAME loop */</comment>
    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name><name pos:line="95" pos:column="9">i<pos:position pos:line="95" pos:column="10"/></name><operator pos:line="95" pos:column="10">-&gt;<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="12">cname_wait<pos:position pos:line="95" pos:column="22"/></name></name> <operator pos:line="95" pos:column="23">==<pos:position pos:line="95" pos:column="25"/></operator> <literal type="number" pos:line="95" pos:column="26">0<pos:position pos:line="95" pos:column="27"/></literal></expr>)<pos:position pos:line="95" pos:column="28"/></condition><then pos:line="95" pos:column="28"> <block pos:line="95" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">ipcacheAddEntry<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><name pos:line="96" pos:column="25">i<pos:position pos:line="96" pos:column="26"/></name></expr></argument>)<pos:position pos:line="96" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">ipcacheCallback<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">i<pos:position pos:line="97" pos:column="26"/></name></expr></argument>, <argument><expr><call><name><name pos:line="97" pos:column="28">i<pos:position pos:line="97" pos:column="29"/></name><operator pos:line="97" pos:column="29">-&gt;<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="31">age<pos:position pos:line="97" pos:column="34"/></name></name><argument_list pos:line="97" pos:column="34">()<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt> <comment type="line" pos:line="97" pos:column="39">// age since i creation, includes CNAMEs</comment>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>
    <comment type="line" pos:line="99" pos:column="5">// else still more CNAME to be found.</comment>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="100" pos:column="8">/* DNS_CNAME */</comment>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

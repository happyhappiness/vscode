<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5683_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">void<pos:position pos:line="2" pos:column="10"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="11"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">hash_table<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">hid<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">LOCAL_ARRAY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">buf<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">BUFSIZ<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">LOCAL_ARRAY<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">todelete<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="33">BUFSIZ<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">hash_link<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">walker<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">todelete<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>]<pos:position pos:line="10" pos:column="16"/></index></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="char" pos:line="10" pos:column="19">'\0'<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">printf<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"init\n"<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">printf<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="string" pos:line="13" pos:column="12">"creating hash table\n"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">hid<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">hash_create<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">(<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">HASHCMP<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">strcmp<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="48">229<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="53">hash4<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call><operator pos:line="14" pos:column="59">)<pos:position pos:line="14" pos:column="60"/></operator> <operator pos:line="14" pos:column="61">&lt;<pos:position pos:line="14" pos:column="65"/></operator> <literal type="number" pos:line="14" pos:column="63">0<pos:position pos:line="14" pos:column="64"/></literal></expr>)<pos:position pos:line="14" pos:column="65"/></condition><then pos:line="14" pos:column="65"> <block pos:line="14" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">printf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"hash_create error.\n"<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">exit<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">printf<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"done creating hash table: %d\n"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">hid<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>

    <while pos:line="20" pos:column="5">while <condition pos:line="20" pos:column="11">(<expr><call><name pos:line="20" pos:column="12">fgets<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">buf<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">BUFSIZ<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">stdin<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="38"/></condition> <block pos:line="20" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">buf<pos:position pos:line="21" pos:column="12"/></name><index pos:line="21" pos:column="12">[<expr><call><name pos:line="21" pos:column="13">strlen<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">buf<pos:position pos:line="21" pos:column="23"/></name></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call> <operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">1<pos:position pos:line="21" pos:column="28"/></literal></expr>]<pos:position pos:line="21" pos:column="29"/></index></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <literal type="char" pos:line="21" pos:column="32">'\0'<pos:position pos:line="21" pos:column="36"/></literal></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">printf<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="string" pos:line="22" pos:column="16">"Inserting '%s' for item %p to hash table: %d\n"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>,
               <argument><expr><name pos:line="23" pos:column="16">buf<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="21">buf<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">hid<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">hash_insert<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">hid<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="26">xstrdup<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">buf<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="24" pos:column="40">(<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">void<pos:position pos:line="24" pos:column="45"/></name> <operator pos:line="24" pos:column="46">*<pos:position pos:line="24" pos:column="47"/></operator><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator> <literal type="number" pos:line="24" pos:column="49">0x12345678<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">random<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">()<pos:position pos:line="25" pos:column="21"/></argument_list></call> <operator pos:line="25" pos:column="22">%<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">17<pos:position pos:line="25" pos:column="26"/></literal> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">strcpy<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">todelete<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">buf<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">printf<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="string" pos:line="29" pos:column="12">"walking hash table...\n"<pos:position pos:line="29" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">i<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">0<pos:position pos:line="30" pos:column="15"/></literal></expr><operator pos:line="30" pos:column="15">,<pos:position pos:line="30" pos:column="16"/></operator> <expr><name pos:line="30" pos:column="17">walker<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <call><name pos:line="30" pos:column="26">hash_first<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">hid<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></init> <condition><expr><name pos:line="30" pos:column="43">walker<pos:position pos:line="30" pos:column="49"/></name></expr>;<pos:position pos:line="30" pos:column="50"/></condition> <incr><expr><name pos:line="30" pos:column="51">walker<pos:position pos:line="30" pos:column="57"/></name> <operator pos:line="30" pos:column="58">=<pos:position pos:line="30" pos:column="59"/></operator> <call><name pos:line="30" pos:column="60">hash_next<pos:position pos:line="30" pos:column="69"/></name><argument_list pos:line="30" pos:column="69">(<argument><expr><name pos:line="30" pos:column="70">hid<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr></incr>)<pos:position pos:line="30" pos:column="75"/></control> <block pos:line="30" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">printf<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="string" pos:line="31" pos:column="16">"item %5d: key: '%s' item: %p\n"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">i<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">++<pos:position pos:line="31" pos:column="53"/></operator></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="55">walker<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">-&gt;<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="63">key<pos:position pos:line="31" pos:column="66"/></name></name></expr></argument>,
               <argument><expr><name><name pos:line="32" pos:column="16">walker<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">item<pos:position pos:line="32" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">printf<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"done walking hash table...\n"<pos:position pos:line="34" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">todelete<pos:position pos:line="36" pos:column="17"/></name><index pos:line="36" pos:column="17">[<expr><literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>]<pos:position pos:line="36" pos:column="20"/></index></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21"> <block pos:line="36" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">printf<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"deleting %s from %d\n"<pos:position pos:line="37" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">todelete<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">hid<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">hash_delete<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">hid<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="30">todelete<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="40"/></condition><then pos:line="38" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="13">printf<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><literal type="string" pos:line="39" pos:column="20">"hash_delete error\n"<pos:position pos:line="39" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">printf<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="string" pos:line="41" pos:column="12">"walking hash table...\n"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
    <for pos:line="42" pos:column="5">for <control pos:line="42" pos:column="9">(<init><expr><name pos:line="42" pos:column="10">i<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr><operator pos:line="42" pos:column="15">,<pos:position pos:line="42" pos:column="16"/></operator> <expr><name pos:line="42" pos:column="17">walker<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <call><name pos:line="42" pos:column="26">hash_first<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">hid<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></init> <condition><expr><name pos:line="42" pos:column="43">walker<pos:position pos:line="42" pos:column="49"/></name></expr>;<pos:position pos:line="42" pos:column="50"/></condition> <incr><expr><name pos:line="42" pos:column="51">walker<pos:position pos:line="42" pos:column="57"/></name> <operator pos:line="42" pos:column="58">=<pos:position pos:line="42" pos:column="59"/></operator> <call><name pos:line="42" pos:column="60">hash_next<pos:position pos:line="42" pos:column="69"/></name><argument_list pos:line="42" pos:column="69">(<argument><expr><name pos:line="42" pos:column="70">hid<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr></incr>)<pos:position pos:line="42" pos:column="75"/></control> <block pos:line="42" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">printf<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="string" pos:line="43" pos:column="16">"item %5d: key: '%s' item: %p\n"<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">i<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">++<pos:position pos:line="43" pos:column="53"/></operator></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="55">walker<pos:position pos:line="43" pos:column="61"/></name><operator pos:line="43" pos:column="61">-&gt;<pos:position pos:line="43" pos:column="66"/></operator><name pos:line="43" pos:column="63">key<pos:position pos:line="43" pos:column="66"/></name></name></expr></argument>,
               <argument><expr><name><name pos:line="44" pos:column="16">walker<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">item<pos:position pos:line="44" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">printf<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><literal type="string" pos:line="46" pos:column="12">"done walking hash table...\n"<pos:position pos:line="46" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>


    <expr_stmt><expr><call><name pos:line="49" pos:column="5">printf<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><literal type="string" pos:line="49" pos:column="12">"driver finished.\n"<pos:position pos:line="49" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">exit<pos:position pos:line="50" pos:column="9"/></name><argument_list pos:line="50" pos:column="9">(<argument><expr><literal type="number" pos:line="50" pos:column="10">0<pos:position pos:line="50" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="13"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1562_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">statObjects<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">data<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StatObjectsState<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">state<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><cast type="static" pos:line="4" pos:column="31">static_cast<argument_list type="generic" pos:line="4" pos:column="42">&lt;<argument><expr><name pos:line="4" pos:column="43">StatObjectsState<pos:position pos:line="4" pos:column="59"/></name> <operator pos:line="4" pos:column="60">*<pos:position pos:line="4" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="65"/></argument_list><argument_list pos:line="4" pos:column="62">(<argument><expr><name pos:line="4" pos:column="63">data<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">state<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">theSearch<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">isDone<pos:position pos:line="7" pos:column="33"/></name></name><argument_list pos:line="7" pos:column="33">()<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">state<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">sentry<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">complete<pos:position pos:line="8" pos:column="32"/></name></name><argument_list pos:line="8" pos:column="32">()<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">state<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">sentry<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">unlock<pos:position pos:line="9" pos:column="30"/></name></name><argument_list pos:line="9" pos:column="30">()<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">cbdataFree<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">state<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><call><name pos:line="12" pos:column="16">EBIT_TEST<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name><name pos:line="12" pos:column="26">state<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">sentry<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">flags<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">ENTRY_ABORTED<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63"> <block pos:line="12" pos:column="64">{
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">state<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">sentry<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">unlock<pos:position pos:line="13" pos:column="30"/></name></name><argument_list pos:line="13" pos:column="30">()<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">cbdataFree<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">state<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if></elseif> <elseif pos:line="16" pos:column="7">else <if pos:line="16" pos:column="12">if <condition pos:line="16" pos:column="15">(<expr><call><name><name pos:line="16" pos:column="16">state<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">sentry<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">checkDeferRead<pos:position pos:line="16" pos:column="45"/></name></name><argument_list pos:line="16" pos:column="45">(<argument><expr><operator pos:line="16" pos:column="46">-<pos:position pos:line="16" pos:column="47"/></operator><literal type="number" pos:line="16" pos:column="47">1<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">eventAdd<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><literal type="string" pos:line="17" pos:column="18">"statObjects"<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">statObjects<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">state<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="53">0.1<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="58">1<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">state<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">sentry<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">buffer<pos:position pos:line="21" pos:column="26"/></name></name><argument_list pos:line="21" pos:column="26">()<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">size_t<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">statCount<pos:position pos:line="22" pos:column="21"/></name> <init pos:line="22" pos:column="22">= <expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">MemBuf<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">mb<pos:position pos:line="23" pos:column="14"/></name></decl>;<pos:position pos:line="23" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">mb<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">.<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">init<pos:position pos:line="24" pos:column="12"/></name></name><argument_list pos:line="24" pos:column="12">()<pos:position pos:line="24" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>

    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">(<expr><name pos:line="26" pos:column="12">statCount<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">++<pos:position pos:line="26" pos:column="23"/></operator> <operator pos:line="26" pos:column="24">&lt;<pos:position pos:line="26" pos:column="28"/></operator> <cast type="static" pos:line="26" pos:column="26">static_cast<argument_list type="generic" pos:line="26" pos:column="37">&lt;<argument><expr><name pos:line="26" pos:column="38">size_t<pos:position pos:line="26" pos:column="44"/></name></expr></argument>&gt;<pos:position pos:line="26" pos:column="48"/></argument_list><argument_list pos:line="26" pos:column="45">(<argument><expr><name><name pos:line="26" pos:column="46">Config<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">.<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">Store<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">.<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="59">objectsPerBucket<pos:position pos:line="26" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></cast> <operator pos:line="26" pos:column="77">&amp;&amp;<pos:position pos:line="26" pos:column="87"/></operator> <call><name><name pos:line="26" pos:column="80">state<pos:position pos:line="26" pos:column="85"/></name><operator pos:line="26" pos:column="85">-&gt;<pos:position pos:line="26" pos:column="90"/></operator>
            <name pos:line="27" pos:column="13">theSearch<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">next<pos:position pos:line="27" pos:column="28"/></name></name><argument_list pos:line="27" pos:column="28">()<pos:position pos:line="27" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="31"/></condition> <block pos:line="27" pos:column="32">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">e<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name><name pos:line="28" pos:column="13">state<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">theSearch<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">currentItem<pos:position pos:line="28" pos:column="42"/></name></name><argument_list pos:line="28" pos:column="42">()<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">state<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">filter<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">&amp;&amp;<pos:position pos:line="30" pos:column="37"/></operator> <literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal> <operator pos:line="30" pos:column="32">==<pos:position pos:line="30" pos:column="34"/></operator> <call><name><name pos:line="30" pos:column="35">state<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">filter<pos:position pos:line="30" pos:column="48"/></name></name><argument_list pos:line="30" pos:column="48">(<argument><expr><name pos:line="30" pos:column="49">e<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52">
            <block type="pseudo"><continue pos:line="31" pos:column="13">continue;<pos:position pos:line="31" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="33" pos:column="9">statStoreEntry<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><operator pos:line="33" pos:column="24">&amp;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="25">mb<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">e<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></while>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">mb<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">size<pos:position pos:line="36" pos:column="16"/></name></name></expr>)<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="37" pos:column="9">state<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">sentry<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">append<pos:position pos:line="37" pos:column="30"/></name></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name><name pos:line="37" pos:column="31">mb<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">.<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">buf<pos:position pos:line="37" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="39">mb<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">.<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">size<pos:position pos:line="37" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">mb<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">.<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">clean<pos:position pos:line="38" pos:column="13"/></name></name><argument_list pos:line="38" pos:column="13">()<pos:position pos:line="38" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">eventAdd<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><literal type="string" pos:line="40" pos:column="14">"statObjects"<pos:position pos:line="40" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="29">statObjects<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">state<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="49">0.0<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="54">1<pos:position pos:line="40" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

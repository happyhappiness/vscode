<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3482_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientHttpRequest<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">logRequest<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">out<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">.<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">size<pos:position pos:line="4" pos:column="18"/></name></name> <operator pos:line="4" pos:column="19">&amp;&amp;<pos:position pos:line="4" pos:column="29"/></operator> <operator pos:line="4" pos:column="22">!<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">logType<pos:position pos:line="4" pos:column="30"/></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">33<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">5<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">HERE<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="31">"logging half-baked transaction: "<pos:position pos:line="5" pos:column="65"/></literal> <operator pos:line="5" pos:column="66">&lt;&lt;<pos:position pos:line="5" pos:column="74"/></operator> <name pos:line="5" pos:column="69">log_uri<pos:position pos:line="5" pos:column="76"/></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="78"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="7" pos:column="5">al<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">icp<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">.<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">opcode<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">ICP_INVALID<pos:position pos:line="7" pos:column="33"/></name></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">al<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">url<pos:position pos:line="8" pos:column="12"/></name></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">log_uri<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">33<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">9<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"clientLogRequest: al.url='"<pos:position pos:line="9" pos:column="47"/></literal> <operator pos:line="9" pos:column="48">&lt;&lt;<pos:position pos:line="9" pos:column="56"/></operator> <name><name pos:line="9" pos:column="51">al<pos:position pos:line="9" pos:column="53"/></name><operator pos:line="9" pos:column="53">-&gt;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="55">url<pos:position pos:line="9" pos:column="58"/></name></name> <operator pos:line="9" pos:column="59">&lt;&lt;<pos:position pos:line="9" pos:column="67"/></operator> <literal type="string" pos:line="9" pos:column="62">"'"<pos:position pos:line="9" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">al<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">reply<pos:position pos:line="11" pos:column="18"/></name></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block pos:line="11" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">al<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">http<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">code<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name><name pos:line="12" pos:column="25">al<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">reply<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">sline<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">status<pos:position pos:line="12" pos:column="48"/></name></name></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">al<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">http<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">content_type<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <call><name><name pos:line="13" pos:column="33">al<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">reply<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">content_type<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">.<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="57">termedBuf<pos:position pos:line="13" pos:column="66"/></name></name><argument_list pos:line="13" pos:column="66">()<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <elseif pos:line="14" pos:column="7">else <if pos:line="14" pos:column="12">if <condition pos:line="14" pos:column="15">(<expr><call><name pos:line="14" pos:column="16">loggingEntry<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">()<pos:position pos:line="14" pos:column="30"/></argument_list></call> <operator pos:line="14" pos:column="31">&amp;&amp;<pos:position pos:line="14" pos:column="41"/></operator> <call><name pos:line="14" pos:column="34">loggingEntry<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">()<pos:position pos:line="14" pos:column="48"/></argument_list></call><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">mem_obj<pos:position pos:line="14" pos:column="57"/></name></expr>)<pos:position pos:line="14" pos:column="58"/></condition><then pos:line="14" pos:column="58"> <block pos:line="14" pos:column="59">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">al<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">http<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">.<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">code<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">loggingEntry<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">()<pos:position pos:line="15" pos:column="39"/></argument_list></call><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><call><name><name pos:line="15" pos:column="41">mem_obj<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">getReply<pos:position pos:line="15" pos:column="58"/></name></name><argument_list pos:line="15" pos:column="58">()<pos:position pos:line="15" pos:column="60"/></argument_list></call><operator pos:line="15" pos:column="60">-&gt;<pos:position pos:line="15" pos:column="65"/></operator><name><name pos:line="15" pos:column="62">sline<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">.<pos:position pos:line="15" pos:column="68"/></operator><name pos:line="15" pos:column="68">status<pos:position pos:line="15" pos:column="74"/></name></name></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">al<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">http<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">content_type<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <call><name pos:line="16" pos:column="33">loggingEntry<pos:position pos:line="16" pos:column="45"/></name><argument_list pos:line="16" pos:column="45">()<pos:position pos:line="16" pos:column="47"/></argument_list></call><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><call><name><name pos:line="16" pos:column="49">mem_obj<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">getReply<pos:position pos:line="16" pos:column="66"/></name></name><argument_list pos:line="16" pos:column="66">()<pos:position pos:line="16" pos:column="68"/></argument_list></call><operator pos:line="16" pos:column="68">-&gt;<pos:position pos:line="16" pos:column="73"/></operator><call><name><name pos:line="16" pos:column="70">content_type<pos:position pos:line="16" pos:column="82"/></name><operator pos:line="16" pos:column="82">.<pos:position pos:line="16" pos:column="83"/></operator><name pos:line="16" pos:column="83">termedBuf<pos:position pos:line="16" pos:column="92"/></name></name><argument_list pos:line="16" pos:column="92">()<pos:position pos:line="16" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="95"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">33<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">9<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"clientLogRequest: http.code='"<pos:position pos:line="19" pos:column="50"/></literal> <operator pos:line="19" pos:column="51">&lt;&lt;<pos:position pos:line="19" pos:column="59"/></operator> <name><name pos:line="19" pos:column="54">al<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">http<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">.<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="63">code<pos:position pos:line="19" pos:column="67"/></name></name> <operator pos:line="19" pos:column="68">&lt;&lt;<pos:position pos:line="19" pos:column="76"/></operator> <literal type="string" pos:line="19" pos:column="71">"'"<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">loggingEntry<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">()<pos:position pos:line="21" pos:column="23"/></argument_list></call> <operator pos:line="21" pos:column="24">&amp;&amp;<pos:position pos:line="21" pos:column="34"/></operator> <call><name pos:line="21" pos:column="27">loggingEntry<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">()<pos:position pos:line="21" pos:column="41"/></argument_list></call><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">mem_obj<pos:position pos:line="21" pos:column="50"/></name></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="9">al<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">cache<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">objectSize<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <call><name pos:line="22" pos:column="32">loggingEntry<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">()<pos:position pos:line="22" pos:column="46"/></argument_list></call><operator pos:line="22" pos:column="46">-&gt;<pos:position pos:line="22" pos:column="51"/></operator><call><name pos:line="22" pos:column="48">contentLen<pos:position pos:line="22" pos:column="58"/></name><argument_list pos:line="22" pos:column="58">()<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">al<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">cache<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">caddr<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">SetNoAddr<pos:position pos:line="24" pos:column="30"/></name></name><argument_list pos:line="24" pos:column="30">()<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">getConn<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">()<pos:position pos:line="26" pos:column="18"/></argument_list></call> <operator pos:line="26" pos:column="19">!=<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">NULL<pos:position pos:line="26" pos:column="26"/></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">al<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">cache<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">caddr<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <call><name pos:line="27" pos:column="27">getConn<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">()<pos:position pos:line="27" pos:column="36"/></argument_list></call><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">log_addr<pos:position pos:line="27" pos:column="46"/></name></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">al<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">cache<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">port<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator>  <call><name pos:line="28" pos:column="27">cbdataReference<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><call><name pos:line="28" pos:column="43">getConn<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">()<pos:position pos:line="28" pos:column="52"/></argument_list></call><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">port<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">al<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">cache<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">requestSize<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">req_sz<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">al<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">cache<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">requestHeadersSize<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">=<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">req_sz<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">al<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">cache<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">replySize<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name><name pos:line="34" pos:column="27">out<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">.<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">size<pos:position pos:line="34" pos:column="35"/></name></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">al<pos:position pos:line="35" pos:column="7"/></name><operator pos:line="35" pos:column="7">-&gt;<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="9">cache<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">replyHeadersSize<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <name><name pos:line="35" pos:column="34">out<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">.<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">headers_sz<pos:position pos:line="35" pos:column="48"/></name></name></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">al<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">-&gt;<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="9">cache<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">.<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">highOffset<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name><name pos:line="37" pos:column="28">out<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">offset<pos:position pos:line="37" pos:column="38"/></name></name></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">al<pos:position pos:line="39" pos:column="7"/></name><operator pos:line="39" pos:column="7">-&gt;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="9">cache<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">code<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">logType<pos:position pos:line="39" pos:column="29"/></name></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">al<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">cache<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">msec<pos:position pos:line="41" pos:column="19"/></name></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="22">tvSubMsec<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">start_time<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">current_time<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">request<pos:position pos:line="43" pos:column="16"/></name></expr>)<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="9">prepareLogWithRequestDetails<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><name pos:line="44" pos:column="38">request<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="47">al<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">getConn<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">()<pos:position pos:line="46" pos:column="18"/></argument_list></call> <operator pos:line="46" pos:column="19">!=<pos:position pos:line="46" pos:column="21"/></operator> <name pos:line="46" pos:column="22">NULL<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">&amp;&amp;<pos:position pos:line="46" pos:column="37"/></operator> <call><name pos:line="46" pos:column="30">getConn<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">()<pos:position pos:line="46" pos:column="39"/></argument_list></call><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">clientConnection<pos:position pos:line="46" pos:column="57"/></name> <operator pos:line="46" pos:column="58">!=<pos:position pos:line="46" pos:column="60"/></operator> <name pos:line="46" pos:column="61">NULL<pos:position pos:line="46" pos:column="65"/></name> <operator pos:line="46" pos:column="66">&amp;&amp;<pos:position pos:line="46" pos:column="76"/></operator> <call><name pos:line="46" pos:column="69">getConn<pos:position pos:line="46" pos:column="76"/></name><argument_list pos:line="46" pos:column="76">()<pos:position pos:line="46" pos:column="78"/></argument_list></call><operator pos:line="46" pos:column="78">-&gt;<pos:position pos:line="46" pos:column="83"/></operator><name><name pos:line="46" pos:column="80">clientConnection<pos:position pos:line="46" pos:column="96"/></name><operator pos:line="46" pos:column="96">-&gt;<pos:position pos:line="46" pos:column="101"/></operator><name pos:line="46" pos:column="98">rfc931<pos:position pos:line="46" pos:column="104"/></name><index pos:line="46" pos:column="104">[<expr><literal type="number" pos:line="46" pos:column="105">0<pos:position pos:line="46" pos:column="106"/></literal></expr>]<pos:position pos:line="46" pos:column="107"/></index></name></expr>)<pos:position pos:line="46" pos:column="108"/></condition><then pos:line="46" pos:column="108">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="9">al<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">cache<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">rfc931<pos:position pos:line="47" pos:column="25"/></name></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <call><name pos:line="47" pos:column="28">getConn<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">()<pos:position pos:line="47" pos:column="37"/></argument_list></call><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name><name pos:line="47" pos:column="39">clientConnection<pos:position pos:line="47" pos:column="55"/></name><operator pos:line="47" pos:column="55">-&gt;<pos:position pos:line="47" pos:column="60"/></operator><name pos:line="47" pos:column="57">rfc931<pos:position pos:line="47" pos:column="63"/></name></name></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt></block></then></if>

<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><name pos:line="49" pos:column="5">USE_SSL<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">&amp;&amp;<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="16">0<pos:position pos:line="49" pos:column="17"/></literal></expr></cpp:if>

    <comment type="block" pos:line="51" pos:column="5">/* This is broken. Fails if the connection has been closed. Needs
     * to snarf the ssl details some place earlier..
     */</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">getConn<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">()<pos:position pos:line="54" pos:column="18"/></argument_list></call> <operator pos:line="54" pos:column="19">!=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">NULL<pos:position pos:line="54" pos:column="26"/></name></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="9">al<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">cache<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">.<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">ssluser<pos:position pos:line="55" pos:column="26"/></name></name> <operator pos:line="55" pos:column="27">=<pos:position pos:line="55" pos:column="28"/></operator> <call><name pos:line="55" pos:column="29">sslGetUserEmail<pos:position pos:line="55" pos:column="44"/></name><argument_list pos:line="55" pos:column="44">(<argument><expr><name><name pos:line="55" pos:column="45">fd_table<pos:position pos:line="55" pos:column="53"/></name><index pos:line="55" pos:column="53">[<expr><call><name pos:line="55" pos:column="54">getConn<pos:position pos:line="55" pos:column="61"/></name><argument_list pos:line="55" pos:column="61">()<pos:position pos:line="55" pos:column="63"/></argument_list></call><operator pos:line="55" pos:column="63">-&gt;<pos:position pos:line="55" pos:column="68"/></operator><name pos:line="55" pos:column="65">fd<pos:position pos:line="55" pos:column="67"/></name></expr>]<pos:position pos:line="55" pos:column="68"/></index></name><operator pos:line="55" pos:column="68">.<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="69">ssl<pos:position pos:line="55" pos:column="72"/></name></expr></argument>)<pos:position pos:line="55" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="74"/></expr_stmt></block></then></if>

<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>

    <decl_stmt><decl><type><name pos:line="59" pos:column="5">ACLFilledChecklist<pos:position pos:line="59" pos:column="23"/></name> <modifier pos:line="59" pos:column="24">*<pos:position pos:line="59" pos:column="25"/></modifier></type><name pos:line="59" pos:column="25">checklist<pos:position pos:line="59" pos:column="34"/></name> <init pos:line="59" pos:column="35">= <expr><call><name pos:line="59" pos:column="37">clientAclChecklistCreate<pos:position pos:line="59" pos:column="61"/></name><argument_list pos:line="59" pos:column="61">(<argument><expr><name><name pos:line="59" pos:column="62">Config<pos:position pos:line="59" pos:column="68"/></name><operator pos:line="59" pos:column="68">.<pos:position pos:line="59" pos:column="69"/></operator><name pos:line="59" pos:column="69">accessList<pos:position pos:line="59" pos:column="79"/></name><operator pos:line="59" pos:column="79">.<pos:position pos:line="59" pos:column="80"/></operator><name pos:line="59" pos:column="80">log<pos:position pos:line="59" pos:column="83"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="85">this<pos:position pos:line="59" pos:column="89"/></name></expr></argument>)<pos:position pos:line="59" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="91"/></decl_stmt>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name><name pos:line="61" pos:column="9">al<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">reply<pos:position pos:line="61" pos:column="18"/></name></name></expr>)<pos:position pos:line="61" pos:column="19"/></condition><then pos:line="61" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="9">checklist<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">-&gt;<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="20">reply<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <call><name pos:line="62" pos:column="28">HTTPMSGLOCK<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><name><name pos:line="62" pos:column="40">al<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">reply<pos:position pos:line="62" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></expr_stmt></block></then></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">!<pos:position pos:line="64" pos:column="10"/></operator><name><name pos:line="64" pos:column="10">Config<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">.<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">accessList<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">.<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="28">log<pos:position pos:line="64" pos:column="31"/></name></name> <operator pos:line="64" pos:column="32">||<pos:position pos:line="64" pos:column="34"/></operator> <call><name><name pos:line="64" pos:column="35">checklist<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">-&gt;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="46">fastCheck<pos:position pos:line="64" pos:column="55"/></name></name><argument_list pos:line="64" pos:column="55">()<pos:position pos:line="64" pos:column="57"/></argument_list></call> <operator pos:line="64" pos:column="58">==<pos:position pos:line="64" pos:column="60"/></operator> <name pos:line="64" pos:column="61">ACCESS_ALLOWED<pos:position pos:line="64" pos:column="75"/></name></expr>)<pos:position pos:line="64" pos:column="76"/></condition><then pos:line="64" pos:column="76"> <block pos:line="64" pos:column="77">{
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">request<pos:position pos:line="65" pos:column="20"/></name></expr>)<pos:position pos:line="65" pos:column="21"/></condition><then pos:line="65" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="13">al<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">adapted_request<pos:position pos:line="66" pos:column="32"/></name></name> <operator pos:line="66" pos:column="33">=<pos:position pos:line="66" pos:column="34"/></operator> <call><name pos:line="66" pos:column="35">HTTPMSGLOCK<pos:position pos:line="66" pos:column="46"/></name><argument_list pos:line="66" pos:column="46">(<argument><expr><name pos:line="66" pos:column="47">request<pos:position pos:line="66" pos:column="54"/></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">accessLogLog<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">al<pos:position pos:line="67" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="26">checklist<pos:position pos:line="67" pos:column="35"/></name></expr></argument>)<pos:position pos:line="67" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">request<pos:position pos:line="68" pos:column="20"/></name></expr>)<pos:position pos:line="68" pos:column="21"/></condition><then pos:line="68" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="13">updateCounters<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">()<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt></block></then></if>

        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><call><name pos:line="71" pos:column="13">getConn<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">()<pos:position pos:line="71" pos:column="22"/></argument_list></call> <operator pos:line="71" pos:column="23">!=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">NULL<pos:position pos:line="71" pos:column="30"/></name> <operator pos:line="71" pos:column="31">&amp;&amp;<pos:position pos:line="71" pos:column="41"/></operator> <call><name pos:line="71" pos:column="34">getConn<pos:position pos:line="71" pos:column="41"/></name><argument_list pos:line="71" pos:column="41">()<pos:position pos:line="71" pos:column="43"/></argument_list></call><operator pos:line="71" pos:column="43">-&gt;<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="45">clientConnection<pos:position pos:line="71" pos:column="61"/></name> <operator pos:line="71" pos:column="62">!=<pos:position pos:line="71" pos:column="64"/></operator> <name pos:line="71" pos:column="65">NULL<pos:position pos:line="71" pos:column="69"/></name></expr>)<pos:position pos:line="71" pos:column="70"/></condition><then pos:line="71" pos:column="70">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="13">clientdbUpdate<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><call><name pos:line="72" pos:column="28">getConn<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">()<pos:position pos:line="72" pos:column="37"/></argument_list></call><operator pos:line="72" pos:column="37">-&gt;<pos:position pos:line="72" pos:column="42"/></operator><name><name pos:line="72" pos:column="39">clientConnection<pos:position pos:line="72" pos:column="55"/></name><operator pos:line="72" pos:column="55">-&gt;<pos:position pos:line="72" pos:column="60"/></operator><name pos:line="72" pos:column="57">remote<pos:position pos:line="72" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="65">logType<pos:position pos:line="72" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="74">AnyP<pos:position pos:line="72" pos:column="78"/></name><operator pos:line="72" pos:column="78">::<pos:position pos:line="72" pos:column="80"/></operator><name pos:line="72" pos:column="80">PROTO_HTTP<pos:position pos:line="72" pos:column="90"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="92">out<pos:position pos:line="72" pos:column="95"/></name><operator pos:line="72" pos:column="95">.<pos:position pos:line="72" pos:column="96"/></operator><name pos:line="72" pos:column="96">size<pos:position pos:line="72" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="102"/></expr_stmt></block></then></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="75" pos:column="5">delete<pos:position pos:line="75" pos:column="11"/></operator> <name pos:line="75" pos:column="12">checklist<pos:position pos:line="75" pos:column="21"/></name></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

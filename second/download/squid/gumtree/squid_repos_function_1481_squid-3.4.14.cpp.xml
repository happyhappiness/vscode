<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1481_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SignalEngine<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">doShutdown<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">time_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">wait<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">1<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="15">DBG_IMPORTANT<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="30">"Preparing for shutdown after "<pos:position pos:line="4" pos:column="61"/></literal> <operator pos:line="4" pos:column="62">&lt;&lt;<pos:position pos:line="4" pos:column="70"/></operator> <name><name pos:line="4" pos:column="65">statCounter<pos:position pos:line="4" pos:column="76"/></name><operator pos:line="4" pos:column="76">.<pos:position pos:line="4" pos:column="77"/></operator><name pos:line="4" pos:column="77">client_http<pos:position pos:line="4" pos:column="88"/></name><operator pos:line="4" pos:column="88">.<pos:position pos:line="4" pos:column="89"/></operator><name pos:line="4" pos:column="89">requests<pos:position pos:line="4" pos:column="97"/></name></name> <operator pos:line="4" pos:column="98">&lt;&lt;<pos:position pos:line="4" pos:column="106"/></operator> <literal type="string" pos:line="4" pos:column="101">" requests"<pos:position pos:line="4" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="114"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">1<pos:position pos:line="5" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="15">DBG_IMPORTANT<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="30">"Waiting "<pos:position pos:line="5" pos:column="40"/></literal> <operator pos:line="5" pos:column="41">&lt;&lt;<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="44">wait<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">&lt;&lt;<pos:position pos:line="5" pos:column="57"/></operator> <literal type="string" pos:line="5" pos:column="52">" seconds for active connections to finish"<pos:position pos:line="5" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="97"/></expr_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">shutting_down<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="21">1<pos:position pos:line="7" pos:column="22"/></literal></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="9" pos:column="22"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">WIN32_svcstatusupdate<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">SERVICE_STOP_PENDING<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="49">(<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">wait<pos:position pos:line="10" pos:column="54"/></name> <operator pos:line="10" pos:column="55">+<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">1<pos:position pos:line="10" pos:column="58"/></literal><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator> <operator pos:line="10" pos:column="60">*<pos:position pos:line="10" pos:column="61"/></operator> <literal type="number" pos:line="10" pos:column="62">1000<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="13" pos:column="5">/* run the closure code which can be shared with reconfigure */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">serverConnectionsClose<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">()<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">USE_AUTH<pos:position pos:line="15" pos:column="13"/></name></expr></cpp:if>
    <comment type="block" pos:line="16" pos:column="5">/* detach the auth components (only do this on full shutdown) */</comment>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">Auth<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">::<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">Scheme<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">::<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">FreeAll<pos:position pos:line="17" pos:column="26"/></name></name><argument_list pos:line="17" pos:column="26">()<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">eventAdd<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><literal type="string" pos:line="19" pos:column="14">"SquidShutdown"<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="32">StopEventLoop<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">this<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><call pos:line="19" pos:column="53">(<name pos:line="19" pos:column="54">double<pos:position pos:line="19" pos:column="60"/></name>) <argument_list pos:line="19" pos:column="62">(<argument><expr><name pos:line="19" pos:column="63">wait<pos:position pos:line="19" pos:column="67"/></name> <operator pos:line="19" pos:column="68">+<pos:position pos:line="19" pos:column="69"/></operator> <literal type="number" pos:line="19" pos:column="70">1<pos:position pos:line="19" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="74">1<pos:position pos:line="19" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="19" pos:column="77">false<pos:position pos:line="19" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="84"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

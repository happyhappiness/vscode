<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7095_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">value_type<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pop<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">()<pos:position pos:line="1" pos:column="17"/></parameter_list> <block pos:line="1" pos:column="18">{
        <if pos:line="2" pos:column="9">if <condition pos:line="2" pos:column="12">(<expr><operator pos:line="2" pos:column="13">!<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">count<pos:position pos:line="2" pos:column="19"/></name></expr>)<pos:position pos:line="2" pos:column="20"/></condition><then pos:line="2" pos:column="20">
            <block type="pseudo"><return pos:line="3" pos:column="13">return <expr><call><name pos:line="3" pos:column="20">value_type<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">()<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="33"/></return></block></then></if>

        <decl_stmt><decl><type><name pos:line="5" pos:column="9">value_type<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">result<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">items<pos:position pos:line="5" pos:column="34"/></name><index pos:line="5" pos:column="34">[<expr><operator pos:line="5" pos:column="35">--<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">count<pos:position pos:line="5" pos:column="42"/></name></expr>]<pos:position pos:line="5" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="7" pos:column="9">this<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">items<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><name pos:line="7" pos:column="21">count<pos:position pos:line="7" pos:column="26"/></name></expr>]<pos:position pos:line="7" pos:column="27"/></index></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <call><name pos:line="7" pos:column="30">value_type<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">()<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>

        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">result<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></function></unit>

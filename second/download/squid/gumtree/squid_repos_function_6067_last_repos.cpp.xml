<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6067_last_repos.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">CharacterSet<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">&amp;<pos:position pos:line="1" pos:column="19"/></modifier></type>
<name><name pos:line="2" pos:column="1">CharacterSet<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">operator <name pos:line="2" pos:column="24">-=<pos:position pos:line="2" pos:column="26"/></name></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">CharacterSet<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">src<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Storage<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">::<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">const_iterator<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">s<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><call><name><name pos:line="4" pos:column="33">src<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">.<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">chars_<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">.<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">begin<pos:position pos:line="4" pos:column="49"/></name></name><argument_list pos:line="4" pos:column="49">()<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name><name pos:line="5" pos:column="11">Storage<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">::<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">const_iterator<pos:position pos:line="5" pos:column="34"/></name></name></type> <name pos:line="5" pos:column="35">e<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><call><name><name pos:line="5" pos:column="39">src<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">chars_<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">.<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="50">end<pos:position pos:line="5" pos:column="53"/></name></name><argument_list pos:line="5" pos:column="53">()<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Storage<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">::<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">iterator<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">d<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name><name pos:line="6" pos:column="27">chars_<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">.<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">begin<pos:position pos:line="6" pos:column="39"/></name></name><argument_list pos:line="6" pos:column="39">()<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">s<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">e<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition> <block pos:line="7" pos:column="20">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">s<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">d<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt></block></then></if>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">++<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">s<pos:position pos:line="10" pos:column="12"/></name></expr>;<pos:position pos:line="10" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="11" pos:column="9">++<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">d<pos:position pos:line="11" pos:column="12"/></name></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">this<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

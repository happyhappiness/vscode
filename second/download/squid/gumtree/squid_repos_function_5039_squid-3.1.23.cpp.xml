<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5039_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DiskThreadsDiskFile<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">read<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">ReadRequest<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">request<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">79<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"DiskThreadsDiskFile::read: "<pos:position pos:line="4" pos:column="48"/></literal> <operator pos:line="4" pos:column="49">&lt;&lt;<pos:position pos:line="4" pos:column="57"/></operator> <name pos:line="4" pos:column="52">this<pos:position pos:line="4" pos:column="56"/></name> <operator pos:line="4" pos:column="57">&lt;&lt;<pos:position pos:line="4" pos:column="65"/></operator> <literal type="string" pos:line="4" pos:column="60">", size "<pos:position pos:line="4" pos:column="69"/></literal> <operator pos:line="4" pos:column="70">&lt;&lt;<pos:position pos:line="4" pos:column="78"/></operator> <name><name pos:line="4" pos:column="73">request<pos:position pos:line="4" pos:column="80"/></name><operator pos:line="4" pos:column="80">-&gt;<pos:position pos:line="4" pos:column="85"/></operator><name pos:line="4" pos:column="82">len<pos:position pos:line="4" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="87"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">&gt;<pos:position pos:line="5" pos:column="20"/></operator> <operator pos:line="5" pos:column="18">-<pos:position pos:line="5" pos:column="19"/></operator><literal type="number" pos:line="5" pos:column="19">1<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><call><name><name pos:line="6" pos:column="13">ioRequestor<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">getRaw<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">statCounter<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">syscalls<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">disk<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">reads<pos:position pos:line="7" pos:column="36"/></name></name><operator pos:line="7" pos:column="36">++<pos:position pos:line="7" pos:column="38"/></operator></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="8" pos:column="5">++<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">inProgressIOs<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">ASYNC_READ<pos:position pos:line="9" pos:column="15"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">aioRead<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">fd<pos:position pos:line="11" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="17">request<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">offset<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="34">request<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">len<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">ReadDone<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="58">new<pos:position pos:line="11" pos:column="61"/></operator> <call><name><name pos:line="11" pos:column="62">IoResult<pos:position pos:line="11" pos:column="70"/></name><argument_list type="generic" pos:line="11" pos:column="70">&lt;<argument><expr><name pos:line="11" pos:column="71">ReadRequest<pos:position pos:line="11" pos:column="82"/></name></expr></argument>&gt;<pos:position pos:line="11" pos:column="86"/></argument_list></name><argument_list pos:line="11" pos:column="83">(<argument><expr><name pos:line="11" pos:column="84">this<pos:position pos:line="11" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="90">request<pos:position pos:line="11" pos:column="97"/></name></expr></argument>)<pos:position pos:line="11" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="100"/></expr_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">file_read<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">fd<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="19">request<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">buf<pos:position pos:line="14" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="33">request<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">len<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="47">request<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">offset<pos:position pos:line="14" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="64">ReadDone<pos:position pos:line="14" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="74">new<pos:position pos:line="14" pos:column="77"/></operator> <call><name><name pos:line="14" pos:column="78">IoResult<pos:position pos:line="14" pos:column="86"/></name><argument_list type="generic" pos:line="14" pos:column="86">&lt;<argument><expr><name pos:line="14" pos:column="87">ReadRequest<pos:position pos:line="14" pos:column="98"/></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="102"/></argument_list></name><argument_list pos:line="14" pos:column="99">(<argument><expr><name pos:line="14" pos:column="100">this<pos:position pos:line="14" pos:column="104"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="106">request<pos:position pos:line="14" pos:column="113"/></name></expr></argument>)<pos:position pos:line="14" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="116"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

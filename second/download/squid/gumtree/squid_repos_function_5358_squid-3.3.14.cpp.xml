<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5358_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">AsyncJob<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">canBeCalled<pos:position pos:line="1" pos:column="27"/></name></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">AsyncCall<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">&amp;<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="39">call<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">inCall<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">!=<pos:position pos:line="3" pos:column="18"/></operator> <name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24"> <block pos:line="3" pos:column="25">{
        <comment type="line" pos:line="4" pos:column="9">// This may happen when we have bugs or some module is not calling</comment>
        <comment type="line" pos:line="5" pos:column="9">// us asynchronously (comm used to do that).</comment>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">93<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">5<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">HERE<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&lt;&lt;<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="31">inCall<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">&lt;&lt;<pos:position pos:line="6" pos:column="46"/></operator> <literal type="string" pos:line="6" pos:column="41">" is in progress; "<pos:position pos:line="6" pos:column="60"/></literal> <operator pos:line="6" pos:column="61">&lt;&lt;<pos:position pos:line="6" pos:column="69"/></operator>
               <name pos:line="7" pos:column="16">call<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;&lt;<pos:position pos:line="7" pos:column="29"/></operator> <literal type="string" pos:line="7" pos:column="24">" canot reenter the job."<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><call><name><name pos:line="8" pos:column="16">call<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">cancel<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="string" pos:line="8" pos:column="28">"reentrant job call"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <return pos:line="11" pos:column="5">return <expr><literal type="boolean" pos:line="11" pos:column="12">true<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2582_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ftpOpenListenSocket<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">FtpStateData<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">ftpState<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">fallback<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" format="doxygen" pos:line="4" pos:column="5">/// Close old data channels, if any. We may open a new one below.</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">ftpState<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">data<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">conn<pos:position pos:line="5" pos:column="28"/></name></name> <operator pos:line="5" pos:column="29">!=<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <block pos:line="5" pos:column="38">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">ftpState<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">data<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">conn<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">flags<pos:position pos:line="6" pos:column="40"/></name></name> <operator pos:line="6" pos:column="41">&amp;<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="43">COMM_REUSEADDR<pos:position pos:line="6" pos:column="57"/></name><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator></expr>)<pos:position pos:line="6" pos:column="59"/></condition><then pos:line="6" pos:column="59">
            <comment type="line" pos:line="7" pos:column="13">// NP: in fact it points to the control channel. just clear it.</comment>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="13">ftpState<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">data<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">clear<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">()<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt></block></then>
        <else pos:line="9" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="13">ftpState<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">data<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">close<pos:position pos:line="10" pos:column="33"/></name></name><argument_list pos:line="10" pos:column="33">()<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt></block></else></if>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">safe_free<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name><name pos:line="12" pos:column="15">ftpState<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">data<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">host<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/*
     * Set up a listen socket on the same local address as the
     * control connection.
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">Comm<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">::<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">ConnectionPointer<pos:position pos:line="18" pos:column="28"/></name></name></type> <name pos:line="18" pos:column="29">temp<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><operator pos:line="18" pos:column="36">new<pos:position pos:line="18" pos:column="39"/></operator> <name><name pos:line="18" pos:column="40">Comm<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">::<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">Connection<pos:position pos:line="18" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">temp<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">local<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name><name pos:line="19" pos:column="19">ftpState<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">ctrl<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">.<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">conn<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">local<pos:position pos:line="19" pos:column="45"/></name></name></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/*
     * REUSEADDR is needed in fallback mode, since the same port is
     * used for both control and data.
     */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">fallback<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">int<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">on<pos:position pos:line="26" pos:column="15"/></name> <init pos:line="26" pos:column="16">= <expr><literal type="number" pos:line="26" pos:column="18">1<pos:position pos:line="26" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="20"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">setsockopt<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name><name pos:line="27" pos:column="20">ftpState<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">ctrl<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">.<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">conn<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">fd<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">SOL_SOCKET<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">SO_REUSEADDR<pos:position pos:line="27" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="71">(<pos:position pos:line="27" pos:column="72"/></operator><name pos:line="27" pos:column="72">char<pos:position pos:line="27" pos:column="76"/></name> <operator pos:line="27" pos:column="77">*<pos:position pos:line="27" pos:column="78"/></operator><operator pos:line="27" pos:column="78">)<pos:position pos:line="27" pos:column="79"/></operator> <operator pos:line="27" pos:column="80">&amp;<pos:position pos:line="27" pos:column="85"/></operator><name pos:line="27" pos:column="81">on<pos:position pos:line="27" pos:column="83"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="85">sizeof<argument_list pos:line="27" pos:column="91">(<argument><expr><name pos:line="27" pos:column="92">on<pos:position pos:line="27" pos:column="94"/></name></expr></argument>)<pos:position pos:line="27" pos:column="95"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">ftpState<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">ctrl<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">conn<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">flags<pos:position pos:line="28" pos:column="35"/></name></name> <operator pos:line="28" pos:column="36">|=<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="39">COMM_REUSEADDR<pos:position pos:line="28" pos:column="53"/></name></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">temp<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">flags<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">|=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">COMM_REUSEADDR<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <comment type="block" pos:line="31" pos:column="9">/* if not running in fallback mode a new port needs to be retrieved */</comment>
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">temp<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">local<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">port<pos:position pos:line="32" pos:column="25"/></name></name><argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="number" pos:line="32" pos:column="26">0<pos:position pos:line="32" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">ftpState<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">listenForDataChannel<pos:position pos:line="35" pos:column="35"/></name></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">temp<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><call><name><name pos:line="35" pos:column="42">ftpState<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">entry<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">url<pos:position pos:line="35" pos:column="62"/></name></name><argument_list pos:line="35" pos:column="62">()<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6005_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nmasldap_get_simple_pwd<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(
    <parameter><decl><type><name pos:line="2" pos:column="5">LDAP<pos:position pos:line="2" pos:column="9"/></name>     <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">ld<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name>     <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">objectDN<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type>   <name pos:line="4" pos:column="14">pwdLen<pos:position pos:line="4" pos:column="20"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name>     <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">pwd<pos:position pos:line="5" pos:column="18"/></name></decl></parameter> )<pos:position pos:line="5" pos:column="20"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">methodID<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">methodIDLen<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><sizeof pos:line="9" pos:column="32">sizeof<argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">methodID<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type>    <name><name pos:line="10" pos:column="13">tag<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[]<pos:position pos:line="10" pos:column="18"/></index></name> <init pos:line="10" pos:column="19">= <expr><block pos:line="10" pos:column="21">{<expr><literal type="char" pos:line="10" pos:column="22">'P'<pos:position pos:line="10" pos:column="25"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="26">'A'<pos:position pos:line="10" pos:column="29"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="30">'S'<pos:position pos:line="10" pos:column="33"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="34">'S'<pos:position pos:line="10" pos:column="37"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="38">'W'<pos:position pos:line="10" pos:column="41"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="42">'O'<pos:position pos:line="10" pos:column="45"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="46">'R'<pos:position pos:line="10" pos:column="49"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="50">'D'<pos:position pos:line="10" pos:column="53"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="54">' '<pos:position pos:line="10" pos:column="57"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="58">'H'<pos:position pos:line="10" pos:column="61"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="62">'A'<pos:position pos:line="10" pos:column="65"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="66">'S'<pos:position pos:line="10" pos:column="69"/></literal></expr>,<expr><literal type="char" pos:line="10" pos:column="70">'H'<pos:position pos:line="10" pos:column="73"/></literal></expr>,<expr><literal type="number" pos:line="10" pos:column="74">0<pos:position pos:line="10" pos:column="75"/></literal></expr>}<pos:position pos:line="10" pos:column="76"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name>    <modifier pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></modifier></type><name pos:line="11" pos:column="14">pwdBuf<pos:position pos:line="11" pos:column="20"/></name><init pos:line="11" pos:column="20">=<expr><name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">size_t<pos:position pos:line="12" pos:column="11"/></name></type>  <name pos:line="12" pos:column="13">pwdBufLen<pos:position pos:line="12" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="24">bufferLen<pos:position pos:line="12" pos:column="33"/></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">bufferLen<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">pwdBufLen<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">pwdLen<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">+<pos:position pos:line="14" pos:column="36"/></operator><literal type="number" pos:line="14" pos:column="36">2<pos:position pos:line="14" pos:column="37"/></literal></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">pwdBuf<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></operator><operator pos:line="15" pos:column="20">)<pos:position pos:line="15" pos:column="21"/></operator><call><name pos:line="15" pos:column="21">SMB_MALLOC_ARRAY<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">char<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">pwdBufLen<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt> <comment type="block" pos:line="15" pos:column="56">/* digest and null */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">pwdBuf<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24"> <block pos:line="16" pos:column="25">{
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">LDAP_NO_MEMORY<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">err<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">getLoginConfig<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">ld<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">objectDN<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">methodIDLen<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="53">&amp;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="54">methodID<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">tag<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="69">&amp;<pos:position pos:line="20" pos:column="74"/></operator><name pos:line="20" pos:column="70">pwdBufLen<pos:position pos:line="20" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="81">pwdBuf<pos:position pos:line="20" pos:column="87"/></name></expr></argument>)<pos:position pos:line="20" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="89"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">err<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">==<pos:position pos:line="21" pos:column="15"/></operator> <literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18"> <block pos:line="21" pos:column="19">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">pwdBufLen<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">!=<pos:position pos:line="22" pos:column="25"/></operator><literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">pwdBuf<pos:position pos:line="23" pos:column="19"/></name><index pos:line="23" pos:column="19">[<expr><name pos:line="23" pos:column="20">pwdBufLen<pos:position pos:line="23" pos:column="29"/></name></expr>]<pos:position pos:line="23" pos:column="30"/></index></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>       <comment type="block" pos:line="23" pos:column="42">/* null terminate */</comment>

            <switch pos:line="25" pos:column="13">switch <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">pwdBuf<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr>]<pos:position pos:line="25" pos:column="30"/></index></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition> <block pos:line="25" pos:column="32">{
            <case pos:line="26" pos:column="13">case <expr><literal type="number" pos:line="26" pos:column="18">1<pos:position pos:line="26" pos:column="19"/></literal></expr>:<pos:position pos:line="26" pos:column="20"/></case>  <comment type="block" pos:line="26" pos:column="22">/* cleartext password  */</comment>
                <break pos:line="27" pos:column="17">break;<pos:position pos:line="27" pos:column="23"/></break>
            <case pos:line="28" pos:column="13">case <expr><literal type="number" pos:line="28" pos:column="18">2<pos:position pos:line="28" pos:column="19"/></literal></expr>:<pos:position pos:line="28" pos:column="20"/></case>  <comment type="block" pos:line="28" pos:column="22">/* SHA1 HASH */</comment>
            <case pos:line="29" pos:column="13">case <expr><literal type="number" pos:line="29" pos:column="18">3<pos:position pos:line="29" pos:column="19"/></literal></expr>:<pos:position pos:line="29" pos:column="20"/></case>  <comment type="block" pos:line="29" pos:column="22">/* MD5_ID */</comment>
            <case pos:line="30" pos:column="13">case <expr><literal type="number" pos:line="30" pos:column="18">4<pos:position pos:line="30" pos:column="19"/></literal></expr>:<pos:position pos:line="30" pos:column="20"/></case>  <comment type="block" pos:line="30" pos:column="22">/* UNIXCrypt_ID */</comment>
            <case pos:line="31" pos:column="13">case <expr><literal type="number" pos:line="31" pos:column="18">8<pos:position pos:line="31" pos:column="19"/></literal></expr>:<pos:position pos:line="31" pos:column="20"/></case>  <comment type="block" pos:line="31" pos:column="22">/* SSHA_ID */</comment>
            <default pos:line="32" pos:column="13">default:<pos:position pos:line="32" pos:column="21"/></default> <comment type="block" pos:line="32" pos:column="22">/* Unknown digest */</comment>
                <expr_stmt><expr><name pos:line="33" pos:column="17">err<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">LDAP_INAPPROPRIATE_AUTH<pos:position pos:line="33" pos:column="46"/></name></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>  <comment type="block" pos:line="33" pos:column="49">/* only return clear text */</comment>
                <break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
            }<pos:position pos:line="35" pos:column="14"/></block></switch>

            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">err<pos:position pos:line="37" pos:column="21"/></name></expr>)<pos:position pos:line="37" pos:column="22"/></condition><then pos:line="37" pos:column="22"> <block pos:line="37" pos:column="23">{
                <if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">pwdLen<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">&gt;=<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="31">pwdBufLen<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-<pos:position pos:line="38" pos:column="41"/></operator><literal type="number" pos:line="38" pos:column="41">1<pos:position pos:line="38" pos:column="42"/></literal></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43"> <block pos:line="38" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="39" pos:column="21">memcpy<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">pwd<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name><name pos:line="39" pos:column="34">pwdBuf<pos:position pos:line="39" pos:column="40"/></name><index pos:line="39" pos:column="40">[<expr><literal type="number" pos:line="39" pos:column="41">1<pos:position pos:line="39" pos:column="42"/></literal></expr>]<pos:position pos:line="39" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">pwdBufLen<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-<pos:position pos:line="39" pos:column="55"/></operator><literal type="number" pos:line="39" pos:column="55">1<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>  <comment type="block" pos:line="39" pos:column="60">/* skip digest tag and include null */</comment>
                }<pos:position pos:line="40" pos:column="18"/></block></then> <else pos:line="40" pos:column="19">else <block pos:line="40" pos:column="24">{
                    <expr_stmt><expr><name pos:line="41" pos:column="21">err<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">LDAP_NO_MEMORY<pos:position pos:line="41" pos:column="41"/></name></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="42" pos:column="18"/></block></else></if>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">pwdBuf<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">!=<pos:position pos:line="47" pos:column="18"/></operator> <name pos:line="47" pos:column="19">NULL<pos:position pos:line="47" pos:column="23"/></name></expr>)<pos:position pos:line="47" pos:column="24"/></condition><then pos:line="47" pos:column="24"> <block pos:line="47" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">memset<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">pwdBuf<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">bufferLen<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">free<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><name pos:line="49" pos:column="14">pwdBuf<pos:position pos:line="49" pos:column="20"/></name></expr></argument>)<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">err<pos:position pos:line="52" pos:column="15"/></name></expr>;<pos:position pos:line="52" pos:column="16"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

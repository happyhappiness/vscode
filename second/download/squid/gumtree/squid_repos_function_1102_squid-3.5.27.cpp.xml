<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1102_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_cachedir<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">StoreEntry<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">entry<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">name<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="53">SquidConfig<pos:position pos:line="2" pos:column="64"/></name><operator pos:line="2" pos:column="64">::<pos:position pos:line="2" pos:column="66"/></operator><name pos:line="2" pos:column="66">_cacheSwap<pos:position pos:line="2" pos:column="76"/></name></name></type> <name pos:line="2" pos:column="77">swap<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SwapDir<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">s<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">entry<pos:position pos:line="6" pos:column="18"/></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name><name pos:line="8" pos:column="21">swap<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">n_configured<pos:position pos:line="8" pos:column="38"/></name></name></expr>;<pos:position pos:line="8" pos:column="39"/></condition> <incr><expr><operator pos:line="8" pos:column="40">++<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">i<pos:position pos:line="8" pos:column="43"/></name></expr></incr>)<pos:position pos:line="8" pos:column="44"/></control> <block pos:line="8" pos:column="45">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">s<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <cast type="dynamic" pos:line="9" pos:column="13">dynamic_cast<argument_list type="generic" pos:line="9" pos:column="25">&lt;<argument><expr><name pos:line="9" pos:column="26">SwapDir<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="39"/></argument_list><argument_list pos:line="9" pos:column="36">(<argument><expr><name><name pos:line="9" pos:column="37">swap<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">.<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">swapDirs<pos:position pos:line="9" pos:column="50"/></name><index pos:line="9" pos:column="50">[<expr><name pos:line="9" pos:column="51">i<pos:position pos:line="9" pos:column="52"/></name></expr>]<pos:position pos:line="9" pos:column="53"/></index></name><operator pos:line="9" pos:column="53">.<pos:position pos:line="9" pos:column="54"/></operator><call><name pos:line="9" pos:column="54">getRaw<pos:position pos:line="9" pos:column="60"/></name><argument_list pos:line="9" pos:column="60">()<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></cast></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">s<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16"> <block type="pseudo"><continue pos:line="10" pos:column="17">continue;<pos:position pos:line="10" pos:column="26"/></continue></block></then></if>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">storeAppendPrintf<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">entry<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"%s %s %s"<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">name<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><call><name><name pos:line="11" pos:column="52">s<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">type<pos:position pos:line="11" pos:column="59"/></name></name><argument_list pos:line="11" pos:column="59">()<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="63">s<pos:position pos:line="11" pos:column="64"/></name><operator pos:line="11" pos:column="64">-&gt;<pos:position pos:line="11" pos:column="69"/></operator><name pos:line="11" pos:column="66">path<pos:position pos:line="11" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">dump<pos:position pos:line="12" pos:column="16"/></name></name><argument_list pos:line="12" pos:column="16">(<argument><expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">entry<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">storeAppendPrintf<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">entry<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"\n"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></for>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

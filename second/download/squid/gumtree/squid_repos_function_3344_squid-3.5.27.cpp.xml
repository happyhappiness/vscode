<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3344_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">HttpRequest<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">urnParse<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">HttpRequestMethod<pos:position pos:line="2" pos:column="33"/></name><modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="35">method<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">urn<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">HttpRequest<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">request<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">50<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"urnParse: "<pos:position pos:line="4" pos:column="31"/></literal> <operator pos:line="4" pos:column="32">&lt;&lt;<pos:position pos:line="4" pos:column="40"/></operator> <name pos:line="4" pos:column="35">urn<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">request<pos:position pos:line="5" pos:column="16"/></name></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17"> <block pos:line="5" pos:column="18">{
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">request<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">initHTTP<pos:position pos:line="6" pos:column="26"/></name></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">method<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="35">AnyP<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">::<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">PROTO_URN<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="52">urn<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">+<pos:position pos:line="6" pos:column="57"/></operator> <literal type="number" pos:line="6" pos:column="58">4<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">safe_free<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name><name pos:line="7" pos:column="19">request<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">canonical<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">request<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">new<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">HttpRequest<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">method<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="36">AnyP<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">::<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">PROTO_URN<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">urn<pos:position pos:line="11" pos:column="56"/></name> <operator pos:line="11" pos:column="57">+<pos:position pos:line="11" pos:column="58"/></operator> <literal type="number" pos:line="11" pos:column="59">4<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

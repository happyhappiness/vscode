<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3474_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">maybeMakeSpaceAvailable<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">getAvailableBufferLength<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">()<pos:position pos:line="4" pos:column="35"/></argument_list></call> <operator pos:line="4" pos:column="36">&lt;<pos:position pos:line="4" pos:column="40"/></operator> <literal type="number" pos:line="4" pos:column="38">2<pos:position pos:line="4" pos:column="39"/></literal></expr>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <block pos:line="4" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">newSize<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">in<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">allocatedSize<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">&gt;=<pos:position pos:line="6" pos:column="35"/></operator> <name><name pos:line="6" pos:column="33">Config<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">maxRequestBufferSize<pos:position pos:line="6" pos:column="60"/></name></name></expr>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61"> <block pos:line="6" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">debugs<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="number" pos:line="7" pos:column="20">33<pos:position pos:line="7" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="24">4<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"request buffer full: client_request_buffer_max_size="<pos:position pos:line="7" pos:column="81"/></literal> <operator pos:line="7" pos:column="82">&lt;&lt;<pos:position pos:line="7" pos:column="90"/></operator> <name><name pos:line="7" pos:column="85">Config<pos:position pos:line="7" pos:column="91"/></name><operator pos:line="7" pos:column="91">.<pos:position pos:line="7" pos:column="92"/></operator><name pos:line="7" pos:column="92">maxRequestBufferSize<pos:position pos:line="7" pos:column="112"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="114"/></expr_stmt>
            <return pos:line="8" pos:column="13">return <expr><literal type="boolean" pos:line="8" pos:column="20">false<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">newSize<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator><name><name pos:line="10" pos:column="22">in<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">allocatedSize<pos:position pos:line="10" pos:column="38"/></name></name> <operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="41">2<pos:position pos:line="10" pos:column="42"/></literal><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator> <operator pos:line="10" pos:column="44">&gt;<pos:position pos:line="10" pos:column="48"/></operator> <name><name pos:line="10" pos:column="46">Config<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">.<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="53">maxRequestBufferSize<pos:position pos:line="10" pos:column="73"/></name></name></expr>)<pos:position pos:line="10" pos:column="74"/></condition><then pos:line="10" pos:column="74"> <block pos:line="10" pos:column="75">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">newSize<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator><name><name pos:line="11" pos:column="21">Config<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">maxRequestBufferSize<pos:position pos:line="11" pos:column="48"/></name></name></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">in<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">buf<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">char<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator><call><name pos:line="13" pos:column="26">memReallocBuf<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name><name pos:line="13" pos:column="40">in<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">.<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">buf<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">newSize<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="57">&amp;<pos:position pos:line="13" pos:column="62"/></operator><name><name pos:line="13" pos:column="58">in<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">.<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="61">allocatedSize<pos:position pos:line="13" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">33<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">2<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"growing request buffer: notYetUsed="<pos:position pos:line="14" pos:column="60"/></literal> <operator pos:line="14" pos:column="61">&lt;&lt;<pos:position pos:line="14" pos:column="69"/></operator> <name><name pos:line="14" pos:column="64">in<pos:position pos:line="14" pos:column="66"/></name><operator pos:line="14" pos:column="66">.<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="67">notYetUsed<pos:position pos:line="14" pos:column="77"/></name></name> <operator pos:line="14" pos:column="78">&lt;&lt;<pos:position pos:line="14" pos:column="86"/></operator> <literal type="string" pos:line="14" pos:column="81">" size="<pos:position pos:line="14" pos:column="89"/></literal> <operator pos:line="14" pos:column="90">&lt;&lt;<pos:position pos:line="14" pos:column="98"/></operator> <name><name pos:line="14" pos:column="93">in<pos:position pos:line="14" pos:column="95"/></name><operator pos:line="14" pos:column="95">.<pos:position pos:line="14" pos:column="96"/></operator><name pos:line="14" pos:column="96">allocatedSize<pos:position pos:line="14" pos:column="109"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="111"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <return pos:line="16" pos:column="5">return <expr><literal type="boolean" pos:line="16" pos:column="12">true<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

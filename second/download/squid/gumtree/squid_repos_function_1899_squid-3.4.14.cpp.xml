<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1899_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">checkDepend<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name><name pos:line="2" pos:column="19">std<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">string<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">&amp;<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="32">directive<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">name<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <name pos:line="2" pos:column="67">TypeList<pos:position pos:line="2" pos:column="75"/></name> <modifier pos:line="2" pos:column="76">&amp;<pos:position pos:line="2" pos:column="81"/></modifier></type><name pos:line="2" pos:column="77">types<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="84">const<pos:position pos:line="2" pos:column="89"/></specifier> <name pos:line="2" pos:column="90">EntryList<pos:position pos:line="2" pos:column="99"/></name> <modifier pos:line="2" pos:column="100">&amp;<pos:position pos:line="2" pos:column="105"/></modifier></type><name pos:line="2" pos:column="101">entries<pos:position pos:line="2" pos:column="108"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="109"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">TypeList<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">const_iterator<pos:position pos:line="4" pos:column="34"/></name></name></type> <name pos:line="4" pos:column="35">t<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><call><name><name pos:line="4" pos:column="39">types<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">.<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">begin<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></init> <condition><expr><name pos:line="4" pos:column="54">t<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">!=<pos:position pos:line="4" pos:column="58"/></operator> <call><name><name pos:line="4" pos:column="59">types<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">.<pos:position pos:line="4" pos:column="65"/></operator><name pos:line="4" pos:column="65">end<pos:position pos:line="4" pos:column="68"/></name></name><argument_list pos:line="4" pos:column="68">()<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="71"/></condition> <incr><expr><operator pos:line="4" pos:column="72">++<pos:position pos:line="4" pos:column="74"/></operator><name pos:line="4" pos:column="74">t<pos:position pos:line="4" pos:column="75"/></name></expr></incr>)<pos:position pos:line="4" pos:column="76"/></control> <block pos:line="4" pos:column="77">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name><name pos:line="5" pos:column="13">t<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">name<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">.<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">compare<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">name<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call> <operator pos:line="5" pos:column="35">!=<pos:position pos:line="5" pos:column="37"/></operator> <literal type="number" pos:line="5" pos:column="38">0<pos:position pos:line="5" pos:column="39"/></literal></expr>)<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40">
            <block type="pseudo"><continue pos:line="6" pos:column="13">continue;<pos:position pos:line="6" pos:column="22"/></continue></block></then></if>
        <for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><decl><type><name><name pos:line="7" pos:column="14">TypeDepList<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">::<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">const_iterator<pos:position pos:line="7" pos:column="41"/></name></name></type> <name pos:line="7" pos:column="42">dep<pos:position pos:line="7" pos:column="45"/></name> <init pos:line="7" pos:column="46">= <expr><call><name><name pos:line="7" pos:column="48">t<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">depend<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">.<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="58">begin<pos:position pos:line="7" pos:column="63"/></name></name><argument_list pos:line="7" pos:column="63">()<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></init> <condition><expr><name pos:line="7" pos:column="67">dep<pos:position pos:line="7" pos:column="70"/></name> <operator pos:line="7" pos:column="71">!=<pos:position pos:line="7" pos:column="73"/></operator> <call><name><name pos:line="7" pos:column="74">t<pos:position pos:line="7" pos:column="75"/></name><operator pos:line="7" pos:column="75">-&gt;<pos:position pos:line="7" pos:column="80"/></operator><name pos:line="7" pos:column="77">depend<pos:position pos:line="7" pos:column="83"/></name><operator pos:line="7" pos:column="83">.<pos:position pos:line="7" pos:column="84"/></operator><name pos:line="7" pos:column="84">end<pos:position pos:line="7" pos:column="87"/></name></name><argument_list pos:line="7" pos:column="87">()<pos:position pos:line="7" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="90"/></condition> <incr><expr><operator pos:line="7" pos:column="91">++<pos:position pos:line="7" pos:column="93"/></operator><name pos:line="7" pos:column="93">dep<pos:position pos:line="7" pos:column="96"/></name></expr></incr>)<pos:position pos:line="7" pos:column="97"/></control> <block pos:line="7" pos:column="98">{
            <decl_stmt><decl><type><name><name pos:line="8" pos:column="13">EntryList<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">::<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">const_iterator<pos:position pos:line="8" pos:column="38"/></name></name></type> <name pos:line="8" pos:column="39">entry<pos:position pos:line="8" pos:column="44"/></name> <init pos:line="8" pos:column="45">= <expr><call><name><name pos:line="8" pos:column="47">entries<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">.<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="55">begin<pos:position pos:line="8" pos:column="60"/></name></name><argument_list pos:line="8" pos:column="60">()<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>
            <for pos:line="9" pos:column="13">for <control pos:line="9" pos:column="17">(<init pos:line="9" pos:column="18">;<pos:position pos:line="9" pos:column="19"/></init> <condition><expr><name pos:line="9" pos:column="20">entry<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">!=<pos:position pos:line="9" pos:column="28"/></operator> <call><name><name pos:line="9" pos:column="29">entries<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">end<pos:position pos:line="9" pos:column="40"/></name></name><argument_list pos:line="9" pos:column="40">()<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></condition> <incr><expr><operator pos:line="9" pos:column="44">++<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">entry<pos:position pos:line="9" pos:column="51"/></name></expr></incr>)<pos:position pos:line="9" pos:column="52"/></control> <block pos:line="9" pos:column="53">{
                <if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name><name pos:line="10" pos:column="21">entry<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">name<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">compare<pos:position pos:line="10" pos:column="40"/></name></name><argument_list pos:line="10" pos:column="40">(<argument><expr><operator pos:line="10" pos:column="41">*<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">dep<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call> <operator pos:line="10" pos:column="47">==<pos:position pos:line="10" pos:column="49"/></operator> <literal type="number" pos:line="10" pos:column="50">0<pos:position pos:line="10" pos:column="51"/></literal></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52">
                    <block type="pseudo"><break pos:line="11" pos:column="21">break;<pos:position pos:line="11" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="12" pos:column="14"/></block></for>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">entry<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">==<pos:position pos:line="13" pos:column="25"/></operator> <call><name><name pos:line="13" pos:column="26">entries<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">end<pos:position pos:line="13" pos:column="37"/></name></name><argument_list pos:line="13" pos:column="37">()<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <block pos:line="13" pos:column="41">{
                <expr_stmt><expr><name><name pos:line="14" pos:column="17">std<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">::<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">cerr<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">&lt;&lt;<pos:position pos:line="14" pos:column="35"/></operator> <literal type="string" pos:line="14" pos:column="30">"ERROR: '"<pos:position pos:line="14" pos:column="40"/></literal> <operator pos:line="14" pos:column="41">&lt;&lt;<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="44">directive<pos:position pos:line="14" pos:column="53"/></name> <operator pos:line="14" pos:column="54">&lt;&lt;<pos:position pos:line="14" pos:column="62"/></operator> <literal type="string" pos:line="14" pos:column="57">"' ("<pos:position pos:line="14" pos:column="62"/></literal> <operator pos:line="14" pos:column="63">&lt;&lt;<pos:position pos:line="14" pos:column="71"/></operator> <name pos:line="14" pos:column="66">name<pos:position pos:line="14" pos:column="70"/></name> <operator pos:line="14" pos:column="71">&lt;&lt;<pos:position pos:line="14" pos:column="79"/></operator> <literal type="string" pos:line="14" pos:column="74">") depends on '"<pos:position pos:line="14" pos:column="90"/></literal> <operator pos:line="14" pos:column="91">&lt;&lt;<pos:position pos:line="14" pos:column="99"/></operator> <operator pos:line="14" pos:column="94">*<pos:position pos:line="14" pos:column="95"/></operator><name pos:line="14" pos:column="95">dep<pos:position pos:line="14" pos:column="98"/></name> <operator pos:line="14" pos:column="99">&lt;&lt;<pos:position pos:line="14" pos:column="107"/></operator> <literal type="string" pos:line="14" pos:column="102">"'\n"<pos:position pos:line="14" pos:column="107"/></literal></expr>;<pos:position pos:line="14" pos:column="108"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="15" pos:column="17">exit<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
        }<pos:position pos:line="17" pos:column="10"/></block></for>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">std<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">::<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">cerr<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">&lt;&lt;<pos:position pos:line="20" pos:column="23"/></operator> <literal type="string" pos:line="20" pos:column="18">"ERROR: Dependencies for cf.data type '"<pos:position pos:line="20" pos:column="58"/></literal> <operator pos:line="20" pos:column="59">&lt;&lt;<pos:position pos:line="20" pos:column="67"/></operator> <name pos:line="20" pos:column="62">name<pos:position pos:line="20" pos:column="66"/></name> <operator pos:line="20" pos:column="67">&lt;&lt;<pos:position pos:line="20" pos:column="75"/></operator> <literal type="string" pos:line="20" pos:column="70">"' used in ' "<pos:position pos:line="20" pos:column="84"/></literal> <operator pos:line="20" pos:column="85">&lt;&lt;<pos:position pos:line="20" pos:column="93"/></operator> <name pos:line="20" pos:column="88">directive<pos:position pos:line="20" pos:column="97"/></name> <operator pos:line="20" pos:column="98">&lt;&lt;<pos:position pos:line="20" pos:column="106"/></operator> <literal type="string" pos:line="20" pos:column="101">"' not defined\n"<pos:position pos:line="20" pos:column="118"/></literal></expr> ;<pos:position pos:line="20" pos:column="120"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">exit<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><literal type="number" pos:line="21" pos:column="10">1<pos:position pos:line="21" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

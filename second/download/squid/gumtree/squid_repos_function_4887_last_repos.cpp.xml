<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4887_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">RequestParser<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">parseUriField<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name><name pos:line="2" pos:column="41">Http1<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">Tokenizer<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">&amp;<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="59">tok<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Arbitrary 64KB URI upper length limit.
     *
     * Not quite as arbitrary as it seems though. Old SquidString objects
     * cannot store strings larger than 64KB, so we must limit until they
     * have all been replaced with SBuf.
     *
     * Not that it matters but RFC 7230 section 3.1.1 requires (RECOMMENDED)
     * at least 8000 octets for the whole line, including method and version.
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">size_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">maxUriLength<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><cast type="static" pos:line="13" pos:column="33">static_cast<argument_list type="generic" pos:line="13" pos:column="44">&lt;<argument><expr><name pos:line="13" pos:column="45">size_t<pos:position pos:line="13" pos:column="51"/></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="55"/></argument_list><argument_list pos:line="13" pos:column="52">(<argument><expr><operator pos:line="13" pos:column="53">(<pos:position pos:line="13" pos:column="54"/></operator><literal type="number" pos:line="13" pos:column="54">64<pos:position pos:line="13" pos:column="56"/></literal><operator pos:line="13" pos:column="56">*<pos:position pos:line="13" pos:column="57"/></operator><literal type="number" pos:line="13" pos:column="57">1024<pos:position pos:line="13" pos:column="61"/></literal><operator pos:line="13" pos:column="61">)<pos:position pos:line="13" pos:column="62"/></operator><operator pos:line="13" pos:column="62">-<pos:position pos:line="13" pos:column="63"/></operator><literal type="number" pos:line="13" pos:column="63">1<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="13" pos:column="66"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">SBuf<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">uriFound<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name><name pos:line="16" pos:column="10">tok<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">prefix<pos:position pos:line="16" pos:column="20"/></name></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">uriFound<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="31">RequestTargetCharacters<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">()<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="58"/></condition><then pos:line="16" pos:column="58"> <block pos:line="16" pos:column="59">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">parseStatusCode<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name><name pos:line="17" pos:column="27">Http<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">::<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">scBadRequest<pos:position pos:line="17" pos:column="45"/></name></name></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">33<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="20">ErrorLevel<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">()<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"invalid request-line: missing or malformed URI"<pos:position pos:line="18" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="84"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><literal type="boolean" pos:line="19" pos:column="16">false<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name><name pos:line="22" pos:column="9">uriFound<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">length<pos:position pos:line="22" pos:column="24"/></name></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call> <operator pos:line="22" pos:column="27">&gt;<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="29">maxUriLength<pos:position pos:line="22" pos:column="41"/></name></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42"> <block pos:line="22" pos:column="43">{
        <comment type="line" pos:line="23" pos:column="9">// RFC 7230 section 3.1.1 mandatory (MUST) 414 response</comment>
        <expr_stmt><expr><name pos:line="24" pos:column="9">parseStatusCode<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name><name pos:line="24" pos:column="27">Http<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">::<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">scUriTooLong<pos:position pos:line="24" pos:column="45"/></name></name></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">33<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="20">ErrorLevel<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">()<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="34">"invalid request-line: "<pos:position pos:line="25" pos:column="58"/></literal> <operator pos:line="25" pos:column="59">&lt;&lt;<pos:position pos:line="25" pos:column="67"/></operator> <call><name><name pos:line="25" pos:column="62">uriFound<pos:position pos:line="25" pos:column="70"/></name><operator pos:line="25" pos:column="70">.<pos:position pos:line="25" pos:column="71"/></operator><name pos:line="25" pos:column="71">length<pos:position pos:line="25" pos:column="77"/></name></name><argument_list pos:line="25" pos:column="77">()<pos:position pos:line="25" pos:column="79"/></argument_list></call> <operator pos:line="25" pos:column="80">&lt;&lt;<pos:position pos:line="25" pos:column="88"/></operator>
               <literal type="string" pos:line="26" pos:column="16">"-byte URI exceeds "<pos:position pos:line="26" pos:column="36"/></literal> <operator pos:line="26" pos:column="37">&lt;&lt;<pos:position pos:line="26" pos:column="45"/></operator> <name pos:line="26" pos:column="40">maxUriLength<pos:position pos:line="26" pos:column="52"/></name> <operator pos:line="26" pos:column="53">&lt;&lt;<pos:position pos:line="26" pos:column="61"/></operator> <literal type="string" pos:line="26" pos:column="56">"-byte limit"<pos:position pos:line="26" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><literal type="boolean" pos:line="27" pos:column="16">false<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="30" pos:column="5">uri_<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <name pos:line="30" pos:column="12">uriFound<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><literal type="boolean" pos:line="31" pos:column="12">true<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

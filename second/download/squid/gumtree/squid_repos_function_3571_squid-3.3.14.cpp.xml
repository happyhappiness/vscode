<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3571_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ConnStateData<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">buildSslCertGenerationParams<pos:position pos:line="1" pos:column="49"/></name></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name><name pos:line="1" pos:column="50">Ssl<pos:position pos:line="1" pos:column="53"/></name><operator pos:line="1" pos:column="53">::<pos:position pos:line="1" pos:column="55"/></operator><name pos:line="1" pos:column="55">CertificateProperties<pos:position pos:line="1" pos:column="76"/></name></name> <modifier pos:line="1" pos:column="77">&amp;<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="78">certProperties<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="93"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="3" pos:column="5">certProperties<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">.<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">commonName<pos:position pos:line="3" pos:column="30"/></name></name> <operator pos:line="3" pos:column="31">=<pos:position pos:line="3" pos:column="32"/></operator>  <ternary><condition><expr><call><name><name pos:line="3" pos:column="34">sslCommonName<pos:position pos:line="3" pos:column="47"/></name><operator pos:line="3" pos:column="47">.<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="48">defined<pos:position pos:line="3" pos:column="55"/></name></name><argument_list pos:line="3" pos:column="55">()<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr> ?<pos:position pos:line="3" pos:column="59"/></condition><then pos:line="3" pos:column="59"> <expr><call><name><name pos:line="3" pos:column="60">sslCommonName<pos:position pos:line="3" pos:column="73"/></name><operator pos:line="3" pos:column="73">.<pos:position pos:line="3" pos:column="74"/></operator><name pos:line="3" pos:column="74">termedBuf<pos:position pos:line="3" pos:column="83"/></name></name><argument_list pos:line="3" pos:column="83">()<pos:position pos:line="3" pos:column="85"/></argument_list></call></expr> <pos:position pos:line="3" pos:column="86"/></then><else pos:line="3" pos:column="86">: <expr><call><name><name pos:line="3" pos:column="88">sslConnectHostOrIp<pos:position pos:line="3" pos:column="106"/></name><operator pos:line="3" pos:column="106">.<pos:position pos:line="3" pos:column="107"/></operator><name pos:line="3" pos:column="107">termedBuf<pos:position pos:line="3" pos:column="116"/></name></name><argument_list pos:line="3" pos:column="116">()<pos:position pos:line="3" pos:column="118"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="119"/></expr_stmt>

    <comment type="line" pos:line="5" pos:column="5">// fake certificate adaptation requires bump-server-first mode</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">sslServerBump<pos:position pos:line="6" pos:column="23"/></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><call><name><name pos:line="7" pos:column="16">port<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">signingCert<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">get<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">certProperties<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">signWithX509<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">.<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">resetAndLock<pos:position pos:line="8" pos:column="49"/></name></name><argument_list pos:line="8" pos:column="49">(<argument><expr><call><name><name pos:line="8" pos:column="50">port<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">signingCert<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">.<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="68">get<pos:position pos:line="8" pos:column="71"/></name></name><argument_list pos:line="8" pos:column="71">()<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name><name pos:line="9" pos:column="13">port<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">signPkey<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">get<pos:position pos:line="9" pos:column="31"/></name></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="13">certProperties<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">signWithPkey<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">resetAndLock<pos:position pos:line="10" pos:column="53"/></name></name><argument_list pos:line="10" pos:column="53">(<argument><expr><call><name><name pos:line="10" pos:column="54">port<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">signPkey<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">.<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="69">get<pos:position pos:line="10" pos:column="72"/></name></name><argument_list pos:line="10" pos:column="72">()<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">certProperties<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">signAlgorithm<pos:position pos:line="11" pos:column="37"/></name></name> <operator pos:line="11" pos:column="38">=<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="40">Ssl<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">::<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">algSignTrusted<pos:position pos:line="11" pos:column="59"/></name></name></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="15" pos:column="5">// In case of an error while connecting to the secure server, use a fake</comment>
    <comment type="line" pos:line="16" pos:column="5">// trusted certificate, with no mimicked fields and no adaptation</comment>
    <comment type="line" pos:line="17" pos:column="5">// algorithms. There is nothing we can mimic so we want to minimize the</comment>
    <comment type="line" pos:line="18" pos:column="5">// number of warnings the user will have to see to get to the error page.</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">sslServerBump<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">entry<pos:position pos:line="19" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name><name pos:line="20" pos:column="9">sslServerBump<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">entry<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">isEmpty<pos:position pos:line="20" pos:column="38"/></name></name><argument_list pos:line="20" pos:column="38">()<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<decl><type><name pos:line="21" pos:column="13">X509<pos:position pos:line="21" pos:column="17"/></name> <modifier pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></modifier></type><name pos:line="21" pos:column="19">mimicCert<pos:position pos:line="21" pos:column="28"/></name> <init pos:line="21" pos:column="29">= <expr><call><name><name pos:line="21" pos:column="31">sslServerBump<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">serverCert<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">.<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">get<pos:position pos:line="21" pos:column="60"/></name></name><argument_list pos:line="21" pos:column="60">()<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr></init></decl>)<pos:position pos:line="21" pos:column="63"/></condition><then pos:line="21" pos:column="63">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="22" pos:column="13">certProperties<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">.<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">mimicCert<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">resetAndLock<pos:position pos:line="22" pos:column="50"/></name></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">mimicCert<pos:position pos:line="22" pos:column="60"/></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt></block></then></if>

        <decl_stmt><decl><type><name pos:line="24" pos:column="9">ACLFilledChecklist<pos:position pos:line="24" pos:column="27"/></name></type> <name pos:line="24" pos:column="28">checklist<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">NULL<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="44">sslServerBump<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">request<pos:position pos:line="24" pos:column="66"/></name></name></expr></argument>,
                                     <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="38">clientConnection<pos:position pos:line="25" pos:column="54"/></name> <operator pos:line="25" pos:column="55">!=<pos:position pos:line="25" pos:column="57"/></operator> <name pos:line="25" pos:column="58">NULL<pos:position pos:line="25" pos:column="62"/></name></expr> ?<pos:position pos:line="25" pos:column="64"/></condition><then pos:line="25" pos:column="64"> <expr><name><name pos:line="25" pos:column="65">clientConnection<pos:position pos:line="25" pos:column="81"/></name><operator pos:line="25" pos:column="81">-&gt;<pos:position pos:line="25" pos:column="86"/></operator><name pos:line="25" pos:column="83">rfc931<pos:position pos:line="25" pos:column="89"/></name></name></expr> <pos:position pos:line="25" pos:column="90"/></then><else pos:line="25" pos:column="90">: <expr><name pos:line="25" pos:column="92">dash_str<pos:position pos:line="25" pos:column="100"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="101"/></argument_list></decl>;<pos:position pos:line="25" pos:column="102"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">checklist<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">sslErrors<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">cbdataReference<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name><name pos:line="26" pos:column="47">sslServerBump<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">-&gt;<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="62">sslErrors<pos:position pos:line="26" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt>

        <for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><decl><type><name pos:line="28" pos:column="14">sslproxy_cert_adapt<pos:position pos:line="28" pos:column="33"/></name> <modifier pos:line="28" pos:column="34">*<pos:position pos:line="28" pos:column="35"/></modifier></type><name pos:line="28" pos:column="35">ca<pos:position pos:line="28" pos:column="37"/></name> <init pos:line="28" pos:column="38">= <expr><name><name pos:line="28" pos:column="40">Config<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">.<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">ssl_client<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">.<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">cert_adapt<pos:position pos:line="28" pos:column="68"/></name></name></expr></init></decl>;<pos:position pos:line="28" pos:column="69"/></init> <condition><expr><name pos:line="28" pos:column="70">ca<pos:position pos:line="28" pos:column="72"/></name> <operator pos:line="28" pos:column="73">!=<pos:position pos:line="28" pos:column="75"/></operator> <name pos:line="28" pos:column="76">NULL<pos:position pos:line="28" pos:column="80"/></name></expr>;<pos:position pos:line="28" pos:column="81"/></condition> <incr><expr><name pos:line="28" pos:column="82">ca<pos:position pos:line="28" pos:column="84"/></name> <operator pos:line="28" pos:column="85">=<pos:position pos:line="28" pos:column="86"/></operator> <name><name pos:line="28" pos:column="87">ca<pos:position pos:line="28" pos:column="89"/></name><operator pos:line="28" pos:column="89">-&gt;<pos:position pos:line="28" pos:column="94"/></operator><name pos:line="28" pos:column="91">next<pos:position pos:line="28" pos:column="95"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="96"/></control> <block pos:line="28" pos:column="97">{
            <comment type="line" pos:line="29" pos:column="13">// If the algorithm already set, then ignore it.</comment>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><operator pos:line="30" pos:column="17">(<pos:position pos:line="30" pos:column="18"/></operator><name><name pos:line="30" pos:column="18">ca<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">alg<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">==<pos:position pos:line="30" pos:column="28"/></operator> <name><name pos:line="30" pos:column="29">Ssl<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">::<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">algSetCommonName<pos:position pos:line="30" pos:column="50"/></name></name> <operator pos:line="30" pos:column="51">&amp;&amp;<pos:position pos:line="30" pos:column="61"/></operator> <name><name pos:line="30" pos:column="54">certProperties<pos:position pos:line="30" pos:column="68"/></name><operator pos:line="30" pos:column="68">.<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="69">setCommonName<pos:position pos:line="30" pos:column="82"/></name></name><operator pos:line="30" pos:column="82">)<pos:position pos:line="30" pos:column="83"/></operator> <operator pos:line="30" pos:column="84">||<pos:position pos:line="30" pos:column="86"/></operator>
                    <operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name><name pos:line="31" pos:column="22">ca<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">alg<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">==<pos:position pos:line="31" pos:column="32"/></operator> <name><name pos:line="31" pos:column="33">Ssl<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">::<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">algSetValidAfter<pos:position pos:line="31" pos:column="54"/></name></name> <operator pos:line="31" pos:column="55">&amp;&amp;<pos:position pos:line="31" pos:column="65"/></operator> <name><name pos:line="31" pos:column="58">certProperties<pos:position pos:line="31" pos:column="72"/></name><operator pos:line="31" pos:column="72">.<pos:position pos:line="31" pos:column="73"/></operator><name pos:line="31" pos:column="73">setValidAfter<pos:position pos:line="31" pos:column="86"/></name></name><operator pos:line="31" pos:column="86">)<pos:position pos:line="31" pos:column="87"/></operator> <operator pos:line="31" pos:column="88">||<pos:position pos:line="31" pos:column="90"/></operator>
                    <operator pos:line="32" pos:column="21">(<pos:position pos:line="32" pos:column="22"/></operator><name><name pos:line="32" pos:column="22">ca<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">alg<pos:position pos:line="32" pos:column="29"/></name></name> <operator pos:line="32" pos:column="30">==<pos:position pos:line="32" pos:column="32"/></operator> <name><name pos:line="32" pos:column="33">Ssl<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">::<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">algSetValidBefore<pos:position pos:line="32" pos:column="55"/></name></name> <operator pos:line="32" pos:column="56">&amp;&amp;<pos:position pos:line="32" pos:column="66"/></operator> <name><name pos:line="32" pos:column="59">certProperties<pos:position pos:line="32" pos:column="73"/></name><operator pos:line="32" pos:column="73">.<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="74">setValidBefore<pos:position pos:line="32" pos:column="88"/></name></name><operator pos:line="32" pos:column="88">)<pos:position pos:line="32" pos:column="89"/></operator></expr> )<pos:position pos:line="32" pos:column="91"/></condition><then pos:line="32" pos:column="91">
                <block type="pseudo"><continue pos:line="33" pos:column="17">continue;<pos:position pos:line="33" pos:column="26"/></continue></block></then></if>

            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name><name pos:line="35" pos:column="17">ca<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">aclList<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">&amp;&amp;<pos:position pos:line="35" pos:column="39"/></operator> <call><name><name pos:line="35" pos:column="32">checklist<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">.<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">fastCheck<pos:position pos:line="35" pos:column="51"/></name></name><argument_list pos:line="35" pos:column="51">(<argument><expr><name><name pos:line="35" pos:column="52">ca<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">aclList<pos:position pos:line="35" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call> <operator pos:line="35" pos:column="65">==<pos:position pos:line="35" pos:column="67"/></operator> <name pos:line="35" pos:column="68">ACCESS_ALLOWED<pos:position pos:line="35" pos:column="82"/></name></expr>)<pos:position pos:line="35" pos:column="83"/></condition><then pos:line="35" pos:column="83"> <block pos:line="35" pos:column="84">{
                <decl_stmt><decl><type><specifier pos:line="36" pos:column="17">const<pos:position pos:line="36" pos:column="22"/></specifier> <name pos:line="36" pos:column="23">char<pos:position pos:line="36" pos:column="27"/></name> <modifier pos:line="36" pos:column="28">*<pos:position pos:line="36" pos:column="29"/></modifier></type><name pos:line="36" pos:column="29">alg<pos:position pos:line="36" pos:column="32"/></name> <init pos:line="36" pos:column="33">= <expr><name><name pos:line="36" pos:column="35">Ssl<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">::<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">CertAdaptAlgorithmStr<pos:position pos:line="36" pos:column="61"/></name><index pos:line="36" pos:column="61">[<expr><name><name pos:line="36" pos:column="62">ca<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">alg<pos:position pos:line="36" pos:column="69"/></name></name></expr>]<pos:position pos:line="36" pos:column="70"/></index></name></expr></init></decl>;<pos:position pos:line="36" pos:column="71"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="37" pos:column="17">const<pos:position pos:line="37" pos:column="22"/></specifier> <name pos:line="37" pos:column="23">char<pos:position pos:line="37" pos:column="27"/></name> <modifier pos:line="37" pos:column="28">*<pos:position pos:line="37" pos:column="29"/></modifier></type><name pos:line="37" pos:column="29">param<pos:position pos:line="37" pos:column="34"/></name> <init pos:line="37" pos:column="35">= <expr><name><name pos:line="37" pos:column="37">ca<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">param<pos:position pos:line="37" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="37" pos:column="47"/></decl_stmt>

                <comment type="line" pos:line="39" pos:column="17">// For parameterless CN adaptation, use hostname from the</comment>
                <comment type="line" pos:line="40" pos:column="17">// CONNECT request.</comment>
                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">ca<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">alg<pos:position pos:line="41" pos:column="28"/></name></name> <operator pos:line="41" pos:column="29">==<pos:position pos:line="41" pos:column="31"/></operator> <name><name pos:line="41" pos:column="32">Ssl<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">::<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">algSetCommonName<pos:position pos:line="41" pos:column="53"/></name></name></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54"> <block pos:line="41" pos:column="55">{
                    <if pos:line="42" pos:column="21">if <condition pos:line="42" pos:column="24">(<expr><operator pos:line="42" pos:column="25">!<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">param<pos:position pos:line="42" pos:column="31"/></name></expr>)<pos:position pos:line="42" pos:column="32"/></condition><then pos:line="42" pos:column="32">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="25">param<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <call><name><name pos:line="43" pos:column="33">sslConnectHostOrIp<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">.<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="52">termedBuf<pos:position pos:line="43" pos:column="61"/></name></name><argument_list pos:line="43" pos:column="61">()<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name><name pos:line="44" pos:column="21">certProperties<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">.<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">commonName<pos:position pos:line="44" pos:column="46"/></name></name> <operator pos:line="44" pos:column="47">=<pos:position pos:line="44" pos:column="48"/></operator> <name pos:line="44" pos:column="49">param<pos:position pos:line="44" pos:column="54"/></name></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="45" pos:column="21">certProperties<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">.<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="36">setCommonName<pos:position pos:line="45" pos:column="49"/></name></name> <operator pos:line="45" pos:column="50">=<pos:position pos:line="45" pos:column="51"/></operator> <literal type="boolean" pos:line="45" pos:column="52">true<pos:position pos:line="45" pos:column="56"/></literal></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="46" pos:column="18"/></block></then> <elseif pos:line="46" pos:column="19">else <if pos:line="46" pos:column="24">if <condition pos:line="46" pos:column="27">(<expr><name><name pos:line="46" pos:column="28">ca<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">alg<pos:position pos:line="46" pos:column="35"/></name></name> <operator pos:line="46" pos:column="36">==<pos:position pos:line="46" pos:column="38"/></operator> <name><name pos:line="46" pos:column="39">Ssl<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">::<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="44">algSetValidAfter<pos:position pos:line="46" pos:column="60"/></name></name></expr>)<pos:position pos:line="46" pos:column="61"/></condition><then pos:line="46" pos:column="61">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="21">certProperties<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">.<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">setValidAfter<pos:position pos:line="47" pos:column="49"/></name></name> <operator pos:line="47" pos:column="50">=<pos:position pos:line="47" pos:column="51"/></operator> <literal type="boolean" pos:line="47" pos:column="52">true<pos:position pos:line="47" pos:column="56"/></literal></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="48" pos:column="17">else <if pos:line="48" pos:column="22">if <condition pos:line="48" pos:column="25">(<expr><name><name pos:line="48" pos:column="26">ca<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">alg<pos:position pos:line="48" pos:column="33"/></name></name> <operator pos:line="48" pos:column="34">==<pos:position pos:line="48" pos:column="36"/></operator> <name><name pos:line="48" pos:column="37">Ssl<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">::<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="42">algSetValidBefore<pos:position pos:line="48" pos:column="59"/></name></name></expr>)<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="21">certProperties<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">.<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">setValidBefore<pos:position pos:line="49" pos:column="50"/></name></name> <operator pos:line="49" pos:column="51">=<pos:position pos:line="49" pos:column="52"/></operator> <literal type="boolean" pos:line="49" pos:column="53">true<pos:position pos:line="49" pos:column="57"/></literal></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt></block></then></if></elseif></if>

                <expr_stmt><expr><call><name pos:line="51" pos:column="17">debugs<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><literal type="number" pos:line="51" pos:column="24">33<pos:position pos:line="51" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="28">5<pos:position pos:line="51" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">HERE<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">&lt;&lt;<pos:position pos:line="51" pos:column="44"/></operator> <literal type="string" pos:line="51" pos:column="39">"Matches certificate adaptation aglorithm: "<pos:position pos:line="51" pos:column="83"/></literal> <operator pos:line="51" pos:column="84">&lt;&lt;<pos:position pos:line="51" pos:column="92"/></operator>
                       <name pos:line="52" pos:column="24">alg<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">&lt;&lt;<pos:position pos:line="52" pos:column="36"/></operator> <literal type="string" pos:line="52" pos:column="31">" param: "<pos:position pos:line="52" pos:column="41"/></literal> <operator pos:line="52" pos:column="42">&lt;&lt;<pos:position pos:line="52" pos:column="50"/></operator> <operator pos:line="52" pos:column="45">(<pos:position pos:line="52" pos:column="46"/></operator><ternary><condition><expr><name pos:line="52" pos:column="46">param<pos:position pos:line="52" pos:column="51"/></name></expr> ?<pos:position pos:line="52" pos:column="53"/></condition><then pos:line="52" pos:column="53"> <expr><name pos:line="52" pos:column="54">param<pos:position pos:line="52" pos:column="59"/></name></expr> <pos:position pos:line="52" pos:column="60"/></then><else pos:line="52" pos:column="60">: <expr><literal type="string" pos:line="52" pos:column="62">"-"<pos:position pos:line="52" pos:column="65"/></literal></expr></else></ternary><operator pos:line="52" pos:column="65">)<pos:position pos:line="52" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>
        }<pos:position pos:line="54" pos:column="10"/></block></for>

        <expr_stmt><expr><name><name pos:line="56" pos:column="9">certProperties<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">.<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">signAlgorithm<pos:position pos:line="56" pos:column="37"/></name></name> <operator pos:line="56" pos:column="38">=<pos:position pos:line="56" pos:column="39"/></operator> <name><name pos:line="56" pos:column="40">Ssl<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">::<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="45">algSignEnd<pos:position pos:line="56" pos:column="55"/></name></name></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
        <for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init><decl><type><name pos:line="57" pos:column="14">sslproxy_cert_sign<pos:position pos:line="57" pos:column="32"/></name> <modifier pos:line="57" pos:column="33">*<pos:position pos:line="57" pos:column="34"/></modifier></type><name pos:line="57" pos:column="34">sg<pos:position pos:line="57" pos:column="36"/></name> <init pos:line="57" pos:column="37">= <expr><name><name pos:line="57" pos:column="39">Config<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">.<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="46">ssl_client<pos:position pos:line="57" pos:column="56"/></name><operator pos:line="57" pos:column="56">.<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="57">cert_sign<pos:position pos:line="57" pos:column="66"/></name></name></expr></init></decl>;<pos:position pos:line="57" pos:column="67"/></init> <condition><expr><name pos:line="57" pos:column="68">sg<pos:position pos:line="57" pos:column="70"/></name> <operator pos:line="57" pos:column="71">!=<pos:position pos:line="57" pos:column="73"/></operator> <name pos:line="57" pos:column="74">NULL<pos:position pos:line="57" pos:column="78"/></name></expr>;<pos:position pos:line="57" pos:column="79"/></condition> <incr><expr><name pos:line="57" pos:column="80">sg<pos:position pos:line="57" pos:column="82"/></name> <operator pos:line="57" pos:column="83">=<pos:position pos:line="57" pos:column="84"/></operator> <name><name pos:line="57" pos:column="85">sg<pos:position pos:line="57" pos:column="87"/></name><operator pos:line="57" pos:column="87">-&gt;<pos:position pos:line="57" pos:column="92"/></operator><name pos:line="57" pos:column="89">next<pos:position pos:line="57" pos:column="93"/></name></name></expr></incr>)<pos:position pos:line="57" pos:column="94"/></control> <block pos:line="57" pos:column="95">{
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name><name pos:line="58" pos:column="17">sg<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">aclList<pos:position pos:line="58" pos:column="28"/></name></name> <operator pos:line="58" pos:column="29">&amp;&amp;<pos:position pos:line="58" pos:column="39"/></operator> <call><name><name pos:line="58" pos:column="32">checklist<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">.<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="42">fastCheck<pos:position pos:line="58" pos:column="51"/></name></name><argument_list pos:line="58" pos:column="51">(<argument><expr><name><name pos:line="58" pos:column="52">sg<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">-&gt;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="56">aclList<pos:position pos:line="58" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call> <operator pos:line="58" pos:column="65">==<pos:position pos:line="58" pos:column="67"/></operator> <name pos:line="58" pos:column="68">ACCESS_ALLOWED<pos:position pos:line="58" pos:column="82"/></name></expr>)<pos:position pos:line="58" pos:column="83"/></condition><then pos:line="58" pos:column="83"> <block pos:line="58" pos:column="84">{
                <expr_stmt><expr><name><name pos:line="59" pos:column="17">certProperties<pos:position pos:line="59" pos:column="31"/></name><operator pos:line="59" pos:column="31">.<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="32">signAlgorithm<pos:position pos:line="59" pos:column="45"/></name></name> <operator pos:line="59" pos:column="46">=<pos:position pos:line="59" pos:column="47"/></operator> <operator pos:line="59" pos:column="48">(<pos:position pos:line="59" pos:column="49"/></operator><name><name pos:line="59" pos:column="49">Ssl<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">::<pos:position pos:line="59" pos:column="54"/></operator><name pos:line="59" pos:column="54">CertSignAlgorithm<pos:position pos:line="59" pos:column="71"/></name></name><operator pos:line="59" pos:column="71">)<pos:position pos:line="59" pos:column="72"/></operator><name><name pos:line="59" pos:column="72">sg<pos:position pos:line="59" pos:column="74"/></name><operator pos:line="59" pos:column="74">-&gt;<pos:position pos:line="59" pos:column="79"/></operator><name pos:line="59" pos:column="76">alg<pos:position pos:line="59" pos:column="79"/></name></name></expr>;<pos:position pos:line="59" pos:column="80"/></expr_stmt>
                <break pos:line="60" pos:column="17">break;<pos:position pos:line="60" pos:column="23"/></break>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>
        }<pos:position pos:line="62" pos:column="10"/></block></for>
    }<pos:position pos:line="63" pos:column="6"/></block></then> <else pos:line="63" pos:column="7">else <block pos:line="63" pos:column="12">{<comment type="line" pos:line="63" pos:column="13">// if (!sslServerBump-&gt;entry-&gt;isEmpty())</comment>
        <comment type="line" pos:line="64" pos:column="9">// Use trusted certificate for a Squid-generated error</comment>
        <comment type="line" pos:line="65" pos:column="9">// or the user would have to add a security exception</comment>
        <comment type="line" pos:line="66" pos:column="9">// just to see the error page. We will close the connection</comment>
        <comment type="line" pos:line="67" pos:column="9">// so that the trust is not extended to non-Squid content.</comment>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">certProperties<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">.<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="24">signAlgorithm<pos:position pos:line="68" pos:column="37"/></name></name> <operator pos:line="68" pos:column="38">=<pos:position pos:line="68" pos:column="39"/></operator> <name><name pos:line="68" pos:column="40">Ssl<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">::<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="45">algSignTrusted<pos:position pos:line="68" pos:column="59"/></name></name></expr>;<pos:position pos:line="68" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">assert<pos:position pos:line="71" pos:column="11"/></name><argument_list pos:line="71" pos:column="11">(<argument><expr><name><name pos:line="71" pos:column="12">certProperties<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">.<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="27">signAlgorithm<pos:position pos:line="71" pos:column="40"/></name></name> <operator pos:line="71" pos:column="41">!=<pos:position pos:line="71" pos:column="43"/></operator> <name><name pos:line="71" pos:column="44">Ssl<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">::<pos:position pos:line="71" pos:column="49"/></operator><name pos:line="71" pos:column="49">algSignEnd<pos:position pos:line="71" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name><name pos:line="73" pos:column="9">certProperties<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">signAlgorithm<pos:position pos:line="73" pos:column="37"/></name></name> <operator pos:line="73" pos:column="38">==<pos:position pos:line="73" pos:column="40"/></operator> <name><name pos:line="73" pos:column="41">Ssl<pos:position pos:line="73" pos:column="44"/></name><operator pos:line="73" pos:column="44">::<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="46">algSignUntrusted<pos:position pos:line="73" pos:column="62"/></name></name></expr>)<pos:position pos:line="73" pos:column="63"/></condition><then pos:line="73" pos:column="63"> <block pos:line="73" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">assert<pos:position pos:line="74" pos:column="15"/></name><argument_list pos:line="74" pos:column="15">(<argument><expr><call><name><name pos:line="74" pos:column="16">port<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">untrustedSigningCert<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">.<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="43">get<pos:position pos:line="74" pos:column="46"/></name></name><argument_list pos:line="74" pos:column="46">()<pos:position pos:line="74" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">certProperties<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">.<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">signWithX509<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">.<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="37">resetAndLock<pos:position pos:line="75" pos:column="49"/></name></name><argument_list pos:line="75" pos:column="49">(<argument><expr><call><name><name pos:line="75" pos:column="50">port<pos:position pos:line="75" pos:column="54"/></name><operator pos:line="75" pos:column="54">-&gt;<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="56">untrustedSigningCert<pos:position pos:line="75" pos:column="76"/></name><operator pos:line="75" pos:column="76">.<pos:position pos:line="75" pos:column="77"/></operator><name pos:line="75" pos:column="77">get<pos:position pos:line="75" pos:column="80"/></name></name><argument_list pos:line="75" pos:column="80">()<pos:position pos:line="75" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="76" pos:column="9">certProperties<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">.<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">signWithPkey<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">.<pos:position pos:line="76" pos:column="37"/></operator><name pos:line="76" pos:column="37">resetAndLock<pos:position pos:line="76" pos:column="49"/></name></name><argument_list pos:line="76" pos:column="49">(<argument><expr><call><name><name pos:line="76" pos:column="50">port<pos:position pos:line="76" pos:column="54"/></name><operator pos:line="76" pos:column="54">-&gt;<pos:position pos:line="76" pos:column="59"/></operator><name pos:line="76" pos:column="56">untrustedSignPkey<pos:position pos:line="76" pos:column="73"/></name><operator pos:line="76" pos:column="73">.<pos:position pos:line="76" pos:column="74"/></operator><name pos:line="76" pos:column="74">get<pos:position pos:line="76" pos:column="77"/></name></name><argument_list pos:line="76" pos:column="77">()<pos:position pos:line="76" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then> <else pos:line="77" pos:column="7">else <block pos:line="77" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">assert<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><call><name><name pos:line="78" pos:column="16">port<pos:position pos:line="78" pos:column="20"/></name><operator pos:line="78" pos:column="20">-&gt;<pos:position pos:line="78" pos:column="25"/></operator><name pos:line="78" pos:column="22">signingCert<pos:position pos:line="78" pos:column="33"/></name><operator pos:line="78" pos:column="33">.<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="34">get<pos:position pos:line="78" pos:column="37"/></name></name><argument_list pos:line="78" pos:column="37">()<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="79" pos:column="9">certProperties<pos:position pos:line="79" pos:column="23"/></name><operator pos:line="79" pos:column="23">.<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">signWithX509<pos:position pos:line="79" pos:column="36"/></name><operator pos:line="79" pos:column="36">.<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="37">resetAndLock<pos:position pos:line="79" pos:column="49"/></name></name><argument_list pos:line="79" pos:column="49">(<argument><expr><call><name><name pos:line="79" pos:column="50">port<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">-&gt;<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="56">signingCert<pos:position pos:line="79" pos:column="67"/></name><operator pos:line="79" pos:column="67">.<pos:position pos:line="79" pos:column="68"/></operator><name pos:line="79" pos:column="68">get<pos:position pos:line="79" pos:column="71"/></name></name><argument_list pos:line="79" pos:column="71">()<pos:position pos:line="79" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="75"/></expr_stmt>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><call><name><name pos:line="81" pos:column="13">port<pos:position pos:line="81" pos:column="17"/></name><operator pos:line="81" pos:column="17">-&gt;<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="19">signPkey<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">.<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="28">get<pos:position pos:line="81" pos:column="31"/></name></name><argument_list pos:line="81" pos:column="31">()<pos:position pos:line="81" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="34"/></condition><then pos:line="81" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="82" pos:column="13">certProperties<pos:position pos:line="82" pos:column="27"/></name><operator pos:line="82" pos:column="27">.<pos:position pos:line="82" pos:column="28"/></operator><name pos:line="82" pos:column="28">signWithPkey<pos:position pos:line="82" pos:column="40"/></name><operator pos:line="82" pos:column="40">.<pos:position pos:line="82" pos:column="41"/></operator><name pos:line="82" pos:column="41">resetAndLock<pos:position pos:line="82" pos:column="53"/></name></name><argument_list pos:line="82" pos:column="53">(<argument><expr><call><name><name pos:line="82" pos:column="54">port<pos:position pos:line="82" pos:column="58"/></name><operator pos:line="82" pos:column="58">-&gt;<pos:position pos:line="82" pos:column="63"/></operator><name pos:line="82" pos:column="60">signPkey<pos:position pos:line="82" pos:column="68"/></name><operator pos:line="82" pos:column="68">.<pos:position pos:line="82" pos:column="69"/></operator><name pos:line="82" pos:column="69">get<pos:position pos:line="82" pos:column="72"/></name></name><argument_list pos:line="82" pos:column="72">()<pos:position pos:line="82" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="76"/></expr_stmt></block></then></if>
    }<pos:position pos:line="83" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="84" pos:column="5">signAlgorithm<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <name><name pos:line="84" pos:column="21">certProperties<pos:position pos:line="84" pos:column="35"/></name><operator pos:line="84" pos:column="35">.<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="36">signAlgorithm<pos:position pos:line="84" pos:column="49"/></name></name></expr>;<pos:position pos:line="84" pos:column="50"/></expr_stmt>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

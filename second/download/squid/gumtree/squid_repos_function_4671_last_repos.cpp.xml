<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4671_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Server<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">setReplyError<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name><name pos:line="2" pos:column="34">Http<pos:position pos:line="2" pos:column="38"/></name><operator pos:line="2" pos:column="38">::<pos:position pos:line="2" pos:column="40"/></operator><name pos:line="2" pos:column="40">StreamPointer<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">&amp;<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="55">context<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="64">HttpRequest<pos:position pos:line="2" pos:column="75"/></name><operator pos:line="2" pos:column="75">::<pos:position pos:line="2" pos:column="77"/></operator><name pos:line="2" pos:column="77">Pointer<pos:position pos:line="2" pos:column="84"/></name></name> <modifier pos:line="2" pos:column="85">&amp;<pos:position pos:line="2" pos:column="90"/></modifier></type><name pos:line="2" pos:column="86">request<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="95">const<pos:position pos:line="2" pos:column="100"/></specifier> <name pos:line="2" pos:column="101">HttpRequestMethod<pos:position pos:line="2" pos:column="118"/></name><modifier pos:line="2" pos:column="118">&amp;<pos:position pos:line="2" pos:column="123"/></modifier></type> <name pos:line="2" pos:column="120">method<pos:position pos:line="2" pos:column="126"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="128">err_type<pos:position pos:line="2" pos:column="136"/></name></type> <name pos:line="2" pos:column="137">requestError<pos:position pos:line="2" pos:column="149"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="151">Http<pos:position pos:line="2" pos:column="155"/></name><operator pos:line="2" pos:column="155">::<pos:position pos:line="2" pos:column="157"/></operator><name pos:line="2" pos:column="157">StatusCode<pos:position pos:line="2" pos:column="167"/></name></name></type> <name pos:line="2" pos:column="168">errStatusCode<pos:position pos:line="2" pos:column="181"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="183">const<pos:position pos:line="2" pos:column="188"/></specifier> <name pos:line="2" pos:column="189">char<pos:position pos:line="2" pos:column="193"/></name> <modifier pos:line="2" pos:column="194">*<pos:position pos:line="2" pos:column="195"/></modifier></type><name pos:line="2" pos:column="195">requestErrorBytes<pos:position pos:line="2" pos:column="212"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="213"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">quitAfterError<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><call><name><name pos:line="4" pos:column="20">request<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">.<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">getRaw<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">()<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">context<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">connRegistered<pos:position pos:line="5" pos:column="33"/></name></name><argument_list pos:line="5" pos:column="33">()<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36"> <block pos:line="5" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">33<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">2<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"Client stream deregister it self, nothing to do"<pos:position pos:line="6" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">clientConnection<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">close<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">clientStreamNode<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">node<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><call><name><name pos:line="10" pos:column="30">context<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">getClientReplyContext<pos:position pos:line="10" pos:column="60"/></name></name><argument_list pos:line="10" pos:column="60">()<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">clientReplyContext<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">repContext<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><cast type="dynamic" pos:line="11" pos:column="38">dynamic_cast<argument_list type="generic" pos:line="11" pos:column="50">&lt;<argument><expr><name pos:line="11" pos:column="51">clientReplyContext<pos:position pos:line="11" pos:column="69"/></name> <operator pos:line="11" pos:column="70">*<pos:position pos:line="11" pos:column="71"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="75"/></argument_list><argument_list pos:line="11" pos:column="72">(<argument><expr><call><name><name pos:line="11" pos:column="73">node<pos:position pos:line="11" pos:column="77"/></name><operator pos:line="11" pos:column="77">-&gt;<pos:position pos:line="11" pos:column="82"/></operator><name pos:line="11" pos:column="79">data<pos:position pos:line="11" pos:column="83"/></name><operator pos:line="11" pos:column="83">.<pos:position pos:line="11" pos:column="84"/></operator><name pos:line="11" pos:column="84">getRaw<pos:position pos:line="11" pos:column="90"/></name></name><argument_list pos:line="11" pos:column="90">()<pos:position pos:line="11" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="93"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="11" pos:column="94"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">repContext<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">repContext<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">setReplyToError<pos:position pos:line="14" pos:column="32"/></name></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">requestError<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">errStatusCode<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">method<pos:position pos:line="14" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="70">context<pos:position pos:line="14" pos:column="77"/></name><operator pos:line="14" pos:column="77">-&gt;<pos:position pos:line="14" pos:column="82"/></operator><name pos:line="14" pos:column="79">http<pos:position pos:line="14" pos:column="83"/></name><operator pos:line="14" pos:column="83">-&gt;<pos:position pos:line="14" pos:column="88"/></operator><name pos:line="14" pos:column="85">uri<pos:position pos:line="14" pos:column="88"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="90">clientConnection<pos:position pos:line="14" pos:column="106"/></name><operator pos:line="14" pos:column="106">-&gt;<pos:position pos:line="14" pos:column="111"/></operator><name pos:line="14" pos:column="108">remote<pos:position pos:line="14" pos:column="114"/></name></name></expr></argument>, <argument><expr><literal type="null" pos:line="14" pos:column="116">nullptr<pos:position pos:line="14" pos:column="123"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="125">requestErrorBytes<pos:position pos:line="14" pos:column="142"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="14" pos:column="144">nullptr<pos:position pos:line="14" pos:column="151"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="152"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="153"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name><name pos:line="16" pos:column="12">context<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">http<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">out<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">offset<pos:position pos:line="16" pos:column="37"/></name></name> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <literal type="number" pos:line="16" pos:column="41">0<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">context<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">pullData<pos:position pos:line="17" pos:column="22"/></name></name><argument_list pos:line="17" pos:column="22">()<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

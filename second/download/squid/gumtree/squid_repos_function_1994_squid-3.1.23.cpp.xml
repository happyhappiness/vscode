<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1994_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">cacheableReply<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpReply<pos:position pos:line="4" pos:column="14"/></name> <specifier pos:line="4" pos:column="15">const<pos:position pos:line="4" pos:column="20"/></specifier> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">rep<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">finalReply<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">()<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeader<pos:position pos:line="5" pos:column="15"/></name> <specifier pos:line="5" pos:column="16">const<pos:position pos:line="5" pos:column="21"/></specifier> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">hdr<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator><name><name pos:line="5" pos:column="30">rep<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">header<pos:position pos:line="5" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">int<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">cc_mask<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><ternary><condition><expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name><name pos:line="6" pos:column="26">rep<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">cache_control<pos:position pos:line="6" pos:column="44"/></name></name><operator pos:line="6" pos:column="44">)<pos:position pos:line="6" pos:column="45"/></operator></expr> ?<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47"> <expr><name><name pos:line="6" pos:column="48">rep<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">cache_control<pos:position pos:line="6" pos:column="66"/></name><operator pos:line="6" pos:column="66">-&gt;<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="68">mask<pos:position pos:line="6" pos:column="72"/></name></name></expr> <pos:position pos:line="6" pos:column="73"/></then><else pos:line="6" pos:column="73">: <expr><literal type="number" pos:line="6" pos:column="75">0<pos:position pos:line="6" pos:column="76"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">v<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">HTTP_VIOLATIONS<pos:position pos:line="8" pos:column="20"/></name></expr></cpp:if>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">refresh_t<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">R<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* This strange looking define first looks up the refresh pattern
     * and then checks if the specified flag is set. The main purpose
     * of this is to simplify the refresh pattern lookup and HTTP_VIOLATIONS
     * condition
     */</comment>
<cpp:define pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">define<pos:position pos:line="17" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="17" pos:column="9">REFRESH_OVERRIDE<pos:position pos:line="17" pos:column="25"/></name><parameter_list pos:line="17" pos:column="25">(<parameter><type><name pos:line="17" pos:column="26">flag<pos:position pos:line="17" pos:column="30"/></name></type></parameter>)<pos:position pos:line="17" pos:column="31"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="18" pos:column="5">((R = (R ? R : refreshLimits(entry-&gt;mem_obj-&gt;url))) , \
    (R &amp;&amp; R-&gt;flags.flag))<pos:position pos:line="19" pos:column="26"/></cpp:value></cpp:define>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">REFRESH_OVERRIDE<pos:position pos:line="21" pos:column="25"/></name><parameter_list pos:line="21" pos:column="25">(<parameter><type><name pos:line="21" pos:column="26">flag<pos:position pos:line="21" pos:column="30"/></name></type></parameter>)<pos:position pos:line="21" pos:column="31"/></parameter_list></cpp:macro> <cpp:value pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></cpp:value></cpp:define>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">surrogateNoStore<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></then></if>

    <comment type="line" pos:line="27" pos:column="5">// RFC 2616: do not cache replies to responses with no-store CC directive</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">request<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&amp;&amp;<pos:position pos:line="28" pos:column="27"/></operator> <name><name pos:line="28" pos:column="20">request<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">cache_control<pos:position pos:line="28" pos:column="42"/></name></name> <operator pos:line="28" pos:column="43">&amp;&amp;<pos:position pos:line="28" pos:column="53"/></operator>
            <call><name pos:line="29" pos:column="13">EBIT_TEST<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name><name pos:line="29" pos:column="23">request<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">cache_control<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">mask<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">CC_NO_STORE<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call> <operator pos:line="29" pos:column="66">&amp;&amp;<pos:position pos:line="29" pos:column="76"/></operator>
            <operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">REFRESH_OVERRIDE<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">ignore_no_store<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">ignoreCacheControl<pos:position pos:line="33" pos:column="28"/></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29"> <block pos:line="33" pos:column="30">{
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">EBIT_TEST<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">cc_mask<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">CC_PRIVATE<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44"> <block pos:line="34" pos:column="45">{
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">!<pos:position pos:line="35" pos:column="18"/></operator><call><name pos:line="35" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">ignore_private<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51">
                <block type="pseudo"><return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">EBIT_TEST<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">cc_mask<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">CC_NO_CACHE<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><operator pos:line="40" pos:column="17">!<pos:position pos:line="40" pos:column="18"/></operator><call><name pos:line="40" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">ignore_no_cache<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="52"/></condition><then pos:line="40" pos:column="52">
                <block type="pseudo"><return pos:line="41" pos:column="17">return <expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">EBIT_TEST<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">cc_mask<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="32">CC_NO_STORE<pos:position pos:line="44" pos:column="43"/></name></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45"> <block pos:line="44" pos:column="46">{
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><operator pos:line="45" pos:column="17">!<pos:position pos:line="45" pos:column="18"/></operator><call><name pos:line="45" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">ignore_no_store<pos:position pos:line="45" pos:column="50"/></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="52"/></condition><then pos:line="45" pos:column="52">
                <block type="pseudo"><return pos:line="46" pos:column="17">return <expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">request<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">flags<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">auth<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">||<pos:position pos:line="50" pos:column="31"/></operator> <name><name pos:line="50" pos:column="32">request<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">-&gt;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="41">flags<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">.<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="47">auth_sent<pos:position pos:line="50" pos:column="56"/></name></name></expr>)<pos:position pos:line="50" pos:column="57"/></condition><then pos:line="50" pos:column="57"> <block pos:line="50" pos:column="58">{
        <comment type="block" pos:line="51" pos:column="9">/*
         * Responses to requests with authorization may be cached
         * only if a Cache-Control: public reply header is present.
         * RFC 2068, sec 14.9.4
         */</comment>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">!<pos:position pos:line="57" pos:column="14"/></operator><call><name pos:line="57" pos:column="14">EBIT_TEST<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">cc_mask<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="33">CC_PUBLIC<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="44"/></condition><then pos:line="57" pos:column="44"> <block pos:line="57" pos:column="45">{
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><call><name pos:line="58" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">ignore_auth<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="48"/></condition><then pos:line="58" pos:column="48">
                <block type="pseudo"><return pos:line="59" pos:column="17">return <expr><literal type="number" pos:line="59" pos:column="24">0<pos:position pos:line="59" pos:column="25"/></literal></expr>;<pos:position pos:line="59" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="63" pos:column="5">/* Pragma: no-cache in _replies_ is not documented in HTTP,
     * but servers like "Active Imaging Webcast/2.0" sure do use it */</comment>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><call><name><name pos:line="65" pos:column="9">hdr<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">has<pos:position pos:line="65" pos:column="17"/></name></name><argument_list pos:line="65" pos:column="17">(<argument><expr><name pos:line="65" pos:column="18">HDR_PRAGMA<pos:position pos:line="65" pos:column="28"/></name></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30"> <block pos:line="65" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">String<pos:position pos:line="66" pos:column="15"/></name></type> <name pos:line="66" pos:column="16">s<pos:position pos:line="66" pos:column="17"/></name> <init pos:line="66" pos:column="18">= <expr><call><name><name pos:line="66" pos:column="20">hdr<pos:position pos:line="66" pos:column="23"/></name><operator pos:line="66" pos:column="23">-&gt;<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="25">getList<pos:position pos:line="66" pos:column="32"/></name></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">HDR_PRAGMA<pos:position pos:line="66" pos:column="43"/></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="45"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="67" pos:column="9">const<pos:position pos:line="67" pos:column="14"/></specifier> <name pos:line="67" pos:column="15">int<pos:position pos:line="67" pos:column="18"/></name></type> <name pos:line="67" pos:column="19">no_cache<pos:position pos:line="67" pos:column="27"/></name> <init pos:line="67" pos:column="28">= <expr><call><name pos:line="67" pos:column="30">strListIsMember<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">(<argument><expr><operator pos:line="67" pos:column="46">&amp;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="47">s<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="50">"no-cache"<pos:position pos:line="67" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="67" pos:column="62">','<pos:position pos:line="67" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="67"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="68" pos:column="9">s<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">.<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">clean<pos:position pos:line="68" pos:column="16"/></name></name><argument_list pos:line="68" pos:column="16">()<pos:position pos:line="68" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">no_cache<pos:position pos:line="70" pos:column="21"/></name></expr>)<pos:position pos:line="70" pos:column="22"/></condition><then pos:line="70" pos:column="22"> <block pos:line="70" pos:column="23">{
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><operator pos:line="71" pos:column="17">!<pos:position pos:line="71" pos:column="18"/></operator><call><name pos:line="71" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">ignore_no_cache<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="52"/></condition><then pos:line="71" pos:column="52">
                <block type="pseudo"><return pos:line="72" pos:column="17">return <expr><literal type="number" pos:line="72" pos:column="24">0<pos:position pos:line="72" pos:column="25"/></literal></expr>;<pos:position pos:line="72" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="76" pos:column="5">/*
     * The "multipart/x-mixed-replace" content type is used for
     * continuous push replies.  These are generally dynamic and
     * probably should not be cachable
     */</comment>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">(<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">v<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <call><name><name pos:line="81" pos:column="14">hdr<pos:position pos:line="81" pos:column="17"/></name><operator pos:line="81" pos:column="17">-&gt;<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="19">getStr<pos:position pos:line="81" pos:column="25"/></name></name><argument_list pos:line="81" pos:column="25">(<argument><expr><name pos:line="81" pos:column="26">HDR_CONTENT_TYPE<pos:position pos:line="81" pos:column="42"/></name></expr></argument>)<pos:position pos:line="81" pos:column="43"/></argument_list></call><operator pos:line="81" pos:column="43">)<pos:position pos:line="81" pos:column="44"/></operator></expr>)<pos:position pos:line="81" pos:column="45"/></condition><then pos:line="81" pos:column="45">
        <block type="pseudo"><if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">!<pos:position pos:line="82" pos:column="14"/></operator><call><name pos:line="82" pos:column="14">strncasecmp<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">v<pos:position pos:line="82" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="29">"multipart/x-mixed-replace"<pos:position pos:line="82" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="58">25<pos:position pos:line="82" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="62"/></condition><then pos:line="82" pos:column="62">
            <block type="pseudo"><return pos:line="83" pos:column="13">return <expr><literal type="number" pos:line="83" pos:column="20">0<pos:position pos:line="83" pos:column="21"/></literal></expr>;<pos:position pos:line="83" pos:column="22"/></return></block></then></if></block></then></if>

    <switch pos:line="85" pos:column="5">switch <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">rep<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">-&gt;<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="18">sline<pos:position pos:line="85" pos:column="23"/></name><operator pos:line="85" pos:column="23">.<pos:position pos:line="85" pos:column="24"/></operator><name pos:line="85" pos:column="24">status<pos:position pos:line="85" pos:column="30"/></name></name></expr>)<pos:position pos:line="85" pos:column="31"/></condition> <block pos:line="85" pos:column="32">{
        <comment type="block" pos:line="86" pos:column="9">/* Responses that are cacheable */</comment>

    <case pos:line="88" pos:column="5">case <expr><name pos:line="88" pos:column="10">HTTP_OK<pos:position pos:line="88" pos:column="17"/></name></expr>:<pos:position pos:line="88" pos:column="18"/></case>

    <case pos:line="90" pos:column="5">case <expr><name pos:line="90" pos:column="10">HTTP_NON_AUTHORITATIVE_INFORMATION<pos:position pos:line="90" pos:column="44"/></name></expr>:<pos:position pos:line="90" pos:column="45"/></case>

    <case pos:line="92" pos:column="5">case <expr><name pos:line="92" pos:column="10">HTTP_MULTIPLE_CHOICES<pos:position pos:line="92" pos:column="31"/></name></expr>:<pos:position pos:line="92" pos:column="32"/></case>

    <case pos:line="94" pos:column="5">case <expr><name pos:line="94" pos:column="10">HTTP_MOVED_PERMANENTLY<pos:position pos:line="94" pos:column="32"/></name></expr>:<pos:position pos:line="94" pos:column="33"/></case>

    <case pos:line="96" pos:column="5">case <expr><name pos:line="96" pos:column="10">HTTP_GONE<pos:position pos:line="96" pos:column="19"/></name></expr>:<pos:position pos:line="96" pos:column="20"/></case>
        <comment type="block" pos:line="97" pos:column="9">/*
         * Don't cache objects that need to be refreshed on next request,
         * unless we know how to refresh it.
         */</comment>

        <if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><operator pos:line="102" pos:column="13">!<pos:position pos:line="102" pos:column="14"/></operator><call><name pos:line="102" pos:column="14">refreshIsCachable<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><name pos:line="102" pos:column="32">entry<pos:position pos:line="102" pos:column="37"/></name></expr></argument>)<pos:position pos:line="102" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="39"/></condition><then pos:line="102" pos:column="39"> <block pos:line="102" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">debugs<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><literal type="number" pos:line="103" pos:column="20">22<pos:position pos:line="103" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="24">3<pos:position pos:line="103" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="27">"refreshIsCachable() returned non-cacheable.."<pos:position pos:line="103" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="75"/></expr_stmt>
            <return pos:line="104" pos:column="13">return <expr><literal type="number" pos:line="104" pos:column="20">0<pos:position pos:line="104" pos:column="21"/></literal></expr>;<pos:position pos:line="104" pos:column="22"/></return>
        }<pos:position pos:line="105" pos:column="10"/></block></then> <else pos:line="105" pos:column="11">else
            <block type="pseudo"><return pos:line="106" pos:column="13">return <expr><literal type="number" pos:line="106" pos:column="20">1<pos:position pos:line="106" pos:column="21"/></literal></expr>;<pos:position pos:line="106" pos:column="22"/></return></block></else></if>

        <comment type="block" pos:line="108" pos:column="9">/* NOTREACHED */</comment>
        <break pos:line="109" pos:column="9">break;<pos:position pos:line="109" pos:column="15"/></break>

        <comment type="block" pos:line="111" pos:column="9">/* Responses that only are cacheable if the server says so */</comment>

    <case pos:line="113" pos:column="5">case <expr><name pos:line="113" pos:column="10">HTTP_MOVED_TEMPORARILY<pos:position pos:line="113" pos:column="32"/></name></expr>:<pos:position pos:line="113" pos:column="33"/></case>
    <case pos:line="114" pos:column="5">case <expr><name pos:line="114" pos:column="10">HTTP_TEMPORARY_REDIRECT<pos:position pos:line="114" pos:column="33"/></name></expr>:<pos:position pos:line="114" pos:column="34"/></case>
        <if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name><name pos:line="115" pos:column="13">rep<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">-&gt;<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="18">expires<pos:position pos:line="115" pos:column="25"/></name></name> <operator pos:line="115" pos:column="26">&gt;<pos:position pos:line="115" pos:column="30"/></operator> <name><name pos:line="115" pos:column="28">rep<pos:position pos:line="115" pos:column="31"/></name><operator pos:line="115" pos:column="31">-&gt;<pos:position pos:line="115" pos:column="36"/></operator><name pos:line="115" pos:column="33">date<pos:position pos:line="115" pos:column="37"/></name></name> <operator pos:line="115" pos:column="38">&amp;&amp;<pos:position pos:line="115" pos:column="48"/></operator> <name><name pos:line="115" pos:column="41">rep<pos:position pos:line="115" pos:column="44"/></name><operator pos:line="115" pos:column="44">-&gt;<pos:position pos:line="115" pos:column="49"/></operator><name pos:line="115" pos:column="46">date<pos:position pos:line="115" pos:column="50"/></name></name> <operator pos:line="115" pos:column="51">&gt;<pos:position pos:line="115" pos:column="55"/></operator> <literal type="number" pos:line="115" pos:column="53">0<pos:position pos:line="115" pos:column="54"/></literal></expr>)<pos:position pos:line="115" pos:column="55"/></condition><then pos:line="115" pos:column="55">
            <block type="pseudo"><return pos:line="116" pos:column="13">return <expr><literal type="number" pos:line="116" pos:column="20">1<pos:position pos:line="116" pos:column="21"/></literal></expr>;<pos:position pos:line="116" pos:column="22"/></return></block></then>
        <else pos:line="117" pos:column="9">else
            <block type="pseudo"><return pos:line="118" pos:column="13">return <expr><literal type="number" pos:line="118" pos:column="20">0<pos:position pos:line="118" pos:column="21"/></literal></expr>;<pos:position pos:line="118" pos:column="22"/></return></block></else></if>

        <comment type="block" pos:line="120" pos:column="9">/* NOTREACHED */</comment>
        <break pos:line="121" pos:column="9">break;<pos:position pos:line="121" pos:column="15"/></break>

        <comment type="block" pos:line="123" pos:column="9">/* Errors can be negatively cached */</comment>

    <case pos:line="125" pos:column="5">case <expr><name pos:line="125" pos:column="10">HTTP_NO_CONTENT<pos:position pos:line="125" pos:column="25"/></name></expr>:<pos:position pos:line="125" pos:column="26"/></case>

    <case pos:line="127" pos:column="5">case <expr><name pos:line="127" pos:column="10">HTTP_USE_PROXY<pos:position pos:line="127" pos:column="24"/></name></expr>:<pos:position pos:line="127" pos:column="25"/></case>

    <case pos:line="129" pos:column="5">case <expr><name pos:line="129" pos:column="10">HTTP_BAD_REQUEST<pos:position pos:line="129" pos:column="26"/></name></expr>:<pos:position pos:line="129" pos:column="27"/></case>

    <case pos:line="131" pos:column="5">case <expr><name pos:line="131" pos:column="10">HTTP_FORBIDDEN<pos:position pos:line="131" pos:column="24"/></name></expr>:<pos:position pos:line="131" pos:column="25"/></case>

    <case pos:line="133" pos:column="5">case <expr><name pos:line="133" pos:column="10">HTTP_NOT_FOUND<pos:position pos:line="133" pos:column="24"/></name></expr>:<pos:position pos:line="133" pos:column="25"/></case>

    <case pos:line="135" pos:column="5">case <expr><name pos:line="135" pos:column="10">HTTP_METHOD_NOT_ALLOWED<pos:position pos:line="135" pos:column="33"/></name></expr>:<pos:position pos:line="135" pos:column="34"/></case>

    <case pos:line="137" pos:column="5">case <expr><name pos:line="137" pos:column="10">HTTP_REQUEST_URI_TOO_LARGE<pos:position pos:line="137" pos:column="36"/></name></expr>:<pos:position pos:line="137" pos:column="37"/></case>

    <case pos:line="139" pos:column="5">case <expr><name pos:line="139" pos:column="10">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="139" pos:column="36"/></name></expr>:<pos:position pos:line="139" pos:column="37"/></case>

    <case pos:line="141" pos:column="5">case <expr><name pos:line="141" pos:column="10">HTTP_NOT_IMPLEMENTED<pos:position pos:line="141" pos:column="30"/></name></expr>:<pos:position pos:line="141" pos:column="31"/></case>

    <case pos:line="143" pos:column="5">case <expr><name pos:line="143" pos:column="10">HTTP_BAD_GATEWAY<pos:position pos:line="143" pos:column="26"/></name></expr>:<pos:position pos:line="143" pos:column="27"/></case>

    <case pos:line="145" pos:column="5">case <expr><name pos:line="145" pos:column="10">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="145" pos:column="34"/></name></expr>:<pos:position pos:line="145" pos:column="35"/></case>

    <case pos:line="147" pos:column="5">case <expr><name pos:line="147" pos:column="10">HTTP_GATEWAY_TIMEOUT<pos:position pos:line="147" pos:column="30"/></name></expr>:<pos:position pos:line="147" pos:column="31"/></case>
        <return pos:line="148" pos:column="9">return <expr><operator pos:line="148" pos:column="16">-<pos:position pos:line="148" pos:column="17"/></operator><literal type="number" pos:line="148" pos:column="17">1<pos:position pos:line="148" pos:column="18"/></literal></expr>;<pos:position pos:line="148" pos:column="19"/></return>

        <comment type="block" pos:line="150" pos:column="9">/* NOTREACHED */</comment>
        <break pos:line="151" pos:column="9">break;<pos:position pos:line="151" pos:column="15"/></break>

        <comment type="block" pos:line="153" pos:column="9">/* Some responses can never be cached */</comment>

    <case pos:line="155" pos:column="5">case <expr><name pos:line="155" pos:column="10">HTTP_PARTIAL_CONTENT<pos:position pos:line="155" pos:column="30"/></name></expr>:<pos:position pos:line="155" pos:column="31"/></case>	<comment type="block" pos:line="155" pos:column="33">/* Not yet supported */</comment>

    <case pos:line="157" pos:column="5">case <expr><name pos:line="157" pos:column="10">HTTP_SEE_OTHER<pos:position pos:line="157" pos:column="24"/></name></expr>:<pos:position pos:line="157" pos:column="25"/></case>

    <case pos:line="159" pos:column="5">case <expr><name pos:line="159" pos:column="10">HTTP_NOT_MODIFIED<pos:position pos:line="159" pos:column="27"/></name></expr>:<pos:position pos:line="159" pos:column="28"/></case>

    <case pos:line="161" pos:column="5">case <expr><name pos:line="161" pos:column="10">HTTP_UNAUTHORIZED<pos:position pos:line="161" pos:column="27"/></name></expr>:<pos:position pos:line="161" pos:column="28"/></case>

    <case pos:line="163" pos:column="5">case <expr><name pos:line="163" pos:column="10">HTTP_PROXY_AUTHENTICATION_REQUIRED<pos:position pos:line="163" pos:column="44"/></name></expr>:<pos:position pos:line="163" pos:column="45"/></case>

    <case pos:line="165" pos:column="5">case <expr><name pos:line="165" pos:column="10">HTTP_INVALID_HEADER<pos:position pos:line="165" pos:column="29"/></name></expr>:<pos:position pos:line="165" pos:column="30"/></case>	<comment type="block" pos:line="165" pos:column="33">/* Squid header parsing error */</comment>

    <case pos:line="167" pos:column="5">case <expr><name pos:line="167" pos:column="10">HTTP_HEADER_TOO_LARGE<pos:position pos:line="167" pos:column="31"/></name></expr>:<pos:position pos:line="167" pos:column="32"/></case>

    <case pos:line="169" pos:column="5">case <expr><name pos:line="169" pos:column="10">HTTP_PAYMENT_REQUIRED<pos:position pos:line="169" pos:column="31"/></name></expr>:<pos:position pos:line="169" pos:column="32"/></case>
    <case pos:line="170" pos:column="5">case <expr><name pos:line="170" pos:column="10">HTTP_NOT_ACCEPTABLE<pos:position pos:line="170" pos:column="29"/></name></expr>:<pos:position pos:line="170" pos:column="30"/></case>
    <case pos:line="171" pos:column="5">case <expr><name pos:line="171" pos:column="10">HTTP_REQUEST_TIMEOUT<pos:position pos:line="171" pos:column="30"/></name></expr>:<pos:position pos:line="171" pos:column="31"/></case>
    <case pos:line="172" pos:column="5">case <expr><name pos:line="172" pos:column="10">HTTP_CONFLICT<pos:position pos:line="172" pos:column="23"/></name></expr>:<pos:position pos:line="172" pos:column="24"/></case>
    <case pos:line="173" pos:column="5">case <expr><name pos:line="173" pos:column="10">HTTP_LENGTH_REQUIRED<pos:position pos:line="173" pos:column="30"/></name></expr>:<pos:position pos:line="173" pos:column="31"/></case>
    <case pos:line="174" pos:column="5">case <expr><name pos:line="174" pos:column="10">HTTP_PRECONDITION_FAILED<pos:position pos:line="174" pos:column="34"/></name></expr>:<pos:position pos:line="174" pos:column="35"/></case>
    <case pos:line="175" pos:column="5">case <expr><name pos:line="175" pos:column="10">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="175" pos:column="39"/></name></expr>:<pos:position pos:line="175" pos:column="40"/></case>
    <case pos:line="176" pos:column="5">case <expr><name pos:line="176" pos:column="10">HTTP_UNSUPPORTED_MEDIA_TYPE<pos:position pos:line="176" pos:column="37"/></name></expr>:<pos:position pos:line="176" pos:column="38"/></case>
    <case pos:line="177" pos:column="5">case <expr><name pos:line="177" pos:column="10">HTTP_UNPROCESSABLE_ENTITY<pos:position pos:line="177" pos:column="35"/></name></expr>:<pos:position pos:line="177" pos:column="36"/></case>
    <case pos:line="178" pos:column="5">case <expr><name pos:line="178" pos:column="10">HTTP_LOCKED<pos:position pos:line="178" pos:column="21"/></name></expr>:<pos:position pos:line="178" pos:column="22"/></case>
    <case pos:line="179" pos:column="5">case <expr><name pos:line="179" pos:column="10">HTTP_FAILED_DEPENDENCY<pos:position pos:line="179" pos:column="32"/></name></expr>:<pos:position pos:line="179" pos:column="33"/></case>
    <case pos:line="180" pos:column="5">case <expr><name pos:line="180" pos:column="10">HTTP_INSUFFICIENT_STORAGE<pos:position pos:line="180" pos:column="35"/></name></expr>:<pos:position pos:line="180" pos:column="36"/></case>
    <case pos:line="181" pos:column="5">case <expr><name pos:line="181" pos:column="10">HTTP_REQUESTED_RANGE_NOT_SATISFIABLE<pos:position pos:line="181" pos:column="46"/></name></expr>:<pos:position pos:line="181" pos:column="47"/></case>
    <case pos:line="182" pos:column="5">case <expr><name pos:line="182" pos:column="10">HTTP_EXPECTATION_FAILED<pos:position pos:line="182" pos:column="33"/></name></expr>:<pos:position pos:line="182" pos:column="34"/></case>

        <return pos:line="184" pos:column="9">return <expr><literal type="number" pos:line="184" pos:column="16">0<pos:position pos:line="184" pos:column="17"/></literal></expr>;<pos:position pos:line="184" pos:column="18"/></return>

    <default pos:line="186" pos:column="5">default:<pos:position pos:line="186" pos:column="13"/></default>
        <comment type="block" pos:line="187" pos:column="9">/* RFC 2616 section 6.1.1: an unrecognized response MUST NOT be cached. */</comment>
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">debugs<pos:position pos:line="188" pos:column="15"/></name> <argument_list pos:line="188" pos:column="16">(<argument><expr><literal type="number" pos:line="188" pos:column="17">11<pos:position pos:line="188" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="21">3<pos:position pos:line="188" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="24">HERE<pos:position pos:line="188" pos:column="28"/></name> <operator pos:line="188" pos:column="29">&lt;&lt;<pos:position pos:line="188" pos:column="37"/></operator> <literal type="string" pos:line="188" pos:column="32">"Unknown HTTP status code "<pos:position pos:line="188" pos:column="59"/></literal> <operator pos:line="188" pos:column="60">&lt;&lt;<pos:position pos:line="188" pos:column="68"/></operator> <name><name pos:line="188" pos:column="63">rep<pos:position pos:line="188" pos:column="66"/></name><operator pos:line="188" pos:column="66">-&gt;<pos:position pos:line="188" pos:column="71"/></operator><name pos:line="188" pos:column="68">sline<pos:position pos:line="188" pos:column="73"/></name><operator pos:line="188" pos:column="73">.<pos:position pos:line="188" pos:column="74"/></operator><name pos:line="188" pos:column="74">status<pos:position pos:line="188" pos:column="80"/></name></name> <operator pos:line="188" pos:column="81">&lt;&lt;<pos:position pos:line="188" pos:column="89"/></operator> <literal type="string" pos:line="188" pos:column="84">". Not cacheable."<pos:position pos:line="188" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="104"/></expr_stmt>

        <return pos:line="190" pos:column="9">return <expr><literal type="number" pos:line="190" pos:column="16">0<pos:position pos:line="190" pos:column="17"/></literal></expr>;<pos:position pos:line="190" pos:column="18"/></return>

        <comment type="block" pos:line="192" pos:column="9">/* NOTREACHED */</comment>
        <break pos:line="193" pos:column="9">break;<pos:position pos:line="193" pos:column="15"/></break>
    }<pos:position pos:line="194" pos:column="6"/></block></switch>

    <comment type="block" pos:line="196" pos:column="5">/* NOTREACHED */</comment>
}<pos:position pos:line="197" pos:column="2"/></block></function></unit>

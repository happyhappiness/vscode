<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2720_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">updateHeadersOrThrow<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name><name pos:line="2" pos:column="32">Ipc<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">StoreMapUpdate<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">update<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// our +/- hdr_sz math below does not work if the chains differ [in size]</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name><name pos:line="5" pos:column="10">update<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">stale<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">.<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">anchor<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">basics<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">.<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">swap_file_sz<pos:position pos:line="5" pos:column="50"/></name></name> <operator pos:line="5" pos:column="51">==<pos:position pos:line="5" pos:column="53"/></operator> <name><name pos:line="5" pos:column="54">update<pos:position pos:line="5" pos:column="60"/></name><operator pos:line="5" pos:column="60">.<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="61">fresh<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">.<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="67">anchor<pos:position pos:line="5" pos:column="73"/></name><operator pos:line="5" pos:column="73">-&gt;<pos:position pos:line="5" pos:column="78"/></operator><name pos:line="5" pos:column="75">basics<pos:position pos:line="5" pos:column="81"/></name><operator pos:line="5" pos:column="81">.<pos:position pos:line="5" pos:column="82"/></operator><name pos:line="5" pos:column="82">swap_file_sz<pos:position pos:line="5" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="96"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">HttpReply<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">rawReply<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><call><name><name pos:line="7" pos:column="33">update<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">entry<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">getReply<pos:position pos:line="7" pos:column="55"/></name></name><argument_list pos:line="7" pos:column="55">()<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">rawReply<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">HttpReply<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="22">reply<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">rawReply<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">uint64_t<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">staleHdrSz<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><name><name pos:line="10" pos:column="33">reply<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">.<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">hdr_sz<pos:position pos:line="10" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">20<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">7<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"stale hdr_sz: "<pos:position pos:line="11" pos:column="35"/></literal> <operator pos:line="11" pos:column="36">&lt;&lt;<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="39">staleHdrSz<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* we will need to copy same-slice payload after the stored headers later */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">Must<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><name pos:line="14" pos:column="10">staleHdrSz<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&gt;<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">update<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">stale<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">.<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">splicingPoint<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <call><name><name pos:line="15" pos:column="34">map<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">sliceContaining<pos:position pos:line="15" pos:column="54"/></name></name><argument_list pos:line="15" pos:column="54">(<argument><expr><name><name pos:line="15" pos:column="55">update<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">.<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="62">stale<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">.<pos:position pos:line="15" pos:column="68"/></operator><name pos:line="15" pos:column="68">fileNo<pos:position pos:line="15" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="76">staleHdrSz<pos:position pos:line="15" pos:column="86"/></name></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">Must<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><name><name pos:line="16" pos:column="10">update<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">stale<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">splicingPoint<pos:position pos:line="16" pos:column="36"/></name></name> <operator pos:line="16" pos:column="37">&gt;=<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">Must<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">(<argument><expr><name><name pos:line="17" pos:column="10">update<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">stale<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">.<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">anchor<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">basics<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">.<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">swap_file_sz<pos:position pos:line="17" pos:column="50"/></name></name> <operator pos:line="17" pos:column="51">&gt;=<pos:position pos:line="17" pos:column="56"/></operator> <name pos:line="17" pos:column="54">staleHdrSz<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">Must<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><name><name pos:line="19" pos:column="10">update<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">stale<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">anchor<pos:position pos:line="19" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">ShmWriter<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">writer<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><operator pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">this<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="29">update<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">entry<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="43">update<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">fresh<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">.<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="56">fileNo<pos:position pos:line="20" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></decl>;<pos:position pos:line="20" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">reply<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">.<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">packHeadersInto<pos:position pos:line="21" pos:column="26"/></name></name><argument_list pos:line="21" pos:column="26">(<argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">writer<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">uint64_t<pos:position pos:line="22" pos:column="19"/></name></type> <name pos:line="22" pos:column="20">freshHdrSz<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">= <expr><name><name pos:line="22" pos:column="33">writer<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">.<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">totalWritten<pos:position pos:line="22" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="22" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">20<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">7<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="19">"fresh hdr_sz: "<pos:position pos:line="23" pos:column="35"/></literal> <operator pos:line="23" pos:column="36">&lt;&lt;<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="39">freshHdrSz<pos:position pos:line="23" pos:column="49"/></name> <operator pos:line="23" pos:column="50">&lt;&lt;<pos:position pos:line="23" pos:column="58"/></operator> <literal type="string" pos:line="23" pos:column="53">" diff: "<pos:position pos:line="23" pos:column="62"/></literal> <operator pos:line="23" pos:column="63">&lt;&lt;<pos:position pos:line="23" pos:column="71"/></operator> <operator pos:line="23" pos:column="66">(<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="67">freshHdrSz<pos:position pos:line="23" pos:column="77"/></name> <operator pos:line="23" pos:column="78">-<pos:position pos:line="23" pos:column="79"/></operator> <name pos:line="23" pos:column="80">staleHdrSz<pos:position pos:line="23" pos:column="90"/></name><operator pos:line="23" pos:column="90">)<pos:position pos:line="23" pos:column="91"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="93"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* copy same-slice payload remaining after the stored headers */</comment>
    <decl_stmt><decl><type><specifier pos:line="26" pos:column="5">const<pos:position pos:line="26" pos:column="10"/></specifier> <name><name pos:line="26" pos:column="11">Ipc<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">::<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">StoreMapSlice<pos:position pos:line="26" pos:column="29"/></name></name> <modifier pos:line="26" pos:column="30">&amp;<pos:position pos:line="26" pos:column="35"/></modifier></type><name pos:line="26" pos:column="31">slice<pos:position pos:line="26" pos:column="36"/></name> <init pos:line="26" pos:column="37">= <expr><call><name><name pos:line="26" pos:column="39">map<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">readableSlice<pos:position pos:line="26" pos:column="57"/></name></name><argument_list pos:line="26" pos:column="57">(<argument><expr><name><name pos:line="26" pos:column="58">update<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">.<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="65">stale<pos:position pos:line="26" pos:column="70"/></name><operator pos:line="26" pos:column="70">.<pos:position pos:line="26" pos:column="71"/></operator><name pos:line="26" pos:column="71">fileNo<pos:position pos:line="26" pos:column="77"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="79">update<pos:position pos:line="26" pos:column="85"/></name><operator pos:line="26" pos:column="85">.<pos:position pos:line="26" pos:column="86"/></operator><name pos:line="26" pos:column="86">stale<pos:position pos:line="26" pos:column="91"/></name><operator pos:line="26" pos:column="91">.<pos:position pos:line="26" pos:column="92"/></operator><name pos:line="26" pos:column="92">splicingPoint<pos:position pos:line="26" pos:column="105"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="106"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="107"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">const<pos:position pos:line="27" pos:column="10"/></specifier> <name><name pos:line="27" pos:column="11">Ipc<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">::<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">StoreMapSlice<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">::<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">Size<pos:position pos:line="27" pos:column="35"/></name></name></type> <name pos:line="27" pos:column="36">sliceCapacity<pos:position pos:line="27" pos:column="49"/></name> <init pos:line="27" pos:column="50">= <expr><call><name><name pos:line="27" pos:column="52">Ipc<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">::<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="57">Mem<pos:position pos:line="27" pos:column="60"/></name><operator pos:line="27" pos:column="60">::<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="62">PageSize<pos:position pos:line="27" pos:column="70"/></name></name><argument_list pos:line="27" pos:column="70">()<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="73"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name><name pos:line="28" pos:column="11">Ipc<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">::<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">StoreMapSlice<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">::<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">Size<pos:position pos:line="28" pos:column="35"/></name></name></type> <name pos:line="28" pos:column="36">headersInLastSlice<pos:position pos:line="28" pos:column="54"/></name> <init pos:line="28" pos:column="55">= <expr><name pos:line="28" pos:column="57">staleHdrSz<pos:position pos:line="28" pos:column="67"/></name> <operator pos:line="28" pos:column="68">%<pos:position pos:line="28" pos:column="69"/></operator> <name pos:line="28" pos:column="70">sliceCapacity<pos:position pos:line="28" pos:column="83"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="84"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">Must<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">headersInLastSlice<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">&gt;<pos:position pos:line="29" pos:column="33"/></operator> <literal type="number" pos:line="29" pos:column="31">0<pos:position pos:line="29" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt> <comment type="line" pos:line="29" pos:column="35">// or sliceContaining() would have stopped earlier</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">Must<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><name><name pos:line="30" pos:column="10">slice<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">size<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">&gt;=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="24">headersInLastSlice<pos:position pos:line="30" pos:column="42"/></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="31" pos:column="5">const<pos:position pos:line="31" pos:column="10"/></specifier> <name><name pos:line="31" pos:column="11">Ipc<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">::<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">StoreMapSlice<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">::<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">Size<pos:position pos:line="31" pos:column="35"/></name></name></type> <name pos:line="31" pos:column="36">payloadInLastSlice<pos:position pos:line="31" pos:column="54"/></name> <init pos:line="31" pos:column="55">= <expr><name><name pos:line="31" pos:column="57">slice<pos:position pos:line="31" pos:column="62"/></name><operator pos:line="31" pos:column="62">.<pos:position pos:line="31" pos:column="63"/></operator><name pos:line="31" pos:column="63">size<pos:position pos:line="31" pos:column="67"/></name></name> <operator pos:line="31" pos:column="68">-<pos:position pos:line="31" pos:column="69"/></operator> <name pos:line="31" pos:column="70">headersInLastSlice<pos:position pos:line="31" pos:column="88"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="89"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="32" pos:column="5">const<pos:position pos:line="32" pos:column="10"/></specifier> <name><name pos:line="32" pos:column="11">MemStoreMapExtras<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">::<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">Item<pos:position pos:line="32" pos:column="34"/></name></name> <modifier pos:line="32" pos:column="35">&amp;<pos:position pos:line="32" pos:column="40"/></modifier></type><name pos:line="32" pos:column="36">extra<pos:position pos:line="32" pos:column="41"/></name> <init pos:line="32" pos:column="42">= <expr><name><name pos:line="32" pos:column="44">extras<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">items<pos:position pos:line="32" pos:column="57"/></name><index pos:line="32" pos:column="57">[<expr><name><name pos:line="32" pos:column="58">update<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">.<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="65">stale<pos:position pos:line="32" pos:column="70"/></name><operator pos:line="32" pos:column="70">.<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="71">splicingPoint<pos:position pos:line="32" pos:column="84"/></name></name></expr>]<pos:position pos:line="32" pos:column="85"/></index></name></expr></init></decl>;<pos:position pos:line="32" pos:column="86"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">page<pos:position pos:line="33" pos:column="15"/></name> <init pos:line="33" pos:column="16">= <expr><cast type="static" pos:line="33" pos:column="18">static_cast<argument_list type="generic" pos:line="33" pos:column="29">&lt;<argument><expr><name pos:line="33" pos:column="30">char<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">*<pos:position pos:line="33" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="33" pos:column="39"/></argument_list><argument_list pos:line="33" pos:column="36">(<argument><expr><call><name pos:line="33" pos:column="37">PagePointer<pos:position pos:line="33" pos:column="48"/></name><argument_list pos:line="33" pos:column="48">(<argument><expr><name><name pos:line="33" pos:column="49">extra<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">.<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="55">page<pos:position pos:line="33" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="33" pos:column="62"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">debugs<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="number" pos:line="34" pos:column="12">20<pos:position pos:line="34" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="16">5<pos:position pos:line="34" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">"appending same-slice payload: "<pos:position pos:line="34" pos:column="51"/></literal> <operator pos:line="34" pos:column="52">&lt;&lt;<pos:position pos:line="34" pos:column="60"/></operator> <name pos:line="34" pos:column="55">payloadInLastSlice<pos:position pos:line="34" pos:column="73"/></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">writer<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">append<pos:position pos:line="35" pos:column="18"/></name></name><argument_list pos:line="35" pos:column="18">(<argument><expr><name pos:line="35" pos:column="19">page<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">+<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">headersInLastSlice<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">payloadInLastSlice<pos:position pos:line="35" pos:column="64"/></name></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">update<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">fresh<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">splicingPoint<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name><name pos:line="36" pos:column="34">writer<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">.<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">lastSlice<pos:position pos:line="36" pos:column="50"/></name></name></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">update<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">.<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">fresh<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">.<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">anchor<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">basics<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">.<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">swap_file_sz<pos:position pos:line="38" pos:column="45"/></name></name> <operator pos:line="38" pos:column="46">-=<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">staleHdrSz<pos:position pos:line="38" pos:column="59"/></name></expr>;<pos:position pos:line="38" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">update<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">.<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">fresh<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">.<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">anchor<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">basics<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">.<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">swap_file_sz<pos:position pos:line="39" pos:column="45"/></name></name> <operator pos:line="39" pos:column="46">+=<pos:position pos:line="39" pos:column="48"/></operator> <name pos:line="39" pos:column="49">freshHdrSz<pos:position pos:line="39" pos:column="59"/></name></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">map<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">closeForUpdating<pos:position pos:line="41" pos:column="26"/></name></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">update<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1041.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">statfs<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">StoreEntry<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="35">e<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">storeAppendPrintf<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="24">e<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"\n"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">storeAppendPrintf<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">&amp;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="24">e<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="27">"Maximum Size: %"<pos:position pos:line="5" pos:column="44"/></literal> <name pos:line="5" pos:column="45">PRIu64<pos:position pos:line="5" pos:column="51"/></name> <literal type="string" pos:line="5" pos:column="52">" KB\n"<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="61">maxSize<pos:position pos:line="5" pos:column="68"/></name><argument_list pos:line="5" pos:column="68">()<pos:position pos:line="5" pos:column="70"/></argument_list></call> <operator pos:line="5" pos:column="71">&gt;&gt;<pos:position pos:line="5" pos:column="76"/></operator> <literal type="number" pos:line="5" pos:column="74">10<pos:position pos:line="5" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">storeAppendPrintf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="24">e<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"Current Size: %.2f KB %.2f%%\n"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="7" pos:column="23">currentSize<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call> <operator pos:line="7" pos:column="37">/<pos:position pos:line="7" pos:column="38"/></operator> <literal type="number" pos:line="7" pos:column="39">1024.0<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>,
                      <argument><expr><call><name><name pos:line="8" pos:column="23">Math<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">::<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">doublePercent<pos:position pos:line="8" pos:column="42"/></name></name><argument_list pos:line="8" pos:column="42">(<argument><expr><call><name pos:line="8" pos:column="43">currentSize<pos:position pos:line="8" pos:column="54"/></name><argument_list pos:line="8" pos:column="54">()<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="58">maxSize<pos:position pos:line="8" pos:column="65"/></name><argument_list pos:line="8" pos:column="65">()<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">int<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">entryLimit<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><call><name pos:line="10" pos:column="28">entryLimitActual<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">()<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">int<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">slotLimit<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">slotLimitActual<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">()<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">storeAppendPrintf<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="24">e<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"Maximum entries: %9d\n"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">entryLimit<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="65"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">map<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&amp;&amp;<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="16">entryLimit<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&gt;<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">int<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">entryCount<pos:position pos:line="14" pos:column="29"/></name> <init pos:line="14" pos:column="30">= <expr><call><name><name pos:line="14" pos:column="32">map<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">entryCount<pos:position pos:line="14" pos:column="47"/></name></name><argument_list pos:line="14" pos:column="47">()<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">storeAppendPrintf<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><operator pos:line="15" pos:column="27">&amp;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="28">e<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"Current entries: %9d %.2f%%\n"<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>,
                          <argument><expr><name pos:line="16" pos:column="27">entryCount<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="39">(<pos:position pos:line="16" pos:column="40"/></operator><literal type="number" pos:line="16" pos:column="40">100.0<pos:position pos:line="16" pos:column="45"/></literal> <operator pos:line="16" pos:column="46">*<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">entryCount<pos:position pos:line="16" pos:column="58"/></name> <operator pos:line="16" pos:column="59">/<pos:position pos:line="16" pos:column="60"/></operator> <name pos:line="16" pos:column="61">entryLimit<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">)<pos:position pos:line="16" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">storeAppendPrintf<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><operator pos:line="19" pos:column="23">&amp;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="24">e<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="27">"Maximum slots:   %9d\n"<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">slotLimit<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">map<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">&amp;&amp;<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="16">slotLimit<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&gt;<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30"> <block pos:line="20" pos:column="31">{
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">const<pos:position pos:line="21" pos:column="14"/></specifier> <name pos:line="21" pos:column="15">unsigned<pos:position pos:line="21" pos:column="23"/></name> <name pos:line="21" pos:column="24">int<pos:position pos:line="21" pos:column="27"/></name></type> <name pos:line="21" pos:column="28">slotsFree<pos:position pos:line="21" pos:column="37"/></name> <init pos:line="21" pos:column="38">= <expr><ternary><condition><expr><operator pos:line="21" pos:column="40">!<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">freeSlots<pos:position pos:line="21" pos:column="50"/></name></expr> ?<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52"> <expr><literal type="number" pos:line="21" pos:column="53">0<pos:position pos:line="21" pos:column="54"/></literal></expr> <pos:position pos:line="21" pos:column="55"/></then><else pos:line="21" pos:column="55">: <expr><call><name><name pos:line="21" pos:column="57">freeSlots<pos:position pos:line="21" pos:column="66"/></name><operator pos:line="21" pos:column="66">-&gt;<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="68">size<pos:position pos:line="21" pos:column="72"/></name></name><argument_list pos:line="21" pos:column="72">()<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="21" pos:column="75"/></decl_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">slotsFree<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;=<pos:position pos:line="22" pos:column="28"/></operator> <cast type="static" pos:line="22" pos:column="26">static_cast<argument_list type="generic" pos:line="22" pos:column="37">&lt;<argument><expr><specifier pos:line="22" pos:column="38">const<pos:position pos:line="22" pos:column="43"/></specifier> <name pos:line="22" pos:column="44">unsigned<pos:position pos:line="22" pos:column="52"/></name> <name pos:line="22" pos:column="53">int<pos:position pos:line="22" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="22" pos:column="60"/></argument_list><argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">slotLimit<pos:position pos:line="22" pos:column="67"/></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></cast></expr>)<pos:position pos:line="22" pos:column="69"/></condition><then pos:line="22" pos:column="69"> <block pos:line="22" pos:column="70">{
            <decl_stmt><decl><type><specifier pos:line="23" pos:column="13">const<pos:position pos:line="23" pos:column="18"/></specifier> <name pos:line="23" pos:column="19">int<pos:position pos:line="23" pos:column="22"/></name></type> <name pos:line="23" pos:column="23">usedSlots<pos:position pos:line="23" pos:column="32"/></name> <init pos:line="23" pos:column="33">= <expr><name pos:line="23" pos:column="35">slotLimit<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">-<pos:position pos:line="23" pos:column="46"/></operator> <cast type="static" pos:line="23" pos:column="47">static_cast<argument_list type="generic" pos:line="23" pos:column="58">&lt;<argument><expr><specifier pos:line="23" pos:column="59">const<pos:position pos:line="23" pos:column="64"/></specifier> <name pos:line="23" pos:column="65">int<pos:position pos:line="23" pos:column="68"/></name></expr></argument>&gt;<pos:position pos:line="23" pos:column="72"/></argument_list><argument_list pos:line="23" pos:column="69">(<argument><expr><name pos:line="23" pos:column="70">slotsFree<pos:position pos:line="23" pos:column="79"/></name></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="23" pos:column="81"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">storeAppendPrintf<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="32">e<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="35">"Used slots:      %9d %.2f%%\n"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>,
                              <argument><expr><name pos:line="25" pos:column="31">usedSlots<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="42">(<pos:position pos:line="25" pos:column="43"/></operator><literal type="number" pos:line="25" pos:column="43">100.0<pos:position pos:line="25" pos:column="48"/></literal> <operator pos:line="25" pos:column="49">*<pos:position pos:line="25" pos:column="50"/></operator> <name pos:line="25" pos:column="51">usedSlots<pos:position pos:line="25" pos:column="60"/></name> <operator pos:line="25" pos:column="61">/<pos:position pos:line="25" pos:column="62"/></operator> <name pos:line="25" pos:column="63">slotLimit<pos:position pos:line="25" pos:column="72"/></name><operator pos:line="25" pos:column="72">)<pos:position pos:line="25" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">slotLimit<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <literal type="number" pos:line="27" pos:column="25">100<pos:position pos:line="27" pos:column="28"/></literal></expr>)<pos:position pos:line="27" pos:column="29"/></condition><then pos:line="27" pos:column="29"> <block pos:line="27" pos:column="30">{ <comment type="line" pos:line="27" pos:column="32">// XXX: otherwise too expensive to count</comment>
            <decl_stmt><decl><type><name><name pos:line="28" pos:column="13">Ipc<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">::<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">ReadWriteLockStats<pos:position pos:line="28" pos:column="36"/></name></name></type> <name pos:line="28" pos:column="37">stats<pos:position pos:line="28" pos:column="42"/></name></decl>;<pos:position pos:line="28" pos:column="43"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">map<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">updateStats<pos:position pos:line="29" pos:column="29"/></name></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">stats<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">stats<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">.<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">dump<pos:position pos:line="30" pos:column="23"/></name></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">e<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">storeAppendPrintf<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><operator pos:line="34" pos:column="23">&amp;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="24">e<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="27">"Pending operations: %d out of %d\n"<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>,
                      <argument><expr><name pos:line="35" pos:column="23">store_open_disk_fd<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="43">Config<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">.<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="50">max_open_disk_fds<pos:position pos:line="35" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">storeAppendPrintf<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><operator pos:line="37" pos:column="23">&amp;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="24">e<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="27">"Flags:"<pos:position pos:line="37" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">flags<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">selected<pos:position pos:line="39" pos:column="23"/></name></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="9">storeAppendPrintf<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><operator pos:line="40" pos:column="27">&amp;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="28">e<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="31">" SELECTED"<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt></block></then></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">flags<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">.<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">read_only<pos:position pos:line="42" pos:column="24"/></name></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="9">storeAppendPrintf<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><operator pos:line="43" pos:column="27">&amp;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="28">e<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="31">" READ-ONLY"<pos:position pos:line="43" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">storeAppendPrintf<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><operator pos:line="45" pos:column="23">&amp;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="24">e<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"\n"<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>

}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

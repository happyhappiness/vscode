<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6575_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">esiChoose<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">addElement<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">ESIElement<pos:position pos:line="2" pos:column="33"/></name><operator pos:line="2" pos:column="33">::<pos:position pos:line="2" pos:column="35"/></operator><name pos:line="2" pos:column="35">Pointer<pos:position pos:line="2" pos:column="42"/></name></name></type> <name pos:line="2" pos:column="43">element<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* add an element to the output list */</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><cast type="dynamic" pos:line="6" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="6" pos:column="21">&lt;<argument><expr><name pos:line="6" pos:column="22">esiLiteral<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="37"/></argument_list><argument_list pos:line="6" pos:column="34">(<argument><expr><call><name><name pos:line="6" pos:column="35">element<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">.<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">getRaw<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></cast></expr>)<pos:position pos:line="6" pos:column="53"/></condition><then pos:line="6" pos:column="53"> <block pos:line="6" pos:column="54">{
        <comment type="block" pos:line="7" pos:column="9">/* Swallow whitespace */</comment>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">86<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">5<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"esiChooseAdd: Choose "<pos:position pos:line="8" pos:column="46"/></literal> <operator pos:line="8" pos:column="47">&lt;&lt;<pos:position pos:line="8" pos:column="55"/></operator> <name pos:line="8" pos:column="50">this<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">&lt;&lt;<pos:position pos:line="8" pos:column="63"/></operator> <literal type="string" pos:line="8" pos:column="58">" skipping whitespace "<pos:position pos:line="8" pos:column="81"/></literal> <operator pos:line="8" pos:column="82">&lt;&lt;<pos:position pos:line="8" pos:column="90"/></operator> <call><name><name pos:line="8" pos:column="85">element<pos:position pos:line="8" pos:column="92"/></name><operator pos:line="8" pos:column="92">.<pos:position pos:line="8" pos:column="93"/></operator><name pos:line="8" pos:column="93">getRaw<pos:position pos:line="8" pos:column="99"/></name></name><argument_list pos:line="8" pos:column="99">()<pos:position pos:line="8" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="103"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">true<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* Some elements require specific parents */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><cast type="dynamic" pos:line="13" pos:column="11">dynamic_cast<argument_list type="generic" pos:line="13" pos:column="23">&lt;<argument><expr><name pos:line="13" pos:column="24">esiWhen<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="36"/></argument_list><argument_list pos:line="13" pos:column="33">(<argument><expr><call><name><name pos:line="13" pos:column="34">element<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">getRaw<pos:position pos:line="13" pos:column="48"/></name></name><argument_list pos:line="13" pos:column="48">()<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></cast> <operator pos:line="13" pos:column="52">||<pos:position pos:line="13" pos:column="54"/></operator> <cast type="dynamic" pos:line="13" pos:column="55">dynamic_cast<argument_list type="generic" pos:line="13" pos:column="67">&lt;<argument><expr><name pos:line="13" pos:column="68">esiOtherwise<pos:position pos:line="13" pos:column="80"/></name><operator pos:line="13" pos:column="80">*<pos:position pos:line="13" pos:column="81"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="85"/></argument_list><argument_list pos:line="13" pos:column="82">(<argument><expr><call><name><name pos:line="13" pos:column="83">element<pos:position pos:line="13" pos:column="90"/></name><operator pos:line="13" pos:column="90">.<pos:position pos:line="13" pos:column="91"/></operator><name pos:line="13" pos:column="91">getRaw<pos:position pos:line="13" pos:column="97"/></name></name><argument_list pos:line="13" pos:column="97">()<pos:position pos:line="13" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="100"/></argument_list></cast><operator pos:line="13" pos:column="100">)<pos:position pos:line="13" pos:column="101"/></operator></expr>)<pos:position pos:line="13" pos:column="102"/></condition><then pos:line="13" pos:column="102"> <block pos:line="13" pos:column="103">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">86<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">DBG_CRITICAL<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"esiChooseAdd: invalid child node for esi:choose (section 3.3)"<pos:position pos:line="14" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="99"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">false<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><cast type="dynamic" pos:line="18" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="18" pos:column="21">&lt;<argument><expr><name pos:line="18" pos:column="22">esiOtherwise<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="18" pos:column="39"/></argument_list><argument_list pos:line="18" pos:column="36">(<argument><expr><call><name><name pos:line="18" pos:column="37">element<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">getRaw<pos:position pos:line="18" pos:column="51"/></name></name><argument_list pos:line="18" pos:column="51">()<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></cast></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55"> <block pos:line="18" pos:column="56">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name><name pos:line="19" pos:column="13">otherwise<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">getRaw<pos:position pos:line="19" pos:column="29"/></name></name><argument_list pos:line="19" pos:column="29">()<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <block pos:line="19" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">86<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">DBG_CRITICAL<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="38">"esiChooseAdd: only one otherwise node allowed for esi:choose (section 3.3)"<pos:position pos:line="20" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="116"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><literal type="boolean" pos:line="21" pos:column="20">false<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="24" pos:column="9">otherwise<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">element<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">elements<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">push_back<pos:position pos:line="26" pos:column="27"/></name></name> <argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">element<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name> <argument_list pos:line="28" pos:column="16">(<argument><expr><literal type="number" pos:line="28" pos:column="17">86<pos:position pos:line="28" pos:column="19"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="28" pos:column="20">3<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"esiChooseAdd: Added a new element, elements = "<pos:position pos:line="28" pos:column="71"/></literal> <operator pos:line="28" pos:column="72">&lt;&lt;<pos:position pos:line="28" pos:column="80"/></operator> <call><name><name pos:line="28" pos:column="75">elements<pos:position pos:line="28" pos:column="83"/></name><operator pos:line="28" pos:column="83">.<pos:position pos:line="28" pos:column="84"/></operator><name pos:line="28" pos:column="84">size<pos:position pos:line="28" pos:column="88"/></name></name><argument_list pos:line="28" pos:column="88">()<pos:position pos:line="28" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="92"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">chosenelement<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">==<pos:position pos:line="30" pos:column="29"/></operator> <operator pos:line="30" pos:column="30">-<pos:position pos:line="30" pos:column="31"/></operator><literal type="number" pos:line="30" pos:column="31">1<pos:position pos:line="30" pos:column="32"/></literal></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33"> <block pos:line="30" pos:column="34">{
            <decl_stmt><decl><type><specifier pos:line="31" pos:column="13">const<pos:position pos:line="31" pos:column="18"/></specifier> <name pos:line="31" pos:column="19">esiWhen<pos:position pos:line="31" pos:column="26"/></name> <modifier pos:line="31" pos:column="27">*<pos:position pos:line="31" pos:column="28"/></modifier></type> <name pos:line="31" pos:column="29">topElement<pos:position pos:line="31" pos:column="39"/></name><init pos:line="31" pos:column="39">=<expr><cast type="dynamic" pos:line="31" pos:column="40">dynamic_cast<argument_list type="generic" pos:line="31" pos:column="52">&lt;<argument><expr><name pos:line="31" pos:column="53">esiWhen<pos:position pos:line="31" pos:column="60"/></name> <operator pos:line="31" pos:column="61">*<pos:position pos:line="31" pos:column="62"/></operator></expr></argument>&gt;<pos:position pos:line="31" pos:column="66"/></argument_list><argument_list pos:line="31" pos:column="63">(<argument><expr><call><name><name pos:line="31" pos:column="64">element<pos:position pos:line="31" pos:column="71"/></name><operator pos:line="31" pos:column="71">.<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="72">getRaw<pos:position pos:line="31" pos:column="78"/></name></name><argument_list pos:line="31" pos:column="78">()<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="81"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="31" pos:column="82"/></decl_stmt>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">topElement<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">&amp;&amp;<pos:position pos:line="32" pos:column="38"/></operator> <call><name><name pos:line="32" pos:column="31">topElement<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">testsTrue<pos:position pos:line="32" pos:column="52"/></name></name><argument_list pos:line="32" pos:column="52">()<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55"> <block pos:line="32" pos:column="56">{
                <expr_stmt><expr><name pos:line="33" pos:column="17">chosenelement<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <call><name><name pos:line="33" pos:column="33">elements<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">.<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">size<pos:position pos:line="33" pos:column="46"/></name></name><argument_list pos:line="33" pos:column="46">()<pos:position pos:line="33" pos:column="48"/></argument_list></call> <operator pos:line="33" pos:column="49">-<pos:position pos:line="33" pos:column="50"/></operator> <literal type="number" pos:line="33" pos:column="51">1<pos:position pos:line="33" pos:column="52"/></literal></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">debugs<pos:position pos:line="34" pos:column="23"/></name> <argument_list pos:line="34" pos:column="24">(<argument><expr><literal type="number" pos:line="34" pos:column="25">86<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="34" pos:column="28">3<pos:position pos:line="34" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="31">"esiChooseAdd: Chose element "<pos:position pos:line="34" pos:column="61"/></literal> <operator pos:line="34" pos:column="62">&lt;&lt;<pos:position pos:line="34" pos:column="70"/></operator> <call><name><name pos:line="34" pos:column="65">elements<pos:position pos:line="34" pos:column="73"/></name><operator pos:line="34" pos:column="73">.<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="74">size<pos:position pos:line="34" pos:column="78"/></name></name><argument_list pos:line="34" pos:column="78">()<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="82"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></then></if>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>

    <return pos:line="39" pos:column="5">return <expr><literal type="boolean" pos:line="39" pos:column="12">true<pos:position pos:line="39" pos:column="16"/></literal></expr>;<pos:position pos:line="39" pos:column="17"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

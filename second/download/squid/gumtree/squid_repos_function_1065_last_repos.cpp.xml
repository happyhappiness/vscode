<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1065_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">statHistSBufDumper<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">sentry<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">double<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">val<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">double<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">size<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">int<pos:position pos:line="2" pos:column="74"/></name></type> <name pos:line="2" pos:column="75">count<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">count<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">storeAppendPrintf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">sentry<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"\t%d-%d\t%d\n"<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><cast type="static" pos:line="6" pos:column="48">static_cast<argument_list type="generic" pos:line="6" pos:column="59">&lt;<argument><expr><name pos:line="6" pos:column="60">int<pos:position pos:line="6" pos:column="63"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="67"/></argument_list><argument_list pos:line="6" pos:column="64">(<argument><expr><name pos:line="6" pos:column="65">val<pos:position pos:line="6" pos:column="68"/></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></cast></expr></argument>, <argument><expr><cast type="static" pos:line="6" pos:column="71">static_cast<argument_list type="generic" pos:line="6" pos:column="82">&lt;<argument><expr><name pos:line="6" pos:column="83">int<pos:position pos:line="6" pos:column="86"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="90"/></argument_list><argument_list pos:line="6" pos:column="87">(<argument><expr><name pos:line="6" pos:column="88">val<pos:position pos:line="6" pos:column="91"/></name><operator pos:line="6" pos:column="91">+<pos:position pos:line="6" pos:column="92"/></operator><name pos:line="6" pos:column="92">size<pos:position pos:line="6" pos:column="96"/></name></expr></argument>)<pos:position pos:line="6" pos:column="97"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="6" pos:column="99">count<pos:position pos:line="6" pos:column="104"/></name></expr></argument>)<pos:position pos:line="6" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="106"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

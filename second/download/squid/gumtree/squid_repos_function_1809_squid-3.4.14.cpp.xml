<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1809_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parse_header_token<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">external_acl_format<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">format<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">header<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name><name pos:line="2" pos:column="69">_external_acl_format<pos:position pos:line="2" pos:column="89"/></name><operator pos:line="2" pos:column="89">::<pos:position pos:line="2" pos:column="91"/></operator><name pos:line="2" pos:column="91">format_type<pos:position pos:line="2" pos:column="102"/></name></name></type> <name pos:line="2" pos:column="103">type<pos:position pos:line="2" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="108"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* header format */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">member<pos:position pos:line="5" pos:column="17"/></name></decl>, <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="20">end<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <comment type="block" format="doxygen" pos:line="7" pos:column="5">/** Cut away the closing brace */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">end<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">strchr<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">header<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="26">'}'<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">end<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&amp;&amp;<pos:position pos:line="9" pos:column="23"/></operator> <call><name pos:line="9" pos:column="16">strlen<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">end<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">1<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">end<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <literal type="char" pos:line="10" pos:column="16">'\0'<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">self_destruct<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">member<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">strchr<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">header<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="29">':'<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">member<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16"> <block pos:line="16" pos:column="17">{
        <comment type="block" pos:line="17" pos:column="9">/* Split in header and member */</comment>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">member<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="char" pos:line="18" pos:column="19">'\0'<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">member<pos:position pos:line="19" pos:column="17"/></name></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">xisalnum<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><operator pos:line="21" pos:column="23">*<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">member<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32"> <block pos:line="21" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">format<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">separator<pos:position pos:line="22" pos:column="30"/></name></name> <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="33">*<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">member<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="23" pos:column="13">++<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">member<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then> <else pos:line="24" pos:column="11">else <block pos:line="24" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">format<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">separator<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <literal type="char" pos:line="25" pos:column="33">','<pos:position pos:line="25" pos:column="36"/></literal></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="28" pos:column="9">format<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">member<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">xstrdup<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">member<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">type<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <name><name pos:line="30" pos:column="21">_external_acl_format<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">::<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="43">EXT_ACL_HEADER_REQUEST<pos:position pos:line="30" pos:column="65"/></name></name></expr>)<pos:position pos:line="30" pos:column="66"/></condition><then pos:line="30" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="13">format<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">type<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">=<pos:position pos:line="31" pos:column="27"/></operator> <name><name pos:line="31" pos:column="28">_external_acl_format<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">::<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">EXT_ACL_HEADER_REQUEST_MEMBER<pos:position pos:line="31" pos:column="79"/></name></name></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt></block></then>
        <else pos:line="32" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="13">format<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">type<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name><name pos:line="33" pos:column="28">_external_acl_format<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">::<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">EXT_ACL_HEADER_REQUEST_MEMBER<pos:position pos:line="33" pos:column="79"/></name></name></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt></block></else></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then> <else pos:line="34" pos:column="7">else <block pos:line="34" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">format<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">type<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">type<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">format<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">header<pos:position pos:line="38" pos:column="19"/></name></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">xstrdup<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">header<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">format<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">header_id<pos:position pos:line="39" pos:column="22"/></name></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <call><name pos:line="39" pos:column="25">httpHeaderIdByNameDef<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">header<pos:position pos:line="39" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="55">strlen<pos:position pos:line="39" pos:column="61"/></name><argument_list pos:line="39" pos:column="61">(<argument><expr><name pos:line="39" pos:column="62">header<pos:position pos:line="39" pos:column="68"/></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">format<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">header_id<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">!=<pos:position pos:line="41" pos:column="29"/></operator> <operator pos:line="41" pos:column="30">-<pos:position pos:line="41" pos:column="31"/></operator><literal type="number" pos:line="41" pos:column="31">1<pos:position pos:line="41" pos:column="32"/></literal></expr>)<pos:position pos:line="41" pos:column="33"/></condition><then pos:line="41" pos:column="33"> <block pos:line="41" pos:column="34">{
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">member<pos:position pos:line="42" pos:column="19"/></name></expr>)<pos:position pos:line="42" pos:column="20"/></condition><then pos:line="42" pos:column="20"> <block pos:line="42" pos:column="21">{
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">type<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">==<pos:position pos:line="43" pos:column="24"/></operator> <name><name pos:line="43" pos:column="25">_external_acl_format<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">::<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">EXT_ACL_HEADER_REQUEST<pos:position pos:line="43" pos:column="69"/></name></name></expr>)<pos:position pos:line="43" pos:column="70"/></condition><then pos:line="43" pos:column="70">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="17">format<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">type<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name><name pos:line="44" pos:column="32">_external_acl_format<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">::<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="54">EXT_ACL_HEADER_REQUEST_ID_MEMBER<pos:position pos:line="44" pos:column="86"/></name></name></expr>;<pos:position pos:line="44" pos:column="87"/></expr_stmt></block></then>
            <else pos:line="45" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="46" pos:column="17">format<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">type<pos:position pos:line="46" pos:column="29"/></name></name> <operator pos:line="46" pos:column="30">=<pos:position pos:line="46" pos:column="31"/></operator> <name><name pos:line="46" pos:column="32">_external_acl_format<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">::<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="54">EXT_ACL_HEADER_REPLY_ID_MEMBER<pos:position pos:line="46" pos:column="84"/></name></name></expr>;<pos:position pos:line="46" pos:column="85"/></expr_stmt></block></else></if>
        }<pos:position pos:line="47" pos:column="10"/></block></then> <else pos:line="47" pos:column="11">else <block pos:line="47" pos:column="16">{
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><name pos:line="48" pos:column="17">type<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">==<pos:position pos:line="48" pos:column="24"/></operator> <name><name pos:line="48" pos:column="25">_external_acl_format<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">::<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="47">EXT_ACL_HEADER_REQUEST<pos:position pos:line="48" pos:column="69"/></name></name></expr>)<pos:position pos:line="48" pos:column="70"/></condition><then pos:line="48" pos:column="70">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="17">format<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">-&gt;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="25">type<pos:position pos:line="49" pos:column="29"/></name></name> <operator pos:line="49" pos:column="30">=<pos:position pos:line="49" pos:column="31"/></operator> <name><name pos:line="49" pos:column="32">_external_acl_format<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">::<pos:position pos:line="49" pos:column="54"/></operator><name pos:line="49" pos:column="54">EXT_ACL_HEADER_REQUEST_ID<pos:position pos:line="49" pos:column="79"/></name></name></expr>;<pos:position pos:line="49" pos:column="80"/></expr_stmt></block></then>
            <else pos:line="50" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="17">format<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">-&gt;<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="25">type<pos:position pos:line="51" pos:column="29"/></name></name> <operator pos:line="51" pos:column="30">=<pos:position pos:line="51" pos:column="31"/></operator> <name><name pos:line="51" pos:column="32">_external_acl_format<pos:position pos:line="51" pos:column="52"/></name><operator pos:line="51" pos:column="52">::<pos:position pos:line="51" pos:column="54"/></operator><name pos:line="51" pos:column="54">EXT_ACL_HEADER_REPLY_ID<pos:position pos:line="51" pos:column="77"/></name></name></expr>;<pos:position pos:line="51" pos:column="78"/></expr_stmt></block></else></if>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3800_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Qos<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">Config<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">dumpConfigLine<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">entry<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">name<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list> <specifier pos:line="2" pos:column="64">const<pos:position pos:line="2" pos:column="69"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">entry<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">isHitTosActive<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">()<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{

        <expr_stmt><expr><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">+=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">snprintf<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">p<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="26">11<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"%s"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">name<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt> <comment type="line" pos:line="7" pos:column="43">// strlen("qos_flows ");</comment>
        <expr_stmt><expr><name pos:line="8" pos:column="9">p<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">+=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">snprintf<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">p<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="26">4<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"%s"<pos:position pos:line="8" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"tos"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">tosLocalHit<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&gt;<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">p<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">+=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">snprintf<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">p<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="30">16<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">" local-hit=0x%02X"<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">tosLocalHit<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">tosSiblingHit<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&gt;<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">p<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">+=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">snprintf<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">p<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="30">18<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">" sibling-hit=0x%02X"<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">tosSiblingHit<pos:position pos:line="14" pos:column="70"/></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">tosParentHit<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&gt;<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">p<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">+=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">snprintf<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">p<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="30">17<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="34">" parent-hit=0x%02X"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">tosParentHit<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">tosMiss<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">&gt;<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">p<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">+=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">snprintf<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">p<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="30">11<pos:position pos:line="20" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">" miss=0x%02X"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">tosMiss<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">tosMissMask<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">!=<pos:position pos:line="21" pos:column="30"/></operator><literal type="number" pos:line="21" pos:column="30">0xFFU<pos:position pos:line="21" pos:column="35"/></literal></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <block pos:line="21" pos:column="37">{
                <expr_stmt><expr><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">+=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">snprintf<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">p<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="34">6<pos:position pos:line="22" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="37">"/0x%02X"<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">markMissMask<pos:position pos:line="22" pos:column="60"/></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">preserveMissTos<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">==<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">p<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">+=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">snprintf<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">p<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="30">23<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">" disable-preserve-miss"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">preserveMissTos<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">&amp;&amp;<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="32">preserveMissTosMask<pos:position pos:line="28" pos:column="51"/></name> <operator pos:line="28" pos:column="52">!=<pos:position pos:line="28" pos:column="54"/></operator> <literal type="number" pos:line="28" pos:column="55">0<pos:position pos:line="28" pos:column="56"/></literal></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57"> <block pos:line="28" pos:column="58">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">p<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">+=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">snprintf<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">p<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="30">16<pos:position pos:line="29" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="34">" miss-mask=0x%02X"<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">preserveMissTosMask<pos:position pos:line="29" pos:column="74"/></name></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="31" pos:column="9">p<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">+=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">snprintf<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">p<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="26">2<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="29">"\n"<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">isHitNfmarkActive<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">()<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29"> <block pos:line="34" pos:column="30">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">p<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">+=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">snprintf<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">p<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="26">11<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="30">"%s"<pos:position pos:line="35" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">name<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt> <comment type="line" pos:line="35" pos:column="43">// strlen("qos_flows ");</comment>
        <expr_stmt><expr><name pos:line="36" pos:column="9">p<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">+=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">snprintf<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">p<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="26">5<pos:position pos:line="36" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="29">"%s"<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="35">"mark"<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">markLocalHit<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">&gt;<pos:position pos:line="38" pos:column="30"/></operator> <literal type="number" pos:line="38" pos:column="28">0<pos:position pos:line="38" pos:column="29"/></literal></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30"> <block pos:line="38" pos:column="31">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">p<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">+=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">snprintf<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">p<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="30">22<pos:position pos:line="39" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="34">" local-hit=0x%02X"<pos:position pos:line="39" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="55">markLocalHit<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">markSiblingHit<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">&gt;<pos:position pos:line="41" pos:column="32"/></operator> <literal type="number" pos:line="41" pos:column="30">0<pos:position pos:line="41" pos:column="31"/></literal></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32"> <block pos:line="41" pos:column="33">{
            <expr_stmt><expr><name pos:line="42" pos:column="13">p<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">+=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">snprintf<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">p<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="30">24<pos:position pos:line="42" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="34">" sibling-hit=0x%02X"<pos:position pos:line="42" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="57">markSiblingHit<pos:position pos:line="42" pos:column="71"/></name></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">markParentHit<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&gt;<pos:position pos:line="44" pos:column="31"/></operator> <literal type="number" pos:line="44" pos:column="29">0<pos:position pos:line="44" pos:column="30"/></literal></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
            <expr_stmt><expr><name pos:line="45" pos:column="13">p<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">+=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">snprintf<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">p<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="30">23<pos:position pos:line="45" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="34">" parent-hit=0x%02X"<pos:position pos:line="45" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="56">markParentHit<pos:position pos:line="45" pos:column="69"/></name></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">markMiss<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">&gt;<pos:position pos:line="47" pos:column="26"/></operator> <literal type="number" pos:line="47" pos:column="24">0<pos:position pos:line="47" pos:column="25"/></literal></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
            <expr_stmt><expr><name pos:line="48" pos:column="13">p<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">+=<pos:position pos:line="48" pos:column="17"/></operator> <call><name pos:line="48" pos:column="18">snprintf<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">p<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="30">17<pos:position pos:line="48" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="34">" miss=0x%02X"<pos:position pos:line="48" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">markMiss<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name pos:line="49" pos:column="17">markMissMask<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">!=<pos:position pos:line="49" pos:column="31"/></operator><literal type="number" pos:line="49" pos:column="31">0xFFFFFFFFU<pos:position pos:line="49" pos:column="42"/></literal></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43"> <block pos:line="49" pos:column="44">{
                <expr_stmt><expr><name pos:line="50" pos:column="17">p<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">+=<pos:position pos:line="50" pos:column="21"/></operator> <call><name pos:line="50" pos:column="22">snprintf<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">p<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="34">12<pos:position pos:line="50" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="38">"/0x%02X"<pos:position pos:line="50" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">markMissMask<pos:position pos:line="50" pos:column="61"/></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">preserveMissMark<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">==<pos:position pos:line="53" pos:column="32"/></operator> <literal type="boolean" pos:line="53" pos:column="33">false<pos:position pos:line="53" pos:column="38"/></literal></expr>)<pos:position pos:line="53" pos:column="39"/></condition><then pos:line="53" pos:column="39"> <block pos:line="53" pos:column="40">{
            <expr_stmt><expr><name pos:line="54" pos:column="13">p<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">+=<pos:position pos:line="54" pos:column="17"/></operator> <call><name pos:line="54" pos:column="18">snprintf<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">p<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="30">23<pos:position pos:line="54" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="34">" disable-preserve-miss"<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">preserveMissMark<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">&amp;&amp;<pos:position pos:line="56" pos:column="40"/></operator> <name pos:line="56" pos:column="33">preserveMissMarkMask<pos:position pos:line="56" pos:column="53"/></name> <operator pos:line="56" pos:column="54">!=<pos:position pos:line="56" pos:column="56"/></operator> <literal type="number" pos:line="56" pos:column="57">0<pos:position pos:line="56" pos:column="58"/></literal></expr>)<pos:position pos:line="56" pos:column="59"/></condition><then pos:line="56" pos:column="59"> <block pos:line="56" pos:column="60">{
            <expr_stmt><expr><name pos:line="57" pos:column="13">p<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">+=<pos:position pos:line="57" pos:column="17"/></operator> <call><name pos:line="57" pos:column="18">snprintf<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">p<pos:position pos:line="57" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="30">22<pos:position pos:line="57" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="34">" miss-mask=0x%02X"<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="55">preserveMissMarkMask<pos:position pos:line="57" pos:column="75"/></name></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="59" pos:column="9">p<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">+=<pos:position pos:line="59" pos:column="13"/></operator> <call><name pos:line="59" pos:column="14">snprintf<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">p<pos:position pos:line="59" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="26">2<pos:position pos:line="59" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="29">"\n"<pos:position pos:line="59" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

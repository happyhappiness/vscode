<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3334_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">DelayId<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">DelayId<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">DelayClient<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">ClientHttpRequest<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">http<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpRequest<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">short<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">pool<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">http<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">r<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <name><name pos:line="7" pos:column="9">http<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">request<pos:position pos:line="7" pos:column="22"/></name></name></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">r<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">client_addr<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">isNoAddr<pos:position pos:line="9" pos:column="32"/></name></name><argument_list pos:line="9" pos:column="32">()<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35"> <block pos:line="9" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">77<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">2<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"delayClient: WARNING: Called with 'NO_ADDR' address, ignoring"<pos:position pos:line="10" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="88"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">DelayId<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">()<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">pool<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></init> <condition><expr><name pos:line="14" pos:column="20">pool<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">&lt;<pos:position pos:line="14" pos:column="29"/></operator> <call><name><name pos:line="14" pos:column="27">DelayPools<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">::<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">pools<pos:position pos:line="14" pos:column="44"/></name></name><argument_list pos:line="14" pos:column="44">()<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></condition> <incr><expr><operator pos:line="14" pos:column="48">++<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">pool<pos:position pos:line="14" pos:column="54"/></name></expr></incr>)<pos:position pos:line="14" pos:column="55"/></control> <block pos:line="14" pos:column="56">{

        <comment type="block" pos:line="16" pos:column="9">/* pools require explicit 'allow' to assign a client into them */</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">DelayPools<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">::<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">delay_data<pos:position pos:line="17" pos:column="36"/></name><index pos:line="17" pos:column="36">[<expr><name pos:line="17" pos:column="37">pool<pos:position pos:line="17" pos:column="41"/></name></expr>]<pos:position pos:line="17" pos:column="42"/></index></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">access<pos:position pos:line="17" pos:column="49"/></name></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50"> <block pos:line="17" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">debugs<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="number" pos:line="18" pos:column="20">77<pos:position pos:line="18" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="24">DBG_IMPORTANT<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">"delay_pool "<pos:position pos:line="18" pos:column="52"/></literal> <operator pos:line="18" pos:column="53">&lt;&lt;<pos:position pos:line="18" pos:column="61"/></operator> <name pos:line="18" pos:column="56">pool<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">&lt;&lt;<pos:position pos:line="18" pos:column="69"/></operator>
                   <literal type="string" pos:line="19" pos:column="20">" has no delay_access configured. This means that no clients will ever use it."<pos:position pos:line="19" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="101"/></expr_stmt>
            <continue pos:line="20" pos:column="13">continue;<pos:position pos:line="20" pos:column="22"/></continue>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="23" pos:column="9">ACLFilledChecklist<pos:position pos:line="23" pos:column="27"/></name></type> <name pos:line="23" pos:column="28">ch<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name><name pos:line="23" pos:column="31">DelayPools<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">::<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">delay_data<pos:position pos:line="23" pos:column="53"/></name><index pos:line="23" pos:column="53">[<expr><name pos:line="23" pos:column="54">pool<pos:position pos:line="23" pos:column="58"/></name></expr>]<pos:position pos:line="23" pos:column="59"/></index></name><operator pos:line="23" pos:column="59">.<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">access<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">r<pos:position pos:line="23" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="71">NULL<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></decl>;<pos:position pos:line="23" pos:column="77"/></decl_stmt>
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="24" pos:column="27"/></name></expr></cpp:if>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">Config<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">onoff<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">delay_pool_uses_indirect_client<pos:position pos:line="25" pos:column="57"/></name></name></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="13">ch<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">.<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">src_addr<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="27">r<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">indirect_client_addr<pos:position pos:line="26" pos:column="50"/></name></name></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt></block></then>
        <else pos:line="27" pos:column="9">else
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="28" pos:column="8">/* FOLLOW_X_FORWARDED_FOR */</comment>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="13">ch<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">src_addr<pos:position pos:line="29" pos:column="24"/></name></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name><name pos:line="29" pos:column="27">r<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">client_addr<pos:position pos:line="29" pos:column="41"/></name></name></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">ch<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">my_addr<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name><name pos:line="30" pos:column="22">r<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">my_addr<pos:position pos:line="30" pos:column="32"/></name></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name><name pos:line="32" pos:column="13">http<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">getConn<pos:position pos:line="32" pos:column="26"/></name></name><argument_list pos:line="32" pos:column="26">()<pos:position pos:line="32" pos:column="28"/></argument_list></call> <operator pos:line="32" pos:column="29">!=<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">NULL<pos:position pos:line="32" pos:column="36"/></name></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="33" pos:column="13">ch<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">.<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">conn<pos:position pos:line="33" pos:column="20"/></name></name><argument_list pos:line="33" pos:column="20">(<argument><expr><call><name><name pos:line="33" pos:column="21">http<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">getConn<pos:position pos:line="33" pos:column="34"/></name></name><argument_list pos:line="33" pos:column="34">()<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt></block></then></if>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">DelayPools<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">::<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">delay_data<pos:position pos:line="35" pos:column="35"/></name><index pos:line="35" pos:column="35">[<expr><name pos:line="35" pos:column="36">pool<pos:position pos:line="35" pos:column="40"/></name></expr>]<pos:position pos:line="35" pos:column="41"/></index></name><operator pos:line="35" pos:column="41">.<pos:position pos:line="35" pos:column="42"/></operator><call><name pos:line="35" pos:column="42">theComposite<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">()<pos:position pos:line="35" pos:column="56"/></argument_list></call><operator pos:line="35" pos:column="56">.<pos:position pos:line="35" pos:column="57"/></operator><call><name pos:line="35" pos:column="57">getRaw<pos:position pos:line="35" pos:column="63"/></name><argument_list pos:line="35" pos:column="63">()<pos:position pos:line="35" pos:column="65"/></argument_list></call> <operator pos:line="35" pos:column="66">&amp;&amp;<pos:position pos:line="35" pos:column="76"/></operator> <call><name><name pos:line="35" pos:column="69">ch<pos:position pos:line="35" pos:column="71"/></name><operator pos:line="35" pos:column="71">.<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="72">fastCheck<pos:position pos:line="35" pos:column="81"/></name></name><argument_list pos:line="35" pos:column="81">()<pos:position pos:line="35" pos:column="83"/></argument_list></call> <operator pos:line="35" pos:column="84">==<pos:position pos:line="35" pos:column="86"/></operator> <name pos:line="35" pos:column="87">ACCESS_ALLOWED<pos:position pos:line="35" pos:column="101"/></name></expr>)<pos:position pos:line="35" pos:column="102"/></condition><then pos:line="35" pos:column="102"> <block pos:line="35" pos:column="103">{

            <decl_stmt><decl><type><name pos:line="37" pos:column="13">DelayId<pos:position pos:line="37" pos:column="20"/></name></type> <name pos:line="37" pos:column="21">result<pos:position pos:line="37" pos:column="27"/></name> <argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">pool<pos:position pos:line="37" pos:column="33"/></name> <operator pos:line="37" pos:column="34">+<pos:position pos:line="37" pos:column="35"/></operator> <literal type="number" pos:line="37" pos:column="36">1<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></decl>;<pos:position pos:line="37" pos:column="39"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="38" pos:column="13">CompositePoolNode<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">::<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">CompositeSelectionDetails<pos:position pos:line="38" pos:column="57"/></name></name></type> <name pos:line="38" pos:column="58">details<pos:position pos:line="38" pos:column="65"/></name></decl>;<pos:position pos:line="38" pos:column="66"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">details<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">.<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">src_addr<pos:position pos:line="39" pos:column="29"/></name></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <name><name pos:line="39" pos:column="32">ch<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">src_addr<pos:position pos:line="39" pos:column="43"/></name></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">USE_AUTH<pos:position pos:line="40" pos:column="13"/></name></expr></cpp:if>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">details<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">user<pos:position pos:line="41" pos:column="25"/></name></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="28">r<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">auth_user_request<pos:position pos:line="41" pos:column="48"/></name></name></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">details<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">.<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">tag<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <name><name pos:line="43" pos:column="27">r<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">tag<pos:position pos:line="43" pos:column="33"/></name></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">result<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">compositePosition<pos:position pos:line="44" pos:column="37"/></name></name><argument_list pos:line="44" pos:column="37">(<argument><expr><name><name pos:line="44" pos:column="38">DelayPools<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">::<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">delay_data<pos:position pos:line="44" pos:column="60"/></name><index pos:line="44" pos:column="60">[<expr><name pos:line="44" pos:column="61">pool<pos:position pos:line="44" pos:column="65"/></name></expr>]<pos:position pos:line="44" pos:column="66"/></index></name><operator pos:line="44" pos:column="66">.<pos:position pos:line="44" pos:column="67"/></operator><call><name pos:line="44" pos:column="67">theComposite<pos:position pos:line="44" pos:column="79"/></name><argument_list pos:line="44" pos:column="79">()<pos:position pos:line="44" pos:column="81"/></argument_list></call><operator pos:line="44" pos:column="81">-&gt;<pos:position pos:line="44" pos:column="86"/></operator><call><name pos:line="44" pos:column="83">id<pos:position pos:line="44" pos:column="85"/></name><argument_list pos:line="44" pos:column="85">(<argument><expr><name pos:line="44" pos:column="86">details<pos:position pos:line="44" pos:column="93"/></name></expr></argument>)<pos:position pos:line="44" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="96"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">result<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></for>

    <return pos:line="49" pos:column="5">return <expr><call><name pos:line="49" pos:column="12">DelayId<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">()<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_744_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">WIN32_RemoveService<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SC_HANDLE<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">schService<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SC_HANDLE<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">schSCManager<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">WIN32_Service_name<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">WIN32_Service_name<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">xstrdup<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">_WIN_SQUID_DEFAULT_SERVICE_NAME<pos:position pos:line="8" pos:column="69"/></name></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">strcat<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">REGKEY<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">WIN32_Service_name<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="12" pos:column="5">keys<pos:position pos:line="12" pos:column="9"/></name><index pos:line="12" pos:column="9">[<expr><literal type="number" pos:line="12" pos:column="10">4<pos:position pos:line="12" pos:column="11"/></literal></expr>]<pos:position pos:line="12" pos:column="12"/></index></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">WIN32_Service_name<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">schSCManager<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">OpenSCManager<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">NULL<pos:position pos:line="14" pos:column="38"/></name></expr></argument>,	<comment type="block" pos:line="14" pos:column="41">/* machine (NULL == local)    */</comment>
                                 <argument><expr><name pos:line="15" pos:column="34">NULL<pos:position pos:line="15" pos:column="38"/></name></expr></argument>,			<comment type="block" pos:line="15" pos:column="57">/* database (NULL == default) */</comment>
                                 <argument><expr><name pos:line="16" pos:column="34">SC_MANAGER_ALL_ACCESS<pos:position pos:line="16" pos:column="55"/></name></expr></argument>	<comment type="block" pos:line="16" pos:column="57">/* access required            */</comment>
                                )<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">schSCManager<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">fprintf<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">stderr<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="25">"OpenSCManager failed\n"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt></block></then>
    <else pos:line="21" pos:column="5">else <block pos:line="21" pos:column="10">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">schService<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">OpenService<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">schSCManager<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">WIN32_Service_name<pos:position pos:line="22" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="68">SERVICE_ALL_ACCESS<pos:position pos:line="22" pos:column="86"/></name></expr></argument>)<pos:position pos:line="22" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="88"/></expr_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">schService<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">==<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">NULL<pos:position pos:line="24" pos:column="31"/></name></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="13">fprintf<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">stderr<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="29">"OpenService failed\n"<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt></block></then>

        <comment type="block" pos:line="27" pos:column="9">/* Could not open the service */</comment>
        <else pos:line="28" pos:column="9">else <block pos:line="28" pos:column="14">{
            <comment type="block" pos:line="29" pos:column="13">/* try to stop the service */</comment>

            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><call><name pos:line="31" pos:column="17">ControlService<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">schService<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">_WIN_SQUID_SERVICE_CONTROL_STOP<pos:position pos:line="31" pos:column="75"/></name></expr></argument>,
                               <argument><expr><operator pos:line="32" pos:column="32">&amp;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="33">svcStatus<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">sleep<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><literal type="number" pos:line="33" pos:column="23">1<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>

                <while pos:line="35" pos:column="17">while <condition pos:line="35" pos:column="23">(<expr><call><name pos:line="35" pos:column="24">QueryServiceStatus<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><name pos:line="35" pos:column="43">schService<pos:position pos:line="35" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="55">&amp;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="56">svcStatus<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="67"/></condition> <block pos:line="35" pos:column="68">{
                    <if pos:line="36" pos:column="21">if <condition pos:line="36" pos:column="24">(<expr><name><name pos:line="36" pos:column="25">svcStatus<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">dwCurrentState<pos:position pos:line="36" pos:column="49"/></name></name> <operator pos:line="36" pos:column="50">==<pos:position pos:line="36" pos:column="52"/></operator> <name pos:line="36" pos:column="53">SERVICE_STOP_PENDING<pos:position pos:line="36" pos:column="73"/></name></expr>)<pos:position pos:line="36" pos:column="74"/></condition><then pos:line="36" pos:column="74">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">sleep<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><literal type="number" pos:line="37" pos:column="31">1<pos:position pos:line="37" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt></block></then>
                    <else pos:line="38" pos:column="21">else
                        <block type="pseudo"><break pos:line="39" pos:column="25">break;<pos:position pos:line="39" pos:column="31"/></break></block></else></if>
                }<pos:position pos:line="40" pos:column="18"/></block></while>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="43" pos:column="13">/* now remove the service */</comment>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><call><name pos:line="44" pos:column="17">DeleteService<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">schService<pos:position pos:line="44" pos:column="41"/></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call> <operator pos:line="44" pos:column="43">==<pos:position pos:line="44" pos:column="45"/></operator> <literal type="number" pos:line="44" pos:column="46">0<pos:position pos:line="44" pos:column="47"/></literal></expr>)<pos:position pos:line="44" pos:column="48"/></condition><then pos:line="44" pos:column="48">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">fprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">stderr<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="33">"DeleteService failed.\n"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt></block></then>
            <else pos:line="46" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">printf<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><literal type="string" pos:line="47" pos:column="24">"Service %s deleted successfully.\n"<pos:position pos:line="47" pos:column="60"/></literal></expr></argument>,
                       <argument><expr><name pos:line="48" pos:column="24">WIN32_Service_name<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt></block></else></if>

            <expr_stmt><expr><call><name pos:line="50" pos:column="13">CloseServiceHandle<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">schService<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="53" pos:column="9">CloseServiceHandle<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><name pos:line="53" pos:column="28">schSCManager<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></else></if>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

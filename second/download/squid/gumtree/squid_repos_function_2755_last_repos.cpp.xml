<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2755_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">gopherTimeout<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">CommTimeoutCbParams<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="42">io<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">GopherStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">gopherState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><cast type="static" pos:line="4" pos:column="36">static_cast<argument_list type="generic" pos:line="4" pos:column="47">&lt;<argument><expr><name pos:line="4" pos:column="48">GopherStateData<pos:position pos:line="4" pos:column="63"/></name> <operator pos:line="4" pos:column="64">*<pos:position pos:line="4" pos:column="65"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="69"/></argument_list><argument_list pos:line="4" pos:column="66">(<argument><expr><name><name pos:line="4" pos:column="67">io<pos:position pos:line="4" pos:column="69"/></name><operator pos:line="4" pos:column="69">.<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="70">data<pos:position pos:line="4" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">10<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">4<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">HERE<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <name><name pos:line="5" pos:column="27">io<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">conn<pos:position pos:line="5" pos:column="34"/></name></name> <operator pos:line="5" pos:column="35">&lt;&lt;<pos:position pos:line="5" pos:column="43"/></operator> <literal type="string" pos:line="5" pos:column="38">": '"<pos:position pos:line="5" pos:column="43"/></literal> <operator pos:line="5" pos:column="44">&lt;&lt;<pos:position pos:line="5" pos:column="52"/></operator> <call><name><name pos:line="5" pos:column="47">gopherState<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">entry<pos:position pos:line="5" pos:column="65"/></name><operator pos:line="5" pos:column="65">-&gt;<pos:position pos:line="5" pos:column="70"/></operator><name pos:line="5" pos:column="67">url<pos:position pos:line="5" pos:column="70"/></name></name><argument_list pos:line="5" pos:column="70">()<pos:position pos:line="5" pos:column="72"/></argument_list></call> <operator pos:line="5" pos:column="73">&lt;&lt;<pos:position pos:line="5" pos:column="81"/></operator> <literal type="string" pos:line="5" pos:column="76">"'"<pos:position pos:line="5" pos:column="79"/></literal></expr></argument> )<pos:position pos:line="5" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="82"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">gopherState<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">fwd<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">fail<pos:position pos:line="7" pos:column="27"/></name></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">new<pos:position pos:line="7" pos:column="31"/></operator> <call><name pos:line="7" pos:column="32">ErrorState<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">ERR_READ_TIMEOUT<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="61">Http<pos:position pos:line="7" pos:column="65"/></name><operator pos:line="7" pos:column="65">::<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="67">scGatewayTimeout<pos:position pos:line="7" pos:column="83"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="85">gopherState<pos:position pos:line="7" pos:column="96"/></name><operator pos:line="7" pos:column="96">-&gt;<pos:position pos:line="7" pos:column="101"/></operator><name pos:line="7" pos:column="98">fwd<pos:position pos:line="7" pos:column="101"/></name><operator pos:line="7" pos:column="101">-&gt;<pos:position pos:line="7" pos:column="106"/></operator><name pos:line="7" pos:column="103">request<pos:position pos:line="7" pos:column="110"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="113"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">Comm<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">::<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">IsConnOpen<pos:position pos:line="9" pos:column="25"/></name></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name><name pos:line="9" pos:column="26">io<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">.<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">conn<pos:position pos:line="9" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">io<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">conn<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">close<pos:position pos:line="10" pos:column="23"/></name></name><argument_list pos:line="10" pos:column="23">()<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

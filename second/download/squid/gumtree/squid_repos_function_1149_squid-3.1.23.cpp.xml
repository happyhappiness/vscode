<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1149_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">requirePathnameExists<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">name<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">path<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">stat<pos:position pos:line="5" pos:column="16"/></name></name></type> <name pos:line="5" pos:column="17">sb<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">pathbuf<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><name pos:line="6" pos:column="18">BUFSIZ<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">path<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">!=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">Config<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">chroot_dir<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">&amp;&amp;<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="30">(<pos:position pos:line="9" pos:column="31"/></operator><call><name pos:line="9" pos:column="31">geteuid<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <block pos:line="9" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">snprintf<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">pathbuf<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">BUFSIZ<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"%s/%s"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="44">Config<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">chroot_dir<pos:position pos:line="10" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="63">path<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">path<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">pathbuf<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">stat<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">path<pos:position pos:line="14" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="21">sb<pos:position pos:line="14" pos:column="23"/></name></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call> <operator pos:line="14" pos:column="25">&lt;<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">DBG_CRITICAL<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="33">(<pos:position pos:line="15" pos:column="34"/></operator><ternary><condition><expr><name pos:line="15" pos:column="34">opt_parse_cfg_only<pos:position pos:line="15" pos:column="52"/></name></expr>?<pos:position pos:line="15" pos:column="53"/></condition><then><expr><literal type="string" pos:line="15" pos:column="53">"FATAL "<pos:position pos:line="15" pos:column="61"/></literal></expr></then><else pos:line="15" pos:column="61">:<expr><literal type="string" pos:line="15" pos:column="62">""<pos:position pos:line="15" pos:column="64"/></literal></expr></else></ternary><operator pos:line="15" pos:column="64">)<pos:position pos:line="15" pos:column="65"/></operator> <operator pos:line="15" pos:column="66">&lt;&lt;<pos:position pos:line="15" pos:column="74"/></operator> <literal type="string" pos:line="15" pos:column="69">"ERROR: "<pos:position pos:line="15" pos:column="78"/></literal> <operator pos:line="15" pos:column="79">&lt;&lt;<pos:position pos:line="15" pos:column="87"/></operator> <name pos:line="15" pos:column="82">name<pos:position pos:line="15" pos:column="86"/></name> <operator pos:line="15" pos:column="87">&lt;&lt;<pos:position pos:line="15" pos:column="95"/></operator> <literal type="string" pos:line="15" pos:column="90">" "<pos:position pos:line="15" pos:column="93"/></literal> <operator pos:line="15" pos:column="94">&lt;&lt;<pos:position pos:line="15" pos:column="102"/></operator> <name pos:line="15" pos:column="97">path<pos:position pos:line="15" pos:column="101"/></name> <operator pos:line="15" pos:column="102">&lt;&lt;<pos:position pos:line="15" pos:column="110"/></operator> <literal type="string" pos:line="15" pos:column="105">": "<pos:position pos:line="15" pos:column="109"/></literal> <operator pos:line="15" pos:column="110">&lt;&lt;<pos:position pos:line="15" pos:column="118"/></operator> <call><name pos:line="15" pos:column="113">xstrerror<pos:position pos:line="15" pos:column="122"/></name><argument_list pos:line="15" pos:column="122">()<pos:position pos:line="15" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="126"/></expr_stmt>
        <comment type="line" pos:line="16" pos:column="9">// keep going to find more issues if we are only checking the config file with "-k parse"</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">opt_parse_cfg_only<pos:position pos:line="17" pos:column="31"/></name></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32">
            <block type="pseudo"><return pos:line="18" pos:column="13">return;<pos:position pos:line="18" pos:column="20"/></return></block></then></if>
        <comment type="line" pos:line="19" pos:column="9">// this is fatal if it is found during startup or reconfigure</comment>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">opt_send_signal<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">==<pos:position pos:line="20" pos:column="31"/></operator> <operator pos:line="20" pos:column="32">-<pos:position pos:line="20" pos:column="33"/></operator><literal type="number" pos:line="20" pos:column="33">1<pos:position pos:line="20" pos:column="34"/></literal> <operator pos:line="20" pos:column="35">||<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="38">opt_send_signal<pos:position pos:line="20" pos:column="53"/></name> <operator pos:line="20" pos:column="54">==<pos:position pos:line="20" pos:column="56"/></operator> <name pos:line="20" pos:column="57">SIGHUP<pos:position pos:line="20" pos:column="63"/></name></expr>)<pos:position pos:line="20" pos:column="64"/></condition><then pos:line="20" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">fatalf<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="string" pos:line="21" pos:column="20">"%s %s: %s"<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">name<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">path<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="45">xstrerror<pos:position pos:line="21" pos:column="54"/></name><argument_list pos:line="21" pos:column="54">()<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

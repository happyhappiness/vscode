<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6244_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DiskIOModule<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">FreeAllModules<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name pos:line="4" pos:column="13">GetModules<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call><operator pos:line="4" pos:column="25">.<pos:position pos:line="4" pos:column="26"/></operator><call><name pos:line="4" pos:column="26">empty<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="34"/></condition> <block pos:line="4" pos:column="35">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">DiskIOModule<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">fs<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name pos:line="5" pos:column="28">GetModules<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call><operator pos:line="5" pos:column="40">.<pos:position pos:line="5" pos:column="41"/></operator><call><name pos:line="5" pos:column="41">back<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">()<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">GetModules<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">()<pos:position pos:line="6" pos:column="21"/></argument_list></call><operator pos:line="6" pos:column="21">.<pos:position pos:line="6" pos:column="22"/></operator><call><name pos:line="6" pos:column="22">pop_back<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">()<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">fs<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">gracefulShutdown<pos:position pos:line="7" pos:column="29"/></name></name><argument_list pos:line="7" pos:column="29">()<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></while>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

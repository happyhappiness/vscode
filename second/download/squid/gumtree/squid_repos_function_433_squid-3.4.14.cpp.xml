<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_433_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">rad_auth_config<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">cfname<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FILE<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">cf<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">line<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">MAXLINE<pos:position pos:line="5" pos:column="22"/></name></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">srv<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">crt<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">cf<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">fopen<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">cfname<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"r"<pos:position pos:line="8" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="35">==<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">NULL<pos:position pos:line="8" pos:column="42"/></name></expr>)<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43"> <block pos:line="8" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">perror<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">cfname<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><call><name pos:line="12" pos:column="12">fgets<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">line<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="24">MAXLINE<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">cf<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">!=<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="40">NULL<pos:position pos:line="12" pos:column="44"/></name></expr>)<pos:position pos:line="12" pos:column="45"/></condition> <block pos:line="12" pos:column="46">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">memcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">line<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="27">"server"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="37">6<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="13">srv<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">sscanf<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">line<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"server %s"<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">server<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt></block></then></if>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">memcmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">line<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="27">"secret"<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="37">6<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="13">crt<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">sscanf<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">line<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"secret %s"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">secretkey<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt></block></then></if>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">memcmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">line<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="27">"identifier"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="41">10<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">sscanf<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">line<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"identifier %s"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">identifier<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt></block></then></if>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">memcmp<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">line<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="27">"service"<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="38">7<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="13">sscanf<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">line<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="26">"service %s"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">svc_name<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt></block></then></if>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">memcmp<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">line<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"port"<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="35">4<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="13">sscanf<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">line<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="26">"port %s"<pos:position pos:line="22" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">svc_name<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt></block></then></if>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">memcmp<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">line<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="27">"timeout"<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="38">7<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="13">sscanf<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">line<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="26">"timeout %d"<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="41">retries<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">fclose<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">cf<pos:position pos:line="26" pos:column="14"/></name></expr></argument>)<pos:position pos:line="26" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">srv<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">&amp;&amp;<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="16">crt<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
        <block type="pseudo"><return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return></block></then></if>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">-<pos:position pos:line="29" pos:column="13"/></operator><literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

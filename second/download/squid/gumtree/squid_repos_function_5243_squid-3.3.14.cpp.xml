<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5243_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Basic<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">UserRequest<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">authenticated<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">()<pos:position pos:line="2" pos:column="42"/></parameter_list> <specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Auth<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">Basic<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">::<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">User<pos:position pos:line="4" pos:column="22"/></name></name> <specifier pos:line="4" pos:column="23">const<pos:position pos:line="4" pos:column="28"/></specifier> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">basic_auth<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><cast type="dynamic" pos:line="4" pos:column="43">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="55">&lt;<argument><expr><name><name pos:line="4" pos:column="56">Auth<pos:position pos:line="4" pos:column="60"/></name><operator pos:line="4" pos:column="60">::<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="62">Basic<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">::<pos:position pos:line="4" pos:column="69"/></operator><name pos:line="4" pos:column="69">User<pos:position pos:line="4" pos:column="73"/></name></name> <specifier pos:line="4" pos:column="74">const<pos:position pos:line="4" pos:column="79"/></specifier> <operator pos:line="4" pos:column="80">*<pos:position pos:line="4" pos:column="81"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="85"/></argument_list><argument_list pos:line="4" pos:column="82">(<argument><expr><call><name pos:line="4" pos:column="83">user<pos:position pos:line="4" pos:column="87"/></name><argument_list pos:line="4" pos:column="87">()<pos:position pos:line="4" pos:column="89"/></argument_list></call><operator pos:line="4" pos:column="89">.<pos:position pos:line="4" pos:column="90"/></operator><call><name pos:line="4" pos:column="90">getRaw<pos:position pos:line="4" pos:column="96"/></name><argument_list pos:line="4" pos:column="96">()<pos:position pos:line="4" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="99"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="100"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">basic_auth<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">&amp;&amp;<pos:position pos:line="6" pos:column="30"/></operator> <call><name><name pos:line="6" pos:column="23">basic_auth<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">authenticated<pos:position pos:line="6" pos:column="48"/></name></name><argument_list pos:line="6" pos:column="48">()<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>

    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

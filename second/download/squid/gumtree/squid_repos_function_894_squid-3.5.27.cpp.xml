<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_894_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">Comm<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">Flag<pos:position pos:line="1" pos:column="18"/></name></name></type>
<name pos:line="2" pos:column="1">commBind<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">s<pos:position pos:line="2" pos:column="15"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">addrinfo<pos:position pos:line="2" pos:column="32"/></name></name> <modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="34">inaddr<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">++<pos:position pos:line="4" pos:column="7"/></operator> <name><name pos:line="4" pos:column="8">statCounter<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">.<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">syscalls<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">.<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">sock<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">.<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">binds<pos:position pos:line="4" pos:column="39"/></name></name></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">bind<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">s<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="17">inaddr<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">.<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">ai_addr<pos:position pos:line="6" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="33">inaddr<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">ai_addrlen<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call> <operator pos:line="6" pos:column="52">==<pos:position pos:line="6" pos:column="54"/></operator> <literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr>)<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57"> <block pos:line="6" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">50<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">6<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"commBind: bind socket FD "<pos:position pos:line="7" pos:column="50"/></literal> <operator pos:line="7" pos:column="51">&lt;&lt;<pos:position pos:line="7" pos:column="59"/></operator> <name pos:line="7" pos:column="54">s<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">&lt;&lt;<pos:position pos:line="7" pos:column="64"/></operator> <literal type="string" pos:line="7" pos:column="59">" to "<pos:position pos:line="7" pos:column="65"/></literal> <operator pos:line="7" pos:column="66">&lt;&lt;<pos:position pos:line="7" pos:column="74"/></operator> <name><name pos:line="7" pos:column="69">fd_table<pos:position pos:line="7" pos:column="77"/></name><index pos:line="7" pos:column="77">[<expr><name pos:line="7" pos:column="78">s<pos:position pos:line="7" pos:column="79"/></name></expr>]<pos:position pos:line="7" pos:column="80"/></index></name><operator pos:line="7" pos:column="80">.<pos:position pos:line="7" pos:column="81"/></operator><name pos:line="7" pos:column="81">local_addr<pos:position pos:line="7" pos:column="91"/></name></expr></argument>)<pos:position pos:line="7" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="93"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name><name pos:line="8" pos:column="16">Comm<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">::<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">OK<pos:position pos:line="8" pos:column="24"/></name></name></expr>;<pos:position pos:line="8" pos:column="25"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">50<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"commBind: Cannot bind socket FD "<pos:position pos:line="11" pos:column="53"/></literal> <operator pos:line="11" pos:column="54">&lt;&lt;<pos:position pos:line="11" pos:column="62"/></operator> <name pos:line="11" pos:column="57">s<pos:position pos:line="11" pos:column="58"/></name> <operator pos:line="11" pos:column="59">&lt;&lt;<pos:position pos:line="11" pos:column="67"/></operator> <literal type="string" pos:line="11" pos:column="62">" to "<pos:position pos:line="11" pos:column="68"/></literal> <operator pos:line="11" pos:column="69">&lt;&lt;<pos:position pos:line="11" pos:column="77"/></operator> <name><name pos:line="11" pos:column="72">fd_table<pos:position pos:line="11" pos:column="80"/></name><index pos:line="11" pos:column="80">[<expr><name pos:line="11" pos:column="81">s<pos:position pos:line="11" pos:column="82"/></name></expr>]<pos:position pos:line="11" pos:column="83"/></index></name><operator pos:line="11" pos:column="83">.<pos:position pos:line="11" pos:column="84"/></operator><name pos:line="11" pos:column="84">local_addr<pos:position pos:line="11" pos:column="94"/></name> <operator pos:line="11" pos:column="95">&lt;&lt;<pos:position pos:line="11" pos:column="103"/></operator> <literal type="string" pos:line="11" pos:column="98">": "<pos:position pos:line="11" pos:column="102"/></literal> <operator pos:line="11" pos:column="103">&lt;&lt;<pos:position pos:line="11" pos:column="111"/></operator> <call><name pos:line="11" pos:column="106">xstrerror<pos:position pos:line="11" pos:column="115"/></name><argument_list pos:line="11" pos:column="115">()<pos:position pos:line="11" pos:column="117"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="119"/></expr_stmt>

    <return pos:line="13" pos:column="5">return <expr><name><name pos:line="13" pos:column="12">Comm<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">::<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">COMM_ERROR<pos:position pos:line="13" pos:column="28"/></name></name></expr>;<pos:position pos:line="13" pos:column="29"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4782_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">FILE<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">storeCossDirOpenTmpSwapLog<pos:position pos:line="2" pos:column="27"/></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">CossSwapDir<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">sd<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">clean_flag<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">int<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">zero_flag<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">swaplog_path<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">xstrdup<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><call><name pos:line="4" pos:column="34">storeCossDirSwapLogFile<pos:position pos:line="4" pos:column="57"/></name><argument_list pos:line="4" pos:column="57">(<argument><expr><name pos:line="4" pos:column="58">sd<pos:position pos:line="4" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="62">NULL<pos:position pos:line="4" pos:column="66"/></name></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">clean_path<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">xstrdup<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><call><name pos:line="5" pos:column="32">storeCossDirSwapLogFile<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name pos:line="5" pos:column="56">sd<pos:position pos:line="5" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="60">".last-clean"<pos:position pos:line="5" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">new_path<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><call><name pos:line="6" pos:column="22">xstrdup<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><call><name pos:line="6" pos:column="30">storeCossDirSwapLogFile<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><name pos:line="6" pos:column="54">sd<pos:position pos:line="6" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="58">".new"<pos:position pos:line="6" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">stat<pos:position pos:line="8" pos:column="16"/></name></name></type> <name pos:line="8" pos:column="17">log_sb<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">stat<pos:position pos:line="10" pos:column="16"/></name></name></type> <name pos:line="10" pos:column="17">clean_sb<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">FILE<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">fp<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">anfd<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name><operator pos:line="14" pos:column="9">::<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">stat<pos:position pos:line="14" pos:column="15"/></name></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">swaplog_path<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">log_sb<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call> <operator pos:line="14" pos:column="39">&lt;<pos:position pos:line="14" pos:column="43"/></operator> <literal type="number" pos:line="14" pos:column="41">0<pos:position pos:line="14" pos:column="42"/></literal></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> <block pos:line="14" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">50<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">DBG_IMPORTANT<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"Cache COSS Dir #"<pos:position pos:line="15" pos:column="53"/></literal> <operator pos:line="15" pos:column="54">&lt;&lt;<pos:position pos:line="15" pos:column="62"/></operator> <name><name pos:line="15" pos:column="57">sd<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">-&gt;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="61">index<pos:position pos:line="15" pos:column="66"/></name></name> <operator pos:line="15" pos:column="67">&lt;&lt;<pos:position pos:line="15" pos:column="75"/></operator> <literal type="string" pos:line="15" pos:column="70">": No log file"<pos:position pos:line="15" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">safe_free<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">swaplog_path<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">safe_free<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">clean_path<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">safe_free<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">new_path<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">zero_flag<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="22" pos:column="18">log_sb<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">st_size<pos:position pos:line="22" pos:column="32"/></name></name> <operator pos:line="22" pos:column="33">==<pos:position pos:line="22" pos:column="35"/></operator> <literal type="number" pos:line="22" pos:column="36">0<pos:position pos:line="22" pos:column="37"/></literal></expr> ?<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39"> <expr><literal type="number" pos:line="22" pos:column="40">1<pos:position pos:line="22" pos:column="41"/></literal></expr> <pos:position pos:line="22" pos:column="42"/></then><else pos:line="22" pos:column="42">: <expr><literal type="number" pos:line="22" pos:column="44">0<pos:position pos:line="22" pos:column="45"/></literal></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="23" pos:column="5">/* close the existing write-only FD */</comment>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">sd<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">swaplog_fd<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">&gt;=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="27">0<pos:position pos:line="25" pos:column="28"/></literal></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="9">file_close<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name><name pos:line="26" pos:column="20">sd<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">swaplog_fd<pos:position pos:line="26" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* open a write-only FD for the new log */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">anfd<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name pos:line="29" pos:column="12">file_open<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">new_path<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">O_WRONLY<pos:position pos:line="29" pos:column="40"/></name> <operator pos:line="29" pos:column="41">|<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">O_CREAT<pos:position pos:line="29" pos:column="50"/></name> <operator pos:line="29" pos:column="51">|<pos:position pos:line="29" pos:column="52"/></operator> <name pos:line="29" pos:column="53">O_TRUNC<pos:position pos:line="29" pos:column="60"/></name> <operator pos:line="29" pos:column="61">|<pos:position pos:line="29" pos:column="62"/></operator> <name pos:line="29" pos:column="63">O_BINARY<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">anfd<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">&lt;<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18"> <block pos:line="31" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">50<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="20">DBG_IMPORTANT<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="35">""<pos:position pos:line="32" pos:column="37"/></literal> <operator pos:line="32" pos:column="38">&lt;&lt;<pos:position pos:line="32" pos:column="46"/></operator> <name pos:line="32" pos:column="41">new_path<pos:position pos:line="32" pos:column="49"/></name> <operator pos:line="32" pos:column="50">&lt;&lt;<pos:position pos:line="32" pos:column="58"/></operator> <literal type="string" pos:line="32" pos:column="53">": "<pos:position pos:line="32" pos:column="57"/></literal> <operator pos:line="32" pos:column="58">&lt;&lt;<pos:position pos:line="32" pos:column="66"/></operator> <call><name pos:line="32" pos:column="61">xstrerror<pos:position pos:line="32" pos:column="70"/></name><argument_list pos:line="32" pos:column="70">()<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">fatal<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><literal type="string" pos:line="33" pos:column="15">"storeDirOpenTmpSwapLog: Failed to open swap log."<pos:position pos:line="33" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">sd<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">swaplog_fd<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">anfd<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="37" pos:column="5">/* open a read-only stream of the old log */</comment>
    <expr_stmt><expr><name pos:line="38" pos:column="5">fp<pos:position pos:line="38" pos:column="7"/></name> <operator pos:line="38" pos:column="8">=<pos:position pos:line="38" pos:column="9"/></operator> <call><name pos:line="38" pos:column="10">fopen<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">swaplog_path<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="30">"rb"<pos:position pos:line="38" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">fp<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">==<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="15">NULL<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">debugs<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="number" pos:line="41" pos:column="16">50<pos:position pos:line="41" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="20">DBG_CRITICAL<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="34">""<pos:position pos:line="41" pos:column="36"/></literal> <operator pos:line="41" pos:column="37">&lt;&lt;<pos:position pos:line="41" pos:column="45"/></operator> <name pos:line="41" pos:column="40">swaplog_path<pos:position pos:line="41" pos:column="52"/></name> <operator pos:line="41" pos:column="53">&lt;&lt;<pos:position pos:line="41" pos:column="61"/></operator> <literal type="string" pos:line="41" pos:column="56">": "<pos:position pos:line="41" pos:column="60"/></literal> <operator pos:line="41" pos:column="61">&lt;&lt;<pos:position pos:line="41" pos:column="69"/></operator> <call><name pos:line="41" pos:column="64">xstrerror<pos:position pos:line="41" pos:column="73"/></name><argument_list pos:line="41" pos:column="73">()<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">fatal<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"Failed to open swap log for reading"<pos:position pos:line="42" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">memset<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><operator pos:line="45" pos:column="12">&amp;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="13">clean_sb<pos:position pos:line="45" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="45" pos:column="23">'\0'<pos:position pos:line="45" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="29">sizeof<argument_list pos:line="45" pos:column="35">(<argument><expr pos:line="45" pos:column="36">struct <name pos:line="45" pos:column="43">stat<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name><operator pos:line="47" pos:column="9">::<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">stat<pos:position pos:line="47" pos:column="15"/></name></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">clean_path<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="29">clean_sb<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call> <operator pos:line="47" pos:column="39">&lt;<pos:position pos:line="47" pos:column="43"/></operator> <literal type="number" pos:line="47" pos:column="41">0<pos:position pos:line="47" pos:column="42"/></literal></expr>)<pos:position pos:line="47" pos:column="43"/></condition><then pos:line="47" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="48" pos:column="9">*<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">clean_flag<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt></block></then>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><name><name pos:line="49" pos:column="14">clean_sb<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">.<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="23">st_mtime<pos:position pos:line="49" pos:column="31"/></name></name> <operator pos:line="49" pos:column="32">&lt;<pos:position pos:line="49" pos:column="36"/></operator> <name><name pos:line="49" pos:column="34">log_sb<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">.<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">st_mtime<pos:position pos:line="49" pos:column="49"/></name></name></expr>)<pos:position pos:line="49" pos:column="50"/></condition><then pos:line="49" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">clean_flag<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <literal type="number" pos:line="50" pos:column="23">0<pos:position pos:line="50" pos:column="24"/></literal></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt></block></then></if></elseif>
    <else pos:line="51" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">clean_flag<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <literal type="number" pos:line="52" pos:column="23">1<pos:position pos:line="52" pos:column="24"/></literal></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">safeunlink<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">clean_path<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="28">1<pos:position pos:line="54" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">safe_free<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><name pos:line="56" pos:column="15">swaplog_path<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">safe_free<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">clean_path<pos:position pos:line="58" pos:column="25"/></name></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">safe_free<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">new_path<pos:position pos:line="60" pos:column="23"/></name></expr></argument>)<pos:position pos:line="60" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>

    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">fp<pos:position pos:line="62" pos:column="14"/></name></expr>;<pos:position pos:line="62" pos:column="15"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

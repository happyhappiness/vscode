<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_914_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">commSetTcpNoDelay<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">int<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">fd<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">on<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">setsockopt<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">fd<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">IPPROTO_TCP<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">TCP_NODELAY<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="50">(<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">char<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator> <operator pos:line="6" pos:column="59">&amp;<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="60">on<pos:position pos:line="6" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="64">sizeof<argument_list pos:line="6" pos:column="70">(<argument><expr><name pos:line="6" pos:column="71">on<pos:position pos:line="6" pos:column="73"/></name></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call> <operator pos:line="6" pos:column="76">&lt;<pos:position pos:line="6" pos:column="80"/></operator> <literal type="number" pos:line="6" pos:column="78">0<pos:position pos:line="6" pos:column="79"/></literal></expr>)<pos:position pos:line="6" pos:column="80"/></condition><then pos:line="6" pos:column="80">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">50<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_IMPORTANT<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"commSetTcpNoDelay: FD "<pos:position pos:line="7" pos:column="59"/></literal> <operator pos:line="7" pos:column="60">&lt;&lt;<pos:position pos:line="7" pos:column="68"/></operator> <name pos:line="7" pos:column="63">fd<pos:position pos:line="7" pos:column="65"/></name> <operator pos:line="7" pos:column="66">&lt;&lt;<pos:position pos:line="7" pos:column="74"/></operator> <literal type="string" pos:line="7" pos:column="69">": "<pos:position pos:line="7" pos:column="73"/></literal> <operator pos:line="7" pos:column="74">&lt;&lt;<pos:position pos:line="7" pos:column="82"/></operator> <call><name pos:line="7" pos:column="77">xstrerror<pos:position pos:line="7" pos:column="86"/></name><argument_list pos:line="7" pos:column="86">()<pos:position pos:line="7" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="90"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">fd_table<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">fd<pos:position pos:line="9" pos:column="16"/></name></expr>]<pos:position pos:line="9" pos:column="17"/></index></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name><name pos:line="9" pos:column="18">flags<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">nodelay<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">=<pos:position pos:line="9" pos:column="33"/></operator> <literal type="boolean" pos:line="9" pos:column="34">true<pos:position pos:line="9" pos:column="38"/></literal></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

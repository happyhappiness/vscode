<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4461_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLMethodData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">parse<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">CbDataList<pos:position pos:line="4" pos:column="15"/></name><argument_list type="generic" pos:line="4" pos:column="15">&lt;<argument><expr><name pos:line="4" pos:column="16">HttpRequestMethod<pos:position pos:line="4" pos:column="33"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="37"/></argument_list></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">Tail<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">t<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">Tail<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">&amp;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="18">values<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></init> <condition><expr><operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">Tail<pos:position pos:line="7" pos:column="31"/></name></expr>;<pos:position pos:line="7" pos:column="32"/></condition> <incr><expr><name pos:line="7" pos:column="33">Tail<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">=<pos:position pos:line="7" pos:column="39"/></operator> <operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><operator pos:line="7" pos:column="41">(<pos:position pos:line="7" pos:column="42"/></operator><name><operator pos:line="7" pos:column="42">(<pos:position pos:line="7" pos:column="43"/></operator><operator pos:line="7" pos:column="43">*<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">Tail<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">)<pos:position pos:line="7" pos:column="49"/></operator><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">next<pos:position pos:line="7" pos:column="55"/></name></name><operator pos:line="7" pos:column="55">)<pos:position pos:line="7" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="57"/></control><block type="pseudo"><empty_stmt pos:line="7" pos:column="57">;<pos:position pos:line="7" pos:column="58"/></empty_stmt></block></for>
    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">t<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">strtokFile<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">()<pos:position pos:line="8" pos:column="29"/></argument_list></call><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator></expr>)<pos:position pos:line="8" pos:column="31"/></condition> <block pos:line="8" pos:column="32">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">strcmp<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">t<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"PURGE"<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call> <operator pos:line="9" pos:column="32">==<pos:position pos:line="9" pos:column="34"/></operator> <literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="13">++<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">ThePurgeCount<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></then></if> <comment type="line" pos:line="10" pos:column="30">// configuration code wants to know</comment>
        <decl_stmt><decl><type><name><name pos:line="11" pos:column="9">CbDataList<pos:position pos:line="11" pos:column="19"/></name><argument_list type="generic" pos:line="11" pos:column="19">&lt;<argument><expr><name pos:line="11" pos:column="20">HttpRequestMethod<pos:position pos:line="11" pos:column="37"/></name></expr></argument>&gt;<pos:position pos:line="11" pos:column="41"/></argument_list></name> <modifier pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></modifier></type><name pos:line="11" pos:column="40">q<pos:position pos:line="11" pos:column="41"/></name> <init pos:line="11" pos:column="42">= <expr><operator pos:line="11" pos:column="44">new<pos:position pos:line="11" pos:column="47"/></operator> <call><name><name pos:line="11" pos:column="48">CbDataList<pos:position pos:line="11" pos:column="58"/></name><argument_list type="generic" pos:line="11" pos:column="58">&lt;<argument><expr><name pos:line="11" pos:column="59">HttpRequestMethod<pos:position pos:line="11" pos:column="76"/></name></expr></argument>&gt;<pos:position pos:line="11" pos:column="80"/></argument_list></name> <argument_list pos:line="11" pos:column="78">(<argument><expr><call><name pos:line="11" pos:column="79">HttpRequestMethod<pos:position pos:line="11" pos:column="96"/></name><argument_list pos:line="11" pos:column="96">(<argument><expr><name pos:line="11" pos:column="97">t<pos:position pos:line="11" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="100">NULL<pos:position pos:line="11" pos:column="104"/></name></expr></argument>)<pos:position pos:line="11" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="106"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="107"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">Tail<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">q<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">Tail<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <operator pos:line="13" pos:column="16">&amp;<pos:position pos:line="13" pos:column="21"/></operator><name><name pos:line="13" pos:column="17">q<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">next<pos:position pos:line="13" pos:column="24"/></name></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></while>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2680_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">htcpBuildCountstr<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">buf<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">size_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">buflen<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">s<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uint16_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">length<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">len<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">off<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">buflen<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">-<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">off<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">&lt;<pos:position pos:line="8" pos:column="26"/></operator> <literal type="number" pos:line="8" pos:column="24">2<pos:position pos:line="8" pos:column="25"/></literal></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">-<pos:position pos:line="9" pos:column="17"/></operator><literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">s<pos:position pos:line="11" pos:column="10"/></name></expr>)<pos:position pos:line="11" pos:column="11"/></condition><then pos:line="11" pos:column="11">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">strlen<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">s<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">31<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"htcpBuildCountstr: LENGTH = "<pos:position pos:line="16" pos:column="49"/></literal> <operator pos:line="16" pos:column="50">&lt;&lt;<pos:position pos:line="16" pos:column="58"/></operator> <name pos:line="16" pos:column="53">len<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">31<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">3<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"htcpBuildCountstr: TEXT = {"<pos:position pos:line="18" pos:column="48"/></literal> <operator pos:line="18" pos:column="49">&lt;&lt;<pos:position pos:line="18" pos:column="57"/></operator> <operator pos:line="18" pos:column="52">(<pos:position pos:line="18" pos:column="53"/></operator><ternary><condition><expr><name pos:line="18" pos:column="53">s<pos:position pos:line="18" pos:column="54"/></name></expr> ?<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <expr><name pos:line="18" pos:column="57">s<pos:position pos:line="18" pos:column="58"/></name></expr> <pos:position pos:line="18" pos:column="59"/></then><else pos:line="18" pos:column="59">: <expr><literal type="string" pos:line="18" pos:column="61">"&lt;NULL&gt;"<pos:position pos:line="18" pos:column="75"/></literal></expr></else></ternary><operator pos:line="18" pos:column="69">)<pos:position pos:line="18" pos:column="70"/></operator> <operator pos:line="18" pos:column="71">&lt;&lt;<pos:position pos:line="18" pos:column="79"/></operator> <literal type="string" pos:line="18" pos:column="74">"}"<pos:position pos:line="18" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><name pos:line="20" pos:column="5">length<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">htons<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">uint16_t<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">len<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memcpy<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">buf<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">+<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">off<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="23">&amp;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="24">length<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="32">2<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">off<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">+=<pos:position pos:line="24" pos:column="11"/></operator> <literal type="number" pos:line="24" pos:column="12">2<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">buflen<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">off<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">&lt;<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="24">len<pos:position pos:line="26" pos:column="27"/></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28">
        <block type="pseudo"><return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">-<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">1<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></return></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">len<pos:position pos:line="29" pos:column="12"/></name></expr>)<pos:position pos:line="29" pos:column="13"/></condition><then pos:line="29" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">memcpy<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">buf<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">+<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">off<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="27">s<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">len<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">off<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">+=<pos:position pos:line="32" pos:column="11"/></operator> <name pos:line="32" pos:column="12">len<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>

    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">off<pos:position pos:line="34" pos:column="15"/></name></expr>;<pos:position pos:line="34" pos:column="16"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

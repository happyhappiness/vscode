<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6070_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIVariableUserAgent<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">eval<pos:position pos:line="2" pos:column="27"/></name></name> <parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">ESIVarState<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="42">state<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">subref<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <specifier pos:line="2" pos:column="74">const<pos:position pos:line="2" pos:column="79"/></specifier> <modifier pos:line="2" pos:column="80">*<pos:position pos:line="2" pos:column="81"/></modifier></type><name pos:line="2" pos:column="81">found_default<pos:position pos:line="2" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="95"/></parameter_list> <specifier pos:line="2" pos:column="96">const<pos:position pos:line="2" pos:column="101"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">state<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">useragentUsed<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">state<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">header<pos:position pos:line="7" pos:column="21"/></name></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><call><name pos:line="7" pos:column="24">has<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">HDR_USER_AGENT<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <block pos:line="7" pos:column="45">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">subref<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="13">s<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name><name pos:line="9" pos:column="17">state<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">header<pos:position pos:line="9" pos:column="29"/></name></name><argument_list pos:line="9" pos:column="29">()<pos:position pos:line="9" pos:column="31"/></argument_list></call><operator pos:line="9" pos:column="31">.<pos:position pos:line="9" pos:column="32"/></operator><call><name pos:line="9" pos:column="32">getStr<pos:position pos:line="9" pos:column="38"/></name> <argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">HDR_USER_AGENT<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt></block></then>
        <else pos:line="10" pos:column="9">else <block pos:line="10" pos:column="14">{
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><operator pos:line="11" pos:column="17">!<pos:position pos:line="11" pos:column="18"/></operator><call><name pos:line="11" pos:column="18">strcmp<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">subref<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"os"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40"> <block pos:line="11" pos:column="41">{
                <expr_stmt><expr><name pos:line="12" pos:column="17">s<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name><name pos:line="12" pos:column="21">esiUserOs<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[<expr><name pos:line="12" pos:column="31">UserOs<pos:position pos:line="12" pos:column="37"/></name></expr>]<pos:position pos:line="12" pos:column="38"/></index></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="13" pos:column="14"/></block></then> <elseif pos:line="13" pos:column="15">else <if pos:line="13" pos:column="20">if <condition pos:line="13" pos:column="23">(<expr><operator pos:line="13" pos:column="24">!<pos:position pos:line="13" pos:column="25"/></operator><call><name pos:line="13" pos:column="25">strcmp<pos:position pos:line="13" pos:column="31"/></name> <argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">subref<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="41">"browser"<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52"> <block pos:line="13" pos:column="53">{
                <expr_stmt><expr><name pos:line="14" pos:column="17">s<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name><name pos:line="14" pos:column="21">esiBrowsers<pos:position pos:line="14" pos:column="32"/></name><index pos:line="14" pos:column="32">[<expr><name pos:line="14" pos:column="33">browser<pos:position pos:line="14" pos:column="40"/></name></expr>]<pos:position pos:line="14" pos:column="41"/></index></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="15" pos:column="14"/></block></then></if></elseif> <elseif pos:line="15" pos:column="15">else <if pos:line="15" pos:column="20">if <condition pos:line="15" pos:column="23">(<expr><operator pos:line="15" pos:column="24">!<pos:position pos:line="15" pos:column="25"/></operator><call><name pos:line="15" pos:column="25">strcmp<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">subref<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="41">"version"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52"> <block pos:line="15" pos:column="53">{
                <expr_stmt><expr><name pos:line="16" pos:column="17">s<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">browserVersion<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">()<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if></elseif> <else pos:line="17" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">s<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <literal type="string" pos:line="18" pos:column="21">""<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt></block></else></if>
        }<pos:position pos:line="19" pos:column="10"/></block></else></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">s<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">found_default<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">ESISegment<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">::<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">ListAppend<pos:position pos:line="23" pos:column="27"/></name></name> <argument_list pos:line="23" pos:column="28">(<argument><expr><call><name><name pos:line="23" pos:column="29">state<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">.<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">getOutput<pos:position pos:line="23" pos:column="44"/></name></name><argument_list pos:line="23" pos:column="44">()<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">s<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="51">strlen<pos:position pos:line="23" pos:column="57"/></name> <argument_list pos:line="23" pos:column="58">(<argument><expr><name pos:line="23" pos:column="59">s<pos:position pos:line="23" pos:column="60"/></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

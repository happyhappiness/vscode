<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3160_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Init<pos:position pos:line="2" pos:column="11"/></name></name><parameter_list pos:line="2" pos:column="11">()<pos:position pos:line="2" pos:column="13"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">29<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><name pos:line="4" pos:column="15">DBG_IMPORTANT<pos:position pos:line="4" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="4" pos:column="29">"Startup: Initializing Authentication Schemes ..."<pos:position pos:line="4" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="81"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">HAVE_AUTH_MODULE_BASIC<pos:position pos:line="5" pos:column="27"/></name></expr></cpp:if>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><specifier pos:line="6" pos:column="12">const<pos:position pos:line="6" pos:column="17"/></specifier> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">basic_type<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call><name><name pos:line="6" pos:column="37">Auth<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">::<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">Basic<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">::<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">Scheme<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">::<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="58">GetInstance<pos:position pos:line="6" pos:column="69"/></name></name><argument_list pos:line="6" pos:column="69">()<pos:position pos:line="6" pos:column="71"/></argument_list></call><operator pos:line="6" pos:column="71">-&gt;<pos:position pos:line="6" pos:column="76"/></operator><call><name pos:line="6" pos:column="73">type<pos:position pos:line="6" pos:column="77"/></name><argument_list pos:line="6" pos:column="77">()<pos:position pos:line="6" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">29<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>,<argument><expr><name pos:line="7" pos:column="15">DBG_IMPORTANT<pos:position pos:line="7" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="29">"Startup: Initialized Authentication Scheme '"<pos:position pos:line="7" pos:column="75"/></literal> <operator pos:line="7" pos:column="76">&lt;&lt;<pos:position pos:line="7" pos:column="84"/></operator> <name pos:line="7" pos:column="79">basic_type<pos:position pos:line="7" pos:column="89"/></name> <operator pos:line="7" pos:column="90">&lt;&lt;<pos:position pos:line="7" pos:column="98"/></operator> <literal type="string" pos:line="7" pos:column="93">"'"<pos:position pos:line="7" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="98"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">HAVE_AUTH_MODULE_DIGEST<pos:position pos:line="9" pos:column="28"/></name></expr></cpp:if>
    <decl_stmt><decl><specifier pos:line="10" pos:column="5">static<pos:position pos:line="10" pos:column="11"/></specifier> <type><specifier pos:line="10" pos:column="12">const<pos:position pos:line="10" pos:column="17"/></specifier> <name pos:line="10" pos:column="18">char<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">digest_type<pos:position pos:line="10" pos:column="35"/></name> <init pos:line="10" pos:column="36">= <expr><call><name><name pos:line="10" pos:column="38">Auth<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">::<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">Digest<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">::<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">Scheme<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">::<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="60">GetInstance<pos:position pos:line="10" pos:column="71"/></name></name><argument_list pos:line="10" pos:column="71">()<pos:position pos:line="10" pos:column="73"/></argument_list></call><operator pos:line="10" pos:column="73">-&gt;<pos:position pos:line="10" pos:column="78"/></operator><call><name pos:line="10" pos:column="75">type<pos:position pos:line="10" pos:column="79"/></name><argument_list pos:line="10" pos:column="79">()<pos:position pos:line="10" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="82"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">29<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>,<argument><expr><name pos:line="11" pos:column="15">DBG_IMPORTANT<pos:position pos:line="11" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="29">"Startup: Initialized Authentication Scheme '"<pos:position pos:line="11" pos:column="75"/></literal> <operator pos:line="11" pos:column="76">&lt;&lt;<pos:position pos:line="11" pos:column="84"/></operator> <name pos:line="11" pos:column="79">digest_type<pos:position pos:line="11" pos:column="90"/></name> <operator pos:line="11" pos:column="91">&lt;&lt;<pos:position pos:line="11" pos:column="99"/></operator> <literal type="string" pos:line="11" pos:column="94">"'"<pos:position pos:line="11" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="99"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">HAVE_AUTH_MODULE_NEGOTIATE<pos:position pos:line="13" pos:column="31"/></name></expr></cpp:if>
    <decl_stmt><decl><specifier pos:line="14" pos:column="5">static<pos:position pos:line="14" pos:column="11"/></specifier> <type><specifier pos:line="14" pos:column="12">const<pos:position pos:line="14" pos:column="17"/></specifier> <name pos:line="14" pos:column="18">char<pos:position pos:line="14" pos:column="22"/></name> <modifier pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></modifier></type><name pos:line="14" pos:column="24">negotiate_type<pos:position pos:line="14" pos:column="38"/></name> <init pos:line="14" pos:column="39">= <expr><call><name><name pos:line="14" pos:column="41">Auth<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">::<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">Negotiate<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">::<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="58">Scheme<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">::<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="66">GetInstance<pos:position pos:line="14" pos:column="77"/></name></name><argument_list pos:line="14" pos:column="77">()<pos:position pos:line="14" pos:column="79"/></argument_list></call><operator pos:line="14" pos:column="79">-&gt;<pos:position pos:line="14" pos:column="84"/></operator><call><name pos:line="14" pos:column="81">type<pos:position pos:line="14" pos:column="85"/></name><argument_list pos:line="14" pos:column="85">()<pos:position pos:line="14" pos:column="87"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="88"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">29<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>,<argument><expr><name pos:line="15" pos:column="15">DBG_IMPORTANT<pos:position pos:line="15" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="29">"Startup: Initialized Authentication Scheme '"<pos:position pos:line="15" pos:column="75"/></literal> <operator pos:line="15" pos:column="76">&lt;&lt;<pos:position pos:line="15" pos:column="84"/></operator> <name pos:line="15" pos:column="79">negotiate_type<pos:position pos:line="15" pos:column="93"/></name> <operator pos:line="15" pos:column="94">&lt;&lt;<pos:position pos:line="15" pos:column="102"/></operator> <literal type="string" pos:line="15" pos:column="97">"'"<pos:position pos:line="15" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="102"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">HAVE_AUTH_MODULE_NTLM<pos:position pos:line="17" pos:column="26"/></name></expr></cpp:if>
    <decl_stmt><decl><specifier pos:line="18" pos:column="5">static<pos:position pos:line="18" pos:column="11"/></specifier> <type><specifier pos:line="18" pos:column="12">const<pos:position pos:line="18" pos:column="17"/></specifier> <name pos:line="18" pos:column="18">char<pos:position pos:line="18" pos:column="22"/></name> <modifier pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></modifier></type><name pos:line="18" pos:column="24">ntlm_type<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><call><name><name pos:line="18" pos:column="36">Auth<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">::<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">Ntlm<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">::<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">Scheme<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">::<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">GetInstance<pos:position pos:line="18" pos:column="67"/></name></name><argument_list pos:line="18" pos:column="67">()<pos:position pos:line="18" pos:column="69"/></argument_list></call><operator pos:line="18" pos:column="69">-&gt;<pos:position pos:line="18" pos:column="74"/></operator><call><name pos:line="18" pos:column="71">type<pos:position pos:line="18" pos:column="75"/></name><argument_list pos:line="18" pos:column="75">()<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="78"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">29<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>,<argument><expr><name pos:line="19" pos:column="15">DBG_IMPORTANT<pos:position pos:line="19" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="19" pos:column="29">"Startup: Initialized Authentication Scheme '"<pos:position pos:line="19" pos:column="75"/></literal> <operator pos:line="19" pos:column="76">&lt;&lt;<pos:position pos:line="19" pos:column="84"/></operator> <name pos:line="19" pos:column="79">ntlm_type<pos:position pos:line="19" pos:column="88"/></name> <operator pos:line="19" pos:column="89">&lt;&lt;<pos:position pos:line="19" pos:column="97"/></operator> <literal type="string" pos:line="19" pos:column="92">"'"<pos:position pos:line="19" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="97"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">29<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>,<argument><expr><name pos:line="21" pos:column="15">DBG_IMPORTANT<pos:position pos:line="21" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="21" pos:column="29">"Startup: Initialized Authentication."<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

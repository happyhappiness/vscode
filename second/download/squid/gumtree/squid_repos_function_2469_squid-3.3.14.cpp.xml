<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2469_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">ostream<pos:position pos:line="1" pos:column="13"/></name></name><modifier pos:line="1" pos:column="13">&amp;<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name><name pos:line="2" pos:column="1">MemBlobStats<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">dump<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">std<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">ostream<pos:position pos:line="2" pos:column="32"/></name></name> <modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="34">os<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">os<pos:position pos:line="4" pos:column="7"/></name> <operator pos:line="4" pos:column="8">&lt;&lt;<pos:position pos:line="4" pos:column="16"/></operator>
    <literal type="string" pos:line="5" pos:column="5">"MemBlob created: "<pos:position pos:line="5" pos:column="24"/></literal> <operator pos:line="5" pos:column="25">&lt;&lt;<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="28">alloc<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">&lt;&lt;<pos:position pos:line="5" pos:column="42"/></operator>
    <literal type="string" pos:line="6" pos:column="5">"\nMemBlob alive: "<pos:position pos:line="6" pos:column="24"/></literal> <operator pos:line="6" pos:column="25">&lt;&lt;<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="28">live<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">&lt;&lt;<pos:position pos:line="6" pos:column="41"/></operator>
    <literal type="string" pos:line="7" pos:column="5">"\nMemBlob append calls: "<pos:position pos:line="7" pos:column="31"/></literal> <operator pos:line="7" pos:column="32">&lt;&lt;<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="35">append<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">&lt;&lt;<pos:position pos:line="7" pos:column="50"/></operator>
    <literal type="string" pos:line="8" pos:column="5">"\nMemBlob currently allocated size: "<pos:position pos:line="8" pos:column="43"/></literal> <operator pos:line="8" pos:column="44">&lt;&lt;<pos:position pos:line="8" pos:column="52"/></operator> <name pos:line="8" pos:column="47">liveBytes<pos:position pos:line="8" pos:column="56"/></name> <operator pos:line="8" pos:column="57">&lt;&lt;<pos:position pos:line="8" pos:column="65"/></operator>
    <literal type="string" pos:line="9" pos:column="5">"\nlive MemBlob mean current allocation size: "<pos:position pos:line="9" pos:column="52"/></literal> <operator pos:line="9" pos:column="53">&lt;&lt;<pos:position pos:line="9" pos:column="61"/></operator>
    <operator pos:line="10" pos:column="5">(<pos:position pos:line="10" pos:column="6"/></operator><cast type="static" pos:line="10" pos:column="6">static_cast<argument_list type="generic" pos:line="10" pos:column="17">&lt;<argument><expr><name pos:line="10" pos:column="18">double<pos:position pos:line="10" pos:column="24"/></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="28"/></argument_list><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">liveBytes<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></cast><operator pos:line="10" pos:column="36">/<pos:position pos:line="10" pos:column="37"/></operator><operator pos:line="10" pos:column="37">(<pos:position pos:line="10" pos:column="38"/></operator><ternary><condition><expr><name pos:line="10" pos:column="38">live<pos:position pos:line="10" pos:column="42"/></name></expr>?<pos:position pos:line="10" pos:column="43"/></condition><then><expr><name pos:line="10" pos:column="43">live<pos:position pos:line="10" pos:column="47"/></name></expr></then><else pos:line="10" pos:column="47">:<expr><literal type="number" pos:line="10" pos:column="48">1<pos:position pos:line="10" pos:column="49"/></literal></expr></else></ternary><operator pos:line="10" pos:column="49">)<pos:position pos:line="10" pos:column="50"/></operator><operator pos:line="10" pos:column="50">)<pos:position pos:line="10" pos:column="51"/></operator> <operator pos:line="10" pos:column="52">&lt;&lt;<pos:position pos:line="10" pos:column="60"/></operator> <name><name pos:line="10" pos:column="55">std<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">::<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="60">endl<pos:position pos:line="10" pos:column="64"/></name></name></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">os<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

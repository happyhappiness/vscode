<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1661_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">cbdataInternalAlloc<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">cbdata_type<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">type<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">file<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">line<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cbdata<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">c<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">p<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">type<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&gt;<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal> <operator pos:line="6" pos:column="21">&amp;&amp;<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="24">type<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">&lt;=<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="32">cbdata_types<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* placement new: the pool alloc gives us cbdata + user type memory space
     * and we init it with cbdata at the start of it
     */</comment>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">WITH_VALGRIND<pos:position pos:line="10" pos:column="18"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">c<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <operator pos:line="11" pos:column="9">new<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">cbdata<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">p<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <name><name pos:line="12" pos:column="9">cbdata_index<pos:position pos:line="12" pos:column="21"/></name><index pos:line="12" pos:column="21">[<expr><name pos:line="12" pos:column="22">type<pos:position pos:line="12" pos:column="26"/></name></expr>]<pos:position pos:line="12" pos:column="27"/></index></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><call><name><name pos:line="12" pos:column="28">pool<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">alloc<pos:position pos:line="12" pos:column="39"/></name></name><argument_list pos:line="12" pos:column="39">()<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">c<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">data<pos:position pos:line="13" pos:column="12"/></name></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">p<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">cbdata_htable<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">.<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">emplace<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">p<pos:position pos:line="14" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="14" pos:column="29">c<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
<cpp:else pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">else<pos:position pos:line="15" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="16" pos:column="5">c<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <operator pos:line="16" pos:column="9">new<pos:position pos:line="16" pos:column="12"/></operator> <operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">cbdata_index<pos:position pos:line="16" pos:column="26"/></name><index pos:line="16" pos:column="26">[<expr><name pos:line="16" pos:column="27">type<pos:position pos:line="16" pos:column="31"/></name></expr>]<pos:position pos:line="16" pos:column="32"/></index></name><operator pos:line="16" pos:column="32">.<pos:position pos:line="16" pos:column="33"/></operator><call><name><name pos:line="16" pos:column="33">pool<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">alloc<pos:position pos:line="16" pos:column="44"/></name></name><argument_list pos:line="16" pos:column="44">()<pos:position pos:line="16" pos:column="46"/></argument_list></call><operator pos:line="16" pos:column="46">)<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">cbdata<pos:position pos:line="16" pos:column="54"/></name></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">p<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">void<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator><operator pos:line="17" pos:column="17">&amp;<pos:position pos:line="17" pos:column="22"/></operator><name><name pos:line="17" pos:column="18">c<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">data<pos:position pos:line="17" pos:column="25"/></name></name></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">c<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">type<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">type<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">c<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">valid<pos:position pos:line="21" pos:column="13"/></name></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">c<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">locks<pos:position pos:line="22" pos:column="13"/></name></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">c<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">cookie<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <operator pos:line="23" pos:column="17">(<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">long<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">)<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">c<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">^<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="28">cbdata<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">::<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">Cookie<pos:position pos:line="23" pos:column="42"/></name></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="24" pos:column="5">++<pos:position pos:line="24" pos:column="7"/></operator><name pos:line="24" pos:column="7">cbdataCount<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><name pos:line="25" pos:column="5">USE_CBDATA_DEBUG<pos:position pos:line="25" pos:column="21"/></name></expr></cpp:if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">c<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">file<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">file<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">c<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">line<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">line<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">c<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">calls<pos:position pos:line="29" pos:column="13"/></name></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name><name pos:line="29" pos:column="16">std<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">::<pos:position pos:line="29" pos:column="21"/></operator><name><name pos:line="29" pos:column="21">vector<pos:position pos:line="29" pos:column="27"/></name><argument_list type="generic" pos:line="29" pos:column="27">&lt;<argument><expr><name pos:line="29" pos:column="28">CBDataCall<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">*<pos:position pos:line="29" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="29" pos:column="44"/></argument_list></name></name> <argument_list pos:line="29" pos:column="42">()<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">c<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">addHistory<pos:position pos:line="30" pos:column="18"/></name></name><argument_list pos:line="30" pos:column="18">(<argument><expr><literal type="string" pos:line="30" pos:column="19">"Alloc"<pos:position pos:line="30" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">file<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">line<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">dlinkAdd<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">c<pos:position pos:line="31" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="17">&amp;<pos:position pos:line="31" pos:column="22"/></operator><name><name pos:line="31" pos:column="18">c<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">link<pos:position pos:line="31" pos:column="25"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="27">&amp;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="28">cbdataEntries<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">debugs<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="number" pos:line="32" pos:column="12">45<pos:position pos:line="32" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="16">3<pos:position pos:line="32" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="19">"Allocating "<pos:position pos:line="32" pos:column="32"/></literal> <operator pos:line="32" pos:column="33">&lt;&lt;<pos:position pos:line="32" pos:column="41"/></operator> <name pos:line="32" pos:column="36">p<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">&lt;&lt;<pos:position pos:line="32" pos:column="46"/></operator> <literal type="string" pos:line="32" pos:column="41">" "<pos:position pos:line="32" pos:column="44"/></literal> <operator pos:line="32" pos:column="45">&lt;&lt;<pos:position pos:line="32" pos:column="53"/></operator> <name pos:line="32" pos:column="48">file<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">&lt;&lt;<pos:position pos:line="32" pos:column="61"/></operator> <literal type="string" pos:line="32" pos:column="56">":"<pos:position pos:line="32" pos:column="59"/></literal> <operator pos:line="32" pos:column="60">&lt;&lt;<pos:position pos:line="32" pos:column="68"/></operator> <name pos:line="32" pos:column="63">line<pos:position pos:line="32" pos:column="67"/></name></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
<cpp:else pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">else<pos:position pos:line="33" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">debugs<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="number" pos:line="34" pos:column="12">45<pos:position pos:line="34" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="16">9<pos:position pos:line="34" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">"Allocating "<pos:position pos:line="34" pos:column="32"/></literal> <operator pos:line="34" pos:column="33">&lt;&lt;<pos:position pos:line="34" pos:column="41"/></operator> <name pos:line="34" pos:column="36">p<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">p<pos:position pos:line="37" pos:column="13"/></name></expr>;<pos:position pos:line="37" pos:column="14"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

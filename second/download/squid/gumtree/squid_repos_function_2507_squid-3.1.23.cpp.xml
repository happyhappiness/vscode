<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2507_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">ftpTimeout<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">CommTimeoutCbParams<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">io<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">9<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">4<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"ftpTimeout: FD "<pos:position pos:line="4" pos:column="35"/></literal> <operator pos:line="4" pos:column="36">&lt;&lt;<pos:position pos:line="4" pos:column="44"/></operator> <name><name pos:line="4" pos:column="39">io<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">fd<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">&lt;&lt;<pos:position pos:line="4" pos:column="53"/></operator> <literal type="string" pos:line="4" pos:column="48">": '"<pos:position pos:line="4" pos:column="53"/></literal> <operator pos:line="4" pos:column="54">&lt;&lt;<pos:position pos:line="4" pos:column="62"/></operator> <call><name><name pos:line="4" pos:column="57">entry<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">-&gt;<pos:position pos:line="4" pos:column="67"/></operator><name pos:line="4" pos:column="64">url<pos:position pos:line="4" pos:column="67"/></name></name><argument_list pos:line="4" pos:column="67">()<pos:position pos:line="4" pos:column="69"/></argument_list></call> <operator pos:line="4" pos:column="70">&lt;&lt;<pos:position pos:line="4" pos:column="78"/></operator> <literal type="string" pos:line="4" pos:column="73">"'"<pos:position pos:line="4" pos:column="76"/></literal></expr></argument> )<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="79"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">SENT_PASV<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">state<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&amp;&amp;<pos:position pos:line="6" pos:column="38"/></operator> <name><name pos:line="6" pos:column="31">io<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">.<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">fd<pos:position pos:line="6" pos:column="36"/></name></name> <operator pos:line="6" pos:column="37">==<pos:position pos:line="6" pos:column="39"/></operator> <name><name pos:line="6" pos:column="40">data<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">.<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">fd<pos:position pos:line="6" pos:column="47"/></name></name></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48"> <block pos:line="6" pos:column="49">{
        <comment type="block" pos:line="7" pos:column="9">/* stupid ftp.netscape.com */</comment>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">fwd<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">dontRetry<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">(<argument><expr><literal type="boolean" pos:line="8" pos:column="24">false<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">fwd<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">ftpPasvFailed<pos:position pos:line="9" pos:column="27"/></name></name><argument_list pos:line="9" pos:column="27">(<argument><expr><literal type="boolean" pos:line="9" pos:column="28">true<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">9<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="19">DBG_IMPORTANT<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"ftpTimeout: timeout in SENT_PASV state"<pos:position pos:line="10" pos:column="74"/></literal></expr></argument> )<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">failed<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">ERR_READ_TIMEOUT<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
    <comment type="block" pos:line="14" pos:column="5">/* failed() closes ctrl.fd and frees ftpState */</comment>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

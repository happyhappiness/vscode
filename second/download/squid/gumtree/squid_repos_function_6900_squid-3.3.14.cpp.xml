<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6900_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">psignal<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">( <parameter><decl><type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">sig<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name><modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">msg<pos:position pos:line="2" pos:column="34"/></name></decl></parameter> )<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">( <expr><name pos:line="4" pos:column="10">msg<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">&amp;&amp;<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">msg<pos:position pos:line="4" pos:column="21"/></name></expr> )<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="24">fprintf<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">( <argument><expr><name pos:line="4" pos:column="33">stderr<pos:position pos:line="4" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="41">"%s: "<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">msg<pos:position pos:line="4" pos:column="52"/></name></expr></argument> )<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt></block></then></if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">( <expr><name pos:line="5" pos:column="10">sig<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">&gt;<pos:position pos:line="5" pos:column="18"/></operator> <literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal> <operator pos:line="5" pos:column="18">&amp;&amp;<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="21">sig<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">&lt;<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="27">_sys_nsig<pos:position pos:line="5" pos:column="36"/></name></expr> )<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">fprintf<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">( <argument><expr><name pos:line="6" pos:column="18">stderr<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="26">"%s\n"<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="34">_sys_siglist<pos:position pos:line="6" pos:column="46"/></name><index pos:line="6" pos:column="46">[<expr><name pos:line="6" pos:column="47">sig<pos:position pos:line="6" pos:column="50"/></name></expr>]<pos:position pos:line="6" pos:column="51"/></index></name></expr></argument> )<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt></block></then>
    <else pos:line="7" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">fputs<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">( <argument><expr><literal type="string" pos:line="8" pos:column="16">"(unknown)\n"<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">stderr<pos:position pos:line="8" pos:column="37"/></name></expr></argument> )<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1354_last_repos.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">http_hdr_sc_type<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">&amp;<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="19">operator<name pos:line="1" pos:column="27">++<pos:position pos:line="1" pos:column="29"/></name></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">http_hdr_sc_type<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">&amp;<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="49">aHeader<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">tmp<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><cast type="static" pos:line="3" pos:column="15">static_cast<argument_list type="generic" pos:line="3" pos:column="26">&lt;<argument><expr><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="34"/></argument_list><argument_list pos:line="3" pos:column="31">(<argument><expr><name pos:line="3" pos:column="32">aHeader<pos:position pos:line="3" pos:column="39"/></name></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">aHeader<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <cast type="static" pos:line="4" pos:column="15">static_cast<argument_list type="generic" pos:line="4" pos:column="26">&lt;<argument><expr><name pos:line="4" pos:column="27">http_hdr_sc_type<pos:position pos:line="4" pos:column="43"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="47"/></argument_list><argument_list pos:line="4" pos:column="44">(<argument><expr><operator pos:line="4" pos:column="45">++<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="47">tmp<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></cast></expr>;<pos:position pos:line="4" pos:column="52"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">aHeader<pos:position pos:line="5" pos:column="19"/></name></expr>;<pos:position pos:line="5" pos:column="20"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3834_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">DynamicServiceChain<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">Split<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">ServiceFilter<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">&amp;<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="61">filter<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="3" pos:column="40">const<pos:position pos:line="3" pos:column="45"/></specifier> <name pos:line="3" pos:column="46">String<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">&amp;<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="54">ids<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">DynamicGroupCfg<pos:position pos:line="3" pos:column="74"/></name> <modifier pos:line="3" pos:column="75">&amp;<pos:position pos:line="3" pos:column="80"/></modifier></type><name pos:line="3" pos:column="76">current<pos:position pos:line="3" pos:column="83"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="4" pos:column="40">DynamicGroupCfg<pos:position pos:line="4" pos:column="55"/></name> <modifier pos:line="4" pos:column="56">&amp;<pos:position pos:line="4" pos:column="61"/></modifier></type><name pos:line="4" pos:column="57">future<pos:position pos:line="4" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="64"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <comment type="line" pos:line="6" pos:column="5">// walk the list of services and split it into two parts:</comment>
    <comment type="line" pos:line="7" pos:column="5">// services that are applicable now and future services</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">bool<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">doingCurrent<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="boolean" pos:line="8" pos:column="25">true<pos:position pos:line="8" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">item<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ilen<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">pos<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><name pos:line="11" pos:column="23">NULL<pos:position pos:line="11" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><call><name pos:line="12" pos:column="12">strListGetItem<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="28">ids<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="33">','<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="39">item<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="45">&amp;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="46">ilen<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="52">&amp;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="53">pos<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="58"/></condition> <block pos:line="12" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">String<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">id<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">id<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">limitInit<pos:position pos:line="14" pos:column="21"/></name></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">item<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">ilen<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">ServicePointer<pos:position pos:line="15" pos:column="23"/></name></type> <name pos:line="15" pos:column="24">service<pos:position pos:line="15" pos:column="31"/></name> <init pos:line="15" pos:column="32">= <expr><call><name pos:line="15" pos:column="34">FindService<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">id<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="50"/></decl_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">doingCurrent<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><operator pos:line="17" pos:column="17">!<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">service<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">||<pos:position pos:line="17" pos:column="28"/></operator> <comment type="line" pos:line="17" pos:column="29">// cannot tell or matches current location</comment>
                    <operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><call><name><name pos:line="18" pos:column="22">service<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">cfg<pos:position pos:line="18" pos:column="34"/></name></name><argument_list pos:line="18" pos:column="34">()<pos:position pos:line="18" pos:column="36"/></argument_list></call><operator pos:line="18" pos:column="36">.<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">method<pos:position pos:line="18" pos:column="43"/></name> <operator pos:line="18" pos:column="44">==<pos:position pos:line="18" pos:column="46"/></operator> <name><name pos:line="18" pos:column="47">filter<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">.<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="54">method<pos:position pos:line="18" pos:column="60"/></name></name> <operator pos:line="18" pos:column="61">&amp;&amp;<pos:position pos:line="18" pos:column="71"/></operator>
                     <call><name><name pos:line="19" pos:column="22">service<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">cfg<pos:position pos:line="19" pos:column="34"/></name></name><argument_list pos:line="19" pos:column="34">()<pos:position pos:line="19" pos:column="36"/></argument_list></call><operator pos:line="19" pos:column="36">.<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">point<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">==<pos:position pos:line="19" pos:column="45"/></operator> <name><name pos:line="19" pos:column="46">filter<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">.<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">point<pos:position pos:line="19" pos:column="58"/></name></name><operator pos:line="19" pos:column="58">)<pos:position pos:line="19" pos:column="59"/></operator></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60"> <block pos:line="19" pos:column="61">{
                <expr_stmt><expr><call><name><name pos:line="20" pos:column="17">current<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">add<pos:position pos:line="20" pos:column="28"/></name></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">id<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
                <continue pos:line="21" pos:column="17">continue;<pos:position pos:line="21" pos:column="26"/></continue>
            }<pos:position pos:line="22" pos:column="14"/></block></then> <else pos:line="22" pos:column="15">else <block pos:line="22" pos:column="20">{
                <expr_stmt><expr><name pos:line="23" pos:column="17">doingCurrent<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <literal type="boolean" pos:line="23" pos:column="32">false<pos:position pos:line="23" pos:column="37"/></literal></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></else></if>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">doingCurrent<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="28" pos:column="13">future<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">add<pos:position pos:line="28" pos:column="23"/></name></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">id<pos:position pos:line="28" pos:column="26"/></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></while>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

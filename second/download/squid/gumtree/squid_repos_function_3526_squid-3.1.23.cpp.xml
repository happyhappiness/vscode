<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3526_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ConnStateData<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">pinConnection<pos:position pos:line="1" pos:column="34"/></name></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">pinning_fd<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">HttpRequest<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">request<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="73">struct<pos:position pos:line="1" pos:column="79"/></name> <name pos:line="1" pos:column="80">peer<pos:position pos:line="1" pos:column="84"/></name></name> <modifier pos:line="1" pos:column="85">*<pos:position pos:line="1" pos:column="86"/></modifier></type><name pos:line="1" pos:column="86">aPeer<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="93">bool<pos:position pos:line="1" pos:column="97"/></name></type> <name pos:line="1" pos:column="98">auth<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="103"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">fde<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">f<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">desc<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">FD_DESC_SZ<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">pinning<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">fd<pos:position pos:line="6" pos:column="19"/></name></name> <operator pos:line="6" pos:column="20">==<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">pinning_fd<pos:position pos:line="6" pos:column="33"/></name></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then>
    <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><name><name pos:line="8" pos:column="14">pinning<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">fd<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">!=<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="28">-<pos:position pos:line="8" pos:column="29"/></operator><literal type="number" pos:line="8" pos:column="29">1<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="9">comm_close<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name><name pos:line="9" pos:column="20">pinning<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">fd<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">pinning<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">host<pos:position pos:line="11" pos:column="21"/></name></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">safe_free<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">pinning<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">.<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">host<pos:position pos:line="12" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">pinning<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">.<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">fd<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">pinning_fd<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">pinning<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">host<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">xstrdup<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><call><name><name pos:line="15" pos:column="28">request<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">GetHost<pos:position pos:line="15" pos:column="44"/></name></name><argument_list pos:line="15" pos:column="44">()<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">pinning<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">port<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name><name pos:line="16" pos:column="20">request<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">port<pos:position pos:line="16" pos:column="33"/></name></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">pinning<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">pinned<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="boolean" pos:line="17" pos:column="22">true<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">pinning<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">peer<pos:position pos:line="18" pos:column="21"/></name></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">cbdataReferenceDone<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">pinning<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">.<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">peer<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt></block></then></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">aPeer<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="9">pinning<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">peer<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">cbdataReference<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name pos:line="21" pos:column="40">aPeer<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">pinning<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">auth<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">auth<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">f<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <operator pos:line="23" pos:column="9">&amp;<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="10">fd_table<pos:position pos:line="23" pos:column="18"/></name><index pos:line="23" pos:column="18">[<expr><name pos:line="23" pos:column="19">fd<pos:position pos:line="23" pos:column="21"/></name></expr>]<pos:position pos:line="23" pos:column="22"/></index></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">snprintf<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">desc<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">FD_DESC_SZ<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"%s pinned connection for %s:%d (%d)"<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>,
             <argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">auth<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">||<pos:position pos:line="25" pos:column="22"/></operator> <operator pos:line="25" pos:column="23">!<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">aPeer<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator></expr> ?<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32"> <expr><call><name><name pos:line="25" pos:column="33">request<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">GetHost<pos:position pos:line="25" pos:column="49"/></name></name><argument_list pos:line="25" pos:column="49">()<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr> <pos:position pos:line="25" pos:column="52"/></then><else pos:line="25" pos:column="52">: <expr><name><name pos:line="25" pos:column="54">aPeer<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">-&gt;<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="61">name<pos:position pos:line="25" pos:column="65"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="67">f<pos:position pos:line="25" pos:column="68"/></name><operator pos:line="25" pos:column="68">-&gt;<pos:position pos:line="25" pos:column="73"/></operator><name pos:line="25" pos:column="70">ipaddr<pos:position pos:line="25" pos:column="76"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="78">(<pos:position pos:line="25" pos:column="79"/></operator><name pos:line="25" pos:column="79">int<pos:position pos:line="25" pos:column="82"/></name><operator pos:line="25" pos:column="82">)<pos:position pos:line="25" pos:column="83"/></operator> <name><name pos:line="25" pos:column="84">f<pos:position pos:line="25" pos:column="85"/></name><operator pos:line="25" pos:column="85">-&gt;<pos:position pos:line="25" pos:column="90"/></operator><name pos:line="25" pos:column="87">remote_port<pos:position pos:line="25" pos:column="98"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="100">fd<pos:position pos:line="25" pos:column="102"/></name></expr></argument>)<pos:position pos:line="25" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="104"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">fd_note<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">pinning_fd<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="25">desc<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>

    <typedef pos:line="28" pos:column="5">typedef <type><name><name pos:line="28" pos:column="13">CommCbMemFunT<pos:position pos:line="28" pos:column="26"/></name><argument_list type="generic" pos:line="28" pos:column="26">&lt;<argument><expr><name pos:line="28" pos:column="27">ConnStateData<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">CommCloseCbParams<pos:position pos:line="28" pos:column="59"/></name></expr></argument>&gt;<pos:position pos:line="28" pos:column="63"/></argument_list></name></type> <name pos:line="28" pos:column="61">Dialer<pos:position pos:line="28" pos:column="67"/></name>;<pos:position pos:line="28" pos:column="68"/></typedef>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">pinning<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">closeHandler<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">JobCallback<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><literal type="number" pos:line="29" pos:column="40">33<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="44">5<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="30" pos:column="40">Dialer<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">this<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="54">ConnStateData<pos:position pos:line="30" pos:column="67"/></name><operator pos:line="30" pos:column="67">::<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="69">clientPinnedConnectionClosed<pos:position pos:line="30" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">comm_add_close_handler<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">pinning_fd<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="40">pinning<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">.<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">closeHandler<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>

}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

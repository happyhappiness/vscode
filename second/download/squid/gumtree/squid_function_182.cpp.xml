<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_182.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">dump_externalAclHelper<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">StoreEntry<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">sentry<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">name<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">external_acl<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type> <name pos:line="2" pos:column="84">list<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">external_acl<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">node<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">external_acl_format<pos:position pos:line="5" pos:column="30"/></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">format<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">wordlist<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">word<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">node<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">list<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></init> <condition><expr><name pos:line="8" pos:column="23">node<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></condition> <incr><expr><name pos:line="8" pos:column="29">node<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">=<pos:position pos:line="8" pos:column="35"/></operator> <name><name pos:line="8" pos:column="36">node<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">next<pos:position pos:line="8" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="47"/></control> <block pos:line="8" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">storeAppendPrintf<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">sentry<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="35">"%s %s"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">name<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="50">node<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">name<pos:position pos:line="9" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name><name pos:line="11" pos:column="14">node<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">local_addr<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">.<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">IsIPv6<pos:position pos:line="11" pos:column="37"/></name></name><argument_list pos:line="11" pos:column="37">()<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">storeAppendPrintf<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">sentry<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">" ipv4"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="13">storeAppendPrintf<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">sentry<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="39">" ipv6"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt></block></else></if>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">node<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">ttl<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">!=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">DEFAULT_EXTERNAL_ACL_TTL<pos:position pos:line="16" pos:column="50"/></name></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">storeAppendPrintf<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">sentry<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="39">" ttl=%d"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="50">node<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">ttl<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt></block></then></if>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">node<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">negative_ttl<pos:position pos:line="19" pos:column="31"/></name></name> <operator pos:line="19" pos:column="32">!=<pos:position pos:line="19" pos:column="34"/></operator> <name><name pos:line="19" pos:column="35">node<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">ttl<pos:position pos:line="19" pos:column="44"/></name></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="13">storeAppendPrintf<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">sentry<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="39">" negative_ttl=%d"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="59">node<pos:position pos:line="20" pos:column="63"/></name><operator pos:line="20" pos:column="63">-&gt;<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="65">negative_ttl<pos:position pos:line="20" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="79"/></expr_stmt></block></then></if>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">node<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">grace<pos:position pos:line="22" pos:column="24"/></name></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="13">storeAppendPrintf<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">sentry<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="39">" grace=%d"<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="52">node<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">grace<pos:position pos:line="23" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt></block></then></if>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">node<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">children<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">!=<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="31">DEFAULT_EXTERNAL_ACL_CHILDREN<pos:position pos:line="25" pos:column="60"/></name></expr>)<pos:position pos:line="25" pos:column="61"/></condition><then pos:line="25" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">storeAppendPrintf<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">sentry<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">" children=%d"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="55">node<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">-&gt;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="61">children<pos:position pos:line="26" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">node<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">concurrency<pos:position pos:line="28" pos:column="30"/></name></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="13">storeAppendPrintf<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">sentry<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="39">" concurrency=%d"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="58">node<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">-&gt;<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="64">concurrency<pos:position pos:line="29" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="77"/></expr_stmt></block></then></if>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">node<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">cache<pos:position pos:line="31" pos:column="24"/></name></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="13">storeAppendPrintf<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">sentry<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">" cache=%d"<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="52">node<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">-&gt;<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="58">cache_size<pos:position pos:line="32" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="70"/></expr_stmt></block></then></if>

        <for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">format<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name><name pos:line="34" pos:column="23">node<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">format<pos:position pos:line="34" pos:column="35"/></name></name></expr>;<pos:position pos:line="34" pos:column="36"/></init> <condition><expr><name pos:line="34" pos:column="37">format<pos:position pos:line="34" pos:column="43"/></name></expr>;<pos:position pos:line="34" pos:column="44"/></condition> <incr><expr><name pos:line="34" pos:column="45">format<pos:position pos:line="34" pos:column="51"/></name> <operator pos:line="34" pos:column="52">=<pos:position pos:line="34" pos:column="53"/></operator> <name><name pos:line="34" pos:column="54">format<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">-&gt;<pos:position pos:line="34" pos:column="65"/></operator><name pos:line="34" pos:column="62">next<pos:position pos:line="34" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="34" pos:column="67"/></control> <block pos:line="34" pos:column="68">{
            <switch pos:line="35" pos:column="13">switch <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">format<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">type<pos:position pos:line="35" pos:column="33"/></name></name></expr>)<pos:position pos:line="35" pos:column="34"/></condition> <block pos:line="35" pos:column="35">{

            <case pos:line="37" pos:column="13">case <expr><name><name pos:line="37" pos:column="18">_external_acl_format<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">::<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">EXT_ACL_HEADER_REQUEST<pos:position pos:line="37" pos:column="62"/></name></name></expr>:<pos:position pos:line="37" pos:column="63"/></case>
            <case pos:line="38" pos:column="13">case <expr><name><name pos:line="38" pos:column="18">_external_acl_format<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">::<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">EXT_ACL_HEADER_REQUEST_ID<pos:position pos:line="38" pos:column="65"/></name></name></expr>:<pos:position pos:line="38" pos:column="66"/></case>
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">storeAppendPrintf<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">sentry<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="43">" %%&gt;{%s}"<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="55">format<pos:position pos:line="39" pos:column="61"/></name><operator pos:line="39" pos:column="61">-&gt;<pos:position pos:line="39" pos:column="66"/></operator><name pos:line="39" pos:column="63">header<pos:position pos:line="39" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
                <break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>

            <case pos:line="42" pos:column="13">case <expr><name><name pos:line="42" pos:column="18">_external_acl_format<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">::<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">EXT_ACL_HEADER_REQUEST_MEMBER<pos:position pos:line="42" pos:column="69"/></name></name></expr>:<pos:position pos:line="42" pos:column="70"/></case>
            <case pos:line="43" pos:column="13">case <expr><name><name pos:line="43" pos:column="18">_external_acl_format<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">::<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">EXT_ACL_HEADER_REQUEST_ID_MEMBER<pos:position pos:line="43" pos:column="72"/></name></name></expr>:<pos:position pos:line="43" pos:column="73"/></case>
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">storeAppendPrintf<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">sentry<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="43">" %%&gt;{%s:%s}"<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="58">format<pos:position pos:line="44" pos:column="64"/></name><operator pos:line="44" pos:column="64">-&gt;<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="66">header<pos:position pos:line="44" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="74">format<pos:position pos:line="44" pos:column="80"/></name><operator pos:line="44" pos:column="80">-&gt;<pos:position pos:line="44" pos:column="85"/></operator><name pos:line="44" pos:column="82">member<pos:position pos:line="44" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="90"/></expr_stmt>
                <break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>

            <case pos:line="47" pos:column="13">case <expr><name><name pos:line="47" pos:column="18">_external_acl_format<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">::<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">EXT_ACL_HEADER_REPLY<pos:position pos:line="47" pos:column="60"/></name></name></expr>:<pos:position pos:line="47" pos:column="61"/></case>
            <case pos:line="48" pos:column="13">case <expr><name><name pos:line="48" pos:column="18">_external_acl_format<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">::<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="40">EXT_ACL_HEADER_REPLY_ID<pos:position pos:line="48" pos:column="63"/></name></name></expr>:<pos:position pos:line="48" pos:column="64"/></case>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">storeAppendPrintf<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">sentry<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="43">" %%&lt;{%s}"<pos:position pos:line="49" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="55">format<pos:position pos:line="49" pos:column="61"/></name><operator pos:line="49" pos:column="61">-&gt;<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="63">header<pos:position pos:line="49" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="71"/></expr_stmt>
                <break pos:line="50" pos:column="17">break;<pos:position pos:line="50" pos:column="23"/></break>

            <case pos:line="52" pos:column="13">case <expr><name><name pos:line="52" pos:column="18">_external_acl_format<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">::<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="40">EXT_ACL_HEADER_REPLY_MEMBER<pos:position pos:line="52" pos:column="67"/></name></name></expr>:<pos:position pos:line="52" pos:column="68"/></case>
            <case pos:line="53" pos:column="13">case <expr><name><name pos:line="53" pos:column="18">_external_acl_format<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">::<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="40">EXT_ACL_HEADER_REPLY_ID_MEMBER<pos:position pos:line="53" pos:column="70"/></name></name></expr>:<pos:position pos:line="53" pos:column="71"/></case>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">storeAppendPrintf<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">sentry<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="43">" %%&lt;{%s:%s}"<pos:position pos:line="54" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="58">format<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">-&gt;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="66">header<pos:position pos:line="54" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="74">format<pos:position pos:line="54" pos:column="80"/></name><operator pos:line="54" pos:column="80">-&gt;<pos:position pos:line="54" pos:column="85"/></operator><name pos:line="54" pos:column="82">member<pos:position pos:line="54" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="90"/></expr_stmt>
                <break pos:line="55" pos:column="17">break;<pos:position pos:line="55" pos:column="23"/></break>
<cpp:define pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">define<pos:position pos:line="56" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="56" pos:column="9">DUMP_EXT_ACL_TYPE<pos:position pos:line="56" pos:column="26"/></name><parameter_list pos:line="56" pos:column="26">(<parameter><type><name pos:line="56" pos:column="27">a<pos:position pos:line="56" pos:column="28"/></name></type></parameter>)<pos:position pos:line="56" pos:column="29"/></parameter_list></cpp:macro> \
            <cpp:value pos:line="57" pos:column="13">case _external_acl_format::EXT_ACL_##a: \
                storeAppendPrintf(sentry, " %%%s", #a); \
                break<pos:position pos:line="59" pos:column="22"/></cpp:value></cpp:define>

<cpp:define pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">define<pos:position pos:line="61" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="61" pos:column="9">DUMP_EXT_ACL_TYPE_FMT<pos:position pos:line="61" pos:column="30"/></name><parameter_list pos:line="61" pos:column="30">(<parameter><type><name pos:line="61" pos:column="31">a<pos:position pos:line="61" pos:column="32"/></name></type></parameter>, <parameter><type><name pos:line="61" pos:column="34">fmt<pos:position pos:line="61" pos:column="37"/></name></type></parameter>, <parameter><type><modifier pos:line="61" pos:column="39">...<pos:position pos:line="61" pos:column="42"/></modifier></type></parameter>)<pos:position pos:line="61" pos:column="43"/></parameter_list></cpp:macro> \
            <cpp:value pos:line="62" pos:column="13">case _external_acl_format::EXT_ACL_##a: \
                storeAppendPrintf(sentry, fmt, ##__VA_ARGS__); \
                break<pos:position pos:line="64" pos:column="22"/></cpp:value></cpp:define>

                <expr_stmt><expr><call><name pos:line="66" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">LOGIN<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
<cpp:if pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">if<pos:position pos:line="67" pos:column="4"/></cpp:directive> <expr><name pos:line="67" pos:column="5">USE_IDENT<pos:position pos:line="67" pos:column="14"/></name></expr></cpp:if>

                <expr_stmt><expr><call><name pos:line="69" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">IDENT<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>

                <expr_stmt><expr><call><name pos:line="72" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><name pos:line="72" pos:column="35">SRC<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">SRCPORT<pos:position pos:line="73" pos:column="42"/></name></expr></argument>)<pos:position pos:line="73" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="74" pos:column="34"/></name><argument_list pos:line="74" pos:column="34">(<argument><expr><name pos:line="74" pos:column="35">MYADDR<pos:position pos:line="74" pos:column="41"/></name></expr></argument>)<pos:position pos:line="74" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">(<argument><expr><name pos:line="75" pos:column="35">MYPORT<pos:position pos:line="75" pos:column="41"/></name></expr></argument>)<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">URI<pos:position pos:line="76" pos:column="38"/></name></expr></argument>)<pos:position pos:line="76" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><name pos:line="77" pos:column="35">DST<pos:position pos:line="77" pos:column="38"/></name></expr></argument>)<pos:position pos:line="77" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="78" pos:column="34"/></name><argument_list pos:line="78" pos:column="34">(<argument><expr><name pos:line="78" pos:column="35">PROTO<pos:position pos:line="78" pos:column="40"/></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="79" pos:column="34"/></name><argument_list pos:line="79" pos:column="34">(<argument><expr><name pos:line="79" pos:column="35">PORT<pos:position pos:line="79" pos:column="39"/></name></expr></argument>)<pos:position pos:line="79" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="80" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="80" pos:column="34"/></name><argument_list pos:line="80" pos:column="34">(<argument><expr><name pos:line="80" pos:column="35">PATH<pos:position pos:line="80" pos:column="39"/></name></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="81" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="81" pos:column="34"/></name><argument_list pos:line="81" pos:column="34">(<argument><expr><name pos:line="81" pos:column="35">METHOD<pos:position pos:line="81" pos:column="41"/></name></expr></argument>)<pos:position pos:line="81" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="43"/></expr_stmt>
<cpp:if pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">if<pos:position pos:line="82" pos:column="4"/></cpp:directive> <expr><name pos:line="82" pos:column="5">USE_SSL<pos:position pos:line="82" pos:column="12"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="83" pos:column="17">DUMP_EXT_ACL_TYPE_FMT<pos:position pos:line="83" pos:column="38"/></name><argument_list pos:line="83" pos:column="38">(<argument><expr><name pos:line="83" pos:column="39">USER_CERT_RAW<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="54">" %%USER_CERT_RAW"<pos:position pos:line="83" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="84" pos:column="17">DUMP_EXT_ACL_TYPE_FMT<pos:position pos:line="84" pos:column="38"/></name><argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">USER_CERTCHAIN_RAW<pos:position pos:line="84" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="59">" %%USER_CERTCHAIN_RAW"<pos:position pos:line="84" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="84"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="85" pos:column="17">DUMP_EXT_ACL_TYPE_FMT<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><name pos:line="85" pos:column="39">USER_CERT<pos:position pos:line="85" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="50">" %%USER_CERT_%s"<pos:position pos:line="85" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="69">format<pos:position pos:line="85" pos:column="75"/></name><operator pos:line="85" pos:column="75">-&gt;<pos:position pos:line="85" pos:column="80"/></operator><name pos:line="85" pos:column="77">header<pos:position pos:line="85" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="85"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="86" pos:column="17">DUMP_EXT_ACL_TYPE_FMT<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">CA_CERT<pos:position pos:line="86" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="48">" %%CA_CERT_%s"<pos:position pos:line="86" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="65">format<pos:position pos:line="86" pos:column="71"/></name><operator pos:line="86" pos:column="71">-&gt;<pos:position pos:line="86" pos:column="76"/></operator><name pos:line="86" pos:column="73">header<pos:position pos:line="86" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="81"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>

                <expr_stmt><expr><call><name pos:line="89" pos:column="17">DUMP_EXT_ACL_TYPE<pos:position pos:line="89" pos:column="34"/></name><argument_list pos:line="89" pos:column="34">(<argument><expr><name pos:line="89" pos:column="35">EXT_USER<pos:position pos:line="89" pos:column="43"/></name></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">DUMP_EXT_ACL_TYPE_FMT<pos:position pos:line="90" pos:column="38"/></name><argument_list pos:line="90" pos:column="38">(<argument><expr><name pos:line="90" pos:column="39">PERCENT<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="48">" %%%%"<pos:position pos:line="90" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="57"/></expr_stmt>

            <default pos:line="92" pos:column="13">default:<pos:position pos:line="92" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">fatal<pos:position pos:line="93" pos:column="22"/></name><argument_list pos:line="93" pos:column="22">(<argument><expr><literal type="string" pos:line="93" pos:column="23">"unknown external_acl format error"<pos:position pos:line="93" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="60"/></expr_stmt>
                <break pos:line="94" pos:column="17">break;<pos:position pos:line="94" pos:column="23"/></break>
            }<pos:position pos:line="95" pos:column="14"/></block></switch>
        }<pos:position pos:line="96" pos:column="10"/></block></for>

        <for pos:line="98" pos:column="9">for <control pos:line="98" pos:column="13">(<init><expr><name pos:line="98" pos:column="14">word<pos:position pos:line="98" pos:column="18"/></name> <operator pos:line="98" pos:column="19">=<pos:position pos:line="98" pos:column="20"/></operator> <name><name pos:line="98" pos:column="21">node<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">-&gt;<pos:position pos:line="98" pos:column="30"/></operator><name pos:line="98" pos:column="27">cmdline<pos:position pos:line="98" pos:column="34"/></name></name></expr>;<pos:position pos:line="98" pos:column="35"/></init> <condition><expr><name pos:line="98" pos:column="36">word<pos:position pos:line="98" pos:column="40"/></name></expr>;<pos:position pos:line="98" pos:column="41"/></condition> <incr><expr><name pos:line="98" pos:column="42">word<pos:position pos:line="98" pos:column="46"/></name> <operator pos:line="98" pos:column="47">=<pos:position pos:line="98" pos:column="48"/></operator> <name><name pos:line="98" pos:column="49">word<pos:position pos:line="98" pos:column="53"/></name><operator pos:line="98" pos:column="53">-&gt;<pos:position pos:line="98" pos:column="58"/></operator><name pos:line="98" pos:column="55">next<pos:position pos:line="98" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="98" pos:column="60"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="13">storeAppendPrintf<pos:position pos:line="99" pos:column="30"/></name><argument_list pos:line="99" pos:column="30">(<argument><expr><name pos:line="99" pos:column="31">sentry<pos:position pos:line="99" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="39">" %s"<pos:position pos:line="99" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="46">word<pos:position pos:line="99" pos:column="50"/></name><operator pos:line="99" pos:column="50">-&gt;<pos:position pos:line="99" pos:column="55"/></operator><name pos:line="99" pos:column="52">key<pos:position pos:line="99" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="57"/></expr_stmt></block></for>

        <expr_stmt><expr><call><name pos:line="101" pos:column="9">storeAppendPrintf<pos:position pos:line="101" pos:column="26"/></name><argument_list pos:line="101" pos:column="26">(<argument><expr><name pos:line="101" pos:column="27">sentry<pos:position pos:line="101" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="35">"\n"<pos:position pos:line="101" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></for>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5480_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">accessLogInit<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CustomLog<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">log<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">accessLogRegisterWithCacheManager<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">()<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">USE_ADAPTATION<pos:position pos:line="8" pos:column="19"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">Log<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">::<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">TheConfig<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">hasAdaptToken<pos:position pos:line="9" pos:column="33"/></name></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <literal type="boolean" pos:line="9" pos:column="36">false<pos:position pos:line="9" pos:column="41"/></literal></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">ICAP_CLIENT<pos:position pos:line="11" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">Log<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">::<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">TheConfig<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">hasIcapToken<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <literal type="boolean" pos:line="12" pos:column="35">false<pos:position pos:line="12" pos:column="40"/></literal></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">log<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name><name pos:line="15" pos:column="16">Config<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">Log<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">accesslogs<pos:position pos:line="15" pos:column="37"/></name></name></expr>;<pos:position pos:line="15" pos:column="38"/></init> <condition><expr><name pos:line="15" pos:column="39">log<pos:position pos:line="15" pos:column="42"/></name></expr>;<pos:position pos:line="15" pos:column="43"/></condition> <incr><expr><name pos:line="15" pos:column="44">log<pos:position pos:line="15" pos:column="47"/></name> <operator pos:line="15" pos:column="48">=<pos:position pos:line="15" pos:column="49"/></operator> <name><name pos:line="15" pos:column="50">log<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">next<pos:position pos:line="15" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="15" pos:column="60"/></control> <block pos:line="15" pos:column="61">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">log<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">type<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name><name pos:line="16" pos:column="26">Log<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">::<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">Format<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">::<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">CLF_NONE<pos:position pos:line="16" pos:column="47"/></name></name></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48">
            <block type="pseudo"><continue pos:line="17" pos:column="13">continue;<pos:position pos:line="17" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="19" pos:column="9">log<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">logfile<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name pos:line="19" pos:column="24">logfileOpen<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name><name pos:line="19" pos:column="36">log<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">filename<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="51">log<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">bufferSize<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="68">log<pos:position pos:line="19" pos:column="71"/></name><operator pos:line="19" pos:column="71">-&gt;<pos:position pos:line="19" pos:column="76"/></operator><name pos:line="19" pos:column="73">fatal<pos:position pos:line="19" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>

        <expr_stmt><expr><name pos:line="21" pos:column="9">LogfileStatus<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">LOG_ENABLE<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">USE_ADAPTATION<pos:position pos:line="23" pos:column="19"/></name></expr></cpp:if>
        <for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><decl><type><name><name pos:line="24" pos:column="14">Format<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">::<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">Token<pos:position pos:line="24" pos:column="27"/></name></name> <modifier pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></modifier></type> <name pos:line="24" pos:column="30">curr_token<pos:position pos:line="24" pos:column="40"/></name> <init pos:line="24" pos:column="41">= <expr><operator pos:line="24" pos:column="43">(<pos:position pos:line="24" pos:column="44"/></operator><ternary><condition><expr><name><name pos:line="24" pos:column="44">log<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">logFormat<pos:position pos:line="24" pos:column="58"/></name></name></expr>?<pos:position pos:line="24" pos:column="59"/></condition><then><expr><name><name pos:line="24" pos:column="59">log<pos:position pos:line="24" pos:column="62"/></name><operator pos:line="24" pos:column="62">-&gt;<pos:position pos:line="24" pos:column="67"/></operator><name pos:line="24" pos:column="64">logFormat<pos:position pos:line="24" pos:column="73"/></name><operator pos:line="24" pos:column="73">-&gt;<pos:position pos:line="24" pos:column="78"/></operator><name pos:line="24" pos:column="75">format<pos:position pos:line="24" pos:column="81"/></name></name></expr></then><else pos:line="24" pos:column="81">:<expr><name pos:line="24" pos:column="82">NULL<pos:position pos:line="24" pos:column="86"/></name></expr></else></ternary><operator pos:line="24" pos:column="86">)<pos:position pos:line="24" pos:column="87"/></operator></expr></init></decl>;<pos:position pos:line="24" pos:column="88"/></init> <condition><expr><name pos:line="24" pos:column="89">curr_token<pos:position pos:line="24" pos:column="99"/></name></expr>;<pos:position pos:line="24" pos:column="100"/></condition> <incr><expr><name pos:line="24" pos:column="101">curr_token<pos:position pos:line="24" pos:column="111"/></name> <operator pos:line="24" pos:column="112">=<pos:position pos:line="24" pos:column="113"/></operator> <name><name pos:line="24" pos:column="114">curr_token<pos:position pos:line="24" pos:column="124"/></name><operator pos:line="24" pos:column="124">-&gt;<pos:position pos:line="24" pos:column="129"/></operator><name pos:line="24" pos:column="126">next<pos:position pos:line="24" pos:column="130"/></name></name></expr></incr>)<pos:position pos:line="24" pos:column="131"/></control> <block pos:line="24" pos:column="132">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">curr_token<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">type<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <name><name pos:line="25" pos:column="37">Format<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">::<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">LFT_ADAPTATION_SUM_XACT_TIMES<pos:position pos:line="25" pos:column="74"/></name></name> <operator pos:line="25" pos:column="75">||<pos:position pos:line="25" pos:column="77"/></operator>
                    <name><name pos:line="26" pos:column="21">curr_token<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">type<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">==<pos:position pos:line="26" pos:column="40"/></operator> <name><name pos:line="26" pos:column="41">Format<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">::<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="49">LFT_ADAPTATION_ALL_XACT_TIMES<pos:position pos:line="26" pos:column="78"/></name></name> <operator pos:line="26" pos:column="79">||<pos:position pos:line="26" pos:column="81"/></operator>
                    <name><name pos:line="27" pos:column="21">curr_token<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">type<pos:position pos:line="27" pos:column="37"/></name></name> <operator pos:line="27" pos:column="38">==<pos:position pos:line="27" pos:column="40"/></operator> <name><name pos:line="27" pos:column="41">Format<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">::<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="49">LFT_ADAPTATION_LAST_HEADER<pos:position pos:line="27" pos:column="75"/></name></name> <operator pos:line="27" pos:column="76">||<pos:position pos:line="27" pos:column="78"/></operator>
                    <name><name pos:line="28" pos:column="21">curr_token<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">type<pos:position pos:line="28" pos:column="37"/></name></name> <operator pos:line="28" pos:column="38">==<pos:position pos:line="28" pos:column="40"/></operator> <name><name pos:line="28" pos:column="41">Format<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">::<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="49">LFT_ADAPTATION_LAST_HEADER_ELEM<pos:position pos:line="28" pos:column="80"/></name></name> <operator pos:line="28" pos:column="81">||<pos:position pos:line="28" pos:column="83"/></operator>
                    <name><name pos:line="29" pos:column="21">curr_token<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">type<pos:position pos:line="29" pos:column="37"/></name></name> <operator pos:line="29" pos:column="38">==<pos:position pos:line="29" pos:column="40"/></operator> <name><name pos:line="29" pos:column="41">Format<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">::<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">LFT_ADAPTATION_LAST_ALL_HEADERS<pos:position pos:line="29" pos:column="80"/></name></name><operator pos:line="29" pos:column="80">||<pos:position pos:line="29" pos:column="82"/></operator>
                    <operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><name><name pos:line="30" pos:column="22">curr_token<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">type<pos:position pos:line="30" pos:column="38"/></name></name> <operator pos:line="30" pos:column="39">==<pos:position pos:line="30" pos:column="41"/></operator> <name><name pos:line="30" pos:column="42">Format<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">::<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="50">LFT_NOTE<pos:position pos:line="30" pos:column="58"/></name></name> <operator pos:line="30" pos:column="59">&amp;&amp;<pos:position pos:line="30" pos:column="69"/></operator> <operator pos:line="30" pos:column="62">!<pos:position pos:line="30" pos:column="63"/></operator><call><name><name pos:line="30" pos:column="63">Adaptation<pos:position pos:line="30" pos:column="73"/></name><operator pos:line="30" pos:column="73">::<pos:position pos:line="30" pos:column="75"/></operator><name pos:line="30" pos:column="75">Config<pos:position pos:line="30" pos:column="81"/></name><operator pos:line="30" pos:column="81">::<pos:position pos:line="30" pos:column="83"/></operator><name pos:line="30" pos:column="83">metaHeaders<pos:position pos:line="30" pos:column="94"/></name><operator pos:line="30" pos:column="94">.<pos:position pos:line="30" pos:column="95"/></operator><name pos:line="30" pos:column="95">empty<pos:position pos:line="30" pos:column="100"/></name></name><argument_list pos:line="30" pos:column="100">()<pos:position pos:line="30" pos:column="102"/></argument_list></call><operator pos:line="30" pos:column="102">)<pos:position pos:line="30" pos:column="103"/></operator></expr>)<pos:position pos:line="30" pos:column="104"/></condition><then pos:line="30" pos:column="104"> <block pos:line="30" pos:column="105">{
                <expr_stmt><expr><name><name pos:line="31" pos:column="17">Log<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">::<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">TheConfig<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">.<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">hasAdaptToken<pos:position pos:line="31" pos:column="45"/></name></name> <operator pos:line="31" pos:column="46">=<pos:position pos:line="31" pos:column="47"/></operator> <literal type="boolean" pos:line="31" pos:column="48">true<pos:position pos:line="31" pos:column="52"/></literal></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">ICAP_CLIENT<pos:position pos:line="33" pos:column="16"/></name></expr></cpp:if>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name><name pos:line="34" pos:column="17">curr_token<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">type<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">==<pos:position pos:line="34" pos:column="36"/></operator> <name><name pos:line="34" pos:column="37">Format<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">::<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">LFT_ICAP_TOTAL_TIME<pos:position pos:line="34" pos:column="64"/></name></name></expr>)<pos:position pos:line="34" pos:column="65"/></condition><then pos:line="34" pos:column="65"> <block pos:line="34" pos:column="66">{
                <expr_stmt><expr><name><name pos:line="35" pos:column="17">Log<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">::<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">TheConfig<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">.<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">hasIcapToken<pos:position pos:line="35" pos:column="44"/></name></name> <operator pos:line="35" pos:column="45">=<pos:position pos:line="35" pos:column="46"/></operator> <literal type="boolean" pos:line="35" pos:column="47">true<pos:position pos:line="35" pos:column="51"/></literal></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="38" pos:column="10"/></block></for>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="40" pos:column="6"/></block></for>

<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><name pos:line="42" pos:column="5">HEADERS_LOG<pos:position pos:line="42" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">headerslog<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">logfileOpen<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><literal type="string" pos:line="44" pos:column="30">"/usr/local/squid/logs/headers.log"<pos:position pos:line="44" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="67">512<pos:position pos:line="44" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">assert<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><name pos:line="46" pos:column="12">NULL<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">!=<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">headerslog<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>

<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><name pos:line="49" pos:column="5">MULTICAST_MISS_STREAM<pos:position pos:line="49" pos:column="26"/></name></expr></cpp:if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">Config<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">.<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">mcast_miss<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">.<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="27">addr<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">.<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="32">s_addr<pos:position pos:line="51" pos:column="38"/></name></name> <operator pos:line="51" pos:column="39">!=<pos:position pos:line="51" pos:column="41"/></operator> <name><name pos:line="51" pos:column="42">no_addr<pos:position pos:line="51" pos:column="49"/></name><operator pos:line="51" pos:column="49">.<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="50">s_addr<pos:position pos:line="51" pos:column="56"/></name></name></expr>)<pos:position pos:line="51" pos:column="57"/></condition><then pos:line="51" pos:column="57"> <block pos:line="51" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">memset<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><operator pos:line="52" pos:column="16">&amp;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="17">mcast_miss_to<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="52" pos:column="32">'\0'<pos:position pos:line="52" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="38">sizeof<argument_list pos:line="52" pos:column="44">(<argument><expr><name pos:line="52" pos:column="45">mcast_miss_to<pos:position pos:line="52" pos:column="58"/></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">mcast_miss_to<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">.<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">sin_family<pos:position pos:line="53" pos:column="33"/></name></name> <operator pos:line="53" pos:column="34">=<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">AF_INET<pos:position pos:line="53" pos:column="43"/></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">mcast_miss_to<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">.<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">sin_port<pos:position pos:line="54" pos:column="31"/></name></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <call><name pos:line="54" pos:column="34">htons<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name><name pos:line="54" pos:column="40">Config<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">mcast_miss<pos:position pos:line="54" pos:column="57"/></name><operator pos:line="54" pos:column="57">.<pos:position pos:line="54" pos:column="58"/></operator><name pos:line="54" pos:column="58">port<pos:position pos:line="54" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">mcast_miss_to<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">.<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">sin_addr<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">.<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">s_addr<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <name><name pos:line="55" pos:column="41">Config<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">.<pos:position pos:line="55" pos:column="48"/></operator><name pos:line="55" pos:column="48">mcast_miss<pos:position pos:line="55" pos:column="58"/></name><operator pos:line="55" pos:column="58">.<pos:position pos:line="55" pos:column="59"/></operator><name pos:line="55" pos:column="59">addr<pos:position pos:line="55" pos:column="63"/></name><operator pos:line="55" pos:column="63">.<pos:position pos:line="55" pos:column="64"/></operator><name pos:line="55" pos:column="64">s_addr<pos:position pos:line="55" pos:column="70"/></name></name></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">mcast_miss_fd<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <call><name pos:line="56" pos:column="25">comm_open<pos:position pos:line="56" pos:column="34"/></name><argument_list pos:line="56" pos:column="34">(<argument><expr><name pos:line="56" pos:column="35">SOCK_DGRAM<pos:position pos:line="56" pos:column="45"/></name></expr></argument>,
                                  <argument><expr><name pos:line="57" pos:column="35">IPPROTO_UDP<pos:position pos:line="57" pos:column="46"/></name></expr></argument>,
                                  <argument><expr><name><name pos:line="58" pos:column="35">Config<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">.<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="42">Addrs<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">.<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="48">udp_incoming<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>,
                                  <argument><expr><name><name pos:line="59" pos:column="35">Config<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">.<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="42">mcast_miss<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">.<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="53">port<pos:position pos:line="59" pos:column="57"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="60" pos:column="35">COMM_NONBLOCKING<pos:position pos:line="60" pos:column="51"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="61" pos:column="35">"Multicast Miss Stream"<pos:position pos:line="61" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">mcast_miss_fd<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">&lt;<pos:position pos:line="63" pos:column="31"/></operator> <literal type="number" pos:line="63" pos:column="29">0<pos:position pos:line="63" pos:column="30"/></literal></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="13">fatal<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><literal type="string" pos:line="64" pos:column="19">"Cannot open Multicast Miss Stream Socket"<pos:position pos:line="64" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="63"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="66" pos:column="9">debugs<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="number" pos:line="66" pos:column="16">46<pos:position pos:line="66" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="20">DBG_IMPORTANT<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="35">"Multicast Miss Stream Socket opened on FD "<pos:position pos:line="66" pos:column="79"/></literal> <operator pos:line="66" pos:column="80">&lt;&lt;<pos:position pos:line="66" pos:column="88"/></operator> <name pos:line="66" pos:column="83">mcast_miss_fd<pos:position pos:line="66" pos:column="96"/></name></expr></argument>)<pos:position pos:line="66" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="98"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="68" pos:column="9">mcastSetTtl<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">mcast_miss_fd<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="36">Config<pos:position pos:line="68" pos:column="42"/></name><operator pos:line="68" pos:column="42">.<pos:position pos:line="68" pos:column="43"/></operator><name pos:line="68" pos:column="43">mcast_miss<pos:position pos:line="68" pos:column="53"/></name><operator pos:line="68" pos:column="53">.<pos:position pos:line="68" pos:column="54"/></operator><name pos:line="68" pos:column="54">ttl<pos:position pos:line="68" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><call><name pos:line="70" pos:column="13">strlen<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">(<argument><expr><name><name pos:line="70" pos:column="20">Config<pos:position pos:line="70" pos:column="26"/></name><operator pos:line="70" pos:column="26">.<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">mcast_miss<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">.<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">encode_key<pos:position pos:line="70" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call> <operator pos:line="70" pos:column="50">&lt;<pos:position pos:line="70" pos:column="54"/></operator> <literal type="number" pos:line="70" pos:column="52">16<pos:position pos:line="70" pos:column="54"/></literal></expr>)<pos:position pos:line="70" pos:column="55"/></condition><then pos:line="70" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="13">fatal<pos:position pos:line="71" pos:column="18"/></name><argument_list pos:line="71" pos:column="18">(<argument><expr><literal type="string" pos:line="71" pos:column="19">"mcast_encode_key is too short, must be 16 characters"<pos:position pos:line="71" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="75"/></expr_stmt></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">if<pos:position pos:line="75" pos:column="4"/></cpp:directive> <expr><name pos:line="75" pos:column="5">USE_FORW_VIA_DB<pos:position pos:line="75" pos:column="20"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">fvdbInit<pos:position pos:line="77" pos:column="13"/></name><argument_list pos:line="77" pos:column="13">()<pos:position pos:line="77" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="16"/></expr_stmt>

<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

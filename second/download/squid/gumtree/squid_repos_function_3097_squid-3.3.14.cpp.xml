<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3097_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">fde<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">dumpStats<pos:position pos:line="2" pos:column="15"/></name></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">StoreEntry<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">&amp;<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="29">dumpEntry<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">fdNumber<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">flags<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">open<pos:position pos:line="4" pos:column="20"/></name></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="7" pos:column="20"/></name></expr></cpp:if>

    <macro><name pos:line="9" pos:column="5">storeAppendPrintf<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument pos:line="9" pos:column="23">&amp;dumpEntry<pos:position pos:line="9" pos:column="33"/></argument>, <argument><literal type="string" pos:line="9" pos:column="35">"%4d 0x%-8lX %-6.6s %4d %7"<pos:position pos:line="9" pos:column="62"/></literal> PRId64 <literal type="string" pos:line="9" pos:column="70">"%c %7"<pos:position pos:line="9" pos:column="77"/></literal> PRId64 <literal type="string" pos:line="9" pos:column="85">"%c %-21s %s\n"<pos:position pos:line="9" pos:column="100"/></literal></argument>,
                      <argument pos:line="10" pos:column="23">fdNumber<pos:position pos:line="10" pos:column="31"/></argument>,
                      <argument pos:line="11" pos:column="23">win32.handle<pos:position pos:line="11" pos:column="35"/></argument>,
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
    <argument pos:line="13" pos:column="5">storeAppendPrintf(&amp;dumpEntry, <literal type="string" pos:line="13" pos:column="35">"%4d %-6.6s %4d %7"<pos:position pos:line="13" pos:column="54"/></literal> PRId64 <literal type="string" pos:line="13" pos:column="62">"%c %7"<pos:position pos:line="13" pos:column="69"/></literal> PRId64 <literal type="string" pos:line="13" pos:column="77">"%c %-21s %s\n"<pos:position pos:line="13" pos:column="92"/></literal>,
                      fdNumber,
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
                      fdTypeStr[type],
                      timeoutHandler != NULL ? (int) (timeout - squid_curtime) : <literal type="number" pos:line="17" pos:column="82">0<pos:position pos:line="17" pos:column="83"/></literal>,
                      bytes_read,
                      readPending(fdNumber) ? <literal type="char" pos:line="19" pos:column="47">'*'<pos:position pos:line="19" pos:column="50"/></literal> : <literal type="char" pos:line="19" pos:column="53">' '<pos:position pos:line="19" pos:column="56"/></literal>,
                      bytes_written,
                      write_handler ? <literal type="char" pos:line="21" pos:column="39">'*'<pos:position pos:line="21" pos:column="42"/></literal> : <literal type="char" pos:line="21" pos:column="45">' '<pos:position pos:line="21" pos:column="48"/></literal>,
                      remoteAddr(),
                      desc);
}

void
fde::DumpStats (StoreEntry *dumpEntry)
{
    int i;
    storeAppendPrintf(dumpEntry, <literal type="string" pos:line="30" pos:column="34">"Active file descriptors:\n"<pos:position pos:line="30" pos:column="62"/></literal>);
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="31" pos:column="20"/></name></expr></cpp:if>

    storeAppendPrintf(dumpEntry, <literal type="string" pos:line="33" pos:column="34">"%-4s %-10s %-6s %-4s %-7s* %-7s* %-21s %s\n"<pos:position pos:line="33" pos:column="79"/></literal>,
                      <literal type="string" pos:line="34" pos:column="23">"File"<pos:position pos:line="34" pos:column="29"/></literal>,
                      <literal type="string" pos:line="35" pos:column="23">"Handle"<pos:position pos:line="35" pos:column="31"/></literal>,
<cpp:else pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">else<pos:position pos:line="36" pos:column="6"/></cpp:directive></cpp:else>
    storeAppendPrintf(dumpEntry, <literal type="string" pos:line="37" pos:column="34">"%-4s %-6s %-4s %-7s* %-7s* %-21s %s\n"<pos:position pos:line="37" pos:column="73"/></literal>,
                      <literal type="string" pos:line="38" pos:column="23">"File"<pos:position pos:line="38" pos:column="29"/></literal>,
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
                      <literal type="string" pos:line="40" pos:column="23">"Type"<pos:position pos:line="40" pos:column="29"/></literal>,
                      <literal type="string" pos:line="41" pos:column="23">"Tout"<pos:position pos:line="41" pos:column="29"/></literal>,
                      <literal type="string" pos:line="42" pos:column="23">"Nread"<pos:position pos:line="42" pos:column="30"/></literal>,
                      <literal type="string" pos:line="43" pos:column="23">"Nwrite"<pos:position pos:line="43" pos:column="31"/></literal>,
                      <literal type="string" pos:line="44" pos:column="23">"Remote Address"<pos:position pos:line="44" pos:column="39"/></literal>,
                      <literal type="string" pos:line="45" pos:column="23">"Description"<pos:position pos:line="45" pos:column="36"/></literal>);
<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><name pos:line="46" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="46" pos:column="20"/></name></expr></cpp:if>
    storeAppendPrintf(dumpEntry, <literal type="string" pos:line="47" pos:column="34">"---- ---------- ------ ---- -------- -------- --------------------- ------------------------------\n"<pos:position pos:line="47" pos:column="136"/></literal>);
<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else<pos:position pos:line="48" pos:column="6"/></cpp:directive></cpp:else>
    storeAppendPrintf(dumpEntry, <literal type="string" pos:line="49" pos:column="34">"---- ------ ---- -------- -------- --------------------- ------------------------------\n"<pos:position pos:line="49" pos:column="125"/></literal>);
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>

    for (i = <literal type="number" pos:line="52" pos:column="14">0<pos:position pos:line="52" pos:column="15"/></literal>; i &lt; Squid_MaxFD; ++i) {
        fd_table[i].dumpStats(*dumpEntry, i);
    }
}

char const *
fde::remoteAddr() const
{
    LOCAL_ARRAY(char, buf, MAX_IPSTRLEN );

    if (type != FD_SOCKET)
        return null_string;

    if ( *ipaddr )
        snprintf( buf, MAX_IPSTRLEN, <literal type="string" pos:line="66" pos:column="38">"%s:%d"<pos:position pos:line="66" pos:column="45"/></literal>, ipaddr, (int)remote_port);
    else
        local_addr.ToURL(buf,MAX_IPSTRLEN); <comment type="line" pos:line="68" pos:column="45">// ToHostname does not include port.</comment>

    return buf;
}

void
fde::noteUse(PconnPool *pool)
{
    ++ pconn.uses;
    pconn.pool = pool;
}<pos:position pos:line="78" pos:column="2"/></argument></argument_list></macro></block></function></unit>

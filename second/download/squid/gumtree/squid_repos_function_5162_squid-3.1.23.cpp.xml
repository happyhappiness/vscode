<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5162_squid-3.1.23.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">DiskdFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">operator <name pos:line="2" pos:column="21">new<pos:position pos:line="2" pos:column="24"/></name></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">size_t<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">unused<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">DiskdFile<pos:position pos:line="4" pos:column="31"/></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">DiskdFile<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">result<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name pos:line="5" pos:column="25">cbdataAlloc<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">DiskdFile<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* Mark result as being owned - we want the refcounter to do the delete
     * call */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">79<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">3<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="19">"diskdFile with base "<pos:position pos:line="8" pos:column="41"/></literal> <operator pos:line="8" pos:column="42">&lt;&lt;<pos:position pos:line="8" pos:column="50"/></operator> <name pos:line="8" pos:column="45">result<pos:position pos:line="8" pos:column="51"/></name> <operator pos:line="8" pos:column="52">&lt;&lt;<pos:position pos:line="8" pos:column="60"/></operator> <literal type="string" pos:line="8" pos:column="55">" allocating"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_283_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">get_ldap_hostname_list<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">main_args<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">margs<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">struct<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">hstruct<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier><modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">hlist<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">int<pos:position pos:line="2" pos:column="76"/></name></type> <name pos:line="2" pos:column="77">nh<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="81">char<pos:position pos:line="2" pos:column="85"/></name> <modifier pos:line="2" pos:column="86">*<pos:position pos:line="2" pos:column="87"/></modifier></type><name pos:line="2" pos:column="87">domain<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <comment type="block" pos:line="5" pos:column="5">/*
     * char name[sysconf(_SC_HOST_NAME_MAX)];
     */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">name<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">1024<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">host<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><name pos:line="9" pos:column="15">NS_MAXDNAME<pos:position pos:line="9" pos:column="26"/></name></expr>]<pos:position pos:line="9" pos:column="27"/></index></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">service<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">hstruct<pos:position pos:line="11" pos:column="19"/></name></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">hp<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">lsstruct<pos:position pos:line="12" pos:column="20"/></name></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">ls<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><name pos:line="12" pos:column="27">NULL<pos:position pos:line="12" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">nhosts<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">size<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">type<pos:position pos:line="15" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="15">rdlength<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">priority<pos:position pos:line="16" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="19">weight<pos:position pos:line="16" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="27">port<pos:position pos:line="16" pos:column="31"/></name></decl>;<pos:position pos:line="16" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">len<pos:position pos:line="17" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="14">olen<pos:position pos:line="17" pos:column="18"/></name></decl>;<pos:position pos:line="17" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="12">j<pos:position pos:line="18" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="15">k<pos:position pos:line="18" pos:column="16"/></name></decl>;<pos:position pos:line="18" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">u_char<pos:position pos:line="19" pos:column="11"/></name> <modifier pos:line="19" pos:column="12">*<pos:position pos:line="19" pos:column="13"/></modifier></type><name pos:line="19" pos:column="13">buffer<pos:position pos:line="19" pos:column="19"/></name> <init pos:line="19" pos:column="20">= <expr><name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">u_char<pos:position pos:line="20" pos:column="11"/></name> <modifier pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></modifier></type><name pos:line="20" pos:column="13">p<pos:position pos:line="20" pos:column="14"/></name></decl>;<pos:position pos:line="20" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">ls<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <name><name pos:line="22" pos:column="10">margs<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">lservs<pos:position pos:line="22" pos:column="23"/></name></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><name pos:line="23" pos:column="12">ls<pos:position pos:line="23" pos:column="14"/></name></expr>)<pos:position pos:line="23" pos:column="15"/></condition> <block pos:line="23" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debug<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">char<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></operator><operator pos:line="24" pos:column="22">)<pos:position pos:line="24" pos:column="23"/></operator> <literal type="string" pos:line="24" pos:column="24">"%s| %s: DEBUG: Ldap server loop: lserver@domain %s@%s\n"<pos:position pos:line="24" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="83">LogTime<pos:position pos:line="24" pos:column="90"/></name><argument_list pos:line="24" pos:column="90">()<pos:position pos:line="24" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="94">PROGRAM<pos:position pos:line="24" pos:column="101"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="103">ls<pos:position pos:line="24" pos:column="105"/></name><operator pos:line="24" pos:column="105">-&gt;<pos:position pos:line="24" pos:column="110"/></operator><name pos:line="24" pos:column="107">lserver<pos:position pos:line="24" pos:column="114"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="24" pos:column="116">ls<pos:position pos:line="24" pos:column="118"/></name><operator pos:line="24" pos:column="118">-&gt;<pos:position pos:line="24" pos:column="123"/></operator><name pos:line="24" pos:column="120">domain<pos:position pos:line="24" pos:column="126"/></name></name></expr>?<pos:position pos:line="24" pos:column="127"/></condition><then><expr><name><name pos:line="24" pos:column="127">ls<pos:position pos:line="24" pos:column="129"/></name><operator pos:line="24" pos:column="129">-&gt;<pos:position pos:line="24" pos:column="134"/></operator><name pos:line="24" pos:column="131">domain<pos:position pos:line="24" pos:column="137"/></name></name></expr></then><else pos:line="24" pos:column="137">:<expr><literal type="string" pos:line="24" pos:column="138">"NULL"<pos:position pos:line="24" pos:column="144"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="24" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="146"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">ls<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">domain<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">&amp;&amp;<pos:position pos:line="25" pos:column="34"/></operator> <operator pos:line="25" pos:column="27">!<pos:position pos:line="25" pos:column="28"/></operator><call><name pos:line="25" pos:column="28">strcasecmp<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name><name pos:line="25" pos:column="39">ls<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">domain<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">domain<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="59"/></condition><then pos:line="25" pos:column="59"> <block pos:line="25" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">debug<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><operator pos:line="26" pos:column="19">(<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">char<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">*<pos:position pos:line="26" pos:column="26"/></operator><operator pos:line="26" pos:column="26">)<pos:position pos:line="26" pos:column="27"/></operator> <literal type="string" pos:line="26" pos:column="28">"%s| %s: DEBUG: Found lserver@domain %s@%s\n"<pos:position pos:line="26" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="75">LogTime<pos:position pos:line="26" pos:column="82"/></name><argument_list pos:line="26" pos:column="82">()<pos:position pos:line="26" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="86">PROGRAM<pos:position pos:line="26" pos:column="93"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="95">ls<pos:position pos:line="26" pos:column="97"/></name><operator pos:line="26" pos:column="97">-&gt;<pos:position pos:line="26" pos:column="102"/></operator><name pos:line="26" pos:column="99">lserver<pos:position pos:line="26" pos:column="106"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="108">ls<pos:position pos:line="26" pos:column="110"/></name><operator pos:line="26" pos:column="110">-&gt;<pos:position pos:line="26" pos:column="115"/></operator><name pos:line="26" pos:column="112">domain<pos:position pos:line="26" pos:column="118"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="120"/></expr_stmt>
            <expr_stmt><expr><name pos:line="27" pos:column="13">hp<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator>struct <name pos:line="27" pos:column="26">hstruct<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">*<pos:position pos:line="27" pos:column="35"/></operator><operator pos:line="27" pos:column="35">)<pos:position pos:line="27" pos:column="36"/></operator> <call><name pos:line="27" pos:column="37">xrealloc<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">hp<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="50">sizeof<argument_list pos:line="27" pos:column="56">(<argument><expr pos:line="27" pos:column="57">struct <name pos:line="27" pos:column="64">hstruct<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></sizeof> <operator pos:line="27" pos:column="73">*<pos:position pos:line="27" pos:column="74"/></operator> <operator pos:line="27" pos:column="75">(<pos:position pos:line="27" pos:column="76"/></operator><name pos:line="27" pos:column="76">nhosts<pos:position pos:line="27" pos:column="82"/></name> <operator pos:line="27" pos:column="83">+<pos:position pos:line="27" pos:column="84"/></operator> <literal type="number" pos:line="27" pos:column="85">1<pos:position pos:line="27" pos:column="86"/></literal><operator pos:line="27" pos:column="86">)<pos:position pos:line="27" pos:column="87"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">hp<pos:position pos:line="28" pos:column="15"/></name><index pos:line="28" pos:column="15">[<expr><name pos:line="28" pos:column="16">nhosts<pos:position pos:line="28" pos:column="22"/></name></expr>]<pos:position pos:line="28" pos:column="23"/></index></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">host<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">strdup<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name><name pos:line="28" pos:column="38">ls<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">lserver<pos:position pos:line="28" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">hp<pos:position pos:line="29" pos:column="15"/></name><index pos:line="29" pos:column="15">[<expr><name pos:line="29" pos:column="16">nhosts<pos:position pos:line="29" pos:column="22"/></name></expr>]<pos:position pos:line="29" pos:column="23"/></index></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">port<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <operator pos:line="29" pos:column="31">-<pos:position pos:line="29" pos:column="32"/></operator><literal type="number" pos:line="29" pos:column="32">1<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">hp<pos:position pos:line="30" pos:column="15"/></name><index pos:line="30" pos:column="15">[<expr><name pos:line="30" pos:column="16">nhosts<pos:position pos:line="30" pos:column="22"/></name></expr>]<pos:position pos:line="30" pos:column="23"/></index></name><operator pos:line="30" pos:column="23">.<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">priority<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <operator pos:line="30" pos:column="35">-<pos:position pos:line="30" pos:column="36"/></operator><literal type="number" pos:line="30" pos:column="36">2<pos:position pos:line="30" pos:column="37"/></literal></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">hp<pos:position pos:line="31" pos:column="15"/></name><index pos:line="31" pos:column="15">[<expr><name pos:line="31" pos:column="16">nhosts<pos:position pos:line="31" pos:column="22"/></name></expr>]<pos:position pos:line="31" pos:column="23"/></index></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">weight<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <operator pos:line="31" pos:column="33">-<pos:position pos:line="31" pos:column="34"/></operator><literal type="number" pos:line="31" pos:column="34">2<pos:position pos:line="31" pos:column="35"/></literal></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="32" pos:column="13">++<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">nhosts<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then> <elseif pos:line="33" pos:column="11">else <if pos:line="33" pos:column="16">if <condition pos:line="33" pos:column="19">( <expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name><name pos:line="33" pos:column="22">ls<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">domain<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">||<pos:position pos:line="33" pos:column="35"/></operator> <operator pos:line="33" pos:column="36">!<pos:position pos:line="33" pos:column="37"/></operator><call><name pos:line="33" pos:column="37">strcasecmp<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><name><name pos:line="33" pos:column="48">ls<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">domain<pos:position pos:line="33" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="60">""<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr> )<pos:position pos:line="33" pos:column="65"/></condition><then pos:line="33" pos:column="65"> <block pos:line="33" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debug<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><operator pos:line="34" pos:column="19">(<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">char<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">*<pos:position pos:line="34" pos:column="26"/></operator><operator pos:line="34" pos:column="26">)<pos:position pos:line="34" pos:column="27"/></operator> <literal type="string" pos:line="34" pos:column="28">"%s| %s: DEBUG: Found lserver@domain %s@%s\n"<pos:position pos:line="34" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="75">LogTime<pos:position pos:line="34" pos:column="82"/></name><argument_list pos:line="34" pos:column="82">()<pos:position pos:line="34" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="86">PROGRAM<pos:position pos:line="34" pos:column="93"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="95">ls<pos:position pos:line="34" pos:column="97"/></name><operator pos:line="34" pos:column="97">-&gt;<pos:position pos:line="34" pos:column="102"/></operator><name pos:line="34" pos:column="99">lserver<pos:position pos:line="34" pos:column="106"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="34" pos:column="108">ls<pos:position pos:line="34" pos:column="110"/></name><operator pos:line="34" pos:column="110">-&gt;<pos:position pos:line="34" pos:column="115"/></operator><name pos:line="34" pos:column="112">domain<pos:position pos:line="34" pos:column="118"/></name></name></expr>?<pos:position pos:line="34" pos:column="119"/></condition><then><expr><name><name pos:line="34" pos:column="119">ls<pos:position pos:line="34" pos:column="121"/></name><operator pos:line="34" pos:column="121">-&gt;<pos:position pos:line="34" pos:column="126"/></operator><name pos:line="34" pos:column="123">domain<pos:position pos:line="34" pos:column="129"/></name></name></expr></then><else pos:line="34" pos:column="129">:<expr><literal type="string" pos:line="34" pos:column="130">"NULL"<pos:position pos:line="34" pos:column="136"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="34" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="138"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">hp<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <operator pos:line="35" pos:column="18">(<pos:position pos:line="35" pos:column="19"/></operator>struct <name pos:line="35" pos:column="26">hstruct<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">*<pos:position pos:line="35" pos:column="35"/></operator><operator pos:line="35" pos:column="35">)<pos:position pos:line="35" pos:column="36"/></operator> <call><name pos:line="35" pos:column="37">xrealloc<pos:position pos:line="35" pos:column="45"/></name><argument_list pos:line="35" pos:column="45">(<argument><expr><name pos:line="35" pos:column="46">hp<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="50">sizeof<argument_list pos:line="35" pos:column="56">(<argument><expr pos:line="35" pos:column="57">struct <name pos:line="35" pos:column="64">hstruct<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></sizeof> <operator pos:line="35" pos:column="73">*<pos:position pos:line="35" pos:column="74"/></operator> <operator pos:line="35" pos:column="75">(<pos:position pos:line="35" pos:column="76"/></operator><name pos:line="35" pos:column="76">nhosts<pos:position pos:line="35" pos:column="82"/></name> <operator pos:line="35" pos:column="83">+<pos:position pos:line="35" pos:column="84"/></operator> <literal type="number" pos:line="35" pos:column="85">1<pos:position pos:line="35" pos:column="86"/></literal><operator pos:line="35" pos:column="86">)<pos:position pos:line="35" pos:column="87"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">hp<pos:position pos:line="36" pos:column="15"/></name><index pos:line="36" pos:column="15">[<expr><name pos:line="36" pos:column="16">nhosts<pos:position pos:line="36" pos:column="22"/></name></expr>]<pos:position pos:line="36" pos:column="23"/></index></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">host<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <call><name pos:line="36" pos:column="31">strdup<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name><name pos:line="36" pos:column="38">ls<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">lserver<pos:position pos:line="36" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">hp<pos:position pos:line="37" pos:column="15"/></name><index pos:line="37" pos:column="15">[<expr><name pos:line="37" pos:column="16">nhosts<pos:position pos:line="37" pos:column="22"/></name></expr>]<pos:position pos:line="37" pos:column="23"/></index></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">port<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <operator pos:line="37" pos:column="31">-<pos:position pos:line="37" pos:column="32"/></operator><literal type="number" pos:line="37" pos:column="32">1<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">hp<pos:position pos:line="38" pos:column="15"/></name><index pos:line="38" pos:column="15">[<expr><name pos:line="38" pos:column="16">nhosts<pos:position pos:line="38" pos:column="22"/></name></expr>]<pos:position pos:line="38" pos:column="23"/></index></name><operator pos:line="38" pos:column="23">.<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">priority<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <operator pos:line="38" pos:column="35">-<pos:position pos:line="38" pos:column="36"/></operator><literal type="number" pos:line="38" pos:column="36">2<pos:position pos:line="38" pos:column="37"/></literal></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">hp<pos:position pos:line="39" pos:column="15"/></name><index pos:line="39" pos:column="15">[<expr><name pos:line="39" pos:column="16">nhosts<pos:position pos:line="39" pos:column="22"/></name></expr>]<pos:position pos:line="39" pos:column="23"/></index></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">weight<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <operator pos:line="39" pos:column="33">-<pos:position pos:line="39" pos:column="34"/></operator><literal type="number" pos:line="39" pos:column="34">2<pos:position pos:line="39" pos:column="35"/></literal></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="40" pos:column="13">++<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">nhosts<pos:position pos:line="40" pos:column="21"/></name></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>

        }<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><name pos:line="43" pos:column="9">ls<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name><name pos:line="43" pos:column="14">ls<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">next<pos:position pos:line="43" pos:column="22"/></name></name></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></while>
    <comment type="block" pos:line="45" pos:column="5">/* found ldap servers in predefined list -&gt; exit */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">nhosts<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">&gt;<pos:position pos:line="46" pos:column="20"/></operator> <literal type="number" pos:line="46" pos:column="18">0<pos:position pos:line="46" pos:column="19"/></literal></expr>)<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20">
        <block type="pseudo"><goto pos:line="47" pos:column="9">goto <name pos:line="47" pos:column="14">cleanup<pos:position pos:line="47" pos:column="21"/></name>;<pos:position pos:line="47" pos:column="22"/></goto></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">margs<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">ssl<pos:position pos:line="49" pos:column="19"/></name></name></expr>)<pos:position pos:line="49" pos:column="20"/></condition><then pos:line="49" pos:column="20"> <block pos:line="49" pos:column="21">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">service<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <operator pos:line="50" pos:column="19">(<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">char<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">*<pos:position pos:line="50" pos:column="26"/></operator><operator pos:line="50" pos:column="26">)<pos:position pos:line="50" pos:column="27"/></operator> <call><name pos:line="50" pos:column="28">xmalloc<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><call><name pos:line="50" pos:column="36">strlen<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">(<argument><expr><literal type="string" pos:line="50" pos:column="43">"_ldaps._tcp."<pos:position pos:line="50" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call> <operator pos:line="50" pos:column="59">+<pos:position pos:line="50" pos:column="60"/></operator> <call><name pos:line="50" pos:column="61">strlen<pos:position pos:line="50" pos:column="67"/></name><argument_list pos:line="50" pos:column="67">(<argument><expr><name pos:line="50" pos:column="68">domain<pos:position pos:line="50" pos:column="74"/></name></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call> <operator pos:line="50" pos:column="76">+<pos:position pos:line="50" pos:column="77"/></operator> <literal type="number" pos:line="50" pos:column="78">1<pos:position pos:line="50" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">strcpy<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name pos:line="51" pos:column="16">service<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="25">"_ldaps._tcp."<pos:position pos:line="51" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then> <else pos:line="52" pos:column="7">else <block pos:line="52" pos:column="12">{
        <expr_stmt><expr><name pos:line="53" pos:column="9">service<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <operator pos:line="53" pos:column="19">(<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">char<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">*<pos:position pos:line="53" pos:column="26"/></operator><operator pos:line="53" pos:column="26">)<pos:position pos:line="53" pos:column="27"/></operator> <call><name pos:line="53" pos:column="28">xmalloc<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><call><name pos:line="53" pos:column="36">strlen<pos:position pos:line="53" pos:column="42"/></name><argument_list pos:line="53" pos:column="42">(<argument><expr><literal type="string" pos:line="53" pos:column="43">"_ldap._tcp."<pos:position pos:line="53" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call> <operator pos:line="53" pos:column="58">+<pos:position pos:line="53" pos:column="59"/></operator> <call><name pos:line="53" pos:column="60">strlen<pos:position pos:line="53" pos:column="66"/></name><argument_list pos:line="53" pos:column="66">(<argument><expr><name pos:line="53" pos:column="67">domain<pos:position pos:line="53" pos:column="73"/></name></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call> <operator pos:line="53" pos:column="75">+<pos:position pos:line="53" pos:column="76"/></operator> <literal type="number" pos:line="53" pos:column="77">1<pos:position pos:line="53" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">strcpy<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">service<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="25">"_ldap._tcp."<pos:position pos:line="54" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">strcat<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><name pos:line="56" pos:column="12">service<pos:position pos:line="56" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="21">domain<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>

<cpp:ifndef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifndef<pos:position pos:line="58" pos:column="8"/></cpp:directive> <name pos:line="58" pos:column="9">PACKETSZ_MULT<pos:position pos:line="58" pos:column="22"/></name></cpp:ifndef>
    <comment type="block" pos:line="59" pos:column="5">/*
     * It seems Solaris doesn't give back the real length back when res_search uses a to small buffer
     * Set a bigger one here
     */</comment>
<cpp:define pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">define<pos:position pos:line="63" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="63" pos:column="9">PACKETSZ_MULT<pos:position pos:line="63" pos:column="22"/></name></cpp:macro> <cpp:value pos:line="63" pos:column="23">10<pos:position pos:line="63" pos:column="25"/></cpp:value></cpp:define>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="66" pos:column="5">hp<pos:position pos:line="66" pos:column="7"/></name> <operator pos:line="66" pos:column="8">=<pos:position pos:line="66" pos:column="9"/></operator> <operator pos:line="66" pos:column="10">*<pos:position pos:line="66" pos:column="11"/></operator><name pos:line="66" pos:column="11">hlist<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="67" pos:column="5">buffer<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <operator pos:line="67" pos:column="14">(<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">u_char<pos:position pos:line="67" pos:column="21"/></name> <operator pos:line="67" pos:column="22">*<pos:position pos:line="67" pos:column="23"/></operator><operator pos:line="67" pos:column="23">)<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">xmalloc<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">PACKETSZ_MULT<pos:position pos:line="67" pos:column="46"/></name> <operator pos:line="67" pos:column="47">*<pos:position pos:line="67" pos:column="48"/></operator> <name pos:line="67" pos:column="49">NS_PACKETSZ<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="62"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><operator pos:line="68" pos:column="9">(<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">len<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <call><name pos:line="68" pos:column="16">res_search<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">service<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="36">ns_c_in<pos:position pos:line="68" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="45">ns_t_srv<pos:position pos:line="68" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="55">(<pos:position pos:line="68" pos:column="56"/></operator><name pos:line="68" pos:column="56">u_char<pos:position pos:line="68" pos:column="62"/></name> <operator pos:line="68" pos:column="63">*<pos:position pos:line="68" pos:column="64"/></operator><operator pos:line="68" pos:column="64">)<pos:position pos:line="68" pos:column="65"/></operator> <name pos:line="68" pos:column="66">buffer<pos:position pos:line="68" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="74">PACKETSZ_MULT<pos:position pos:line="68" pos:column="87"/></name> <operator pos:line="68" pos:column="88">*<pos:position pos:line="68" pos:column="89"/></operator> <name pos:line="68" pos:column="90">NS_PACKETSZ<pos:position pos:line="68" pos:column="101"/></name></expr></argument>)<pos:position pos:line="68" pos:column="102"/></argument_list></call><operator pos:line="68" pos:column="102">)<pos:position pos:line="68" pos:column="103"/></operator> <operator pos:line="68" pos:column="104">&lt;<pos:position pos:line="68" pos:column="108"/></operator> <literal type="number" pos:line="68" pos:column="106">0<pos:position pos:line="68" pos:column="107"/></literal></expr>)<pos:position pos:line="68" pos:column="108"/></condition><then pos:line="68" pos:column="108"> <block pos:line="68" pos:column="109">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">error<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(<argument><expr><operator pos:line="69" pos:column="15">(<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">char<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">*<pos:position pos:line="69" pos:column="22"/></operator><operator pos:line="69" pos:column="22">)<pos:position pos:line="69" pos:column="23"/></operator> <literal type="string" pos:line="69" pos:column="24">"%s| %s: ERROR: Error while resolving service record %s with res_search\n"<pos:position pos:line="69" pos:column="98"/></literal></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="100">LogTime<pos:position pos:line="69" pos:column="107"/></name><argument_list pos:line="69" pos:column="107">()<pos:position pos:line="69" pos:column="109"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="111">PROGRAM<pos:position pos:line="69" pos:column="118"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="120">service<pos:position pos:line="69" pos:column="127"/></name></expr></argument>)<pos:position pos:line="69" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="129"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">nsError<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">h_errno<pos:position pos:line="70" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="26">service<pos:position pos:line="70" pos:column="33"/></name></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name><name pos:line="71" pos:column="13">margs<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">ssl<pos:position pos:line="71" pos:column="23"/></name></name></expr>)<pos:position pos:line="71" pos:column="24"/></condition><then pos:line="71" pos:column="24"> <block pos:line="71" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">xfree<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">service<pos:position pos:line="72" pos:column="26"/></name></expr></argument>)<pos:position pos:line="72" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="73" pos:column="13">service<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <operator pos:line="73" pos:column="23">(<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">char<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">*<pos:position pos:line="73" pos:column="30"/></operator><operator pos:line="73" pos:column="30">)<pos:position pos:line="73" pos:column="31"/></operator> <call><name pos:line="73" pos:column="32">xmalloc<pos:position pos:line="73" pos:column="39"/></name><argument_list pos:line="73" pos:column="39">(<argument><expr><call><name pos:line="73" pos:column="40">strlen<pos:position pos:line="73" pos:column="46"/></name><argument_list pos:line="73" pos:column="46">(<argument><expr><literal type="string" pos:line="73" pos:column="47">"_ldap._tcp."<pos:position pos:line="73" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call> <operator pos:line="73" pos:column="62">+<pos:position pos:line="73" pos:column="63"/></operator> <call><name pos:line="73" pos:column="64">strlen<pos:position pos:line="73" pos:column="70"/></name><argument_list pos:line="73" pos:column="70">(<argument><expr><name pos:line="73" pos:column="71">domain<pos:position pos:line="73" pos:column="77"/></name></expr></argument>)<pos:position pos:line="73" pos:column="78"/></argument_list></call> <operator pos:line="73" pos:column="79">+<pos:position pos:line="73" pos:column="80"/></operator> <literal type="number" pos:line="73" pos:column="81">1<pos:position pos:line="73" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">strcpy<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><name pos:line="74" pos:column="20">service<pos:position pos:line="74" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="29">"_ldap._tcp."<pos:position pos:line="74" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">strcat<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">service<pos:position pos:line="75" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="29">domain<pos:position pos:line="75" pos:column="35"/></name></expr></argument>)<pos:position pos:line="75" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="37"/></expr_stmt>
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><operator pos:line="76" pos:column="17">(<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">len<pos:position pos:line="76" pos:column="21"/></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <call><name pos:line="76" pos:column="24">res_search<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">service<pos:position pos:line="76" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="44">ns_c_in<pos:position pos:line="76" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="53">ns_t_srv<pos:position pos:line="76" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="63">(<pos:position pos:line="76" pos:column="64"/></operator><name pos:line="76" pos:column="64">u_char<pos:position pos:line="76" pos:column="70"/></name> <operator pos:line="76" pos:column="71">*<pos:position pos:line="76" pos:column="72"/></operator><operator pos:line="76" pos:column="72">)<pos:position pos:line="76" pos:column="73"/></operator> <name pos:line="76" pos:column="74">buffer<pos:position pos:line="76" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="82">PACKETSZ_MULT<pos:position pos:line="76" pos:column="95"/></name> <operator pos:line="76" pos:column="96">*<pos:position pos:line="76" pos:column="97"/></operator> <name pos:line="76" pos:column="98">NS_PACKETSZ<pos:position pos:line="76" pos:column="109"/></name></expr></argument>)<pos:position pos:line="76" pos:column="110"/></argument_list></call><operator pos:line="76" pos:column="110">)<pos:position pos:line="76" pos:column="111"/></operator> <operator pos:line="76" pos:column="112">&lt;<pos:position pos:line="76" pos:column="116"/></operator> <literal type="number" pos:line="76" pos:column="114">0<pos:position pos:line="76" pos:column="115"/></literal></expr>)<pos:position pos:line="76" pos:column="116"/></condition><then pos:line="76" pos:column="116"> <block pos:line="76" pos:column="117">{
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">error<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><operator pos:line="77" pos:column="23">(<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="24">char<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">*<pos:position pos:line="77" pos:column="30"/></operator><operator pos:line="77" pos:column="30">)<pos:position pos:line="77" pos:column="31"/></operator> <literal type="string" pos:line="77" pos:column="32">"%s| %s: ERROR: Error while resolving service record %s with res_search\n"<pos:position pos:line="77" pos:column="106"/></literal></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="108">LogTime<pos:position pos:line="77" pos:column="115"/></name><argument_list pos:line="77" pos:column="115">()<pos:position pos:line="77" pos:column="117"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="119">PROGRAM<pos:position pos:line="77" pos:column="126"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="128">service<pos:position pos:line="77" pos:column="135"/></name></expr></argument>)<pos:position pos:line="77" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="137"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">nsError<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">h_errno<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">service<pos:position pos:line="78" pos:column="41"/></name></expr></argument>)<pos:position pos:line="78" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
                <goto pos:line="79" pos:column="17">goto <name pos:line="79" pos:column="22">finalise<pos:position pos:line="79" pos:column="30"/></name>;<pos:position pos:line="79" pos:column="31"/></goto>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
        }<pos:position pos:line="81" pos:column="10"/></block></then> <else pos:line="81" pos:column="11">else <block pos:line="81" pos:column="16">{
            <goto pos:line="82" pos:column="13">goto <name pos:line="82" pos:column="18">finalise<pos:position pos:line="82" pos:column="26"/></name>;<pos:position pos:line="82" pos:column="27"/></goto>
        }<pos:position pos:line="83" pos:column="10"/></block></else></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">len<pos:position pos:line="85" pos:column="12"/></name> <operator pos:line="85" pos:column="13">&gt;<pos:position pos:line="85" pos:column="17"/></operator> <name pos:line="85" pos:column="15">PACKETSZ_MULT<pos:position pos:line="85" pos:column="28"/></name> <operator pos:line="85" pos:column="29">*<pos:position pos:line="85" pos:column="30"/></operator> <name pos:line="85" pos:column="31">NS_PACKETSZ<pos:position pos:line="85" pos:column="42"/></name></expr>)<pos:position pos:line="85" pos:column="43"/></condition><then pos:line="85" pos:column="43"> <block pos:line="85" pos:column="44">{
        <expr_stmt><expr><name pos:line="86" pos:column="9">olen<pos:position pos:line="86" pos:column="13"/></name> <operator pos:line="86" pos:column="14">=<pos:position pos:line="86" pos:column="15"/></operator> <name pos:line="86" pos:column="16">len<pos:position pos:line="86" pos:column="19"/></name></expr>;<pos:position pos:line="86" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">buffer<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <operator pos:line="87" pos:column="18">(<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">u_char<pos:position pos:line="87" pos:column="25"/></name> <operator pos:line="87" pos:column="26">*<pos:position pos:line="87" pos:column="27"/></operator><operator pos:line="87" pos:column="27">)<pos:position pos:line="87" pos:column="28"/></operator> <call><name pos:line="87" pos:column="29">xrealloc<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><name pos:line="87" pos:column="38">buffer<pos:position pos:line="87" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="46">len<pos:position pos:line="87" pos:column="49"/></name></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><operator pos:line="88" pos:column="13">(<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="14">len<pos:position pos:line="88" pos:column="17"/></name> <operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator> <call><name pos:line="88" pos:column="20">res_search<pos:position pos:line="88" pos:column="30"/></name><argument_list pos:line="88" pos:column="30">(<argument><expr><name pos:line="88" pos:column="31">service<pos:position pos:line="88" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="40">ns_c_in<pos:position pos:line="88" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="49">ns_t_srv<pos:position pos:line="88" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="59">(<pos:position pos:line="88" pos:column="60"/></operator><name pos:line="88" pos:column="60">u_char<pos:position pos:line="88" pos:column="66"/></name> <operator pos:line="88" pos:column="67">*<pos:position pos:line="88" pos:column="68"/></operator><operator pos:line="88" pos:column="68">)<pos:position pos:line="88" pos:column="69"/></operator> <name pos:line="88" pos:column="70">buffer<pos:position pos:line="88" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="78">len<pos:position pos:line="88" pos:column="81"/></name></expr></argument>)<pos:position pos:line="88" pos:column="82"/></argument_list></call><operator pos:line="88" pos:column="82">)<pos:position pos:line="88" pos:column="83"/></operator> <operator pos:line="88" pos:column="84">&lt;<pos:position pos:line="88" pos:column="88"/></operator> <literal type="number" pos:line="88" pos:column="86">0<pos:position pos:line="88" pos:column="87"/></literal></expr>)<pos:position pos:line="88" pos:column="88"/></condition><then pos:line="88" pos:column="88"> <block pos:line="88" pos:column="89">{
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">error<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><operator pos:line="89" pos:column="19">(<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="20">char<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">*<pos:position pos:line="89" pos:column="26"/></operator><operator pos:line="89" pos:column="26">)<pos:position pos:line="89" pos:column="27"/></operator> <literal type="string" pos:line="89" pos:column="28">"%s| %s: ERROR: Error while resolving service record %s with res_search\n"<pos:position pos:line="89" pos:column="102"/></literal></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="104">LogTime<pos:position pos:line="89" pos:column="111"/></name><argument_list pos:line="89" pos:column="111">()<pos:position pos:line="89" pos:column="113"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="89" pos:column="115">PROGRAM<pos:position pos:line="89" pos:column="122"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="124">service<pos:position pos:line="89" pos:column="131"/></name></expr></argument>)<pos:position pos:line="89" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="133"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">nsError<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">h_errno<pos:position pos:line="90" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="30">service<pos:position pos:line="90" pos:column="37"/></name></expr></argument>)<pos:position pos:line="90" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="39"/></expr_stmt>
            <goto pos:line="91" pos:column="13">goto <name pos:line="91" pos:column="18">finalise<pos:position pos:line="91" pos:column="26"/></name>;<pos:position pos:line="91" pos:column="27"/></goto>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">len<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">&gt;<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="19">olen<pos:position pos:line="93" pos:column="23"/></name></expr>)<pos:position pos:line="93" pos:column="24"/></condition><then pos:line="93" pos:column="24"> <block pos:line="93" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">error<pos:position pos:line="94" pos:column="18"/></name><argument_list pos:line="94" pos:column="18">(<argument><expr><operator pos:line="94" pos:column="19">(<pos:position pos:line="94" pos:column="20"/></operator><name pos:line="94" pos:column="20">char<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">*<pos:position pos:line="94" pos:column="26"/></operator><operator pos:line="94" pos:column="26">)<pos:position pos:line="94" pos:column="27"/></operator> <literal type="string" pos:line="94" pos:column="28">"%s| %s: ERROR: Reply to big: buffer: %d reply length: %d\n"<pos:position pos:line="94" pos:column="88"/></literal></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="90">LogTime<pos:position pos:line="94" pos:column="97"/></name><argument_list pos:line="94" pos:column="97">()<pos:position pos:line="94" pos:column="99"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="94" pos:column="101">PROGRAM<pos:position pos:line="94" pos:column="108"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="110">olen<pos:position pos:line="94" pos:column="114"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="116">len<pos:position pos:line="94" pos:column="119"/></name></expr></argument>)<pos:position pos:line="94" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="121"/></expr_stmt>
            <goto pos:line="95" pos:column="13">goto <name pos:line="95" pos:column="18">finalise<pos:position pos:line="95" pos:column="26"/></name>;<pos:position pos:line="95" pos:column="27"/></goto>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="98" pos:column="5">p<pos:position pos:line="98" pos:column="6"/></name> <operator pos:line="98" pos:column="7">=<pos:position pos:line="98" pos:column="8"/></operator> <name pos:line="98" pos:column="9">buffer<pos:position pos:line="98" pos:column="15"/></name></expr>;<pos:position pos:line="98" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="99" pos:column="5">p<pos:position pos:line="99" pos:column="6"/></name> <operator pos:line="99" pos:column="7">+=<pos:position pos:line="99" pos:column="9"/></operator> <literal type="number" pos:line="99" pos:column="10">6<pos:position pos:line="99" pos:column="11"/></literal> <operator pos:line="99" pos:column="12">*<pos:position pos:line="99" pos:column="13"/></operator> <name pos:line="99" pos:column="14">NS_INT16SZ<pos:position pos:line="99" pos:column="24"/></name></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt>	<comment type="block" pos:line="99" pos:column="33">/* Header(6*16bit) = id + flags + 4*section count */</comment>
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">p<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">&gt;<pos:position pos:line="100" pos:column="15"/></operator> <name pos:line="100" pos:column="13">buffer<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">+<pos:position pos:line="100" pos:column="21"/></operator> <name pos:line="100" pos:column="22">len<pos:position pos:line="100" pos:column="25"/></name></expr>)<pos:position pos:line="100" pos:column="26"/></condition><then pos:line="100" pos:column="26"> <block pos:line="100" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">error<pos:position pos:line="101" pos:column="14"/></name><argument_list pos:line="101" pos:column="14">(<argument><expr><operator pos:line="101" pos:column="15">(<pos:position pos:line="101" pos:column="16"/></operator><name pos:line="101" pos:column="16">char<pos:position pos:line="101" pos:column="20"/></name> <operator pos:line="101" pos:column="21">*<pos:position pos:line="101" pos:column="22"/></operator><operator pos:line="101" pos:column="22">)<pos:position pos:line="101" pos:column="23"/></operator> <literal type="string" pos:line="101" pos:column="24">"%s| %s: ERROR: Message to small: %d &lt; header size\n"<pos:position pos:line="101" pos:column="80"/></literal></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="79">LogTime<pos:position pos:line="101" pos:column="86"/></name><argument_list pos:line="101" pos:column="86">()<pos:position pos:line="101" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="101" pos:column="90">PROGRAM<pos:position pos:line="101" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="99">len<pos:position pos:line="101" pos:column="102"/></name></expr></argument>)<pos:position pos:line="101" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="104"/></expr_stmt>
        <goto pos:line="102" pos:column="9">goto <name pos:line="102" pos:column="14">finalise<pos:position pos:line="102" pos:column="22"/></name>;<pos:position pos:line="102" pos:column="23"/></goto>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><operator pos:line="104" pos:column="9">(<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">size<pos:position pos:line="104" pos:column="14"/></name> <operator pos:line="104" pos:column="15">=<pos:position pos:line="104" pos:column="16"/></operator> <call><name pos:line="104" pos:column="17">dn_expand<pos:position pos:line="104" pos:column="26"/></name><argument_list pos:line="104" pos:column="26">(<argument><expr><name pos:line="104" pos:column="27">buffer<pos:position pos:line="104" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="35">buffer<pos:position pos:line="104" pos:column="41"/></name> <operator pos:line="104" pos:column="42">+<pos:position pos:line="104" pos:column="43"/></operator> <name pos:line="104" pos:column="44">len<pos:position pos:line="104" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="49">p<pos:position pos:line="104" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="52">name<pos:position pos:line="104" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="58">sysconf<pos:position pos:line="104" pos:column="65"/></name><argument_list pos:line="104" pos:column="65">(<argument><expr><name pos:line="104" pos:column="66">_SC_HOST_NAME_MAX<pos:position pos:line="104" pos:column="83"/></name></expr></argument>)<pos:position pos:line="104" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="85"/></argument_list></call><operator pos:line="104" pos:column="85">)<pos:position pos:line="104" pos:column="86"/></operator> <operator pos:line="104" pos:column="87">&lt;<pos:position pos:line="104" pos:column="91"/></operator> <literal type="number" pos:line="104" pos:column="89">0<pos:position pos:line="104" pos:column="90"/></literal></expr>)<pos:position pos:line="104" pos:column="91"/></condition><then pos:line="104" pos:column="91"> <block pos:line="104" pos:column="92">{
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">error<pos:position pos:line="105" pos:column="14"/></name><argument_list pos:line="105" pos:column="14">(<argument><expr><operator pos:line="105" pos:column="15">(<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="16">char<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">*<pos:position pos:line="105" pos:column="22"/></operator><operator pos:line="105" pos:column="22">)<pos:position pos:line="105" pos:column="23"/></operator> <literal type="string" pos:line="105" pos:column="24">"%s| %s: ERROR: Error while expanding query name with dn_expand:  %s\n"<pos:position pos:line="105" pos:column="95"/></literal></expr></argument>, <argument><expr><call><name pos:line="105" pos:column="97">LogTime<pos:position pos:line="105" pos:column="104"/></name><argument_list pos:line="105" pos:column="104">()<pos:position pos:line="105" pos:column="106"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="105" pos:column="108">PROGRAM<pos:position pos:line="105" pos:column="115"/></name></expr></argument>, <argument><expr><call><name pos:line="105" pos:column="117">strerror<pos:position pos:line="105" pos:column="125"/></name><argument_list pos:line="105" pos:column="125">(<argument><expr><name pos:line="105" pos:column="126">errno<pos:position pos:line="105" pos:column="131"/></name></expr></argument>)<pos:position pos:line="105" pos:column="132"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="134"/></expr_stmt>
        <goto pos:line="106" pos:column="9">goto <name pos:line="106" pos:column="14">finalise<pos:position pos:line="106" pos:column="22"/></name>;<pos:position pos:line="106" pos:column="23"/></goto>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="108" pos:column="5">p<pos:position pos:line="108" pos:column="6"/></name> <operator pos:line="108" pos:column="7">+=<pos:position pos:line="108" pos:column="9"/></operator> <name pos:line="108" pos:column="10">size<pos:position pos:line="108" pos:column="14"/></name></expr>;<pos:position pos:line="108" pos:column="15"/></expr_stmt>			<comment type="block" pos:line="108" pos:column="33">/* Query name */</comment>
    <expr_stmt><expr><name pos:line="109" pos:column="5">p<pos:position pos:line="109" pos:column="6"/></name> <operator pos:line="109" pos:column="7">+=<pos:position pos:line="109" pos:column="9"/></operator> <literal type="number" pos:line="109" pos:column="10">2<pos:position pos:line="109" pos:column="11"/></literal> <operator pos:line="109" pos:column="12">*<pos:position pos:line="109" pos:column="13"/></operator> <name pos:line="109" pos:column="14">NS_INT16SZ<pos:position pos:line="109" pos:column="24"/></name></expr>;<pos:position pos:line="109" pos:column="25"/></expr_stmt>	<comment type="block" pos:line="109" pos:column="33">/* Query type + class (2*16bit) */</comment>
    <if pos:line="110" pos:column="5">if <condition pos:line="110" pos:column="8">(<expr><name pos:line="110" pos:column="9">p<pos:position pos:line="110" pos:column="10"/></name> <operator pos:line="110" pos:column="11">&gt;<pos:position pos:line="110" pos:column="15"/></operator> <name pos:line="110" pos:column="13">buffer<pos:position pos:line="110" pos:column="19"/></name> <operator pos:line="110" pos:column="20">+<pos:position pos:line="110" pos:column="21"/></operator> <name pos:line="110" pos:column="22">len<pos:position pos:line="110" pos:column="25"/></name></expr>)<pos:position pos:line="110" pos:column="26"/></condition><then pos:line="110" pos:column="26"> <block pos:line="110" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">error<pos:position pos:line="111" pos:column="14"/></name><argument_list pos:line="111" pos:column="14">(<argument><expr><operator pos:line="111" pos:column="15">(<pos:position pos:line="111" pos:column="16"/></operator><name pos:line="111" pos:column="16">char<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">*<pos:position pos:line="111" pos:column="22"/></operator><operator pos:line="111" pos:column="22">)<pos:position pos:line="111" pos:column="23"/></operator> <literal type="string" pos:line="111" pos:column="24">"%s| %s: ERROR: Message to small: %d &lt; header + query name,type,class \n"<pos:position pos:line="111" pos:column="100"/></literal></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="99">LogTime<pos:position pos:line="111" pos:column="106"/></name><argument_list pos:line="111" pos:column="106">()<pos:position pos:line="111" pos:column="108"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="111" pos:column="110">PROGRAM<pos:position pos:line="111" pos:column="117"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="119">len<pos:position pos:line="111" pos:column="122"/></name></expr></argument>)<pos:position pos:line="111" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="124"/></expr_stmt>
        <goto pos:line="112" pos:column="9">goto <name pos:line="112" pos:column="14">finalise<pos:position pos:line="112" pos:column="22"/></name>;<pos:position pos:line="112" pos:column="23"/></goto>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>
    <while pos:line="114" pos:column="5">while <condition pos:line="114" pos:column="11">(<expr><name pos:line="114" pos:column="12">p<pos:position pos:line="114" pos:column="13"/></name> <operator pos:line="114" pos:column="14">&lt;<pos:position pos:line="114" pos:column="18"/></operator> <name pos:line="114" pos:column="16">buffer<pos:position pos:line="114" pos:column="22"/></name> <operator pos:line="114" pos:column="23">+<pos:position pos:line="114" pos:column="24"/></operator> <name pos:line="114" pos:column="25">len<pos:position pos:line="114" pos:column="28"/></name></expr>)<pos:position pos:line="114" pos:column="29"/></condition> <block pos:line="114" pos:column="30">{
        <if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><operator pos:line="115" pos:column="13">(<pos:position pos:line="115" pos:column="14"/></operator><name pos:line="115" pos:column="14">size<pos:position pos:line="115" pos:column="18"/></name> <operator pos:line="115" pos:column="19">=<pos:position pos:line="115" pos:column="20"/></operator> <call><name pos:line="115" pos:column="21">dn_expand<pos:position pos:line="115" pos:column="30"/></name><argument_list pos:line="115" pos:column="30">(<argument><expr><name pos:line="115" pos:column="31">buffer<pos:position pos:line="115" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="39">buffer<pos:position pos:line="115" pos:column="45"/></name> <operator pos:line="115" pos:column="46">+<pos:position pos:line="115" pos:column="47"/></operator> <name pos:line="115" pos:column="48">len<pos:position pos:line="115" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="53">p<pos:position pos:line="115" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="56">name<pos:position pos:line="115" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="62">sysconf<pos:position pos:line="115" pos:column="69"/></name><argument_list pos:line="115" pos:column="69">(<argument><expr><name pos:line="115" pos:column="70">_SC_HOST_NAME_MAX<pos:position pos:line="115" pos:column="87"/></name></expr></argument>)<pos:position pos:line="115" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="89"/></argument_list></call><operator pos:line="115" pos:column="89">)<pos:position pos:line="115" pos:column="90"/></operator> <operator pos:line="115" pos:column="91">&lt;<pos:position pos:line="115" pos:column="95"/></operator> <literal type="number" pos:line="115" pos:column="93">0<pos:position pos:line="115" pos:column="94"/></literal></expr>)<pos:position pos:line="115" pos:column="95"/></condition><then pos:line="115" pos:column="95"> <block pos:line="115" pos:column="96">{
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">error<pos:position pos:line="116" pos:column="18"/></name><argument_list pos:line="116" pos:column="18">(<argument><expr><operator pos:line="116" pos:column="19">(<pos:position pos:line="116" pos:column="20"/></operator><name pos:line="116" pos:column="20">char<pos:position pos:line="116" pos:column="24"/></name> <operator pos:line="116" pos:column="25">*<pos:position pos:line="116" pos:column="26"/></operator><operator pos:line="116" pos:column="26">)<pos:position pos:line="116" pos:column="27"/></operator> <literal type="string" pos:line="116" pos:column="28">"%s| %s: ERROR: Error while expanding answer name with dn_expand:  %s\n"<pos:position pos:line="116" pos:column="100"/></literal></expr></argument>, <argument><expr><call><name pos:line="116" pos:column="102">LogTime<pos:position pos:line="116" pos:column="109"/></name><argument_list pos:line="116" pos:column="109">()<pos:position pos:line="116" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="116" pos:column="113">PROGRAM<pos:position pos:line="116" pos:column="120"/></name></expr></argument>, <argument><expr><call><name pos:line="116" pos:column="122">strerror<pos:position pos:line="116" pos:column="130"/></name><argument_list pos:line="116" pos:column="130">(<argument><expr><name pos:line="116" pos:column="131">errno<pos:position pos:line="116" pos:column="136"/></name></expr></argument>)<pos:position pos:line="116" pos:column="137"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="139"/></expr_stmt>
            <goto pos:line="117" pos:column="13">goto <name pos:line="117" pos:column="18">finalise<pos:position pos:line="117" pos:column="26"/></name>;<pos:position pos:line="117" pos:column="27"/></goto>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="119" pos:column="9">p<pos:position pos:line="119" pos:column="10"/></name> <operator pos:line="119" pos:column="11">+=<pos:position pos:line="119" pos:column="13"/></operator> <name pos:line="119" pos:column="14">size<pos:position pos:line="119" pos:column="18"/></name></expr>;<pos:position pos:line="119" pos:column="19"/></expr_stmt>		<comment type="block" pos:line="119" pos:column="33">/* Resource Record name */</comment>
        <if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">p<pos:position pos:line="120" pos:column="14"/></name> <operator pos:line="120" pos:column="15">&gt;<pos:position pos:line="120" pos:column="19"/></operator> <name pos:line="120" pos:column="17">buffer<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">+<pos:position pos:line="120" pos:column="25"/></operator> <name pos:line="120" pos:column="26">len<pos:position pos:line="120" pos:column="29"/></name></expr>)<pos:position pos:line="120" pos:column="30"/></condition><then pos:line="120" pos:column="30"> <block pos:line="120" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="121" pos:column="13">error<pos:position pos:line="121" pos:column="18"/></name><argument_list pos:line="121" pos:column="18">(<argument><expr><operator pos:line="121" pos:column="19">(<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="20">char<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">*<pos:position pos:line="121" pos:column="26"/></operator><operator pos:line="121" pos:column="26">)<pos:position pos:line="121" pos:column="27"/></operator> <literal type="string" pos:line="121" pos:column="28">"%s| %s: ERROR: Message to small: %d &lt; header + query name,type,class + answer name\n"<pos:position pos:line="121" pos:column="117"/></literal></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="116">LogTime<pos:position pos:line="121" pos:column="123"/></name><argument_list pos:line="121" pos:column="123">()<pos:position pos:line="121" pos:column="125"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="121" pos:column="127">PROGRAM<pos:position pos:line="121" pos:column="134"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="136">len<pos:position pos:line="121" pos:column="139"/></name></expr></argument>)<pos:position pos:line="121" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="141"/></expr_stmt>
            <goto pos:line="122" pos:column="13">goto <name pos:line="122" pos:column="18">finalise<pos:position pos:line="122" pos:column="26"/></name>;<pos:position pos:line="122" pos:column="27"/></goto>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">NS_GET16<pos:position pos:line="124" pos:column="17"/></name><argument_list pos:line="124" pos:column="17">(<argument><expr><name pos:line="124" pos:column="18">type<pos:position pos:line="124" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="24">p<pos:position pos:line="124" pos:column="25"/></name></expr></argument>)<pos:position pos:line="124" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="27"/></expr_stmt>	<comment type="block" pos:line="124" pos:column="33">/* RR type (16bit) */</comment>
        <expr_stmt><expr><name pos:line="125" pos:column="9">p<pos:position pos:line="125" pos:column="10"/></name> <operator pos:line="125" pos:column="11">+=<pos:position pos:line="125" pos:column="13"/></operator> <name pos:line="125" pos:column="14">NS_INT16SZ<pos:position pos:line="125" pos:column="24"/></name> <operator pos:line="125" pos:column="25">+<pos:position pos:line="125" pos:column="26"/></operator> <name pos:line="125" pos:column="27">NS_INT32SZ<pos:position pos:line="125" pos:column="37"/></name></expr>;<pos:position pos:line="125" pos:column="38"/></expr_stmt>	<comment type="block" pos:line="125" pos:column="41">/* RR class + ttl (16bit+32bit) */</comment>
        <if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><name pos:line="126" pos:column="13">p<pos:position pos:line="126" pos:column="14"/></name> <operator pos:line="126" pos:column="15">&gt;<pos:position pos:line="126" pos:column="19"/></operator> <name pos:line="126" pos:column="17">buffer<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">+<pos:position pos:line="126" pos:column="25"/></operator> <name pos:line="126" pos:column="26">len<pos:position pos:line="126" pos:column="29"/></name></expr>)<pos:position pos:line="126" pos:column="30"/></condition><then pos:line="126" pos:column="30"> <block pos:line="126" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="127" pos:column="13">error<pos:position pos:line="127" pos:column="18"/></name><argument_list pos:line="127" pos:column="18">(<argument><expr><operator pos:line="127" pos:column="19">(<pos:position pos:line="127" pos:column="20"/></operator><name pos:line="127" pos:column="20">char<pos:position pos:line="127" pos:column="24"/></name> <operator pos:line="127" pos:column="25">*<pos:position pos:line="127" pos:column="26"/></operator><operator pos:line="127" pos:column="26">)<pos:position pos:line="127" pos:column="27"/></operator> <literal type="string" pos:line="127" pos:column="28">"%s| %s: ERROR: Message to small: %d &lt; header + query name,type,class + answer name + RR type,class,ttl\n"<pos:position pos:line="127" pos:column="137"/></literal></expr></argument>, <argument><expr><call><name pos:line="127" pos:column="136">LogTime<pos:position pos:line="127" pos:column="143"/></name><argument_list pos:line="127" pos:column="143">()<pos:position pos:line="127" pos:column="145"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="127" pos:column="147">PROGRAM<pos:position pos:line="127" pos:column="154"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="156">len<pos:position pos:line="127" pos:column="159"/></name></expr></argument>)<pos:position pos:line="127" pos:column="160"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="161"/></expr_stmt>
            <goto pos:line="128" pos:column="13">goto <name pos:line="128" pos:column="18">finalise<pos:position pos:line="128" pos:column="26"/></name>;<pos:position pos:line="128" pos:column="27"/></goto>
        }<pos:position pos:line="129" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">NS_GET16<pos:position pos:line="130" pos:column="17"/></name><argument_list pos:line="130" pos:column="17">(<argument><expr><name pos:line="130" pos:column="18">rdlength<pos:position pos:line="130" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="28">p<pos:position pos:line="130" pos:column="29"/></name></expr></argument>)<pos:position pos:line="130" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>	<comment type="block" pos:line="130" pos:column="33">/* RR data length (16bit) */</comment>

        <if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><name pos:line="132" pos:column="13">type<pos:position pos:line="132" pos:column="17"/></name> <operator pos:line="132" pos:column="18">==<pos:position pos:line="132" pos:column="20"/></operator> <name pos:line="132" pos:column="21">ns_t_srv<pos:position pos:line="132" pos:column="29"/></name></expr>)<pos:position pos:line="132" pos:column="30"/></condition><then pos:line="132" pos:column="30"> <block pos:line="132" pos:column="31">{	<comment type="block" pos:line="132" pos:column="33">/* SRV record */</comment>
            <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><name pos:line="133" pos:column="17">p<pos:position pos:line="133" pos:column="18"/></name> <operator pos:line="133" pos:column="19">&gt;<pos:position pos:line="133" pos:column="23"/></operator> <name pos:line="133" pos:column="21">buffer<pos:position pos:line="133" pos:column="27"/></name> <operator pos:line="133" pos:column="28">+<pos:position pos:line="133" pos:column="29"/></operator> <name pos:line="133" pos:column="30">len<pos:position pos:line="133" pos:column="33"/></name></expr>)<pos:position pos:line="133" pos:column="34"/></condition><then pos:line="133" pos:column="34"> <block pos:line="133" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="134" pos:column="17">error<pos:position pos:line="134" pos:column="22"/></name><argument_list pos:line="134" pos:column="22">(<argument><expr><operator pos:line="134" pos:column="23">(<pos:position pos:line="134" pos:column="24"/></operator><name pos:line="134" pos:column="24">char<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">*<pos:position pos:line="134" pos:column="30"/></operator><operator pos:line="134" pos:column="30">)<pos:position pos:line="134" pos:column="31"/></operator> <literal type="string" pos:line="134" pos:column="32">"%s| %s: ERROR: Message to small: %d &lt; header + query name,type,class + answer name + RR type,class,ttl + RR data length\n"<pos:position pos:line="134" pos:column="158"/></literal></expr></argument>, <argument><expr><call><name pos:line="134" pos:column="157">LogTime<pos:position pos:line="134" pos:column="164"/></name><argument_list pos:line="134" pos:column="164">()<pos:position pos:line="134" pos:column="166"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="134" pos:column="168">PROGRAM<pos:position pos:line="134" pos:column="175"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="177">len<pos:position pos:line="134" pos:column="180"/></name></expr></argument>)<pos:position pos:line="134" pos:column="181"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="182"/></expr_stmt>
                <goto pos:line="135" pos:column="17">goto <name pos:line="135" pos:column="22">finalise<pos:position pos:line="135" pos:column="30"/></name>;<pos:position pos:line="135" pos:column="31"/></goto>
            }<pos:position pos:line="136" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="137" pos:column="13">NS_GET16<pos:position pos:line="137" pos:column="21"/></name><argument_list pos:line="137" pos:column="21">(<argument><expr><name pos:line="137" pos:column="22">priority<pos:position pos:line="137" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="32">p<pos:position pos:line="137" pos:column="33"/></name></expr></argument>)<pos:position pos:line="137" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="35"/></expr_stmt>	<comment type="block" pos:line="137" pos:column="41">/* Priority (16bit) */</comment>
            <if pos:line="138" pos:column="13">if <condition pos:line="138" pos:column="16">(<expr><name pos:line="138" pos:column="17">p<pos:position pos:line="138" pos:column="18"/></name> <operator pos:line="138" pos:column="19">&gt;<pos:position pos:line="138" pos:column="23"/></operator> <name pos:line="138" pos:column="21">buffer<pos:position pos:line="138" pos:column="27"/></name> <operator pos:line="138" pos:column="28">+<pos:position pos:line="138" pos:column="29"/></operator> <name pos:line="138" pos:column="30">len<pos:position pos:line="138" pos:column="33"/></name></expr>)<pos:position pos:line="138" pos:column="34"/></condition><then pos:line="138" pos:column="34"> <block pos:line="138" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="139" pos:column="17">error<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><operator pos:line="139" pos:column="23">(<pos:position pos:line="139" pos:column="24"/></operator><name pos:line="139" pos:column="24">char<pos:position pos:line="139" pos:column="28"/></name> <operator pos:line="139" pos:column="29">*<pos:position pos:line="139" pos:column="30"/></operator><operator pos:line="139" pos:column="30">)<pos:position pos:line="139" pos:column="31"/></operator> <literal type="string" pos:line="139" pos:column="32">"%s| %s: ERROR: Message to small: %d &lt;  SRV RR + priority\n"<pos:position pos:line="139" pos:column="95"/></literal></expr></argument>, <argument><expr><call><name pos:line="139" pos:column="94">LogTime<pos:position pos:line="139" pos:column="101"/></name><argument_list pos:line="139" pos:column="101">()<pos:position pos:line="139" pos:column="103"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="139" pos:column="105">PROGRAM<pos:position pos:line="139" pos:column="112"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="114">len<pos:position pos:line="139" pos:column="117"/></name></expr></argument>)<pos:position pos:line="139" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="119"/></expr_stmt>
                <goto pos:line="140" pos:column="17">goto <name pos:line="140" pos:column="22">finalise<pos:position pos:line="140" pos:column="30"/></name>;<pos:position pos:line="140" pos:column="31"/></goto>
            }<pos:position pos:line="141" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="142" pos:column="13">NS_GET16<pos:position pos:line="142" pos:column="21"/></name><argument_list pos:line="142" pos:column="21">(<argument><expr><name pos:line="142" pos:column="22">weight<pos:position pos:line="142" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="30">p<pos:position pos:line="142" pos:column="31"/></name></expr></argument>)<pos:position pos:line="142" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="33"/></expr_stmt>	<comment type="block" pos:line="142" pos:column="41">/* Weight (16bit) */</comment>
            <if pos:line="143" pos:column="13">if <condition pos:line="143" pos:column="16">(<expr><name pos:line="143" pos:column="17">p<pos:position pos:line="143" pos:column="18"/></name> <operator pos:line="143" pos:column="19">&gt;<pos:position pos:line="143" pos:column="23"/></operator> <name pos:line="143" pos:column="21">buffer<pos:position pos:line="143" pos:column="27"/></name> <operator pos:line="143" pos:column="28">+<pos:position pos:line="143" pos:column="29"/></operator> <name pos:line="143" pos:column="30">len<pos:position pos:line="143" pos:column="33"/></name></expr>)<pos:position pos:line="143" pos:column="34"/></condition><then pos:line="143" pos:column="34"> <block pos:line="143" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">error<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><operator pos:line="144" pos:column="23">(<pos:position pos:line="144" pos:column="24"/></operator><name pos:line="144" pos:column="24">char<pos:position pos:line="144" pos:column="28"/></name> <operator pos:line="144" pos:column="29">*<pos:position pos:line="144" pos:column="30"/></operator><operator pos:line="144" pos:column="30">)<pos:position pos:line="144" pos:column="31"/></operator> <literal type="string" pos:line="144" pos:column="32">"%s| %s: ERROR: Message to small: %d &lt;  SRV RR + priority + weight\n"<pos:position pos:line="144" pos:column="104"/></literal></expr></argument>, <argument><expr><call><name pos:line="144" pos:column="103">LogTime<pos:position pos:line="144" pos:column="110"/></name><argument_list pos:line="144" pos:column="110">()<pos:position pos:line="144" pos:column="112"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="144" pos:column="114">PROGRAM<pos:position pos:line="144" pos:column="121"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="123">len<pos:position pos:line="144" pos:column="126"/></name></expr></argument>)<pos:position pos:line="144" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="128"/></expr_stmt>
                <goto pos:line="145" pos:column="17">goto <name pos:line="145" pos:column="22">finalise<pos:position pos:line="145" pos:column="30"/></name>;<pos:position pos:line="145" pos:column="31"/></goto>
            }<pos:position pos:line="146" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="147" pos:column="13">NS_GET16<pos:position pos:line="147" pos:column="21"/></name><argument_list pos:line="147" pos:column="21">(<argument><expr><name pos:line="147" pos:column="22">port<pos:position pos:line="147" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="28">p<pos:position pos:line="147" pos:column="29"/></name></expr></argument>)<pos:position pos:line="147" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="31"/></expr_stmt>	<comment type="block" pos:line="147" pos:column="33">/* Port (16bit) */</comment>
            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><name pos:line="148" pos:column="17">p<pos:position pos:line="148" pos:column="18"/></name> <operator pos:line="148" pos:column="19">&gt;<pos:position pos:line="148" pos:column="23"/></operator> <name pos:line="148" pos:column="21">buffer<pos:position pos:line="148" pos:column="27"/></name> <operator pos:line="148" pos:column="28">+<pos:position pos:line="148" pos:column="29"/></operator> <name pos:line="148" pos:column="30">len<pos:position pos:line="148" pos:column="33"/></name></expr>)<pos:position pos:line="148" pos:column="34"/></condition><then pos:line="148" pos:column="34"> <block pos:line="148" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="149" pos:column="17">error<pos:position pos:line="149" pos:column="22"/></name><argument_list pos:line="149" pos:column="22">(<argument><expr><operator pos:line="149" pos:column="23">(<pos:position pos:line="149" pos:column="24"/></operator><name pos:line="149" pos:column="24">char<pos:position pos:line="149" pos:column="28"/></name> <operator pos:line="149" pos:column="29">*<pos:position pos:line="149" pos:column="30"/></operator><operator pos:line="149" pos:column="30">)<pos:position pos:line="149" pos:column="31"/></operator> <literal type="string" pos:line="149" pos:column="32">"%s| %s: ERROR: Message to small: %d &lt;  SRV RR + priority + weight + port\n"<pos:position pos:line="149" pos:column="111"/></literal></expr></argument>, <argument><expr><call><name pos:line="149" pos:column="110">LogTime<pos:position pos:line="149" pos:column="117"/></name><argument_list pos:line="149" pos:column="117">()<pos:position pos:line="149" pos:column="119"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="149" pos:column="121">PROGRAM<pos:position pos:line="149" pos:column="128"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="130">len<pos:position pos:line="149" pos:column="133"/></name></expr></argument>)<pos:position pos:line="149" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="135"/></expr_stmt>
                <goto pos:line="150" pos:column="17">goto <name pos:line="150" pos:column="22">finalise<pos:position pos:line="150" pos:column="30"/></name>;<pos:position pos:line="150" pos:column="31"/></goto>
            }<pos:position pos:line="151" pos:column="14"/></block></then></if>
            <if pos:line="152" pos:column="13">if <condition pos:line="152" pos:column="16">(<expr><operator pos:line="152" pos:column="17">(<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">size<pos:position pos:line="152" pos:column="22"/></name> <operator pos:line="152" pos:column="23">=<pos:position pos:line="152" pos:column="24"/></operator> <call><name pos:line="152" pos:column="25">dn_expand<pos:position pos:line="152" pos:column="34"/></name><argument_list pos:line="152" pos:column="34">(<argument><expr><name pos:line="152" pos:column="35">buffer<pos:position pos:line="152" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="43">buffer<pos:position pos:line="152" pos:column="49"/></name> <operator pos:line="152" pos:column="50">+<pos:position pos:line="152" pos:column="51"/></operator> <name pos:line="152" pos:column="52">len<pos:position pos:line="152" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="57">p<pos:position pos:line="152" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="60">host<pos:position pos:line="152" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="66">NS_MAXDNAME<pos:position pos:line="152" pos:column="77"/></name></expr></argument>)<pos:position pos:line="152" pos:column="78"/></argument_list></call><operator pos:line="152" pos:column="78">)<pos:position pos:line="152" pos:column="79"/></operator> <operator pos:line="152" pos:column="80">&lt;<pos:position pos:line="152" pos:column="84"/></operator> <literal type="number" pos:line="152" pos:column="82">0<pos:position pos:line="152" pos:column="83"/></literal></expr>)<pos:position pos:line="152" pos:column="84"/></condition><then pos:line="152" pos:column="84"> <block pos:line="152" pos:column="85">{
                <expr_stmt><expr><call><name pos:line="153" pos:column="17">error<pos:position pos:line="153" pos:column="22"/></name><argument_list pos:line="153" pos:column="22">(<argument><expr><operator pos:line="153" pos:column="23">(<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="24">char<pos:position pos:line="153" pos:column="28"/></name> <operator pos:line="153" pos:column="29">*<pos:position pos:line="153" pos:column="30"/></operator><operator pos:line="153" pos:column="30">)<pos:position pos:line="153" pos:column="31"/></operator> <literal type="string" pos:line="153" pos:column="32">"%s| %s: ERROR: Error while expanding SRV RR name with dn_expand:  %s\n"<pos:position pos:line="153" pos:column="104"/></literal></expr></argument>, <argument><expr><call><name pos:line="153" pos:column="106">LogTime<pos:position pos:line="153" pos:column="113"/></name><argument_list pos:line="153" pos:column="113">()<pos:position pos:line="153" pos:column="115"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="153" pos:column="117">PROGRAM<pos:position pos:line="153" pos:column="124"/></name></expr></argument>, <argument><expr><call><name pos:line="153" pos:column="126">strerror<pos:position pos:line="153" pos:column="134"/></name><argument_list pos:line="153" pos:column="134">(<argument><expr><name pos:line="153" pos:column="135">errno<pos:position pos:line="153" pos:column="140"/></name></expr></argument>)<pos:position pos:line="153" pos:column="141"/></argument_list></call></expr></argument>)<pos:position pos:line="153" pos:column="142"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="143"/></expr_stmt>
                <goto pos:line="154" pos:column="17">goto <name pos:line="154" pos:column="22">finalise<pos:position pos:line="154" pos:column="30"/></name>;<pos:position pos:line="154" pos:column="31"/></goto>
            }<pos:position pos:line="155" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="156" pos:column="13">debug<pos:position pos:line="156" pos:column="18"/></name><argument_list pos:line="156" pos:column="18">(<argument><expr><operator pos:line="156" pos:column="19">(<pos:position pos:line="156" pos:column="20"/></operator><name pos:line="156" pos:column="20">char<pos:position pos:line="156" pos:column="24"/></name> <operator pos:line="156" pos:column="25">*<pos:position pos:line="156" pos:column="26"/></operator><operator pos:line="156" pos:column="26">)<pos:position pos:line="156" pos:column="27"/></operator> <literal type="string" pos:line="156" pos:column="28">"%s| %s: DEBUG: Resolved SRV %s record to %s\n"<pos:position pos:line="156" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="156" pos:column="77">LogTime<pos:position pos:line="156" pos:column="84"/></name><argument_list pos:line="156" pos:column="84">()<pos:position pos:line="156" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="156" pos:column="88">PROGRAM<pos:position pos:line="156" pos:column="95"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="97">service<pos:position pos:line="156" pos:column="104"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="106">host<pos:position pos:line="156" pos:column="110"/></name></expr></argument>)<pos:position pos:line="156" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="112"/></expr_stmt>
            <expr_stmt><expr><name pos:line="157" pos:column="13">hp<pos:position pos:line="157" pos:column="15"/></name> <operator pos:line="157" pos:column="16">=<pos:position pos:line="157" pos:column="17"/></operator> <operator pos:line="157" pos:column="18">(<pos:position pos:line="157" pos:column="19"/></operator>struct <name pos:line="157" pos:column="26">hstruct<pos:position pos:line="157" pos:column="33"/></name> <operator pos:line="157" pos:column="34">*<pos:position pos:line="157" pos:column="35"/></operator><operator pos:line="157" pos:column="35">)<pos:position pos:line="157" pos:column="36"/></operator> <call><name pos:line="157" pos:column="37">xrealloc<pos:position pos:line="157" pos:column="45"/></name><argument_list pos:line="157" pos:column="45">(<argument><expr><name pos:line="157" pos:column="46">hp<pos:position pos:line="157" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="157" pos:column="50">sizeof<argument_list pos:line="157" pos:column="56">(<argument><expr pos:line="157" pos:column="57">struct <name pos:line="157" pos:column="64">hstruct<pos:position pos:line="157" pos:column="71"/></name></expr></argument>)<pos:position pos:line="157" pos:column="72"/></argument_list></sizeof> <operator pos:line="157" pos:column="73">*<pos:position pos:line="157" pos:column="74"/></operator> <operator pos:line="157" pos:column="75">(<pos:position pos:line="157" pos:column="76"/></operator><name pos:line="157" pos:column="76">nh<pos:position pos:line="157" pos:column="78"/></name> <operator pos:line="157" pos:column="79">+<pos:position pos:line="157" pos:column="80"/></operator> <literal type="number" pos:line="157" pos:column="81">1<pos:position pos:line="157" pos:column="82"/></literal><operator pos:line="157" pos:column="82">)<pos:position pos:line="157" pos:column="83"/></operator></expr></argument>)<pos:position pos:line="157" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="158" pos:column="13">hp<pos:position pos:line="158" pos:column="15"/></name><index pos:line="158" pos:column="15">[<expr><name pos:line="158" pos:column="16">nh<pos:position pos:line="158" pos:column="18"/></name></expr>]<pos:position pos:line="158" pos:column="19"/></index></name><operator pos:line="158" pos:column="19">.<pos:position pos:line="158" pos:column="20"/></operator><name pos:line="158" pos:column="20">host<pos:position pos:line="158" pos:column="24"/></name> <operator pos:line="158" pos:column="25">=<pos:position pos:line="158" pos:column="26"/></operator> <call><name pos:line="158" pos:column="27">xstrdup<pos:position pos:line="158" pos:column="34"/></name><argument_list pos:line="158" pos:column="34">(<argument><expr><name pos:line="158" pos:column="35">host<pos:position pos:line="158" pos:column="39"/></name></expr></argument>)<pos:position pos:line="158" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="159" pos:column="13">hp<pos:position pos:line="159" pos:column="15"/></name><index pos:line="159" pos:column="15">[<expr><name pos:line="159" pos:column="16">nh<pos:position pos:line="159" pos:column="18"/></name></expr>]<pos:position pos:line="159" pos:column="19"/></index></name><operator pos:line="159" pos:column="19">.<pos:position pos:line="159" pos:column="20"/></operator><name pos:line="159" pos:column="20">port<pos:position pos:line="159" pos:column="24"/></name> <operator pos:line="159" pos:column="25">=<pos:position pos:line="159" pos:column="26"/></operator> <name pos:line="159" pos:column="27">port<pos:position pos:line="159" pos:column="31"/></name></expr>;<pos:position pos:line="159" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="160" pos:column="13">hp<pos:position pos:line="160" pos:column="15"/></name><index pos:line="160" pos:column="15">[<expr><name pos:line="160" pos:column="16">nh<pos:position pos:line="160" pos:column="18"/></name></expr>]<pos:position pos:line="160" pos:column="19"/></index></name><operator pos:line="160" pos:column="19">.<pos:position pos:line="160" pos:column="20"/></operator><name pos:line="160" pos:column="20">priority<pos:position pos:line="160" pos:column="28"/></name> <operator pos:line="160" pos:column="29">=<pos:position pos:line="160" pos:column="30"/></operator> <name pos:line="160" pos:column="31">priority<pos:position pos:line="160" pos:column="39"/></name></expr>;<pos:position pos:line="160" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="161" pos:column="13">hp<pos:position pos:line="161" pos:column="15"/></name><index pos:line="161" pos:column="15">[<expr><name pos:line="161" pos:column="16">nh<pos:position pos:line="161" pos:column="18"/></name></expr>]<pos:position pos:line="161" pos:column="19"/></index></name><operator pos:line="161" pos:column="19">.<pos:position pos:line="161" pos:column="20"/></operator><name pos:line="161" pos:column="20">weight<pos:position pos:line="161" pos:column="26"/></name> <operator pos:line="161" pos:column="27">=<pos:position pos:line="161" pos:column="28"/></operator> <name pos:line="161" pos:column="29">weight<pos:position pos:line="161" pos:column="35"/></name></expr>;<pos:position pos:line="161" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="162" pos:column="13">++<pos:position pos:line="162" pos:column="15"/></operator><name pos:line="162" pos:column="15">nh<pos:position pos:line="162" pos:column="17"/></name></expr>;<pos:position pos:line="162" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><name pos:line="163" pos:column="13">p<pos:position pos:line="163" pos:column="14"/></name> <operator pos:line="163" pos:column="15">+=<pos:position pos:line="163" pos:column="17"/></operator> <name pos:line="163" pos:column="18">size<pos:position pos:line="163" pos:column="22"/></name></expr>;<pos:position pos:line="163" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="164" pos:column="10"/></block></then> <else pos:line="164" pos:column="11">else <block pos:line="164" pos:column="16">{
            <expr_stmt><expr><name pos:line="165" pos:column="13">p<pos:position pos:line="165" pos:column="14"/></name> <operator pos:line="165" pos:column="15">+=<pos:position pos:line="165" pos:column="17"/></operator> <name pos:line="165" pos:column="18">rdlength<pos:position pos:line="165" pos:column="26"/></name></expr>;<pos:position pos:line="165" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="166" pos:column="10"/></block></else></if>
        <if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">p<pos:position pos:line="167" pos:column="14"/></name> <operator pos:line="167" pos:column="15">&gt;<pos:position pos:line="167" pos:column="19"/></operator> <name pos:line="167" pos:column="17">buffer<pos:position pos:line="167" pos:column="23"/></name> <operator pos:line="167" pos:column="24">+<pos:position pos:line="167" pos:column="25"/></operator> <name pos:line="167" pos:column="26">len<pos:position pos:line="167" pos:column="29"/></name></expr>)<pos:position pos:line="167" pos:column="30"/></condition><then pos:line="167" pos:column="30"> <block pos:line="167" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="168" pos:column="13">error<pos:position pos:line="168" pos:column="18"/></name><argument_list pos:line="168" pos:column="18">(<argument><expr><operator pos:line="168" pos:column="19">(<pos:position pos:line="168" pos:column="20"/></operator><name pos:line="168" pos:column="20">char<pos:position pos:line="168" pos:column="24"/></name> <operator pos:line="168" pos:column="25">*<pos:position pos:line="168" pos:column="26"/></operator><operator pos:line="168" pos:column="26">)<pos:position pos:line="168" pos:column="27"/></operator> <literal type="string" pos:line="168" pos:column="28">"%s| %s: ERROR: Message to small: %d &lt;  SRV RR + priority + weight + port + name\n"<pos:position pos:line="168" pos:column="114"/></literal></expr></argument>, <argument><expr><call><name pos:line="168" pos:column="113">LogTime<pos:position pos:line="168" pos:column="120"/></name><argument_list pos:line="168" pos:column="120">()<pos:position pos:line="168" pos:column="122"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="168" pos:column="124">PROGRAM<pos:position pos:line="168" pos:column="131"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="133">len<pos:position pos:line="168" pos:column="136"/></name></expr></argument>)<pos:position pos:line="168" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="138"/></expr_stmt>
            <goto pos:line="169" pos:column="13">goto <name pos:line="169" pos:column="18">finalise<pos:position pos:line="169" pos:column="26"/></name>;<pos:position pos:line="169" pos:column="27"/></goto>
        }<pos:position pos:line="170" pos:column="10"/></block></then></if>
    }<pos:position pos:line="171" pos:column="6"/></block></while>
    <if pos:line="172" pos:column="5">if <condition pos:line="172" pos:column="8">(<expr><name pos:line="172" pos:column="9">p<pos:position pos:line="172" pos:column="10"/></name> <operator pos:line="172" pos:column="11">!=<pos:position pos:line="172" pos:column="13"/></operator> <name pos:line="172" pos:column="14">buffer<pos:position pos:line="172" pos:column="20"/></name> <operator pos:line="172" pos:column="21">+<pos:position pos:line="172" pos:column="22"/></operator> <name pos:line="172" pos:column="23">len<pos:position pos:line="172" pos:column="26"/></name></expr>)<pos:position pos:line="172" pos:column="27"/></condition><then pos:line="172" pos:column="27"> <block pos:line="172" pos:column="28">{
<cpp:if pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">if<pos:position pos:line="173" pos:column="4"/></cpp:directive> <expr><operator pos:line="173" pos:column="5">(<pos:position pos:line="173" pos:column="6"/></operator><name pos:line="173" pos:column="6">SIZEOF_LONG<pos:position pos:line="173" pos:column="17"/></name> <operator pos:line="173" pos:column="18">==<pos:position pos:line="173" pos:column="20"/></operator> <literal type="number" pos:line="173" pos:column="21">8<pos:position pos:line="173" pos:column="22"/></literal><operator pos:line="173" pos:column="22">)<pos:position pos:line="173" pos:column="23"/></operator></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="174" pos:column="9">error<pos:position pos:line="174" pos:column="14"/></name><argument_list pos:line="174" pos:column="14">(<argument><expr><literal type="string" pos:line="174" pos:column="15">"%s| %s: ERROR: Inconsistence message length: %ld!=0\n"<pos:position pos:line="174" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="174" pos:column="72">LogTime<pos:position pos:line="174" pos:column="79"/></name><argument_list pos:line="174" pos:column="79">()<pos:position pos:line="174" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="174" pos:column="83">PROGRAM<pos:position pos:line="174" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="92">buffer<pos:position pos:line="174" pos:column="98"/></name> <operator pos:line="174" pos:column="99">+<pos:position pos:line="174" pos:column="100"/></operator> <name pos:line="174" pos:column="101">len<pos:position pos:line="174" pos:column="104"/></name> <operator pos:line="174" pos:column="105">-<pos:position pos:line="174" pos:column="106"/></operator> <name pos:line="174" pos:column="107">p<pos:position pos:line="174" pos:column="108"/></name></expr></argument>)<pos:position pos:line="174" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="110"/></expr_stmt>
<cpp:else pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">else<pos:position pos:line="175" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">error<pos:position pos:line="176" pos:column="14"/></name><argument_list pos:line="176" pos:column="14">(<argument><expr><operator pos:line="176" pos:column="15">(<pos:position pos:line="176" pos:column="16"/></operator><name pos:line="176" pos:column="16">char<pos:position pos:line="176" pos:column="20"/></name> <operator pos:line="176" pos:column="21">*<pos:position pos:line="176" pos:column="22"/></operator><operator pos:line="176" pos:column="22">)<pos:position pos:line="176" pos:column="23"/></operator> <literal type="string" pos:line="176" pos:column="24">"%s| %s: ERROR: Inconsistence message length: %d!=0\n"<pos:position pos:line="176" pos:column="78"/></literal></expr></argument>, <argument><expr><call><name pos:line="176" pos:column="80">LogTime<pos:position pos:line="176" pos:column="87"/></name><argument_list pos:line="176" pos:column="87">()<pos:position pos:line="176" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="176" pos:column="91">PROGRAM<pos:position pos:line="176" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="100">buffer<pos:position pos:line="176" pos:column="106"/></name> <operator pos:line="176" pos:column="107">+<pos:position pos:line="176" pos:column="108"/></operator> <name pos:line="176" pos:column="109">len<pos:position pos:line="176" pos:column="112"/></name> <operator pos:line="176" pos:column="113">-<pos:position pos:line="176" pos:column="114"/></operator> <name pos:line="176" pos:column="115">p<pos:position pos:line="176" pos:column="116"/></name></expr></argument>)<pos:position pos:line="176" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="118"/></expr_stmt>
<cpp:endif pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">endif<pos:position pos:line="177" pos:column="7"/></cpp:directive></cpp:endif>
        <goto pos:line="178" pos:column="9">goto <name pos:line="178" pos:column="14">finalise<pos:position pos:line="178" pos:column="22"/></name>;<pos:position pos:line="178" pos:column="23"/></goto>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if>

<label><name pos:line="181" pos:column="1">finalise<pos:position pos:line="181" pos:column="9"/></name>:<pos:position pos:line="181" pos:column="10"/></label>
    <expr_stmt><expr><name pos:line="182" pos:column="5">nhosts<pos:position pos:line="182" pos:column="11"/></name> <operator pos:line="182" pos:column="12">=<pos:position pos:line="182" pos:column="13"/></operator> <call><name pos:line="182" pos:column="14">get_hostname_list<pos:position pos:line="182" pos:column="31"/></name><argument_list pos:line="182" pos:column="31">(<argument><expr><name pos:line="182" pos:column="32">margs<pos:position pos:line="182" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="182" pos:column="39">&amp;<pos:position pos:line="182" pos:column="44"/></operator><name pos:line="182" pos:column="40">hp<pos:position pos:line="182" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="44">nh<pos:position pos:line="182" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="48">domain<pos:position pos:line="182" pos:column="54"/></name></expr></argument>)<pos:position pos:line="182" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="184" pos:column="5">debug<pos:position pos:line="184" pos:column="10"/></name><argument_list pos:line="184" pos:column="10">(<argument><expr><literal type="string" pos:line="184" pos:column="11">"%s| %s: DEBUG: Adding %s to list\n"<pos:position pos:line="184" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="184" pos:column="49">LogTime<pos:position pos:line="184" pos:column="56"/></name><argument_list pos:line="184" pos:column="56">()<pos:position pos:line="184" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="184" pos:column="60">PROGRAM<pos:position pos:line="184" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="69">domain<pos:position pos:line="184" pos:column="75"/></name></expr></argument>)<pos:position pos:line="184" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="77"/></expr_stmt>

    <expr_stmt><expr><name pos:line="186" pos:column="5">hp<pos:position pos:line="186" pos:column="7"/></name> <operator pos:line="186" pos:column="8">=<pos:position pos:line="186" pos:column="9"/></operator> <operator pos:line="186" pos:column="10">(<pos:position pos:line="186" pos:column="11"/></operator>struct <name pos:line="186" pos:column="18">hstruct<pos:position pos:line="186" pos:column="25"/></name> <operator pos:line="186" pos:column="26">*<pos:position pos:line="186" pos:column="27"/></operator><operator pos:line="186" pos:column="27">)<pos:position pos:line="186" pos:column="28"/></operator> <call><name pos:line="186" pos:column="29">xrealloc<pos:position pos:line="186" pos:column="37"/></name><argument_list pos:line="186" pos:column="37">(<argument><expr><name pos:line="186" pos:column="38">hp<pos:position pos:line="186" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="186" pos:column="42">sizeof<argument_list pos:line="186" pos:column="48">(<argument><expr pos:line="186" pos:column="49">struct <name pos:line="186" pos:column="56">hstruct<pos:position pos:line="186" pos:column="63"/></name></expr></argument>)<pos:position pos:line="186" pos:column="64"/></argument_list></sizeof> <operator pos:line="186" pos:column="65">*<pos:position pos:line="186" pos:column="66"/></operator> <operator pos:line="186" pos:column="67">(<pos:position pos:line="186" pos:column="68"/></operator><name pos:line="186" pos:column="68">nhosts<pos:position pos:line="186" pos:column="74"/></name> <operator pos:line="186" pos:column="75">+<pos:position pos:line="186" pos:column="76"/></operator> <literal type="number" pos:line="186" pos:column="77">1<pos:position pos:line="186" pos:column="78"/></literal><operator pos:line="186" pos:column="78">)<pos:position pos:line="186" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="186" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="187" pos:column="5">hp<pos:position pos:line="187" pos:column="7"/></name><index pos:line="187" pos:column="7">[<expr><name pos:line="187" pos:column="8">nhosts<pos:position pos:line="187" pos:column="14"/></name></expr>]<pos:position pos:line="187" pos:column="15"/></index></name><operator pos:line="187" pos:column="15">.<pos:position pos:line="187" pos:column="16"/></operator><name pos:line="187" pos:column="16">host<pos:position pos:line="187" pos:column="20"/></name> <operator pos:line="187" pos:column="21">=<pos:position pos:line="187" pos:column="22"/></operator> <call><name pos:line="187" pos:column="23">strdup<pos:position pos:line="187" pos:column="29"/></name><argument_list pos:line="187" pos:column="29">(<argument><expr><name pos:line="187" pos:column="30">domain<pos:position pos:line="187" pos:column="36"/></name></expr></argument>)<pos:position pos:line="187" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="188" pos:column="5">hp<pos:position pos:line="188" pos:column="7"/></name><index pos:line="188" pos:column="7">[<expr><name pos:line="188" pos:column="8">nhosts<pos:position pos:line="188" pos:column="14"/></name></expr>]<pos:position pos:line="188" pos:column="15"/></index></name><operator pos:line="188" pos:column="15">.<pos:position pos:line="188" pos:column="16"/></operator><name pos:line="188" pos:column="16">port<pos:position pos:line="188" pos:column="20"/></name> <operator pos:line="188" pos:column="21">=<pos:position pos:line="188" pos:column="22"/></operator> <operator pos:line="188" pos:column="23">-<pos:position pos:line="188" pos:column="24"/></operator><literal type="number" pos:line="188" pos:column="24">1<pos:position pos:line="188" pos:column="25"/></literal></expr>;<pos:position pos:line="188" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="189" pos:column="5">hp<pos:position pos:line="189" pos:column="7"/></name><index pos:line="189" pos:column="7">[<expr><name pos:line="189" pos:column="8">nhosts<pos:position pos:line="189" pos:column="14"/></name></expr>]<pos:position pos:line="189" pos:column="15"/></index></name><operator pos:line="189" pos:column="15">.<pos:position pos:line="189" pos:column="16"/></operator><name pos:line="189" pos:column="16">priority<pos:position pos:line="189" pos:column="24"/></name> <operator pos:line="189" pos:column="25">=<pos:position pos:line="189" pos:column="26"/></operator> <operator pos:line="189" pos:column="27">-<pos:position pos:line="189" pos:column="28"/></operator><literal type="number" pos:line="189" pos:column="28">2<pos:position pos:line="189" pos:column="29"/></literal></expr>;<pos:position pos:line="189" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="190" pos:column="5">hp<pos:position pos:line="190" pos:column="7"/></name><index pos:line="190" pos:column="7">[<expr><name pos:line="190" pos:column="8">nhosts<pos:position pos:line="190" pos:column="14"/></name></expr>]<pos:position pos:line="190" pos:column="15"/></index></name><operator pos:line="190" pos:column="15">.<pos:position pos:line="190" pos:column="16"/></operator><name pos:line="190" pos:column="16">weight<pos:position pos:line="190" pos:column="22"/></name> <operator pos:line="190" pos:column="23">=<pos:position pos:line="190" pos:column="24"/></operator> <operator pos:line="190" pos:column="25">-<pos:position pos:line="190" pos:column="26"/></operator><literal type="number" pos:line="190" pos:column="26">2<pos:position pos:line="190" pos:column="27"/></literal></expr>;<pos:position pos:line="190" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="191" pos:column="5">++<pos:position pos:line="191" pos:column="7"/></operator><name pos:line="191" pos:column="7">nhosts<pos:position pos:line="191" pos:column="13"/></name></expr>;<pos:position pos:line="191" pos:column="14"/></expr_stmt>

<label><name pos:line="193" pos:column="1">cleanup<pos:position pos:line="193" pos:column="8"/></name>:<pos:position pos:line="193" pos:column="9"/></label>
    <comment type="block" pos:line="194" pos:column="5">/* Remove duplicates */</comment>
    <for pos:line="195" pos:column="5">for <control pos:line="195" pos:column="9">(<init><expr><name pos:line="195" pos:column="10">i<pos:position pos:line="195" pos:column="11"/></name> <operator pos:line="195" pos:column="12">=<pos:position pos:line="195" pos:column="13"/></operator> <literal type="number" pos:line="195" pos:column="14">0<pos:position pos:line="195" pos:column="15"/></literal></expr>;<pos:position pos:line="195" pos:column="16"/></init> <condition><expr><name pos:line="195" pos:column="17">i<pos:position pos:line="195" pos:column="18"/></name> <operator pos:line="195" pos:column="19">&lt;<pos:position pos:line="195" pos:column="23"/></operator> <name pos:line="195" pos:column="21">nhosts<pos:position pos:line="195" pos:column="27"/></name></expr>;<pos:position pos:line="195" pos:column="28"/></condition> <incr><expr><operator pos:line="195" pos:column="29">++<pos:position pos:line="195" pos:column="31"/></operator><name pos:line="195" pos:column="31">i<pos:position pos:line="195" pos:column="32"/></name></expr></incr>)<pos:position pos:line="195" pos:column="33"/></control> <block pos:line="195" pos:column="34">{
        <for pos:line="196" pos:column="9">for <control pos:line="196" pos:column="13">(<init><expr><name pos:line="196" pos:column="14">j<pos:position pos:line="196" pos:column="15"/></name> <operator pos:line="196" pos:column="16">=<pos:position pos:line="196" pos:column="17"/></operator> <name pos:line="196" pos:column="18">i<pos:position pos:line="196" pos:column="19"/></name> <operator pos:line="196" pos:column="20">+<pos:position pos:line="196" pos:column="21"/></operator> <literal type="number" pos:line="196" pos:column="22">1<pos:position pos:line="196" pos:column="23"/></literal></expr>;<pos:position pos:line="196" pos:column="24"/></init> <condition><expr><name pos:line="196" pos:column="25">j<pos:position pos:line="196" pos:column="26"/></name> <operator pos:line="196" pos:column="27">&lt;<pos:position pos:line="196" pos:column="31"/></operator> <name pos:line="196" pos:column="29">nhosts<pos:position pos:line="196" pos:column="35"/></name></expr>;<pos:position pos:line="196" pos:column="36"/></condition> <incr><expr><operator pos:line="196" pos:column="37">++<pos:position pos:line="196" pos:column="39"/></operator><name pos:line="196" pos:column="39">j<pos:position pos:line="196" pos:column="40"/></name></expr></incr>)<pos:position pos:line="196" pos:column="41"/></control> <block pos:line="196" pos:column="42">{
            <if pos:line="197" pos:column="13">if <condition pos:line="197" pos:column="16">(<expr><operator pos:line="197" pos:column="17">!<pos:position pos:line="197" pos:column="18"/></operator><call><name pos:line="197" pos:column="18">strcasecmp<pos:position pos:line="197" pos:column="28"/></name><argument_list pos:line="197" pos:column="28">(<argument><expr><name><name pos:line="197" pos:column="29">hp<pos:position pos:line="197" pos:column="31"/></name><index pos:line="197" pos:column="31">[<expr><name pos:line="197" pos:column="32">i<pos:position pos:line="197" pos:column="33"/></name></expr>]<pos:position pos:line="197" pos:column="34"/></index></name><operator pos:line="197" pos:column="34">.<pos:position pos:line="197" pos:column="35"/></operator><name pos:line="197" pos:column="35">host<pos:position pos:line="197" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="41">hp<pos:position pos:line="197" pos:column="43"/></name><index pos:line="197" pos:column="43">[<expr><name pos:line="197" pos:column="44">j<pos:position pos:line="197" pos:column="45"/></name></expr>]<pos:position pos:line="197" pos:column="46"/></index></name><operator pos:line="197" pos:column="46">.<pos:position pos:line="197" pos:column="47"/></operator><name pos:line="197" pos:column="47">host<pos:position pos:line="197" pos:column="51"/></name></expr></argument>)<pos:position pos:line="197" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="53"/></condition><then pos:line="197" pos:column="53"> <block pos:line="197" pos:column="54">{
                <if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><name><name pos:line="198" pos:column="21">hp<pos:position pos:line="198" pos:column="23"/></name><index pos:line="198" pos:column="23">[<expr><name pos:line="198" pos:column="24">i<pos:position pos:line="198" pos:column="25"/></name></expr>]<pos:position pos:line="198" pos:column="26"/></index></name><operator pos:line="198" pos:column="26">.<pos:position pos:line="198" pos:column="27"/></operator><name pos:line="198" pos:column="27">port<pos:position pos:line="198" pos:column="31"/></name> <operator pos:line="198" pos:column="32">==<pos:position pos:line="198" pos:column="34"/></operator> <name><name pos:line="198" pos:column="35">hp<pos:position pos:line="198" pos:column="37"/></name><index pos:line="198" pos:column="37">[<expr><name pos:line="198" pos:column="38">j<pos:position pos:line="198" pos:column="39"/></name></expr>]<pos:position pos:line="198" pos:column="40"/></index></name><operator pos:line="198" pos:column="40">.<pos:position pos:line="198" pos:column="41"/></operator><name pos:line="198" pos:column="41">port<pos:position pos:line="198" pos:column="45"/></name> <operator pos:line="198" pos:column="46">||<pos:position pos:line="198" pos:column="48"/></operator>
                        <operator pos:line="199" pos:column="25">(<pos:position pos:line="199" pos:column="26"/></operator><name><name pos:line="199" pos:column="26">hp<pos:position pos:line="199" pos:column="28"/></name><index pos:line="199" pos:column="28">[<expr><name pos:line="199" pos:column="29">i<pos:position pos:line="199" pos:column="30"/></name></expr>]<pos:position pos:line="199" pos:column="31"/></index></name><operator pos:line="199" pos:column="31">.<pos:position pos:line="199" pos:column="32"/></operator><name pos:line="199" pos:column="32">port<pos:position pos:line="199" pos:column="36"/></name> <operator pos:line="199" pos:column="37">==<pos:position pos:line="199" pos:column="39"/></operator> <operator pos:line="199" pos:column="40">-<pos:position pos:line="199" pos:column="41"/></operator><literal type="number" pos:line="199" pos:column="41">1<pos:position pos:line="199" pos:column="42"/></literal> <operator pos:line="199" pos:column="43">&amp;&amp;<pos:position pos:line="199" pos:column="53"/></operator> <name><name pos:line="199" pos:column="46">hp<pos:position pos:line="199" pos:column="48"/></name><index pos:line="199" pos:column="48">[<expr><name pos:line="199" pos:column="49">j<pos:position pos:line="199" pos:column="50"/></name></expr>]<pos:position pos:line="199" pos:column="51"/></index></name><operator pos:line="199" pos:column="51">.<pos:position pos:line="199" pos:column="52"/></operator><name pos:line="199" pos:column="52">port<pos:position pos:line="199" pos:column="56"/></name> <operator pos:line="199" pos:column="57">==<pos:position pos:line="199" pos:column="59"/></operator> <literal type="number" pos:line="199" pos:column="60">389<pos:position pos:line="199" pos:column="63"/></literal><operator pos:line="199" pos:column="63">)<pos:position pos:line="199" pos:column="64"/></operator> <operator pos:line="199" pos:column="65">||<pos:position pos:line="199" pos:column="67"/></operator>
                        <operator pos:line="200" pos:column="25">(<pos:position pos:line="200" pos:column="26"/></operator><name><name pos:line="200" pos:column="26">hp<pos:position pos:line="200" pos:column="28"/></name><index pos:line="200" pos:column="28">[<expr><name pos:line="200" pos:column="29">i<pos:position pos:line="200" pos:column="30"/></name></expr>]<pos:position pos:line="200" pos:column="31"/></index></name><operator pos:line="200" pos:column="31">.<pos:position pos:line="200" pos:column="32"/></operator><name pos:line="200" pos:column="32">port<pos:position pos:line="200" pos:column="36"/></name> <operator pos:line="200" pos:column="37">==<pos:position pos:line="200" pos:column="39"/></operator> <literal type="number" pos:line="200" pos:column="40">389<pos:position pos:line="200" pos:column="43"/></literal> <operator pos:line="200" pos:column="44">&amp;&amp;<pos:position pos:line="200" pos:column="54"/></operator> <name><name pos:line="200" pos:column="47">hp<pos:position pos:line="200" pos:column="49"/></name><index pos:line="200" pos:column="49">[<expr><name pos:line="200" pos:column="50">j<pos:position pos:line="200" pos:column="51"/></name></expr>]<pos:position pos:line="200" pos:column="52"/></index></name><operator pos:line="200" pos:column="52">.<pos:position pos:line="200" pos:column="53"/></operator><name pos:line="200" pos:column="53">port<pos:position pos:line="200" pos:column="57"/></name> <operator pos:line="200" pos:column="58">==<pos:position pos:line="200" pos:column="60"/></operator> <operator pos:line="200" pos:column="61">-<pos:position pos:line="200" pos:column="62"/></operator><literal type="number" pos:line="200" pos:column="62">1<pos:position pos:line="200" pos:column="63"/></literal><operator pos:line="200" pos:column="63">)<pos:position pos:line="200" pos:column="64"/></operator></expr>)<pos:position pos:line="200" pos:column="65"/></condition><then pos:line="200" pos:column="65"> <block pos:line="200" pos:column="66">{
                    <expr_stmt><expr><call><name pos:line="201" pos:column="21">xfree<pos:position pos:line="201" pos:column="26"/></name><argument_list pos:line="201" pos:column="26">(<argument><expr><name><name pos:line="201" pos:column="27">hp<pos:position pos:line="201" pos:column="29"/></name><index pos:line="201" pos:column="29">[<expr><name pos:line="201" pos:column="30">j<pos:position pos:line="201" pos:column="31"/></name></expr>]<pos:position pos:line="201" pos:column="32"/></index></name><operator pos:line="201" pos:column="32">.<pos:position pos:line="201" pos:column="33"/></operator><name pos:line="201" pos:column="33">host<pos:position pos:line="201" pos:column="37"/></name></expr></argument>)<pos:position pos:line="201" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="39"/></expr_stmt>
                    <for pos:line="202" pos:column="21">for <control pos:line="202" pos:column="25">(<init><expr><name pos:line="202" pos:column="26">k<pos:position pos:line="202" pos:column="27"/></name> <operator pos:line="202" pos:column="28">=<pos:position pos:line="202" pos:column="29"/></operator> <name pos:line="202" pos:column="30">j<pos:position pos:line="202" pos:column="31"/></name> <operator pos:line="202" pos:column="32">+<pos:position pos:line="202" pos:column="33"/></operator> <literal type="number" pos:line="202" pos:column="34">1<pos:position pos:line="202" pos:column="35"/></literal></expr>;<pos:position pos:line="202" pos:column="36"/></init> <condition><expr><name pos:line="202" pos:column="37">k<pos:position pos:line="202" pos:column="38"/></name> <operator pos:line="202" pos:column="39">&lt;<pos:position pos:line="202" pos:column="43"/></operator> <name pos:line="202" pos:column="41">nhosts<pos:position pos:line="202" pos:column="47"/></name></expr>;<pos:position pos:line="202" pos:column="48"/></condition> <incr><expr><operator pos:line="202" pos:column="49">++<pos:position pos:line="202" pos:column="51"/></operator><name pos:line="202" pos:column="51">k<pos:position pos:line="202" pos:column="52"/></name></expr></incr>)<pos:position pos:line="202" pos:column="53"/></control> <block pos:line="202" pos:column="54">{
                        <expr_stmt><expr><name><name pos:line="203" pos:column="25">hp<pos:position pos:line="203" pos:column="27"/></name><index pos:line="203" pos:column="27">[<expr><name pos:line="203" pos:column="28">k<pos:position pos:line="203" pos:column="29"/></name> <operator pos:line="203" pos:column="30">-<pos:position pos:line="203" pos:column="31"/></operator> <literal type="number" pos:line="203" pos:column="32">1<pos:position pos:line="203" pos:column="33"/></literal></expr>]<pos:position pos:line="203" pos:column="34"/></index></name><operator pos:line="203" pos:column="34">.<pos:position pos:line="203" pos:column="35"/></operator><name pos:line="203" pos:column="35">host<pos:position pos:line="203" pos:column="39"/></name> <operator pos:line="203" pos:column="40">=<pos:position pos:line="203" pos:column="41"/></operator> <name><name pos:line="203" pos:column="42">hp<pos:position pos:line="203" pos:column="44"/></name><index pos:line="203" pos:column="44">[<expr><name pos:line="203" pos:column="45">k<pos:position pos:line="203" pos:column="46"/></name></expr>]<pos:position pos:line="203" pos:column="47"/></index></name><operator pos:line="203" pos:column="47">.<pos:position pos:line="203" pos:column="48"/></operator><name pos:line="203" pos:column="48">host<pos:position pos:line="203" pos:column="52"/></name></expr>;<pos:position pos:line="203" pos:column="53"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="204" pos:column="25">hp<pos:position pos:line="204" pos:column="27"/></name><index pos:line="204" pos:column="27">[<expr><name pos:line="204" pos:column="28">k<pos:position pos:line="204" pos:column="29"/></name> <operator pos:line="204" pos:column="30">-<pos:position pos:line="204" pos:column="31"/></operator> <literal type="number" pos:line="204" pos:column="32">1<pos:position pos:line="204" pos:column="33"/></literal></expr>]<pos:position pos:line="204" pos:column="34"/></index></name><operator pos:line="204" pos:column="34">.<pos:position pos:line="204" pos:column="35"/></operator><name pos:line="204" pos:column="35">port<pos:position pos:line="204" pos:column="39"/></name> <operator pos:line="204" pos:column="40">=<pos:position pos:line="204" pos:column="41"/></operator> <name><name pos:line="204" pos:column="42">hp<pos:position pos:line="204" pos:column="44"/></name><index pos:line="204" pos:column="44">[<expr><name pos:line="204" pos:column="45">k<pos:position pos:line="204" pos:column="46"/></name></expr>]<pos:position pos:line="204" pos:column="47"/></index></name><operator pos:line="204" pos:column="47">.<pos:position pos:line="204" pos:column="48"/></operator><name pos:line="204" pos:column="48">port<pos:position pos:line="204" pos:column="52"/></name></expr>;<pos:position pos:line="204" pos:column="53"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="205" pos:column="25">hp<pos:position pos:line="205" pos:column="27"/></name><index pos:line="205" pos:column="27">[<expr><name pos:line="205" pos:column="28">k<pos:position pos:line="205" pos:column="29"/></name> <operator pos:line="205" pos:column="30">-<pos:position pos:line="205" pos:column="31"/></operator> <literal type="number" pos:line="205" pos:column="32">1<pos:position pos:line="205" pos:column="33"/></literal></expr>]<pos:position pos:line="205" pos:column="34"/></index></name><operator pos:line="205" pos:column="34">.<pos:position pos:line="205" pos:column="35"/></operator><name pos:line="205" pos:column="35">priority<pos:position pos:line="205" pos:column="43"/></name> <operator pos:line="205" pos:column="44">=<pos:position pos:line="205" pos:column="45"/></operator> <name><name pos:line="205" pos:column="46">hp<pos:position pos:line="205" pos:column="48"/></name><index pos:line="205" pos:column="48">[<expr><name pos:line="205" pos:column="49">k<pos:position pos:line="205" pos:column="50"/></name></expr>]<pos:position pos:line="205" pos:column="51"/></index></name><operator pos:line="205" pos:column="51">.<pos:position pos:line="205" pos:column="52"/></operator><name pos:line="205" pos:column="52">priority<pos:position pos:line="205" pos:column="60"/></name></expr>;<pos:position pos:line="205" pos:column="61"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="206" pos:column="25">hp<pos:position pos:line="206" pos:column="27"/></name><index pos:line="206" pos:column="27">[<expr><name pos:line="206" pos:column="28">k<pos:position pos:line="206" pos:column="29"/></name> <operator pos:line="206" pos:column="30">-<pos:position pos:line="206" pos:column="31"/></operator> <literal type="number" pos:line="206" pos:column="32">1<pos:position pos:line="206" pos:column="33"/></literal></expr>]<pos:position pos:line="206" pos:column="34"/></index></name><operator pos:line="206" pos:column="34">.<pos:position pos:line="206" pos:column="35"/></operator><name pos:line="206" pos:column="35">weight<pos:position pos:line="206" pos:column="41"/></name> <operator pos:line="206" pos:column="42">=<pos:position pos:line="206" pos:column="43"/></operator> <name><name pos:line="206" pos:column="44">hp<pos:position pos:line="206" pos:column="46"/></name><index pos:line="206" pos:column="46">[<expr><name pos:line="206" pos:column="47">k<pos:position pos:line="206" pos:column="48"/></name></expr>]<pos:position pos:line="206" pos:column="49"/></index></name><operator pos:line="206" pos:column="49">.<pos:position pos:line="206" pos:column="50"/></operator><name pos:line="206" pos:column="50">weight<pos:position pos:line="206" pos:column="56"/></name></expr>;<pos:position pos:line="206" pos:column="57"/></expr_stmt>
                    }<pos:position pos:line="207" pos:column="22"/></block></for>
                    <expr_stmt><expr><operator pos:line="208" pos:column="21">--<pos:position pos:line="208" pos:column="23"/></operator><name pos:line="208" pos:column="23">j<pos:position pos:line="208" pos:column="24"/></name></expr>;<pos:position pos:line="208" pos:column="25"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="209" pos:column="21">--<pos:position pos:line="209" pos:column="23"/></operator><name pos:line="209" pos:column="23">nhosts<pos:position pos:line="209" pos:column="29"/></name></expr>;<pos:position pos:line="209" pos:column="30"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="210" pos:column="21">hp<pos:position pos:line="210" pos:column="23"/></name> <operator pos:line="210" pos:column="24">=<pos:position pos:line="210" pos:column="25"/></operator> <operator pos:line="210" pos:column="26">(<pos:position pos:line="210" pos:column="27"/></operator>struct <name pos:line="210" pos:column="34">hstruct<pos:position pos:line="210" pos:column="41"/></name> <operator pos:line="210" pos:column="42">*<pos:position pos:line="210" pos:column="43"/></operator><operator pos:line="210" pos:column="43">)<pos:position pos:line="210" pos:column="44"/></operator> <call><name pos:line="210" pos:column="45">xrealloc<pos:position pos:line="210" pos:column="53"/></name><argument_list pos:line="210" pos:column="53">(<argument><expr><name pos:line="210" pos:column="54">hp<pos:position pos:line="210" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="210" pos:column="58">sizeof<argument_list pos:line="210" pos:column="64">(<argument><expr pos:line="210" pos:column="65">struct <name pos:line="210" pos:column="72">hstruct<pos:position pos:line="210" pos:column="79"/></name></expr></argument>)<pos:position pos:line="210" pos:column="80"/></argument_list></sizeof> <operator pos:line="210" pos:column="81">*<pos:position pos:line="210" pos:column="82"/></operator> <operator pos:line="210" pos:column="83">(<pos:position pos:line="210" pos:column="84"/></operator><name pos:line="210" pos:column="84">nhosts<pos:position pos:line="210" pos:column="90"/></name> <operator pos:line="210" pos:column="91">+<pos:position pos:line="210" pos:column="92"/></operator> <literal type="number" pos:line="210" pos:column="93">1<pos:position pos:line="210" pos:column="94"/></literal><operator pos:line="210" pos:column="94">)<pos:position pos:line="210" pos:column="95"/></operator></expr></argument>)<pos:position pos:line="210" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="97"/></expr_stmt>
                }<pos:position pos:line="211" pos:column="18"/></block></then></if>
            }<pos:position pos:line="212" pos:column="14"/></block></then></if>
        }<pos:position pos:line="213" pos:column="10"/></block></for>
    }<pos:position pos:line="214" pos:column="6"/></block></for>

    <comment type="block" pos:line="216" pos:column="5">/* Sort by Priority / Weight */</comment>
    <expr_stmt><expr><call><name pos:line="217" pos:column="5">msort<pos:position pos:line="217" pos:column="10"/></name><argument_list pos:line="217" pos:column="10">(<argument><expr><name pos:line="217" pos:column="11">hp<pos:position pos:line="217" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="15">nhosts<pos:position pos:line="217" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="23">compare_hosts<pos:position pos:line="217" pos:column="36"/></name></expr></argument>)<pos:position pos:line="217" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="38"/></expr_stmt>

    <if pos:line="219" pos:column="5">if <condition pos:line="219" pos:column="8">(<expr><name pos:line="219" pos:column="9">debug_enabled<pos:position pos:line="219" pos:column="22"/></name></expr>)<pos:position pos:line="219" pos:column="23"/></condition><then pos:line="219" pos:column="23"> <block pos:line="219" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="220" pos:column="9">debug<pos:position pos:line="220" pos:column="14"/></name><argument_list pos:line="220" pos:column="14">(<argument><expr><operator pos:line="220" pos:column="15">(<pos:position pos:line="220" pos:column="16"/></operator><name pos:line="220" pos:column="16">char<pos:position pos:line="220" pos:column="20"/></name> <operator pos:line="220" pos:column="21">*<pos:position pos:line="220" pos:column="22"/></operator><operator pos:line="220" pos:column="22">)<pos:position pos:line="220" pos:column="23"/></operator> <literal type="string" pos:line="220" pos:column="24">"%s| %s: DEBUG: Sorted ldap server names for domain %s:\n"<pos:position pos:line="220" pos:column="82"/></literal></expr></argument>, <argument><expr><call><name pos:line="220" pos:column="84">LogTime<pos:position pos:line="220" pos:column="91"/></name><argument_list pos:line="220" pos:column="91">()<pos:position pos:line="220" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="220" pos:column="95">PROGRAM<pos:position pos:line="220" pos:column="102"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="104">domain<pos:position pos:line="220" pos:column="110"/></name></expr></argument>)<pos:position pos:line="220" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="112"/></expr_stmt>
        <for pos:line="221" pos:column="9">for <control pos:line="221" pos:column="13">(<init><expr><name pos:line="221" pos:column="14">i<pos:position pos:line="221" pos:column="15"/></name> <operator pos:line="221" pos:column="16">=<pos:position pos:line="221" pos:column="17"/></operator> <literal type="number" pos:line="221" pos:column="18">0<pos:position pos:line="221" pos:column="19"/></literal></expr>;<pos:position pos:line="221" pos:column="20"/></init> <condition><expr><name pos:line="221" pos:column="21">i<pos:position pos:line="221" pos:column="22"/></name> <operator pos:line="221" pos:column="23">&lt;<pos:position pos:line="221" pos:column="27"/></operator> <name pos:line="221" pos:column="25">nhosts<pos:position pos:line="221" pos:column="31"/></name></expr>;<pos:position pos:line="221" pos:column="32"/></condition> <incr><expr><operator pos:line="221" pos:column="33">++<pos:position pos:line="221" pos:column="35"/></operator><name pos:line="221" pos:column="35">i<pos:position pos:line="221" pos:column="36"/></name></expr></incr>)<pos:position pos:line="221" pos:column="37"/></control> <block pos:line="221" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="222" pos:column="13">debug<pos:position pos:line="222" pos:column="18"/></name><argument_list pos:line="222" pos:column="18">(<argument><expr><operator pos:line="222" pos:column="19">(<pos:position pos:line="222" pos:column="20"/></operator><name pos:line="222" pos:column="20">char<pos:position pos:line="222" pos:column="24"/></name> <operator pos:line="222" pos:column="25">*<pos:position pos:line="222" pos:column="26"/></operator><operator pos:line="222" pos:column="26">)<pos:position pos:line="222" pos:column="27"/></operator> <literal type="string" pos:line="222" pos:column="28">"%s| %s: DEBUG: Host: %s Port: %d Priority: %d Weight: %d\n"<pos:position pos:line="222" pos:column="88"/></literal></expr></argument>, <argument><expr><call><name pos:line="222" pos:column="90">LogTime<pos:position pos:line="222" pos:column="97"/></name><argument_list pos:line="222" pos:column="97">()<pos:position pos:line="222" pos:column="99"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="222" pos:column="101">PROGRAM<pos:position pos:line="222" pos:column="108"/></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="110">hp<pos:position pos:line="222" pos:column="112"/></name><index pos:line="222" pos:column="112">[<expr><name pos:line="222" pos:column="113">i<pos:position pos:line="222" pos:column="114"/></name></expr>]<pos:position pos:line="222" pos:column="115"/></index></name><operator pos:line="222" pos:column="115">.<pos:position pos:line="222" pos:column="116"/></operator><name pos:line="222" pos:column="116">host<pos:position pos:line="222" pos:column="120"/></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="122">hp<pos:position pos:line="222" pos:column="124"/></name><index pos:line="222" pos:column="124">[<expr><name pos:line="222" pos:column="125">i<pos:position pos:line="222" pos:column="126"/></name></expr>]<pos:position pos:line="222" pos:column="127"/></index></name><operator pos:line="222" pos:column="127">.<pos:position pos:line="222" pos:column="128"/></operator><name pos:line="222" pos:column="128">port<pos:position pos:line="222" pos:column="132"/></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="134">hp<pos:position pos:line="222" pos:column="136"/></name><index pos:line="222" pos:column="136">[<expr><name pos:line="222" pos:column="137">i<pos:position pos:line="222" pos:column="138"/></name></expr>]<pos:position pos:line="222" pos:column="139"/></index></name><operator pos:line="222" pos:column="139">.<pos:position pos:line="222" pos:column="140"/></operator><name pos:line="222" pos:column="140">priority<pos:position pos:line="222" pos:column="148"/></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="150">hp<pos:position pos:line="222" pos:column="152"/></name><index pos:line="222" pos:column="152">[<expr><name pos:line="222" pos:column="153">i<pos:position pos:line="222" pos:column="154"/></name></expr>]<pos:position pos:line="222" pos:column="155"/></index></name><operator pos:line="222" pos:column="155">.<pos:position pos:line="222" pos:column="156"/></operator><name pos:line="222" pos:column="156">weight<pos:position pos:line="222" pos:column="162"/></name></expr></argument>)<pos:position pos:line="222" pos:column="163"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="164"/></expr_stmt>
        }<pos:position pos:line="223" pos:column="10"/></block></for>
    }<pos:position pos:line="224" pos:column="6"/></block></then></if>
    <if pos:line="225" pos:column="5">if <condition pos:line="225" pos:column="8">(<expr><name pos:line="225" pos:column="9">buffer<pos:position pos:line="225" pos:column="15"/></name></expr>)<pos:position pos:line="225" pos:column="16"/></condition><then pos:line="225" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="226" pos:column="9">xfree<pos:position pos:line="226" pos:column="14"/></name><argument_list pos:line="226" pos:column="14">(<argument><expr><name pos:line="226" pos:column="15">buffer<pos:position pos:line="226" pos:column="21"/></name></expr></argument>)<pos:position pos:line="226" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="23"/></expr_stmt></block></then></if>
    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><name pos:line="227" pos:column="9">service<pos:position pos:line="227" pos:column="16"/></name></expr>)<pos:position pos:line="227" pos:column="17"/></condition><then pos:line="227" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="228" pos:column="9">xfree<pos:position pos:line="228" pos:column="14"/></name><argument_list pos:line="228" pos:column="14">(<argument><expr><name pos:line="228" pos:column="15">service<pos:position pos:line="228" pos:column="22"/></name></expr></argument>)<pos:position pos:line="228" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="24"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="229" pos:column="5">*<pos:position pos:line="229" pos:column="6"/></operator><name pos:line="229" pos:column="6">hlist<pos:position pos:line="229" pos:column="11"/></name> <operator pos:line="229" pos:column="12">=<pos:position pos:line="229" pos:column="13"/></operator> <name pos:line="229" pos:column="14">hp<pos:position pos:line="229" pos:column="16"/></name></expr>;<pos:position pos:line="229" pos:column="17"/></expr_stmt>
    <return pos:line="230" pos:column="5">return <expr><operator pos:line="230" pos:column="12">(<pos:position pos:line="230" pos:column="13"/></operator><name pos:line="230" pos:column="13">nhosts<pos:position pos:line="230" pos:column="19"/></name><operator pos:line="230" pos:column="19">)<pos:position pos:line="230" pos:column="20"/></operator></expr>;<pos:position pos:line="230" pos:column="21"/></return>
}<pos:position pos:line="231" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2371_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreMetaUnpacker<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">getLength<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">xmemcpy<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><operator pos:line="4" pos:column="13">&amp;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="14">length<pos:position pos:line="4" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="22">&amp;<pos:position pos:line="4" pos:column="27"/></operator><name><name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name><index pos:line="4" pos:column="26">[<expr><name pos:line="4" pos:column="27">position<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="38">sizeof<argument_list pos:line="4" pos:column="44">(<argument><expr><name pos:line="4" pos:column="45">int<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">position<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">+=<pos:position pos:line="5" pos:column="16"/></operator> <sizeof pos:line="5" pos:column="17">sizeof<argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">int<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></sizeof></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

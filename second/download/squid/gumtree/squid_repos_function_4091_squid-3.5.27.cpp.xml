<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4091_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">noteAbContentDone<pos:position pos:line="2" pos:column="48"/></name></name><parameter_list pos:line="2" pos:column="48">(<parameter><decl><type><name pos:line="2" pos:column="49">bool<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">atEnd<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">proxyingAb<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">==<pos:position pos:line="4" pos:column="23"/></operator> <name pos:line="4" pos:column="24">opOn<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">&amp;&amp;<pos:position pos:line="4" pos:column="39"/></operator> <operator pos:line="4" pos:column="32">!<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">abProductionFinished<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">abProductionFinished<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">=<pos:position pos:line="5" pos:column="27"/></operator> <literal type="boolean" pos:line="5" pos:column="28">true<pos:position pos:line="5" pos:column="32"/></literal></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">abProductionAtEnd<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">atEnd<pos:position pos:line="6" pos:column="30"/></name></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt> <comment type="line" pos:line="6" pos:column="32">// store until ready to stop producing ourselves</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">93<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="15">5<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="18">HERE<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="string" pos:line="7" pos:column="26">"adapted body production ended"<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">moveAbContent<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">()<pos:position pos:line="8" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1742_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">makeExternalAclKey<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">ACLFilledChecklist<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">ch<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">external_acl_data<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type> <name pos:line="2" pos:column="65">acl_data<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">MemBuf<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">mb<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">256<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">first<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">wordlist<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">arg<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">external_acl_format<pos:position pos:line="8" pos:column="24"/></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">format<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HttpRequest<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">request<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name><name pos:line="9" pos:column="28">ch<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">request<pos:position pos:line="9" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">HttpReply<pos:position pos:line="10" pos:column="14"/></name> <modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">reply<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><name><name pos:line="10" pos:column="24">ch<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">reply<pos:position pos:line="10" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">mb<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">reset<pos:position pos:line="11" pos:column="13"/></name></name><argument_list pos:line="11" pos:column="13">()<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">format<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name><name pos:line="13" pos:column="19">acl_data<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">def<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">format<pos:position pos:line="13" pos:column="40"/></name></name></expr>;<pos:position pos:line="13" pos:column="41"/></init> <condition><expr><name pos:line="13" pos:column="42">format<pos:position pos:line="13" pos:column="48"/></name></expr>;<pos:position pos:line="13" pos:column="49"/></condition> <incr><expr><name pos:line="13" pos:column="50">format<pos:position pos:line="13" pos:column="56"/></name> <operator pos:line="13" pos:column="57">=<pos:position pos:line="13" pos:column="58"/></operator> <name><name pos:line="13" pos:column="59">format<pos:position pos:line="13" pos:column="65"/></name><operator pos:line="13" pos:column="65">-&gt;<pos:position pos:line="13" pos:column="70"/></operator><name pos:line="13" pos:column="67">next<pos:position pos:line="13" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="72"/></control> <block pos:line="13" pos:column="73">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">str<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">String<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">sb<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>

        <switch pos:line="17" pos:column="9">switch <condition pos:line="17" pos:column="16">(<expr><name><name pos:line="17" pos:column="17">format<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">type<pos:position pos:line="17" pos:column="29"/></name></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition> <block pos:line="17" pos:column="31">{

        <case pos:line="19" pos:column="9">case <expr><name><name pos:line="19" pos:column="14">_external_acl_format<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">::<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">EXT_ACL_LOGIN<pos:position pos:line="19" pos:column="49"/></name></name></expr>:<pos:position pos:line="19" pos:column="50"/></case>
            <comment type="line" pos:line="20" pos:column="13">// if this ACL line was the cause of credentials fetch</comment>
            <comment type="line" pos:line="21" pos:column="13">// they may not already be in the checklist</comment>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name><name pos:line="22" pos:column="17">ch<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">auth_user_request<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">==<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">NULL<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">&amp;&amp;<pos:position pos:line="22" pos:column="57"/></operator> <name><name pos:line="22" pos:column="50">ch<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">-&gt;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="54">request<pos:position pos:line="22" pos:column="61"/></name></name></expr>)<pos:position pos:line="22" pos:column="62"/></condition><then pos:line="22" pos:column="62">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">ch<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">auth_user_request<pos:position pos:line="23" pos:column="38"/></name></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <name><name pos:line="23" pos:column="41">ch<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">request<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">auth_user_request<pos:position pos:line="23" pos:column="71"/></name></name></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt></block></then></if>

            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">ch<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">auth_user_request<pos:position pos:line="25" pos:column="38"/></name></name> <operator pos:line="25" pos:column="39">!=<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="42">NULL<pos:position pos:line="25" pos:column="46"/></name></expr>)<pos:position pos:line="25" pos:column="47"/></condition><then pos:line="25" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">str<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name><name pos:line="26" pos:column="23">ch<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">auth_user_request<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">username<pos:position pos:line="26" pos:column="54"/></name></name><argument_list pos:line="26" pos:column="54">()<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt></block></then></if>
            <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>
<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if<pos:position pos:line="28" pos:column="4"/></cpp:directive> <expr><name pos:line="28" pos:column="5">USE_IDENT<pos:position pos:line="28" pos:column="14"/></name></expr></cpp:if>

        <case pos:line="30" pos:column="9">case <expr><name><name pos:line="30" pos:column="14">_external_acl_format<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">::<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">EXT_ACL_IDENT<pos:position pos:line="30" pos:column="49"/></name></name></expr>:<pos:position pos:line="30" pos:column="50"/></case>
            <expr_stmt><expr><name pos:line="31" pos:column="13">str<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name><name pos:line="31" pos:column="19">ch<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">rfc931<pos:position pos:line="31" pos:column="29"/></name></name></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>

            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">!<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">str<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">||<pos:position pos:line="33" pos:column="24"/></operator> <operator pos:line="33" pos:column="25">!<pos:position pos:line="33" pos:column="26"/></operator><operator pos:line="33" pos:column="26">*<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">str<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <block pos:line="33" pos:column="32">{
                <expr_stmt><expr><call><name><name pos:line="34" pos:column="17">ch<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">changeState<pos:position pos:line="34" pos:column="32"/></name></name><argument_list pos:line="34" pos:column="32">(<argument><expr><call><name><name pos:line="34" pos:column="33">IdentLookup<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">::<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">Instance<pos:position pos:line="34" pos:column="54"/></name></name><argument_list pos:line="34" pos:column="54">()<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
                <return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></return>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>

            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

        <case pos:line="41" pos:column="9">case <expr><name><name pos:line="41" pos:column="14">_external_acl_format<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">::<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">EXT_ACL_SRC<pos:position pos:line="41" pos:column="47"/></name></name></expr>:<pos:position pos:line="41" pos:column="48"/></case>
            <expr_stmt><expr><name pos:line="42" pos:column="13">str<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <call><name><name pos:line="42" pos:column="19">ch<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">src_addr<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">.<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">NtoA<pos:position pos:line="42" pos:column="36"/></name></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">buf<pos:position pos:line="42" pos:column="40"/></name></expr></argument>,<argument><expr><sizeof pos:line="42" pos:column="41">sizeof<argument_list pos:line="42" pos:column="47">(<argument><expr><name pos:line="42" pos:column="48">buf<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
            <break pos:line="43" pos:column="13">break;<pos:position pos:line="43" pos:column="19"/></break>

        <case pos:line="45" pos:column="9">case <expr><name><name pos:line="45" pos:column="14">_external_acl_format<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">::<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="36">EXT_ACL_SRCPORT<pos:position pos:line="45" pos:column="51"/></name></name></expr>:<pos:position pos:line="45" pos:column="52"/></case>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">snprintf<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">buf<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="27">sizeof<argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">buf<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="40">"%d"<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="46" pos:column="46">request<pos:position pos:line="46" pos:column="53"/></name><operator pos:line="46" pos:column="53">-&gt;<pos:position pos:line="46" pos:column="58"/></operator><name pos:line="46" pos:column="55">client_addr<pos:position pos:line="46" pos:column="66"/></name><operator pos:line="46" pos:column="66">.<pos:position pos:line="46" pos:column="67"/></operator><name pos:line="46" pos:column="67">GetPort<pos:position pos:line="46" pos:column="74"/></name></name><argument_list pos:line="46" pos:column="74">()<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><name pos:line="47" pos:column="13">str<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <name pos:line="47" pos:column="19">buf<pos:position pos:line="47" pos:column="22"/></name></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
            <break pos:line="48" pos:column="13">break;<pos:position pos:line="48" pos:column="19"/></break>

        <case pos:line="50" pos:column="9">case <expr><name><name pos:line="50" pos:column="14">_external_acl_format<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">::<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="36">EXT_ACL_MYADDR<pos:position pos:line="50" pos:column="50"/></name></name></expr>:<pos:position pos:line="50" pos:column="51"/></case>
            <expr_stmt><expr><name pos:line="51" pos:column="13">str<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <call><name><name pos:line="51" pos:column="19">request<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">my_addr<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">.<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">NtoA<pos:position pos:line="51" pos:column="40"/></name></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">buf<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="46">sizeof<argument_list pos:line="51" pos:column="52">(<argument><expr><name pos:line="51" pos:column="53">buf<pos:position pos:line="51" pos:column="56"/></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
            <break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break>

        <case pos:line="54" pos:column="9">case <expr><name><name pos:line="54" pos:column="14">_external_acl_format<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">::<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="36">EXT_ACL_MYPORT<pos:position pos:line="54" pos:column="50"/></name></name></expr>:<pos:position pos:line="54" pos:column="51"/></case>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">snprintf<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">buf<pos:position pos:line="55" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="27">sizeof<argument_list pos:line="55" pos:column="33">(<argument><expr><name pos:line="55" pos:column="34">buf<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="40">"%d"<pos:position pos:line="55" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="55" pos:column="46">request<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">-&gt;<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="55">my_addr<pos:position pos:line="55" pos:column="62"/></name><operator pos:line="55" pos:column="62">.<pos:position pos:line="55" pos:column="63"/></operator><name pos:line="55" pos:column="63">GetPort<pos:position pos:line="55" pos:column="70"/></name></name><argument_list pos:line="55" pos:column="70">()<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">str<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <name pos:line="56" pos:column="19">buf<pos:position pos:line="56" pos:column="22"/></name></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
            <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>

        <case pos:line="59" pos:column="9">case <expr><name><name pos:line="59" pos:column="14">_external_acl_format<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">::<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">EXT_ACL_URI<pos:position pos:line="59" pos:column="47"/></name></name></expr>:<pos:position pos:line="59" pos:column="48"/></case>
            <expr_stmt><expr><name pos:line="60" pos:column="13">str<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <call><name pos:line="60" pos:column="19">urlCanonical<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><name pos:line="60" pos:column="32">request<pos:position pos:line="60" pos:column="39"/></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>

        <case pos:line="63" pos:column="9">case <expr><name><name pos:line="63" pos:column="14">_external_acl_format<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">::<pos:position pos:line="63" pos:column="36"/></operator><name pos:line="63" pos:column="36">EXT_ACL_DST<pos:position pos:line="63" pos:column="47"/></name></name></expr>:<pos:position pos:line="63" pos:column="48"/></case>
            <expr_stmt><expr><name pos:line="64" pos:column="13">str<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <call><name><name pos:line="64" pos:column="19">request<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">GetHost<pos:position pos:line="64" pos:column="35"/></name></name><argument_list pos:line="64" pos:column="35">()<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
            <break pos:line="65" pos:column="13">break;<pos:position pos:line="65" pos:column="19"/></break>

        <case pos:line="67" pos:column="9">case <expr><name><name pos:line="67" pos:column="14">_external_acl_format<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">::<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="36">EXT_ACL_PROTO<pos:position pos:line="67" pos:column="49"/></name></name></expr>:<pos:position pos:line="67" pos:column="50"/></case>
            <expr_stmt><expr><name pos:line="68" pos:column="13">str<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <name><name pos:line="68" pos:column="19">ProtocolStr<pos:position pos:line="68" pos:column="30"/></name><index pos:line="68" pos:column="30">[<expr><name><name pos:line="68" pos:column="31">request<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">-&gt;<pos:position pos:line="68" pos:column="43"/></operator><name pos:line="68" pos:column="40">protocol<pos:position pos:line="68" pos:column="48"/></name></name></expr>]<pos:position pos:line="68" pos:column="49"/></index></name></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt>
            <break pos:line="69" pos:column="13">break;<pos:position pos:line="69" pos:column="19"/></break>

        <case pos:line="71" pos:column="9">case <expr><name><name pos:line="71" pos:column="14">_external_acl_format<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">::<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="36">EXT_ACL_PORT<pos:position pos:line="71" pos:column="48"/></name></name></expr>:<pos:position pos:line="71" pos:column="49"/></case>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">snprintf<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">buf<pos:position pos:line="72" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="27">sizeof<argument_list pos:line="72" pos:column="33">(<argument><expr><name pos:line="72" pos:column="34">buf<pos:position pos:line="72" pos:column="37"/></name></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="40">"%d"<pos:position pos:line="72" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="46">request<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">-&gt;<pos:position pos:line="72" pos:column="58"/></operator><name pos:line="72" pos:column="55">port<pos:position pos:line="72" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name pos:line="73" pos:column="13">str<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <name pos:line="73" pos:column="19">buf<pos:position pos:line="73" pos:column="22"/></name></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
            <break pos:line="74" pos:column="13">break;<pos:position pos:line="74" pos:column="19"/></break>

        <case pos:line="76" pos:column="9">case <expr><name><name pos:line="76" pos:column="14">_external_acl_format<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">::<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="36">EXT_ACL_PATH<pos:position pos:line="76" pos:column="48"/></name></name></expr>:<pos:position pos:line="76" pos:column="49"/></case>
            <expr_stmt><expr><name pos:line="77" pos:column="13">str<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <call><name><name pos:line="77" pos:column="19">request<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">-&gt;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="28">urlpath<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">.<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="36">termedBuf<pos:position pos:line="77" pos:column="45"/></name></name><argument_list pos:line="77" pos:column="45">()<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>
            <break pos:line="78" pos:column="13">break;<pos:position pos:line="78" pos:column="19"/></break>

        <case pos:line="80" pos:column="9">case <expr><name><name pos:line="80" pos:column="14">_external_acl_format<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">::<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="36">EXT_ACL_METHOD<pos:position pos:line="80" pos:column="50"/></name></name></expr>:<pos:position pos:line="80" pos:column="51"/></case>
            <expr_stmt><expr><name pos:line="81" pos:column="13">str<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">=<pos:position pos:line="81" pos:column="18"/></operator> <call><name pos:line="81" pos:column="19">RequestMethodStr<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name><name pos:line="81" pos:column="36">request<pos:position pos:line="81" pos:column="43"/></name><operator pos:line="81" pos:column="43">-&gt;<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="45">method<pos:position pos:line="81" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="53"/></expr_stmt>
            <break pos:line="82" pos:column="13">break;<pos:position pos:line="82" pos:column="19"/></break>

        <case pos:line="84" pos:column="9">case <expr><name><name pos:line="84" pos:column="14">_external_acl_format<pos:position pos:line="84" pos:column="34"/></name><operator pos:line="84" pos:column="34">::<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="36">EXT_ACL_HEADER_REQUEST<pos:position pos:line="84" pos:column="58"/></name></name></expr>:<pos:position pos:line="84" pos:column="59"/></case>
            <expr_stmt><expr><name pos:line="85" pos:column="13">sb<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <call><name><name pos:line="85" pos:column="18">request<pos:position pos:line="85" pos:column="25"/></name><operator pos:line="85" pos:column="25">-&gt;<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="27">header<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">.<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="34">getByName<pos:position pos:line="85" pos:column="43"/></name></name><argument_list pos:line="85" pos:column="43">(<argument><expr><name><name pos:line="85" pos:column="44">format<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">-&gt;<pos:position pos:line="85" pos:column="55"/></operator><name pos:line="85" pos:column="52">header<pos:position pos:line="85" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name pos:line="86" pos:column="13">str<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <call><name><name pos:line="86" pos:column="19">sb<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">.<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">termedBuf<pos:position pos:line="86" pos:column="31"/></name></name><argument_list pos:line="86" pos:column="31">()<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
            <break pos:line="87" pos:column="13">break;<pos:position pos:line="87" pos:column="19"/></break>

        <case pos:line="89" pos:column="9">case <expr><name><name pos:line="89" pos:column="14">_external_acl_format<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">::<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="36">EXT_ACL_HEADER_REQUEST_ID<pos:position pos:line="89" pos:column="61"/></name></name></expr>:<pos:position pos:line="89" pos:column="62"/></case>
            <expr_stmt><expr><name pos:line="90" pos:column="13">sb<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <call><name><name pos:line="90" pos:column="18">request<pos:position pos:line="90" pos:column="25"/></name><operator pos:line="90" pos:column="25">-&gt;<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="27">header<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">.<pos:position pos:line="90" pos:column="34"/></operator><name pos:line="90" pos:column="34">getStrOrList<pos:position pos:line="90" pos:column="46"/></name></name><argument_list pos:line="90" pos:column="46">(<argument><expr><name><name pos:line="90" pos:column="47">format<pos:position pos:line="90" pos:column="53"/></name><operator pos:line="90" pos:column="53">-&gt;<pos:position pos:line="90" pos:column="58"/></operator><name pos:line="90" pos:column="55">header_id<pos:position pos:line="90" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name pos:line="91" pos:column="13">str<pos:position pos:line="91" pos:column="16"/></name> <operator pos:line="91" pos:column="17">=<pos:position pos:line="91" pos:column="18"/></operator> <call><name><name pos:line="91" pos:column="19">sb<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">.<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">termedBuf<pos:position pos:line="91" pos:column="31"/></name></name><argument_list pos:line="91" pos:column="31">()<pos:position pos:line="91" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt>
            <break pos:line="92" pos:column="13">break;<pos:position pos:line="92" pos:column="19"/></break>

        <case pos:line="94" pos:column="9">case <expr><name><name pos:line="94" pos:column="14">_external_acl_format<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">::<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">EXT_ACL_HEADER_REQUEST_MEMBER<pos:position pos:line="94" pos:column="65"/></name></name></expr>:<pos:position pos:line="94" pos:column="66"/></case>
            <expr_stmt><expr><name pos:line="95" pos:column="13">sb<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <call><name><name pos:line="95" pos:column="18">request<pos:position pos:line="95" pos:column="25"/></name><operator pos:line="95" pos:column="25">-&gt;<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="27">header<pos:position pos:line="95" pos:column="33"/></name><operator pos:line="95" pos:column="33">.<pos:position pos:line="95" pos:column="34"/></operator><name pos:line="95" pos:column="34">getByNameListMember<pos:position pos:line="95" pos:column="53"/></name></name><argument_list pos:line="95" pos:column="53">(<argument><expr><name><name pos:line="95" pos:column="54">format<pos:position pos:line="95" pos:column="60"/></name><operator pos:line="95" pos:column="60">-&gt;<pos:position pos:line="95" pos:column="65"/></operator><name pos:line="95" pos:column="62">header<pos:position pos:line="95" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="70">format<pos:position pos:line="95" pos:column="76"/></name><operator pos:line="95" pos:column="76">-&gt;<pos:position pos:line="95" pos:column="81"/></operator><name pos:line="95" pos:column="78">member<pos:position pos:line="95" pos:column="84"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="86">format<pos:position pos:line="95" pos:column="92"/></name><operator pos:line="95" pos:column="92">-&gt;<pos:position pos:line="95" pos:column="97"/></operator><name pos:line="95" pos:column="94">separator<pos:position pos:line="95" pos:column="103"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><name pos:line="96" pos:column="13">str<pos:position pos:line="96" pos:column="16"/></name> <operator pos:line="96" pos:column="17">=<pos:position pos:line="96" pos:column="18"/></operator> <call><name><name pos:line="96" pos:column="19">sb<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">.<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="22">termedBuf<pos:position pos:line="96" pos:column="31"/></name></name><argument_list pos:line="96" pos:column="31">()<pos:position pos:line="96" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="34"/></expr_stmt>
            <break pos:line="97" pos:column="13">break;<pos:position pos:line="97" pos:column="19"/></break>

        <case pos:line="99" pos:column="9">case <expr><name><name pos:line="99" pos:column="14">_external_acl_format<pos:position pos:line="99" pos:column="34"/></name><operator pos:line="99" pos:column="34">::<pos:position pos:line="99" pos:column="36"/></operator><name pos:line="99" pos:column="36">EXT_ACL_HEADER_REQUEST_ID_MEMBER<pos:position pos:line="99" pos:column="68"/></name></name></expr>:<pos:position pos:line="99" pos:column="69"/></case>
            <expr_stmt><expr><name pos:line="100" pos:column="13">sb<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <call><name><name pos:line="100" pos:column="18">request<pos:position pos:line="100" pos:column="25"/></name><operator pos:line="100" pos:column="25">-&gt;<pos:position pos:line="100" pos:column="30"/></operator><name pos:line="100" pos:column="27">header<pos:position pos:line="100" pos:column="33"/></name><operator pos:line="100" pos:column="33">.<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="34">getListMember<pos:position pos:line="100" pos:column="47"/></name></name><argument_list pos:line="100" pos:column="47">(<argument><expr><name><name pos:line="100" pos:column="48">format<pos:position pos:line="100" pos:column="54"/></name><operator pos:line="100" pos:column="54">-&gt;<pos:position pos:line="100" pos:column="59"/></operator><name pos:line="100" pos:column="56">header_id<pos:position pos:line="100" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="67">format<pos:position pos:line="100" pos:column="73"/></name><operator pos:line="100" pos:column="73">-&gt;<pos:position pos:line="100" pos:column="78"/></operator><name pos:line="100" pos:column="75">member<pos:position pos:line="100" pos:column="81"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="83">format<pos:position pos:line="100" pos:column="89"/></name><operator pos:line="100" pos:column="89">-&gt;<pos:position pos:line="100" pos:column="94"/></operator><name pos:line="100" pos:column="91">separator<pos:position pos:line="100" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="102"/></expr_stmt>
            <expr_stmt><expr><name pos:line="101" pos:column="13">str<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">=<pos:position pos:line="101" pos:column="18"/></operator> <call><name><name pos:line="101" pos:column="19">sb<pos:position pos:line="101" pos:column="21"/></name><operator pos:line="101" pos:column="21">.<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="22">termedBuf<pos:position pos:line="101" pos:column="31"/></name></name><argument_list pos:line="101" pos:column="31">()<pos:position pos:line="101" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>
            <break pos:line="102" pos:column="13">break;<pos:position pos:line="102" pos:column="19"/></break>

        <case pos:line="104" pos:column="9">case <expr><name><name pos:line="104" pos:column="14">_external_acl_format<pos:position pos:line="104" pos:column="34"/></name><operator pos:line="104" pos:column="34">::<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="36">EXT_ACL_HEADER_REPLY<pos:position pos:line="104" pos:column="56"/></name></name></expr>:<pos:position pos:line="104" pos:column="57"/></case>
            <if pos:line="105" pos:column="13">if <condition pos:line="105" pos:column="16">(<expr><name pos:line="105" pos:column="17">reply<pos:position pos:line="105" pos:column="22"/></name></expr>)<pos:position pos:line="105" pos:column="23"/></condition><then pos:line="105" pos:column="23"> <block pos:line="105" pos:column="24">{
                <expr_stmt><expr><name pos:line="106" pos:column="17">sb<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <call><name><name pos:line="106" pos:column="22">reply<pos:position pos:line="106" pos:column="27"/></name><operator pos:line="106" pos:column="27">-&gt;<pos:position pos:line="106" pos:column="32"/></operator><name pos:line="106" pos:column="29">header<pos:position pos:line="106" pos:column="35"/></name><operator pos:line="106" pos:column="35">.<pos:position pos:line="106" pos:column="36"/></operator><name pos:line="106" pos:column="36">getByName<pos:position pos:line="106" pos:column="45"/></name></name><argument_list pos:line="106" pos:column="45">(<argument><expr><name><name pos:line="106" pos:column="46">format<pos:position pos:line="106" pos:column="52"/></name><operator pos:line="106" pos:column="52">-&gt;<pos:position pos:line="106" pos:column="57"/></operator><name pos:line="106" pos:column="54">header<pos:position pos:line="106" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name pos:line="107" pos:column="17">str<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <call><name><name pos:line="107" pos:column="23">sb<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">.<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="26">termedBuf<pos:position pos:line="107" pos:column="35"/></name></name><argument_list pos:line="107" pos:column="35">()<pos:position pos:line="107" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="108" pos:column="14"/></block></then></if>
            <break pos:line="109" pos:column="13">break;<pos:position pos:line="109" pos:column="19"/></break>

        <case pos:line="111" pos:column="9">case <expr><name><name pos:line="111" pos:column="14">_external_acl_format<pos:position pos:line="111" pos:column="34"/></name><operator pos:line="111" pos:column="34">::<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="36">EXT_ACL_HEADER_REPLY_ID<pos:position pos:line="111" pos:column="59"/></name></name></expr>:<pos:position pos:line="111" pos:column="60"/></case>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><name pos:line="112" pos:column="17">reply<pos:position pos:line="112" pos:column="22"/></name></expr>)<pos:position pos:line="112" pos:column="23"/></condition><then pos:line="112" pos:column="23"> <block pos:line="112" pos:column="24">{
                <expr_stmt><expr><name pos:line="113" pos:column="17">sb<pos:position pos:line="113" pos:column="19"/></name> <operator pos:line="113" pos:column="20">=<pos:position pos:line="113" pos:column="21"/></operator> <call><name><name pos:line="113" pos:column="22">reply<pos:position pos:line="113" pos:column="27"/></name><operator pos:line="113" pos:column="27">-&gt;<pos:position pos:line="113" pos:column="32"/></operator><name pos:line="113" pos:column="29">header<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">.<pos:position pos:line="113" pos:column="36"/></operator><name pos:line="113" pos:column="36">getStrOrList<pos:position pos:line="113" pos:column="48"/></name></name><argument_list pos:line="113" pos:column="48">(<argument><expr><name><name pos:line="113" pos:column="49">format<pos:position pos:line="113" pos:column="55"/></name><operator pos:line="113" pos:column="55">-&gt;<pos:position pos:line="113" pos:column="60"/></operator><name pos:line="113" pos:column="57">header_id<pos:position pos:line="113" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><name pos:line="114" pos:column="17">str<pos:position pos:line="114" pos:column="20"/></name> <operator pos:line="114" pos:column="21">=<pos:position pos:line="114" pos:column="22"/></operator> <call><name><name pos:line="114" pos:column="23">sb<pos:position pos:line="114" pos:column="25"/></name><operator pos:line="114" pos:column="25">.<pos:position pos:line="114" pos:column="26"/></operator><name pos:line="114" pos:column="26">termedBuf<pos:position pos:line="114" pos:column="35"/></name></name><argument_list pos:line="114" pos:column="35">()<pos:position pos:line="114" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="115" pos:column="14"/></block></then></if>
            <break pos:line="116" pos:column="13">break;<pos:position pos:line="116" pos:column="19"/></break>

        <case pos:line="118" pos:column="9">case <expr><name><name pos:line="118" pos:column="14">_external_acl_format<pos:position pos:line="118" pos:column="34"/></name><operator pos:line="118" pos:column="34">::<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="36">EXT_ACL_HEADER_REPLY_MEMBER<pos:position pos:line="118" pos:column="63"/></name></name></expr>:<pos:position pos:line="118" pos:column="64"/></case>
            <if pos:line="119" pos:column="13">if <condition pos:line="119" pos:column="16">(<expr><name pos:line="119" pos:column="17">reply<pos:position pos:line="119" pos:column="22"/></name></expr>)<pos:position pos:line="119" pos:column="23"/></condition><then pos:line="119" pos:column="23"> <block pos:line="119" pos:column="24">{
                <expr_stmt><expr><name pos:line="120" pos:column="17">sb<pos:position pos:line="120" pos:column="19"/></name> <operator pos:line="120" pos:column="20">=<pos:position pos:line="120" pos:column="21"/></operator> <call><name><name pos:line="120" pos:column="22">reply<pos:position pos:line="120" pos:column="27"/></name><operator pos:line="120" pos:column="27">-&gt;<pos:position pos:line="120" pos:column="32"/></operator><name pos:line="120" pos:column="29">header<pos:position pos:line="120" pos:column="35"/></name><operator pos:line="120" pos:column="35">.<pos:position pos:line="120" pos:column="36"/></operator><name pos:line="120" pos:column="36">getByNameListMember<pos:position pos:line="120" pos:column="55"/></name></name><argument_list pos:line="120" pos:column="55">(<argument><expr><name><name pos:line="120" pos:column="56">format<pos:position pos:line="120" pos:column="62"/></name><operator pos:line="120" pos:column="62">-&gt;<pos:position pos:line="120" pos:column="67"/></operator><name pos:line="120" pos:column="64">header<pos:position pos:line="120" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="72">format<pos:position pos:line="120" pos:column="78"/></name><operator pos:line="120" pos:column="78">-&gt;<pos:position pos:line="120" pos:column="83"/></operator><name pos:line="120" pos:column="80">member<pos:position pos:line="120" pos:column="86"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="88">format<pos:position pos:line="120" pos:column="94"/></name><operator pos:line="120" pos:column="94">-&gt;<pos:position pos:line="120" pos:column="99"/></operator><name pos:line="120" pos:column="96">separator<pos:position pos:line="120" pos:column="105"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="107"/></expr_stmt>
                <expr_stmt><expr><name pos:line="121" pos:column="17">str<pos:position pos:line="121" pos:column="20"/></name> <operator pos:line="121" pos:column="21">=<pos:position pos:line="121" pos:column="22"/></operator> <call><name><name pos:line="121" pos:column="23">sb<pos:position pos:line="121" pos:column="25"/></name><operator pos:line="121" pos:column="25">.<pos:position pos:line="121" pos:column="26"/></operator><name pos:line="121" pos:column="26">termedBuf<pos:position pos:line="121" pos:column="35"/></name></name><argument_list pos:line="121" pos:column="35">()<pos:position pos:line="121" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="122" pos:column="14"/></block></then></if>
            <break pos:line="123" pos:column="13">break;<pos:position pos:line="123" pos:column="19"/></break>

        <case pos:line="125" pos:column="9">case <expr><name><name pos:line="125" pos:column="14">_external_acl_format<pos:position pos:line="125" pos:column="34"/></name><operator pos:line="125" pos:column="34">::<pos:position pos:line="125" pos:column="36"/></operator><name pos:line="125" pos:column="36">EXT_ACL_HEADER_REPLY_ID_MEMBER<pos:position pos:line="125" pos:column="66"/></name></name></expr>:<pos:position pos:line="125" pos:column="67"/></case>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><name pos:line="126" pos:column="17">reply<pos:position pos:line="126" pos:column="22"/></name></expr>)<pos:position pos:line="126" pos:column="23"/></condition><then pos:line="126" pos:column="23"> <block pos:line="126" pos:column="24">{
                <expr_stmt><expr><name pos:line="127" pos:column="17">sb<pos:position pos:line="127" pos:column="19"/></name> <operator pos:line="127" pos:column="20">=<pos:position pos:line="127" pos:column="21"/></operator> <call><name><name pos:line="127" pos:column="22">reply<pos:position pos:line="127" pos:column="27"/></name><operator pos:line="127" pos:column="27">-&gt;<pos:position pos:line="127" pos:column="32"/></operator><name pos:line="127" pos:column="29">header<pos:position pos:line="127" pos:column="35"/></name><operator pos:line="127" pos:column="35">.<pos:position pos:line="127" pos:column="36"/></operator><name pos:line="127" pos:column="36">getListMember<pos:position pos:line="127" pos:column="49"/></name></name><argument_list pos:line="127" pos:column="49">(<argument><expr><name><name pos:line="127" pos:column="50">format<pos:position pos:line="127" pos:column="56"/></name><operator pos:line="127" pos:column="56">-&gt;<pos:position pos:line="127" pos:column="61"/></operator><name pos:line="127" pos:column="58">header_id<pos:position pos:line="127" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="69">format<pos:position pos:line="127" pos:column="75"/></name><operator pos:line="127" pos:column="75">-&gt;<pos:position pos:line="127" pos:column="80"/></operator><name pos:line="127" pos:column="77">member<pos:position pos:line="127" pos:column="83"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="85">format<pos:position pos:line="127" pos:column="91"/></name><operator pos:line="127" pos:column="91">-&gt;<pos:position pos:line="127" pos:column="96"/></operator><name pos:line="127" pos:column="93">separator<pos:position pos:line="127" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="104"/></expr_stmt>
                <expr_stmt><expr><name pos:line="128" pos:column="17">str<pos:position pos:line="128" pos:column="20"/></name> <operator pos:line="128" pos:column="21">=<pos:position pos:line="128" pos:column="22"/></operator> <call><name><name pos:line="128" pos:column="23">sb<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">.<pos:position pos:line="128" pos:column="26"/></operator><name pos:line="128" pos:column="26">termedBuf<pos:position pos:line="128" pos:column="35"/></name></name><argument_list pos:line="128" pos:column="35">()<pos:position pos:line="128" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="129" pos:column="14"/></block></then></if>
            <break pos:line="130" pos:column="13">break;<pos:position pos:line="130" pos:column="19"/></break>
<cpp:if pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">if<pos:position pos:line="131" pos:column="4"/></cpp:directive> <expr><name pos:line="131" pos:column="5">USE_SSL<pos:position pos:line="131" pos:column="12"/></name></expr></cpp:if>

        <case pos:line="133" pos:column="9">case <expr><name><name pos:line="133" pos:column="14">_external_acl_format<pos:position pos:line="133" pos:column="34"/></name><operator pos:line="133" pos:column="34">::<pos:position pos:line="133" pos:column="36"/></operator><name pos:line="133" pos:column="36">EXT_ACL_USER_CERT_RAW<pos:position pos:line="133" pos:column="57"/></name></name></expr>:<pos:position pos:line="133" pos:column="58"/></case>

            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><call><name><name pos:line="135" pos:column="17">ch<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">-&gt;<pos:position pos:line="135" pos:column="24"/></operator><name pos:line="135" pos:column="21">conn<pos:position pos:line="135" pos:column="25"/></name></name><argument_list pos:line="135" pos:column="25">()<pos:position pos:line="135" pos:column="27"/></argument_list></call> <operator pos:line="135" pos:column="28">!=<pos:position pos:line="135" pos:column="30"/></operator> <name pos:line="135" pos:column="31">NULL<pos:position pos:line="135" pos:column="35"/></name></expr>)<pos:position pos:line="135" pos:column="36"/></condition><then pos:line="135" pos:column="36"> <block pos:line="135" pos:column="37">{
                <decl_stmt><decl><type><name pos:line="136" pos:column="17">SSL<pos:position pos:line="136" pos:column="20"/></name> <modifier pos:line="136" pos:column="21">*<pos:position pos:line="136" pos:column="22"/></modifier></type><name pos:line="136" pos:column="22">ssl<pos:position pos:line="136" pos:column="25"/></name> <init pos:line="136" pos:column="26">= <expr><name><name pos:line="136" pos:column="28">fd_table<pos:position pos:line="136" pos:column="36"/></name><index pos:line="136" pos:column="36">[<expr><call><name><name pos:line="136" pos:column="37">ch<pos:position pos:line="136" pos:column="39"/></name><operator pos:line="136" pos:column="39">-&gt;<pos:position pos:line="136" pos:column="44"/></operator><name pos:line="136" pos:column="41">conn<pos:position pos:line="136" pos:column="45"/></name></name><argument_list pos:line="136" pos:column="45">()<pos:position pos:line="136" pos:column="47"/></argument_list></call><operator pos:line="136" pos:column="47">-&gt;<pos:position pos:line="136" pos:column="52"/></operator><name pos:line="136" pos:column="49">fd<pos:position pos:line="136" pos:column="51"/></name></expr>]<pos:position pos:line="136" pos:column="52"/></index></name><operator pos:line="136" pos:column="52">.<pos:position pos:line="136" pos:column="53"/></operator><name pos:line="136" pos:column="53">ssl<pos:position pos:line="136" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="136" pos:column="57"/></decl_stmt>

                <if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name pos:line="138" pos:column="21">ssl<pos:position pos:line="138" pos:column="24"/></name></expr>)<pos:position pos:line="138" pos:column="25"/></condition><then pos:line="138" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="21">str<pos:position pos:line="139" pos:column="24"/></name> <operator pos:line="139" pos:column="25">=<pos:position pos:line="139" pos:column="26"/></operator> <call><name pos:line="139" pos:column="27">sslGetUserCertificatePEM<pos:position pos:line="139" pos:column="51"/></name><argument_list pos:line="139" pos:column="51">(<argument><expr><name pos:line="139" pos:column="52">ssl<pos:position pos:line="139" pos:column="55"/></name></expr></argument>)<pos:position pos:line="139" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="57"/></expr_stmt></block></then></if>
            }<pos:position pos:line="140" pos:column="14"/></block></then></if>

            <break pos:line="142" pos:column="13">break;<pos:position pos:line="142" pos:column="19"/></break>

        <case pos:line="144" pos:column="9">case <expr><name><name pos:line="144" pos:column="14">_external_acl_format<pos:position pos:line="144" pos:column="34"/></name><operator pos:line="144" pos:column="34">::<pos:position pos:line="144" pos:column="36"/></operator><name pos:line="144" pos:column="36">EXT_ACL_USER_CERTCHAIN_RAW<pos:position pos:line="144" pos:column="62"/></name></name></expr>:<pos:position pos:line="144" pos:column="63"/></case>

            <if pos:line="146" pos:column="13">if <condition pos:line="146" pos:column="16">(<expr><call><name><name pos:line="146" pos:column="17">ch<pos:position pos:line="146" pos:column="19"/></name><operator pos:line="146" pos:column="19">-&gt;<pos:position pos:line="146" pos:column="24"/></operator><name pos:line="146" pos:column="21">conn<pos:position pos:line="146" pos:column="25"/></name></name><argument_list pos:line="146" pos:column="25">()<pos:position pos:line="146" pos:column="27"/></argument_list></call> <operator pos:line="146" pos:column="28">!=<pos:position pos:line="146" pos:column="30"/></operator> <name pos:line="146" pos:column="31">NULL<pos:position pos:line="146" pos:column="35"/></name></expr>)<pos:position pos:line="146" pos:column="36"/></condition><then pos:line="146" pos:column="36"> <block pos:line="146" pos:column="37">{
                <decl_stmt><decl><type><name pos:line="147" pos:column="17">SSL<pos:position pos:line="147" pos:column="20"/></name> <modifier pos:line="147" pos:column="21">*<pos:position pos:line="147" pos:column="22"/></modifier></type><name pos:line="147" pos:column="22">ssl<pos:position pos:line="147" pos:column="25"/></name> <init pos:line="147" pos:column="26">= <expr><name><name pos:line="147" pos:column="28">fd_table<pos:position pos:line="147" pos:column="36"/></name><index pos:line="147" pos:column="36">[<expr><call><name><name pos:line="147" pos:column="37">ch<pos:position pos:line="147" pos:column="39"/></name><operator pos:line="147" pos:column="39">-&gt;<pos:position pos:line="147" pos:column="44"/></operator><name pos:line="147" pos:column="41">conn<pos:position pos:line="147" pos:column="45"/></name></name><argument_list pos:line="147" pos:column="45">()<pos:position pos:line="147" pos:column="47"/></argument_list></call><operator pos:line="147" pos:column="47">-&gt;<pos:position pos:line="147" pos:column="52"/></operator><name pos:line="147" pos:column="49">fd<pos:position pos:line="147" pos:column="51"/></name></expr>]<pos:position pos:line="147" pos:column="52"/></index></name><operator pos:line="147" pos:column="52">.<pos:position pos:line="147" pos:column="53"/></operator><name pos:line="147" pos:column="53">ssl<pos:position pos:line="147" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="147" pos:column="57"/></decl_stmt>

                <if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><name pos:line="149" pos:column="21">ssl<pos:position pos:line="149" pos:column="24"/></name></expr>)<pos:position pos:line="149" pos:column="25"/></condition><then pos:line="149" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="21">str<pos:position pos:line="150" pos:column="24"/></name> <operator pos:line="150" pos:column="25">=<pos:position pos:line="150" pos:column="26"/></operator> <call><name pos:line="150" pos:column="27">sslGetUserCertificateChainPEM<pos:position pos:line="150" pos:column="56"/></name><argument_list pos:line="150" pos:column="56">(<argument><expr><name pos:line="150" pos:column="57">ssl<pos:position pos:line="150" pos:column="60"/></name></expr></argument>)<pos:position pos:line="150" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="62"/></expr_stmt></block></then></if>
            }<pos:position pos:line="151" pos:column="14"/></block></then></if>

            <break pos:line="153" pos:column="13">break;<pos:position pos:line="153" pos:column="19"/></break>

        <case pos:line="155" pos:column="9">case <expr><name><name pos:line="155" pos:column="14">_external_acl_format<pos:position pos:line="155" pos:column="34"/></name><operator pos:line="155" pos:column="34">::<pos:position pos:line="155" pos:column="36"/></operator><name pos:line="155" pos:column="36">EXT_ACL_USER_CERT<pos:position pos:line="155" pos:column="53"/></name></name></expr>:<pos:position pos:line="155" pos:column="54"/></case>

            <if pos:line="157" pos:column="13">if <condition pos:line="157" pos:column="16">(<expr><call><name><name pos:line="157" pos:column="17">ch<pos:position pos:line="157" pos:column="19"/></name><operator pos:line="157" pos:column="19">-&gt;<pos:position pos:line="157" pos:column="24"/></operator><name pos:line="157" pos:column="21">conn<pos:position pos:line="157" pos:column="25"/></name></name><argument_list pos:line="157" pos:column="25">()<pos:position pos:line="157" pos:column="27"/></argument_list></call> <operator pos:line="157" pos:column="28">!=<pos:position pos:line="157" pos:column="30"/></operator> <name pos:line="157" pos:column="31">NULL<pos:position pos:line="157" pos:column="35"/></name></expr>)<pos:position pos:line="157" pos:column="36"/></condition><then pos:line="157" pos:column="36"> <block pos:line="157" pos:column="37">{
                <decl_stmt><decl><type><name pos:line="158" pos:column="17">SSL<pos:position pos:line="158" pos:column="20"/></name> <modifier pos:line="158" pos:column="21">*<pos:position pos:line="158" pos:column="22"/></modifier></type><name pos:line="158" pos:column="22">ssl<pos:position pos:line="158" pos:column="25"/></name> <init pos:line="158" pos:column="26">= <expr><name><name pos:line="158" pos:column="28">fd_table<pos:position pos:line="158" pos:column="36"/></name><index pos:line="158" pos:column="36">[<expr><call><name><name pos:line="158" pos:column="37">ch<pos:position pos:line="158" pos:column="39"/></name><operator pos:line="158" pos:column="39">-&gt;<pos:position pos:line="158" pos:column="44"/></operator><name pos:line="158" pos:column="41">conn<pos:position pos:line="158" pos:column="45"/></name></name><argument_list pos:line="158" pos:column="45">()<pos:position pos:line="158" pos:column="47"/></argument_list></call><operator pos:line="158" pos:column="47">-&gt;<pos:position pos:line="158" pos:column="52"/></operator><name pos:line="158" pos:column="49">fd<pos:position pos:line="158" pos:column="51"/></name></expr>]<pos:position pos:line="158" pos:column="52"/></index></name><operator pos:line="158" pos:column="52">.<pos:position pos:line="158" pos:column="53"/></operator><name pos:line="158" pos:column="53">ssl<pos:position pos:line="158" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="158" pos:column="57"/></decl_stmt>

                <if pos:line="160" pos:column="17">if <condition pos:line="160" pos:column="20">(<expr><name pos:line="160" pos:column="21">ssl<pos:position pos:line="160" pos:column="24"/></name></expr>)<pos:position pos:line="160" pos:column="25"/></condition><then pos:line="160" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="161" pos:column="21">str<pos:position pos:line="161" pos:column="24"/></name> <operator pos:line="161" pos:column="25">=<pos:position pos:line="161" pos:column="26"/></operator> <call><name pos:line="161" pos:column="27">sslGetUserAttribute<pos:position pos:line="161" pos:column="46"/></name><argument_list pos:line="161" pos:column="46">(<argument><expr><name pos:line="161" pos:column="47">ssl<pos:position pos:line="161" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="52">format<pos:position pos:line="161" pos:column="58"/></name><operator pos:line="161" pos:column="58">-&gt;<pos:position pos:line="161" pos:column="63"/></operator><name pos:line="161" pos:column="60">header<pos:position pos:line="161" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="68"/></expr_stmt></block></then></if>
            }<pos:position pos:line="162" pos:column="14"/></block></then></if>

            <break pos:line="164" pos:column="13">break;<pos:position pos:line="164" pos:column="19"/></break>

        <case pos:line="166" pos:column="9">case <expr><name><name pos:line="166" pos:column="14">_external_acl_format<pos:position pos:line="166" pos:column="34"/></name><operator pos:line="166" pos:column="34">::<pos:position pos:line="166" pos:column="36"/></operator><name pos:line="166" pos:column="36">EXT_ACL_CA_CERT<pos:position pos:line="166" pos:column="51"/></name></name></expr>:<pos:position pos:line="166" pos:column="52"/></case>

            <if pos:line="168" pos:column="13">if <condition pos:line="168" pos:column="16">(<expr><call><name><name pos:line="168" pos:column="17">ch<pos:position pos:line="168" pos:column="19"/></name><operator pos:line="168" pos:column="19">-&gt;<pos:position pos:line="168" pos:column="24"/></operator><name pos:line="168" pos:column="21">conn<pos:position pos:line="168" pos:column="25"/></name></name><argument_list pos:line="168" pos:column="25">()<pos:position pos:line="168" pos:column="27"/></argument_list></call> <operator pos:line="168" pos:column="28">!=<pos:position pos:line="168" pos:column="30"/></operator> <name pos:line="168" pos:column="31">NULL<pos:position pos:line="168" pos:column="35"/></name></expr>)<pos:position pos:line="168" pos:column="36"/></condition><then pos:line="168" pos:column="36"> <block pos:line="168" pos:column="37">{
                <decl_stmt><decl><type><name pos:line="169" pos:column="17">SSL<pos:position pos:line="169" pos:column="20"/></name> <modifier pos:line="169" pos:column="21">*<pos:position pos:line="169" pos:column="22"/></modifier></type><name pos:line="169" pos:column="22">ssl<pos:position pos:line="169" pos:column="25"/></name> <init pos:line="169" pos:column="26">= <expr><name><name pos:line="169" pos:column="28">fd_table<pos:position pos:line="169" pos:column="36"/></name><index pos:line="169" pos:column="36">[<expr><call><name><name pos:line="169" pos:column="37">ch<pos:position pos:line="169" pos:column="39"/></name><operator pos:line="169" pos:column="39">-&gt;<pos:position pos:line="169" pos:column="44"/></operator><name pos:line="169" pos:column="41">conn<pos:position pos:line="169" pos:column="45"/></name></name><argument_list pos:line="169" pos:column="45">()<pos:position pos:line="169" pos:column="47"/></argument_list></call><operator pos:line="169" pos:column="47">-&gt;<pos:position pos:line="169" pos:column="52"/></operator><name pos:line="169" pos:column="49">fd<pos:position pos:line="169" pos:column="51"/></name></expr>]<pos:position pos:line="169" pos:column="52"/></index></name><operator pos:line="169" pos:column="52">.<pos:position pos:line="169" pos:column="53"/></operator><name pos:line="169" pos:column="53">ssl<pos:position pos:line="169" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="169" pos:column="57"/></decl_stmt>

                <if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><name pos:line="171" pos:column="21">ssl<pos:position pos:line="171" pos:column="24"/></name></expr>)<pos:position pos:line="171" pos:column="25"/></condition><then pos:line="171" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="21">str<pos:position pos:line="172" pos:column="24"/></name> <operator pos:line="172" pos:column="25">=<pos:position pos:line="172" pos:column="26"/></operator> <call><name pos:line="172" pos:column="27">sslGetCAAttribute<pos:position pos:line="172" pos:column="44"/></name><argument_list pos:line="172" pos:column="44">(<argument><expr><name pos:line="172" pos:column="45">ssl<pos:position pos:line="172" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="50">format<pos:position pos:line="172" pos:column="56"/></name><operator pos:line="172" pos:column="56">-&gt;<pos:position pos:line="172" pos:column="61"/></operator><name pos:line="172" pos:column="58">header<pos:position pos:line="172" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="66"/></expr_stmt></block></then></if>
            }<pos:position pos:line="173" pos:column="14"/></block></then></if>

            <break pos:line="175" pos:column="13">break;<pos:position pos:line="175" pos:column="19"/></break>
<cpp:endif pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">endif<pos:position pos:line="176" pos:column="7"/></cpp:directive></cpp:endif>

        <case pos:line="178" pos:column="9">case <expr><name><name pos:line="178" pos:column="14">_external_acl_format<pos:position pos:line="178" pos:column="34"/></name><operator pos:line="178" pos:column="34">::<pos:position pos:line="178" pos:column="36"/></operator><name pos:line="178" pos:column="36">EXT_ACL_EXT_USER<pos:position pos:line="178" pos:column="52"/></name></name></expr>:<pos:position pos:line="178" pos:column="53"/></case>
            <expr_stmt><expr><name pos:line="179" pos:column="13">str<pos:position pos:line="179" pos:column="16"/></name> <operator pos:line="179" pos:column="17">=<pos:position pos:line="179" pos:column="18"/></operator> <call><name><name pos:line="179" pos:column="19">request<pos:position pos:line="179" pos:column="26"/></name><operator pos:line="179" pos:column="26">-&gt;<pos:position pos:line="179" pos:column="31"/></operator><name pos:line="179" pos:column="28">extacl_user<pos:position pos:line="179" pos:column="39"/></name><operator pos:line="179" pos:column="39">.<pos:position pos:line="179" pos:column="40"/></operator><name pos:line="179" pos:column="40">termedBuf<pos:position pos:line="179" pos:column="49"/></name></name><argument_list pos:line="179" pos:column="49">()<pos:position pos:line="179" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="52"/></expr_stmt>
            <break pos:line="180" pos:column="13">break;<pos:position pos:line="180" pos:column="19"/></break>

        <case pos:line="182" pos:column="9">case <expr><name><name pos:line="182" pos:column="14">_external_acl_format<pos:position pos:line="182" pos:column="34"/></name><operator pos:line="182" pos:column="34">::<pos:position pos:line="182" pos:column="36"/></operator><name pos:line="182" pos:column="36">EXT_ACL_PERCENT<pos:position pos:line="182" pos:column="51"/></name></name></expr>:<pos:position pos:line="182" pos:column="52"/></case>
            <expr_stmt><expr><name pos:line="183" pos:column="13">str<pos:position pos:line="183" pos:column="16"/></name> <operator pos:line="183" pos:column="17">=<pos:position pos:line="183" pos:column="18"/></operator> <literal type="string" pos:line="183" pos:column="19">"%"<pos:position pos:line="183" pos:column="22"/></literal></expr>;<pos:position pos:line="183" pos:column="23"/></expr_stmt>
            <break pos:line="184" pos:column="13">break;<pos:position pos:line="184" pos:column="19"/></break>

        <case pos:line="186" pos:column="9">case <expr><name><name pos:line="186" pos:column="14">_external_acl_format<pos:position pos:line="186" pos:column="34"/></name><operator pos:line="186" pos:column="34">::<pos:position pos:line="186" pos:column="36"/></operator><name pos:line="186" pos:column="36">EXT_ACL_UNKNOWN<pos:position pos:line="186" pos:column="51"/></name></name></expr>:<pos:position pos:line="186" pos:column="52"/></case>

        <case pos:line="188" pos:column="9">case <expr><name><name pos:line="188" pos:column="14">_external_acl_format<pos:position pos:line="188" pos:column="34"/></name><operator pos:line="188" pos:column="34">::<pos:position pos:line="188" pos:column="36"/></operator><name pos:line="188" pos:column="36">EXT_ACL_END<pos:position pos:line="188" pos:column="47"/></name></name></expr>:<pos:position pos:line="188" pos:column="48"/></case>
            <expr_stmt><expr><call><name pos:line="189" pos:column="13">fatal<pos:position pos:line="189" pos:column="18"/></name><argument_list pos:line="189" pos:column="18">(<argument><expr><literal type="string" pos:line="189" pos:column="19">"unknown external_acl format error"<pos:position pos:line="189" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="56"/></expr_stmt>
            <break pos:line="190" pos:column="13">break;<pos:position pos:line="190" pos:column="19"/></break>
        }<pos:position pos:line="191" pos:column="10"/></block></switch>

        <if pos:line="193" pos:column="9">if <condition pos:line="193" pos:column="12">(<expr><name pos:line="193" pos:column="13">str<pos:position pos:line="193" pos:column="16"/></name></expr>)<pos:position pos:line="193" pos:column="17"/></condition><then pos:line="193" pos:column="17">
            <block type="pseudo"><if pos:line="194" pos:column="13">if <condition pos:line="194" pos:column="16">(<expr><operator pos:line="194" pos:column="17">!<pos:position pos:line="194" pos:column="18"/></operator><operator pos:line="194" pos:column="18">*<pos:position pos:line="194" pos:column="19"/></operator><name pos:line="194" pos:column="19">str<pos:position pos:line="194" pos:column="22"/></name></expr>)<pos:position pos:line="194" pos:column="23"/></condition><then pos:line="194" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name pos:line="195" pos:column="17">str<pos:position pos:line="195" pos:column="20"/></name> <operator pos:line="195" pos:column="21">=<pos:position pos:line="195" pos:column="22"/></operator> <name pos:line="195" pos:column="23">NULL<pos:position pos:line="195" pos:column="27"/></name></expr>;<pos:position pos:line="195" pos:column="28"/></expr_stmt></block></then></if></block></then></if>

        <if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><operator pos:line="197" pos:column="13">!<pos:position pos:line="197" pos:column="14"/></operator><name pos:line="197" pos:column="14">str<pos:position pos:line="197" pos:column="17"/></name></expr>)<pos:position pos:line="197" pos:column="18"/></condition><then pos:line="197" pos:column="18">
            <block type="pseudo"><expr_stmt><expr><name pos:line="198" pos:column="13">str<pos:position pos:line="198" pos:column="16"/></name> <operator pos:line="198" pos:column="17">=<pos:position pos:line="198" pos:column="18"/></operator> <literal type="string" pos:line="198" pos:column="19">"-"<pos:position pos:line="198" pos:column="22"/></literal></expr>;<pos:position pos:line="198" pos:column="23"/></expr_stmt></block></then></if>

        <if pos:line="200" pos:column="9">if <condition pos:line="200" pos:column="12">(<expr><operator pos:line="200" pos:column="13">!<pos:position pos:line="200" pos:column="14"/></operator><name pos:line="200" pos:column="14">first<pos:position pos:line="200" pos:column="19"/></name></expr>)<pos:position pos:line="200" pos:column="20"/></condition><then pos:line="200" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="201" pos:column="13">mb<pos:position pos:line="201" pos:column="15"/></name><operator pos:line="201" pos:column="15">.<pos:position pos:line="201" pos:column="16"/></operator><name pos:line="201" pos:column="16">append<pos:position pos:line="201" pos:column="22"/></name></name><argument_list pos:line="201" pos:column="22">(<argument><expr><literal type="string" pos:line="201" pos:column="23">" "<pos:position pos:line="201" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="28">1<pos:position pos:line="201" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="31"/></expr_stmt></block></then></if>

        <if pos:line="203" pos:column="9">if <condition pos:line="203" pos:column="12">(<expr><name><name pos:line="203" pos:column="13">acl_data<pos:position pos:line="203" pos:column="21"/></name><operator pos:line="203" pos:column="21">-&gt;<pos:position pos:line="203" pos:column="26"/></operator><name pos:line="203" pos:column="23">def<pos:position pos:line="203" pos:column="26"/></name><operator pos:line="203" pos:column="26">-&gt;<pos:position pos:line="203" pos:column="31"/></operator><name pos:line="203" pos:column="28">quote<pos:position pos:line="203" pos:column="33"/></name></name> <operator pos:line="203" pos:column="34">==<pos:position pos:line="203" pos:column="36"/></operator> <name><name pos:line="203" pos:column="37">external_acl<pos:position pos:line="203" pos:column="49"/></name><operator pos:line="203" pos:column="49">::<pos:position pos:line="203" pos:column="51"/></operator><name pos:line="203" pos:column="51">QUOTE_METHOD_URL<pos:position pos:line="203" pos:column="67"/></name></name></expr>)<pos:position pos:line="203" pos:column="68"/></condition><then pos:line="203" pos:column="68"> <block pos:line="203" pos:column="69">{
            <decl_stmt><decl><type><specifier pos:line="204" pos:column="13">const<pos:position pos:line="204" pos:column="18"/></specifier> <name pos:line="204" pos:column="19">char<pos:position pos:line="204" pos:column="23"/></name> <modifier pos:line="204" pos:column="24">*<pos:position pos:line="204" pos:column="25"/></modifier></type><name pos:line="204" pos:column="25">quoted<pos:position pos:line="204" pos:column="31"/></name> <init pos:line="204" pos:column="32">= <expr><call><name pos:line="204" pos:column="34">rfc1738_escape<pos:position pos:line="204" pos:column="48"/></name><argument_list pos:line="204" pos:column="48">(<argument><expr><name pos:line="204" pos:column="49">str<pos:position pos:line="204" pos:column="52"/></name></expr></argument>)<pos:position pos:line="204" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="204" pos:column="54"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="205" pos:column="13">mb<pos:position pos:line="205" pos:column="15"/></name><operator pos:line="205" pos:column="15">.<pos:position pos:line="205" pos:column="16"/></operator><name pos:line="205" pos:column="16">append<pos:position pos:line="205" pos:column="22"/></name></name><argument_list pos:line="205" pos:column="22">(<argument><expr><name pos:line="205" pos:column="23">quoted<pos:position pos:line="205" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="205" pos:column="31">strlen<pos:position pos:line="205" pos:column="37"/></name><argument_list pos:line="205" pos:column="37">(<argument><expr><name pos:line="205" pos:column="38">quoted<pos:position pos:line="205" pos:column="44"/></name></expr></argument>)<pos:position pos:line="205" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="205" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="206" pos:column="10"/></block></then> <else pos:line="206" pos:column="11">else <block pos:line="206" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="207" pos:column="13">strwordquote<pos:position pos:line="207" pos:column="25"/></name><argument_list pos:line="207" pos:column="25">(<argument><expr><operator pos:line="207" pos:column="26">&amp;<pos:position pos:line="207" pos:column="31"/></operator><name pos:line="207" pos:column="27">mb<pos:position pos:line="207" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="31">str<pos:position pos:line="207" pos:column="34"/></name></expr></argument>)<pos:position pos:line="207" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="208" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="210" pos:column="9">sb<pos:position pos:line="210" pos:column="11"/></name><operator pos:line="210" pos:column="11">.<pos:position pos:line="210" pos:column="12"/></operator><name pos:line="210" pos:column="12">clean<pos:position pos:line="210" pos:column="17"/></name></name><argument_list pos:line="210" pos:column="17">()<pos:position pos:line="210" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="20"/></expr_stmt>

        <expr_stmt><expr><name pos:line="212" pos:column="9">first<pos:position pos:line="212" pos:column="14"/></name> <operator pos:line="212" pos:column="15">=<pos:position pos:line="212" pos:column="16"/></operator> <literal type="number" pos:line="212" pos:column="17">0<pos:position pos:line="212" pos:column="18"/></literal></expr>;<pos:position pos:line="212" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="213" pos:column="6"/></block></for>

    <for pos:line="215" pos:column="5">for <control pos:line="215" pos:column="9">(<init><expr><name pos:line="215" pos:column="10">arg<pos:position pos:line="215" pos:column="13"/></name> <operator pos:line="215" pos:column="14">=<pos:position pos:line="215" pos:column="15"/></operator> <name><name pos:line="215" pos:column="16">acl_data<pos:position pos:line="215" pos:column="24"/></name><operator pos:line="215" pos:column="24">-&gt;<pos:position pos:line="215" pos:column="29"/></operator><name pos:line="215" pos:column="26">arguments<pos:position pos:line="215" pos:column="35"/></name></name></expr>;<pos:position pos:line="215" pos:column="36"/></init> <condition><expr><name pos:line="215" pos:column="37">arg<pos:position pos:line="215" pos:column="40"/></name></expr>;<pos:position pos:line="215" pos:column="41"/></condition> <incr><expr><name pos:line="215" pos:column="42">arg<pos:position pos:line="215" pos:column="45"/></name> <operator pos:line="215" pos:column="46">=<pos:position pos:line="215" pos:column="47"/></operator> <name><name pos:line="215" pos:column="48">arg<pos:position pos:line="215" pos:column="51"/></name><operator pos:line="215" pos:column="51">-&gt;<pos:position pos:line="215" pos:column="56"/></operator><name pos:line="215" pos:column="53">next<pos:position pos:line="215" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="215" pos:column="58"/></control> <block pos:line="215" pos:column="59">{
        <if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><operator pos:line="216" pos:column="13">!<pos:position pos:line="216" pos:column="14"/></operator><name pos:line="216" pos:column="14">first<pos:position pos:line="216" pos:column="19"/></name></expr>)<pos:position pos:line="216" pos:column="20"/></condition><then pos:line="216" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="217" pos:column="13">mb<pos:position pos:line="217" pos:column="15"/></name><operator pos:line="217" pos:column="15">.<pos:position pos:line="217" pos:column="16"/></operator><name pos:line="217" pos:column="16">append<pos:position pos:line="217" pos:column="22"/></name></name><argument_list pos:line="217" pos:column="22">(<argument><expr><literal type="string" pos:line="217" pos:column="23">" "<pos:position pos:line="217" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="217" pos:column="28">1<pos:position pos:line="217" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="31"/></expr_stmt></block></then></if>

        <if pos:line="219" pos:column="9">if <condition pos:line="219" pos:column="12">(<expr><name><name pos:line="219" pos:column="13">acl_data<pos:position pos:line="219" pos:column="21"/></name><operator pos:line="219" pos:column="21">-&gt;<pos:position pos:line="219" pos:column="26"/></operator><name pos:line="219" pos:column="23">def<pos:position pos:line="219" pos:column="26"/></name><operator pos:line="219" pos:column="26">-&gt;<pos:position pos:line="219" pos:column="31"/></operator><name pos:line="219" pos:column="28">quote<pos:position pos:line="219" pos:column="33"/></name></name> <operator pos:line="219" pos:column="34">==<pos:position pos:line="219" pos:column="36"/></operator> <name><name pos:line="219" pos:column="37">external_acl<pos:position pos:line="219" pos:column="49"/></name><operator pos:line="219" pos:column="49">::<pos:position pos:line="219" pos:column="51"/></operator><name pos:line="219" pos:column="51">QUOTE_METHOD_URL<pos:position pos:line="219" pos:column="67"/></name></name></expr>)<pos:position pos:line="219" pos:column="68"/></condition><then pos:line="219" pos:column="68"> <block pos:line="219" pos:column="69">{
            <decl_stmt><decl><type><specifier pos:line="220" pos:column="13">const<pos:position pos:line="220" pos:column="18"/></specifier> <name pos:line="220" pos:column="19">char<pos:position pos:line="220" pos:column="23"/></name> <modifier pos:line="220" pos:column="24">*<pos:position pos:line="220" pos:column="25"/></modifier></type><name pos:line="220" pos:column="25">quoted<pos:position pos:line="220" pos:column="31"/></name> <init pos:line="220" pos:column="32">= <expr><call><name pos:line="220" pos:column="34">rfc1738_escape<pos:position pos:line="220" pos:column="48"/></name><argument_list pos:line="220" pos:column="48">(<argument><expr><name><name pos:line="220" pos:column="49">arg<pos:position pos:line="220" pos:column="52"/></name><operator pos:line="220" pos:column="52">-&gt;<pos:position pos:line="220" pos:column="57"/></operator><name pos:line="220" pos:column="54">key<pos:position pos:line="220" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="220" pos:column="59"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="221" pos:column="13">mb<pos:position pos:line="221" pos:column="15"/></name><operator pos:line="221" pos:column="15">.<pos:position pos:line="221" pos:column="16"/></operator><name pos:line="221" pos:column="16">append<pos:position pos:line="221" pos:column="22"/></name></name><argument_list pos:line="221" pos:column="22">(<argument><expr><name pos:line="221" pos:column="23">quoted<pos:position pos:line="221" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="221" pos:column="31">strlen<pos:position pos:line="221" pos:column="37"/></name><argument_list pos:line="221" pos:column="37">(<argument><expr><name pos:line="221" pos:column="38">quoted<pos:position pos:line="221" pos:column="44"/></name></expr></argument>)<pos:position pos:line="221" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="221" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="222" pos:column="10"/></block></then> <else pos:line="222" pos:column="11">else <block pos:line="222" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="223" pos:column="13">strwordquote<pos:position pos:line="223" pos:column="25"/></name><argument_list pos:line="223" pos:column="25">(<argument><expr><operator pos:line="223" pos:column="26">&amp;<pos:position pos:line="223" pos:column="31"/></operator><name pos:line="223" pos:column="27">mb<pos:position pos:line="223" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="223" pos:column="31">arg<pos:position pos:line="223" pos:column="34"/></name><operator pos:line="223" pos:column="34">-&gt;<pos:position pos:line="223" pos:column="39"/></operator><name pos:line="223" pos:column="36">key<pos:position pos:line="223" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="223" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="224" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="226" pos:column="9">first<pos:position pos:line="226" pos:column="14"/></name> <operator pos:line="226" pos:column="15">=<pos:position pos:line="226" pos:column="16"/></operator> <literal type="number" pos:line="226" pos:column="17">0<pos:position pos:line="226" pos:column="18"/></literal></expr>;<pos:position pos:line="226" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="227" pos:column="6"/></block></for>

    <return pos:line="229" pos:column="5">return <expr><name><name pos:line="229" pos:column="12">mb<pos:position pos:line="229" pos:column="14"/></name><operator pos:line="229" pos:column="14">.<pos:position pos:line="229" pos:column="15"/></operator><name pos:line="229" pos:column="15">buf<pos:position pos:line="229" pos:column="18"/></name></name></expr>;<pos:position pos:line="229" pos:column="19"/></return>
}<pos:position pos:line="230" pos:column="2"/></block></function></unit>

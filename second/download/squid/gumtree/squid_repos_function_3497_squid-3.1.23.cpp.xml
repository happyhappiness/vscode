<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3497_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ConnStateData<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type>
<name pos:line="2" pos:column="1">connStateCreate<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">IpAddress<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="34">peer<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">IpAddress<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">me<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">fd<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">http_port_list<pos:position pos:line="2" pos:column="83"/></name> <modifier pos:line="2" pos:column="84">*<pos:position pos:line="2" pos:column="85"/></modifier></type><name pos:line="2" pos:column="85">port<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="90"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">result<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">new<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="33">ConnStateData<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="6" pos:column="5">result<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">peer<pos:position pos:line="6" pos:column="17"/></name></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">peer<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">result<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">log_addr<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">peer<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">result<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">log_addr<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">ApplyMask<pos:position pos:line="8" pos:column="31"/></name></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name><name pos:line="8" pos:column="32">Config<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">Addrs<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">client_netmask<pos:position pos:line="8" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">result<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">me<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">me<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">result<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">fd<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">fd<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">result<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">in<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">buf<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></operator><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator><call><name pos:line="11" pos:column="30">memAllocBuf<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">CLIENT_REQ_BUF_SZ<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="61">&amp;<pos:position pos:line="11" pos:column="66"/></operator><name><name pos:line="11" pos:column="62">result<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">-&gt;<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="70">in<pos:position pos:line="11" pos:column="72"/></name><operator pos:line="11" pos:column="72">.<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="73">allocatedSize<pos:position pos:line="11" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">result<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">port<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <call><name pos:line="12" pos:column="20">cbdataReference<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">port<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">port<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">intercepted<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">||<pos:position pos:line="14" pos:column="29"/></operator> <name><name pos:line="14" pos:column="30">port<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">spoof_client_ip<pos:position pos:line="14" pos:column="51"/></name></name></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52"> <block pos:line="14" pos:column="53">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">IpAddress<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">client<pos:position pos:line="15" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="27">dst<pos:position pos:line="15" pos:column="30"/></name></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name><name pos:line="17" pos:column="13">IpInterceptor<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">NatLookup<pos:position pos:line="17" pos:column="36"/></name></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">fd<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">me<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">peer<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">client<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">dst<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call> <operator pos:line="17" pos:column="64">==<pos:position pos:line="17" pos:column="66"/></operator> <literal type="number" pos:line="17" pos:column="67">0<pos:position pos:line="17" pos:column="68"/></literal></expr>)<pos:position pos:line="17" pos:column="69"/></condition><then pos:line="17" pos:column="69"> <block pos:line="17" pos:column="70">{
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">result<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">me<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">client<pos:position pos:line="18" pos:column="32"/></name></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">result<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">peer<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">dst<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">result<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">transparent<pos:position pos:line="20" pos:column="32"/></name></name><argument_list pos:line="20" pos:column="32">(<argument><expr><literal type="boolean" pos:line="20" pos:column="33">true<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">port<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">disable_pmtu_discovery<pos:position pos:line="24" pos:column="37"/></name></name> <operator pos:line="24" pos:column="38">!=<pos:position pos:line="24" pos:column="40"/></operator> <name pos:line="24" pos:column="41">DISABLE_PMTU_OFF<pos:position pos:line="24" pos:column="57"/></name> <operator pos:line="24" pos:column="58">&amp;&amp;<pos:position pos:line="24" pos:column="68"/></operator>
            <operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><call><name><name pos:line="25" pos:column="14">result<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">transparent<pos:position pos:line="25" pos:column="33"/></name></name><argument_list pos:line="25" pos:column="33">()<pos:position pos:line="25" pos:column="35"/></argument_list></call> <operator pos:line="25" pos:column="36">||<pos:position pos:line="25" pos:column="38"/></operator> <name><name pos:line="25" pos:column="39">port<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">disable_pmtu_discovery<pos:position pos:line="25" pos:column="67"/></name></name> <operator pos:line="25" pos:column="68">==<pos:position pos:line="25" pos:column="70"/></operator> <name pos:line="25" pos:column="71">DISABLE_PMTU_ALWAYS<pos:position pos:line="25" pos:column="90"/></name><operator pos:line="25" pos:column="90">)<pos:position pos:line="25" pos:column="91"/></operator></expr>)<pos:position pos:line="25" pos:column="92"/></condition><then pos:line="25" pos:column="92"> <block pos:line="25" pos:column="93">{
<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><call><name pos:line="26" pos:column="5">defined<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">IP_MTU_DISCOVER<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call> <operator pos:line="26" pos:column="30">&amp;&amp;<pos:position pos:line="26" pos:column="40"/></operator> <call><name pos:line="26" pos:column="33">defined<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">IP_PMTUDISC_DONT<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">int<pos:position pos:line="27" pos:column="12"/></name></type> <name pos:line="27" pos:column="13">i<pos:position pos:line="27" pos:column="14"/></name> <init pos:line="27" pos:column="15">= <expr><name pos:line="27" pos:column="17">IP_PMTUDISC_DONT<pos:position pos:line="27" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">setsockopt<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">fd<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="24">SOL_IP<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">IP_MTU_DISCOVER<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="49">&amp;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="50">i<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="53">sizeof <name pos:line="28" pos:column="60">i<pos:position pos:line="28" pos:column="61"/></name></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>

<cpp:else pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">else<pos:position pos:line="30" pos:column="6"/></cpp:directive></cpp:else>

        <decl_stmt><decl><specifier pos:line="32" pos:column="9">static<pos:position pos:line="32" pos:column="15"/></specifier> <type><name pos:line="32" pos:column="16">int<pos:position pos:line="32" pos:column="19"/></name></type> <name pos:line="32" pos:column="20">reported<pos:position pos:line="32" pos:column="28"/></name> <init pos:line="32" pos:column="29">= <expr><literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="33"/></decl_stmt>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">reported<pos:position pos:line="34" pos:column="22"/></name></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23"> <block pos:line="34" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">debugs<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="number" pos:line="35" pos:column="20">33<pos:position pos:line="35" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="24">1<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="27">"Notice: httpd_accel_no_pmtu_disc not supported on your platform"<pos:position pos:line="35" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">reported<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>

<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">result<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">flags<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">.<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">readMoreRequests<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <literal type="boolean" pos:line="43" pos:column="38">true<pos:position pos:line="43" pos:column="42"/></literal></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">result<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

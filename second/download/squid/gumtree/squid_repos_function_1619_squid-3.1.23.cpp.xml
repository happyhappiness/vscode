<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1619_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">helperStatefulSubmit<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">statefulhelper<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">hlp<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">buf<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">HLPSCB<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type> <name pos:line="2" pos:column="70">callback<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="80">void<pos:position pos:line="2" pos:column="84"/></name> <modifier pos:line="2" pos:column="85">*<pos:position pos:line="2" pos:column="86"/></modifier></type><name pos:line="2" pos:column="86">data<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="92">helper_stateful_server<pos:position pos:line="2" pos:column="114"/></name> <modifier pos:line="2" pos:column="115">*<pos:position pos:line="2" pos:column="116"/></modifier></type> <name pos:line="2" pos:column="117">lastserver<pos:position pos:line="2" pos:column="127"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="128"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">hlp<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">84<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"helperStatefulSubmit: hlp == NULL"<pos:position pos:line="5" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">callback<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">data<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">helper_stateful_request<pos:position pos:line="10" pos:column="28"/></name> <modifier pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></modifier></type><name pos:line="10" pos:column="30">r<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><operator pos:line="10" pos:column="34">new<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">helper_stateful_request<pos:position pos:line="10" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="12" pos:column="5">r<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">callback<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">callback<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">r<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">data<pos:position pos:line="13" pos:column="12"/></name></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">cbdataReference<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">data<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">buf<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">!=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">r<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">buf<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">xstrdup<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">buf<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">r<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">placeholder<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <else pos:line="18" pos:column="7">else <block pos:line="18" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">r<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">buf<pos:position pos:line="19" pos:column="15"/></name></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">NULL<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">r<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">placeholder<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">buf<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">!=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">&amp;&amp;<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="26">lastserver<pos:position pos:line="23" pos:column="36"/></name></expr>)<pos:position pos:line="23" pos:column="37"/></condition><then pos:line="23" pos:column="37"> <block pos:line="23" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">84<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">5<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"StatefulSubmit with lastserver "<pos:position pos:line="24" pos:column="56"/></literal> <operator pos:line="24" pos:column="57">&lt;&lt;<pos:position pos:line="24" pos:column="65"/></operator> <name pos:line="24" pos:column="60">lastserver<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">assert<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name><name pos:line="25" pos:column="16">lastserver<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">flags<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">.<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">reserved<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">assert<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><operator pos:line="26" pos:column="16">!<pos:position pos:line="26" pos:column="17"/></operator><operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><name><name pos:line="26" pos:column="18">lastserver<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">request<pos:position pos:line="26" pos:column="37"/></name></name><operator pos:line="26" pos:column="37">)<pos:position pos:line="26" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">84<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">5<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"StatefulSubmit dispatching"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">helperStatefulDispatch<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">lastserver<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">r<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">helper_stateful_server<pos:position pos:line="31" pos:column="31"/></name> <modifier pos:line="31" pos:column="32">*<pos:position pos:line="31" pos:column="33"/></modifier></type><name pos:line="31" pos:column="33">srv<pos:position pos:line="31" pos:column="36"/></name></decl>;<pos:position pos:line="31" pos:column="37"/></decl_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">srv<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">StatefulGetFirstAvailable<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">hlp<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call><operator pos:line="32" pos:column="50">)<pos:position pos:line="32" pos:column="51"/></operator></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52"> <block pos:line="32" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">helperStatefulDispatch<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">srv<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">r<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then> <else pos:line="34" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="13">StatefulEnqueue<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">hlp<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">r<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">debugs<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="number" pos:line="38" pos:column="12">84<pos:position pos:line="38" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="16">9<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"helperStatefulSubmit: placeholder: '"<pos:position pos:line="38" pos:column="57"/></literal> <operator pos:line="38" pos:column="58">&lt;&lt;<pos:position pos:line="38" pos:column="66"/></operator> <name><name pos:line="38" pos:column="61">r<pos:position pos:line="38" pos:column="62"/></name><operator pos:line="38" pos:column="62">-&gt;<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="64">placeholder<pos:position pos:line="38" pos:column="75"/></name></name> <operator pos:line="38" pos:column="76">&lt;&lt;<pos:position pos:line="38" pos:column="84"/></operator> <literal type="string" pos:line="38" pos:column="79">"', buf '"<pos:position pos:line="38" pos:column="89"/></literal> <operator pos:line="38" pos:column="90">&lt;&lt;<pos:position pos:line="38" pos:column="98"/></operator> <name pos:line="38" pos:column="93">buf<pos:position pos:line="38" pos:column="96"/></name> <operator pos:line="38" pos:column="97">&lt;&lt;<pos:position pos:line="38" pos:column="105"/></operator> <literal type="string" pos:line="38" pos:column="100">"'."<pos:position pos:line="38" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="106"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

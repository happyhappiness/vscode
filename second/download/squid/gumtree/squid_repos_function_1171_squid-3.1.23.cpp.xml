<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1171_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">DelayBucket<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">bytesWanted<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">minimum<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">maximum<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">result<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name pos:line="4" pos:column="18">max<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">minimum<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="31">min<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">maximum<pos:position pos:line="4" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="44">level<pos:position pos:line="4" pos:column="49"/></name><argument_list pos:line="4" pos:column="49">()<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
    <return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

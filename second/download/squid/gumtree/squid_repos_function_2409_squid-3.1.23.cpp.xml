<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2409_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">retryOrBail<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">()<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">checkRetry<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">()<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">originserver<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><name><name pos:line="5" pos:column="29">servers<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">_peer<pos:position pos:line="5" pos:column="43"/></name></name> <operator pos:line="5" pos:column="44">==<pos:position pos:line="5" pos:column="46"/></operator> <name pos:line="5" pos:column="47">NULL<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">17<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">3<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"fwdServerClosed: re-forwarding ("<pos:position pos:line="6" pos:column="57"/></literal> <operator pos:line="6" pos:column="58">&lt;&lt;<pos:position pos:line="6" pos:column="66"/></operator> <name pos:line="6" pos:column="61">n_tries<pos:position pos:line="6" pos:column="68"/></name> <operator pos:line="6" pos:column="69">&lt;&lt;<pos:position pos:line="6" pos:column="77"/></operator> <literal type="string" pos:line="6" pos:column="72">" tries, "<pos:position pos:line="6" pos:column="82"/></literal> <operator pos:line="6" pos:column="83">&lt;&lt;<pos:position pos:line="6" pos:column="91"/></operator> <operator pos:line="6" pos:column="86">(<pos:position pos:line="6" pos:column="87"/></operator><name pos:line="6" pos:column="87">squid_curtime<pos:position pos:line="6" pos:column="100"/></name> <operator pos:line="6" pos:column="101">-<pos:position pos:line="6" pos:column="102"/></operator> <name pos:line="6" pos:column="103">start_t<pos:position pos:line="6" pos:column="110"/></name><operator pos:line="6" pos:column="110">)<pos:position pos:line="6" pos:column="111"/></operator> <operator pos:line="6" pos:column="112">&lt;&lt;<pos:position pos:line="6" pos:column="120"/></operator> <literal type="string" pos:line="6" pos:column="115">" secs)"<pos:position pos:line="6" pos:column="123"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="125"/></expr_stmt>

        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">servers<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">next<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
            <comment type="block" pos:line="9" pos:column="13">/* use next, or cycle if origin server isn't last */</comment>
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">FwdServer<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">fs<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><name pos:line="10" pos:column="29">servers<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">FwdServer<pos:position pos:line="11" pos:column="22"/></name> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier><modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">T<pos:position pos:line="11" pos:column="26"/></name></decl>, <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="29">T2<pos:position pos:line="11" pos:column="31"/></name> <init pos:line="11" pos:column="32">= <expr><name pos:line="11" pos:column="34">NULL<pos:position pos:line="11" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">servers<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name><name pos:line="12" pos:column="23">fs<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">next<pos:position pos:line="12" pos:column="31"/></name></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

            <for pos:line="14" pos:column="13">for <control pos:line="14" pos:column="17">(<init><expr><name pos:line="14" pos:column="18">T<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="23">servers<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></init> <condition><expr><operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">T<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></condition> <incr><expr><name pos:line="14" pos:column="36">T2<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="41">*<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">T<pos:position pos:line="14" pos:column="43"/></name></expr><operator pos:line="14" pos:column="43">,<pos:position pos:line="14" pos:column="44"/></operator> <expr><name pos:line="14" pos:column="45">T<pos:position pos:line="14" pos:column="46"/></name> <operator pos:line="14" pos:column="47">=<pos:position pos:line="14" pos:column="48"/></operator> <operator pos:line="14" pos:column="49">&amp;<pos:position pos:line="14" pos:column="54"/></operator><name><operator pos:line="14" pos:column="50">(<pos:position pos:line="14" pos:column="51"/></operator><operator pos:line="14" pos:column="51">*<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="52">T<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">)<pos:position pos:line="14" pos:column="54"/></operator><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">next<pos:position pos:line="14" pos:column="60"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="61"/></control><block type="pseudo"><empty_stmt pos:line="14" pos:column="61">;<pos:position pos:line="14" pos:column="62"/></empty_stmt></block></for>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name pos:line="15" pos:column="17">T2<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&amp;&amp;<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="23">T2<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">_peer<pos:position pos:line="15" pos:column="32"/></name></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
                <comment type="block" pos:line="16" pos:column="17">/* cycle */</comment>
                <expr_stmt><expr><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">T<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">fs<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="18" pos:column="17">fs<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">next<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">NULL<pos:position pos:line="18" pos:column="32"/></name></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then> <else pos:line="19" pos:column="15">else <block pos:line="19" pos:column="20">{
                <comment type="block" pos:line="20" pos:column="17">/* Use next. The last "direct" entry is retried multiple times */</comment>
                <expr_stmt><expr><name pos:line="21" pos:column="17">servers<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <name><name pos:line="21" pos:column="27">fs<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">next<pos:position pos:line="21" pos:column="35"/></name></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">fwdServerFree<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">fs<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name pos:line="23" pos:column="17">originserver<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></else></if>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="27" pos:column="9">/* Ditch error page if it was created before.
         * A new one will be created if there's another problem */</comment>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">err<pos:position pos:line="29" pos:column="16"/></name></expr>)<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <block pos:line="29" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">errorStateFree<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">err<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">err<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">NULL<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="34" pos:column="9">/* use eventAdd to break potential call sequence loops and to slow things down a little */</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">eventAdd<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><literal type="string" pos:line="35" pos:column="18">"fwdConnectStart"<pos:position pos:line="35" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">fwdConnectStartWrapper<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="61">this<pos:position pos:line="35" pos:column="65"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="35" pos:column="67">originserver<pos:position pos:line="35" pos:column="79"/></name></expr> ?<pos:position pos:line="35" pos:column="81"/></condition><then pos:line="35" pos:column="81"> <expr><literal type="number" pos:line="35" pos:column="82">0.05<pos:position pos:line="35" pos:column="86"/></literal></expr> <pos:position pos:line="35" pos:column="87"/></then><else pos:line="35" pos:column="87">: <expr><literal type="number" pos:line="35" pos:column="89">0.005<pos:position pos:line="35" pos:column="94"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="96">0<pos:position pos:line="35" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="99"/></expr_stmt>

        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="40" pos:column="5">// TODO: should we call completed() here and move doneWithRetries there?</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">doneWithRetries<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">()<pos:position pos:line="41" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">self<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">!=<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">NULL<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">&amp;&amp;<pos:position pos:line="43" pos:column="32"/></operator> <operator pos:line="43" pos:column="25">!<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">err<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">&amp;&amp;<pos:position pos:line="43" pos:column="40"/></operator> <name pos:line="43" pos:column="33">shutting_down<pos:position pos:line="43" pos:column="46"/></name></expr>)<pos:position pos:line="43" pos:column="47"/></condition><then pos:line="43" pos:column="47"> <block pos:line="43" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">errorCon<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">ERR_SHUTTING_DOWN<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="44" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="63">request<pos:position pos:line="44" pos:column="70"/></name></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="47" pos:column="5">self<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <name pos:line="47" pos:column="12">NULL<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>	<comment type="line" pos:line="47" pos:column="25">// refcounted</comment>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

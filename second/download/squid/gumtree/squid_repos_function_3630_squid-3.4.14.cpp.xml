<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3630_squid-3.4.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">Comm<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">ConnectionPointer<pos:position pos:line="1" pos:column="30"/></name></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">validatePinnedConnection<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name pos:line="2" pos:column="41">HttpRequest<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">request<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">CachePeer<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">aPeer<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">33<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">7<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name><name pos:line="4" pos:column="27">pinning<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">serverConnection<pos:position pos:line="4" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="53"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">valid<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="boolean" pos:line="6" pos:column="18">true<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">Comm<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">::<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">IsConnOpen<pos:position pos:line="7" pos:column="26"/></name></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name><name pos:line="7" pos:column="27">pinning<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">serverConnection<pos:position pos:line="7" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">valid<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <literal type="boolean" pos:line="8" pos:column="17">false<pos:position pos:line="8" pos:column="22"/></literal></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name><name pos:line="9" pos:column="14">pinning<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">auth<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">&amp;&amp;<pos:position pos:line="9" pos:column="37"/></operator> <name><name pos:line="9" pos:column="30">pinning<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">.<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">host<pos:position pos:line="9" pos:column="42"/></name></name> <operator pos:line="9" pos:column="43">&amp;&amp;<pos:position pos:line="9" pos:column="53"/></operator> <name pos:line="9" pos:column="46">request<pos:position pos:line="9" pos:column="53"/></name> <operator pos:line="9" pos:column="54">&amp;&amp;<pos:position pos:line="9" pos:column="64"/></operator> <call><name pos:line="9" pos:column="57">strcasecmp<pos:position pos:line="9" pos:column="67"/></name><argument_list pos:line="9" pos:column="67">(<argument><expr><name><name pos:line="9" pos:column="68">pinning<pos:position pos:line="9" pos:column="75"/></name><operator pos:line="9" pos:column="75">.<pos:position pos:line="9" pos:column="76"/></operator><name pos:line="9" pos:column="76">host<pos:position pos:line="9" pos:column="80"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="82">request<pos:position pos:line="9" pos:column="89"/></name><operator pos:line="9" pos:column="89">-&gt;<pos:position pos:line="9" pos:column="94"/></operator><name pos:line="9" pos:column="91">GetHost<pos:position pos:line="9" pos:column="98"/></name></name><argument_list pos:line="9" pos:column="98">()<pos:position pos:line="9" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="101"/></argument_list></call> <operator pos:line="9" pos:column="102">!=<pos:position pos:line="9" pos:column="104"/></operator> <literal type="number" pos:line="9" pos:column="105">0<pos:position pos:line="9" pos:column="106"/></literal></expr>)<pos:position pos:line="9" pos:column="107"/></condition><then pos:line="9" pos:column="107">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">valid<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="boolean" pos:line="10" pos:column="17">false<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><name pos:line="11" pos:column="14">request<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&amp;&amp;<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="25">pinning<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">port<pos:position pos:line="11" pos:column="37"/></name></name> <operator pos:line="11" pos:column="38">!=<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="41">request<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">port<pos:position pos:line="11" pos:column="54"/></name></name></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">valid<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="boolean" pos:line="12" pos:column="17">false<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><name><name pos:line="13" pos:column="14">pinning<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">peer<pos:position pos:line="13" pos:column="26"/></name></name> <operator pos:line="13" pos:column="27">&amp;&amp;<pos:position pos:line="13" pos:column="37"/></operator> <operator pos:line="13" pos:column="30">!<pos:position pos:line="13" pos:column="31"/></operator><call><name pos:line="13" pos:column="31">cbdataReferenceValid<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name><name pos:line="13" pos:column="52">pinning<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">.<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="60">peer<pos:position pos:line="13" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">valid<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="boolean" pos:line="14" pos:column="17">false<pos:position pos:line="14" pos:column="22"/></literal></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><name pos:line="15" pos:column="14">aPeer<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">!=<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="23">pinning<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">peer<pos:position pos:line="15" pos:column="35"/></name></name></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">valid<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="boolean" pos:line="16" pos:column="17">false<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">valid<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
        <comment type="block" pos:line="19" pos:column="9">/* The pinning info is not safe, remove any pinning info */</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">unpinConnection<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">()<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <return pos:line="23" pos:column="5">return <expr><name><name pos:line="23" pos:column="12">pinning<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">serverConnection<pos:position pos:line="23" pos:column="36"/></name></name></expr>;<pos:position pos:line="23" pos:column="37"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

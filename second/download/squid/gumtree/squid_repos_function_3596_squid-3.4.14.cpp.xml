<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3596_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">httpsSslBumpAccessCheckDone<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">allow_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">answer<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">void<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">data<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">connState<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><operator pos:line="4" pos:column="32">(<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">ConnStateData<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></operator><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="50">data<pos:position pos:line="4" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>

    <comment type="line" pos:line="6" pos:column="5">// if the connection is closed or closing, just return.</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">connState<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">isOpen<pos:position pos:line="7" pos:column="27"/></name></name><argument_list pos:line="7" pos:column="27">()<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// Require both a match and a positive bump mode to work around exceptional</comment>
    <comment type="line" pos:line="11" pos:column="5">// cases where ACL code may return ACCESS_ALLOWED with zero answer.kind.</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">answer<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">ACCESS_ALLOWED<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">&amp;&amp;<pos:position pos:line="12" pos:column="44"/></operator> <name><name pos:line="12" pos:column="37">answer<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">kind<pos:position pos:line="12" pos:column="48"/></name></name> <operator pos:line="12" pos:column="49">!=<pos:position pos:line="12" pos:column="51"/></operator> <name><name pos:line="12" pos:column="52">Ssl<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">::<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">bumpNone<pos:position pos:line="12" pos:column="65"/></name></name></expr>)<pos:position pos:line="12" pos:column="66"/></condition><then pos:line="12" pos:column="66"> <block pos:line="12" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">33<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">2<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">HERE<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&lt;&lt;<pos:position pos:line="13" pos:column="36"/></operator> <literal type="string" pos:line="13" pos:column="31">"sslBump needed for "<pos:position pos:line="13" pos:column="52"/></literal> <operator pos:line="13" pos:column="53">&lt;&lt;<pos:position pos:line="13" pos:column="61"/></operator> <name><name pos:line="13" pos:column="56">connState<pos:position pos:line="13" pos:column="65"/></name><operator pos:line="13" pos:column="65">-&gt;<pos:position pos:line="13" pos:column="70"/></operator><name pos:line="13" pos:column="67">clientConnection<pos:position pos:line="13" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">connState<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">sslBumpMode<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <cast type="static" pos:line="14" pos:column="34">static_cast<argument_list type="generic" pos:line="14" pos:column="45">&lt;<argument><expr><name><name pos:line="14" pos:column="46">Ssl<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">::<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="51">BumpMode<pos:position pos:line="14" pos:column="59"/></name></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="63"/></argument_list><argument_list pos:line="14" pos:column="60">(<argument><expr><name><name pos:line="14" pos:column="61">answer<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">.<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="68">kind<pos:position pos:line="14" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></cast></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">httpsEstablish<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">connState<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">NULL<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="41">(<pos:position pos:line="15" pos:column="42"/></operator><name><name pos:line="15" pos:column="42">Ssl<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">::<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">BumpMode<pos:position pos:line="15" pos:column="55"/></name></name><operator pos:line="15" pos:column="55">)<pos:position pos:line="15" pos:column="56"/></operator><name><name pos:line="15" pos:column="56">answer<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">.<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="63">kind<pos:position pos:line="15" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then> <else pos:line="16" pos:column="7">else <block pos:line="16" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">33<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">2<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">HERE<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&lt;&lt;<pos:position pos:line="17" pos:column="36"/></operator> <literal type="string" pos:line="17" pos:column="31">"sslBump not needed for "<pos:position pos:line="17" pos:column="56"/></literal> <operator pos:line="17" pos:column="57">&lt;&lt;<pos:position pos:line="17" pos:column="65"/></operator> <name><name pos:line="17" pos:column="60">connState<pos:position pos:line="17" pos:column="69"/></name><operator pos:line="17" pos:column="69">-&gt;<pos:position pos:line="17" pos:column="74"/></operator><name pos:line="17" pos:column="71">clientConnection<pos:position pos:line="17" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">connState<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">sslBumpMode<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name><name pos:line="18" pos:column="34">Ssl<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">::<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="39">bumpNone<pos:position pos:line="18" pos:column="47"/></name></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>

        <comment type="line" pos:line="20" pos:column="9">// fake a CONNECT request to force connState to tunnel</comment>
        <decl_stmt><decl><specifier pos:line="21" pos:column="9">static<pos:position pos:line="21" pos:column="15"/></specifier> <type><name pos:line="21" pos:column="16">char<pos:position pos:line="21" pos:column="20"/></name></type> <name><name pos:line="21" pos:column="21">ip<pos:position pos:line="21" pos:column="23"/></name><index pos:line="21" pos:column="23">[<expr><name pos:line="21" pos:column="24">MAX_IPSTRLEN<pos:position pos:line="21" pos:column="36"/></name></expr>]<pos:position pos:line="21" pos:column="37"/></index></name></decl>;<pos:position pos:line="21" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><specifier pos:line="22" pos:column="9">static<pos:position pos:line="22" pos:column="15"/></specifier> <type><name pos:line="22" pos:column="16">char<pos:position pos:line="22" pos:column="20"/></name></type> <name><name pos:line="22" pos:column="21">reqStr<pos:position pos:line="22" pos:column="27"/></name><index pos:line="22" pos:column="27">[<expr><name pos:line="22" pos:column="28">MAX_IPSTRLEN<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">+<pos:position pos:line="22" pos:column="42"/></operator> <literal type="number" pos:line="22" pos:column="43">80<pos:position pos:line="22" pos:column="45"/></literal></expr>]<pos:position pos:line="22" pos:column="46"/></index></name></decl>;<pos:position pos:line="22" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">connState<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">clientConnection<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">local<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">.<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="44">toUrl<pos:position pos:line="23" pos:column="49"/></name></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">ip<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="54">sizeof<argument_list pos:line="23" pos:column="60">(<argument><expr><name pos:line="23" pos:column="61">ip<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">snprintf<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">reqStr<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="26">sizeof<argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">reqStr<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="42">"CONNECT %s HTTP/1.1\r\nHost: %s\r\n\r\n"<pos:position pos:line="24" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="85">ip<pos:position pos:line="24" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="89">ip<pos:position pos:line="24" pos:column="91"/></name></expr></argument>)<pos:position pos:line="24" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="93"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">bool<pos:position pos:line="25" pos:column="13"/></name></type> <name pos:line="25" pos:column="14">ret<pos:position pos:line="25" pos:column="17"/></name> <init pos:line="25" pos:column="18">= <expr><call><name><name pos:line="25" pos:column="20">connState<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">handleReadData<pos:position pos:line="25" pos:column="45"/></name></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">reqStr<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="54">strlen<pos:position pos:line="25" pos:column="60"/></name><argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">reqStr<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="70"/></decl_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">ret<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="13">ret<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name><name pos:line="27" pos:column="19">connState<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">clientParseRequests<pos:position pos:line="27" pos:column="49"/></name></name><argument_list pos:line="27" pos:column="49">()<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt></block></then></if>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">ret<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">debugs<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><literal type="number" pos:line="30" pos:column="20">33<pos:position pos:line="30" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="24">2<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="27">HERE<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">&lt;&lt;<pos:position pos:line="30" pos:column="40"/></operator> <literal type="string" pos:line="30" pos:column="35">"Failed to start fake CONNECT request for ssl bumped connection: "<pos:position pos:line="30" pos:column="101"/></literal> <operator pos:line="30" pos:column="102">&lt;&lt;<pos:position pos:line="30" pos:column="110"/></operator> <name><name pos:line="30" pos:column="105">connState<pos:position pos:line="30" pos:column="114"/></name><operator pos:line="30" pos:column="114">-&gt;<pos:position pos:line="30" pos:column="119"/></operator><name pos:line="30" pos:column="116">clientConnection<pos:position pos:line="30" pos:column="132"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="134"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">connState<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">clientConnection<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">close<pos:position pos:line="31" pos:column="47"/></name></name><argument_list pos:line="31" pos:column="47">()<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

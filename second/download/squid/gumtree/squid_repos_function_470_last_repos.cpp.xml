<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_470_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpReply<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">updateOnNotModified<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">HttpReply<pos:position pos:line="2" pos:column="41"/></name> <specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">freshRep<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">freshRep<pos:position pos:line="4" pos:column="20"/></name></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* update raw headers */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">header<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">update<pos:position pos:line="7" pos:column="23"/></name></name><argument_list pos:line="7" pos:column="23">(<argument><expr><operator pos:line="7" pos:column="24">&amp;<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="25">freshRep<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">header<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* clean cache */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">hdrCacheClean<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">()<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">header<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">compact<pos:position pos:line="13" pos:column="19"/></name></name><argument_list pos:line="13" pos:column="19">()<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="14" pos:column="5">/* init cache */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">hdrCacheInit<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">()<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

    <return pos:line="17" pos:column="5">return <expr><literal type="boolean" pos:line="17" pos:column="12">true<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

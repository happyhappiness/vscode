<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5585_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DiskThreadsDiskFile<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">OpenDone<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">fd<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">void<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">cbdata<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">buf<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">int<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">aio_return<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="86">int<pos:position pos:line="2" pos:column="89"/></name></type> <name pos:line="2" pos:column="90">aio_errno<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="100"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DiskThreadsDiskFile<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">myFile<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><cast type="static" pos:line="4" pos:column="35">static_cast<argument_list type="generic" pos:line="4" pos:column="46">&lt;<argument><expr><name pos:line="4" pos:column="47">DiskThreadsDiskFile<pos:position pos:line="4" pos:column="66"/></name> <operator pos:line="4" pos:column="67">*<pos:position pos:line="4" pos:column="68"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="72"/></argument_list><argument_list pos:line="4" pos:column="69">(<argument><expr><name pos:line="4" pos:column="70">cbdata<pos:position pos:line="4" pos:column="76"/></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="78"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">myFile<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">openDone<pos:position pos:line="5" pos:column="21"/></name></name> <argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">fd<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">buf<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">aio_return<pos:position pos:line="5" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="44">aio_errno<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3165_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">check_gss_err<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">OM_uint32<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">major_status<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">OM_uint32<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">minor_status<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">function<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <block pos:line="2" pos:column="45">{
        <if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">GSS_ERROR<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">major_status<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <block pos:line="3" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="4" pos:column="13">OM_uint32<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">maj_stat<pos:position pos:line="4" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="33">min_stat<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="5" pos:column="13">OM_uint32<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">msg_ctx<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="6" pos:column="13">gss_buffer_desc<pos:position pos:line="6" pos:column="28"/></name></type> <name pos:line="6" pos:column="29">status_string<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="7" pos:column="13">char<pos:position pos:line="7" pos:column="17"/></name></type> <name><name pos:line="7" pos:column="18">buf<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">1024<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="8" pos:column="13">size_t<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">len<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

            <expr_stmt><expr><name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name pos:line="11" pos:column="13">msg_ctx<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
            <while pos:line="12" pos:column="13">while <condition pos:line="12" pos:column="19">(<expr><operator pos:line="12" pos:column="20">!<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">msg_ctx<pos:position pos:line="12" pos:column="28"/></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition> <block pos:line="12" pos:column="30">{
                <comment type="block" pos:line="13" pos:column="17">/* convert major status code (GSS-API error) to text */</comment>
                <expr_stmt><expr><name pos:line="14" pos:column="17">maj_stat<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">gss_display_status<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><operator pos:line="14" pos:column="47">&amp;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="48">min_stat<pos:position pos:line="14" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">major_status<pos:position pos:line="14" pos:column="70"/></name></expr></argument>,
                                              <argument><expr><name pos:line="15" pos:column="47">GSS_C_GSS_CODE<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">GSS_C_NULL_OID<pos:position pos:line="15" pos:column="77"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="79">&amp;<pos:position pos:line="15" pos:column="84"/></operator><name pos:line="15" pos:column="80">msg_ctx<pos:position pos:line="15" pos:column="87"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="89">&amp;<pos:position pos:line="15" pos:column="94"/></operator><name pos:line="15" pos:column="90">status_string<pos:position pos:line="15" pos:column="103"/></name></expr></argument>)<pos:position pos:line="15" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="105"/></expr_stmt>
                <if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">maj_stat<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">GSS_S_COMPLETE<pos:position pos:line="16" pos:column="47"/></name></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <block pos:line="16" pos:column="49">{
                    <if pos:line="17" pos:column="21">if <condition pos:line="17" pos:column="24">(<expr><sizeof pos:line="17" pos:column="25">sizeof<argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">buf<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></sizeof> <operator pos:line="17" pos:column="37">&gt;<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="39">len<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">+<pos:position pos:line="17" pos:column="44"/></operator> <name><name pos:line="17" pos:column="45">status_string<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">.<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">length<pos:position pos:line="17" pos:column="65"/></name></name> <operator pos:line="17" pos:column="66">+<pos:position pos:line="17" pos:column="67"/></operator> <literal type="number" pos:line="17" pos:column="68">1<pos:position pos:line="17" pos:column="69"/></literal></expr>)<pos:position pos:line="17" pos:column="70"/></condition><then pos:line="17" pos:column="70"> <block pos:line="17" pos:column="71">{
                        <expr_stmt><expr><call><name pos:line="18" pos:column="25">memcpy<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">buf<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">+<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">len<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">status_string<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">.<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="57">value<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="19" pos:column="32">status_string<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">length<pos:position pos:line="19" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="20" pos:column="25">len<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">+=<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">status_string<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">length<pos:position pos:line="20" pos:column="52"/></name></name></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
                    }<pos:position pos:line="21" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="22" pos:column="21">gss_release_buffer<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><operator pos:line="22" pos:column="40">&amp;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="41">min_stat<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="51">&amp;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="52">status_string<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
                    <break pos:line="23" pos:column="21">break;<pos:position pos:line="23" pos:column="27"/></break>
                }<pos:position pos:line="24" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">gss_release_buffer<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><operator pos:line="25" pos:column="36">&amp;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="37">min_stat<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="47">&amp;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="48">status_string<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></while>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><sizeof pos:line="27" pos:column="17">sizeof<argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">buf<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></sizeof> <operator pos:line="27" pos:column="29">&gt;<pos:position pos:line="27" pos:column="33"/></operator> <name pos:line="27" pos:column="31">len<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">+<pos:position pos:line="27" pos:column="36"/></operator> <literal type="number" pos:line="27" pos:column="37">2<pos:position pos:line="27" pos:column="38"/></literal></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39"> <block pos:line="27" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">strcpy<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">buf<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">+<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">len<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="35">". "<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="29" pos:column="17">len<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">+=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">2<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="31" pos:column="13">msg_ctx<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
            <while pos:line="32" pos:column="13">while <condition pos:line="32" pos:column="19">(<expr><operator pos:line="32" pos:column="20">!<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">msg_ctx<pos:position pos:line="32" pos:column="28"/></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition> <block pos:line="32" pos:column="30">{
                <comment type="block" pos:line="33" pos:column="17">/* convert minor status code (underlying routine error) to text */</comment>
                <expr_stmt><expr><name pos:line="34" pos:column="17">maj_stat<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <call><name pos:line="34" pos:column="28">gss_display_status<pos:position pos:line="34" pos:column="46"/></name><argument_list pos:line="34" pos:column="46">(<argument><expr><operator pos:line="34" pos:column="47">&amp;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="48">min_stat<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">minor_status<pos:position pos:line="34" pos:column="70"/></name></expr></argument>,
                                              <argument><expr><name pos:line="35" pos:column="47">GSS_C_MECH_CODE<pos:position pos:line="35" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">GSS_C_NULL_OID<pos:position pos:line="35" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="80">&amp;<pos:position pos:line="35" pos:column="85"/></operator><name pos:line="35" pos:column="81">msg_ctx<pos:position pos:line="35" pos:column="88"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="90">&amp;<pos:position pos:line="35" pos:column="95"/></operator><name pos:line="35" pos:column="91">status_string<pos:position pos:line="35" pos:column="104"/></name></expr></argument>)<pos:position pos:line="35" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="106"/></expr_stmt>
                <if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">maj_stat<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">==<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">GSS_S_COMPLETE<pos:position pos:line="36" pos:column="47"/></name></expr>)<pos:position pos:line="36" pos:column="48"/></condition><then pos:line="36" pos:column="48"> <block pos:line="36" pos:column="49">{
                    <if pos:line="37" pos:column="21">if <condition pos:line="37" pos:column="24">(<expr><sizeof pos:line="37" pos:column="25">sizeof<argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">buf<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></sizeof> <operator pos:line="37" pos:column="37">&gt;<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="39">len<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">+<pos:position pos:line="37" pos:column="44"/></operator> <name><name pos:line="37" pos:column="45">status_string<pos:position pos:line="37" pos:column="58"/></name><operator pos:line="37" pos:column="58">.<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="59">length<pos:position pos:line="37" pos:column="65"/></name></name></expr>)<pos:position pos:line="37" pos:column="66"/></condition><then pos:line="37" pos:column="66"> <block pos:line="37" pos:column="67">{
                        <expr_stmt><expr><call><name pos:line="38" pos:column="25">memcpy<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">buf<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">+<pos:position pos:line="38" pos:column="37"/></operator> <name pos:line="38" pos:column="38">len<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="43">status_string<pos:position pos:line="38" pos:column="56"/></name><operator pos:line="38" pos:column="56">.<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="57">value<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>,
                               <argument><expr><name><name pos:line="39" pos:column="32">status_string<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">.<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="46">length<pos:position pos:line="39" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="40" pos:column="25">len<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">+=<pos:position pos:line="40" pos:column="31"/></operator> <name><name pos:line="40" pos:column="32">status_string<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">.<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="46">length<pos:position pos:line="40" pos:column="52"/></name></name></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
                    }<pos:position pos:line="41" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="42" pos:column="21">gss_release_buffer<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><operator pos:line="42" pos:column="40">&amp;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="41">min_stat<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="51">&amp;<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="52">status_string<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
                    <break pos:line="43" pos:column="21">break;<pos:position pos:line="43" pos:column="27"/></break>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">gss_release_buffer<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><operator pos:line="45" pos:column="36">&amp;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="37">min_stat<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="47">&amp;<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="48">status_string<pos:position pos:line="45" pos:column="61"/></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="46" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">debugs<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="number" pos:line="47" pos:column="20">11<pos:position pos:line="47" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="24">5<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">HERE<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">&lt;&lt;<pos:position pos:line="47" pos:column="40"/></operator> <name pos:line="47" pos:column="35">function<pos:position pos:line="47" pos:column="43"/></name> <operator pos:line="47" pos:column="44">&lt;&lt;<pos:position pos:line="47" pos:column="52"/></operator> <literal type="string" pos:line="47" pos:column="47">"failed: "<pos:position pos:line="47" pos:column="57"/></literal> <operator pos:line="47" pos:column="58">&lt;&lt;<pos:position pos:line="47" pos:column="66"/></operator> <name pos:line="47" pos:column="61">buf<pos:position pos:line="47" pos:column="64"/></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt>
            <return pos:line="48" pos:column="13">return <expr><operator pos:line="48" pos:column="20">(<pos:position pos:line="48" pos:column="21"/></operator><literal type="number" pos:line="48" pos:column="21">1<pos:position pos:line="48" pos:column="22"/></literal><operator pos:line="48" pos:column="22">)<pos:position pos:line="48" pos:column="23"/></operator></expr>;<pos:position pos:line="48" pos:column="24"/></return>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
        <return pos:line="50" pos:column="9">return <expr><operator pos:line="50" pos:column="16">(<pos:position pos:line="50" pos:column="17"/></operator><literal type="number" pos:line="50" pos:column="17">0<pos:position pos:line="50" pos:column="18"/></literal><operator pos:line="50" pos:column="18">)<pos:position pos:line="50" pos:column="19"/></operator></expr>;<pos:position pos:line="50" pos:column="20"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4438_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">proccessNewRequest<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">Ssl<pos:position pos:line="1" pos:column="35"/></name><operator pos:line="1" pos:column="35">::<pos:position pos:line="1" pos:column="37"/></operator><name pos:line="1" pos:column="37">CrtdMessage<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">&amp;<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="51">request_message<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="68">std<pos:position pos:line="1" pos:column="71"/></name><operator pos:line="1" pos:column="71">::<pos:position pos:line="1" pos:column="73"/></operator><name pos:line="1" pos:column="73">string<pos:position pos:line="1" pos:column="79"/></name></name> <specifier pos:line="1" pos:column="80">const<pos:position pos:line="1" pos:column="85"/></specifier> <modifier pos:line="1" pos:column="86">&amp;<pos:position pos:line="1" pos:column="91"/></modifier></type> <name pos:line="1" pos:column="88">db_path<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="97">size_t<pos:position pos:line="1" pos:column="103"/></name></type> <name pos:line="1" pos:column="104">max_db_size<pos:position pos:line="1" pos:column="115"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="117">size_t<pos:position pos:line="1" pos:column="123"/></name></type> <name pos:line="1" pos:column="124">fs_block_size<pos:position pos:line="1" pos:column="137"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="138"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">Ssl<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">CertificateProperties<pos:position pos:line="3" pos:column="31"/></name></name></type> <name pos:line="3" pos:column="32">certProperties<pos:position pos:line="3" pos:column="46"/></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">string<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">error<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">request_message<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">parseRequest<pos:position pos:line="5" pos:column="38"/></name></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">certProperties<pos:position pos:line="5" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="55">error<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="62"/></condition><then pos:line="5" pos:column="62">
        <block type="pseudo"><throw pos:line="6" pos:column="9">throw <expr><call><name><name pos:line="6" pos:column="15">std<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">runtime_error<pos:position pos:line="6" pos:column="33"/></name></name><argument_list pos:line="6" pos:column="33">(<argument><expr><literal type="string" pos:line="6" pos:column="34">"Error while parsing the crtd request: "<pos:position pos:line="6" pos:column="74"/></literal> <operator pos:line="6" pos:column="75">+<pos:position pos:line="6" pos:column="76"/></operator> <name pos:line="6" pos:column="77">error<pos:position pos:line="6" pos:column="82"/></name></expr></argument>)<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="84"/></throw></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">Ssl<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">::<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">CertificateDb<pos:position pos:line="8" pos:column="23"/></name></name></type> <name pos:line="8" pos:column="24">db<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">db_path<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">max_db_size<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">fs_block_size<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Ssl<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">::<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">X509_Pointer<pos:position pos:line="10" pos:column="22"/></name></name></type> <name pos:line="10" pos:column="23">cert<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">Ssl<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">::<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">EVP_PKEY_Pointer<pos:position pos:line="11" pos:column="26"/></name></name></type> <name pos:line="11" pos:column="27">pkey<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">std<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">::<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">string<pos:position pos:line="12" pos:column="16"/></name></name> <modifier pos:line="12" pos:column="17">&amp;<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="18">cert_subject<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><call><name><name pos:line="12" pos:column="33">certProperties<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">dbKey<pos:position pos:line="12" pos:column="53"/></name></name><argument_list pos:line="12" pos:column="53">()<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="56"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">db<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">.<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">find<pos:position pos:line="14" pos:column="12"/></name></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">cert_subject<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">cert<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">pkey<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">cert<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">get<pos:position pos:line="16" pos:column="17"/></name></name><argument_list pos:line="16" pos:column="17">()<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name><name pos:line="17" pos:column="14">Ssl<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">::<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">certificateMatchesProperties<pos:position pos:line="17" pos:column="47"/></name></name><argument_list pos:line="17" pos:column="47">(<argument><expr><call><name><name pos:line="17" pos:column="48">cert<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">.<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">get<pos:position pos:line="17" pos:column="56"/></name></name><argument_list pos:line="17" pos:column="56">()<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">certProperties<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="76"/></condition><then pos:line="17" pos:column="76"> <block pos:line="17" pos:column="77">{
            <comment type="line" pos:line="18" pos:column="13">// The certificate changed (renewed or other reason).</comment>
            <comment type="line" pos:line="19" pos:column="13">// Generete a new one with the updated fields.</comment>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">cert<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">.<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">reset<pos:position pos:line="20" pos:column="23"/></name></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">pkey<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">reset<pos:position pos:line="21" pos:column="23"/></name></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">db<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">purgeCert<pos:position pos:line="22" pos:column="25"/></name></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">cert_subject<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">cert<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">||<pos:position pos:line="26" pos:column="17"/></operator> <operator pos:line="26" pos:column="18">!<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">pkey<pos:position pos:line="26" pos:column="23"/></name></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name><name pos:line="27" pos:column="14">Ssl<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">::<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">generateSslCertificate<pos:position pos:line="27" pos:column="41"/></name></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">cert<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">pkey<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">certProperties<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="70"/></condition><then pos:line="27" pos:column="70">
            <block type="pseudo"><throw pos:line="28" pos:column="13">throw <expr><call><name><name pos:line="28" pos:column="19">std<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">::<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">runtime_error<pos:position pos:line="28" pos:column="37"/></name></name><argument_list pos:line="28" pos:column="37">(<argument><expr><literal type="string" pos:line="28" pos:column="38">"Cannot create ssl certificate or private key."<pos:position pos:line="28" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="87"/></throw></block></then></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name><name pos:line="30" pos:column="14">db<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">.<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">addCertAndPrivateKey<pos:position pos:line="30" pos:column="37"/></name></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">cert<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">pkey<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">cert_subject<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call> <operator pos:line="30" pos:column="64">&amp;&amp;<pos:position pos:line="30" pos:column="74"/></operator> <call><name><name pos:line="30" pos:column="67">db<pos:position pos:line="30" pos:column="69"/></name><operator pos:line="30" pos:column="69">.<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="70">IsEnabledDiskStore<pos:position pos:line="30" pos:column="88"/></name></name><argument_list pos:line="30" pos:column="88">()<pos:position pos:line="30" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="91"/></condition><then pos:line="30" pos:column="91">
            <block type="pseudo"><throw pos:line="31" pos:column="13">throw <expr><call><name><name pos:line="31" pos:column="19">std<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">::<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">runtime_error<pos:position pos:line="31" pos:column="37"/></name></name><argument_list pos:line="31" pos:column="37">(<argument><expr><literal type="string" pos:line="31" pos:column="38">"Cannot add certificate to db."<pos:position pos:line="31" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="71"/></throw></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="34" pos:column="5">std<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">::<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">string<pos:position pos:line="34" pos:column="16"/></name></name></type> <name pos:line="34" pos:column="17">bufferToWrite<pos:position pos:line="34" pos:column="30"/></name></decl>;<pos:position pos:line="34" pos:column="31"/></decl_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><call><name><name pos:line="35" pos:column="10">Ssl<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">::<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">writeCertAndPrivateKeyToMemory<pos:position pos:line="35" pos:column="45"/></name></name><argument_list pos:line="35" pos:column="45">(<argument><expr><name pos:line="35" pos:column="46">cert<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="52">pkey<pos:position pos:line="35" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="58">bufferToWrite<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="73"/></condition><then pos:line="35" pos:column="73">
        <block type="pseudo"><throw pos:line="36" pos:column="9">throw <expr><call><name><name pos:line="36" pos:column="15">std<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">::<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">runtime_error<pos:position pos:line="36" pos:column="33"/></name></name><argument_list pos:line="36" pos:column="33">(<argument><expr><literal type="string" pos:line="36" pos:column="34">"Cannot write ssl certificate or/and private key to memory."<pos:position pos:line="36" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="96"/></throw></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="38" pos:column="5">Ssl<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">::<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">CrtdMessage<pos:position pos:line="38" pos:column="21"/></name></name></type> <name pos:line="38" pos:column="22">response_message<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name><name pos:line="38" pos:column="39">Ssl<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">::<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="44">CrtdMessage<pos:position pos:line="38" pos:column="55"/></name><operator pos:line="38" pos:column="55">::<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="57">REPLY<pos:position pos:line="38" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></decl>;<pos:position pos:line="38" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">response_message<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">setCode<pos:position pos:line="39" pos:column="29"/></name></name><argument_list pos:line="39" pos:column="29">(<argument><expr><literal type="string" pos:line="39" pos:column="30">"OK"<pos:position pos:line="39" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="40" pos:column="5">response_message<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">setBody<pos:position pos:line="40" pos:column="29"/></name></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">bufferToWrite<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>

    <comment type="line" pos:line="42" pos:column="5">// Use the '\1' char as end-of-message character</comment>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">std<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">::<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">cout<pos:position pos:line="43" pos:column="14"/></name></name> <operator pos:line="43" pos:column="15">&lt;&lt;<pos:position pos:line="43" pos:column="23"/></operator> <call><name><name pos:line="43" pos:column="18">response_message<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">.<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">compose<pos:position pos:line="43" pos:column="42"/></name></name><argument_list pos:line="43" pos:column="42">()<pos:position pos:line="43" pos:column="44"/></argument_list></call> <operator pos:line="43" pos:column="45">&lt;&lt;<pos:position pos:line="43" pos:column="53"/></operator> <literal type="char" pos:line="43" pos:column="48">'\1'<pos:position pos:line="43" pos:column="52"/></literal> <operator pos:line="43" pos:column="53">&lt;&lt;<pos:position pos:line="43" pos:column="61"/></operator> <name><name pos:line="43" pos:column="56">std<pos:position pos:line="43" pos:column="59"/></name><operator pos:line="43" pos:column="59">::<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="61">flush<pos:position pos:line="43" pos:column="66"/></name></name></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>

    <return pos:line="45" pos:column="5">return <expr><literal type="boolean" pos:line="45" pos:column="12">true<pos:position pos:line="45" pos:column="16"/></literal></expr>;<pos:position pos:line="45" pos:column="17"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

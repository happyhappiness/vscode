<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2607_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CommAcceptCbPtrFun<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">print<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name><name pos:line="2" pos:column="27">std<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ostream<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">os<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">os<pos:position pos:line="4" pos:column="7"/></name> <operator pos:line="4" pos:column="8">&lt;&lt;<pos:position pos:line="4" pos:column="16"/></operator> <literal type="char" pos:line="4" pos:column="11">'('<pos:position pos:line="4" pos:column="14"/></literal></expr>;<pos:position pos:line="4" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">params<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">print<pos:position pos:line="5" pos:column="17"/></name></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">os<pos:position pos:line="5" pos:column="20"/></name></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">os<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">&lt;&lt;<pos:position pos:line="6" pos:column="16"/></operator> <literal type="char" pos:line="6" pos:column="11">')'<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

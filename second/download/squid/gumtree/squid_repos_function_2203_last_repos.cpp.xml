<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2203_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">readServer<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">len<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">Comm<pos:position pos:line="2" pos:column="53"/></name><operator pos:line="2" pos:column="53">::<pos:position pos:line="2" pos:column="55"/></operator><name pos:line="2" pos:column="55">Flag<pos:position pos:line="2" pos:column="59"/></name></name></type> <name pos:line="2" pos:column="60">errcode<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">int<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">xerrno<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">26<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name><name pos:line="4" pos:column="27">server<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">.<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">conn<pos:position pos:line="4" pos:column="38"/></name></name> <operator pos:line="4" pos:column="39">&lt;&lt;<pos:position pos:line="4" pos:column="47"/></operator> <literal type="string" pos:line="4" pos:column="42">", read "<pos:position pos:line="4" pos:column="51"/></literal> <operator pos:line="4" pos:column="52">&lt;&lt;<pos:position pos:line="4" pos:column="60"/></operator> <name pos:line="4" pos:column="55">len<pos:position pos:line="4" pos:column="58"/></name> <operator pos:line="4" pos:column="59">&lt;&lt;<pos:position pos:line="4" pos:column="67"/></operator> <literal type="string" pos:line="4" pos:column="62">" bytes, err="<pos:position pos:line="4" pos:column="76"/></literal> <operator pos:line="4" pos:column="77">&lt;&lt;<pos:position pos:line="4" pos:column="85"/></operator> <name pos:line="4" pos:column="80">errcode<pos:position pos:line="4" pos:column="87"/></name></expr></argument>)<pos:position pos:line="4" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="89"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">server<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">delayedLoops<pos:position pos:line="5" pos:column="24"/></name></name><operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="7" pos:column="5">/*
     * Bail out early on Comm::ERR_CLOSING
     * - close handlers will tidy up for us
     */</comment>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">errcode<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <name><name pos:line="12" pos:column="20">Comm<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">::<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">ERR_CLOSING<pos:position pos:line="12" pos:column="37"/></name></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
        <block type="pseudo"><return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">&gt;<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">server<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">bytesIn<pos:position pos:line="16" pos:column="23"/></name></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">len<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">statCounter<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">server<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">.<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">all<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">.<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">kbytes_in<pos:position pos:line="17" pos:column="41"/></name></name> <operator pos:line="17" pos:column="42">+=<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">len<pos:position pos:line="17" pos:column="48"/></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">statCounter<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">.<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">server<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">other<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">.<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">kbytes_in<pos:position pos:line="18" pos:column="43"/></name></name> <operator pos:line="18" pos:column="44">+=<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="47">len<pos:position pos:line="18" pos:column="50"/></name></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">keepGoingAfterRead<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">len<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">errcode<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">xerrno<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">server<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">client<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="9">copy<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">len<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">server<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">client<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">WriteClientDone<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt></block></then></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5655_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">squidaio_poll_queues<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">void<pos:position pos:line="2" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* kick "overflow" request queue */</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">request_queue2<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">.<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">head<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">&amp;&amp;<pos:position pos:line="6" pos:column="39"/></operator>
            <operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">WaitForSingleObject<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name><name pos:line="7" pos:column="34">request_queue<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">.<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">mutex<pos:position pos:line="7" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="55">0<pos:position pos:line="7" pos:column="56"/></literal></expr></argument> )<pos:position pos:line="7" pos:column="58"/></argument_list></call><operator pos:line="7" pos:column="58">==<pos:position pos:line="7" pos:column="60"/></operator> <name pos:line="7" pos:column="61">WAIT_OBJECT_0<pos:position pos:line="7" pos:column="74"/></name><operator pos:line="7" pos:column="74">)<pos:position pos:line="7" pos:column="75"/></operator></expr>)<pos:position pos:line="7" pos:column="76"/></condition><then pos:line="7" pos:column="76"> <block pos:line="7" pos:column="77">{
        <expr_stmt><expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">request_queue<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">tailp<pos:position pos:line="8" pos:column="29"/></name></name> <operator pos:line="8" pos:column="30">=<pos:position pos:line="8" pos:column="31"/></operator> <name><name pos:line="8" pos:column="32">request_queue2<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">head<pos:position pos:line="8" pos:column="51"/></name></name></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">request_queue<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">tailp<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name><name pos:line="9" pos:column="31">request_queue2<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">tailp<pos:position pos:line="9" pos:column="51"/></name></name></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">SetEvent<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name><name pos:line="11" pos:column="23">request_queue<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">cond<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">fatal<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"couldn't push queue\n"<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then></if>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">ReleaseMutex<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name><name pos:line="14" pos:column="27">request_queue<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">.<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">mutex<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48"> <block pos:line="14" pos:column="49">{
            <comment type="block" pos:line="15" pos:column="13">/* unexpected error */</comment>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="18" pos:column="9">Sleep<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">request_queue2<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">.<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">head<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">NULL<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">request_queue2<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">tailp<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator><name><name pos:line="20" pos:column="33">request_queue2<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">.<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">head<pos:position pos:line="20" pos:column="52"/></name></name></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* poll done queue */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">done_queue<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">head<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">&amp;&amp;<pos:position pos:line="24" pos:column="35"/></operator>
            <operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">WaitForSingleObject<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name><name pos:line="25" pos:column="34">done_queue<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">mutex<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="52">0<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call><operator pos:line="25" pos:column="54">==<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">WAIT_OBJECT_0<pos:position pos:line="25" pos:column="69"/></name><operator pos:line="25" pos:column="69">)<pos:position pos:line="25" pos:column="70"/></operator></expr>)<pos:position pos:line="25" pos:column="71"/></condition><then pos:line="25" pos:column="71"> <block pos:line="25" pos:column="72">{

        <decl_stmt><decl><type><name><name pos:line="27" pos:column="9">struct<pos:position pos:line="27" pos:column="15"/></name> <name pos:line="27" pos:column="16">squidaio_request_t<pos:position pos:line="27" pos:column="34"/></name></name> <modifier pos:line="27" pos:column="35">*<pos:position pos:line="27" pos:column="36"/></modifier></type><name pos:line="27" pos:column="36">requests<pos:position pos:line="27" pos:column="44"/></name> <init pos:line="27" pos:column="45">= <expr><name><name pos:line="27" pos:column="47">done_queue<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">.<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">head<pos:position pos:line="27" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="63"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">done_queue<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">head<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">NULL<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">done_queue<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">tailp<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name><name pos:line="29" pos:column="29">done_queue<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">.<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="40">head<pos:position pos:line="29" pos:column="44"/></name></name></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">ReleaseMutex<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">done_queue<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">mutex<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45"> <block pos:line="31" pos:column="46">{
            <comment type="block" pos:line="32" pos:column="13">/* unexpected error */</comment>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="35" pos:column="9">Sleep<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name><name pos:line="36" pos:column="10">done_requests<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">tailp<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <name pos:line="36" pos:column="32">requests<pos:position pos:line="36" pos:column="40"/></name></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">request_queue_len<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">-=<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="30">1<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>

        <while pos:line="39" pos:column="9">while <condition pos:line="39" pos:column="15">(<expr><name><name pos:line="39" pos:column="16">requests<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">next<pos:position pos:line="39" pos:column="30"/></name></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition> <block pos:line="39" pos:column="32">{
            <expr_stmt><expr><name pos:line="40" pos:column="13">requests<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <name><name pos:line="40" pos:column="24">requests<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">next<pos:position pos:line="40" pos:column="38"/></name></name></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">request_queue_len<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">-=<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></while>

        <expr_stmt><expr><name><name pos:line="44" pos:column="9">done_requests<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">.<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">tailp<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <operator pos:line="44" pos:column="31">&amp;<pos:position pos:line="44" pos:column="36"/></operator><name><name pos:line="44" pos:column="32">requests<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">next<pos:position pos:line="44" pos:column="46"/></name></name></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

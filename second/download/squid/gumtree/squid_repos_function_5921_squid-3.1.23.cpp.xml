<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5921_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">setsockopt<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">SOCKET<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">s<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">l<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">o<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">v<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">n<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SOCKET<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">socket<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">socket<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><ternary><condition><expr><operator pos:line="6" pos:column="15">(<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">s<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">INVALID_SOCKET<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">)<pos:position pos:line="6" pos:column="36"/></operator></expr> ?<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <expr><name pos:line="6" pos:column="39">s<pos:position pos:line="6" pos:column="40"/></name></expr> <pos:position pos:line="6" pos:column="41"/></then><else pos:line="6" pos:column="41">: <expr><operator pos:line="6" pos:column="43">(<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">SOCKET<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator><call><name pos:line="6" pos:column="51">_get_osfhandle<pos:position pos:line="6" pos:column="65"/></name><argument_list pos:line="6" pos:column="65">(<argument><expr><operator pos:line="6" pos:column="66">(<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="67">int<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">)<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="71">s<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></else></ternary><operator pos:line="6" pos:column="73">)<pos:position pos:line="6" pos:column="74"/></operator></expr>;<pos:position pos:line="6" pos:column="75"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><operator pos:line="8" pos:column="9">::<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">setsockopt<pos:position pos:line="8" pos:column="21"/></name></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">socket<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">l<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">o<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">v<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">n<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="45">SOCKET_ERROR<pos:position pos:line="8" pos:column="57"/></name></expr>)<pos:position pos:line="8" pos:column="58"/></condition><then pos:line="8" pos:column="58"> <block pos:line="8" pos:column="59">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">errno<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">WSAGetLastError<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">()<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

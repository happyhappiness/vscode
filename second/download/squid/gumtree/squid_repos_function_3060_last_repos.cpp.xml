<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3060_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">switchToHttps<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">HttpRequest<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">request<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="52">Ssl<pos:position pos:line="2" pos:column="55"/></name><operator pos:line="2" pos:column="55">::<pos:position pos:line="2" pos:column="57"/></operator><name pos:line="2" pos:column="57">BumpMode<pos:position pos:line="2" pos:column="65"/></name></name></type> <name pos:line="2" pos:column="66">bumpServerMode<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">switchedToHttps_<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">sslConnectHostOrIp<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name><name pos:line="6" pos:column="26">request<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">url<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">host<pos:position pos:line="6" pos:column="43"/></name></name><argument_list pos:line="6" pos:column="43">()<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">resetSslCommonName<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><call><name><name pos:line="7" pos:column="24">request<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">url<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">.<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">host<pos:position pos:line="7" pos:column="41"/></name></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>

    <comment type="line" pos:line="9" pos:column="5">// We are going to read new request</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">flags<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">readMore<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="boolean" pos:line="10" pos:column="22">true<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">33<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">5<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">HERE<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&lt;&lt;<pos:position pos:line="11" pos:column="32"/></operator> <literal type="string" pos:line="11" pos:column="27">"converting "<pos:position pos:line="11" pos:column="40"/></literal> <operator pos:line="11" pos:column="41">&lt;&lt;<pos:position pos:line="11" pos:column="49"/></operator> <name pos:line="11" pos:column="44">clientConnection<pos:position pos:line="11" pos:column="60"/></name> <operator pos:line="11" pos:column="61">&lt;&lt;<pos:position pos:line="11" pos:column="69"/></operator> <literal type="string" pos:line="11" pos:column="64">" to SSL"<pos:position pos:line="11" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>

    <comment type="line" pos:line="13" pos:column="5">// keep version major.minor details the same.</comment>
    <comment type="line" pos:line="14" pos:column="5">// but we are now performing the HTTPS handshake traffic</comment>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">transferProtocol<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">protocol<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <name><name pos:line="15" pos:column="33">AnyP<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">::<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">PROTO_HTTPS<pos:position pos:line="15" pos:column="50"/></name></name></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>

    <comment type="line" pos:line="17" pos:column="5">// If sslServerBump is set, then we have decided to deny CONNECT</comment>
    <comment type="line" pos:line="18" pos:column="5">// and now want to switch to SSL to send the error to the client</comment>
    <comment type="line" pos:line="19" pos:column="5">// without even peeking at the origin server certificate.</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">bumpServerMode<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">==<pos:position pos:line="20" pos:column="26"/></operator> <name><name pos:line="20" pos:column="27">Ssl<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">::<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">bumpServerFirst<pos:position pos:line="20" pos:column="47"/></name></name> <operator pos:line="20" pos:column="48">&amp;&amp;<pos:position pos:line="20" pos:column="58"/></operator> <operator pos:line="20" pos:column="51">!<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="52">sslServerBump<pos:position pos:line="20" pos:column="65"/></name></expr>)<pos:position pos:line="20" pos:column="66"/></condition><then pos:line="20" pos:column="66"> <block pos:line="20" pos:column="67">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">request<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">flags<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">sslPeek<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="boolean" pos:line="21" pos:column="34">true<pos:position pos:line="21" pos:column="38"/></literal></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">sslServerBump<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <operator pos:line="22" pos:column="25">new<pos:position pos:line="22" pos:column="28"/></operator> <call><name><name pos:line="22" pos:column="29">Ssl<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">::<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">ServerBump<pos:position pos:line="22" pos:column="44"/></name></name><argument_list pos:line="22" pos:column="44">(<argument><expr><name pos:line="22" pos:column="45">request<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">bumpServerMode<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">==<pos:position pos:line="23" pos:column="33"/></operator> <name><name pos:line="23" pos:column="34">Ssl<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">::<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">bumpPeek<pos:position pos:line="23" pos:column="47"/></name></name> <operator pos:line="23" pos:column="48">||<pos:position pos:line="23" pos:column="50"/></operator> <name pos:line="23" pos:column="51">bumpServerMode<pos:position pos:line="23" pos:column="65"/></name> <operator pos:line="23" pos:column="66">==<pos:position pos:line="23" pos:column="68"/></operator> <name><name pos:line="23" pos:column="69">Ssl<pos:position pos:line="23" pos:column="72"/></name><operator pos:line="23" pos:column="72">::<pos:position pos:line="23" pos:column="74"/></operator><name pos:line="23" pos:column="74">bumpStare<pos:position pos:line="23" pos:column="83"/></name></name></expr>)<pos:position pos:line="23" pos:column="84"/></condition><then pos:line="23" pos:column="84"> <block pos:line="23" pos:column="85">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">request<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">flags<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">sslPeek<pos:position pos:line="24" pos:column="31"/></name></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <literal type="boolean" pos:line="24" pos:column="34">true<pos:position pos:line="24" pos:column="38"/></literal></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">sslServerBump<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <operator pos:line="25" pos:column="25">new<pos:position pos:line="25" pos:column="28"/></operator> <call><name><name pos:line="25" pos:column="29">Ssl<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">::<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">ServerBump<pos:position pos:line="25" pos:column="44"/></name></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">request<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">NULL<pos:position pos:line="25" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="60">bumpServerMode<pos:position pos:line="25" pos:column="74"/></name></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif></if>

    <comment type="line" pos:line="28" pos:column="5">// commSetConnTimeout() was called for this request before we switched.</comment>
    <comment type="line" pos:line="29" pos:column="5">// Fix timeout to request_start_timeout</comment>
    <typedef pos:line="30" pos:column="5">typedef <type><name><name pos:line="30" pos:column="13">CommCbMemFunT<pos:position pos:line="30" pos:column="26"/></name><argument_list type="generic" pos:line="30" pos:column="26">&lt;<argument><expr><name pos:line="30" pos:column="27">ConnStateData<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">CommTimeoutCbParams<pos:position pos:line="30" pos:column="61"/></name></expr></argument>&gt;<pos:position pos:line="30" pos:column="65"/></argument_list></name></type> <name pos:line="30" pos:column="63">TimeoutDialer<pos:position pos:line="30" pos:column="76"/></name>;<pos:position pos:line="30" pos:column="77"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">AsyncCall<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">::<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">Pointer<pos:position pos:line="31" pos:column="23"/></name></name></type> <name pos:line="31" pos:column="24">timeoutCall<pos:position pos:line="31" pos:column="35"/></name> <init pos:line="31" pos:column="36">=  <expr><call><name pos:line="31" pos:column="39">JobCallback<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><literal type="number" pos:line="31" pos:column="51">33<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="55">5<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="32" pos:column="39">TimeoutDialer<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">this<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="60">ConnStateData<pos:position pos:line="32" pos:column="73"/></name><operator pos:line="32" pos:column="73">::<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="75">requestTimeout<pos:position pos:line="32" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="91"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">commSetConnTimeout<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">clientConnection<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="42">Config<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">.<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="49">Timeout<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">.<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">request_start_timeout<pos:position pos:line="33" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="80">timeoutCall<pos:position pos:line="33" pos:column="91"/></name></expr></argument>)<pos:position pos:line="33" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="93"/></expr_stmt>
    <comment type="line" pos:line="34" pos:column="5">// Also reset receivedFirstByte_ flag to allow this timeout work in the case we have</comment>
    <comment type="line" pos:line="35" pos:column="5">// a bumbed "connect" request on non transparent port.</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">receivedFirstByte_<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="boolean" pos:line="36" pos:column="26">false<pos:position pos:line="36" pos:column="31"/></literal></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    <comment type="line" pos:line="37" pos:column="5">// Get more data to peek at Tls</comment>
    <expr_stmt><expr><name pos:line="38" pos:column="5">parsingTlsHandshake<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <literal type="boolean" pos:line="38" pos:column="27">true<pos:position pos:line="38" pos:column="31"/></literal></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">readSomeData<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">()<pos:position pos:line="39" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

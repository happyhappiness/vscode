<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3843_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">AccessCheck<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">usedDynamicRules<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">()<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Adaptation<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">History<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">::<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">Pointer<pos:position pos:line="4" pos:column="33"/></name></name></type> <name pos:line="4" pos:column="34">ah<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><call><name><name pos:line="4" pos:column="39">filter<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">.<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="46">request<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">-&gt;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="55">adaptHistory<pos:position pos:line="4" pos:column="67"/></name></name><argument_list pos:line="4" pos:column="67">()<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">ah<pos:position pos:line="5" pos:column="12"/></name></expr>)<pos:position pos:line="5" pos:column="13"/></condition><then pos:line="5" pos:column="13">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="6" pos:column="23">// dynamic rules not enabled or not triggered</comment>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">DynamicGroupCfg<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">services<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name><name pos:line="9" pos:column="10">ah<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">extractFutureServices<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">services<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{ <comment type="line" pos:line="9" pos:column="49">// clears history</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">85<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="19">9<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="22">HERE<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&lt;&lt;<pos:position pos:line="10" pos:column="35"/></operator> <literal type="string" pos:line="10" pos:column="30">"no service-proposed rules stored"<pos:position pos:line="10" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return> <comment type="line" pos:line="11" pos:column="23">// earlier service did not plan for the future</comment>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">85<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="15">3<pos:position pos:line="14" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="18">HERE<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;&lt;<pos:position pos:line="14" pos:column="31"/></operator> <literal type="string" pos:line="14" pos:column="26">"using stored service-proposed rules: "<pos:position pos:line="14" pos:column="65"/></literal> <operator pos:line="14" pos:column="66">&lt;&lt;<pos:position pos:line="14" pos:column="74"/></operator> <name pos:line="14" pos:column="69">services<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="79"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">ServiceGroupPointer<pos:position pos:line="16" pos:column="24"/></name></type> <name pos:line="16" pos:column="25">g<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><operator pos:line="16" pos:column="29">new<pos:position pos:line="16" pos:column="32"/></operator> <call><name pos:line="16" pos:column="33">DynamicServiceChain<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">services<pos:position pos:line="16" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">filter<pos:position pos:line="16" pos:column="69"/></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="71"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">callBack<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">g<pos:position pos:line="17" pos:column="15"/></name></expr></argument>)<pos:position pos:line="17" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">Must<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><call><name pos:line="18" pos:column="10">done<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">()<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><literal type="boolean" pos:line="19" pos:column="12">true<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

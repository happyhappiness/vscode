<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4636_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">UFSSwapDir<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">changeIO<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">DiskIOModule<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">module<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DiskIOStrategy<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">anIO<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name><name pos:line="4" pos:column="28">module<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">createStrategy<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">safe_free<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">ioType<pos:position pos:line="5" pos:column="21"/></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">ioType<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">xstrdup<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><call><name><name pos:line="6" pos:column="22">module<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">type<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">()<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="8" pos:column="5">delete<pos:position pos:line="8" pos:column="11"/></operator> <name><name pos:line="8" pos:column="12">IO<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">io<pos:position pos:line="8" pos:column="18"/></name></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">IO<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">io<pos:position pos:line="9" pos:column="11"/></name></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">anIO<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    <comment type="block" pos:line="10" pos:column="5">/* Change the IO Options */</comment>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">currentIOOptions<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">&amp;&amp;<pos:position pos:line="12" pos:column="36"/></operator> <call><name><name pos:line="12" pos:column="29">currentIOOptions<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">options<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">.<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="55">size<pos:position pos:line="12" pos:column="59"/></name></name><argument_list pos:line="12" pos:column="59">()<pos:position pos:line="12" pos:column="61"/></argument_list></call> <operator pos:line="12" pos:column="62">&gt;<pos:position pos:line="12" pos:column="66"/></operator> <literal type="number" pos:line="12" pos:column="64">2<pos:position pos:line="12" pos:column="65"/></literal></expr>)<pos:position pos:line="12" pos:column="66"/></condition><then pos:line="12" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="9">delete<pos:position pos:line="13" pos:column="15"/></operator> <call><name><name pos:line="13" pos:column="16">currentIOOptions<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">options<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">pop_back<pos:position pos:line="13" pos:column="50"/></name></name><argument_list pos:line="13" pos:column="50">()<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* TODO: factor out these 4 lines */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">ConfigOption<pos:position pos:line="16" pos:column="17"/></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">ioOptions<pos:position pos:line="16" pos:column="28"/></name> <init pos:line="16" pos:column="29">= <expr><call><name><name pos:line="16" pos:column="31">IO<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">io<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">getOptionTree<pos:position pos:line="16" pos:column="52"/></name></name><argument_list pos:line="16" pos:column="52">()<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="55"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">ioOptions<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="9">currentIOOptions<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">options<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">push_back<pos:position pos:line="19" pos:column="44"/></name></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">ioOptions<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></then></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

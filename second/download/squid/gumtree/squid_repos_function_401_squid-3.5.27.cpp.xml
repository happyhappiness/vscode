<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_401_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">get_ad_groups<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">ad_groups<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">krb5_context<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">context<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">krb5_pac<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">pac<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">krb5_error_code<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">ret<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">EffectiveName<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">FullName<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">LogonScript<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="8" pos:column="23"/></name></type> <name pos:line="8" pos:column="24">ProfilePath<pos:position pos:line="8" pos:column="35"/></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="9" pos:column="23"/></name></type> <name pos:line="9" pos:column="24">HomeDirectory<pos:position pos:line="9" pos:column="37"/></name></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="10" pos:column="23"/></name></type> <name pos:line="10" pos:column="24">HomeDirectoryDrive<pos:position pos:line="10" pos:column="42"/></name></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="11" pos:column="23"/></name></type> <name pos:line="11" pos:column="24">LogonServer<pos:position pos:line="11" pos:column="35"/></name></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">RPC_UNICODE_STRING<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">LogonDomainName<pos:position pos:line="12" pos:column="39"/></name></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">uint32_t<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">GroupCount<pos:position pos:line="13" pos:column="24"/></name><init pos:line="13" pos:column="24">=<expr><literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">uint32_t<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">GroupIds<pos:position pos:line="14" pos:column="22"/></name><init pos:line="14" pos:column="22">=<expr><literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">uint32_t<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">LogonDomainId<pos:position pos:line="15" pos:column="27"/></name><init pos:line="15" pos:column="27">=<expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">uint32_t<pos:position pos:line="16" pos:column="13"/></name></type> <name pos:line="16" pos:column="14">SidCount<pos:position pos:line="16" pos:column="22"/></name><init pos:line="16" pos:column="22">=<expr><literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">uint32_t<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">ExtraSids<pos:position pos:line="17" pos:column="23"/></name><init pos:line="17" pos:column="23">=<expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>
    <comment type="block" pos:line="18" pos:column="5">/*
    uint32_t ResourceGroupDomainSid=0;
    uint32_t ResourceGroupCount=0;
    uint32_t ResourceGroupIds=0;
    */</comment>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier><modifier pos:line="23" pos:column="11">*<pos:position pos:line="23" pos:column="12"/></modifier></type><name pos:line="23" pos:column="12">Rids<pos:position pos:line="23" pos:column="16"/></name><init pos:line="23" pos:column="16">=<expr><name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">l<pos:position pos:line="24" pos:column="10"/></name><init pos:line="24" pos:column="10">=<expr><literal type="number" pos:line="24" pos:column="11">0<pos:position pos:line="24" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="13"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">ad_groups<pos:position pos:line="26" pos:column="19"/></name></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20"> <block pos:line="26" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debug<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><operator pos:line="27" pos:column="15">(<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">char<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">*<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="22">)<pos:position pos:line="27" pos:column="23"/></operator> <literal type="string" pos:line="27" pos:column="24">"%s| %s: ERR: No space to store groups\n"<pos:position pos:line="27" pos:column="65"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="28" pos:column="15">LogTime<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">()<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">PROGRAM<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">NULL<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">ad_data<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <operator pos:line="32" pos:column="15">(<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">krb5_data<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">*<pos:position pos:line="32" pos:column="27"/></operator><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator><call><name pos:line="32" pos:column="28">xcalloc<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><literal type="number" pos:line="32" pos:column="36">1<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>,<argument><expr><sizeof pos:line="32" pos:column="38">sizeof<argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">krb5_data<pos:position pos:line="32" pos:column="54"/></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>

<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define<pos:position pos:line="34" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">KERB_LOGON_INFO<pos:position pos:line="34" pos:column="24"/></name></cpp:macro> <cpp:value pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></cpp:value></cpp:define>
    <expr_stmt><expr><name pos:line="35" pos:column="5">ret<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <call><name pos:line="35" pos:column="11">krb5_pac_get_buffer<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">context<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">pac<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">KERB_LOGON_INFO<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="62">ad_data<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">check_k5_err<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">context<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="31">"krb5_pac_get_buffer"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">ret<pos:position pos:line="36" pos:column="57"/></name></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="59"/></condition><then pos:line="36" pos:column="59">
        <block type="pseudo"><goto pos:line="37" pos:column="9">goto <name pos:line="37" pos:column="14">k5clean<pos:position pos:line="37" pos:column="21"/></name>;<pos:position pos:line="37" pos:column="22"/></goto></block></then></if>

    <expr_stmt><expr><name pos:line="39" pos:column="5">p<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">unsigned<pos:position pos:line="39" pos:column="18"/></name> <name pos:line="39" pos:column="19">char<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">*<pos:position pos:line="39" pos:column="25"/></operator><operator pos:line="39" pos:column="25">)<pos:position pos:line="39" pos:column="26"/></operator><name><name pos:line="39" pos:column="26">ad_data<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">data<pos:position pos:line="39" pos:column="39"/></name></name></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">debug<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><operator pos:line="41" pos:column="11">(<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">char<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><operator pos:line="41" pos:column="18">)<pos:position pos:line="41" pos:column="19"/></operator> <literal type="string" pos:line="41" pos:column="20">"%s| %s: INFO: Got PAC data of lengh %d\n"<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="42" pos:column="11">LogTime<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">()<pos:position pos:line="42" pos:column="20"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="22">PROGRAM<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="31">(<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">int<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">)<pos:position pos:line="42" pos:column="36"/></operator><name><name pos:line="42" pos:column="36">ad_data<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">length<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* Skip 16 bytes icommon RPC header
     * Skip 4 bytes RPC unique pointer referent
     * http://msdn.microsoft.com/en-gb/library/cc237933.aspx
     */</comment>
    <comment type="block" pos:line="48" pos:column="5">/* Some data are pointers to data which follows the main KRB5 LOGON structure =&gt;
     *         So need to read the data
     * some logical consistency checks are done when analysineg the pointer data
     */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">bpos<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <literal type="number" pos:line="52" pos:column="12">20<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
    <comment type="block" pos:line="53" pos:column="5">/* 8 bytes LogonTime
     * 8 bytes LogoffTime
     * 8 bytes KickOffTime
     * 8 bytes PasswordLastSet
     * 8 bytes PasswordCanChange
     * 8 bytes PasswordMustChange
     */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">bpos<pos:position pos:line="60" pos:column="9"/></name> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator> <name pos:line="60" pos:column="12">bpos<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">+<pos:position pos:line="60" pos:column="17"/></operator><literal type="number" pos:line="60" pos:column="17">48<pos:position pos:line="60" pos:column="19"/></literal></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">getustr<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><operator pos:line="61" pos:column="13">&amp;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="14">EffectiveName<pos:position pos:line="61" pos:column="27"/></name></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">getustr<pos:position pos:line="62" pos:column="12"/></name><argument_list pos:line="62" pos:column="12">(<argument><expr><operator pos:line="62" pos:column="13">&amp;<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="14">FullName<pos:position pos:line="62" pos:column="22"/></name></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">getustr<pos:position pos:line="63" pos:column="12"/></name><argument_list pos:line="63" pos:column="12">(<argument><expr><operator pos:line="63" pos:column="13">&amp;<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="14">LogonScript<pos:position pos:line="63" pos:column="25"/></name></expr></argument>)<pos:position pos:line="63" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">getustr<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><operator pos:line="64" pos:column="13">&amp;<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="14">ProfilePath<pos:position pos:line="64" pos:column="25"/></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">getustr<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><operator pos:line="65" pos:column="13">&amp;<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="14">HomeDirectory<pos:position pos:line="65" pos:column="27"/></name></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">getustr<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><operator pos:line="66" pos:column="13">&amp;<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="14">HomeDirectoryDrive<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="67" pos:column="5">/* 2 bytes LogonCount
     * 2 bytes BadPasswordCount
     * 4 bytes UserID
     * 4 bytes PrimaryGroupId
     */</comment>
    <expr_stmt><expr><name pos:line="72" pos:column="5">bpos<pos:position pos:line="72" pos:column="9"/></name> <operator pos:line="72" pos:column="10">=<pos:position pos:line="72" pos:column="11"/></operator> <name pos:line="72" pos:column="12">bpos<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">+<pos:position pos:line="72" pos:column="17"/></operator><literal type="number" pos:line="72" pos:column="17">12<pos:position pos:line="72" pos:column="19"/></literal></expr>;<pos:position pos:line="72" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="73" pos:column="5">GroupCount<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <call><name pos:line="73" pos:column="18">get4byt<pos:position pos:line="73" pos:column="25"/></name><argument_list pos:line="73" pos:column="25">()<pos:position pos:line="73" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="74" pos:column="5">GroupIds<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <call><name pos:line="74" pos:column="16">get4byt<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">()<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>
    <comment type="block" pos:line="75" pos:column="5">/* 4 bytes UserFlags
     * 16 bytes UserSessionKey
     */</comment>
    <expr_stmt><expr><name pos:line="78" pos:column="5">bpos<pos:position pos:line="78" pos:column="9"/></name> <operator pos:line="78" pos:column="10">=<pos:position pos:line="78" pos:column="11"/></operator> <name pos:line="78" pos:column="12">bpos<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">+<pos:position pos:line="78" pos:column="17"/></operator><literal type="number" pos:line="78" pos:column="17">20<pos:position pos:line="78" pos:column="19"/></literal></expr>;<pos:position pos:line="78" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">getustr<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><operator pos:line="79" pos:column="13">&amp;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="14">LogonServer<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">getustr<pos:position pos:line="80" pos:column="12"/></name><argument_list pos:line="80" pos:column="12">(<argument><expr><operator pos:line="80" pos:column="13">&amp;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="14">LogonDomainName<pos:position pos:line="80" pos:column="29"/></name></expr></argument>)<pos:position pos:line="80" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="81" pos:column="5">LogonDomainId<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">=<pos:position pos:line="81" pos:column="20"/></operator> <call><name pos:line="81" pos:column="21">get4byt<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">()<pos:position pos:line="81" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="82" pos:column="5">/* 8 bytes Reserved1
     * 4 bytes UserAccountControl
     * 4 bytes SubAuthStatus
     * 8 bytes LastSuccessfullLogon
     * 8 bytes LastFailedLogon
     * 4 bytes FailedLogonCount
     * 4 bytes Reserved2
     */</comment>
    <expr_stmt><expr><name pos:line="90" pos:column="5">bpos<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">=<pos:position pos:line="90" pos:column="11"/></operator> <name pos:line="90" pos:column="12">bpos<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">+<pos:position pos:line="90" pos:column="17"/></operator><literal type="number" pos:line="90" pos:column="17">40<pos:position pos:line="90" pos:column="19"/></literal></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="91" pos:column="5">SidCount<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <call><name pos:line="91" pos:column="16">get4byt<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">()<pos:position pos:line="91" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="92" pos:column="5">ExtraSids<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">=<pos:position pos:line="92" pos:column="16"/></operator> <call><name pos:line="92" pos:column="17">get4byt<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">()<pos:position pos:line="92" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="93" pos:column="5">/* 4 bytes ResourceGroupDomainSid
     * 4 bytes ResourceGroupCount
     * 4 bytes ResourceGroupIds
     */</comment>
    <expr_stmt><expr><name pos:line="97" pos:column="5">bpos<pos:position pos:line="97" pos:column="9"/></name> <operator pos:line="97" pos:column="10">=<pos:position pos:line="97" pos:column="11"/></operator> <name pos:line="97" pos:column="12">bpos<pos:position pos:line="97" pos:column="16"/></name><operator pos:line="97" pos:column="16">+<pos:position pos:line="97" pos:column="17"/></operator><literal type="number" pos:line="97" pos:column="17">12<pos:position pos:line="97" pos:column="19"/></literal></expr>;<pos:position pos:line="97" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="98" pos:column="5">/*
     * Read all data from structure =&gt; Now check pointers
     */</comment>
    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><call><name pos:line="101" pos:column="9">checkustr<pos:position pos:line="101" pos:column="18"/></name><argument_list pos:line="101" pos:column="18">(<argument><expr><operator pos:line="101" pos:column="19">&amp;<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="20">EffectiveName<pos:position pos:line="101" pos:column="33"/></name></expr></argument>)<pos:position pos:line="101" pos:column="34"/></argument_list></call><operator pos:line="101" pos:column="34">&lt;<pos:position pos:line="101" pos:column="38"/></operator><literal type="number" pos:line="101" pos:column="35">0<pos:position pos:line="101" pos:column="36"/></literal></expr>)<pos:position pos:line="101" pos:column="37"/></condition><then pos:line="101" pos:column="37">
        <block type="pseudo"><goto pos:line="102" pos:column="9">goto <name pos:line="102" pos:column="14">k5clean<pos:position pos:line="102" pos:column="21"/></name>;<pos:position pos:line="102" pos:column="22"/></goto></block></then></if>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><call><name pos:line="103" pos:column="9">checkustr<pos:position pos:line="103" pos:column="18"/></name><argument_list pos:line="103" pos:column="18">(<argument><expr><operator pos:line="103" pos:column="19">&amp;<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="20">FullName<pos:position pos:line="103" pos:column="28"/></name></expr></argument>)<pos:position pos:line="103" pos:column="29"/></argument_list></call><operator pos:line="103" pos:column="29">&lt;<pos:position pos:line="103" pos:column="33"/></operator><literal type="number" pos:line="103" pos:column="30">0<pos:position pos:line="103" pos:column="31"/></literal></expr>)<pos:position pos:line="103" pos:column="32"/></condition><then pos:line="103" pos:column="32">
        <block type="pseudo"><goto pos:line="104" pos:column="9">goto <name pos:line="104" pos:column="14">k5clean<pos:position pos:line="104" pos:column="21"/></name>;<pos:position pos:line="104" pos:column="22"/></goto></block></then></if>
    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><call><name pos:line="105" pos:column="9">checkustr<pos:position pos:line="105" pos:column="18"/></name><argument_list pos:line="105" pos:column="18">(<argument><expr><operator pos:line="105" pos:column="19">&amp;<pos:position pos:line="105" pos:column="24"/></operator><name pos:line="105" pos:column="20">LogonScript<pos:position pos:line="105" pos:column="31"/></name></expr></argument>)<pos:position pos:line="105" pos:column="32"/></argument_list></call><operator pos:line="105" pos:column="32">&lt;<pos:position pos:line="105" pos:column="36"/></operator><literal type="number" pos:line="105" pos:column="33">0<pos:position pos:line="105" pos:column="34"/></literal></expr>)<pos:position pos:line="105" pos:column="35"/></condition><then pos:line="105" pos:column="35">
        <block type="pseudo"><goto pos:line="106" pos:column="9">goto <name pos:line="106" pos:column="14">k5clean<pos:position pos:line="106" pos:column="21"/></name>;<pos:position pos:line="106" pos:column="22"/></goto></block></then></if>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><call><name pos:line="107" pos:column="9">checkustr<pos:position pos:line="107" pos:column="18"/></name><argument_list pos:line="107" pos:column="18">(<argument><expr><operator pos:line="107" pos:column="19">&amp;<pos:position pos:line="107" pos:column="24"/></operator><name pos:line="107" pos:column="20">ProfilePath<pos:position pos:line="107" pos:column="31"/></name></expr></argument>)<pos:position pos:line="107" pos:column="32"/></argument_list></call><operator pos:line="107" pos:column="32">&lt;<pos:position pos:line="107" pos:column="36"/></operator><literal type="number" pos:line="107" pos:column="33">0<pos:position pos:line="107" pos:column="34"/></literal></expr>)<pos:position pos:line="107" pos:column="35"/></condition><then pos:line="107" pos:column="35">
        <block type="pseudo"><goto pos:line="108" pos:column="9">goto <name pos:line="108" pos:column="14">k5clean<pos:position pos:line="108" pos:column="21"/></name>;<pos:position pos:line="108" pos:column="22"/></goto></block></then></if>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><call><name pos:line="109" pos:column="9">checkustr<pos:position pos:line="109" pos:column="18"/></name><argument_list pos:line="109" pos:column="18">(<argument><expr><operator pos:line="109" pos:column="19">&amp;<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="20">HomeDirectory<pos:position pos:line="109" pos:column="33"/></name></expr></argument>)<pos:position pos:line="109" pos:column="34"/></argument_list></call><operator pos:line="109" pos:column="34">&lt;<pos:position pos:line="109" pos:column="38"/></operator><literal type="number" pos:line="109" pos:column="35">0<pos:position pos:line="109" pos:column="36"/></literal></expr>)<pos:position pos:line="109" pos:column="37"/></condition><then pos:line="109" pos:column="37">
        <block type="pseudo"><goto pos:line="110" pos:column="9">goto <name pos:line="110" pos:column="14">k5clean<pos:position pos:line="110" pos:column="21"/></name>;<pos:position pos:line="110" pos:column="22"/></goto></block></then></if>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><call><name pos:line="111" pos:column="9">checkustr<pos:position pos:line="111" pos:column="18"/></name><argument_list pos:line="111" pos:column="18">(<argument><expr><operator pos:line="111" pos:column="19">&amp;<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="20">HomeDirectoryDrive<pos:position pos:line="111" pos:column="38"/></name></expr></argument>)<pos:position pos:line="111" pos:column="39"/></argument_list></call><operator pos:line="111" pos:column="39">&lt;<pos:position pos:line="111" pos:column="43"/></operator><literal type="number" pos:line="111" pos:column="40">0<pos:position pos:line="111" pos:column="41"/></literal></expr>)<pos:position pos:line="111" pos:column="42"/></condition><then pos:line="111" pos:column="42">
        <block type="pseudo"><goto pos:line="112" pos:column="9">goto <name pos:line="112" pos:column="14">k5clean<pos:position pos:line="112" pos:column="21"/></name>;<pos:position pos:line="112" pos:column="22"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="113" pos:column="5">Rids<pos:position pos:line="113" pos:column="9"/></name> <operator pos:line="113" pos:column="10">=<pos:position pos:line="113" pos:column="11"/></operator> <call><name pos:line="113" pos:column="12">getgids<pos:position pos:line="113" pos:column="19"/></name><argument_list pos:line="113" pos:column="19">(<argument><expr><name pos:line="113" pos:column="20">Rids<pos:position pos:line="113" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="113" pos:column="25">GroupIds<pos:position pos:line="113" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="113" pos:column="34">GroupCount<pos:position pos:line="113" pos:column="44"/></name></expr></argument>)<pos:position pos:line="113" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="46"/></expr_stmt>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><call><name pos:line="114" pos:column="9">checkustr<pos:position pos:line="114" pos:column="18"/></name><argument_list pos:line="114" pos:column="18">(<argument><expr><operator pos:line="114" pos:column="19">&amp;<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="20">LogonServer<pos:position pos:line="114" pos:column="31"/></name></expr></argument>)<pos:position pos:line="114" pos:column="32"/></argument_list></call><operator pos:line="114" pos:column="32">&lt;<pos:position pos:line="114" pos:column="36"/></operator><literal type="number" pos:line="114" pos:column="33">0<pos:position pos:line="114" pos:column="34"/></literal></expr>)<pos:position pos:line="114" pos:column="35"/></condition><then pos:line="114" pos:column="35">
        <block type="pseudo"><goto pos:line="115" pos:column="9">goto <name pos:line="115" pos:column="14">k5clean<pos:position pos:line="115" pos:column="21"/></name>;<pos:position pos:line="115" pos:column="22"/></goto></block></then></if>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><call><name pos:line="116" pos:column="9">checkustr<pos:position pos:line="116" pos:column="18"/></name><argument_list pos:line="116" pos:column="18">(<argument><expr><operator pos:line="116" pos:column="19">&amp;<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="20">LogonDomainName<pos:position pos:line="116" pos:column="35"/></name></expr></argument>)<pos:position pos:line="116" pos:column="36"/></argument_list></call><operator pos:line="116" pos:column="36">&lt;<pos:position pos:line="116" pos:column="40"/></operator><literal type="number" pos:line="116" pos:column="37">0<pos:position pos:line="116" pos:column="38"/></literal></expr>)<pos:position pos:line="116" pos:column="39"/></condition><then pos:line="116" pos:column="39">
        <block type="pseudo"><goto pos:line="117" pos:column="9">goto <name pos:line="117" pos:column="14">k5clean<pos:position pos:line="117" pos:column="21"/></name>;<pos:position pos:line="117" pos:column="22"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="118" pos:column="5">ad_groups<pos:position pos:line="118" pos:column="14"/></name> <operator pos:line="118" pos:column="15">=<pos:position pos:line="118" pos:column="16"/></operator> <call><name pos:line="118" pos:column="17">getdomaingids<pos:position pos:line="118" pos:column="30"/></name><argument_list pos:line="118" pos:column="30">(<argument><expr><name pos:line="118" pos:column="31">ad_groups<pos:position pos:line="118" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="118" pos:column="41">LogonDomainId<pos:position pos:line="118" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="118" pos:column="55">Rids<pos:position pos:line="118" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="118" pos:column="60">GroupCount<pos:position pos:line="118" pos:column="70"/></name></expr></argument>)<pos:position pos:line="118" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="72"/></expr_stmt>
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><operator pos:line="119" pos:column="9">(<pos:position pos:line="119" pos:column="10"/></operator><name pos:line="119" pos:column="10">ad_groups<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">=<pos:position pos:line="119" pos:column="21"/></operator> <call><name pos:line="119" pos:column="22">getextrasids<pos:position pos:line="119" pos:column="34"/></name><argument_list pos:line="119" pos:column="34">(<argument><expr><name pos:line="119" pos:column="35">ad_groups<pos:position pos:line="119" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="119" pos:column="45">ExtraSids<pos:position pos:line="119" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="119" pos:column="55">SidCount<pos:position pos:line="119" pos:column="63"/></name></expr></argument>)<pos:position pos:line="119" pos:column="64"/></argument_list></call><operator pos:line="119" pos:column="64">)<pos:position pos:line="119" pos:column="65"/></operator><operator pos:line="119" pos:column="65">==<pos:position pos:line="119" pos:column="67"/></operator><name pos:line="119" pos:column="67">NULL<pos:position pos:line="119" pos:column="71"/></name></expr>)<pos:position pos:line="119" pos:column="72"/></condition><then pos:line="119" pos:column="72">
        <block type="pseudo"><goto pos:line="120" pos:column="9">goto <name pos:line="120" pos:column="14">k5clean<pos:position pos:line="120" pos:column="21"/></name>;<pos:position pos:line="120" pos:column="22"/></goto></block></then></if>

    <expr_stmt><expr><call><name pos:line="122" pos:column="5">debug<pos:position pos:line="122" pos:column="10"/></name><argument_list pos:line="122" pos:column="10">(<argument><expr><operator pos:line="122" pos:column="11">(<pos:position pos:line="122" pos:column="12"/></operator><name pos:line="122" pos:column="12">char<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">*<pos:position pos:line="122" pos:column="18"/></operator><operator pos:line="122" pos:column="18">)<pos:position pos:line="122" pos:column="19"/></operator> <literal type="string" pos:line="122" pos:column="20">"%s| %s: INFO: Read %d of %d bytes \n"<pos:position pos:line="122" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="122" pos:column="60">LogTime<pos:position pos:line="122" pos:column="67"/></name><argument_list pos:line="122" pos:column="67">()<pos:position pos:line="122" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="122" pos:column="71">PROGRAM<pos:position pos:line="122" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="80">bpos<pos:position pos:line="122" pos:column="84"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="86">(<pos:position pos:line="122" pos:column="87"/></operator><name pos:line="122" pos:column="87">int<pos:position pos:line="122" pos:column="90"/></name><operator pos:line="122" pos:column="90">)<pos:position pos:line="122" pos:column="91"/></operator><name><name pos:line="122" pos:column="91">ad_data<pos:position pos:line="122" pos:column="98"/></name><operator pos:line="122" pos:column="98">-&gt;<pos:position pos:line="122" pos:column="103"/></operator><name pos:line="122" pos:column="100">length<pos:position pos:line="122" pos:column="106"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="108"/></expr_stmt>
    <if pos:line="123" pos:column="5">if <condition pos:line="123" pos:column="8">(<expr><name pos:line="123" pos:column="9">Rids<pos:position pos:line="123" pos:column="13"/></name></expr>)<pos:position pos:line="123" pos:column="14"/></condition><then pos:line="123" pos:column="14"> <block pos:line="123" pos:column="15">{
        <for pos:line="124" pos:column="9">for <control pos:line="124" pos:column="13">( <init><expr><name pos:line="124" pos:column="15">l<pos:position pos:line="124" pos:column="16"/></name><operator pos:line="124" pos:column="16">=<pos:position pos:line="124" pos:column="17"/></operator><literal type="number" pos:line="124" pos:column="17">0<pos:position pos:line="124" pos:column="18"/></literal></expr>;<pos:position pos:line="124" pos:column="19"/></init> <condition><expr><name pos:line="124" pos:column="20">l<pos:position pos:line="124" pos:column="21"/></name><operator pos:line="124" pos:column="21">&lt;<pos:position pos:line="124" pos:column="25"/></operator><operator pos:line="124" pos:column="22">(<pos:position pos:line="124" pos:column="23"/></operator><name pos:line="124" pos:column="23">int<pos:position pos:line="124" pos:column="26"/></name><operator pos:line="124" pos:column="26">)<pos:position pos:line="124" pos:column="27"/></operator><name pos:line="124" pos:column="27">GroupCount<pos:position pos:line="124" pos:column="37"/></name></expr>;<pos:position pos:line="124" pos:column="38"/></condition> <incr><expr><name pos:line="124" pos:column="39">l<pos:position pos:line="124" pos:column="40"/></name><operator pos:line="124" pos:column="40">++<pos:position pos:line="124" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="124" pos:column="43"/></control> <block pos:line="124" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="125" pos:column="13">xfree<pos:position pos:line="125" pos:column="18"/></name><argument_list pos:line="125" pos:column="18">(<argument><expr><name><name pos:line="125" pos:column="19">Rids<pos:position pos:line="125" pos:column="23"/></name><index pos:line="125" pos:column="23">[<expr><name pos:line="125" pos:column="24">l<pos:position pos:line="125" pos:column="25"/></name></expr>]<pos:position pos:line="125" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="125" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="126" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">xfree<pos:position pos:line="127" pos:column="14"/></name><argument_list pos:line="127" pos:column="14">(<argument><expr><name pos:line="127" pos:column="15">Rids<pos:position pos:line="127" pos:column="19"/></name></expr></argument>)<pos:position pos:line="127" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">krb5_free_data<pos:position pos:line="129" pos:column="19"/></name><argument_list pos:line="129" pos:column="19">(<argument><expr><name pos:line="129" pos:column="20">context<pos:position pos:line="129" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="29">ad_data<pos:position pos:line="129" pos:column="36"/></name></expr></argument>)<pos:position pos:line="129" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="38"/></expr_stmt>
    <return pos:line="130" pos:column="5">return <expr><name pos:line="130" pos:column="12">ad_groups<pos:position pos:line="130" pos:column="21"/></name></expr>;<pos:position pos:line="130" pos:column="22"/></return>
<label><name pos:line="131" pos:column="1">k5clean<pos:position pos:line="131" pos:column="8"/></name>:<pos:position pos:line="131" pos:column="9"/></label>
    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><name pos:line="132" pos:column="9">Rids<pos:position pos:line="132" pos:column="13"/></name></expr>)<pos:position pos:line="132" pos:column="14"/></condition><then pos:line="132" pos:column="14"> <block pos:line="132" pos:column="15">{
        <for pos:line="133" pos:column="9">for <control pos:line="133" pos:column="13">( <init><expr><name pos:line="133" pos:column="15">l<pos:position pos:line="133" pos:column="16"/></name><operator pos:line="133" pos:column="16">=<pos:position pos:line="133" pos:column="17"/></operator><literal type="number" pos:line="133" pos:column="17">0<pos:position pos:line="133" pos:column="18"/></literal></expr>;<pos:position pos:line="133" pos:column="19"/></init> <condition><expr><name pos:line="133" pos:column="20">l<pos:position pos:line="133" pos:column="21"/></name><operator pos:line="133" pos:column="21">&lt;<pos:position pos:line="133" pos:column="25"/></operator><operator pos:line="133" pos:column="22">(<pos:position pos:line="133" pos:column="23"/></operator><name pos:line="133" pos:column="23">int<pos:position pos:line="133" pos:column="26"/></name><operator pos:line="133" pos:column="26">)<pos:position pos:line="133" pos:column="27"/></operator><name pos:line="133" pos:column="27">GroupCount<pos:position pos:line="133" pos:column="37"/></name></expr>;<pos:position pos:line="133" pos:column="38"/></condition> <incr><expr><name pos:line="133" pos:column="39">l<pos:position pos:line="133" pos:column="40"/></name><operator pos:line="133" pos:column="40">++<pos:position pos:line="133" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="133" pos:column="43"/></control> <block pos:line="133" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">xfree<pos:position pos:line="134" pos:column="18"/></name><argument_list pos:line="134" pos:column="18">(<argument><expr><name><name pos:line="134" pos:column="19">Rids<pos:position pos:line="134" pos:column="23"/></name><index pos:line="134" pos:column="23">[<expr><name pos:line="134" pos:column="24">l<pos:position pos:line="134" pos:column="25"/></name></expr>]<pos:position pos:line="134" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="134" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="135" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="136" pos:column="9">xfree<pos:position pos:line="136" pos:column="14"/></name><argument_list pos:line="136" pos:column="14">(<argument><expr><name pos:line="136" pos:column="15">Rids<pos:position pos:line="136" pos:column="19"/></name></expr></argument>)<pos:position pos:line="136" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">krb5_free_data<pos:position pos:line="138" pos:column="19"/></name><argument_list pos:line="138" pos:column="19">(<argument><expr><name pos:line="138" pos:column="20">context<pos:position pos:line="138" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="29">ad_data<pos:position pos:line="138" pos:column="36"/></name></expr></argument>)<pos:position pos:line="138" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="38"/></expr_stmt>
    <return pos:line="139" pos:column="5">return <expr><name pos:line="139" pos:column="12">NULL<pos:position pos:line="139" pos:column="16"/></name></expr>;<pos:position pos:line="139" pos:column="17"/></return>
}<pos:position pos:line="140" pos:column="2"/></block></function></unit>

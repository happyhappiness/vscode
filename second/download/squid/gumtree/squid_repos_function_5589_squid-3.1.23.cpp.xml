<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5589_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lstring<pos:position pos:line="1" pos:column="8"/></name></type>
<name pos:line="2" pos:column="1">ntlm_fetch_string<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">packet<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">int32_t<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">length<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">strhdr<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type> <name pos:line="2" pos:column="58">str<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int16_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">l<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>			<comment type="block" pos:line="4" pos:column="33">/* length */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int32_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">o<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>			<comment type="block" pos:line="5" pos:column="33">/* offset */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">lstring<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">rv<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">lstring_zero<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></expr></argument>)<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">l<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">le16toh<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name><name pos:line="10" pos:column="17">str<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">len<pos:position pos:line="10" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">o<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">le32toh<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name><name pos:line="11" pos:column="17">str<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">offset<pos:position pos:line="11" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* debug("fetch_string(plength=%d,l=%d,o=%d)\n",length,l,o); */</comment>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">l<pos:position pos:line="14" pos:column="10"/></name> <argument_list type="generic" pos:line="14" pos:column="11">&lt; <argument><expr><literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal> <operator pos:line="14" pos:column="15">||<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">l<pos:position pos:line="14" pos:column="19"/></name></expr></argument> &gt;<pos:position pos:line="14" pos:column="24"/></argument_list></name> <name pos:line="14" pos:column="22">MAX_FIELD_LENGTH<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">||<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">o<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">+<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="46">l<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">&gt;<pos:position pos:line="14" pos:column="52"/></operator> <name pos:line="14" pos:column="50">length<pos:position pos:line="14" pos:column="56"/></name> <operator pos:line="14" pos:column="57">||<pos:position pos:line="14" pos:column="59"/></operator> <name pos:line="14" pos:column="60">o<pos:position pos:line="14" pos:column="61"/></name> <operator pos:line="14" pos:column="62">==<pos:position pos:line="14" pos:column="64"/></operator> <literal type="number" pos:line="14" pos:column="65">0<pos:position pos:line="14" pos:column="66"/></literal></expr>)<pos:position pos:line="14" pos:column="67"/></condition><then pos:line="14" pos:column="67"> <block pos:line="14" pos:column="68">{
        <comment type="block" pos:line="15" pos:column="9">/* debug("ntlmssp: insane data (l: %d, o: %d)\n", l,o); */</comment>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">rv<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">.<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">str<pos:position pos:line="18" pos:column="11"/></name></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">packet<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">+<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">o<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">rv<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">.<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">l<pos:position pos:line="19" pos:column="9"/></name></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">l<pos:position pos:line="19" pos:column="13"/></name></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">rv<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

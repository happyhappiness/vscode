<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_288_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ntlmDecodeAuth<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name><name pos:line="2" pos:column="16">struct<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">ntlm_authenticate<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">auth<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">buf<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">size_t<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">size<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">origbuf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">buf<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14"> <block pos:line="8" pos:column="15">{
        <return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">origbuf<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">buf<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">ntlmCheckHeader<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="26">auth<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">hdr<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="37">NTLM_AUTHENTICATE<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">fprintf<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">stderr<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">"ntlmDecodeAuth: header check fails\n"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debug<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"ntlmDecodeAuth: size of %d\n"<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">(<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">int<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">size<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debug<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"ntlmDecodeAuth: flg %08x\n"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="41">auth<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">flags<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debug<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"ntlmDecodeAuth: usr o(%d) l(%d)\n"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="48">auth<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">user<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">.<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">offset<pos:position pos:line="18" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="67">auth<pos:position pos:line="18" pos:column="71"/></name><operator pos:line="18" pos:column="71">-&gt;<pos:position pos:line="18" pos:column="76"/></operator><name pos:line="18" pos:column="73">user<pos:position pos:line="18" pos:column="77"/></name><operator pos:line="18" pos:column="77">.<pos:position pos:line="18" pos:column="78"/></operator><name pos:line="18" pos:column="78">len<pos:position pos:line="18" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="83"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">p<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">ntlmGetString<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name><name pos:line="20" pos:column="29">auth<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">hdr<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name><name pos:line="20" pos:column="41">auth<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">domain<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="55">auth<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">flags<pos:position pos:line="20" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call><operator pos:line="20" pos:column="67">)<pos:position pos:line="20" pos:column="68"/></operator> <operator pos:line="20" pos:column="69">==<pos:position pos:line="20" pos:column="71"/></operator> <name pos:line="20" pos:column="72">NULL<pos:position pos:line="20" pos:column="76"/></name></expr>)<pos:position pos:line="20" pos:column="77"/></condition><then pos:line="20" pos:column="77">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">p<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">authenticate_ntlm_domain<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debug<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"ntlmDecodeAuth: Domain '%s'.\n"<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">p<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">s<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">strlen<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">p<pos:position pos:line="25" pos:column="22"/></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call> <operator pos:line="25" pos:column="24">+<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="26">1<pos:position pos:line="25" pos:column="27"/></literal><operator pos:line="25" pos:column="27">)<pos:position pos:line="25" pos:column="28"/></operator> <operator pos:line="25" pos:column="29">&gt;=<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="32">size<pos:position pos:line="25" pos:column="36"/></name></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">1<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">strcpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">buf<pos:position pos:line="27" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name></expr></argument>)<pos:position pos:line="27" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debug<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><literal type="string" pos:line="29" pos:column="11">"ntlmDecodeAuth: Domain '%s'.\n"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">buf<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name pos:line="31" pos:column="5">size<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">-=<pos:position pos:line="31" pos:column="12"/></operator> <name pos:line="31" pos:column="13">s<pos:position pos:line="31" pos:column="14"/></name></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">buf<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">+=<pos:position pos:line="32" pos:column="11"/></operator> <operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">s<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">-<pos:position pos:line="32" pos:column="16"/></operator> <literal type="number" pos:line="32" pos:column="17">1<pos:position pos:line="32" pos:column="18"/></literal><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">buf<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">++<pos:position pos:line="33" pos:column="11"/></operator> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <literal type="char" pos:line="33" pos:column="14">'\\'<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>		<comment type="block" pos:line="33" pos:column="33">/* Using \ is more consistent with MS-proxy */</comment>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">( <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">p<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">ntlmGetString<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name><name pos:line="35" pos:column="30">auth<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">hdr<pos:position pos:line="35" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="41">&amp;<pos:position pos:line="35" pos:column="46"/></operator><name><name pos:line="35" pos:column="42">auth<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">user<pos:position pos:line="35" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="54">auth<pos:position pos:line="35" pos:column="58"/></name><operator pos:line="35" pos:column="58">-&gt;<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="60">flags<pos:position pos:line="35" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call><operator pos:line="35" pos:column="66">)<pos:position pos:line="35" pos:column="67"/></operator> <operator pos:line="35" pos:column="68">==<pos:position pos:line="35" pos:column="70"/></operator> <name pos:line="35" pos:column="71">NULL<pos:position pos:line="35" pos:column="75"/></name></expr>)<pos:position pos:line="35" pos:column="76"/></condition><then pos:line="35" pos:column="76">
        <block type="pseudo"><return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">s<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">strlen<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">p<pos:position pos:line="38" pos:column="22"/></name></expr></argument>)<pos:position pos:line="38" pos:column="23"/></argument_list></call> <operator pos:line="38" pos:column="24">+<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">1<pos:position pos:line="38" pos:column="27"/></literal><operator pos:line="38" pos:column="27">)<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="29">&gt;=<pos:position pos:line="38" pos:column="34"/></operator> <name pos:line="38" pos:column="32">size<pos:position pos:line="38" pos:column="36"/></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37">
        <block type="pseudo"><return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return></block></then></if>

    <while pos:line="41" pos:column="5">while <condition pos:line="41" pos:column="11">(<expr><operator pos:line="41" pos:column="12">*<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">p<pos:position pos:line="41" pos:column="14"/></name></expr>)<pos:position pos:line="41" pos:column="15"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="42" pos:column="9">*<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">buf<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">++<pos:position pos:line="42" pos:column="15"/></operator> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <operator pos:line="42" pos:column="18">(<pos:position pos:line="42" pos:column="19"/></operator><operator pos:line="42" pos:column="19">*<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">p<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">++<pos:position pos:line="42" pos:column="23"/></operator><operator pos:line="42" pos:column="23">)<pos:position pos:line="42" pos:column="24"/></operator></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt></block></while>	<comment type="line" pos:line="42" pos:column="33">//tolower</comment>

    <expr_stmt><expr><operator pos:line="44" pos:column="5">*<pos:position pos:line="44" pos:column="6"/></operator><name pos:line="44" pos:column="6">buf<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">++<pos:position pos:line="44" pos:column="11"/></operator> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <literal type="char" pos:line="44" pos:column="14">'\0'<pos:position pos:line="44" pos:column="18"/></literal></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">size<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">-=<pos:position pos:line="45" pos:column="12"/></operator> <name pos:line="45" pos:column="13">s<pos:position pos:line="45" pos:column="14"/></name></expr>;<pos:position pos:line="45" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">debug<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="string" pos:line="47" pos:column="11">"ntlmDecodeAuth: user: %s%s\n"<pos:position pos:line="47" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="43">origbuf<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="52">p<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>

    <return pos:line="49" pos:column="5">return <expr><literal type="number" pos:line="49" pos:column="12">0<pos:position pos:line="49" pos:column="13"/></literal></expr>;<pos:position pos:line="49" pos:column="14"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

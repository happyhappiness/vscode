<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2598_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">ostream<pos:position pos:line="1" pos:column="13"/></name></name><modifier pos:line="1" pos:column="13">&amp;<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name><name pos:line="2" pos:column="1">MemBlob<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">dump<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">std<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">ostream<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">&amp;<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="29">os<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list> <specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">os<pos:position pos:line="4" pos:column="7"/></name> <operator pos:line="4" pos:column="8">&lt;&lt;<pos:position pos:line="4" pos:column="16"/></operator> <literal type="string" pos:line="4" pos:column="11">"id @"<pos:position pos:line="4" pos:column="17"/></literal> <operator pos:line="4" pos:column="18">&lt;&lt;<pos:position pos:line="4" pos:column="26"/></operator> <operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">void<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><operator pos:line="4" pos:column="28">)<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">this<pos:position pos:line="4" pos:column="33"/></name>
       <operator pos:line="5" pos:column="8">&lt;&lt;<pos:position pos:line="5" pos:column="16"/></operator> <literal type="string" pos:line="5" pos:column="11">"mem:"<pos:position pos:line="5" pos:column="17"/></literal> <operator pos:line="5" pos:column="18">&lt;&lt;<pos:position pos:line="5" pos:column="26"/></operator> <cast type="static" pos:line="5" pos:column="21">static_cast<argument_list type="generic" pos:line="5" pos:column="32">&lt;<argument><expr><name pos:line="5" pos:column="33">void<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="42"/></argument_list><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">mem<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></cast>
       <operator pos:line="6" pos:column="8">&lt;&lt;<pos:position pos:line="6" pos:column="16"/></operator> <literal type="string" pos:line="6" pos:column="11">",capacity:"<pos:position pos:line="6" pos:column="23"/></literal> <operator pos:line="6" pos:column="24">&lt;&lt;<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="27">capacity<pos:position pos:line="6" pos:column="35"/></name>
       <operator pos:line="7" pos:column="8">&lt;&lt;<pos:position pos:line="7" pos:column="16"/></operator> <literal type="string" pos:line="7" pos:column="11">",size:"<pos:position pos:line="7" pos:column="19"/></literal> <operator pos:line="7" pos:column="20">&lt;&lt;<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="23">size<pos:position pos:line="7" pos:column="27"/></name>
       <operator pos:line="8" pos:column="8">&lt;&lt;<pos:position pos:line="8" pos:column="16"/></operator> <literal type="string" pos:line="8" pos:column="11">",refs:"<pos:position pos:line="8" pos:column="19"/></literal> <operator pos:line="8" pos:column="20">&lt;&lt;<pos:position pos:line="8" pos:column="28"/></operator> <call><name pos:line="8" pos:column="23">LockCount<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">()<pos:position pos:line="8" pos:column="34"/></argument_list></call> <operator pos:line="8" pos:column="35">&lt;&lt;<pos:position pos:line="8" pos:column="43"/></operator> <literal type="string" pos:line="8" pos:column="38">"; "<pos:position pos:line="8" pos:column="42"/></literal></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">os<pos:position pos:line="9" pos:column="14"/></name></expr>;<pos:position pos:line="9" pos:column="15"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

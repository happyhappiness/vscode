<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_174_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">ntlm_check_auth<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">ntlm_authenticate<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">auth<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">auth_length<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">domain<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">DNLEN<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">+<pos:position pos:line="5" pos:column="23"/></operator><literal type="number" pos:line="5" pos:column="23">1<pos:position pos:line="5" pos:column="24"/></literal></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">user<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">UNLEN<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">+<pos:position pos:line="6" pos:column="21"/></operator><literal type="number" pos:line="6" pos:column="21">1<pos:position pos:line="6" pos:column="22"/></literal></expr>]<pos:position pos:line="6" pos:column="23"/></index></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">credentials<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><name pos:line="7" pos:column="29">DNLEN<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">+<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">UNLEN<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">+<pos:position pos:line="7" pos:column="41"/></operator><literal type="number" pos:line="7" pos:column="41">2<pos:position pos:line="7" pos:column="42"/></literal></expr>]<pos:position pos:line="7" pos:column="43"/></index></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>	<comment type="block" pos:line="7" pos:column="49">/* we can afford to waste */</comment>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">lstring<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">tmp<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">NTLM_LocalCall<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{

        <expr_stmt><expr><name pos:line="13" pos:column="9">tmp<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">ntlm_fetch_string<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><operator pos:line="13" pos:column="33">(<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">char<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">*<pos:position pos:line="13" pos:column="40"/></operator><operator pos:line="13" pos:column="40">)<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">auth<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">auth_length<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="61">&amp;<pos:position pos:line="13" pos:column="66"/></operator><name><name pos:line="13" pos:column="62">auth<pos:position pos:line="13" pos:column="66"/></name><operator pos:line="13" pos:column="66">-&gt;<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="68">domain<pos:position pos:line="13" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="76"/></expr_stmt>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">tmp<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">str<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">==<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">||<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="32">tmp<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">l<pos:position pos:line="15" pos:column="37"/></name></name> <operator pos:line="15" pos:column="38">==<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">0<pos:position pos:line="15" pos:column="42"/></literal></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">debug<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><literal type="string" pos:line="16" pos:column="19">"No domain supplied. Returning no-auth\n"<pos:position pos:line="16" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">ntlm_errno<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">NTLM_BAD_REQUEST<pos:position pos:line="17" pos:column="42"/></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">Use_Unicode<pos:position pos:line="20" pos:column="24"/></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <block pos:line="20" pos:column="26">{
            <comment type="block" pos:line="21" pos:column="13">/* copy unicode buffer */</comment>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">WideCharToMultiByte<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">CP_ACP<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="44">(<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="45">LPCWSTR<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">)<pos:position pos:line="22" pos:column="53"/></operator> <name><name pos:line="22" pos:column="54">tmp<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">.<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="58">str<pos:position pos:line="22" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="63">tmp<pos:position pos:line="22" pos:column="66"/></name><operator pos:line="22" pos:column="66">.<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="67">l<pos:position pos:line="22" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="70">domain<pos:position pos:line="22" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="78">DNLEN<pos:position pos:line="22" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="85">NULL<pos:position pos:line="22" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="91">NULL<pos:position pos:line="22" pos:column="95"/></name></expr></argument> )<pos:position pos:line="22" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="98"/></expr_stmt>
            <comment type="block" pos:line="23" pos:column="13">/* add null termination */</comment>
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">domain<pos:position pos:line="24" pos:column="19"/></name><index pos:line="24" pos:column="19">[<expr><name><name pos:line="24" pos:column="20">tmp<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">l<pos:position pos:line="24" pos:column="25"/></name></name> <operator pos:line="24" pos:column="26">/<pos:position pos:line="24" pos:column="27"/></operator> <sizeof pos:line="24" pos:column="28">sizeof<argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">WCHAR<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></sizeof></expr>]<pos:position pos:line="24" pos:column="42"/></index></name> <operator pos:line="24" pos:column="43">=<pos:position pos:line="24" pos:column="44"/></operator> <literal type="char" pos:line="24" pos:column="45">'\0'<pos:position pos:line="24" pos:column="49"/></literal></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then> <else pos:line="25" pos:column="11">else <block pos:line="25" pos:column="16">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name><name pos:line="26" pos:column="17">tmp<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">l<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">&gt;<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="25">DNLEN<pos:position pos:line="26" pos:column="30"/></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31"> <block pos:line="26" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">debug<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"Domain string exceeds %d bytes, rejecting\n"<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="70">DNLEN<pos:position pos:line="27" pos:column="75"/></name></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name pos:line="28" pos:column="17">ntlm_errno<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">NTLM_BAD_REQUEST<pos:position pos:line="28" pos:column="46"/></name></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
                <return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">NULL<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">memcpy<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">domain<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="28">tmp<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">.<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">str<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="37">tmp<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">.<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">l<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">domain<pos:position pos:line="32" pos:column="19"/></name><index pos:line="32" pos:column="19">[<expr><name><name pos:line="32" pos:column="20">tmp<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">l<pos:position pos:line="32" pos:column="25"/></name></name></expr>]<pos:position pos:line="32" pos:column="26"/></index></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <literal type="char" pos:line="32" pos:column="29">'\0'<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="34" pos:column="9">tmp<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">ntlm_fetch_string<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><operator pos:line="34" pos:column="33">(<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">char<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">*<pos:position pos:line="34" pos:column="40"/></operator><operator pos:line="34" pos:column="40">)<pos:position pos:line="34" pos:column="41"/></operator> <name pos:line="34" pos:column="42">auth<pos:position pos:line="34" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="48">auth_length<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="61">&amp;<pos:position pos:line="34" pos:column="66"/></operator><name><name pos:line="34" pos:column="62">auth<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">-&gt;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="68">user<pos:position pos:line="34" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">tmp<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">str<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">==<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">||<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="32">tmp<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">l<pos:position pos:line="35" pos:column="37"/></name></name> <operator pos:line="35" pos:column="38">==<pos:position pos:line="35" pos:column="40"/></operator> <literal type="number" pos:line="35" pos:column="41">0<pos:position pos:line="35" pos:column="42"/></literal></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <block pos:line="35" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">debug<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><literal type="string" pos:line="36" pos:column="19">"No username supplied. Returning no-auth\n"<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">ntlm_errno<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">NTLM_BAD_REQUEST<pos:position pos:line="37" pos:column="42"/></name></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
            <return pos:line="38" pos:column="13">return <expr><name pos:line="38" pos:column="20">NULL<pos:position pos:line="38" pos:column="24"/></name></expr>;<pos:position pos:line="38" pos:column="25"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">Use_Unicode<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
            <comment type="block" pos:line="41" pos:column="13">/* copy unicode buffer */</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">WideCharToMultiByte<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">CP_ACP<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="41">0<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="44">(<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">LPCWSTR<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">)<pos:position pos:line="42" pos:column="53"/></operator> <name><name pos:line="42" pos:column="54">tmp<pos:position pos:line="42" pos:column="57"/></name><operator pos:line="42" pos:column="57">.<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="58">str<pos:position pos:line="42" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="63">tmp<pos:position pos:line="42" pos:column="66"/></name><operator pos:line="42" pos:column="66">.<pos:position pos:line="42" pos:column="67"/></operator><name pos:line="42" pos:column="67">l<pos:position pos:line="42" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="70">user<pos:position pos:line="42" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="76">UNLEN<pos:position pos:line="42" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="83">NULL<pos:position pos:line="42" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="89">NULL<pos:position pos:line="42" pos:column="93"/></name></expr></argument> )<pos:position pos:line="42" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="96"/></expr_stmt>
            <comment type="block" pos:line="43" pos:column="13">/* add null termination */</comment>
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">user<pos:position pos:line="44" pos:column="17"/></name><index pos:line="44" pos:column="17">[<expr><name><name pos:line="44" pos:column="18">tmp<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">l<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">/<pos:position pos:line="44" pos:column="25"/></operator> <sizeof pos:line="44" pos:column="26">sizeof<argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">WCHAR<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></sizeof></expr>]<pos:position pos:line="44" pos:column="40"/></index></name> <operator pos:line="44" pos:column="41">=<pos:position pos:line="44" pos:column="42"/></operator> <literal type="char" pos:line="44" pos:column="43">'\0'<pos:position pos:line="44" pos:column="47"/></literal></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then> <else pos:line="45" pos:column="11">else <block pos:line="45" pos:column="16">{
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">tmp<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">.<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">l<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">&gt;<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="25">UNLEN<pos:position pos:line="46" pos:column="30"/></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31"> <block pos:line="46" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">debug<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><literal type="string" pos:line="47" pos:column="23">"Username string exceeds %d bytes, rejecting\n"<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="72">UNLEN<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
                <expr_stmt><expr><name pos:line="48" pos:column="17">ntlm_errno<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="30">NTLM_BAD_REQUEST<pos:position pos:line="48" pos:column="46"/></name></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
                <return pos:line="49" pos:column="17">return <expr><name pos:line="49" pos:column="24">NULL<pos:position pos:line="49" pos:column="28"/></name></expr>;<pos:position pos:line="49" pos:column="29"/></return>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">memcpy<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">user<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="26">tmp<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">.<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">str<pos:position pos:line="51" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="35">tmp<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">.<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">l<pos:position pos:line="51" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="52" pos:column="13">user<pos:position pos:line="52" pos:column="17"/></name><index pos:line="52" pos:column="17">[<expr><name><name pos:line="52" pos:column="18">tmp<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">.<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">l<pos:position pos:line="52" pos:column="23"/></name></name></expr>]<pos:position pos:line="52" pos:column="24"/></index></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <literal type="char" pos:line="52" pos:column="27">'\0'<pos:position pos:line="52" pos:column="31"/></literal></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debug<pos:position pos:line="54" pos:column="14"/></name><argument_list pos:line="54" pos:column="14">(<argument><expr><literal type="string" pos:line="54" pos:column="15">"checking domain: '%s', user: '%s'\n"<pos:position pos:line="54" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">domain<pos:position pos:line="54" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="62">user<pos:position pos:line="54" pos:column="66"/></name></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="68"/></expr_stmt>

    }<pos:position pos:line="56" pos:column="6"/></block></then> <else pos:line="56" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="9">debug<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><literal type="string" pos:line="57" pos:column="15">"checking local user\n"<pos:position pos:line="57" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="59" pos:column="5">rv<pos:position pos:line="59" pos:column="7"/></name> <operator pos:line="59" pos:column="8">=<pos:position pos:line="59" pos:column="9"/></operator> <call><name pos:line="59" pos:column="10">SSP_ValidateNTLMCredentials<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">auth<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">auth_length<pos:position pos:line="59" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="57">credentials<pos:position pos:line="59" pos:column="68"/></name></expr></argument>)<pos:position pos:line="59" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">debug<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><literal type="string" pos:line="61" pos:column="11">"Login attempt had result %d\n"<pos:position pos:line="61" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="44">rv<pos:position pos:line="61" pos:column="46"/></name></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="48"/></expr_stmt>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">rv<pos:position pos:line="63" pos:column="12"/></name></expr>)<pos:position pos:line="63" pos:column="13"/></condition><then pos:line="63" pos:column="13"> <block pos:line="63" pos:column="14">{			<comment type="block" pos:line="63" pos:column="33">/* failed */</comment>
        <expr_stmt><expr><name pos:line="64" pos:column="9">ntlm_errno<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <name pos:line="64" pos:column="22">NTLM_SSPI_ERROR<pos:position pos:line="64" pos:column="37"/></name></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
        <return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">NULL<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">UseAllowedGroup<pos:position pos:line="68" pos:column="24"/></name></expr>)<pos:position pos:line="68" pos:column="25"/></condition><then pos:line="68" pos:column="25"> <block pos:line="68" pos:column="26">{
        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><call><name pos:line="69" pos:column="14">Valid_Group<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">credentials<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">NTAllowedGroup<pos:position pos:line="69" pos:column="53"/></name></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="55"/></condition><then pos:line="69" pos:column="55"> <block pos:line="69" pos:column="56">{
            <expr_stmt><expr><name pos:line="70" pos:column="13">ntlm_errno<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">NTLM_BAD_NTGROUP<pos:position pos:line="70" pos:column="42"/></name></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">debug<pos:position pos:line="71" pos:column="18"/></name><argument_list pos:line="71" pos:column="18">(<argument><expr><literal type="string" pos:line="71" pos:column="19">"User %s not in allowed Group %s\n"<pos:position pos:line="71" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="56">credentials<pos:position pos:line="71" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="69">NTAllowedGroup<pos:position pos:line="71" pos:column="83"/></name></expr></argument>)<pos:position pos:line="71" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="85"/></expr_stmt>
            <return pos:line="72" pos:column="13">return <expr><name pos:line="72" pos:column="20">NULL<pos:position pos:line="72" pos:column="24"/></name></expr>;<pos:position pos:line="72" pos:column="25"/></return>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">UseDisallowedGroup<pos:position pos:line="75" pos:column="27"/></name></expr>)<pos:position pos:line="75" pos:column="28"/></condition><then pos:line="75" pos:column="28"> <block pos:line="75" pos:column="29">{
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><call><name pos:line="76" pos:column="13">Valid_Group<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name pos:line="76" pos:column="25">credentials<pos:position pos:line="76" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="38">NTDisAllowedGroup<pos:position pos:line="76" pos:column="55"/></name></expr></argument>)<pos:position pos:line="76" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="57"/></condition><then pos:line="76" pos:column="57"> <block pos:line="76" pos:column="58">{
            <expr_stmt><expr><name pos:line="77" pos:column="13">ntlm_errno<pos:position pos:line="77" pos:column="23"/></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <name pos:line="77" pos:column="26">NTLM_BAD_NTGROUP<pos:position pos:line="77" pos:column="42"/></name></expr>;<pos:position pos:line="77" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">debug<pos:position pos:line="78" pos:column="18"/></name><argument_list pos:line="78" pos:column="18">(<argument><expr><literal type="string" pos:line="78" pos:column="19">"User %s is in denied Group %s\n"<pos:position pos:line="78" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="54">credentials<pos:position pos:line="78" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="67">NTDisAllowedGroup<pos:position pos:line="78" pos:column="84"/></name></expr></argument>)<pos:position pos:line="78" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="86"/></expr_stmt>
            <return pos:line="79" pos:column="13">return <expr><name pos:line="79" pos:column="20">NULL<pos:position pos:line="79" pos:column="24"/></name></expr>;<pos:position pos:line="79" pos:column="25"/></return>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">debug<pos:position pos:line="83" pos:column="10"/></name><argument_list pos:line="83" pos:column="10">(<argument><expr><literal type="string" pos:line="83" pos:column="11">"credentials: %s\n"<pos:position pos:line="83" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="32">credentials<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><name pos:line="84" pos:column="12">credentials<pos:position pos:line="84" pos:column="23"/></name></expr>;<pos:position pos:line="84" pos:column="24"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7472_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">loadSystemTrustedCa<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name><name pos:line="2" pos:column="21">Security<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">ContextPointer<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">ctx<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">83<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">8<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"Setting default system Trusted CA. ctx="<pos:position pos:line="4" pos:column="60"/></literal> <operator pos:line="4" pos:column="61">&lt;&lt;<pos:position pos:line="4" pos:column="69"/></operator> <operator pos:line="4" pos:column="64">(<pos:position pos:line="4" pos:column="65"/></operator><name pos:line="4" pos:column="65">void<pos:position pos:line="4" pos:column="69"/></name><operator pos:line="4" pos:column="69">*<pos:position pos:line="4" pos:column="70"/></operator><operator pos:line="4" pos:column="70">)<pos:position pos:line="4" pos:column="71"/></operator><call><name><name pos:line="4" pos:column="71">ctx<pos:position pos:line="4" pos:column="74"/></name><operator pos:line="4" pos:column="74">.<pos:position pos:line="4" pos:column="75"/></operator><name pos:line="4" pos:column="75">get<pos:position pos:line="4" pos:column="78"/></name></name><argument_list pos:line="4" pos:column="78">()<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="82"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_OPENSSL<pos:position pos:line="5" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">SSL_CTX_set_default_verify_paths<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><call><name><name pos:line="6" pos:column="42">ctx<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">.<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">get<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call> <operator pos:line="6" pos:column="53">==<pos:position pos:line="6" pos:column="55"/></operator> <literal type="number" pos:line="6" pos:column="56">0<pos:position pos:line="6" pos:column="57"/></literal></expr>)<pos:position pos:line="6" pos:column="58"/></condition><then pos:line="6" pos:column="58">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><call><name><name pos:line="7" pos:column="16">Security<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">::<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">ErrorString<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">(<argument><expr><call><name pos:line="7" pos:column="38">ERR_get_error<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">()<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></return></block></then></if>

<cpp:elif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">elif<pos:position pos:line="9" pos:column="6"/></cpp:directive> <expr><name pos:line="9" pos:column="7">USE_GNUTLS<pos:position pos:line="9" pos:column="17"/></name></expr></cpp:elif>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">auto<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">x<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><call><name pos:line="10" pos:column="14">gnutls_certificate_set_x509_system_trust<pos:position pos:line="10" pos:column="54"/></name><argument_list pos:line="10" pos:column="54">(<argument><expr><call><name><name pos:line="10" pos:column="55">ctx<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">.<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="59">get<pos:position pos:line="10" pos:column="62"/></name></name><argument_list pos:line="10" pos:column="62">()<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">x<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">&lt;<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><call><name><name pos:line="12" pos:column="16">Security<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">::<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">ErrorString<pos:position pos:line="12" pos:column="37"/></name></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">x<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></return></block></then></if>

<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="15" pos:column="5">return <expr><literal type="null" pos:line="15" pos:column="12">nullptr<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

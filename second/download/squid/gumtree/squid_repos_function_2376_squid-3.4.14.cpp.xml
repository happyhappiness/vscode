<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2376_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsCallback<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">idns_query<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">q<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">error<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IDNSCB<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">callback<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">cbdata<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">error<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">q<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">error<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">error<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">q<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">master<pos:position pos:line="10" pos:column="18"/></name></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">q<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name><name pos:line="11" pos:column="13">q<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">master<pos:position pos:line="11" pos:column="22"/></name></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="13" pos:column="5">// If any of our subqueries are still pending then wait for them to complete before continuing</comment>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><decl><type><name pos:line="14" pos:column="10">idns_query<pos:position pos:line="14" pos:column="20"/></name> <modifier pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></modifier></type><name pos:line="14" pos:column="22">q2<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><name pos:line="14" pos:column="27">q<pos:position pos:line="14" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></init> <condition><expr><name pos:line="14" pos:column="30">q2<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></condition> <incr><expr><name pos:line="14" pos:column="34">q2<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <name><name pos:line="14" pos:column="39">q2<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">slave<pos:position pos:line="14" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="49"/></control> <block pos:line="14" pos:column="50">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">q2<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">pending<pos:position pos:line="15" pos:column="24"/></name></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <block pos:line="15" pos:column="26">{
            <return pos:line="16" pos:column="13">return;<pos:position pos:line="16" pos:column="20"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></for>

    <comment type="block" pos:line="20" pos:column="5">/* Merge results */</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">rfc1035_message<pos:position pos:line="21" pos:column="20"/></name> <modifier pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></modifier></type><name pos:line="21" pos:column="22">message<pos:position pos:line="21" pos:column="29"/></name> <init pos:line="21" pos:column="30">= <expr><name><name pos:line="21" pos:column="32">q<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">message<pos:position pos:line="21" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">q<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">message<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">NULL<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">n<pos:position pos:line="23" pos:column="10"/></name> <init pos:line="23" pos:column="11">= <expr><name><name pos:line="23" pos:column="13">q<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">ancount<pos:position pos:line="23" pos:column="23"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">error<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <name><name pos:line="24" pos:column="13">q<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">error<pos:position pos:line="24" pos:column="21"/></name></name></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>

    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">( <decl><type><name pos:line="26" pos:column="13">idns_query<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">q2<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><name><name pos:line="26" pos:column="30">q<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">slave<pos:position pos:line="26" pos:column="38"/></name></name></expr></init></decl> )<pos:position pos:line="26" pos:column="40"/></condition> <block pos:line="26" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">78<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">6<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="23">HERE<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">&lt;&lt;<pos:position pos:line="27" pos:column="36"/></operator> <literal type="string" pos:line="27" pos:column="31">"Merging DNS results "<pos:position pos:line="27" pos:column="53"/></literal> <operator pos:line="27" pos:column="54">&lt;&lt;<pos:position pos:line="27" pos:column="62"/></operator> <name><name pos:line="27" pos:column="57">q<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">name<pos:position pos:line="27" pos:column="64"/></name></name> <operator pos:line="27" pos:column="65">&lt;&lt;<pos:position pos:line="27" pos:column="73"/></operator> <literal type="string" pos:line="27" pos:column="68">" A has "<pos:position pos:line="27" pos:column="77"/></literal> <operator pos:line="27" pos:column="78">&lt;&lt;<pos:position pos:line="27" pos:column="86"/></operator> <name pos:line="27" pos:column="81">n<pos:position pos:line="27" pos:column="82"/></name> <operator pos:line="27" pos:column="83">&lt;&lt;<pos:position pos:line="27" pos:column="91"/></operator> <literal type="string" pos:line="27" pos:column="86">" RR, AAAA has "<pos:position pos:line="27" pos:column="102"/></literal> <operator pos:line="27" pos:column="103">&lt;&lt;<pos:position pos:line="27" pos:column="111"/></operator> <name><name pos:line="27" pos:column="106">q2<pos:position pos:line="27" pos:column="108"/></name><operator pos:line="27" pos:column="108">-&gt;<pos:position pos:line="27" pos:column="113"/></operator><name pos:line="27" pos:column="110">ancount<pos:position pos:line="27" pos:column="117"/></name></name> <operator pos:line="27" pos:column="118">&lt;&lt;<pos:position pos:line="27" pos:column="126"/></operator> <literal type="string" pos:line="27" pos:column="121">" RR"<pos:position pos:line="27" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="128"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">q<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">slave<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name><name pos:line="28" pos:column="20">q2<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">slave<pos:position pos:line="28" pos:column="29"/></name></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">( <expr><operator pos:line="29" pos:column="14">!<pos:position pos:line="29" pos:column="15"/></operator><name><name pos:line="29" pos:column="15">q2<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">error<pos:position pos:line="29" pos:column="24"/></name></name></expr> )<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <block pos:line="29" pos:column="27">{
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">n<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&gt;<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23"> <block pos:line="30" pos:column="24">{
                <comment type="line" pos:line="31" pos:column="17">// two sets of RR need merging</comment>
                <decl_stmt><decl><type><name pos:line="32" pos:column="17">rfc1035_rr<pos:position pos:line="32" pos:column="27"/></name> <modifier pos:line="32" pos:column="28">*<pos:position pos:line="32" pos:column="29"/></modifier></type><name pos:line="32" pos:column="29">result<pos:position pos:line="32" pos:column="35"/></name> <init pos:line="32" pos:column="36">= <expr><operator pos:line="32" pos:column="38">(<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">rfc1035_rr<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">*<pos:position pos:line="32" pos:column="50"/></operator><operator pos:line="32" pos:column="50">)<pos:position pos:line="32" pos:column="51"/></operator> <call><name pos:line="32" pos:column="52">xmalloc<pos:position pos:line="32" pos:column="59"/></name><argument_list pos:line="32" pos:column="59">( <argument><expr><sizeof pos:line="32" pos:column="61">sizeof<argument_list pos:line="32" pos:column="67">(<argument><expr><name pos:line="32" pos:column="68">rfc1035_rr<pos:position pos:line="32" pos:column="78"/></name></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></sizeof><operator pos:line="32" pos:column="79">*<pos:position pos:line="32" pos:column="80"/></operator><operator pos:line="32" pos:column="80">(<pos:position pos:line="32" pos:column="81"/></operator><name pos:line="32" pos:column="81">n<pos:position pos:line="32" pos:column="82"/></name> <operator pos:line="32" pos:column="83">+<pos:position pos:line="32" pos:column="84"/></operator> <name><name pos:line="32" pos:column="85">q2<pos:position pos:line="32" pos:column="87"/></name><operator pos:line="32" pos:column="87">-&gt;<pos:position pos:line="32" pos:column="92"/></operator><name pos:line="32" pos:column="89">ancount<pos:position pos:line="32" pos:column="96"/></name></name><operator pos:line="32" pos:column="96">)<pos:position pos:line="32" pos:column="97"/></operator></expr></argument> )<pos:position pos:line="32" pos:column="99"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="100"/></decl_stmt>
                <if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">Config<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">.<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">dns<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">.<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="32">v4_first<pos:position pos:line="33" pos:column="40"/></name></name></expr>)<pos:position pos:line="33" pos:column="41"/></condition><then pos:line="33" pos:column="41"> <block pos:line="33" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="34" pos:column="21">memcpy<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">result<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="36">message<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">answer<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="53">(<pos:position pos:line="34" pos:column="54"/></operator><sizeof pos:line="34" pos:column="54">sizeof<argument_list pos:line="34" pos:column="60">(<argument><expr><name pos:line="34" pos:column="61">rfc1035_rr<pos:position pos:line="34" pos:column="71"/></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></sizeof><operator pos:line="34" pos:column="72">*<pos:position pos:line="34" pos:column="73"/></operator><name pos:line="34" pos:column="73">n<pos:position pos:line="34" pos:column="74"/></name><operator pos:line="34" pos:column="74">)<pos:position pos:line="34" pos:column="75"/></operator></expr></argument> )<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="35" pos:column="21">memcpy<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">result<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">+<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">n<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="38">q2<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">message<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">answer<pos:position pos:line="35" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="59">(<pos:position pos:line="35" pos:column="60"/></operator><sizeof pos:line="35" pos:column="60">sizeof<argument_list pos:line="35" pos:column="66">(<argument><expr><name pos:line="35" pos:column="67">rfc1035_rr<pos:position pos:line="35" pos:column="77"/></name></expr></argument>)<pos:position pos:line="35" pos:column="78"/></argument_list></sizeof><operator pos:line="35" pos:column="78">*<pos:position pos:line="35" pos:column="79"/></operator><name><name pos:line="35" pos:column="79">q2<pos:position pos:line="35" pos:column="81"/></name><operator pos:line="35" pos:column="81">-&gt;<pos:position pos:line="35" pos:column="86"/></operator><name pos:line="35" pos:column="83">ancount<pos:position pos:line="35" pos:column="90"/></name></name><operator pos:line="35" pos:column="90">)<pos:position pos:line="35" pos:column="91"/></operator></expr></argument> )<pos:position pos:line="35" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="94"/></expr_stmt>
                }<pos:position pos:line="36" pos:column="18"/></block></then> <else pos:line="36" pos:column="19">else <block pos:line="36" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="37" pos:column="21">memcpy<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">result<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">q2<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">message<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">answer<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="57">(<pos:position pos:line="37" pos:column="58"/></operator><sizeof pos:line="37" pos:column="58">sizeof<argument_list pos:line="37" pos:column="64">(<argument><expr><name pos:line="37" pos:column="65">rfc1035_rr<pos:position pos:line="37" pos:column="75"/></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></sizeof><operator pos:line="37" pos:column="76">*<pos:position pos:line="37" pos:column="77"/></operator><name><name pos:line="37" pos:column="77">q2<pos:position pos:line="37" pos:column="79"/></name><operator pos:line="37" pos:column="79">-&gt;<pos:position pos:line="37" pos:column="84"/></operator><name pos:line="37" pos:column="81">ancount<pos:position pos:line="37" pos:column="88"/></name></name><operator pos:line="37" pos:column="88">)<pos:position pos:line="37" pos:column="89"/></operator></expr></argument> )<pos:position pos:line="37" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="92"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="38" pos:column="21">memcpy<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">result<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">+<pos:position pos:line="38" pos:column="35"/></operator><name><name pos:line="38" pos:column="35">q2<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">ancount<pos:position pos:line="38" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="48">message<pos:position pos:line="38" pos:column="55"/></name><operator pos:line="38" pos:column="55">-&gt;<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="57">answer<pos:position pos:line="38" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="65">(<pos:position pos:line="38" pos:column="66"/></operator><sizeof pos:line="38" pos:column="66">sizeof<argument_list pos:line="38" pos:column="72">(<argument><expr><name pos:line="38" pos:column="73">rfc1035_rr<pos:position pos:line="38" pos:column="83"/></name></expr></argument>)<pos:position pos:line="38" pos:column="84"/></argument_list></sizeof><operator pos:line="38" pos:column="84">*<pos:position pos:line="38" pos:column="85"/></operator><name pos:line="38" pos:column="85">n<pos:position pos:line="38" pos:column="86"/></name><operator pos:line="38" pos:column="86">)<pos:position pos:line="38" pos:column="87"/></operator></expr></argument> )<pos:position pos:line="38" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="90"/></expr_stmt>
                }<pos:position pos:line="39" pos:column="18"/></block></else></if>
                <expr_stmt><expr><name pos:line="40" pos:column="17">n<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">+=<pos:position pos:line="40" pos:column="21"/></operator> <name><name pos:line="40" pos:column="22">q2<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">ancount<pos:position pos:line="40" pos:column="33"/></name></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
                <comment type="line" pos:line="41" pos:column="17">// HACK WARNING, the answer rr:s have been copied in-place to</comment>
                <comment type="line" pos:line="42" pos:column="17">// result, do not free them here</comment>
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">safe_free<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name><name pos:line="43" pos:column="27">message<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">answer<pos:position pos:line="43" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">safe_free<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">q2<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">message<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">answer<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="45" pos:column="17">message<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">answer<pos:position pos:line="45" pos:column="32"/></name></name> <operator pos:line="45" pos:column="33">=<pos:position pos:line="45" pos:column="34"/></operator> <name pos:line="45" pos:column="35">result<pos:position pos:line="45" pos:column="41"/></name></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="46" pos:column="17">message<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">ancount<pos:position pos:line="46" pos:column="33"/></name></name> <operator pos:line="46" pos:column="34">+=<pos:position pos:line="46" pos:column="36"/></operator> <name><name pos:line="46" pos:column="37">q2<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">-&gt;<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="41">message<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">ancount<pos:position pos:line="46" pos:column="57"/></name></name></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then> <else pos:line="47" pos:column="15">else <block pos:line="47" pos:column="20">{
                <comment type="line" pos:line="48" pos:column="17">// first response empty or failed, just use the second</comment>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">rfc1035MessageDestroy<pos:position pos:line="49" pos:column="38"/></name><argument_list pos:line="49" pos:column="38">(<argument><expr><operator pos:line="49" pos:column="39">&amp;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="40">message<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">message<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <name><name pos:line="50" pos:column="27">q2<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">message<pos:position pos:line="50" pos:column="38"/></name></name></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="51" pos:column="17">q2<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">-&gt;<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="21">message<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">NULL<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="52" pos:column="17">n<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <name><name pos:line="52" pos:column="21">q2<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">-&gt;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="25">ancount<pos:position pos:line="52" pos:column="32"/></name></name></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="53" pos:column="17">error<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <name pos:line="53" pos:column="25">NULL<pos:position pos:line="53" pos:column="29"/></name></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></else></if>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><operator pos:line="56" pos:column="31">&amp;<pos:position pos:line="56" pos:column="36"/></operator><name><name pos:line="56" pos:column="32">q2<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">message<pos:position pos:line="56" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">cbdataFree<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">q2<pos:position pos:line="57" pos:column="22"/></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">debugs<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><literal type="number" pos:line="60" pos:column="12">78<pos:position pos:line="60" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="16">6<pos:position pos:line="60" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="19">HERE<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">&lt;&lt;<pos:position pos:line="60" pos:column="32"/></operator> <literal type="string" pos:line="60" pos:column="27">"Sending "<pos:position pos:line="60" pos:column="37"/></literal> <operator pos:line="60" pos:column="38">&lt;&lt;<pos:position pos:line="60" pos:column="46"/></operator> <name pos:line="60" pos:column="41">n<pos:position pos:line="60" pos:column="42"/></name> <operator pos:line="60" pos:column="43">&lt;&lt;<pos:position pos:line="60" pos:column="51"/></operator> <literal type="string" pos:line="60" pos:column="46">" ("<pos:position pos:line="60" pos:column="50"/></literal> <operator pos:line="60" pos:column="51">&lt;&lt;<pos:position pos:line="60" pos:column="59"/></operator> <operator pos:line="60" pos:column="54">(<pos:position pos:line="60" pos:column="55"/></operator><ternary><condition><expr><name pos:line="60" pos:column="55">error<pos:position pos:line="60" pos:column="60"/></name></expr> ?<pos:position pos:line="60" pos:column="62"/></condition><then pos:line="60" pos:column="62"> <expr><name pos:line="60" pos:column="63">error<pos:position pos:line="60" pos:column="68"/></name></expr> <pos:position pos:line="60" pos:column="69"/></then><else pos:line="60" pos:column="69">: <expr><literal type="string" pos:line="60" pos:column="71">"OK"<pos:position pos:line="60" pos:column="75"/></literal></expr></else></ternary><operator pos:line="60" pos:column="75">)<pos:position pos:line="60" pos:column="76"/></operator> <operator pos:line="60" pos:column="77">&lt;&lt;<pos:position pos:line="60" pos:column="85"/></operator> <literal type="string" pos:line="60" pos:column="80">") DNS results to caller."<pos:position pos:line="60" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="108"/></expr_stmt>

    <expr_stmt><expr><name pos:line="62" pos:column="5">callback<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <name><name pos:line="62" pos:column="16">q<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">callback<pos:position pos:line="62" pos:column="27"/></name></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">q<pos:position pos:line="63" pos:column="6"/></name><operator pos:line="63" pos:column="6">-&gt;<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="8">callback<pos:position pos:line="63" pos:column="16"/></name></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">NULL<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="64" pos:column="5">const<pos:position pos:line="64" pos:column="10"/></specifier> <name pos:line="64" pos:column="11">rfc1035_rr<pos:position pos:line="64" pos:column="21"/></name> <modifier pos:line="64" pos:column="22">*<pos:position pos:line="64" pos:column="23"/></modifier></type><name pos:line="64" pos:column="23">answers<pos:position pos:line="64" pos:column="30"/></name> <init pos:line="64" pos:column="31">= <expr><ternary><condition><expr><name pos:line="64" pos:column="33">message<pos:position pos:line="64" pos:column="40"/></name></expr> ?<pos:position pos:line="64" pos:column="42"/></condition><then pos:line="64" pos:column="42"> <expr><name><name pos:line="64" pos:column="43">message<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">-&gt;<pos:position pos:line="64" pos:column="55"/></operator><name pos:line="64" pos:column="52">answer<pos:position pos:line="64" pos:column="58"/></name></name></expr> <pos:position pos:line="64" pos:column="59"/></then><else pos:line="64" pos:column="59">: <expr><name pos:line="64" pos:column="61">NULL<pos:position pos:line="64" pos:column="65"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="64" pos:column="66"/></decl_stmt>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><call><name pos:line="66" pos:column="9">cbdataReferenceValidDone<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><name><name pos:line="66" pos:column="34">q<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">callback_data<pos:position pos:line="66" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="52">&amp;<pos:position pos:line="66" pos:column="57"/></operator><name pos:line="66" pos:column="53">cbdata<pos:position pos:line="66" pos:column="59"/></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="61"/></condition><then pos:line="66" pos:column="61">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="9">callback<pos:position pos:line="67" pos:column="17"/></name><argument_list pos:line="67" pos:column="17">(<argument><expr><name pos:line="67" pos:column="18">cbdata<pos:position pos:line="67" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="26">answers<pos:position pos:line="67" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="35">n<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">error<pos:position pos:line="67" pos:column="43"/></name></expr></argument>)<pos:position pos:line="67" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="45"/></expr_stmt></block></then></if>

    <while pos:line="69" pos:column="5">while <condition pos:line="69" pos:column="11">(<expr><name><name pos:line="69" pos:column="12">q<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">queue<pos:position pos:line="69" pos:column="20"/></name></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition> <block pos:line="69" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="70" pos:column="9">idns_query<pos:position pos:line="70" pos:column="19"/></name> <modifier pos:line="70" pos:column="20">*<pos:position pos:line="70" pos:column="21"/></modifier></type><name pos:line="70" pos:column="21">q2<pos:position pos:line="70" pos:column="23"/></name> <init pos:line="70" pos:column="24">= <expr><name><name pos:line="70" pos:column="26">q<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">queue<pos:position pos:line="70" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="70" pos:column="35"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">q<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">-&gt;<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="12">queue<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <name><name pos:line="71" pos:column="20">q2<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">queue<pos:position pos:line="71" pos:column="29"/></name></name></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">callback<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <name><name pos:line="72" pos:column="20">q2<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">-&gt;<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="24">callback<pos:position pos:line="72" pos:column="32"/></name></name></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">q2<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">-&gt;<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="13">callback<pos:position pos:line="73" pos:column="21"/></name></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">NULL<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>

        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><call><name pos:line="75" pos:column="13">cbdataReferenceValidDone<pos:position pos:line="75" pos:column="37"/></name><argument_list pos:line="75" pos:column="37">(<argument><expr><name><name pos:line="75" pos:column="38">q2<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">-&gt;<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="42">callback_data<pos:position pos:line="75" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="57">&amp;<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="58">cbdata<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="66"/></condition><then pos:line="75" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="13">callback<pos:position pos:line="76" pos:column="21"/></name><argument_list pos:line="76" pos:column="21">(<argument><expr><name pos:line="76" pos:column="22">cbdata<pos:position pos:line="76" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="30">answers<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">n<pos:position pos:line="76" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="42">error<pos:position pos:line="76" pos:column="47"/></name></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="78" pos:column="9">cbdataFree<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><name pos:line="78" pos:column="20">q2<pos:position pos:line="78" pos:column="22"/></name></expr></argument>)<pos:position pos:line="78" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></while>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name><name pos:line="81" pos:column="9">q<pos:position pos:line="81" pos:column="10"/></name><operator pos:line="81" pos:column="10">-&gt;<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="12">hash<pos:position pos:line="81" pos:column="16"/></name><operator pos:line="81" pos:column="16">.<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="17">key<pos:position pos:line="81" pos:column="20"/></name></name></expr>)<pos:position pos:line="81" pos:column="21"/></condition><then pos:line="81" pos:column="21"> <block pos:line="81" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">hash_remove_link<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">idns_lookup_hash<pos:position pos:line="82" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="44">&amp;<pos:position pos:line="82" pos:column="49"/></operator><name><name pos:line="82" pos:column="45">q<pos:position pos:line="82" pos:column="46"/></name><operator pos:line="82" pos:column="46">-&gt;<pos:position pos:line="82" pos:column="51"/></operator><name pos:line="82" pos:column="48">hash<pos:position pos:line="82" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">q<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">-&gt;<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="12">hash<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">.<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">key<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <name pos:line="83" pos:column="23">NULL<pos:position pos:line="83" pos:column="27"/></name></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">rfc1035MessageDestroy<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">(<argument><expr><operator pos:line="86" pos:column="27">&amp;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="28">message<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">cbdataFree<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><name pos:line="87" pos:column="16">q<pos:position pos:line="87" pos:column="17"/></name></expr></argument>)<pos:position pos:line="87" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

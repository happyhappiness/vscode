<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4698_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">removeUnnecessaryWildcards<pos:position pos:line="2" pos:column="27"/></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">t<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type> <name pos:line="4" pos:column="12">orig<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">t<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">strncmp<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">t<pos:position pos:line="6" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="20">"^.*"<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="27">3<pos:position pos:line="6" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">t<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">+=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">3<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="9" pos:column="5">/* NOTE: an initial '.' might seem unnessary but is not;
     * it can be a valid requirement that cannot be optimised
     */</comment>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">*<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">t<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <literal type="char" pos:line="12" pos:column="18">'.'<pos:position pos:line="12" pos:column="21"/></literal>  <operator pos:line="12" pos:column="23">&amp;&amp;<pos:position pos:line="12" pos:column="33"/></operator>  <operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator><operator pos:line="12" pos:column="28">(<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">t<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">+<pos:position pos:line="12" pos:column="31"/></operator><literal type="number" pos:line="12" pos:column="31">1<pos:position pos:line="12" pos:column="32"/></literal><operator pos:line="12" pos:column="32">)<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator> <literal type="char" pos:line="12" pos:column="37">'*'<pos:position pos:line="12" pos:column="40"/></literal></expr>)<pos:position pos:line="12" pos:column="41"/></condition> <block pos:line="12" pos:column="42">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">t<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">+=<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">2<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></while>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">t<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <literal type="char" pos:line="16" pos:column="15">'\0'<pos:position pos:line="16" pos:column="19"/></literal></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">28<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">DBG_IMPORTANT<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">""<pos:position pos:line="17" pos:column="37"/></literal> <operator pos:line="17" pos:column="38">&lt;&lt;<pos:position pos:line="17" pos:column="46"/></operator> <name pos:line="17" pos:column="41">cfg_filename<pos:position pos:line="17" pos:column="53"/></name> <operator pos:line="17" pos:column="54">&lt;&lt;<pos:position pos:line="17" pos:column="62"/></operator> <literal type="string" pos:line="17" pos:column="57">" line "<pos:position pos:line="17" pos:column="65"/></literal> <operator pos:line="17" pos:column="66">&lt;&lt;<pos:position pos:line="17" pos:column="74"/></operator> <name pos:line="17" pos:column="69">config_lineno<pos:position pos:line="17" pos:column="82"/></name> <operator pos:line="17" pos:column="83">&lt;&lt;<pos:position pos:line="17" pos:column="91"/></operator> <literal type="string" pos:line="17" pos:column="86">": "<pos:position pos:line="17" pos:column="90"/></literal> <operator pos:line="17" pos:column="91">&lt;&lt;<pos:position pos:line="17" pos:column="99"/></operator> <name pos:line="17" pos:column="94">config_input_line<pos:position pos:line="17" pos:column="111"/></name></expr></argument>)<pos:position pos:line="17" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="113"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">28<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">DBG_IMPORTANT<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"WARNING: regular expression '"<pos:position pos:line="18" pos:column="66"/></literal> <operator pos:line="18" pos:column="67">&lt;&lt;<pos:position pos:line="18" pos:column="75"/></operator> <name pos:line="18" pos:column="70">orig<pos:position pos:line="18" pos:column="74"/></name> <operator pos:line="18" pos:column="75">&lt;&lt;<pos:position pos:line="18" pos:column="83"/></operator> <literal type="string" pos:line="18" pos:column="78">"' has only wildcards and matches all strings. Using '.*' instead."<pos:position pos:line="18" pos:column="145"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="146"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="147"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><literal type="string" pos:line="19" pos:column="16">".*"<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">t<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">!=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">orig<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">28<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">DBG_IMPORTANT<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">""<pos:position pos:line="22" pos:column="37"/></literal> <operator pos:line="22" pos:column="38">&lt;&lt;<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="41">cfg_filename<pos:position pos:line="22" pos:column="53"/></name> <operator pos:line="22" pos:column="54">&lt;&lt;<pos:position pos:line="22" pos:column="62"/></operator> <literal type="string" pos:line="22" pos:column="57">" line "<pos:position pos:line="22" pos:column="65"/></literal> <operator pos:line="22" pos:column="66">&lt;&lt;<pos:position pos:line="22" pos:column="74"/></operator> <name pos:line="22" pos:column="69">config_lineno<pos:position pos:line="22" pos:column="82"/></name> <operator pos:line="22" pos:column="83">&lt;&lt;<pos:position pos:line="22" pos:column="91"/></operator> <literal type="string" pos:line="22" pos:column="86">": "<pos:position pos:line="22" pos:column="90"/></literal> <operator pos:line="22" pos:column="91">&lt;&lt;<pos:position pos:line="22" pos:column="99"/></operator> <name pos:line="22" pos:column="94">config_input_line<pos:position pos:line="22" pos:column="111"/></name></expr></argument>)<pos:position pos:line="22" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="113"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">28<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="20">DBG_IMPORTANT<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="35">"WARNING: regular expression '"<pos:position pos:line="23" pos:column="66"/></literal> <operator pos:line="23" pos:column="67">&lt;&lt;<pos:position pos:line="23" pos:column="75"/></operator> <name pos:line="23" pos:column="70">orig<pos:position pos:line="23" pos:column="74"/></name> <operator pos:line="23" pos:column="75">&lt;&lt;<pos:position pos:line="23" pos:column="83"/></operator> <literal type="string" pos:line="23" pos:column="78">"' has unnecessary wildcard(s). Using '"<pos:position pos:line="23" pos:column="118"/></literal> <operator pos:line="23" pos:column="119">&lt;&lt;<pos:position pos:line="23" pos:column="127"/></operator> <name pos:line="23" pos:column="122">t<pos:position pos:line="23" pos:column="123"/></name> <operator pos:line="23" pos:column="124">&lt;&lt;<pos:position pos:line="23" pos:column="132"/></operator> <literal type="string" pos:line="23" pos:column="127">"' instead."<pos:position pos:line="23" pos:column="139"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="141"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">t<pos:position pos:line="26" pos:column="13"/></name></expr>;<pos:position pos:line="26" pos:column="14"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3394_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">oid2addr<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">oid<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type> <name pos:line="2" pos:column="16">id<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="20">Ip<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">Address<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">&amp;<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="33">addr<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">u_int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">size<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">in_addr<pos:position pos:line="4" pos:column="19"/></name></name></type> <name pos:line="4" pos:column="20">i4addr<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">in6_addr<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">i6addr<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">u_int<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">i<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">u_char<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">cp<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">( <expr><name pos:line="8" pos:column="10">size<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <sizeof pos:line="8" pos:column="18">sizeof<argument_list pos:line="8" pos:column="24">(<argument><expr pos:line="8" pos:column="25">struct <name pos:line="8" pos:column="32">in_addr<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></sizeof></expr> )<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">cp<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">u_char<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><operator pos:line="9" pos:column="23">)<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><operator pos:line="9" pos:column="26">(<pos:position pos:line="9" pos:column="27"/></operator><name><name pos:line="9" pos:column="27">i4addr<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">.<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">s_addr<pos:position pos:line="9" pos:column="40"/></name></name><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then>
    <else pos:line="10" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">cp<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">u_char<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">i6addr<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt></block></else></if>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">MemBuf<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">tmp<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">49<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">7<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"oid2addr: id : "<pos:position pos:line="13" pos:column="36"/></literal> <operator pos:line="13" pos:column="37">&lt;&lt;<pos:position pos:line="13" pos:column="45"/></operator> <call><name pos:line="13" pos:column="40">snmpDebugOid<pos:position pos:line="13" pos:column="52"/></name><argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">id<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">size<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">tmp<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr></argument> )<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr> ;<pos:position pos:line="14" pos:column="15"/></init> <condition><expr><name pos:line="14" pos:column="16">i<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">&lt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">size<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></condition> <incr><expr><operator pos:line="14" pos:column="24">++<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">i<pos:position pos:line="14" pos:column="27"/></name></expr></incr>)<pos:position pos:line="14" pos:column="28"/></control> <block pos:line="14" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">cp<pos:position pos:line="15" pos:column="11"/></name><index pos:line="15" pos:column="11">[<expr><name pos:line="15" pos:column="12">i<pos:position pos:line="15" pos:column="13"/></name></expr>]<pos:position pos:line="15" pos:column="14"/></index></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <name><name pos:line="15" pos:column="17">id<pos:position pos:line="15" pos:column="19"/></name><index pos:line="15" pos:column="19">[<expr><name pos:line="15" pos:column="20">i<pos:position pos:line="15" pos:column="21"/></name></expr>]<pos:position pos:line="15" pos:column="22"/></index></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">( <expr><name pos:line="17" pos:column="10">size<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <sizeof pos:line="17" pos:column="18">sizeof<argument_list pos:line="17" pos:column="24">(<argument><expr pos:line="17" pos:column="25">struct <name pos:line="17" pos:column="32">in_addr<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></sizeof></expr> )<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">addr<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">i4addr<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt></block></then>
    <else pos:line="19" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">addr<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">i6addr<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt></block></else></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4810_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBuf<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Parser<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">BinaryTokenizer<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">area<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">uint64_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">size<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">description<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">want<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">size<pos:position pos:line="4" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="16">description<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">SBuf<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">result<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name><name pos:line="5" pos:column="25">data_<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">substr<pos:position pos:line="5" pos:column="37"/></name></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">parsed_<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="47">size<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">parsed_<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">+=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">size<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">got<pos:position pos:line="7" pos:column="8"/></name><argument_list pos:line="7" pos:column="8">(<argument><expr><name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="17">size<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">description<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

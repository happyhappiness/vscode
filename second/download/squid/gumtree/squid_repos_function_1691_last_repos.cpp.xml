<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1691_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">peerSupportsConnectionPinning<pos:position pos:line="2" pos:column="45"/></name></name><parameter_list pos:line="2" pos:column="45">()<pos:position pos:line="2" pos:column="47"/></parameter_list> <specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">_peer<pos:position pos:line="4" pos:column="15"/></name></expr>)<pos:position pos:line="4" pos:column="16"/></condition><then pos:line="4" pos:column="16">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">true<pos:position pos:line="5" pos:column="20"/></literal></expr>;<pos:position pos:line="5" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="7" pos:column="5">/*If this peer does not support connection pinning (authenticated
      connections) return false
     */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">_peer<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">connection_auth<pos:position pos:line="10" pos:column="32"/></name></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">HttpReply<pos:position pos:line="13" pos:column="20"/></name> <modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier></type><name pos:line="13" pos:column="22">rep<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><call><name><name pos:line="13" pos:column="28">entry<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">mem_obj<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">getReply<pos:position pos:line="13" pos:column="52"/></name></name><argument_list pos:line="13" pos:column="52">()<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="55"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/*The peer supports connection pinning and the http reply status
      is not unauthorized, so the related connection can be pinned
     */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name><name pos:line="18" pos:column="9">rep<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">sline<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">status<pos:position pos:line="18" pos:column="26"/></name></name><argument_list pos:line="18" pos:column="26">()<pos:position pos:line="18" pos:column="28"/></argument_list></call> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <name><name pos:line="18" pos:column="32">Http<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">::<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">scUnauthorized<pos:position pos:line="18" pos:column="52"/></name></name></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><literal type="boolean" pos:line="19" pos:column="16">true<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/*The server respond with Http::scUnauthorized and the peer configured
      with "connection-auth=on" we know that the peer supports pinned
      connections
    */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">_peer<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">connection_auth<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">==<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">1<pos:position pos:line="25" pos:column="36"/></literal></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><literal type="boolean" pos:line="26" pos:column="16">true<pos:position pos:line="26" pos:column="20"/></literal></expr>;<pos:position pos:line="26" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/*At this point peer has configured with "connection-auth=auto"
      parameter so we need some extra checks to decide if we are going
      to allow pinned connections or not
    */</comment>

    <comment type="block" pos:line="33" pos:column="5">/*if the peer configured with originserver just allow connection
        pinning (squid 2.6 behaviour)
     */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">_peer<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">options<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">originserver<pos:position pos:line="36" pos:column="36"/></name></name></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37">
        <block type="pseudo"><return pos:line="37" pos:column="9">return <expr><literal type="boolean" pos:line="37" pos:column="16">true<pos:position pos:line="37" pos:column="20"/></literal></expr>;<pos:position pos:line="37" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/*if the connections it is already pinned it is OK*/</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">request<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">flags<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">pinned<pos:position pos:line="40" pos:column="30"/></name></name></expr>)<pos:position pos:line="40" pos:column="31"/></condition><then pos:line="40" pos:column="31">
        <block type="pseudo"><return pos:line="41" pos:column="9">return <expr><literal type="boolean" pos:line="41" pos:column="16">true<pos:position pos:line="41" pos:column="20"/></literal></expr>;<pos:position pos:line="41" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/*Allow pinned connections only if the Proxy-support header exists in
      reply and has in its list the "Session-Based-Authentication"
      which means that the peer supports connection pinning.
     */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name><name pos:line="47" pos:column="9">rep<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">header<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">.<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">hasListMember<pos:position pos:line="47" pos:column="34"/></name></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name><name pos:line="47" pos:column="35">Http<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">::<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="41">HdrType<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">::<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">PROXY_SUPPORT<pos:position pos:line="47" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="65">"Session-Based-Authentication"<pos:position pos:line="47" pos:column="95"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="97">','<pos:position pos:line="47" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="101"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="102"/></condition><then pos:line="47" pos:column="102">
        <block type="pseudo"><return pos:line="48" pos:column="9">return <expr><literal type="boolean" pos:line="48" pos:column="16">true<pos:position pos:line="48" pos:column="20"/></literal></expr>;<pos:position pos:line="48" pos:column="21"/></return></block></then></if>

    <return pos:line="50" pos:column="5">return <expr><literal type="boolean" pos:line="50" pos:column="12">false<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

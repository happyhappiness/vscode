<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3378_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oid_ParseFn<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">snmpTreeNext<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">oid<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type> <name pos:line="2" pos:column="20">Current<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">snint<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">CurrentLen<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">oid<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">Next<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">snint<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type> <name pos:line="2" pos:column="68">NextLen<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">oid_ParseFn<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">Fn<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">count<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">49<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">5<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"snmpTreeNext: Called"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">MemBuf<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">tmp<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">49<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">6<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"snmpTreeNext: Current : "<pos:position pos:line="10" pos:column="45"/></literal> <operator pos:line="10" pos:column="46">&lt;&lt;<pos:position pos:line="10" pos:column="54"/></operator> <call><name pos:line="10" pos:column="49">snmpDebugOid<pos:position pos:line="10" pos:column="61"/></name><argument_list pos:line="10" pos:column="61">(<argument><expr><name pos:line="10" pos:column="62">Current<pos:position pos:line="10" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="71">CurrentLen<pos:position pos:line="10" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="83">tmp<pos:position pos:line="10" pos:column="86"/></name></expr></argument>)<pos:position pos:line="10" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="89"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">mib_tree_entry<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">mibTreeEntry<pos:position pos:line="12" pos:column="33"/></name> <init pos:line="12" pos:column="34">= <expr><name pos:line="12" pos:column="36">mib_tree_head<pos:position pos:line="12" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">mibTreeEntry<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">&amp;&amp;<pos:position pos:line="14" pos:column="32"/></operator> <name><name pos:line="14" pos:column="25">Current<pos:position pos:line="14" pos:column="32"/></name><index pos:line="14" pos:column="32">[<expr><name pos:line="14" pos:column="33">count<pos:position pos:line="14" pos:column="38"/></name></expr>]<pos:position pos:line="14" pos:column="39"/></index></name> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <name><name pos:line="14" pos:column="43">mibTreeEntry<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">name<pos:position pos:line="14" pos:column="61"/></name><index pos:line="14" pos:column="61">[<expr><name pos:line="14" pos:column="62">count<pos:position pos:line="14" pos:column="67"/></name></expr>]<pos:position pos:line="14" pos:column="68"/></index></name></expr>)<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69"> <block pos:line="14" pos:column="70">{
        <expr_stmt><expr><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">count<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>

        <while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">mibTreeEntry<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator> <operator pos:line="17" pos:column="31">&amp;&amp;<pos:position pos:line="17" pos:column="41"/></operator> <operator pos:line="17" pos:column="34">(<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">count<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">&lt;<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="43">CurrentLen<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator> <operator pos:line="17" pos:column="55">&amp;&amp;<pos:position pos:line="17" pos:column="65"/></operator> <operator pos:line="17" pos:column="58">(<pos:position pos:line="17" pos:column="59"/></operator><operator pos:line="17" pos:column="59">!<pos:position pos:line="17" pos:column="60"/></operator><name><name pos:line="17" pos:column="60">mibTreeEntry<pos:position pos:line="17" pos:column="72"/></name><operator pos:line="17" pos:column="72">-&gt;<pos:position pos:line="17" pos:column="77"/></operator><name pos:line="17" pos:column="74">parsefunction<pos:position pos:line="17" pos:column="87"/></name></name><operator pos:line="17" pos:column="87">)<pos:position pos:line="17" pos:column="88"/></operator></expr>)<pos:position pos:line="17" pos:column="89"/></condition> <block pos:line="17" pos:column="90">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">mib_tree_entry<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">nextmibTreeEntry<pos:position pos:line="18" pos:column="45"/></name> <init pos:line="18" pos:column="46">= <expr><call><name pos:line="18" pos:column="48">snmpTreeEntry<pos:position pos:line="18" pos:column="61"/></name><argument_list pos:line="18" pos:column="61">(<argument><expr><name><name pos:line="18" pos:column="62">Current<pos:position pos:line="18" pos:column="69"/></name><index pos:line="18" pos:column="69">[<expr><name pos:line="18" pos:column="70">count<pos:position pos:line="18" pos:column="75"/></name></expr>]<pos:position pos:line="18" pos:column="76"/></index></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="78">count<pos:position pos:line="18" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="85">mibTreeEntry<pos:position pos:line="18" pos:column="97"/></name></expr></argument>)<pos:position pos:line="18" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="99"/></decl_stmt>

            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">!<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">nextmibTreeEntry<pos:position pos:line="20" pos:column="34"/></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
                <block type="pseudo"><break pos:line="21" pos:column="17">break;<pos:position pos:line="21" pos:column="23"/></break></block></then>
            <else pos:line="22" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">mibTreeEntry<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">nextmibTreeEntry<pos:position pos:line="23" pos:column="48"/></name></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt></block></else></if>

            <expr_stmt><expr><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">count<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">49<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">5<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"snmpTreeNext: Recursed down to requested object"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then> <else pos:line="28" pos:column="7">else <block pos:line="28" pos:column="12">{
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">NULL<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">mibTreeEntry<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">==<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">mib_tree_last<pos:position pos:line="32" pos:column="38"/></name></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39">
        <block type="pseudo"><return pos:line="33" pos:column="9">return <expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">Fn<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">)<pos:position pos:line="33" pos:column="20"/></operator></expr>;<pos:position pos:line="33" pos:column="21"/></return></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">mibTreeEntry<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">)<pos:position pos:line="35" pos:column="23"/></operator> <operator pos:line="35" pos:column="24">&amp;&amp;<pos:position pos:line="35" pos:column="34"/></operator> <operator pos:line="35" pos:column="27">(<pos:position pos:line="35" pos:column="28"/></operator><name><name pos:line="35" pos:column="28">mibTreeEntry<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">parsefunction<pos:position pos:line="35" pos:column="55"/></name></name><operator pos:line="35" pos:column="55">)<pos:position pos:line="35" pos:column="56"/></operator></expr>)<pos:position pos:line="35" pos:column="57"/></condition><then pos:line="35" pos:column="57"> <block pos:line="35" pos:column="58">{
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">NextLen<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">CurrentLen<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">Next<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <call pos:line="37" pos:column="17">(<modifier pos:line="37" pos:column="18">*<pos:position pos:line="37" pos:column="19"/></modifier><name><name pos:line="37" pos:column="19">mibTreeEntry<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">instancefunction<pos:position pos:line="37" pos:column="49"/></name></name>) <argument_list pos:line="37" pos:column="51">(<argument><expr><name pos:line="37" pos:column="52">Current<pos:position pos:line="37" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">NextLen<pos:position pos:line="37" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="70">mibTreeEntry<pos:position pos:line="37" pos:column="82"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="84">&amp;<pos:position pos:line="37" pos:column="89"/></operator><name pos:line="37" pos:column="85">Fn<pos:position pos:line="37" pos:column="87"/></name></expr></argument>)<pos:position pos:line="37" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="89"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">Next<pos:position pos:line="38" pos:column="18"/></name></expr>)<pos:position pos:line="38" pos:column="19"/></condition><then pos:line="38" pos:column="19"> <block pos:line="38" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">debugs<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><literal type="number" pos:line="39" pos:column="20">49<pos:position pos:line="39" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="24">6<pos:position pos:line="39" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="27">"snmpTreeNext: Next : "<pos:position pos:line="39" pos:column="50"/></literal> <operator pos:line="39" pos:column="51">&lt;&lt;<pos:position pos:line="39" pos:column="59"/></operator> <call><name pos:line="39" pos:column="54">snmpDebugOid<pos:position pos:line="39" pos:column="66"/></name><argument_list pos:line="39" pos:column="66">(<argument><expr><operator pos:line="39" pos:column="67">*<pos:position pos:line="39" pos:column="68"/></operator><name pos:line="39" pos:column="68">Next<pos:position pos:line="39" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="74">*<pos:position pos:line="39" pos:column="75"/></operator><name pos:line="39" pos:column="75">NextLen<pos:position pos:line="39" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="84">tmp<pos:position pos:line="39" pos:column="87"/></name></expr></argument>)<pos:position pos:line="39" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="90"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><operator pos:line="40" pos:column="20">(<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">Fn<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">)<pos:position pos:line="40" pos:column="24"/></operator></expr>;<pos:position pos:line="40" pos:column="25"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">mibTreeEntry<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">)<pos:position pos:line="44" pos:column="23"/></operator> <operator pos:line="44" pos:column="24">&amp;&amp;<pos:position pos:line="44" pos:column="34"/></operator> <operator pos:line="44" pos:column="27">(<pos:position pos:line="44" pos:column="28"/></operator><name><name pos:line="44" pos:column="28">mibTreeEntry<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">parsefunction<pos:position pos:line="44" pos:column="55"/></name></name><operator pos:line="44" pos:column="55">)<pos:position pos:line="44" pos:column="56"/></operator></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <block pos:line="44" pos:column="58">{
        <expr_stmt><expr><operator pos:line="45" pos:column="9">--<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">count<pos:position pos:line="45" pos:column="16"/></name></expr>;<pos:position pos:line="45" pos:column="17"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">mib_tree_entry<pos:position pos:line="46" pos:column="23"/></name> <modifier pos:line="46" pos:column="24">*<pos:position pos:line="46" pos:column="25"/></modifier></type><name pos:line="46" pos:column="25">nextoid<pos:position pos:line="46" pos:column="32"/></name> <init pos:line="46" pos:column="33">= <expr><call><name pos:line="46" pos:column="35">snmpTreeSiblingEntry<pos:position pos:line="46" pos:column="55"/></name><argument_list pos:line="46" pos:column="55">(<argument><expr><name><name pos:line="46" pos:column="56">Current<pos:position pos:line="46" pos:column="63"/></name><index pos:line="46" pos:column="63">[<expr><name pos:line="46" pos:column="64">count<pos:position pos:line="46" pos:column="69"/></name></expr>]<pos:position pos:line="46" pos:column="70"/></index></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="72">count<pos:position pos:line="46" pos:column="77"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="79">mibTreeEntry<pos:position pos:line="46" pos:column="91"/></name><operator pos:line="46" pos:column="91">-&gt;<pos:position pos:line="46" pos:column="96"/></operator><name pos:line="46" pos:column="93">parent<pos:position pos:line="46" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="100"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="101"/></decl_stmt>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">nextoid<pos:position pos:line="47" pos:column="20"/></name></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <block pos:line="47" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">debugs<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="number" pos:line="48" pos:column="20">49<pos:position pos:line="48" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="24">5<pos:position pos:line="48" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"snmpTreeNext: Next OID found for sibling"<pos:position pos:line="48" pos:column="69"/></literal> <operator pos:line="48" pos:column="70">&lt;&lt;<pos:position pos:line="48" pos:column="78"/></operator> <name pos:line="48" pos:column="73">nextoid<pos:position pos:line="48" pos:column="80"/></name></expr></argument> )<pos:position pos:line="48" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="49" pos:column="13">mibTreeEntry<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="28">nextoid<pos:position pos:line="49" pos:column="35"/></name></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="50" pos:column="13">++<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">count<pos:position pos:line="50" pos:column="20"/></name></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then> <else pos:line="51" pos:column="11">else <block pos:line="51" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">debugs<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><literal type="number" pos:line="52" pos:column="20">49<pos:position pos:line="52" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="24">5<pos:position pos:line="52" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="27">"snmpTreeNext: Attempting to recurse up for next object"<pos:position pos:line="52" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="85"/></expr_stmt>

            <while pos:line="54" pos:column="13">while <condition pos:line="54" pos:column="19">(<expr><operator pos:line="54" pos:column="20">!<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="21">nextoid<pos:position pos:line="54" pos:column="28"/></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition> <block pos:line="54" pos:column="30">{
                <expr_stmt><expr><operator pos:line="55" pos:column="17">--<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">count<pos:position pos:line="55" pos:column="24"/></name></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>

                <if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name><name pos:line="57" pos:column="21">mibTreeEntry<pos:position pos:line="57" pos:column="33"/></name><operator pos:line="57" pos:column="33">-&gt;<pos:position pos:line="57" pos:column="38"/></operator><name pos:line="57" pos:column="35">parent<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">-&gt;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="43">parent<pos:position pos:line="57" pos:column="49"/></name></name></expr>)<pos:position pos:line="57" pos:column="50"/></condition><then pos:line="57" pos:column="50"> <block pos:line="57" pos:column="51">{
                    <expr_stmt><expr><name pos:line="58" pos:column="21">nextoid<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <name><name pos:line="58" pos:column="31">mibTreeEntry<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">parent<pos:position pos:line="58" pos:column="51"/></name></name></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="59" pos:column="21">mibTreeEntry<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">=<pos:position pos:line="59" pos:column="35"/></operator> <call><name pos:line="59" pos:column="36">snmpTreeEntry<pos:position pos:line="59" pos:column="49"/></name><argument_list pos:line="59" pos:column="49">(<argument><expr><name><name pos:line="59" pos:column="50">Current<pos:position pos:line="59" pos:column="57"/></name><index pos:line="59" pos:column="57">[<expr><name pos:line="59" pos:column="58">count<pos:position pos:line="59" pos:column="63"/></name></expr>]<pos:position pos:line="59" pos:column="64"/></index></name> <operator pos:line="59" pos:column="65">+<pos:position pos:line="59" pos:column="66"/></operator> <literal type="number" pos:line="59" pos:column="67">1<pos:position pos:line="59" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="70">count<pos:position pos:line="59" pos:column="75"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="77">nextoid<pos:position pos:line="59" pos:column="84"/></name><operator pos:line="59" pos:column="84">-&gt;<pos:position pos:line="59" pos:column="89"/></operator><name pos:line="59" pos:column="86">parent<pos:position pos:line="59" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="94"/></expr_stmt>

                    <if pos:line="61" pos:column="21">if <condition pos:line="61" pos:column="24">(<expr><operator pos:line="61" pos:column="25">!<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="26">mibTreeEntry<pos:position pos:line="61" pos:column="38"/></name></expr>)<pos:position pos:line="61" pos:column="39"/></condition><then pos:line="61" pos:column="39"> <block pos:line="61" pos:column="40">{
                        <expr_stmt><expr><name pos:line="62" pos:column="25">mibTreeEntry<pos:position pos:line="62" pos:column="37"/></name> <operator pos:line="62" pos:column="38">=<pos:position pos:line="62" pos:column="39"/></operator> <name pos:line="62" pos:column="40">nextoid<pos:position pos:line="62" pos:column="47"/></name></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="63" pos:column="25">nextoid<pos:position pos:line="63" pos:column="32"/></name> <operator pos:line="63" pos:column="33">=<pos:position pos:line="63" pos:column="34"/></operator> <name pos:line="63" pos:column="35">NULL<pos:position pos:line="63" pos:column="39"/></name></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt>
                    }<pos:position pos:line="64" pos:column="22"/></block></then></if>
                }<pos:position pos:line="65" pos:column="18"/></block></then> <else pos:line="65" pos:column="19">else <block pos:line="65" pos:column="24">{
                    <expr_stmt><expr><name pos:line="66" pos:column="21">nextoid<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">mibTreeEntry<pos:position pos:line="66" pos:column="43"/></name></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="67" pos:column="21">mibTreeEntry<pos:position pos:line="67" pos:column="33"/></name> <operator pos:line="67" pos:column="34">=<pos:position pos:line="67" pos:column="35"/></operator> <name pos:line="67" pos:column="36">NULL<pos:position pos:line="67" pos:column="40"/></name></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="68" pos:column="18"/></block></else></if>
            }<pos:position pos:line="69" pos:column="14"/></block></while>
        }<pos:position pos:line="70" pos:column="10"/></block></else></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <while pos:line="72" pos:column="5">while <condition pos:line="72" pos:column="11">(<expr><operator pos:line="72" pos:column="12">(<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="13">mibTreeEntry<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">)<pos:position pos:line="72" pos:column="26"/></operator> <operator pos:line="72" pos:column="27">&amp;&amp;<pos:position pos:line="72" pos:column="37"/></operator> <operator pos:line="72" pos:column="30">(<pos:position pos:line="72" pos:column="31"/></operator><operator pos:line="72" pos:column="31">!<pos:position pos:line="72" pos:column="32"/></operator><name><name pos:line="72" pos:column="32">mibTreeEntry<pos:position pos:line="72" pos:column="44"/></name><operator pos:line="72" pos:column="44">-&gt;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="46">parsefunction<pos:position pos:line="72" pos:column="59"/></name></name><operator pos:line="72" pos:column="59">)<pos:position pos:line="72" pos:column="60"/></operator></expr>)<pos:position pos:line="72" pos:column="61"/></condition> <block pos:line="72" pos:column="62">{
        <expr_stmt><expr><name pos:line="73" pos:column="9">mibTreeEntry<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name><name pos:line="73" pos:column="24">mibTreeEntry<pos:position pos:line="73" pos:column="36"/></name><operator pos:line="73" pos:column="36">-&gt;<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="38">leaves<pos:position pos:line="73" pos:column="44"/></name><index pos:line="73" pos:column="44">[<expr><literal type="number" pos:line="73" pos:column="45">0<pos:position pos:line="73" pos:column="46"/></literal></expr>]<pos:position pos:line="73" pos:column="47"/></index></name></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></while>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">mibTreeEntry<pos:position pos:line="76" pos:column="21"/></name></expr>)<pos:position pos:line="76" pos:column="22"/></condition><then pos:line="76" pos:column="22"> <block pos:line="76" pos:column="23">{
        <expr_stmt><expr><operator pos:line="77" pos:column="9">*<pos:position pos:line="77" pos:column="10"/></operator><name pos:line="77" pos:column="10">NextLen<pos:position pos:line="77" pos:column="17"/></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <name><name pos:line="77" pos:column="20">mibTreeEntry<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">-&gt;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="34">len<pos:position pos:line="77" pos:column="37"/></name></name></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="78" pos:column="9">*<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">Next<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <call pos:line="78" pos:column="17">(<modifier pos:line="78" pos:column="18">*<pos:position pos:line="78" pos:column="19"/></modifier><name><name pos:line="78" pos:column="19">mibTreeEntry<pos:position pos:line="78" pos:column="31"/></name><operator pos:line="78" pos:column="31">-&gt;<pos:position pos:line="78" pos:column="36"/></operator><name pos:line="78" pos:column="33">instancefunction<pos:position pos:line="78" pos:column="49"/></name></name>) <argument_list pos:line="78" pos:column="51">(<argument><expr><name><name pos:line="78" pos:column="52">mibTreeEntry<pos:position pos:line="78" pos:column="64"/></name><operator pos:line="78" pos:column="64">-&gt;<pos:position pos:line="78" pos:column="69"/></operator><name pos:line="78" pos:column="66">name<pos:position pos:line="78" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="72">NextLen<pos:position pos:line="78" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="81">mibTreeEntry<pos:position pos:line="78" pos:column="93"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="95">&amp;<pos:position pos:line="78" pos:column="100"/></operator><name pos:line="78" pos:column="96">Fn<pos:position pos:line="78" pos:column="98"/></name></expr></argument>)<pos:position pos:line="78" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="100"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">*<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">Next<pos:position pos:line="81" pos:column="14"/></name></expr>)<pos:position pos:line="81" pos:column="15"/></condition><then pos:line="81" pos:column="15"> <block pos:line="81" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">debugs<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><literal type="number" pos:line="82" pos:column="16">49<pos:position pos:line="82" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="20">6<pos:position pos:line="82" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="23">"snmpTreeNext: Next : "<pos:position pos:line="82" pos:column="46"/></literal> <operator pos:line="82" pos:column="47">&lt;&lt;<pos:position pos:line="82" pos:column="55"/></operator> <call><name pos:line="82" pos:column="50">snmpDebugOid<pos:position pos:line="82" pos:column="62"/></name><argument_list pos:line="82" pos:column="62">(<argument><expr><operator pos:line="82" pos:column="63">*<pos:position pos:line="82" pos:column="64"/></operator><name pos:line="82" pos:column="64">Next<pos:position pos:line="82" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="70">*<pos:position pos:line="82" pos:column="71"/></operator><name pos:line="82" pos:column="71">NextLen<pos:position pos:line="82" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="80">tmp<pos:position pos:line="82" pos:column="83"/></name></expr></argument>)<pos:position pos:line="82" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="86"/></expr_stmt>
        <return pos:line="83" pos:column="9">return <expr><operator pos:line="83" pos:column="16">(<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">Fn<pos:position pos:line="83" pos:column="19"/></name><operator pos:line="83" pos:column="19">)<pos:position pos:line="83" pos:column="20"/></operator></expr>;<pos:position pos:line="83" pos:column="21"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then> <else pos:line="84" pos:column="7">else
        <block type="pseudo"><return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">NULL<pos:position pos:line="85" pos:column="20"/></name></expr>;<pos:position pos:line="85" pos:column="21"/></return></block></else></if>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

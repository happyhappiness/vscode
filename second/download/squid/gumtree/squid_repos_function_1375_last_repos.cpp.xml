<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1375_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">helperOpenServers<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">helper<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">hlp<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">s<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">progname<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">shortname<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">procname<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name><name pos:line="8" pos:column="17">args<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">HELPER_MAX_ARGS<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">+<pos:position pos:line="8" pos:column="38"/></operator><literal type="number" pos:line="8" pos:column="38">1<pos:position pos:line="8" pos:column="39"/></literal></expr>]<pos:position pos:line="8" pos:column="40"/></index></name></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt> <comment type="line" pos:line="8" pos:column="42">// save space for a NULL terminator</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">fd_note_buf<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><name pos:line="9" pos:column="22">FD_DESC_SZ<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">helper_server<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">srv<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">nargs<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">k<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">pid_t<pos:position pos:line="13" pos:column="10"/></name></type> <name pos:line="13" pos:column="11">pid<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">rfd<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">wfd<pos:position pos:line="15" pos:column="12"/></name></decl>;<pos:position pos:line="15" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">void<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type> <name pos:line="16" pos:column="12">hIpc<pos:position pos:line="16" pos:column="16"/></name></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">wordlist<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">w<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">hlp<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">cmdline<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">==<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">NULL<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
        <block type="pseudo"><return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">progname<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name><name pos:line="22" pos:column="16">hlp<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">cmdline<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">key<pos:position pos:line="22" pos:column="33"/></name></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">s<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">strrchr<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">progname<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="32">'/'<pos:position pos:line="24" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">shortname<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">xstrdup<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">s<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">+<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="26" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">shortname<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">xstrdup<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">progname<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="29" pos:column="5">/* figure out how many new child are actually needed. */</comment>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">need_new<pos:position pos:line="30" pos:column="17"/></name> <init pos:line="30" pos:column="18">= <expr><call><name><name pos:line="30" pos:column="20">hlp<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">childs<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">.<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">needNew<pos:position pos:line="30" pos:column="39"/></name></name><argument_list pos:line="30" pos:column="39">()<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="42"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">debugs<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="number" pos:line="32" pos:column="12">84<pos:position pos:line="32" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="16">DBG_IMPORTANT<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="31">"helperOpenServers: Starting "<pos:position pos:line="32" pos:column="61"/></literal> <operator pos:line="32" pos:column="62">&lt;&lt;<pos:position pos:line="32" pos:column="70"/></operator> <name pos:line="32" pos:column="65">need_new<pos:position pos:line="32" pos:column="73"/></name> <operator pos:line="32" pos:column="74">&lt;&lt;<pos:position pos:line="32" pos:column="82"/></operator> <literal type="string" pos:line="32" pos:column="77">"/"<pos:position pos:line="32" pos:column="80"/></literal> <operator pos:line="32" pos:column="81">&lt;&lt;<pos:position pos:line="32" pos:column="89"/></operator> <name><name pos:line="32" pos:column="84">hlp<pos:position pos:line="32" pos:column="87"/></name><operator pos:line="32" pos:column="87">-&gt;<pos:position pos:line="32" pos:column="92"/></operator><name pos:line="32" pos:column="89">childs<pos:position pos:line="32" pos:column="95"/></name><operator pos:line="32" pos:column="95">.<pos:position pos:line="32" pos:column="96"/></operator><name pos:line="32" pos:column="96">n_max<pos:position pos:line="32" pos:column="101"/></name></name> <operator pos:line="32" pos:column="102">&lt;&lt;<pos:position pos:line="32" pos:column="110"/></operator> <literal type="string" pos:line="32" pos:column="105">" '"<pos:position pos:line="32" pos:column="109"/></literal> <operator pos:line="32" pos:column="110">&lt;&lt;<pos:position pos:line="32" pos:column="118"/></operator> <name pos:line="32" pos:column="113">shortname<pos:position pos:line="32" pos:column="122"/></name> <operator pos:line="32" pos:column="123">&lt;&lt;<pos:position pos:line="32" pos:column="131"/></operator> <literal type="string" pos:line="32" pos:column="126">"' processes"<pos:position pos:line="32" pos:column="139"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="141"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">need_new<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">&lt;<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="20">1<pos:position pos:line="34" pos:column="21"/></literal></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22"> <block pos:line="34" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">84<pos:position pos:line="35" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="20">DBG_IMPORTANT<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"helperOpenServers: No '"<pos:position pos:line="35" pos:column="60"/></literal> <operator pos:line="35" pos:column="61">&lt;&lt;<pos:position pos:line="35" pos:column="69"/></operator> <name pos:line="35" pos:column="64">shortname<pos:position pos:line="35" pos:column="73"/></name> <operator pos:line="35" pos:column="74">&lt;&lt;<pos:position pos:line="35" pos:column="82"/></operator> <literal type="string" pos:line="35" pos:column="77">"' processes needed."<pos:position pos:line="35" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="100"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">procname<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <operator pos:line="38" pos:column="16">(<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">char<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">*<pos:position pos:line="38" pos:column="23"/></operator><operator pos:line="38" pos:column="23">)<pos:position pos:line="38" pos:column="24"/></operator><call><name pos:line="38" pos:column="24">xmalloc<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><call><name pos:line="38" pos:column="32">strlen<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">shortname<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call> <operator pos:line="38" pos:column="50">+<pos:position pos:line="38" pos:column="51"/></operator> <literal type="number" pos:line="38" pos:column="52">3<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">snprintf<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">procname<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="24">strlen<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">shortname<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call> <operator pos:line="40" pos:column="42">+<pos:position pos:line="40" pos:column="43"/></operator> <literal type="number" pos:line="40" pos:column="44">3<pos:position pos:line="40" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="47">"(%s)"<pos:position pos:line="40" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">shortname<pos:position pos:line="40" pos:column="64"/></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">args<pos:position pos:line="42" pos:column="9"/></name><index pos:line="42" pos:column="9">[<expr><name pos:line="42" pos:column="10">nargs<pos:position pos:line="42" pos:column="15"/></name></expr>]<pos:position pos:line="42" pos:column="16"/></index></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">procname<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="43" pos:column="5">++<pos:position pos:line="43" pos:column="7"/></operator><name pos:line="43" pos:column="7">nargs<pos:position pos:line="43" pos:column="12"/></name></expr>;<pos:position pos:line="43" pos:column="13"/></expr_stmt>

    <for pos:line="45" pos:column="5">for <control pos:line="45" pos:column="9">(<init><expr><name pos:line="45" pos:column="10">w<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name><name pos:line="45" pos:column="14">hlp<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">cmdline<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">next<pos:position pos:line="45" pos:column="32"/></name></name></expr>;<pos:position pos:line="45" pos:column="33"/></init> <condition><expr><name pos:line="45" pos:column="34">w<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">&amp;&amp;<pos:position pos:line="45" pos:column="46"/></operator> <name pos:line="45" pos:column="39">nargs<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">&lt;<pos:position pos:line="45" pos:column="49"/></operator> <name pos:line="45" pos:column="47">HELPER_MAX_ARGS<pos:position pos:line="45" pos:column="62"/></name></expr>;<pos:position pos:line="45" pos:column="63"/></condition> <incr><expr><name pos:line="45" pos:column="64">w<pos:position pos:line="45" pos:column="65"/></name> <operator pos:line="45" pos:column="66">=<pos:position pos:line="45" pos:column="67"/></operator> <name><name pos:line="45" pos:column="68">w<pos:position pos:line="45" pos:column="69"/></name><operator pos:line="45" pos:column="69">-&gt;<pos:position pos:line="45" pos:column="74"/></operator><name pos:line="45" pos:column="71">next<pos:position pos:line="45" pos:column="75"/></name></name></expr></incr>)<pos:position pos:line="45" pos:column="76"/></control> <block pos:line="45" pos:column="77">{
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">args<pos:position pos:line="46" pos:column="13"/></name><index pos:line="46" pos:column="13">[<expr><name pos:line="46" pos:column="14">nargs<pos:position pos:line="46" pos:column="19"/></name></expr>]<pos:position pos:line="46" pos:column="20"/></index></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <name><name pos:line="46" pos:column="23">w<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">key<pos:position pos:line="46" pos:column="29"/></name></name></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="47" pos:column="9">++<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">nargs<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">args<pos:position pos:line="50" pos:column="9"/></name><index pos:line="50" pos:column="9">[<expr><name pos:line="50" pos:column="10">nargs<pos:position pos:line="50" pos:column="15"/></name></expr>]<pos:position pos:line="50" pos:column="16"/></index></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">NULL<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="51" pos:column="5">++<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">nargs<pos:position pos:line="51" pos:column="12"/></name></expr>;<pos:position pos:line="51" pos:column="13"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">assert<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">nargs<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">&lt;=<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="21">HELPER_MAX_ARGS<pos:position pos:line="53" pos:column="36"/></name></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>

    <for pos:line="55" pos:column="5">for <control pos:line="55" pos:column="9">(<init><expr><name pos:line="55" pos:column="10">k<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <literal type="number" pos:line="55" pos:column="14">0<pos:position pos:line="55" pos:column="15"/></literal></expr>;<pos:position pos:line="55" pos:column="16"/></init> <condition><expr><name pos:line="55" pos:column="17">k<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">&lt;<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="21">need_new<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></condition> <incr><expr><operator pos:line="55" pos:column="31">++<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">k<pos:position pos:line="55" pos:column="34"/></name></expr></incr>)<pos:position pos:line="55" pos:column="35"/></control> <block pos:line="55" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">getCurrentTime<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">()<pos:position pos:line="56" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">rfd<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">wfd<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <operator pos:line="57" pos:column="21">-<pos:position pos:line="57" pos:column="22"/></operator><literal type="number" pos:line="57" pos:column="22">1<pos:position pos:line="57" pos:column="23"/></literal></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">pid<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <call><name pos:line="58" pos:column="15">ipcCreate<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name><name pos:line="58" pos:column="25">hlp<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">ipc_type<pos:position pos:line="58" pos:column="38"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="59" pos:column="25">progname<pos:position pos:line="59" pos:column="33"/></name></expr></argument>,
                        <argument><expr><name pos:line="60" pos:column="25">args<pos:position pos:line="60" pos:column="29"/></name></expr></argument>,
                        <argument><expr><name pos:line="61" pos:column="25">shortname<pos:position pos:line="61" pos:column="34"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="62" pos:column="25">hlp<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">-&gt;<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="30">addr<pos:position pos:line="62" pos:column="34"/></name></name></expr></argument>,
                        <argument><expr><operator pos:line="63" pos:column="25">&amp;<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="26">rfd<pos:position pos:line="63" pos:column="29"/></name></expr></argument>,
                        <argument><expr><operator pos:line="64" pos:column="25">&amp;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="26">wfd<pos:position pos:line="64" pos:column="29"/></name></expr></argument>,
                        <argument><expr><operator pos:line="65" pos:column="25">&amp;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="26">hIpc<pos:position pos:line="65" pos:column="30"/></name></expr></argument>)<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">pid<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">&lt;<pos:position pos:line="67" pos:column="21"/></operator> <literal type="number" pos:line="67" pos:column="19">0<pos:position pos:line="67" pos:column="20"/></literal></expr>)<pos:position pos:line="67" pos:column="21"/></condition><then pos:line="67" pos:column="21"> <block pos:line="67" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">debugs<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><literal type="number" pos:line="68" pos:column="20">84<pos:position pos:line="68" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="24">DBG_IMPORTANT<pos:position pos:line="68" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="39">"WARNING: Cannot run '"<pos:position pos:line="68" pos:column="62"/></literal> <operator pos:line="68" pos:column="63">&lt;&lt;<pos:position pos:line="68" pos:column="71"/></operator> <name pos:line="68" pos:column="66">progname<pos:position pos:line="68" pos:column="74"/></name> <operator pos:line="68" pos:column="75">&lt;&lt;<pos:position pos:line="68" pos:column="83"/></operator> <literal type="string" pos:line="68" pos:column="78">"' process."<pos:position pos:line="68" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="92"/></expr_stmt>
            <continue pos:line="69" pos:column="13">continue;<pos:position pos:line="69" pos:column="22"/></continue>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="72" pos:column="9">++<pos:position pos:line="72" pos:column="11"/></operator> <name><name pos:line="72" pos:column="12">hlp<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">childs<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">.<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="24">n_running<pos:position pos:line="72" pos:column="33"/></name></name></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="73" pos:column="9">++<pos:position pos:line="73" pos:column="11"/></operator> <name><name pos:line="73" pos:column="12">hlp<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">childs<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">n_active<pos:position pos:line="73" pos:column="32"/></name></name></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">srv<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <operator pos:line="74" pos:column="15">new<pos:position pos:line="74" pos:column="18"/></operator> <name pos:line="74" pos:column="19">helper_server<pos:position pos:line="74" pos:column="32"/></name></expr>;<pos:position pos:line="74" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">srv<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">-&gt;<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="14">hIpc<pos:position pos:line="75" pos:column="18"/></name></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">hIpc<pos:position pos:line="75" pos:column="25"/></name></expr>;<pos:position pos:line="75" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">srv<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">pid<pos:position pos:line="76" pos:column="17"/></name></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">pid<pos:position pos:line="76" pos:column="23"/></name></expr>;<pos:position pos:line="76" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="77" pos:column="9">srv<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">initStats<pos:position pos:line="77" pos:column="23"/></name></name><argument_list pos:line="77" pos:column="23">()<pos:position pos:line="77" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">srv<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">addr<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name><name pos:line="78" pos:column="21">hlp<pos:position pos:line="78" pos:column="24"/></name><operator pos:line="78" pos:column="24">-&gt;<pos:position pos:line="78" pos:column="29"/></operator><name pos:line="78" pos:column="26">addr<pos:position pos:line="78" pos:column="30"/></name></name></expr>;<pos:position pos:line="78" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">srv<pos:position pos:line="79" pos:column="12"/></name><operator pos:line="79" pos:column="12">-&gt;<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="14">readPipe<pos:position pos:line="79" pos:column="22"/></name></name> <operator pos:line="79" pos:column="23">=<pos:position pos:line="79" pos:column="24"/></operator> <operator pos:line="79" pos:column="25">new<pos:position pos:line="79" pos:column="28"/></operator> <name><name pos:line="79" pos:column="29">Comm<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">::<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="35">Connection<pos:position pos:line="79" pos:column="45"/></name></name></expr>;<pos:position pos:line="79" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">srv<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">-&gt;<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="14">readPipe<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">-&gt;<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="24">fd<pos:position pos:line="80" pos:column="26"/></name></name> <operator pos:line="80" pos:column="27">=<pos:position pos:line="80" pos:column="28"/></operator> <name pos:line="80" pos:column="29">rfd<pos:position pos:line="80" pos:column="32"/></name></expr>;<pos:position pos:line="80" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">srv<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">writePipe<pos:position pos:line="81" pos:column="23"/></name></name> <operator pos:line="81" pos:column="24">=<pos:position pos:line="81" pos:column="25"/></operator> <operator pos:line="81" pos:column="26">new<pos:position pos:line="81" pos:column="29"/></operator> <name><name pos:line="81" pos:column="30">Comm<pos:position pos:line="81" pos:column="34"/></name><operator pos:line="81" pos:column="34">::<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="36">Connection<pos:position pos:line="81" pos:column="46"/></name></name></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">srv<pos:position pos:line="82" pos:column="12"/></name><operator pos:line="82" pos:column="12">-&gt;<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="14">writePipe<pos:position pos:line="82" pos:column="23"/></name><operator pos:line="82" pos:column="23">-&gt;<pos:position pos:line="82" pos:column="28"/></operator><name pos:line="82" pos:column="25">fd<pos:position pos:line="82" pos:column="27"/></name></name> <operator pos:line="82" pos:column="28">=<pos:position pos:line="82" pos:column="29"/></operator> <name pos:line="82" pos:column="30">wfd<pos:position pos:line="82" pos:column="33"/></name></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">srv<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">-&gt;<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="14">rbuf<pos:position pos:line="83" pos:column="18"/></name></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <operator pos:line="83" pos:column="21">(<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">char<pos:position pos:line="83" pos:column="26"/></name> <operator pos:line="83" pos:column="27">*<pos:position pos:line="83" pos:column="28"/></operator><operator pos:line="83" pos:column="28">)<pos:position pos:line="83" pos:column="29"/></operator><call><name pos:line="83" pos:column="29">memAllocBuf<pos:position pos:line="83" pos:column="40"/></name><argument_list pos:line="83" pos:column="40">(<argument><expr><name pos:line="83" pos:column="41">ReadBufSize<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="54">&amp;<pos:position pos:line="83" pos:column="59"/></operator><name><name pos:line="83" pos:column="55">srv<pos:position pos:line="83" pos:column="58"/></name><operator pos:line="83" pos:column="58">-&gt;<pos:position pos:line="83" pos:column="63"/></operator><name pos:line="83" pos:column="60">rbuf_sz<pos:position pos:line="83" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="84" pos:column="9">srv<pos:position pos:line="84" pos:column="12"/></name><operator pos:line="84" pos:column="12">-&gt;<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="14">wqueue<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <operator pos:line="84" pos:column="23">new<pos:position pos:line="84" pos:column="26"/></operator> <name pos:line="84" pos:column="27">MemBuf<pos:position pos:line="84" pos:column="33"/></name></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">srv<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">roffset<pos:position pos:line="85" pos:column="21"/></name></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <literal type="number" pos:line="85" pos:column="24">0<pos:position pos:line="85" pos:column="25"/></literal></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">srv<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">nextRequestId<pos:position pos:line="86" pos:column="27"/></name></name> <operator pos:line="86" pos:column="28">=<pos:position pos:line="86" pos:column="29"/></operator> <literal type="number" pos:line="86" pos:column="30">0<pos:position pos:line="86" pos:column="31"/></literal></expr>;<pos:position pos:line="86" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="87" pos:column="9">srv<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">-&gt;<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="14">replyXaction<pos:position pos:line="87" pos:column="26"/></name></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <name pos:line="87" pos:column="29">NULL<pos:position pos:line="87" pos:column="33"/></name></expr>;<pos:position pos:line="87" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="88" pos:column="9">srv<pos:position pos:line="88" pos:column="12"/></name><operator pos:line="88" pos:column="12">-&gt;<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="14">ignoreToEom<pos:position pos:line="88" pos:column="25"/></name></name> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <literal type="boolean" pos:line="88" pos:column="28">false<pos:position pos:line="88" pos:column="33"/></literal></expr>;<pos:position pos:line="88" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">srv<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">-&gt;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="14">parent<pos:position pos:line="89" pos:column="20"/></name></name> <operator pos:line="89" pos:column="21">=<pos:position pos:line="89" pos:column="22"/></operator> <call><name pos:line="89" pos:column="23">cbdataReference<pos:position pos:line="89" pos:column="38"/></name><argument_list pos:line="89" pos:column="38">(<argument><expr><name pos:line="89" pos:column="39">hlp<pos:position pos:line="89" pos:column="42"/></name></expr></argument>)<pos:position pos:line="89" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">dlinkAddTail<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><name pos:line="90" pos:column="22">srv<pos:position pos:line="90" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="27">&amp;<pos:position pos:line="90" pos:column="32"/></operator><name><name pos:line="90" pos:column="28">srv<pos:position pos:line="90" pos:column="31"/></name><operator pos:line="90" pos:column="31">-&gt;<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="33">link<pos:position pos:line="90" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="39">&amp;<pos:position pos:line="90" pos:column="44"/></operator><name><name pos:line="90" pos:column="40">hlp<pos:position pos:line="90" pos:column="43"/></name><operator pos:line="90" pos:column="43">-&gt;<pos:position pos:line="90" pos:column="48"/></operator><name pos:line="90" pos:column="45">servers<pos:position pos:line="90" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="54"/></expr_stmt>

        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">rfd<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">==<pos:position pos:line="92" pos:column="19"/></operator> <name pos:line="92" pos:column="20">wfd<pos:position pos:line="92" pos:column="23"/></name></expr>)<pos:position pos:line="92" pos:column="24"/></condition><then pos:line="92" pos:column="24"> <block pos:line="92" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">snprintf<pos:position pos:line="93" pos:column="21"/></name><argument_list pos:line="93" pos:column="21">(<argument><expr><name pos:line="93" pos:column="22">fd_note_buf<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="35">FD_DESC_SZ<pos:position pos:line="93" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="47">"%s #%d"<pos:position pos:line="93" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="57">shortname<pos:position pos:line="93" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="68">k<pos:position pos:line="93" pos:column="69"/></name> <operator pos:line="93" pos:column="70">+<pos:position pos:line="93" pos:column="71"/></operator> <literal type="number" pos:line="93" pos:column="72">1<pos:position pos:line="93" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">fd_note<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">rfd<pos:position pos:line="94" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="26">fd_note_buf<pos:position pos:line="94" pos:column="37"/></name></expr></argument>)<pos:position pos:line="94" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then> <else pos:line="95" pos:column="11">else <block pos:line="95" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">snprintf<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><name pos:line="96" pos:column="22">fd_note_buf<pos:position pos:line="96" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="35">FD_DESC_SZ<pos:position pos:line="96" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="47">"reading %s #%d"<pos:position pos:line="96" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="65">shortname<pos:position pos:line="96" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="76">k<pos:position pos:line="96" pos:column="77"/></name> <operator pos:line="96" pos:column="78">+<pos:position pos:line="96" pos:column="79"/></operator> <literal type="number" pos:line="96" pos:column="80">1<pos:position pos:line="96" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">fd_note<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">rfd<pos:position pos:line="97" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="26">fd_note_buf<pos:position pos:line="97" pos:column="37"/></name></expr></argument>)<pos:position pos:line="97" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">snprintf<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name pos:line="98" pos:column="22">fd_note_buf<pos:position pos:line="98" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="35">FD_DESC_SZ<pos:position pos:line="98" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="47">"writing %s #%d"<pos:position pos:line="98" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="65">shortname<pos:position pos:line="98" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="76">k<pos:position pos:line="98" pos:column="77"/></name> <operator pos:line="98" pos:column="78">+<pos:position pos:line="98" pos:column="79"/></operator> <literal type="number" pos:line="98" pos:column="80">1<pos:position pos:line="98" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">fd_note<pos:position pos:line="99" pos:column="20"/></name><argument_list pos:line="99" pos:column="20">(<argument><expr><name pos:line="99" pos:column="21">wfd<pos:position pos:line="99" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="26">fd_note_buf<pos:position pos:line="99" pos:column="37"/></name></expr></argument>)<pos:position pos:line="99" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="102" pos:column="9">commSetNonBlocking<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">rfd<pos:position pos:line="102" pos:column="31"/></name></expr></argument>)<pos:position pos:line="102" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="33"/></expr_stmt>

        <if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name pos:line="104" pos:column="13">wfd<pos:position pos:line="104" pos:column="16"/></name> <operator pos:line="104" pos:column="17">!=<pos:position pos:line="104" pos:column="19"/></operator> <name pos:line="104" pos:column="20">rfd<pos:position pos:line="104" pos:column="23"/></name></expr>)<pos:position pos:line="104" pos:column="24"/></condition><then pos:line="104" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="13">commSetNonBlocking<pos:position pos:line="105" pos:column="31"/></name><argument_list pos:line="105" pos:column="31">(<argument><expr><name pos:line="105" pos:column="32">wfd<pos:position pos:line="105" pos:column="35"/></name></expr></argument>)<pos:position pos:line="105" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="37"/></expr_stmt></block></then></if>

        <decl_stmt><decl><type><name><name pos:line="107" pos:column="9">AsyncCall<pos:position pos:line="107" pos:column="18"/></name><operator pos:line="107" pos:column="18">::<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="20">Pointer<pos:position pos:line="107" pos:column="27"/></name></name></type> <name pos:line="107" pos:column="28">closeCall<pos:position pos:line="107" pos:column="37"/></name> <init pos:line="107" pos:column="38">= <expr><call><name pos:line="107" pos:column="40">asyncCall<pos:position pos:line="107" pos:column="49"/></name><argument_list pos:line="107" pos:column="49">(<argument><expr><literal type="number" pos:line="107" pos:column="50">5<pos:position pos:line="107" pos:column="51"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="107" pos:column="52">4<pos:position pos:line="107" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="55">"helperServerFree"<pos:position pos:line="107" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="75">cbdataDialer<pos:position pos:line="107" pos:column="87"/></name><argument_list pos:line="107" pos:column="87">(<argument><expr><name pos:line="107" pos:column="88">helperServerFree<pos:position pos:line="107" pos:column="104"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="106">srv<pos:position pos:line="107" pos:column="109"/></name></expr></argument>)<pos:position pos:line="107" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="111"/></argument_list></call></expr></init></decl>;<pos:position pos:line="107" pos:column="112"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">comm_add_close_handler<pos:position pos:line="108" pos:column="31"/></name><argument_list pos:line="108" pos:column="31">(<argument><expr><name pos:line="108" pos:column="32">rfd<pos:position pos:line="108" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="37">closeCall<pos:position pos:line="108" pos:column="46"/></name></expr></argument>)<pos:position pos:line="108" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="48"/></expr_stmt>

        <if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name><name pos:line="110" pos:column="13">hlp<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">timeout<pos:position pos:line="110" pos:column="25"/></name></name> <operator pos:line="110" pos:column="26">&amp;&amp;<pos:position pos:line="110" pos:column="36"/></operator> <name><name pos:line="110" pos:column="29">hlp<pos:position pos:line="110" pos:column="32"/></name><operator pos:line="110" pos:column="32">-&gt;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="34">childs<pos:position pos:line="110" pos:column="40"/></name><operator pos:line="110" pos:column="40">.<pos:position pos:line="110" pos:column="41"/></operator><name pos:line="110" pos:column="41">concurrency<pos:position pos:line="110" pos:column="52"/></name></name></expr>)<pos:position pos:line="110" pos:column="53"/></condition><then pos:line="110" pos:column="53"> <block pos:line="110" pos:column="54">{
            <decl_stmt><decl><type><name><name pos:line="111" pos:column="13">AsyncCall<pos:position pos:line="111" pos:column="22"/></name><operator pos:line="111" pos:column="22">::<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">Pointer<pos:position pos:line="111" pos:column="31"/></name></name></type> <name pos:line="111" pos:column="32">timeoutCall<pos:position pos:line="111" pos:column="43"/></name> <init pos:line="111" pos:column="44">= <expr><call><name pos:line="111" pos:column="46">commCbCall<pos:position pos:line="111" pos:column="56"/></name><argument_list pos:line="111" pos:column="56">(<argument><expr><literal type="number" pos:line="111" pos:column="57">84<pos:position pos:line="111" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="61">4<pos:position pos:line="111" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="64">"helper_server::requestTimeout"<pos:position pos:line="111" pos:column="95"/></literal></expr></argument>,
                                             <argument><expr><call><name pos:line="112" pos:column="46">CommTimeoutCbPtrFun<pos:position pos:line="112" pos:column="65"/></name><argument_list pos:line="112" pos:column="65">(<argument><expr><name><name pos:line="112" pos:column="66">helper_server<pos:position pos:line="112" pos:column="79"/></name><operator pos:line="112" pos:column="79">::<pos:position pos:line="112" pos:column="81"/></operator><name pos:line="112" pos:column="81">requestTimeout<pos:position pos:line="112" pos:column="95"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="97">srv<pos:position pos:line="112" pos:column="100"/></name></expr></argument>)<pos:position pos:line="112" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="102"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="103"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">commSetConnTimeout<pos:position pos:line="113" pos:column="31"/></name><argument_list pos:line="113" pos:column="31">(<argument><expr><name><name pos:line="113" pos:column="32">srv<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">-&gt;<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="37">readPipe<pos:position pos:line="113" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="47">hlp<pos:position pos:line="113" pos:column="50"/></name><operator pos:line="113" pos:column="50">-&gt;<pos:position pos:line="113" pos:column="55"/></operator><name pos:line="113" pos:column="52">timeout<pos:position pos:line="113" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="61">timeoutCall<pos:position pos:line="113" pos:column="72"/></name></expr></argument>)<pos:position pos:line="113" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name><name pos:line="116" pos:column="9">AsyncCall<pos:position pos:line="116" pos:column="18"/></name><operator pos:line="116" pos:column="18">::<pos:position pos:line="116" pos:column="20"/></operator><name pos:line="116" pos:column="20">Pointer<pos:position pos:line="116" pos:column="27"/></name></name></type> <name pos:line="116" pos:column="28">call<pos:position pos:line="116" pos:column="32"/></name> <init pos:line="116" pos:column="33">= <expr><call><name pos:line="116" pos:column="35">commCbCall<pos:position pos:line="116" pos:column="45"/></name><argument_list pos:line="116" pos:column="45">(<argument><expr><literal type="number" pos:line="116" pos:column="46">5<pos:position pos:line="116" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="116" pos:column="48">4<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="51">"helperHandleRead"<pos:position pos:line="116" pos:column="69"/></literal></expr></argument>,
                                             <argument><expr><call><name pos:line="117" pos:column="46">CommIoCbPtrFun<pos:position pos:line="117" pos:column="60"/></name><argument_list pos:line="117" pos:column="60">(<argument><expr><name pos:line="117" pos:column="61">helperHandleRead<pos:position pos:line="117" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="79">srv<pos:position pos:line="117" pos:column="82"/></name></expr></argument>)<pos:position pos:line="117" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="117" pos:column="85"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">comm_read<pos:position pos:line="118" pos:column="18"/></name><argument_list pos:line="118" pos:column="18">(<argument><expr><name><name pos:line="118" pos:column="19">srv<pos:position pos:line="118" pos:column="22"/></name><operator pos:line="118" pos:column="22">-&gt;<pos:position pos:line="118" pos:column="27"/></operator><name pos:line="118" pos:column="24">readPipe<pos:position pos:line="118" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="34">srv<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">-&gt;<pos:position pos:line="118" pos:column="42"/></operator><name pos:line="118" pos:column="39">rbuf<pos:position pos:line="118" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="45">srv<pos:position pos:line="118" pos:column="48"/></name><operator pos:line="118" pos:column="48">-&gt;<pos:position pos:line="118" pos:column="53"/></operator><name pos:line="118" pos:column="50">rbuf_sz<pos:position pos:line="118" pos:column="57"/></name></name> <operator pos:line="118" pos:column="58">-<pos:position pos:line="118" pos:column="59"/></operator> <literal type="number" pos:line="118" pos:column="60">1<pos:position pos:line="118" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="63">call<pos:position pos:line="118" pos:column="67"/></name></expr></argument>)<pos:position pos:line="118" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="121" pos:column="5">hlp<pos:position pos:line="121" pos:column="8"/></name><operator pos:line="121" pos:column="8">-&gt;<pos:position pos:line="121" pos:column="13"/></operator><name pos:line="121" pos:column="10">last_restart<pos:position pos:line="121" pos:column="22"/></name></name> <operator pos:line="121" pos:column="23">=<pos:position pos:line="121" pos:column="24"/></operator> <name pos:line="121" pos:column="25">squid_curtime<pos:position pos:line="121" pos:column="38"/></name></expr>;<pos:position pos:line="121" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">safe_free<pos:position pos:line="122" pos:column="14"/></name><argument_list pos:line="122" pos:column="14">(<argument><expr><name pos:line="122" pos:column="15">shortname<pos:position pos:line="122" pos:column="24"/></name></expr></argument>)<pos:position pos:line="122" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">safe_free<pos:position pos:line="123" pos:column="14"/></name><argument_list pos:line="123" pos:column="14">(<argument><expr><name pos:line="123" pos:column="15">procname<pos:position pos:line="123" pos:column="23"/></name></expr></argument>)<pos:position pos:line="123" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="124" pos:column="5">helperKickQueue<pos:position pos:line="124" pos:column="20"/></name><argument_list pos:line="124" pos:column="20">(<argument><expr><name pos:line="124" pos:column="21">hlp<pos:position pos:line="124" pos:column="24"/></name></expr></argument>)<pos:position pos:line="124" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="26"/></expr_stmt>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2522_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">storeIdStart<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">ClientHttpRequest<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">http<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">HLPCB<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">handler<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">void<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">data<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">http<pos:position pos:line="4" pos:column="16"/></name></expr></argument>)<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">handler<pos:position pos:line="5" pos:column="19"/></name></expr></argument>)<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">61<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">5<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"storeIdStart: '"<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">&lt;&lt;<pos:position pos:line="6" pos:column="45"/></operator> <name><name pos:line="6" pos:column="40">http<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">uri<pos:position pos:line="6" pos:column="49"/></name></name> <operator pos:line="6" pos:column="50">&lt;&lt;<pos:position pos:line="6" pos:column="58"/></operator> <literal type="string" pos:line="6" pos:column="53">"'"<pos:position pos:line="6" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="58"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">Config<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">onoff<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">store_id_bypass<pos:position pos:line="8" pos:column="37"/></name></name> <operator pos:line="8" pos:column="38">&amp;&amp;<pos:position pos:line="8" pos:column="48"/></operator> <name><name pos:line="8" pos:column="41">storeIds<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">stats<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">.<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">queue_size<pos:position pos:line="8" pos:column="67"/></name></name></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68"> <block pos:line="8" pos:column="69">{
        <comment type="block" pos:line="9" pos:column="9">/* Skip StoreID Helper if there is one request queued */</comment>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">++<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">storeIdBypassed<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="11" pos:column="9">Helper<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">::<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">Reply<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">bypassReply<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="13" pos:column="9">bypassReply<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">result<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name><name pos:line="13" pos:column="30">Helper<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">::<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">Okay<pos:position pos:line="13" pos:column="42"/></name></name></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">bypassReply<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">notes<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">add<pos:position pos:line="15" pos:column="30"/></name></name><argument_list pos:line="15" pos:column="30">(<argument><expr><literal type="string" pos:line="15" pos:column="31">"message"<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="41">"StoreId helper queue too long. Bypassed."<pos:position pos:line="15" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">handler<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">data<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">bypassReply<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">constructHelperQuery<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="string" pos:line="20" pos:column="26">"storeId helper"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">storeIds<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">storeIdHandleReply<pos:position pos:line="20" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="74">http<pos:position pos:line="20" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="80">handler<pos:position pos:line="20" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="89">data<pos:position pos:line="20" pos:column="93"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="95">storeIdExtrasFmt<pos:position pos:line="20" pos:column="111"/></name></expr></argument>)<pos:position pos:line="20" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="113"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

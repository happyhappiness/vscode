<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4754_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLIdent<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">match<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">ACLChecklist<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">cl<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ACLFilledChecklist<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">checklist<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">Filled<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">cl<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">checklist<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">rfc931<pos:position pos:line="5" pos:column="26"/></name><index pos:line="5" pos:column="26">[<expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30"> <block pos:line="5" pos:column="31">{
        <return pos:line="6" pos:column="9">return <expr><call><name><name pos:line="6" pos:column="16">data<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">match<pos:position pos:line="6" pos:column="27"/></name></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name><name pos:line="6" pos:column="28">checklist<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">rfc931<pos:position pos:line="6" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <elseif pos:line="7" pos:column="7">else <if pos:line="7" pos:column="12">if <condition pos:line="7" pos:column="15">(<expr><call><name><name pos:line="7" pos:column="16">checklist<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">conn<pos:position pos:line="7" pos:column="31"/></name></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call> <operator pos:line="7" pos:column="34">!=<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">&amp;&amp;<pos:position pos:line="7" pos:column="52"/></operator> <call><name><name pos:line="7" pos:column="45">checklist<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">conn<pos:position pos:line="7" pos:column="60"/></name></name><argument_list pos:line="7" pos:column="60">()<pos:position pos:line="7" pos:column="62"/></argument_list></call><operator pos:line="7" pos:column="62">-&gt;<pos:position pos:line="7" pos:column="67"/></operator><name><name pos:line="7" pos:column="64">rfc931<pos:position pos:line="7" pos:column="70"/></name><index pos:line="7" pos:column="70">[<expr><literal type="number" pos:line="7" pos:column="71">0<pos:position pos:line="7" pos:column="72"/></literal></expr>]<pos:position pos:line="7" pos:column="73"/></index></name></expr>)<pos:position pos:line="7" pos:column="74"/></condition><then pos:line="7" pos:column="74"> <block pos:line="7" pos:column="75">{
        <return pos:line="8" pos:column="9">return <expr><call><name><name pos:line="8" pos:column="16">data<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">match<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><call><name><name pos:line="8" pos:column="28">checklist<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">conn<pos:position pos:line="8" pos:column="43"/></name></name><argument_list pos:line="8" pos:column="43">()<pos:position pos:line="8" pos:column="45"/></argument_list></call><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">rfc931<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if></elseif> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">28<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">HERE<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&lt;&lt;<pos:position pos:line="10" pos:column="36"/></operator> <literal type="string" pos:line="10" pos:column="31">"switching to ident lookup state"<pos:position pos:line="10" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">checklist<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">changeState<pos:position pos:line="11" pos:column="31"/></name></name><argument_list pos:line="11" pos:column="31">(<argument><expr><call><name><name pos:line="11" pos:column="32">IdentLookup<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">::<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">Instance<pos:position pos:line="11" pos:column="53"/></name></name><argument_list pos:line="11" pos:column="53">()<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

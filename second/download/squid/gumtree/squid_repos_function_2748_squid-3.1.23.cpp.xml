<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2748_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">insertEntry<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">HttpHeaderEntry<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">e<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">e<pos:position pos:line="4" pos:column="13"/></name></expr></argument>)<pos:position pos:line="4" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert_eid<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name><name pos:line="5" pos:column="16">e<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">id<pos:position pos:line="5" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">55<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">7<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">this<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="string" pos:line="7" pos:column="27">" adding entry: "<pos:position pos:line="7" pos:column="44"/></literal> <operator pos:line="7" pos:column="45">&lt;&lt;<pos:position pos:line="7" pos:column="53"/></operator> <name><name pos:line="7" pos:column="48">e<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">id<pos:position pos:line="7" pos:column="53"/></name></name> <operator pos:line="7" pos:column="54">&lt;&lt;<pos:position pos:line="7" pos:column="62"/></operator> <literal type="string" pos:line="7" pos:column="57">" at "<pos:position pos:line="7" pos:column="63"/></literal> <operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator>
           <name><name pos:line="8" pos:column="12">entries<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">count<pos:position pos:line="8" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">CBIT_TEST<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">mask<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="25">e<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">id<pos:position pos:line="10" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="9">Headers<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><name><name pos:line="11" pos:column="17">e<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">id<pos:position pos:line="11" pos:column="22"/></name></name></expr>]<pos:position pos:line="11" pos:column="23"/></index></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name><name pos:line="11" pos:column="24">stat<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">repCount<pos:position pos:line="11" pos:column="37"/></name></name><operator pos:line="11" pos:column="37">++<pos:position pos:line="11" pos:column="39"/></operator></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt></block></then>
    <else pos:line="12" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">CBIT_SET<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">mask<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="24">e<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">id<pos:position pos:line="13" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">entries<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">insert<pos:position pos:line="15" pos:column="19"/></name></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">e<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* increment header length, allow for ": " and crlf */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">len<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">+=<pos:position pos:line="18" pos:column="11"/></operator> <call><name><name pos:line="18" pos:column="12">e<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">name<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">size<pos:position pos:line="18" pos:column="24"/></name></name><argument_list pos:line="18" pos:column="24">()<pos:position pos:line="18" pos:column="26"/></argument_list></call> <operator pos:line="18" pos:column="27">+<pos:position pos:line="18" pos:column="28"/></operator> <literal type="number" pos:line="18" pos:column="29">2<pos:position pos:line="18" pos:column="30"/></literal> <operator pos:line="18" pos:column="31">+<pos:position pos:line="18" pos:column="32"/></operator> <call><name><name pos:line="18" pos:column="33">e<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">value<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">.<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">size<pos:position pos:line="18" pos:column="46"/></name></name><argument_list pos:line="18" pos:column="46">()<pos:position pos:line="18" pos:column="48"/></argument_list></call> <operator pos:line="18" pos:column="49">+<pos:position pos:line="18" pos:column="50"/></operator> <literal type="number" pos:line="18" pos:column="51">2<pos:position pos:line="18" pos:column="52"/></literal></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

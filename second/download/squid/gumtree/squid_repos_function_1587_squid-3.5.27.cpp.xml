<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1587_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">mainRotate<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">icmpEngine<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">Close<pos:position pos:line="4" pos:column="21"/></name></name><argument_list pos:line="4" pos:column="21">()<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">redirectShutdown<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">()<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_AUTH<pos:position pos:line="6" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">authenticateRotate<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">()<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">externalAclShutdown<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">()<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">_db_rotate_log<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">()<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>       <comment type="block" pos:line="11" pos:column="29">/* cache.log */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">storeDirWriteCleanLogs<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">storeLogRotate<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">()<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>       <comment type="block" pos:line="13" pos:column="29">/* store.log */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">accessLogRotate<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">()<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>      <comment type="block" pos:line="14" pos:column="29">/* access.log */</comment>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">ICAP_CLIENT<pos:position pos:line="15" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">icapLogRotate<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">()<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>               <comment type="block" pos:line="16" pos:column="36">/*icap.log*/</comment>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">icmpEngine<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">Open<pos:position pos:line="18" pos:column="20"/></name></name><argument_list pos:line="18" pos:column="20">()<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">redirectInit<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">()<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><name pos:line="20" pos:column="5">USE_AUTH<pos:position pos:line="20" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">authenticateInit<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><operator pos:line="21" pos:column="22">&amp;<pos:position pos:line="21" pos:column="27"/></operator><name><name pos:line="21" pos:column="23">Auth<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">::<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">TheConfig<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">externalAclInit<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">()<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2600_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">dumpMallocStats<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">HAVE_MSTATS<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&amp;&amp;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="20">HAVE_GNUMALLOC_H<pos:position pos:line="4" pos:column="36"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">mstats<pos:position pos:line="6" pos:column="18"/></name></name></type> <name pos:line="6" pos:column="19">ms<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">mstats<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">()<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">fprintf<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">debug_log<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="24">"\ttotal space in arena:  %6d KB\n"<pos:position pos:line="7" pos:column="59"/></literal></expr></argument>,
            <argument><expr><call pos:line="8" pos:column="13">(<name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name>) <argument_list pos:line="8" pos:column="19">(<argument><expr><name><name pos:line="8" pos:column="20">ms<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">bytes_total<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">&gt;&gt;<pos:position pos:line="8" pos:column="40"/></operator> <literal type="number" pos:line="8" pos:column="38">10<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">debug_log<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="24">"\tTotal free:            %6d KB %d%%\n"<pos:position pos:line="9" pos:column="64"/></literal></expr></argument>,
            <argument><expr><call pos:line="10" pos:column="13">(<name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name>) <argument_list pos:line="10" pos:column="19">(<argument><expr><name><name pos:line="10" pos:column="20">ms<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">bytes_free<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">&gt;&gt;<pos:position pos:line="10" pos:column="39"/></operator> <literal type="number" pos:line="10" pos:column="37">10<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr></argument>,
            <argument><expr><call><name><name pos:line="11" pos:column="13">Math<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">::<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">intPercent<pos:position pos:line="11" pos:column="29"/></name></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">ms<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">bytes_free<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="45">ms<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">.<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">bytes_total<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
<cpp:elif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">elif<pos:position pos:line="12" pos:column="6"/></cpp:directive> <expr><name pos:line="12" pos:column="7">HAVE_MALLINFO<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&amp;&amp;<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="24">HAVE_STRUCT_MALLINFO<pos:position pos:line="12" pos:column="44"/></name></expr></cpp:elif>

    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">mallinfo<pos:position pos:line="14" pos:column="20"/></name></name></type> <name pos:line="14" pos:column="21">mp<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">t<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">do_mallinfo<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22">
        <block type="pseudo"><return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">mp<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">mallinfo<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">()<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">fprintf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">debug_log<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="24">"Memory usage for "<pos:position pos:line="22" pos:column="43"/></literal> <name pos:line="22" pos:column="44">APP_SHORTNAME<pos:position pos:line="22" pos:column="57"/></name> <literal type="string" pos:line="22" pos:column="58">" via mallinfo():\n"<pos:position pos:line="22" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fprintf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">debug_log<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="24">"\ttotal space in arena:  %6ld KB\n"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>,
            <argument><expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">long<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">)<pos:position pos:line="25" pos:column="19"/></operator><name><name pos:line="25" pos:column="19">mp<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">arena<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">&gt;&gt;<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="31">10<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">debug_log<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="24">"\tOrdinary blocks:       %6ld KB %6ld blks\n"<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>,
            <argument><expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">long<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">)<pos:position pos:line="28" pos:column="19"/></operator><name><name pos:line="28" pos:column="19">mp<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">uordblks<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">&gt;&gt;<pos:position pos:line="28" pos:column="36"/></operator> <literal type="number" pos:line="28" pos:column="34">10<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="38">(<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">long<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">)<pos:position pos:line="28" pos:column="44"/></operator><name><name pos:line="28" pos:column="44">mp<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">.<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">ordblks<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">fprintf<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">debug_log<pos:position pos:line="30" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="24">"\tSmall blocks:          %6ld KB %6ld blks\n"<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>,
            <argument><expr><operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">long<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">)<pos:position pos:line="31" pos:column="19"/></operator><name><name pos:line="31" pos:column="19">mp<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">usmblks<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">&gt;&gt;<pos:position pos:line="31" pos:column="35"/></operator> <literal type="number" pos:line="31" pos:column="33">10<pos:position pos:line="31" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="37">(<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">long<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">)<pos:position pos:line="31" pos:column="43"/></operator><name><name pos:line="31" pos:column="43">mp<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">.<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">smblks<pos:position pos:line="31" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">fprintf<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">debug_log<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="24">"\tHolding blocks:        %6ld KB %6ld blks\n"<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>,
            <argument><expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">long<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">)<pos:position pos:line="34" pos:column="19"/></operator><name><name pos:line="34" pos:column="19">mp<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">.<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">hblkhd<pos:position pos:line="34" pos:column="28"/></name></name> <operator pos:line="34" pos:column="29">&gt;&gt;<pos:position pos:line="34" pos:column="34"/></operator> <literal type="number" pos:line="34" pos:column="32">10<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="36">(<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="37">long<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">)<pos:position pos:line="34" pos:column="42"/></operator><name><name pos:line="34" pos:column="42">mp<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">.<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">hblks<pos:position pos:line="34" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">fprintf<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">debug_log<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="24">"\tFree Small blocks:     %6ld KB\n"<pos:position pos:line="36" pos:column="60"/></literal></expr></argument>,
            <argument><expr><operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">long<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">)<pos:position pos:line="37" pos:column="19"/></operator><name><name pos:line="37" pos:column="19">mp<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">fsmblks<pos:position pos:line="37" pos:column="29"/></name></name> <operator pos:line="37" pos:column="30">&gt;&gt;<pos:position pos:line="37" pos:column="35"/></operator> <literal type="number" pos:line="37" pos:column="33">10<pos:position pos:line="37" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">fprintf<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">debug_log<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="24">"\tFree Ordinary blocks:  %6ld KB\n"<pos:position pos:line="39" pos:column="60"/></literal></expr></argument>,
            <argument><expr><operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">long<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">)<pos:position pos:line="40" pos:column="19"/></operator><name><name pos:line="40" pos:column="19">mp<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">fordblks<pos:position pos:line="40" pos:column="30"/></name></name> <operator pos:line="40" pos:column="31">&gt;&gt;<pos:position pos:line="40" pos:column="36"/></operator> <literal type="number" pos:line="40" pos:column="34">10<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">t<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">=<pos:position pos:line="42" pos:column="8"/></operator> <name><name pos:line="42" pos:column="9">mp<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">uordblks<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">+<pos:position pos:line="42" pos:column="22"/></operator> <name><name pos:line="42" pos:column="23">mp<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">.<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">usmblks<pos:position pos:line="42" pos:column="33"/></name></name> <operator pos:line="42" pos:column="34">+<pos:position pos:line="42" pos:column="35"/></operator> <name><name pos:line="42" pos:column="36">mp<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">.<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">hblkhd<pos:position pos:line="42" pos:column="45"/></name></name></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">fprintf<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">debug_log<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="24">"\tTotal in use:          %6d KB %d%%\n"<pos:position pos:line="44" pos:column="64"/></literal></expr></argument>,
            <argument><expr><name pos:line="45" pos:column="13">t<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">&gt;&gt;<pos:position pos:line="45" pos:column="20"/></operator> <literal type="number" pos:line="45" pos:column="18">10<pos:position pos:line="45" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="45" pos:column="22">Math<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">::<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">intPercent<pos:position pos:line="45" pos:column="38"/></name></name><argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">t<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="42">mp<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">arena<pos:position pos:line="45" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name pos:line="47" pos:column="5">t<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <name><name pos:line="47" pos:column="9">mp<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">.<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">fsmblks<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">+<pos:position pos:line="47" pos:column="21"/></operator> <name><name pos:line="47" pos:column="22">mp<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">.<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="25">fordblks<pos:position pos:line="47" pos:column="33"/></name></name></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">fprintf<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">debug_log<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="24">"\tTotal free:            %6d KB %d%%\n"<pos:position pos:line="49" pos:column="64"/></literal></expr></argument>,
            <argument><expr><name pos:line="50" pos:column="13">t<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">&gt;&gt;<pos:position pos:line="50" pos:column="20"/></operator> <literal type="number" pos:line="50" pos:column="18">10<pos:position pos:line="50" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="50" pos:column="22">Math<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">::<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">intPercent<pos:position pos:line="50" pos:column="38"/></name></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">t<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="42">mp<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">.<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="45">arena<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>

<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">HAVE_STRUCT_MALLINFO_MXFAST<pos:position pos:line="52" pos:column="32"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">fprintf<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">debug_log<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="24">"\tmax size of small blocks:\t%d\n"<pos:position pos:line="54" pos:column="59"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="55" pos:column="13">mp<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">.<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">mxfast<pos:position pos:line="55" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="57" pos:column="5">fprintf<pos:position pos:line="57" pos:column="12"/></name><argument_list pos:line="57" pos:column="12">(<argument><expr><name pos:line="57" pos:column="13">debug_log<pos:position pos:line="57" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="24">"\tnumber of small blocks in a holding block:\t%d\n"<pos:position pos:line="57" pos:column="76"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="58" pos:column="13">mp<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">.<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">nlblks<pos:position pos:line="58" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">fprintf<pos:position pos:line="60" pos:column="12"/></name><argument_list pos:line="60" pos:column="12">(<argument><expr><name pos:line="60" pos:column="13">debug_log<pos:position pos:line="60" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="24">"\tsmall block rounding factor:\t%d\n"<pos:position pos:line="60" pos:column="62"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="61" pos:column="13">mp<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">grain<pos:position pos:line="61" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">fprintf<pos:position pos:line="63" pos:column="12"/></name><argument_list pos:line="63" pos:column="12">(<argument><expr><name pos:line="63" pos:column="13">debug_log<pos:position pos:line="63" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="24">"\tspace (including overhead) allocated in ord. blks:\t%d\n"<pos:position pos:line="63" pos:column="84"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="64" pos:column="13">mp<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">.<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">uordbytes<pos:position pos:line="64" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">fprintf<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">debug_log<pos:position pos:line="66" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="24">"\tnumber of ordinary blocks allocated:\t%d\n"<pos:position pos:line="66" pos:column="70"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="67" pos:column="13">mp<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">.<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="16">allocated<pos:position pos:line="67" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">fprintf<pos:position pos:line="69" pos:column="12"/></name><argument_list pos:line="69" pos:column="12">(<argument><expr><name pos:line="69" pos:column="13">debug_log<pos:position pos:line="69" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="24">"\tbytes used in maintaining the free tree:\t%d\n"<pos:position pos:line="69" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="70" pos:column="13">mp<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">.<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">treeoverhead<pos:position pos:line="70" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="30"/></expr_stmt>

<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif<pos:position pos:line="72" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="72" pos:column="8">/* HAVE_STRUCT_MALLINFO_MXFAST */</comment>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="73" pos:column="8">/* HAVE_MALLINFO */</comment>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

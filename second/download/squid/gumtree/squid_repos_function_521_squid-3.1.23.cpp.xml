<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_521_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">node<pos:position pos:line="1" pos:column="19"/></name></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">parse_objectid<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">FILE<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">fp<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">name<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list> <block pos:line="2" pos:column="38">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">type<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">token<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><literal type="number" pos:line="4" pos:column="16">64<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">count<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">register<pos:position pos:line="6" pos:column="13"/></specifier> <name><name pos:line="6" pos:column="14">struct<pos:position pos:line="6" pos:column="20"/></name> <name pos:line="6" pos:column="21">subid<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">op<pos:position pos:line="6" pos:column="30"/></name></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">nop<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">length<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">subid<pos:position pos:line="8" pos:column="17"/></name></name></type> <name><name pos:line="8" pos:column="18">SubOid<pos:position pos:line="8" pos:column="24"/></name><index pos:line="8" pos:column="24">[<expr><literal type="number" pos:line="8" pos:column="25">32<pos:position pos:line="8" pos:column="27"/></literal></expr>]<pos:position pos:line="8" pos:column="28"/></index></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">node<pos:position pos:line="9" pos:column="16"/></name></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">np<pos:position pos:line="9" pos:column="20"/></name></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">root<pos:position pos:line="9" pos:column="27"/></name></decl>, <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="30">oldnp<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><name pos:line="9" pos:column="38">NULL<pos:position pos:line="9" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">type<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">get_token<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">fp<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">token<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">type<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">EQUALS<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">print_error<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"Bad format"<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">token<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">type<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">length<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">getoid<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">fp<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">SubOid<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="38">32<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call><operator pos:line="16" pos:column="41">)<pos:position pos:line="16" pos:column="42"/></operator> <operator pos:line="16" pos:column="43">!=<pos:position pos:line="16" pos:column="45"/></operator> <literal type="number" pos:line="16" pos:column="46">0<pos:position pos:line="16" pos:column="47"/></literal></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <block pos:line="16" pos:column="49">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">np<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">root<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator>struct <name pos:line="17" pos:column="29">node<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">*<pos:position pos:line="17" pos:column="35"/></operator><operator pos:line="17" pos:column="35">)<pos:position pos:line="17" pos:column="36"/></operator> <call><name pos:line="17" pos:column="37">xmalloc<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><sizeof pos:line="17" pos:column="45">sizeof<argument_list pos:line="17" pos:column="51">(<argument><expr pos:line="17" pos:column="52">struct <name pos:line="17" pos:column="59">node<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">memset<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></operator><operator pos:line="18" pos:column="23">)<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">np<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="29">'\0'<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="35">sizeof<argument_list pos:line="18" pos:column="41">(<argument><expr pos:line="18" pos:column="42">struct <name pos:line="18" pos:column="49">node<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
        <comment type="block" pos:line="19" pos:column="9">/*
         * For each parent-child subid pair in the subid array,
         * create a node and link it into the node list.
         */</comment>
        <for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">count<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal></expr><operator pos:line="23" pos:column="23">,<pos:position pos:line="23" pos:column="24"/></operator> <expr><name pos:line="23" pos:column="25">op<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">SubOid<pos:position pos:line="23" pos:column="36"/></name></expr><operator pos:line="23" pos:column="36">,<pos:position pos:line="23" pos:column="37"/></operator> <expr><name pos:line="23" pos:column="38">nop<pos:position pos:line="23" pos:column="41"/></name> <operator pos:line="23" pos:column="42">=<pos:position pos:line="23" pos:column="43"/></operator> <name pos:line="23" pos:column="44">SubOid<pos:position pos:line="23" pos:column="50"/></name> <operator pos:line="23" pos:column="51">+<pos:position pos:line="23" pos:column="52"/></operator> <literal type="number" pos:line="23" pos:column="53">1<pos:position pos:line="23" pos:column="54"/></literal></expr>;<pos:position pos:line="23" pos:column="55"/></init> <condition><expr><name pos:line="23" pos:column="56">count<pos:position pos:line="23" pos:column="61"/></name> <operator pos:line="23" pos:column="62">&lt;<pos:position pos:line="23" pos:column="66"/></operator> <operator pos:line="23" pos:column="64">(<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="65">length<pos:position pos:line="23" pos:column="71"/></name> <operator pos:line="23" pos:column="72">-<pos:position pos:line="23" pos:column="73"/></operator> <literal type="number" pos:line="23" pos:column="74">2<pos:position pos:line="23" pos:column="75"/></literal><operator pos:line="23" pos:column="75">)<pos:position pos:line="23" pos:column="76"/></operator></expr>;<pos:position pos:line="23" pos:column="77"/></condition> <incr><expr><name pos:line="23" pos:column="78">count<pos:position pos:line="23" pos:column="83"/></name><operator pos:line="23" pos:column="83">++<pos:position pos:line="23" pos:column="85"/></operator></expr><operator pos:line="23" pos:column="85">,<pos:position pos:line="23" pos:column="86"/></operator>
                <expr><name pos:line="24" pos:column="17">op<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">++<pos:position pos:line="24" pos:column="21"/></operator></expr><operator pos:line="24" pos:column="21">,<pos:position pos:line="24" pos:column="22"/></operator> <expr><name pos:line="24" pos:column="23">nop<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">++<pos:position pos:line="24" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="29"/></control> <block pos:line="24" pos:column="30">{
            <comment type="block" pos:line="25" pos:column="13">/* every node must have parent's name and child's name or number */</comment>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name><name pos:line="26" pos:column="17">op<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">label<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">&amp;&amp;<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="30">(<pos:position pos:line="26" pos:column="31"/></operator><name><name pos:line="26" pos:column="31">nop<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">label<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">||<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="45">(<pos:position pos:line="26" pos:column="46"/></operator><name><name pos:line="26" pos:column="46">nop<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">subid<pos:position pos:line="26" pos:column="56"/></name></name> <operator pos:line="26" pos:column="57">!=<pos:position pos:line="26" pos:column="59"/></operator> <operator pos:line="26" pos:column="60">-<pos:position pos:line="26" pos:column="61"/></operator><literal type="number" pos:line="26" pos:column="61">1<pos:position pos:line="26" pos:column="62"/></literal><operator pos:line="26" pos:column="62">)<pos:position pos:line="26" pos:column="63"/></operator><operator pos:line="26" pos:column="63">)<pos:position pos:line="26" pos:column="64"/></operator></expr>)<pos:position pos:line="26" pos:column="65"/></condition><then pos:line="26" pos:column="65"> <block pos:line="26" pos:column="66">{
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">strcpy<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name><name pos:line="27" pos:column="24">np<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">parent<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">op<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">label<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
                <if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">nop<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">label<pos:position pos:line="28" pos:column="31"/></name></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="21">strcpy<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name><name pos:line="29" pos:column="28">np<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">label<pos:position pos:line="29" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="39">nop<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">label<pos:position pos:line="29" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt></block></then></if>
                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">nop<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">subid<pos:position pos:line="30" pos:column="31"/></name></name> <operator pos:line="30" pos:column="32">!=<pos:position pos:line="30" pos:column="34"/></operator> <operator pos:line="30" pos:column="35">-<pos:position pos:line="30" pos:column="36"/></operator><literal type="number" pos:line="30" pos:column="36">1<pos:position pos:line="30" pos:column="37"/></literal></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="21">np<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">subid<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <name><name pos:line="31" pos:column="33">nop<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">subid<pos:position pos:line="31" pos:column="43"/></name></name></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name><name pos:line="32" pos:column="17">np<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">type<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="28">0<pos:position pos:line="32" pos:column="29"/></literal></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">np<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">enums<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <literal type="number" pos:line="33" pos:column="29">0<pos:position pos:line="33" pos:column="30"/></literal></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
                <comment type="block" pos:line="34" pos:column="17">/* set up next entry */</comment>
                <expr_stmt><expr><name><name pos:line="35" pos:column="17">np<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">next<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <operator pos:line="35" pos:column="28">(<pos:position pos:line="35" pos:column="29"/></operator>struct <name pos:line="35" pos:column="36">node<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">*<pos:position pos:line="35" pos:column="42"/></operator><operator pos:line="35" pos:column="42">)<pos:position pos:line="35" pos:column="43"/></operator> <call><name pos:line="35" pos:column="44">xmalloc<pos:position pos:line="35" pos:column="51"/></name><argument_list pos:line="35" pos:column="51">(<argument><expr><sizeof pos:line="35" pos:column="52">sizeof<argument_list pos:line="35" pos:column="58">(<argument><expr><operator pos:line="35" pos:column="59">*<pos:position pos:line="35" pos:column="60"/></operator><name><name pos:line="35" pos:column="60">np<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">-&gt;<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="64">next<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">memset<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">char<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">*<pos:position pos:line="36" pos:column="31"/></operator><operator pos:line="36" pos:column="31">)<pos:position pos:line="36" pos:column="32"/></operator> <name><name pos:line="36" pos:column="33">np<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">next<pos:position pos:line="36" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="43">'\0'<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="49">sizeof<argument_list pos:line="36" pos:column="55">(<argument><expr pos:line="36" pos:column="56">struct <name pos:line="36" pos:column="63">node<pos:position pos:line="36" pos:column="67"/></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><name pos:line="37" pos:column="17">oldnp<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">np<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="38" pos:column="17">np<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name><name pos:line="38" pos:column="22">np<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">next<pos:position pos:line="38" pos:column="30"/></name></name></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></for>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">np<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">next<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator>struct <name pos:line="41" pos:column="28">node<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">*<pos:position pos:line="41" pos:column="34"/></operator><operator pos:line="41" pos:column="34">)<pos:position pos:line="41" pos:column="35"/></operator> <name pos:line="41" pos:column="36">NULL<pos:position pos:line="41" pos:column="40"/></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
        <comment type="block" pos:line="42" pos:column="9">/*
         * The above loop took care of all but the last pair.  This pair is taken
         * care of here.  The name for this node is taken from the label for this
         * entry.
         * np still points to an unused entry.
         */</comment>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">count<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">==<pos:position pos:line="48" pos:column="21"/></operator> <operator pos:line="48" pos:column="22">(<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">length<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">-<pos:position pos:line="48" pos:column="31"/></operator> <literal type="number" pos:line="48" pos:column="32">2<pos:position pos:line="48" pos:column="33"/></literal><operator pos:line="48" pos:column="33">)<pos:position pos:line="48" pos:column="34"/></operator></expr>)<pos:position pos:line="48" pos:column="35"/></condition><then pos:line="48" pos:column="35"> <block pos:line="48" pos:column="36">{
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name><name pos:line="49" pos:column="17">op<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">label<pos:position pos:line="49" pos:column="26"/></name></name></expr>)<pos:position pos:line="49" pos:column="27"/></condition><then pos:line="49" pos:column="27"> <block pos:line="49" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">strcpy<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name><name pos:line="50" pos:column="24">np<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">-&gt;<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="28">parent<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="36">op<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">label<pos:position pos:line="50" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">strcpy<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name><name pos:line="51" pos:column="24">np<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">label<pos:position pos:line="51" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">name<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>
                <if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name><name pos:line="52" pos:column="21">nop<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">subid<pos:position pos:line="52" pos:column="31"/></name></name> <operator pos:line="52" pos:column="32">!=<pos:position pos:line="52" pos:column="34"/></operator> <operator pos:line="52" pos:column="35">-<pos:position pos:line="52" pos:column="36"/></operator><literal type="number" pos:line="52" pos:column="36">1<pos:position pos:line="52" pos:column="37"/></literal></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="21">np<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">subid<pos:position pos:line="53" pos:column="30"/></name></name> <operator pos:line="53" pos:column="31">=<pos:position pos:line="53" pos:column="32"/></operator> <name><name pos:line="53" pos:column="33">nop<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">-&gt;<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="38">subid<pos:position pos:line="53" pos:column="43"/></name></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt></block></then>
                <else pos:line="54" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="21">print_error<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><literal type="string" pos:line="55" pos:column="33">"Warning: This entry is pretty silly"<pos:position pos:line="55" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="72">np<pos:position pos:line="55" pos:column="74"/></name><operator pos:line="55" pos:column="74">-&gt;<pos:position pos:line="55" pos:column="79"/></operator><name pos:line="55" pos:column="76">label<pos:position pos:line="55" pos:column="81"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="83">type<pos:position pos:line="55" pos:column="87"/></name></expr></argument>)<pos:position pos:line="55" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="89"/></expr_stmt></block></else></if>
            }<pos:position pos:line="56" pos:column="14"/></block></then> <else pos:line="56" pos:column="15">else <block pos:line="56" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">free_node<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">np<pos:position pos:line="57" pos:column="29"/></name></expr></argument>)<pos:position pos:line="57" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt>
                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name pos:line="58" pos:column="21">oldnp<pos:position pos:line="58" pos:column="26"/></name></expr>)<pos:position pos:line="58" pos:column="27"/></condition><then pos:line="58" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="21">oldnp<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">next<pos:position pos:line="59" pos:column="32"/></name></name> <operator pos:line="59" pos:column="33">=<pos:position pos:line="59" pos:column="34"/></operator> <name pos:line="59" pos:column="35">NULL<pos:position pos:line="59" pos:column="39"/></name></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt></block></then>
                <else pos:line="60" pos:column="17">else
                    <block type="pseudo"><return pos:line="61" pos:column="21">return <expr><name pos:line="61" pos:column="28">NULL<pos:position pos:line="61" pos:column="32"/></name></expr>;<pos:position pos:line="61" pos:column="33"/></return></block></else></if>
            }<pos:position pos:line="62" pos:column="14"/></block></else></if>
        }<pos:position pos:line="63" pos:column="10"/></block></then> <else pos:line="63" pos:column="11">else <block pos:line="63" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">print_error<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><literal type="string" pos:line="64" pos:column="25">"Missing end of oid"<pos:position pos:line="64" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="47">(<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="48">char<pos:position pos:line="64" pos:column="52"/></name> <operator pos:line="64" pos:column="53">*<pos:position pos:line="64" pos:column="54"/></operator><operator pos:line="64" pos:column="54">)<pos:position pos:line="64" pos:column="55"/></operator> <name pos:line="64" pos:column="56">NULL<pos:position pos:line="64" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="62">type<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">free_node<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">np<pos:position pos:line="65" pos:column="25"/></name></expr></argument>)<pos:position pos:line="65" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt>	<comment type="block" pos:line="65" pos:column="33">/* the last node allocated wasn't used */</comment>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name pos:line="66" pos:column="17">oldnp<pos:position pos:line="66" pos:column="22"/></name></expr>)<pos:position pos:line="66" pos:column="23"/></condition><then pos:line="66" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="17">oldnp<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">-&gt;<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="24">next<pos:position pos:line="67" pos:column="28"/></name></name> <operator pos:line="67" pos:column="29">=<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="31">NULL<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt></block></then></if>
            <return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">NULL<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="70" pos:column="9">/* free the oid array */</comment>
        <for pos:line="71" pos:column="9">for <control pos:line="71" pos:column="13">(<init><expr><name pos:line="71" pos:column="14">count<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <literal type="number" pos:line="71" pos:column="22">0<pos:position pos:line="71" pos:column="23"/></literal></expr><operator pos:line="71" pos:column="23">,<pos:position pos:line="71" pos:column="24"/></operator> <expr><name pos:line="71" pos:column="25">op<pos:position pos:line="71" pos:column="27"/></name> <operator pos:line="71" pos:column="28">=<pos:position pos:line="71" pos:column="29"/></operator> <name pos:line="71" pos:column="30">SubOid<pos:position pos:line="71" pos:column="36"/></name></expr>;<pos:position pos:line="71" pos:column="37"/></init> <condition><expr><name pos:line="71" pos:column="38">count<pos:position pos:line="71" pos:column="43"/></name> <operator pos:line="71" pos:column="44">&lt;<pos:position pos:line="71" pos:column="48"/></operator> <name pos:line="71" pos:column="46">length<pos:position pos:line="71" pos:column="52"/></name></expr>;<pos:position pos:line="71" pos:column="53"/></condition> <incr><expr><name pos:line="71" pos:column="54">count<pos:position pos:line="71" pos:column="59"/></name><operator pos:line="71" pos:column="59">++<pos:position pos:line="71" pos:column="61"/></operator></expr><operator pos:line="71" pos:column="61">,<pos:position pos:line="71" pos:column="62"/></operator> <expr><name pos:line="71" pos:column="63">op<pos:position pos:line="71" pos:column="65"/></name><operator pos:line="71" pos:column="65">++<pos:position pos:line="71" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="68"/></control> <block pos:line="71" pos:column="69">{
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><name><name pos:line="72" pos:column="17">op<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">-&gt;<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="21">label<pos:position pos:line="72" pos:column="26"/></name></name></expr>)<pos:position pos:line="72" pos:column="27"/></condition><then pos:line="72" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">xfree<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name><name pos:line="73" pos:column="23">op<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">-&gt;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="27">label<pos:position pos:line="73" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name><name pos:line="74" pos:column="13">op<pos:position pos:line="74" pos:column="15"/></name><operator pos:line="74" pos:column="15">-&gt;<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="17">label<pos:position pos:line="74" pos:column="22"/></name></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <literal type="number" pos:line="74" pos:column="25">0<pos:position pos:line="74" pos:column="26"/></literal></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></for>
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">root<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then> <else pos:line="77" pos:column="7">else <block pos:line="77" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">print_error<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><literal type="string" pos:line="78" pos:column="21">"Bad object identifier"<pos:position pos:line="78" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="78" pos:column="46">(<pos:position pos:line="78" pos:column="47"/></operator><name pos:line="78" pos:column="47">char<pos:position pos:line="78" pos:column="51"/></name> <operator pos:line="78" pos:column="52">*<pos:position pos:line="78" pos:column="53"/></operator><operator pos:line="78" pos:column="53">)<pos:position pos:line="78" pos:column="54"/></operator> <name pos:line="78" pos:column="55">NULL<pos:position pos:line="78" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="61">type<pos:position pos:line="78" pos:column="65"/></name></expr></argument>)<pos:position pos:line="78" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="67"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></else></if>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

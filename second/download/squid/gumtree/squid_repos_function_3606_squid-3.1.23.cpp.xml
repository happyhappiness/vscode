<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3606_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">UrnState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">getHost<pos:position pos:line="2" pos:column="18"/></name></name> <parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">String<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">&amp;<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="28">urlpath<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">p<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

    <comment type="block" format="doxygen" pos:line="7" pos:column="5">/** FIXME: this appears to be parsing the URL. *very* badly. */</comment>
    <comment type="block" pos:line="8" pos:column="5">/*   a proper encapsulated URI/URL type needs to clear this up. */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">p<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator><call><name><name pos:line="9" pos:column="12">urlpath<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">find<pos:position pos:line="9" pos:column="24"/></name></name><argument_list pos:line="9" pos:column="24">(<argument><expr><literal type="char" pos:line="9" pos:column="25">':'<pos:position pos:line="9" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">!=<pos:position pos:line="9" pos:column="33"/></operator> <name><name pos:line="9" pos:column="34">String<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">::<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">npos<pos:position pos:line="9" pos:column="46"/></name></name></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <block pos:line="9" pos:column="48">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">result<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator><call><name pos:line="10" pos:column="16">xstrndup<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><call><name><name pos:line="10" pos:column="25">urlpath<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">rawBuf<pos:position pos:line="10" pos:column="39"/></name></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="10" pos:column="42">p<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-<pos:position pos:line="10" pos:column="44"/></operator><literal type="number" pos:line="10" pos:column="44">1<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else <block pos:line="11" pos:column="12">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">result<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">xstrndup<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><call><name><name pos:line="12" pos:column="27">urlpath<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">rawBuf<pos:position pos:line="12" pos:column="41"/></name></name><argument_list pos:line="12" pos:column="41">()<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr></argument>,<argument><expr><call><name><name pos:line="12" pos:column="44">urlpath<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">.<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">size<pos:position pos:line="12" pos:column="56"/></name></name><argument_list pos:line="12" pos:column="56">()<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">result<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

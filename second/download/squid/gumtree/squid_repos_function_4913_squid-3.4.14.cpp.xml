<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4913_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">canStore<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">StoreEntry<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">e<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int64_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">diskSpaceNeeded<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">int<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">&amp;<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="76">load<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list> <specifier pos:line="2" pos:column="82">const<pos:position pos:line="2" pos:column="87"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><operator pos:line="4" pos:column="10">::<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">SwapDir<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">::<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">canStore<pos:position pos:line="4" pos:column="29"/></name></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">e<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="33">sizeof<argument_list pos:line="4" pos:column="39">(<argument><expr><name pos:line="4" pos:column="40">DbCellHeader<pos:position pos:line="4" pos:column="52"/></name></expr></argument>)<pos:position pos:line="4" pos:column="53"/></argument_list></sizeof><operator pos:line="4" pos:column="53">+<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">diskSpaceNeeded<pos:position pos:line="4" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="71">load<pos:position pos:line="4" pos:column="75"/></name></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="77"/></condition><then pos:line="4" pos:column="77">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">theFile<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">||<pos:position pos:line="7" pos:column="20"/></operator> <operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><call><name><name pos:line="7" pos:column="22">theFile<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">canWrite<pos:position pos:line="7" pos:column="39"/></name></name><argument_list pos:line="7" pos:column="39">()<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">map<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>

    <comment type="line" pos:line="13" pos:column="5">// Do not start I/O transaction if there are less than 10% free pages left.</comment>
    <comment type="line" pos:line="14" pos:column="5">// TODO: reserve page instead</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">needsDiskStrand<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">()<pos:position pos:line="15" pos:column="26"/></argument_list></call> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator>
            <call><name><name pos:line="16" pos:column="13">Ipc<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">::<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">Mem<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">::<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">PageLevel<pos:position pos:line="16" pos:column="32"/></name></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name><name pos:line="16" pos:column="33">Ipc<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">::<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">Mem<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">::<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">PageId<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">::<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">ioPage<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call> <operator pos:line="16" pos:column="59">&gt;=<pos:position pos:line="16" pos:column="64"/></operator> <literal type="number" pos:line="16" pos:column="62">0.9<pos:position pos:line="16" pos:column="65"/></literal> <operator pos:line="16" pos:column="66">*<pos:position pos:line="16" pos:column="67"/></operator> <call><name><name pos:line="16" pos:column="68">Ipc<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">::<pos:position pos:line="16" pos:column="73"/></operator><name pos:line="16" pos:column="73">Mem<pos:position pos:line="16" pos:column="76"/></name><operator pos:line="16" pos:column="76">::<pos:position pos:line="16" pos:column="78"/></operator><name pos:line="16" pos:column="78">PageLimit<pos:position pos:line="16" pos:column="87"/></name></name><argument_list pos:line="16" pos:column="87">(<argument><expr><name><name pos:line="16" pos:column="88">Ipc<pos:position pos:line="16" pos:column="91"/></name><operator pos:line="16" pos:column="91">::<pos:position pos:line="16" pos:column="93"/></operator><name pos:line="16" pos:column="93">Mem<pos:position pos:line="16" pos:column="96"/></name><operator pos:line="16" pos:column="96">::<pos:position pos:line="16" pos:column="98"/></operator><name pos:line="16" pos:column="98">PageId<pos:position pos:line="16" pos:column="104"/></name><operator pos:line="16" pos:column="104">::<pos:position pos:line="16" pos:column="106"/></operator><name pos:line="16" pos:column="106">ioPage<pos:position pos:line="16" pos:column="112"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="113"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="114"/></condition><then pos:line="16" pos:column="114"> <block pos:line="16" pos:column="115">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">47<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">5<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">HERE<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&lt;&lt;<pos:position pos:line="17" pos:column="36"/></operator> <literal type="string" pos:line="17" pos:column="31">"too few shared pages for IPC I/O left"<pos:position pos:line="17" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><literal type="boolean" pos:line="18" pos:column="16">false<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name><name pos:line="21" pos:column="9">io<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">shedLoad<pos:position pos:line="21" pos:column="21"/></name></name><argument_list pos:line="21" pos:column="21">()<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><literal type="boolean" pos:line="22" pos:column="16">false<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">load<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name><name pos:line="24" pos:column="12">io<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">load<pos:position pos:line="24" pos:column="20"/></name></name><argument_list pos:line="24" pos:column="20">()<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><literal type="boolean" pos:line="25" pos:column="12">true<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

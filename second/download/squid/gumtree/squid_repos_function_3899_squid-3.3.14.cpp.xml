<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3899_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">libecap<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Area<pos:position pos:line="1" pos:column="14"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">HeaderRep<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">image<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">MemBuf<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">mb<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">mb<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">.<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">init<pos:position pos:line="5" pos:column="12"/></name></name><argument_list pos:line="5" pos:column="12">()<pos:position pos:line="5" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">Packer<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">p<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">packerToMemInit<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="22">p<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="26">mb<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">theMessage<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">packInto<pos:position pos:line="9" pos:column="24"/></name></name><argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="26">p<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="9" pos:column="29">true<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">packerClean<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><operator pos:line="10" pos:column="17">&amp;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="18">p<pos:position pos:line="10" pos:column="19"/></name></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><call><name><name pos:line="11" pos:column="12">Area<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">::<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">FromTempBuffer<pos:position pos:line="11" pos:column="32"/></name></name><argument_list pos:line="11" pos:column="32">(<argument><expr><call><name><name pos:line="11" pos:column="33">mb<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">content<pos:position pos:line="11" pos:column="43"/></name></name><argument_list pos:line="11" pos:column="43">()<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="11" pos:column="47">mb<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">.<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="50">contentSize<pos:position pos:line="11" pos:column="61"/></name></name><argument_list pos:line="11" pos:column="61">()<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

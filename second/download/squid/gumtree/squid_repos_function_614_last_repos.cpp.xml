<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_614_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientInfo<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">setWriteLimiter<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">aWriteSpeedLimit<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">double<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">anInitialBurst<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="86">const<pos:position pos:line="2" pos:column="91"/></specifier> <name pos:line="2" pos:column="92">double<pos:position pos:line="2" pos:column="98"/></name></type> <name pos:line="2" pos:column="99">aHighWatermark<pos:position pos:line="2" pos:column="113"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="114"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">77<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <literal type="string" pos:line="4" pos:column="26">"Write limits for "<pos:position pos:line="4" pos:column="45"/></literal> <operator pos:line="4" pos:column="46">&lt;&lt;<pos:position pos:line="4" pos:column="54"/></operator> <operator pos:line="4" pos:column="49">(<pos:position pos:line="4" pos:column="50"/></operator><specifier pos:line="4" pos:column="50">const<pos:position pos:line="4" pos:column="55"/></specifier> <name pos:line="4" pos:column="56">char<pos:position pos:line="4" pos:column="60"/></name><operator pos:line="4" pos:column="60">*<pos:position pos:line="4" pos:column="61"/></operator><operator pos:line="4" pos:column="61">)<pos:position pos:line="4" pos:column="62"/></operator><name><name pos:line="4" pos:column="62">hash<pos:position pos:line="4" pos:column="66"/></name><operator pos:line="4" pos:column="66">.<pos:position pos:line="4" pos:column="67"/></operator><name pos:line="4" pos:column="67">key<pos:position pos:line="4" pos:column="70"/></name></name> <operator pos:line="4" pos:column="71">&lt;&lt;<pos:position pos:line="4" pos:column="79"/></operator>
           <literal type="string" pos:line="5" pos:column="12">" speed="<pos:position pos:line="5" pos:column="21"/></literal> <operator pos:line="5" pos:column="22">&lt;&lt;<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="25">aWriteSpeedLimit<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">&lt;&lt;<pos:position pos:line="5" pos:column="50"/></operator> <literal type="string" pos:line="5" pos:column="45">" burst="<pos:position pos:line="5" pos:column="54"/></literal> <operator pos:line="5" pos:column="55">&lt;&lt;<pos:position pos:line="5" pos:column="63"/></operator> <name pos:line="5" pos:column="58">anInitialBurst<pos:position pos:line="5" pos:column="72"/></name> <operator pos:line="5" pos:column="73">&lt;&lt;<pos:position pos:line="5" pos:column="81"/></operator>
           <literal type="string" pos:line="6" pos:column="12">" highwatermark="<pos:position pos:line="6" pos:column="29"/></literal> <operator pos:line="6" pos:column="30">&lt;&lt;<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="33">aHighWatermark<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>

    <comment type="line" pos:line="8" pos:column="5">// set or possibly update traffic shaping parameters</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">writeLimitingActive<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="boolean" pos:line="9" pos:column="27">true<pos:position pos:line="9" pos:column="31"/></literal></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">writeSpeedLimit<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">aWriteSpeedLimit<pos:position pos:line="10" pos:column="39"/></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">bucketSizeLimit<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">aHighWatermark<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>

    <comment type="line" pos:line="13" pos:column="5">// but some members should only be set once for a newly activated bucket</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">firstTimeConnection<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">firstTimeConnection<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <literal type="boolean" pos:line="15" pos:column="31">false<pos:position pos:line="15" pos:column="36"/></literal></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">assert<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">!<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">selectWaiting<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">assert<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">!<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">quotaQueue<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">quotaQueue<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">new<pos:position pos:line="19" pos:column="25"/></operator> <call><name pos:line="19" pos:column="26">CommQuotaQueue<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">this<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><name pos:line="21" pos:column="9">bucketSize<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">anInitialBurst<pos:position pos:line="21" pos:column="36"/></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">prevTime<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">current_dtime<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3065_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">doPeekAndSpliceStep<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">auto<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">ssl<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name><name pos:line="4" pos:column="16">fd_table<pos:position pos:line="4" pos:column="24"/></name><index pos:line="4" pos:column="24">[<expr><name><name pos:line="4" pos:column="25">clientConnection<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">-&gt;<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="43">fd<pos:position pos:line="4" pos:column="45"/></name></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name><operator pos:line="4" pos:column="46">.<pos:position pos:line="4" pos:column="47"/></operator><call><name><name pos:line="4" pos:column="47">ssl<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">.<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="51">get<pos:position pos:line="4" pos:column="54"/></name></name><argument_list pos:line="4" pos:column="54">()<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BIO<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">b<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><call><name pos:line="5" pos:column="14">SSL_get_rbio<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">ssl<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">b<pos:position pos:line="6" pos:column="13"/></name></expr></argument>)<pos:position pos:line="6" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Ssl<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">ClientBio<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">bio<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><cast type="static" pos:line="7" pos:column="27">static_cast<argument_list type="generic" pos:line="7" pos:column="38">&lt;<argument><expr><name><name pos:line="7" pos:column="39">Ssl<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">::<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">ClientBio<pos:position pos:line="7" pos:column="53"/></name></name> <operator pos:line="7" pos:column="54">*<pos:position pos:line="7" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="59"/></argument_list><argument_list pos:line="7" pos:column="56">(<argument><expr><call><name pos:line="7" pos:column="57">BIO_get_data<pos:position pos:line="7" pos:column="69"/></name><argument_list pos:line="7" pos:column="69">(<argument><expr><name pos:line="7" pos:column="70">b<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="7" pos:column="74"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">33<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">5<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"PeekAndSplice mode, proceed with client negotiation. Currrent state:"<pos:position pos:line="9" pos:column="89"/></literal> <operator pos:line="9" pos:column="90">&lt;&lt;<pos:position pos:line="9" pos:column="98"/></operator> <call><name pos:line="9" pos:column="93">SSL_state_string_long<pos:position pos:line="9" pos:column="114"/></name><argument_list pos:line="9" pos:column="114">(<argument><expr><name pos:line="9" pos:column="115">ssl<pos:position pos:line="9" pos:column="118"/></name></expr></argument>)<pos:position pos:line="9" pos:column="119"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="121"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">bio<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">hold<pos:position pos:line="10" pos:column="14"/></name></name><argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="boolean" pos:line="10" pos:column="15">false<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">Comm<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">::<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">SetSelect<pos:position pos:line="12" pos:column="20"/></name></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name><name pos:line="12" pos:column="21">clientConnection<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">fd<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">COMM_SELECT_WRITE<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">clientNegotiateSSL<pos:position pos:line="12" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="82">this<pos:position pos:line="12" pos:column="86"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="88">0<pos:position pos:line="12" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="91"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">switchedToHttps_<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <literal type="boolean" pos:line="13" pos:column="24">true<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

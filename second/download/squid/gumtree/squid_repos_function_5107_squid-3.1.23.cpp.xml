<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5107_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">squidaio_do_close<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">squidaio_request_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">requestp<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">requestp<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">ret<pos:position pos:line="4" pos:column="23"/></name></name> <operator pos:line="4" pos:column="24">=<pos:position pos:line="4" pos:column="25"/></operator> <call><name pos:line="4" pos:column="26">close<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name><name pos:line="4" pos:column="32">requestp<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">fd<pos:position pos:line="4" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator> <operator pos:line="4" pos:column="47">&lt;<pos:position pos:line="4" pos:column="51"/></operator> <literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51"> <block pos:line="4" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">43<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"squidaio_do_close: FD "<pos:position pos:line="5" pos:column="47"/></literal> <operator pos:line="5" pos:column="48">&lt;&lt;<pos:position pos:line="5" pos:column="56"/></operator> <name><name pos:line="5" pos:column="51">requestp<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">-&gt;<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="61">fd<pos:position pos:line="5" pos:column="63"/></name></name> <operator pos:line="5" pos:column="64">&lt;&lt;<pos:position pos:line="5" pos:column="72"/></operator> <literal type="string" pos:line="5" pos:column="67">", errno "<pos:position pos:line="5" pos:column="77"/></literal> <operator pos:line="5" pos:column="78">&lt;&lt;<pos:position pos:line="5" pos:column="86"/></operator> <name pos:line="5" pos:column="81">errno<pos:position pos:line="5" pos:column="86"/></name></expr></argument>)<pos:position pos:line="5" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">close<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><name><name pos:line="6" pos:column="15">requestp<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">fd<pos:position pos:line="6" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">requestp<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">err<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">errno<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

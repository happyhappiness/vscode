<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1790_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">neighborIgnoreNonPeer<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">IpAddress<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">from<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">icp_opcode<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">opcode<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">peer<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">np<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">np<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">non_peers<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></init> <condition><expr><name pos:line="6" pos:column="26">np<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></condition> <incr><expr><name pos:line="6" pos:column="30">np<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">=<pos:position pos:line="6" pos:column="34"/></operator> <name><name pos:line="6" pos:column="35">np<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">next<pos:position pos:line="6" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="44"/></control> <block pos:line="6" pos:column="45">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">np<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">in_addr<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">!=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">from<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
            <block type="pseudo"><continue pos:line="8" pos:column="13">continue;<pos:position pos:line="8" pos:column="22"/></continue></block></then></if>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name><name pos:line="10" pos:column="13">np<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">in_addr<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">GetPort<pos:position pos:line="10" pos:column="32"/></name></name><argument_list pos:line="10" pos:column="32">()<pos:position pos:line="10" pos:column="34"/></argument_list></call> <operator pos:line="10" pos:column="35">!=<pos:position pos:line="10" pos:column="37"/></operator> <call><name><name pos:line="10" pos:column="38">from<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">GetPort<pos:position pos:line="10" pos:column="50"/></name></name><argument_list pos:line="10" pos:column="50">()<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53">
            <block type="pseudo"><continue pos:line="11" pos:column="13">continue;<pos:position pos:line="11" pos:column="22"/></continue></block></then></if>

        <break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break>
    }<pos:position pos:line="14" pos:column="6"/></block></for>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">np<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">NULL<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">np<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">peer<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></operator><operator pos:line="17" pos:column="21">)<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">xcalloc<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="number" pos:line="17" pos:column="30">1<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="33">sizeof<argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">peer<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">np<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">in_addr<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">from<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">np<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">icp<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">port<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name><name pos:line="19" pos:column="24">from<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">GetPort<pos:position pos:line="19" pos:column="36"/></name></name><argument_list pos:line="19" pos:column="36">()<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">np<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">type<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">PEER_NONE<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">np<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">host<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">new<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">char<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><name pos:line="21" pos:column="29">MAX_IPSTRLEN<pos:position pos:line="21" pos:column="41"/></name></expr>]<pos:position pos:line="21" pos:column="42"/></index></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">from<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">NtoA<pos:position pos:line="22" pos:column="18"/></name></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name><name pos:line="22" pos:column="19">np<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">host<pos:position pos:line="22" pos:column="27"/></name></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="28">MAX_IPSTRLEN<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">np<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">next<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">non_peers<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">non_peers<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">np<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">np<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">icp<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">counts<pos:position pos:line="27" pos:column="19"/></name><index pos:line="27" pos:column="19">[<expr><name pos:line="27" pos:column="20">opcode<pos:position pos:line="27" pos:column="26"/></name></expr>]<pos:position pos:line="27" pos:column="27"/></index></name><operator pos:line="27" pos:column="27">++<pos:position pos:line="27" pos:column="29"/></operator></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">isPowTen<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><operator pos:line="29" pos:column="18">++<pos:position pos:line="29" pos:column="20"/></operator><name><name pos:line="29" pos:column="20">np<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">stats<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">ignored_replies<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">15<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">1<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"WARNING: Ignored "<pos:position pos:line="30" pos:column="42"/></literal> <operator pos:line="30" pos:column="43">&lt;&lt;<pos:position pos:line="30" pos:column="51"/></operator> <name><name pos:line="30" pos:column="46">np<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">stats<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">.<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="56">ignored_replies<pos:position pos:line="30" pos:column="71"/></name></name> <operator pos:line="30" pos:column="72">&lt;&lt;<pos:position pos:line="30" pos:column="80"/></operator> <literal type="string" pos:line="30" pos:column="75">" replies from non-peer "<pos:position pos:line="30" pos:column="100"/></literal> <operator pos:line="30" pos:column="101">&lt;&lt;<pos:position pos:line="30" pos:column="109"/></operator> <name><name pos:line="30" pos:column="104">np<pos:position pos:line="30" pos:column="106"/></name><operator pos:line="30" pos:column="106">-&gt;<pos:position pos:line="30" pos:column="111"/></operator><name pos:line="30" pos:column="108">host<pos:position pos:line="30" pos:column="112"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="114"/></expr_stmt></block></then></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

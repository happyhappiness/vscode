<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5407_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Relay<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">startDataDownload<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name><name pos:line="4" pos:column="12">Comm<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">::<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">IsConnOpen<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name><name pos:line="4" pos:column="29">data<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">.<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">conn<pos:position pos:line="4" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">9<pos:position pos:line="6" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="15">3<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="18">"begin data transfer from "<pos:position pos:line="6" pos:column="45"/></literal> <operator pos:line="6" pos:column="46">&lt;&lt;<pos:position pos:line="6" pos:column="54"/></operator> <name><name pos:line="6" pos:column="49">data<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">.<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">conn<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">remote<pos:position pos:line="6" pos:column="66"/></name></name> <operator pos:line="6" pos:column="67">&lt;&lt;<pos:position pos:line="6" pos:column="75"/></operator>
           <literal type="string" pos:line="7" pos:column="12">" ("<pos:position pos:line="7" pos:column="16"/></literal> <operator pos:line="7" pos:column="17">&lt;&lt;<pos:position pos:line="7" pos:column="25"/></operator> <name><name pos:line="7" pos:column="20">data<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">conn<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">local<pos:position pos:line="7" pos:column="36"/></name></name> <operator pos:line="7" pos:column="37">&lt;&lt;<pos:position pos:line="7" pos:column="45"/></operator> <literal type="string" pos:line="7" pos:column="40">")"<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HttpReply<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier><specifier pos:line="9" pos:column="16">const<pos:position pos:line="9" pos:column="21"/></specifier></type> <name pos:line="9" pos:column="22">reply<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><call><name pos:line="9" pos:column="30">createHttpReply<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">(<argument><expr><name><name pos:line="9" pos:column="46">Http<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">::<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="52">scOkay<pos:position pos:line="9" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="60">-<pos:position pos:line="9" pos:column="61"/></operator><literal type="number" pos:line="9" pos:column="61">1<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">EBIT_CLR<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">entry<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">flags<pos:position pos:line="10" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">ENTRY_FWD_HDR_WAIT<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">setVirginReply<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">reply<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">adaptOrFinalizeReply<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">()<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">maybeReadVirginBody<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">()<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">state<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">READING_DATA<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

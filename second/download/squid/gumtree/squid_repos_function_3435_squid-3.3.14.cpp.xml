<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3435_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">WIN32_getrusage<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">who<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">rusage<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">usage<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_WIN32_PSAPI<pos:position pos:line="3" pos:column="21"/></name></expr></cpp:if>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">WIN32_OS_version<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&gt;=<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="29">_WIN_OS_WINNT<pos:position pos:line="5" pos:column="42"/></name></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43"> <block pos:line="5" pos:column="44">{
        <comment type="block" pos:line="6" pos:column="9">/* On Windows NT and later call PSAPI.DLL for process Memory */</comment>
        <comment type="block" pos:line="7" pos:column="9">/* informations -- Guido Serassio                       */</comment>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">HANDLE<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">hProcess<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">PROCESS_MEMORY_COUNTERS<pos:position pos:line="9" pos:column="32"/></name></type> <name pos:line="9" pos:column="33">pmc<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">hProcess<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">OpenProcess<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">PROCESS_QUERY_INFORMATION<pos:position pos:line="10" pos:column="57"/></name> <operator pos:line="10" pos:column="58">|<pos:position pos:line="10" pos:column="59"/></operator>
                               <name pos:line="11" pos:column="32">PROCESS_VM_READ<pos:position pos:line="11" pos:column="47"/></name></expr></argument>,
                               <argument><expr><name pos:line="12" pos:column="32">FALSE<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="39">GetCurrentProcessId<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">()<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
        <block pos:line="13" pos:column="9">{
            <comment type="block" pos:line="14" pos:column="13">/* Microsoft CRT doesn't have getrusage function,  */</comment>
            <comment type="block" pos:line="15" pos:column="13">/* so we get process CPU time information from PSAPI.DLL. */</comment>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">FILETIME<pos:position pos:line="16" pos:column="21"/></name></type> <name pos:line="16" pos:column="22">ftCreate<pos:position pos:line="16" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="32">ftExit<pos:position pos:line="16" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="40">ftKernel<pos:position pos:line="16" pos:column="48"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="50">ftUser<pos:position pos:line="16" pos:column="56"/></name></decl>;<pos:position pos:line="16" pos:column="57"/></decl_stmt>

            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><call><name pos:line="18" pos:column="17">GetProcessTimes<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">hProcess<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="44">ftCreate<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="54">&amp;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="55">ftExit<pos:position pos:line="18" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="63">&amp;<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="64">ftKernel<pos:position pos:line="18" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="74">&amp;<pos:position pos:line="18" pos:column="79"/></operator><name pos:line="18" pos:column="75">ftUser<pos:position pos:line="18" pos:column="81"/></name></expr></argument>)<pos:position pos:line="18" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="83"/></condition><then pos:line="18" pos:column="83"> <block pos:line="18" pos:column="84">{
                <decl_stmt><decl><type><name pos:line="19" pos:column="17">int64_t<pos:position pos:line="19" pos:column="24"/></name> <modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">ptUser<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><operator pos:line="19" pos:column="35">(<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">int64_t<pos:position pos:line="19" pos:column="43"/></name> <operator pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></operator><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator><operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="47">ftUser<pos:position pos:line="19" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="54"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="20" pos:column="17">int64_t<pos:position pos:line="20" pos:column="24"/></name></type> <name pos:line="20" pos:column="25">tUser64<pos:position pos:line="20" pos:column="32"/></name> <init pos:line="20" pos:column="33">= <expr><operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">ptUser<pos:position pos:line="20" pos:column="42"/></name> <operator pos:line="20" pos:column="43">/<pos:position pos:line="20" pos:column="44"/></operator> <literal type="number" pos:line="20" pos:column="45">10<pos:position pos:line="20" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="48"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="21" pos:column="17">int64_t<pos:position pos:line="21" pos:column="24"/></name> <modifier pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></modifier></type><name pos:line="21" pos:column="26">ptKernel<pos:position pos:line="21" pos:column="34"/></name> <init pos:line="21" pos:column="35">= <expr><operator pos:line="21" pos:column="37">(<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">int64_t<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">*<pos:position pos:line="21" pos:column="47"/></operator><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator><operator pos:line="21" pos:column="48">&amp;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="49">ftKernel<pos:position pos:line="21" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="58"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="22" pos:column="17">int64_t<pos:position pos:line="22" pos:column="24"/></name></type> <name pos:line="22" pos:column="25">tKernel64<pos:position pos:line="22" pos:column="34"/></name> <init pos:line="22" pos:column="35">= <expr><operator pos:line="22" pos:column="37">*<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">ptKernel<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">/<pos:position pos:line="22" pos:column="48"/></operator> <literal type="number" pos:line="22" pos:column="49">10<pos:position pos:line="22" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="52"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="23" pos:column="17">usage<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">ru_utime<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">.<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">tv_sec<pos:position pos:line="23" pos:column="39"/></name></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator><call pos:line="23" pos:column="41">(<name pos:line="23" pos:column="42">long<pos:position pos:line="23" pos:column="46"/></name>)<argument_list pos:line="23" pos:column="47">(<argument><expr><name pos:line="23" pos:column="48">tUser64<pos:position pos:line="23" pos:column="55"/></name> <operator pos:line="23" pos:column="56">/<pos:position pos:line="23" pos:column="57"/></operator> <literal type="number" pos:line="23" pos:column="58">1000000<pos:position pos:line="23" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">usage<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">ru_stime<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">.<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">tv_sec<pos:position pos:line="24" pos:column="39"/></name></name> <operator pos:line="24" pos:column="40">=<pos:position pos:line="24" pos:column="41"/></operator><call pos:line="24" pos:column="41">(<name pos:line="24" pos:column="42">long<pos:position pos:line="24" pos:column="46"/></name>)<argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">tKernel64<pos:position pos:line="24" pos:column="57"/></name> <operator pos:line="24" pos:column="58">/<pos:position pos:line="24" pos:column="59"/></operator> <literal type="number" pos:line="24" pos:column="60">1000000<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">usage<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">ru_utime<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">.<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">tv_usec<pos:position pos:line="25" pos:column="40"/></name></name> <operator pos:line="25" pos:column="41">=<pos:position pos:line="25" pos:column="42"/></operator><call pos:line="25" pos:column="42">(<name pos:line="25" pos:column="43">long<pos:position pos:line="25" pos:column="47"/></name>)<argument_list pos:line="25" pos:column="48">(<argument><expr><name pos:line="25" pos:column="49">tUser64<pos:position pos:line="25" pos:column="56"/></name> <operator pos:line="25" pos:column="57">%<pos:position pos:line="25" pos:column="58"/></operator> <literal type="number" pos:line="25" pos:column="59">1000000<pos:position pos:line="25" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">usage<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">ru_stime<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">tv_usec<pos:position pos:line="26" pos:column="40"/></name></name> <operator pos:line="26" pos:column="41">=<pos:position pos:line="26" pos:column="42"/></operator><call pos:line="26" pos:column="42">(<name pos:line="26" pos:column="43">long<pos:position pos:line="26" pos:column="47"/></name>)<argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">tKernel64<pos:position pos:line="26" pos:column="58"/></name> <operator pos:line="26" pos:column="59">%<pos:position pos:line="26" pos:column="60"/></operator> <literal type="number" pos:line="26" pos:column="61">1000000<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then> <else pos:line="27" pos:column="15">else <block pos:line="27" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">CloseHandle<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">( <argument><expr><name pos:line="28" pos:column="30">hProcess<pos:position pos:line="28" pos:column="38"/></name></expr></argument> )<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
                <return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">-<pos:position pos:line="29" pos:column="25"/></operator><literal type="number" pos:line="29" pos:column="25">1<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></else></if>
        }<pos:position pos:line="31" pos:column="10"/></block>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">GetProcessMemoryInfo<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">( <argument><expr><name pos:line="33" pos:column="35">hProcess<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="45">&amp;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="46">pmc<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="51">sizeof<argument_list pos:line="33" pos:column="57">(<argument><expr><name pos:line="33" pos:column="58">pmc<pos:position pos:line="33" pos:column="61"/></name></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64"> <block pos:line="33" pos:column="65">{
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">usage<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">ru_maxrss<pos:position pos:line="34" pos:column="29"/></name></name><operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator><call pos:line="34" pos:column="30">(<name pos:line="34" pos:column="31">DWORD<pos:position pos:line="34" pos:column="36"/></name>)<argument_list pos:line="34" pos:column="37">(<argument><expr><name><name pos:line="34" pos:column="38">pmc<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">.<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">WorkingSetSize<pos:position pos:line="34" pos:column="56"/></name></name> <operator pos:line="34" pos:column="57">/<pos:position pos:line="34" pos:column="58"/></operator> <call><name pos:line="34" pos:column="59">getpagesize<pos:position pos:line="34" pos:column="70"/></name><argument_list pos:line="34" pos:column="70">()<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">usage<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">ru_majflt<pos:position pos:line="35" pos:column="29"/></name></name><operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator><name><name pos:line="35" pos:column="30">pmc<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">.<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">PageFaultCount<pos:position pos:line="35" pos:column="48"/></name></name></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then> <else pos:line="36" pos:column="11">else <block pos:line="36" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">CloseHandle<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">( <argument><expr><name pos:line="37" pos:column="26">hProcess<pos:position pos:line="37" pos:column="34"/></name></expr></argument> )<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
            <return pos:line="38" pos:column="13">return <expr><operator pos:line="38" pos:column="20">-<pos:position pos:line="38" pos:column="21"/></operator><literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>;<pos:position pos:line="38" pos:column="23"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="41" pos:column="9">CloseHandle<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">( <argument><expr><name pos:line="41" pos:column="22">hProcess<pos:position pos:line="41" pos:column="30"/></name></expr></argument> )<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="45" pos:column="5">return <expr><literal type="number" pos:line="45" pos:column="12">0<pos:position pos:line="45" pos:column="13"/></literal></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

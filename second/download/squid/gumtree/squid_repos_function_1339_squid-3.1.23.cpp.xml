<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1339_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>

<name><name pos:line="3" pos:column="1">LeakFinder<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">::<pos:position pos:line="3" pos:column="13"/></operator><name pos:line="3" pos:column="13">add<pos:position pos:line="3" pos:column="16"/></name></name>
<parameter_list pos:line="4" pos:column="1">(<parameter><decl><type><name pos:line="4" pos:column="2">void<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier></type><name pos:line="4" pos:column="8">p<pos:position pos:line="4" pos:column="9"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="11">const<pos:position pos:line="4" pos:column="16"/></specifier> <name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">file<pos:position pos:line="4" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="29">int<pos:position pos:line="4" pos:column="32"/></name></type> <name pos:line="4" pos:column="33">line<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="38"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><call><name pos:line="6" pos:column="12">hash_lookup<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">table<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="31">p<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">NULL<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">LeakFinderPtr<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">c<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><operator pos:line="7" pos:column="24">new<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="28">LeakFinderPtr<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">p<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">file<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">line<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">hash_join<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">table<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">c<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">count<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">++<pos:position pos:line="9" pos:column="12"/></operator></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">p<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

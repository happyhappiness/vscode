<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2489_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">comm_err_t<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">comm_select<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">msec<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">num<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name><name pos:line="6" pos:column="12">struct<pos:position pos:line="6" pos:column="18"/></name> <name pos:line="6" pos:column="19">kevent<pos:position pos:line="6" pos:column="25"/></name></name></type> <name><name pos:line="6" pos:column="26">ke<pos:position pos:line="6" pos:column="28"/></name><index pos:line="6" pos:column="28">[<expr><name pos:line="6" pos:column="29">KE_LENGTH<pos:position pos:line="6" pos:column="38"/></name></expr>]<pos:position pos:line="6" pos:column="39"/></index></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">timespec<pos:position pos:line="8" pos:column="20"/></name></name></type> <name pos:line="8" pos:column="21">poll_time<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">msec<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">&gt;<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="16">max_poll_time<pos:position pos:line="10" pos:column="29"/></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">msec<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">max_poll_time<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">poll_time<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">tv_sec<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">msec<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">/<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">1000<pos:position pos:line="13" pos:column="35"/></literal></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">poll_time<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">tv_nsec<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">msec<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">%<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">1000<pos:position pos:line="15" pos:column="37"/></literal><operator pos:line="15" pos:column="37">)<pos:position pos:line="15" pos:column="38"/></operator> <operator pos:line="15" pos:column="39">*<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">1000000<pos:position pos:line="15" pos:column="48"/></literal></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>

    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init pos:line="17" pos:column="10">;<pos:position pos:line="17" pos:column="11"/></init><condition pos:line="17" pos:column="11">;<pos:position pos:line="17" pos:column="12"/></condition><incr/>)<pos:position pos:line="17" pos:column="13"/></control> <block pos:line="17" pos:column="14">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">num<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">kevent<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">kq<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">kqlst<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">kqoff<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">ke<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">KE_LENGTH<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="55">&amp;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="56">poll_time<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator><name><name pos:line="19" pos:column="11">statCounter<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">select_loops<pos:position pos:line="19" pos:column="35"/></name></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">kqoff<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">num<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&gt;=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
            <block type="pseudo"><break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break></block></then></if>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">ignoreErrno<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">errno<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
            <block type="pseudo"><break pos:line="26" pos:column="13">break;<pos:position pos:line="26" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">getCurrentTime<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">()<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>

        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">COMM_ERROR<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></return>

        <comment type="block" pos:line="32" pos:column="9">/* NOTREACHED */</comment>
    }<pos:position pos:line="33" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">getCurrentTime<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">()<pos:position pos:line="35" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">num<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">==<pos:position pos:line="37" pos:column="15"/></operator> <literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18">
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">COMM_OK<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></return></block></then></if>		<comment type="block" pos:line="38" pos:column="33">/* No error.. */</comment>

    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init><expr><name pos:line="40" pos:column="10">i<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="14">0<pos:position pos:line="40" pos:column="15"/></literal></expr>;<pos:position pos:line="40" pos:column="16"/></init> <condition><expr><name pos:line="40" pos:column="17">i<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">&lt;<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="21">num<pos:position pos:line="40" pos:column="24"/></name></expr>;<pos:position pos:line="40" pos:column="25"/></condition> <incr><expr><name pos:line="40" pos:column="26">i<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">++<pos:position pos:line="40" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="30"/></control> <block pos:line="40" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">int<pos:position pos:line="41" pos:column="12"/></name></type> <name pos:line="41" pos:column="13">fd<pos:position pos:line="41" pos:column="15"/></name> <init pos:line="41" pos:column="16">= <expr><operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">int<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator> <name><name pos:line="41" pos:column="24">ke<pos:position pos:line="41" pos:column="26"/></name><index pos:line="41" pos:column="26">[<expr><name pos:line="41" pos:column="27">i<pos:position pos:line="41" pos:column="28"/></name></expr>]<pos:position pos:line="41" pos:column="29"/></index></name><operator pos:line="41" pos:column="29">.<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">ident<pos:position pos:line="41" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="41" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">PF<pos:position pos:line="42" pos:column="11"/></name> <modifier pos:line="42" pos:column="12">*<pos:position pos:line="42" pos:column="13"/></modifier></type><name pos:line="42" pos:column="13">hdl<pos:position pos:line="42" pos:column="16"/></name> <init pos:line="42" pos:column="17">= <expr><name pos:line="42" pos:column="19">NULL<pos:position pos:line="42" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="42" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">fde<pos:position pos:line="43" pos:column="12"/></name> <modifier pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></modifier></type><name pos:line="43" pos:column="14">F<pos:position pos:line="43" pos:column="15"/></name> <init pos:line="43" pos:column="16">= <expr><operator pos:line="43" pos:column="18">&amp;<pos:position pos:line="43" pos:column="23"/></operator><name><name pos:line="43" pos:column="19">fd_table<pos:position pos:line="43" pos:column="27"/></name><index pos:line="43" pos:column="27">[<expr><name pos:line="43" pos:column="28">fd<pos:position pos:line="43" pos:column="30"/></name></expr>]<pos:position pos:line="43" pos:column="31"/></index></name></expr></init></decl>;<pos:position pos:line="43" pos:column="32"/></decl_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">ke<pos:position pos:line="45" pos:column="15"/></name><index pos:line="45" pos:column="15">[<expr><name pos:line="45" pos:column="16">i<pos:position pos:line="45" pos:column="17"/></name></expr>]<pos:position pos:line="45" pos:column="18"/></index></name><operator pos:line="45" pos:column="18">.<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">flags<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">&amp;<pos:position pos:line="45" pos:column="30"/></operator> <name pos:line="45" pos:column="27">EV_ERROR<pos:position pos:line="45" pos:column="35"/></name></expr>)<pos:position pos:line="45" pos:column="36"/></condition><then pos:line="45" pos:column="36"> <block pos:line="45" pos:column="37">{
            <expr_stmt><expr><name pos:line="46" pos:column="13">errno<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name><name pos:line="46" pos:column="21">ke<pos:position pos:line="46" pos:column="23"/></name><index pos:line="46" pos:column="23">[<expr><name pos:line="46" pos:column="24">i<pos:position pos:line="46" pos:column="25"/></name></expr>]<pos:position pos:line="46" pos:column="26"/></index></name><operator pos:line="46" pos:column="26">.<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">data<pos:position pos:line="46" pos:column="31"/></name></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
            <comment type="block" pos:line="47" pos:column="13">/* XXX error == bad! -- adrian */</comment>
            <continue pos:line="48" pos:column="13">continue;<pos:position pos:line="48" pos:column="22"/></continue>        <comment type="block" pos:line="48" pos:column="30">/* XXX! */</comment>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>

        <switch pos:line="51" pos:column="9">switch <condition pos:line="51" pos:column="16">(<expr><name><name pos:line="51" pos:column="17">ke<pos:position pos:line="51" pos:column="19"/></name><index pos:line="51" pos:column="19">[<expr><name pos:line="51" pos:column="20">i<pos:position pos:line="51" pos:column="21"/></name></expr>]<pos:position pos:line="51" pos:column="22"/></index></name><operator pos:line="51" pos:column="22">.<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">filter<pos:position pos:line="51" pos:column="29"/></name></expr>)<pos:position pos:line="51" pos:column="30"/></condition> <block pos:line="51" pos:column="31">{

        <case pos:line="53" pos:column="9">case <expr><name pos:line="53" pos:column="14">EVFILT_READ<pos:position pos:line="53" pos:column="25"/></name></expr>:<pos:position pos:line="53" pos:column="26"/></case>

            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><operator pos:line="55" pos:column="17">(<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">hdl<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <name><name pos:line="55" pos:column="24">F<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">read_handler<pos:position pos:line="55" pos:column="39"/></name></name><operator pos:line="55" pos:column="39">)<pos:position pos:line="55" pos:column="40"/></operator> <operator pos:line="55" pos:column="41">!=<pos:position pos:line="55" pos:column="43"/></operator> <name pos:line="55" pos:column="44">NULL<pos:position pos:line="55" pos:column="48"/></name></expr>)<pos:position pos:line="55" pos:column="49"/></condition><then pos:line="55" pos:column="49"> <block pos:line="55" pos:column="50">{
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">F<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">read_handler<pos:position pos:line="56" pos:column="32"/></name></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator> <name pos:line="56" pos:column="35">NULL<pos:position pos:line="56" pos:column="39"/></name></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="57" pos:column="17">F<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">flags<pos:position pos:line="57" pos:column="25"/></name><operator pos:line="57" pos:column="25">.<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">read_pending<pos:position pos:line="57" pos:column="38"/></name></name> <operator pos:line="57" pos:column="39">=<pos:position pos:line="57" pos:column="40"/></operator> <literal type="number" pos:line="57" pos:column="41">0<pos:position pos:line="57" pos:column="42"/></literal></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">hdl<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">fd<pos:position pos:line="58" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="25">F<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">-&gt;<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="28">read_data<pos:position pos:line="58" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>

            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>

        <case pos:line="63" pos:column="9">case <expr><name pos:line="63" pos:column="14">EVFILT_WRITE<pos:position pos:line="63" pos:column="26"/></name></expr>:<pos:position pos:line="63" pos:column="27"/></case>

            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><operator pos:line="65" pos:column="17">(<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">hdl<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator> <name><name pos:line="65" pos:column="24">F<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">write_handler<pos:position pos:line="65" pos:column="40"/></name></name><operator pos:line="65" pos:column="40">)<pos:position pos:line="65" pos:column="41"/></operator> <operator pos:line="65" pos:column="42">!=<pos:position pos:line="65" pos:column="44"/></operator> <name pos:line="65" pos:column="45">NULL<pos:position pos:line="65" pos:column="49"/></name></expr>)<pos:position pos:line="65" pos:column="50"/></condition><then pos:line="65" pos:column="50"> <block pos:line="65" pos:column="51">{
                <expr_stmt><expr><name><name pos:line="66" pos:column="17">F<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">write_handler<pos:position pos:line="66" pos:column="33"/></name></name> <operator pos:line="66" pos:column="34">=<pos:position pos:line="66" pos:column="35"/></operator> <name pos:line="66" pos:column="36">NULL<pos:position pos:line="66" pos:column="40"/></name></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">hdl<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">fd<pos:position pos:line="67" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="25">F<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">-&gt;<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="28">write_data<pos:position pos:line="67" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>

            <break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break>

        <default pos:line="72" pos:column="9">default:<pos:position pos:line="72" pos:column="17"/></default>
            <comment type="block" pos:line="73" pos:column="13">/* Bad! -- adrian */</comment>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">debugs<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><literal type="number" pos:line="74" pos:column="20">5<pos:position pos:line="74" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="23">1<pos:position pos:line="74" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="26">"comm_select: kevent returned "<pos:position pos:line="74" pos:column="57"/></literal> <operator pos:line="74" pos:column="58">&lt;&lt;<pos:position pos:line="74" pos:column="66"/></operator> <name><name pos:line="74" pos:column="61">ke<pos:position pos:line="74" pos:column="63"/></name><index pos:line="74" pos:column="63">[<expr><name pos:line="74" pos:column="64">i<pos:position pos:line="74" pos:column="65"/></name></expr>]<pos:position pos:line="74" pos:column="66"/></index></name><operator pos:line="74" pos:column="66">.<pos:position pos:line="74" pos:column="67"/></operator><name pos:line="74" pos:column="67">filter<pos:position pos:line="74" pos:column="73"/></name> <operator pos:line="74" pos:column="74">&lt;&lt;<pos:position pos:line="74" pos:column="82"/></operator> <literal type="string" pos:line="74" pos:column="77">"!"<pos:position pos:line="74" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="82"/></expr_stmt>
            <break pos:line="75" pos:column="13">break;<pos:position pos:line="75" pos:column="19"/></break>
        }<pos:position pos:line="76" pos:column="10"/></block></switch>
    }<pos:position pos:line="77" pos:column="6"/></block></for>

    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">COMM_OK<pos:position pos:line="79" pos:column="19"/></name></expr>;<pos:position pos:line="79" pos:column="20"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4477_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">aclArpCompare<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">Eui<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">Eui48<pos:position pos:line="2" pos:column="25"/></name></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier> <specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="35">a<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="38">Eui<pos:position pos:line="2" pos:column="41"/></name><operator pos:line="2" pos:column="41">::<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">Eui48<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier> <specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="58">b<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><call><name pos:line="4" pos:column="12">memcmp<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">a<pos:position pos:line="4" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="22">b<pos:position pos:line="4" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="25">sizeof<argument_list pos:line="4" pos:column="31">(<argument><expr><name><name pos:line="4" pos:column="32">Eui<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">::<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">Eui48<pos:position pos:line="4" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="45"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

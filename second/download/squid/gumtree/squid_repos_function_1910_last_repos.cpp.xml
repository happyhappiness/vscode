<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1910_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">httpHeaderParseQuotedString<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">start<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">len<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">String<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">val<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">end<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">pos<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">val<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">-&gt;<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="10">clean<pos:position pos:line="5" pos:column="15"/></name></name><argument_list pos:line="5" pos:column="15">()<pos:position pos:line="5" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">start<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <literal type="char" pos:line="6" pos:column="19">'"'<pos:position pos:line="6" pos:column="22"/></literal></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">66<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">2<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">HERE<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <literal type="string" pos:line="7" pos:column="31">"failed to parse a quoted-string header field near '"<pos:position pos:line="7" pos:column="84"/></literal> <operator pos:line="7" pos:column="85">&lt;&lt;<pos:position pos:line="7" pos:column="93"/></operator> <name pos:line="7" pos:column="88">start<pos:position pos:line="7" pos:column="93"/></name> <operator pos:line="7" pos:column="94">&lt;&lt;<pos:position pos:line="7" pos:column="102"/></operator> <literal type="string" pos:line="7" pos:column="97">"'"<pos:position pos:line="7" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="102"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">pos<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <name pos:line="10" pos:column="11">start<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">+<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">1<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">*<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">pos<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">!=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="char" pos:line="12" pos:column="20">'"'<pos:position pos:line="12" pos:column="23"/></literal> <operator pos:line="12" pos:column="24">&amp;&amp;<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="27">len<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">&gt;<pos:position pos:line="12" pos:column="35"/></operator> <operator pos:line="12" pos:column="33">(<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">pos<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">start<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">)<pos:position pos:line="12" pos:column="44"/></operator></expr>)<pos:position pos:line="12" pos:column="45"/></condition> <block pos:line="12" pos:column="46">{

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">pos<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">==<pos:position pos:line="14" pos:column="20"/></operator><literal type="char" pos:line="14" pos:column="20">'\r'<pos:position pos:line="14" pos:column="24"/></literal></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
            <expr_stmt><expr><operator pos:line="15" pos:column="13">++<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">pos<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">pos<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">start<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator> <operator pos:line="16" pos:column="29">&gt;<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="31">len<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">||<pos:position pos:line="16" pos:column="37"/></operator> <operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">pos<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">!=<pos:position pos:line="16" pos:column="45"/></operator> <literal type="char" pos:line="16" pos:column="46">'\n'<pos:position pos:line="16" pos:column="50"/></literal></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51"> <block pos:line="16" pos:column="52">{
                <expr_stmt><expr><call><name pos:line="17" pos:column="17">debugs<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="number" pos:line="17" pos:column="24">66<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="28">2<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">HERE<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">&lt;&lt;<pos:position pos:line="17" pos:column="44"/></operator> <literal type="string" pos:line="17" pos:column="39">"failed to parse a quoted-string header field with '\\r' octet "<pos:position pos:line="17" pos:column="103"/></literal> <operator pos:line="17" pos:column="104">&lt;&lt;<pos:position pos:line="17" pos:column="112"/></operator> <operator pos:line="17" pos:column="107">(<pos:position pos:line="17" pos:column="108"/></operator><name pos:line="17" pos:column="108">start<pos:position pos:line="17" pos:column="113"/></name><operator pos:line="17" pos:column="113">-<pos:position pos:line="17" pos:column="114"/></operator><name pos:line="17" pos:column="114">pos<pos:position pos:line="17" pos:column="117"/></name><operator pos:line="17" pos:column="117">)<pos:position pos:line="17" pos:column="118"/></operator>
                       <operator pos:line="18" pos:column="24">&lt;&lt;<pos:position pos:line="18" pos:column="32"/></operator> <literal type="string" pos:line="18" pos:column="27">" bytes into '"<pos:position pos:line="18" pos:column="42"/></literal> <operator pos:line="18" pos:column="43">&lt;&lt;<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="46">start<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">&lt;&lt;<pos:position pos:line="18" pos:column="60"/></operator> <literal type="string" pos:line="18" pos:column="55">"'"<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="19" pos:column="17">val<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">clean<pos:position pos:line="19" pos:column="27"/></name></name><argument_list pos:line="19" pos:column="27">()<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
                <return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
            }<pos:position pos:line="21" pos:column="14"/></block></then></if>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">pos<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <literal type="char" pos:line="24" pos:column="21">'\n'<pos:position pos:line="24" pos:column="25"/></literal></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
            <expr_stmt><expr><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">pos<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">( <expr><operator pos:line="26" pos:column="18">(<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">pos<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">start<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">)<pos:position pos:line="26" pos:column="29"/></operator> <operator pos:line="26" pos:column="30">&gt;<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="32">len<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">||<pos:position pos:line="26" pos:column="38"/></operator> <operator pos:line="26" pos:column="39">(<pos:position pos:line="26" pos:column="40"/></operator><operator pos:line="26" pos:column="40">*<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">pos<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">!=<pos:position pos:line="26" pos:column="47"/></operator> <literal type="char" pos:line="26" pos:column="48">' '<pos:position pos:line="26" pos:column="51"/></literal> <operator pos:line="26" pos:column="52">&amp;&amp;<pos:position pos:line="26" pos:column="62"/></operator> <operator pos:line="26" pos:column="55">*<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">pos<pos:position pos:line="26" pos:column="59"/></name> <operator pos:line="26" pos:column="60">!=<pos:position pos:line="26" pos:column="62"/></operator> <literal type="char" pos:line="26" pos:column="63">'\t'<pos:position pos:line="26" pos:column="67"/></literal><operator pos:line="26" pos:column="67">)<pos:position pos:line="26" pos:column="68"/></operator></expr>)<pos:position pos:line="26" pos:column="69"/></condition><then pos:line="26" pos:column="69"> <block pos:line="26" pos:column="70">{
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">debugs<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="number" pos:line="27" pos:column="24">66<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="28">2<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="31">HERE<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">&lt;&lt;<pos:position pos:line="27" pos:column="44"/></operator> <literal type="string" pos:line="27" pos:column="39">"failed to parse multiline quoted-string header field '"<pos:position pos:line="27" pos:column="95"/></literal> <operator pos:line="27" pos:column="96">&lt;&lt;<pos:position pos:line="27" pos:column="104"/></operator> <name pos:line="27" pos:column="99">start<pos:position pos:line="27" pos:column="104"/></name> <operator pos:line="27" pos:column="105">&lt;&lt;<pos:position pos:line="27" pos:column="113"/></operator> <literal type="string" pos:line="27" pos:column="108">"'"<pos:position pos:line="27" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="113"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="28" pos:column="17">val<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">-&gt;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="22">clean<pos:position pos:line="28" pos:column="27"/></name></name><argument_list pos:line="28" pos:column="27">()<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
                <return pos:line="29" pos:column="17">return <expr><literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
            <comment type="line" pos:line="31" pos:column="13">// TODO: replace the entire LWS with a space</comment>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">val<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">append<pos:position pos:line="32" pos:column="24"/></name></name><argument_list pos:line="32" pos:column="24">(<argument><expr><literal type="string" pos:line="32" pos:column="25">" "<pos:position pos:line="32" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">pos<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">66<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="24">2<pos:position pos:line="34" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="27">HERE<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">&lt;&lt;<pos:position pos:line="34" pos:column="40"/></operator> <literal type="string" pos:line="34" pos:column="35">"len &lt; pos-start =&gt; "<pos:position pos:line="34" pos:column="62"/></literal> <operator pos:line="34" pos:column="57">&lt;&lt;<pos:position pos:line="34" pos:column="65"/></operator> <name pos:line="34" pos:column="60">len<pos:position pos:line="34" pos:column="63"/></name> <operator pos:line="34" pos:column="64">&lt;&lt;<pos:position pos:line="34" pos:column="72"/></operator> <literal type="string" pos:line="34" pos:column="67">" &lt; "<pos:position pos:line="34" pos:column="75"/></literal> <operator pos:line="34" pos:column="73">&lt;&lt;<pos:position pos:line="34" pos:column="81"/></operator> <operator pos:line="34" pos:column="76">(<pos:position pos:line="34" pos:column="77"/></operator><name pos:line="34" pos:column="77">pos<pos:position pos:line="34" pos:column="80"/></name><operator pos:line="34" pos:column="80">-<pos:position pos:line="34" pos:column="81"/></operator><name pos:line="34" pos:column="81">start<pos:position pos:line="34" pos:column="86"/></name><operator pos:line="34" pos:column="86">)<pos:position pos:line="34" pos:column="87"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="89"/></expr_stmt>
            <continue pos:line="35" pos:column="13">continue;<pos:position pos:line="35" pos:column="22"/></continue>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="38" pos:column="9">bool<pos:position pos:line="38" pos:column="13"/></name></type> <name pos:line="38" pos:column="14">quoted<pos:position pos:line="38" pos:column="20"/></name> <init pos:line="38" pos:column="21">= <expr><operator pos:line="38" pos:column="23">(<pos:position pos:line="38" pos:column="24"/></operator><operator pos:line="38" pos:column="24">*<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">pos<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">==<pos:position pos:line="38" pos:column="31"/></operator> <literal type="char" pos:line="38" pos:column="32">'\\'<pos:position pos:line="38" pos:column="36"/></literal><operator pos:line="38" pos:column="36">)<pos:position pos:line="38" pos:column="37"/></operator></expr></init></decl>;<pos:position pos:line="38" pos:column="38"/></decl_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">quoted<pos:position pos:line="39" pos:column="19"/></name></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20"> <block pos:line="39" pos:column="21">{
            <expr_stmt><expr><operator pos:line="40" pos:column="13">++<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">pos<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><operator pos:line="41" pos:column="17">!<pos:position pos:line="41" pos:column="18"/></operator><operator pos:line="41" pos:column="18">*<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">pos<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">||<pos:position pos:line="41" pos:column="25"/></operator> <operator pos:line="41" pos:column="26">(<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">pos<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">start<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">)<pos:position pos:line="41" pos:column="37"/></operator> <operator pos:line="41" pos:column="38">&gt;<pos:position pos:line="41" pos:column="42"/></operator> <name pos:line="41" pos:column="40">len<pos:position pos:line="41" pos:column="43"/></name></expr>)<pos:position pos:line="41" pos:column="44"/></condition><then pos:line="41" pos:column="44"> <block pos:line="41" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">debugs<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><literal type="number" pos:line="42" pos:column="24">66<pos:position pos:line="42" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="28">2<pos:position pos:line="42" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">HERE<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">&lt;&lt;<pos:position pos:line="42" pos:column="44"/></operator> <literal type="string" pos:line="42" pos:column="39">"failed to parse a quoted-string header field near '"<pos:position pos:line="42" pos:column="92"/></literal> <operator pos:line="42" pos:column="93">&lt;&lt;<pos:position pos:line="42" pos:column="101"/></operator> <name pos:line="42" pos:column="96">start<pos:position pos:line="42" pos:column="101"/></name> <operator pos:line="42" pos:column="102">&lt;&lt;<pos:position pos:line="42" pos:column="110"/></operator> <literal type="string" pos:line="42" pos:column="105">"'"<pos:position pos:line="42" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="110"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="43" pos:column="17">val<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">clean<pos:position pos:line="43" pos:column="27"/></name></name><argument_list pos:line="43" pos:column="27">()<pos:position pos:line="43" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
                <return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="47" pos:column="9">end<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">pos<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>
        <while pos:line="48" pos:column="9">while <condition pos:line="48" pos:column="15">(<expr><name><name pos:line="48" pos:column="16">end<pos:position pos:line="48" pos:column="19"/></name> <argument_list type="generic" pos:line="48" pos:column="20">&lt; <argument><expr><operator pos:line="48" pos:column="22">(<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">start<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">+<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">len<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">)<pos:position pos:line="48" pos:column="33"/></operator> <operator pos:line="48" pos:column="34">&amp;&amp;<pos:position pos:line="48" pos:column="44"/></operator> <operator pos:line="48" pos:column="37">*<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="38">end<pos:position pos:line="48" pos:column="41"/></name> <operator pos:line="48" pos:column="42">!=<pos:position pos:line="48" pos:column="44"/></operator> <literal type="char" pos:line="48" pos:column="45">'\\'<pos:position pos:line="48" pos:column="49"/></literal> <operator pos:line="48" pos:column="50">&amp;&amp;<pos:position pos:line="48" pos:column="60"/></operator> <operator pos:line="48" pos:column="53">*<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="54">end<pos:position pos:line="48" pos:column="57"/></name> <operator pos:line="48" pos:column="58">!=<pos:position pos:line="48" pos:column="60"/></operator> <literal type="char" pos:line="48" pos:column="61">'\"'<pos:position pos:line="48" pos:column="65"/></literal> <operator pos:line="48" pos:column="66">&amp;&amp;<pos:position pos:line="48" pos:column="76"/></operator> <operator pos:line="48" pos:column="69">(<pos:position pos:line="48" pos:column="70"/></operator><name pos:line="48" pos:column="70">unsigned<pos:position pos:line="48" pos:column="78"/></name> <name pos:line="48" pos:column="79">char<pos:position pos:line="48" pos:column="83"/></name><operator pos:line="48" pos:column="83">)<pos:position pos:line="48" pos:column="84"/></operator><operator pos:line="48" pos:column="84">*<pos:position pos:line="48" pos:column="85"/></operator><name pos:line="48" pos:column="85">end<pos:position pos:line="48" pos:column="88"/></name></expr></argument> &gt;<pos:position pos:line="48" pos:column="93"/></argument_list></name> <literal type="number" pos:line="48" pos:column="91">0x1F<pos:position pos:line="48" pos:column="95"/></literal> <operator pos:line="48" pos:column="96">&amp;&amp;<pos:position pos:line="48" pos:column="106"/></operator> <operator pos:line="48" pos:column="99">*<pos:position pos:line="48" pos:column="100"/></operator><name pos:line="48" pos:column="100">end<pos:position pos:line="48" pos:column="103"/></name> <operator pos:line="48" pos:column="104">!=<pos:position pos:line="48" pos:column="106"/></operator> <literal type="number" pos:line="48" pos:column="107">0x7F<pos:position pos:line="48" pos:column="111"/></literal></expr>)<pos:position pos:line="48" pos:column="112"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="13">++<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">end<pos:position pos:line="49" pos:column="18"/></name></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt></block></while>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">unsigned<pos:position pos:line="50" pos:column="23"/></name> <name pos:line="50" pos:column="24">char<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">)<pos:position pos:line="50" pos:column="29"/></operator><operator pos:line="50" pos:column="29">*<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">end<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">&lt;=<pos:position pos:line="50" pos:column="39"/></operator> <literal type="number" pos:line="50" pos:column="37">0x1F<pos:position pos:line="50" pos:column="41"/></literal> <operator pos:line="50" pos:column="42">&amp;&amp;<pos:position pos:line="50" pos:column="52"/></operator> <operator pos:line="50" pos:column="45">*<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">end<pos:position pos:line="50" pos:column="49"/></name> <operator pos:line="50" pos:column="50">!=<pos:position pos:line="50" pos:column="52"/></operator> <literal type="char" pos:line="50" pos:column="53">'\r'<pos:position pos:line="50" pos:column="57"/></literal> <operator pos:line="50" pos:column="58">&amp;&amp;<pos:position pos:line="50" pos:column="68"/></operator> <operator pos:line="50" pos:column="61">*<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="62">end<pos:position pos:line="50" pos:column="65"/></name> <operator pos:line="50" pos:column="66">!=<pos:position pos:line="50" pos:column="68"/></operator> <literal type="char" pos:line="50" pos:column="69">'\n'<pos:position pos:line="50" pos:column="73"/></literal><operator pos:line="50" pos:column="73">)<pos:position pos:line="50" pos:column="74"/></operator> <operator pos:line="50" pos:column="75">||<pos:position pos:line="50" pos:column="77"/></operator> <operator pos:line="50" pos:column="78">*<pos:position pos:line="50" pos:column="79"/></operator><name pos:line="50" pos:column="79">end<pos:position pos:line="50" pos:column="82"/></name> <operator pos:line="50" pos:column="83">==<pos:position pos:line="50" pos:column="85"/></operator> <literal type="number" pos:line="50" pos:column="86">0x7F<pos:position pos:line="50" pos:column="90"/></literal></expr>)<pos:position pos:line="50" pos:column="91"/></condition><then pos:line="50" pos:column="91"> <block pos:line="50" pos:column="92">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">debugs<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="number" pos:line="51" pos:column="20">66<pos:position pos:line="51" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="24">2<pos:position pos:line="51" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">HERE<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">&lt;&lt;<pos:position pos:line="51" pos:column="40"/></operator> <literal type="string" pos:line="51" pos:column="35">"failed to parse a quoted-string header field with CTL octet "<pos:position pos:line="51" pos:column="97"/></literal> <operator pos:line="51" pos:column="98">&lt;&lt;<pos:position pos:line="51" pos:column="106"/></operator> <operator pos:line="51" pos:column="101">(<pos:position pos:line="51" pos:column="102"/></operator><name pos:line="51" pos:column="102">start<pos:position pos:line="51" pos:column="107"/></name><operator pos:line="51" pos:column="107">-<pos:position pos:line="51" pos:column="108"/></operator><name pos:line="51" pos:column="108">pos<pos:position pos:line="51" pos:column="111"/></name><operator pos:line="51" pos:column="111">)<pos:position pos:line="51" pos:column="112"/></operator>
                   <operator pos:line="52" pos:column="20">&lt;&lt;<pos:position pos:line="52" pos:column="28"/></operator> <literal type="string" pos:line="52" pos:column="23">" bytes into '"<pos:position pos:line="52" pos:column="38"/></literal> <operator pos:line="52" pos:column="39">&lt;&lt;<pos:position pos:line="52" pos:column="47"/></operator> <name pos:line="52" pos:column="42">start<pos:position pos:line="52" pos:column="47"/></name> <operator pos:line="52" pos:column="48">&lt;&lt;<pos:position pos:line="52" pos:column="56"/></operator> <literal type="string" pos:line="52" pos:column="51">"'"<pos:position pos:line="52" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">val<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">clean<pos:position pos:line="53" pos:column="23"/></name></name><argument_list pos:line="53" pos:column="23">()<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
            <return pos:line="54" pos:column="13">return <expr><literal type="number" pos:line="54" pos:column="20">0<pos:position pos:line="54" pos:column="21"/></literal></expr>;<pos:position pos:line="54" pos:column="22"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="56" pos:column="9">val<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">-&gt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">append<pos:position pos:line="56" pos:column="20"/></name></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">pos<pos:position pos:line="56" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="26">end<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">pos<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">pos<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">end<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></while>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">pos<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">!=<pos:position pos:line="60" pos:column="16"/></operator> <literal type="char" pos:line="60" pos:column="17">'\"'<pos:position pos:line="60" pos:column="21"/></literal></expr>)<pos:position pos:line="60" pos:column="22"/></condition><then pos:line="60" pos:column="22"> <block pos:line="60" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">debugs<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><literal type="number" pos:line="61" pos:column="16">66<pos:position pos:line="61" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="20">2<pos:position pos:line="61" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="23">HERE<pos:position pos:line="61" pos:column="27"/></name> <operator pos:line="61" pos:column="28">&lt;&lt;<pos:position pos:line="61" pos:column="36"/></operator> <literal type="string" pos:line="61" pos:column="31">"failed to parse a quoted-string header field which did not end with \" "<pos:position pos:line="61" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="106"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="62" pos:column="9">val<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">clean<pos:position pos:line="62" pos:column="19"/></name></name><argument_list pos:line="62" pos:column="19">()<pos:position pos:line="62" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><literal type="number" pos:line="63" pos:column="16">0<pos:position pos:line="63" pos:column="17"/></literal></expr>;<pos:position pos:line="63" pos:column="18"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="65" pos:column="5">/* Make sure it's defined even if empty "" */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">!<pos:position pos:line="66" pos:column="10"/></operator><call><name><name pos:line="66" pos:column="10">val<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">-&gt;<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="15">termedBuf<pos:position pos:line="66" pos:column="24"/></name></name><argument_list pos:line="66" pos:column="24">()<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="67" pos:column="9">val<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">-&gt;<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="14">limitInit<pos:position pos:line="67" pos:column="23"/></name></name><argument_list pos:line="67" pos:column="23">(<argument><expr><literal type="string" pos:line="67" pos:column="24">""<pos:position pos:line="67" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="28">0<pos:position pos:line="67" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt></block></then></if>
    <return pos:line="68" pos:column="5">return <expr><literal type="number" pos:line="68" pos:column="12">1<pos:position pos:line="68" pos:column="13"/></literal></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

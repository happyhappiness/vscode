<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1891_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">MemObject<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">objectBytesOnDisk<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list> <specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * NOTE: storeOffset() represents the disk file size,
     * not the amount of object data on disk.
     *
     * If we don't have at least 'swap_hdr_sz' bytes
     * then none of the object data is on disk.
     *
     * This should still be safe if swap_hdr_sz == 0,
     * meaning we haven't even opened the swapout file
     * yet.
     */</comment>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">swapout<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">sio<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">getRaw<pos:position pos:line="16" pos:column="27"/></name></name><argument_list pos:line="16" pos:column="27">()<pos:position pos:line="16" pos:column="29"/></argument_list></call> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">NULL<pos:position pos:line="16" pos:column="37"/></name></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int64_t<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">nwritten<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><call><name><name pos:line="19" pos:column="24">swapout<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">sio<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">offset<pos:position pos:line="19" pos:column="43"/></name></name><argument_list pos:line="19" pos:column="43">()<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="46"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">nwritten<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&lt;=<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="21">(<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">int64_t<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">)<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">swap_hdr_sz<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return></block></then></if>

    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">nwritten<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">-<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">swap_hdr_sz<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator></expr>;<pos:position pos:line="24" pos:column="37"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

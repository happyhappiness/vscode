<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1448.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">copyOneHeaderFromClientsideRequestToUpstreamRequest<pos:position pos:line="2" pos:column="52"/></name><parameter_list pos:line="2" pos:column="52">(<parameter><decl><type><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">HttpHeaderEntry<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type><name pos:line="2" pos:column="76">e<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="79">const<pos:position pos:line="2" pos:column="84"/></specifier> <name pos:line="2" pos:column="85">String<pos:position pos:line="2" pos:column="91"/></name></type> <name pos:line="2" pos:column="92">strConnection<pos:position pos:line="2" pos:column="105"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="107">const<pos:position pos:line="2" pos:column="112"/></specifier> <name pos:line="2" pos:column="113">HttpRequest<pos:position pos:line="2" pos:column="124"/></name> <modifier pos:line="2" pos:column="125">*<pos:position pos:line="2" pos:column="126"/></modifier></type> <name pos:line="2" pos:column="127">request<pos:position pos:line="2" pos:column="134"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="136">HttpHeader<pos:position pos:line="2" pos:column="146"/></name> <modifier pos:line="2" pos:column="147">*<pos:position pos:line="2" pos:column="148"/></modifier></type> <name pos:line="2" pos:column="149">hdr_out<pos:position pos:line="2" pos:column="156"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="158">const<pos:position pos:line="2" pos:column="163"/></specifier> <name pos:line="2" pos:column="164">int<pos:position pos:line="2" pos:column="167"/></name></type> <name pos:line="2" pos:column="168">we_do_ranges<pos:position pos:line="2" pos:column="180"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="182">const<pos:position pos:line="2" pos:column="187"/></specifier> <name pos:line="2" pos:column="188">HttpStateFlags<pos:position pos:line="2" pos:column="202"/></name> <modifier pos:line="2" pos:column="203">&amp;<pos:position pos:line="2" pos:column="208"/></modifier></type><name pos:line="2" pos:column="204">flags<pos:position pos:line="2" pos:column="209"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="210"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">11<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"httpBuildRequestHeader: "<pos:position pos:line="4" pos:column="45"/></literal> <operator pos:line="4" pos:column="46">&lt;&lt;<pos:position pos:line="4" pos:column="54"/></operator> <name><name pos:line="4" pos:column="49">e<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">name<pos:position pos:line="4" pos:column="56"/></name></name> <operator pos:line="4" pos:column="57">&lt;&lt;<pos:position pos:line="4" pos:column="65"/></operator> <literal type="string" pos:line="4" pos:column="60">": "<pos:position pos:line="4" pos:column="64"/></literal> <operator pos:line="4" pos:column="65">&lt;&lt;<pos:position pos:line="4" pos:column="73"/></operator> <name><name pos:line="4" pos:column="68">e<pos:position pos:line="4" pos:column="69"/></name><operator pos:line="4" pos:column="69">-&gt;<pos:position pos:line="4" pos:column="74"/></operator><name pos:line="4" pos:column="71">value<pos:position pos:line="4" pos:column="76"/></name></name></expr></argument> )<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="79"/></expr_stmt>

    <switch pos:line="6" pos:column="5">switch <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">e<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">id<pos:position pos:line="6" pos:column="18"/></name></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition> <block pos:line="6" pos:column="20">{

    <comment type="block" format="doxygen" pos:line="8" pos:column="5">/** \par RFC 2616 sect 13.5.1 - Hop-by-Hop headers which Squid should not pass on. */</comment>

    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">HDR_PROXY_AUTHORIZATION<pos:position pos:line="10" pos:column="33"/></name></expr>:<pos:position pos:line="10" pos:column="34"/></case>
        <comment type="block" format="doxygen" pos:line="11" pos:column="9">/** \par Proxy-Authorization:
         * Only pass on proxy authentication to peers for which
         * authentication forwarding is explicitly enabled
         */</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">flags<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">.<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">originpeer<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">&amp;&amp;<pos:position pos:line="15" pos:column="41"/></operator> <name><name pos:line="15" pos:column="34">flags<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">proxying<pos:position pos:line="15" pos:column="48"/></name></name> <operator pos:line="15" pos:column="49">&amp;&amp;<pos:position pos:line="15" pos:column="59"/></operator> <name><name pos:line="15" pos:column="52">request<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">-&gt;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="61">peer_login<pos:position pos:line="15" pos:column="71"/></name></name> <operator pos:line="15" pos:column="72">&amp;&amp;<pos:position pos:line="15" pos:column="82"/></operator>
                <operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><call><name pos:line="16" pos:column="18">strcmp<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">request<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">peer_login<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="46">"PASS"<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call> <operator pos:line="16" pos:column="54">==<pos:position pos:line="16" pos:column="56"/></operator> <literal type="number" pos:line="16" pos:column="57">0<pos:position pos:line="16" pos:column="58"/></literal> <operator pos:line="16" pos:column="59">||<pos:position pos:line="16" pos:column="61"/></operator>
                 <call><name pos:line="17" pos:column="18">strcmp<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">request<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">peer_login<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">"PROXYPASS"<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call> <operator pos:line="17" pos:column="59">==<pos:position pos:line="17" pos:column="61"/></operator> <literal type="number" pos:line="17" pos:column="62">0<pos:position pos:line="17" pos:column="63"/></literal> <operator pos:line="17" pos:column="64">||<pos:position pos:line="17" pos:column="66"/></operator>
                 <call><name pos:line="18" pos:column="18">strcmp<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name><name pos:line="18" pos:column="25">request<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">peer_login<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="46">"PASSTHRU"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call> <operator pos:line="18" pos:column="58">==<pos:position pos:line="18" pos:column="60"/></operator> <literal type="number" pos:line="18" pos:column="61">0<pos:position pos:line="18" pos:column="62"/></literal><operator pos:line="18" pos:column="62">)<pos:position pos:line="18" pos:column="63"/></operator></expr>)<pos:position pos:line="18" pos:column="64"/></condition><then pos:line="18" pos:column="64"> <block pos:line="18" pos:column="65">{
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">hdr_out<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">addEntry<pos:position pos:line="19" pos:column="30"/></name></name><argument_list pos:line="19" pos:column="30">(<argument><expr><call><name><name pos:line="19" pos:column="31">e<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">clone<pos:position pos:line="19" pos:column="39"/></name></name><argument_list pos:line="19" pos:column="39">()<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>

    <comment type="block" format="doxygen" pos:line="23" pos:column="5">/** \par RFC 2616 sect 13.5.1 - Hop-by-Hop headers which Squid does not pass on. */</comment>

    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">HDR_CONNECTION<pos:position pos:line="25" pos:column="24"/></name></expr>:<pos:position pos:line="25" pos:column="25"/></case>          <comment type="block" format="doxygen" pos:line="25" pos:column="35">/** \par Connection: */</comment>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">HDR_TE<pos:position pos:line="26" pos:column="16"/></name></expr>:<pos:position pos:line="26" pos:column="17"/></case>                  <comment type="block" format="doxygen" pos:line="26" pos:column="35">/** \par TE: */</comment>
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">HDR_KEEP_ALIVE<pos:position pos:line="27" pos:column="24"/></name></expr>:<pos:position pos:line="27" pos:column="25"/></case>          <comment type="block" format="doxygen" pos:line="27" pos:column="35">/** \par Keep-Alive: */</comment>
    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">HDR_PROXY_AUTHENTICATE<pos:position pos:line="28" pos:column="32"/></name></expr>:<pos:position pos:line="28" pos:column="33"/></case>  <comment type="block" format="doxygen" pos:line="28" pos:column="35">/** \par Proxy-Authenticate: */</comment>
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">HDR_TRAILER<pos:position pos:line="29" pos:column="21"/></name></expr>:<pos:position pos:line="29" pos:column="22"/></case>             <comment type="block" format="doxygen" pos:line="29" pos:column="35">/** \par Trailer: */</comment>
    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">HDR_UPGRADE<pos:position pos:line="30" pos:column="21"/></name></expr>:<pos:position pos:line="30" pos:column="22"/></case>             <comment type="block" format="doxygen" pos:line="30" pos:column="35">/** \par Upgrade: */</comment>
    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">HDR_TRANSFER_ENCODING<pos:position pos:line="31" pos:column="31"/></name></expr>:<pos:position pos:line="31" pos:column="32"/></case>   <comment type="block" format="doxygen" pos:line="31" pos:column="35">/** \par Transfer-Encoding: */</comment>
        <break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break>

    <comment type="block" format="doxygen" pos:line="34" pos:column="5">/** \par OTHER headers I haven't bothered to track down yet. */</comment>

    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">HDR_AUTHORIZATION<pos:position pos:line="36" pos:column="27"/></name></expr>:<pos:position pos:line="36" pos:column="28"/></case>
        <comment type="block" format="doxygen" pos:line="37" pos:column="9">/** \par WWW-Authorization:
         * Pass on WWW authentication */</comment>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="14">flags<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">originpeer<pos:position pos:line="40" pos:column="30"/></name></name></expr>)<pos:position pos:line="40" pos:column="31"/></condition><then pos:line="40" pos:column="31"> <block pos:line="40" pos:column="32">{
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">hdr_out<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">addEntry<pos:position pos:line="41" pos:column="30"/></name></name><argument_list pos:line="41" pos:column="30">(<argument><expr><call><name><name pos:line="41" pos:column="31">e<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">clone<pos:position pos:line="41" pos:column="39"/></name></name><argument_list pos:line="41" pos:column="39">()<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then> <else pos:line="42" pos:column="11">else <block pos:line="42" pos:column="16">{
            <comment type="block" format="doxygen" pos:line="43" pos:column="13">/** \note In accelerators, only forward authentication if enabled
             * (see also httpFixupAuthentication for special cases)
             */</comment>
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">request<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">peer_login<pos:position pos:line="46" pos:column="36"/></name></name> <operator pos:line="46" pos:column="37">&amp;&amp;<pos:position pos:line="46" pos:column="47"/></operator>
                    <operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><call><name pos:line="47" pos:column="22">strcmp<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name><name pos:line="47" pos:column="29">request<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">-&gt;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="38">peer_login<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="50">"PASS"<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call> <operator pos:line="47" pos:column="58">==<pos:position pos:line="47" pos:column="60"/></operator> <literal type="number" pos:line="47" pos:column="61">0<pos:position pos:line="47" pos:column="62"/></literal> <operator pos:line="47" pos:column="63">||<pos:position pos:line="47" pos:column="65"/></operator>
                     <call><name pos:line="48" pos:column="22">strcmp<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name><name pos:line="48" pos:column="29">request<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">-&gt;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="38">peer_login<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="50">"PASSTHRU"<pos:position pos:line="48" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call> <operator pos:line="48" pos:column="62">==<pos:position pos:line="48" pos:column="64"/></operator> <literal type="number" pos:line="48" pos:column="65">0<pos:position pos:line="48" pos:column="66"/></literal> <operator pos:line="48" pos:column="67">||<pos:position pos:line="48" pos:column="69"/></operator>
                     <call><name pos:line="49" pos:column="22">strcmp<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name><name pos:line="49" pos:column="29">request<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">-&gt;<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="38">peer_login<pos:position pos:line="49" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="50">"PROXYPASS"<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call> <operator pos:line="49" pos:column="63">==<pos:position pos:line="49" pos:column="65"/></operator> <literal type="number" pos:line="49" pos:column="66">0<pos:position pos:line="49" pos:column="67"/></literal><operator pos:line="49" pos:column="67">)<pos:position pos:line="49" pos:column="68"/></operator></expr>)<pos:position pos:line="49" pos:column="69"/></condition><then pos:line="49" pos:column="69"> <block pos:line="49" pos:column="70">{
                <expr_stmt><expr><call><name><name pos:line="50" pos:column="17">hdr_out<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">addEntry<pos:position pos:line="50" pos:column="34"/></name></name><argument_list pos:line="50" pos:column="34">(<argument><expr><call><name><name pos:line="50" pos:column="35">e<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">-&gt;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="38">clone<pos:position pos:line="50" pos:column="43"/></name></name><argument_list pos:line="50" pos:column="43">()<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>

        <break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break>

    <case pos:line="56" pos:column="5">case <expr><name pos:line="56" pos:column="10">HDR_HOST<pos:position pos:line="56" pos:column="18"/></name></expr>:<pos:position pos:line="56" pos:column="19"/></case>
        <comment type="block" format="doxygen" pos:line="57" pos:column="9">/** \par Host:
         * Normally Squid rewrites the Host: header.
         * However, there is one case when we don't: If the URL
         * went through our redirector and the admin configured
         * 'redir_rewrites_host' to be off.
         */</comment>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">request<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">peer_domain<pos:position pos:line="63" pos:column="33"/></name></name></expr>)<pos:position pos:line="63" pos:column="34"/></condition><then pos:line="63" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="64" pos:column="13">hdr_out<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">putStr<pos:position pos:line="64" pos:column="28"/></name></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">HDR_HOST<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="39">request<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">-&gt;<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="48">peer_domain<pos:position pos:line="64" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="61"/></expr_stmt></block></then>
        <elseif pos:line="65" pos:column="9">else <if pos:line="65" pos:column="14">if <condition pos:line="65" pos:column="17">(<expr><name><name pos:line="65" pos:column="18">request<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">flags<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">redirected<pos:position pos:line="65" pos:column="43"/></name></name> <operator pos:line="65" pos:column="44">&amp;&amp;<pos:position pos:line="65" pos:column="54"/></operator> <operator pos:line="65" pos:column="47">!<pos:position pos:line="65" pos:column="48"/></operator><name><name pos:line="65" pos:column="48">Config<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">.<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="55">onoff<pos:position pos:line="65" pos:column="60"/></name><operator pos:line="65" pos:column="60">.<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="61">redir_rewrites_host<pos:position pos:line="65" pos:column="80"/></name></name></expr>)<pos:position pos:line="65" pos:column="81"/></condition><then pos:line="65" pos:column="81">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="66" pos:column="13">hdr_out<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">-&gt;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="22">addEntry<pos:position pos:line="66" pos:column="30"/></name></name><argument_list pos:line="66" pos:column="30">(<argument><expr><call><name><name pos:line="66" pos:column="31">e<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">-&gt;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="34">clone<pos:position pos:line="66" pos:column="39"/></name></name><argument_list pos:line="66" pos:column="39">()<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="43"/></expr_stmt></block></then></if></elseif>
        <else pos:line="67" pos:column="9">else <block pos:line="67" pos:column="14">{
            <comment type="block" pos:line="68" pos:column="13">/* use port# only if not default */</comment>

            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name><name pos:line="70" pos:column="17">request<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">port<pos:position pos:line="70" pos:column="30"/></name></name> <operator pos:line="70" pos:column="31">==<pos:position pos:line="70" pos:column="33"/></operator> <call><name pos:line="70" pos:column="34">urlDefaultPort<pos:position pos:line="70" pos:column="48"/></name><argument_list pos:line="70" pos:column="48">(<argument><expr><call><name><name pos:line="70" pos:column="49">request<pos:position pos:line="70" pos:column="56"/></name><operator pos:line="70" pos:column="56">-&gt;<pos:position pos:line="70" pos:column="61"/></operator><name pos:line="70" pos:column="58">url<pos:position pos:line="70" pos:column="61"/></name><operator pos:line="70" pos:column="61">.<pos:position pos:line="70" pos:column="62"/></operator><name pos:line="70" pos:column="62">getScheme<pos:position pos:line="70" pos:column="71"/></name></name><argument_list pos:line="70" pos:column="71">()<pos:position pos:line="70" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="75"/></condition><then pos:line="70" pos:column="75"> <block pos:line="70" pos:column="76">{
                <expr_stmt><expr><call><name><name pos:line="71" pos:column="17">hdr_out<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">putStr<pos:position pos:line="71" pos:column="32"/></name></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">HDR_HOST<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><call><name><name pos:line="71" pos:column="43">request<pos:position pos:line="71" pos:column="50"/></name><operator pos:line="71" pos:column="50">-&gt;<pos:position pos:line="71" pos:column="55"/></operator><name pos:line="71" pos:column="52">GetHost<pos:position pos:line="71" pos:column="59"/></name></name><argument_list pos:line="71" pos:column="59">()<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="72" pos:column="14"/></block></then> <else pos:line="72" pos:column="15">else <block pos:line="72" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">httpHeaderPutStrf<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">hdr_out<pos:position pos:line="73" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="44">HDR_HOST<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="54">"%s:%d"<pos:position pos:line="73" pos:column="61"/></literal></expr></argument>,
                                  <argument><expr><call><name><name pos:line="74" pos:column="35">request<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">GetHost<pos:position pos:line="74" pos:column="51"/></name></name><argument_list pos:line="74" pos:column="51">()<pos:position pos:line="74" pos:column="53"/></argument_list></call></expr></argument>,
                                  <argument><expr><operator pos:line="75" pos:column="35">(<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="36">int<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">)<pos:position pos:line="75" pos:column="40"/></operator> <name><name pos:line="75" pos:column="41">request<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">-&gt;<pos:position pos:line="75" pos:column="53"/></operator><name pos:line="75" pos:column="50">port<pos:position pos:line="75" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></else></if>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>

        <break pos:line="79" pos:column="9">break;<pos:position pos:line="79" pos:column="15"/></break>

    <case pos:line="81" pos:column="5">case <expr><name pos:line="81" pos:column="10">HDR_IF_MODIFIED_SINCE<pos:position pos:line="81" pos:column="31"/></name></expr>:<pos:position pos:line="81" pos:column="32"/></case>
        <comment type="block" format="doxygen" pos:line="82" pos:column="9">/** \par If-Modified-Since:
         * append unless we added our own,
         * but only if cache_miss_revalidate is enabled, or
         *  the request is not cacheable, or
         *  the request contains authentication credentials.
         * \note at most one client's If-Modified-Since header can pass through
         */</comment>
        <comment type="line" pos:line="89" pos:column="9">// XXX: need to check and cleanup the auth case so cacheable auth requests get cached.</comment>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><call><name><name pos:line="90" pos:column="13">hdr_out<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">has<pos:position pos:line="90" pos:column="25"/></name></name><argument_list pos:line="90" pos:column="25">(<argument><expr><name pos:line="90" pos:column="26">HDR_IF_MODIFIED_SINCE<pos:position pos:line="90" pos:column="47"/></name></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49">
            <block type="pseudo"><break pos:line="91" pos:column="13">break;<pos:position pos:line="91" pos:column="19"/></break></block></then>
        <elseif pos:line="92" pos:column="9">else <if pos:line="92" pos:column="14">if <condition pos:line="92" pos:column="17">(<expr><name><name pos:line="92" pos:column="18">Config<pos:position pos:line="92" pos:column="24"/></name><operator pos:line="92" pos:column="24">.<pos:position pos:line="92" pos:column="25"/></operator><name pos:line="92" pos:column="25">onoff<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">.<pos:position pos:line="92" pos:column="31"/></operator><name pos:line="92" pos:column="31">cache_miss_revalidate<pos:position pos:line="92" pos:column="52"/></name></name> <operator pos:line="92" pos:column="53">||<pos:position pos:line="92" pos:column="55"/></operator> <operator pos:line="92" pos:column="56">!<pos:position pos:line="92" pos:column="57"/></operator><name><name pos:line="92" pos:column="57">request<pos:position pos:line="92" pos:column="64"/></name><operator pos:line="92" pos:column="64">-&gt;<pos:position pos:line="92" pos:column="69"/></operator><name pos:line="92" pos:column="66">flags<pos:position pos:line="92" pos:column="71"/></name><operator pos:line="92" pos:column="71">.<pos:position pos:line="92" pos:column="72"/></operator><name pos:line="92" pos:column="72">cachable<pos:position pos:line="92" pos:column="80"/></name></name> <operator pos:line="92" pos:column="81">||<pos:position pos:line="92" pos:column="83"/></operator> <name><name pos:line="92" pos:column="84">request<pos:position pos:line="92" pos:column="91"/></name><operator pos:line="92" pos:column="91">-&gt;<pos:position pos:line="92" pos:column="96"/></operator><name pos:line="92" pos:column="93">flags<pos:position pos:line="92" pos:column="98"/></name><operator pos:line="92" pos:column="98">.<pos:position pos:line="92" pos:column="99"/></operator><name pos:line="92" pos:column="99">auth<pos:position pos:line="92" pos:column="103"/></name></name></expr>)<pos:position pos:line="92" pos:column="104"/></condition><then pos:line="92" pos:column="104">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="93" pos:column="13">hdr_out<pos:position pos:line="93" pos:column="20"/></name><operator pos:line="93" pos:column="20">-&gt;<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="22">addEntry<pos:position pos:line="93" pos:column="30"/></name></name><argument_list pos:line="93" pos:column="30">(<argument><expr><call><name><name pos:line="93" pos:column="31">e<pos:position pos:line="93" pos:column="32"/></name><operator pos:line="93" pos:column="32">-&gt;<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="34">clone<pos:position pos:line="93" pos:column="39"/></name></name><argument_list pos:line="93" pos:column="39">()<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="43"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>

    <case pos:line="96" pos:column="5">case <expr><name pos:line="96" pos:column="10">HDR_IF_NONE_MATCH<pos:position pos:line="96" pos:column="27"/></name></expr>:<pos:position pos:line="96" pos:column="28"/></case>
        <comment type="block" format="doxygen" pos:line="97" pos:column="9">/** \par If-None-Match:
         * append if the wildcard '*' special case value is present, or
         *   cache_miss_revalidate is disabled, or
         *   the request is not cacheable in this proxy, or
         *   the request contains authentication credentials.
         * \note this header lists a set of responses for the server to elide sending. Squid added values are extending that set.
         */</comment>
        <comment type="line" pos:line="104" pos:column="9">// XXX: need to check and cleanup the auth case so cacheable auth requests get cached.</comment>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><call><name><name pos:line="105" pos:column="13">hdr_out<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">-&gt;<pos:position pos:line="105" pos:column="25"/></operator><name pos:line="105" pos:column="22">hasListMember<pos:position pos:line="105" pos:column="35"/></name></name><argument_list pos:line="105" pos:column="35">(<argument><expr><name pos:line="105" pos:column="36">HDR_IF_MATCH<pos:position pos:line="105" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="50">"*"<pos:position pos:line="105" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="105" pos:column="55">','<pos:position pos:line="105" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="59"/></argument_list></call> <operator pos:line="105" pos:column="60">||<pos:position pos:line="105" pos:column="62"/></operator> <name><name pos:line="105" pos:column="63">Config<pos:position pos:line="105" pos:column="69"/></name><operator pos:line="105" pos:column="69">.<pos:position pos:line="105" pos:column="70"/></operator><name pos:line="105" pos:column="70">onoff<pos:position pos:line="105" pos:column="75"/></name><operator pos:line="105" pos:column="75">.<pos:position pos:line="105" pos:column="76"/></operator><name pos:line="105" pos:column="76">cache_miss_revalidate<pos:position pos:line="105" pos:column="97"/></name></name> <operator pos:line="105" pos:column="98">||<pos:position pos:line="105" pos:column="100"/></operator> <operator pos:line="105" pos:column="101">!<pos:position pos:line="105" pos:column="102"/></operator><name><name pos:line="105" pos:column="102">request<pos:position pos:line="105" pos:column="109"/></name><operator pos:line="105" pos:column="109">-&gt;<pos:position pos:line="105" pos:column="114"/></operator><name pos:line="105" pos:column="111">flags<pos:position pos:line="105" pos:column="116"/></name><operator pos:line="105" pos:column="116">.<pos:position pos:line="105" pos:column="117"/></operator><name pos:line="105" pos:column="117">cachable<pos:position pos:line="105" pos:column="125"/></name></name> <operator pos:line="105" pos:column="126">||<pos:position pos:line="105" pos:column="128"/></operator> <name><name pos:line="105" pos:column="129">request<pos:position pos:line="105" pos:column="136"/></name><operator pos:line="105" pos:column="136">-&gt;<pos:position pos:line="105" pos:column="141"/></operator><name pos:line="105" pos:column="138">flags<pos:position pos:line="105" pos:column="143"/></name><operator pos:line="105" pos:column="143">.<pos:position pos:line="105" pos:column="144"/></operator><name pos:line="105" pos:column="144">auth<pos:position pos:line="105" pos:column="148"/></name></name></expr>)<pos:position pos:line="105" pos:column="149"/></condition><then pos:line="105" pos:column="149">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="106" pos:column="13">hdr_out<pos:position pos:line="106" pos:column="20"/></name><operator pos:line="106" pos:column="20">-&gt;<pos:position pos:line="106" pos:column="25"/></operator><name pos:line="106" pos:column="22">addEntry<pos:position pos:line="106" pos:column="30"/></name></name><argument_list pos:line="106" pos:column="30">(<argument><expr><call><name><name pos:line="106" pos:column="31">e<pos:position pos:line="106" pos:column="32"/></name><operator pos:line="106" pos:column="32">-&gt;<pos:position pos:line="106" pos:column="37"/></operator><name pos:line="106" pos:column="34">clone<pos:position pos:line="106" pos:column="39"/></name></name><argument_list pos:line="106" pos:column="39">()<pos:position pos:line="106" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="43"/></expr_stmt></block></then></if>
        <break pos:line="107" pos:column="9">break;<pos:position pos:line="107" pos:column="15"/></break>

    <case pos:line="109" pos:column="5">case <expr><name pos:line="109" pos:column="10">HDR_MAX_FORWARDS<pos:position pos:line="109" pos:column="26"/></name></expr>:<pos:position pos:line="109" pos:column="27"/></case>
        <comment type="block" format="doxygen" pos:line="110" pos:column="9">/** \par Max-Forwards:
         * pass only on TRACE or OPTIONS requests */</comment>
        <if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name><name pos:line="112" pos:column="13">request<pos:position pos:line="112" pos:column="20"/></name><operator pos:line="112" pos:column="20">-&gt;<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="22">method<pos:position pos:line="112" pos:column="28"/></name></name> <operator pos:line="112" pos:column="29">==<pos:position pos:line="112" pos:column="31"/></operator> <name><name pos:line="112" pos:column="32">Http<pos:position pos:line="112" pos:column="36"/></name><operator pos:line="112" pos:column="36">::<pos:position pos:line="112" pos:column="38"/></operator><name pos:line="112" pos:column="38">METHOD_TRACE<pos:position pos:line="112" pos:column="50"/></name></name> <operator pos:line="112" pos:column="51">||<pos:position pos:line="112" pos:column="53"/></operator> <name><name pos:line="112" pos:column="54">request<pos:position pos:line="112" pos:column="61"/></name><operator pos:line="112" pos:column="61">-&gt;<pos:position pos:line="112" pos:column="66"/></operator><name pos:line="112" pos:column="63">method<pos:position pos:line="112" pos:column="69"/></name></name> <operator pos:line="112" pos:column="70">==<pos:position pos:line="112" pos:column="72"/></operator> <name><name pos:line="112" pos:column="73">Http<pos:position pos:line="112" pos:column="77"/></name><operator pos:line="112" pos:column="77">::<pos:position pos:line="112" pos:column="79"/></operator><name pos:line="112" pos:column="79">METHOD_OPTIONS<pos:position pos:line="112" pos:column="93"/></name></name></expr>)<pos:position pos:line="112" pos:column="94"/></condition><then pos:line="112" pos:column="94"> <block pos:line="112" pos:column="95">{
            <decl_stmt><decl><type><specifier pos:line="113" pos:column="13">const<pos:position pos:line="113" pos:column="18"/></specifier> <name pos:line="113" pos:column="19">int64_t<pos:position pos:line="113" pos:column="26"/></name></type> <name pos:line="113" pos:column="27">hops<pos:position pos:line="113" pos:column="31"/></name> <init pos:line="113" pos:column="32">= <expr><call><name><name pos:line="113" pos:column="34">e<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">-&gt;<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="37">getInt64<pos:position pos:line="113" pos:column="45"/></name></name><argument_list pos:line="113" pos:column="45">()<pos:position pos:line="113" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="113" pos:column="48"/></decl_stmt>

            <if pos:line="115" pos:column="13">if <condition pos:line="115" pos:column="16">(<expr><name pos:line="115" pos:column="17">hops<pos:position pos:line="115" pos:column="21"/></name> <operator pos:line="115" pos:column="22">&gt;<pos:position pos:line="115" pos:column="26"/></operator> <literal type="number" pos:line="115" pos:column="24">0<pos:position pos:line="115" pos:column="25"/></literal></expr>)<pos:position pos:line="115" pos:column="26"/></condition><then pos:line="115" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="116" pos:column="17">hdr_out<pos:position pos:line="116" pos:column="24"/></name><operator pos:line="116" pos:column="24">-&gt;<pos:position pos:line="116" pos:column="29"/></operator><name pos:line="116" pos:column="26">putInt64<pos:position pos:line="116" pos:column="34"/></name></name><argument_list pos:line="116" pos:column="34">(<argument><expr><name pos:line="116" pos:column="35">HDR_MAX_FORWARDS<pos:position pos:line="116" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="53">hops<pos:position pos:line="116" pos:column="57"/></name> <operator pos:line="116" pos:column="58">-<pos:position pos:line="116" pos:column="59"/></operator> <literal type="number" pos:line="116" pos:column="60">1<pos:position pos:line="116" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="63"/></expr_stmt></block></then></if>
        }<pos:position pos:line="117" pos:column="10"/></block></then></if>

        <break pos:line="119" pos:column="9">break;<pos:position pos:line="119" pos:column="15"/></break>

    <case pos:line="121" pos:column="5">case <expr><name pos:line="121" pos:column="10">HDR_VIA<pos:position pos:line="121" pos:column="17"/></name></expr>:<pos:position pos:line="121" pos:column="18"/></case>
        <comment type="block" format="doxygen" pos:line="122" pos:column="9">/** \par Via:
         * If Via is disabled then forward any received header as-is.
         * Otherwise leave for explicit updated addition later. */</comment>

        <if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><operator pos:line="126" pos:column="13">!<pos:position pos:line="126" pos:column="14"/></operator><name><name pos:line="126" pos:column="14">Config<pos:position pos:line="126" pos:column="20"/></name><operator pos:line="126" pos:column="20">.<pos:position pos:line="126" pos:column="21"/></operator><name pos:line="126" pos:column="21">onoff<pos:position pos:line="126" pos:column="26"/></name><operator pos:line="126" pos:column="26">.<pos:position pos:line="126" pos:column="27"/></operator><name pos:line="126" pos:column="27">via<pos:position pos:line="126" pos:column="30"/></name></name></expr>)<pos:position pos:line="126" pos:column="31"/></condition><then pos:line="126" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="127" pos:column="13">hdr_out<pos:position pos:line="127" pos:column="20"/></name><operator pos:line="127" pos:column="20">-&gt;<pos:position pos:line="127" pos:column="25"/></operator><name pos:line="127" pos:column="22">addEntry<pos:position pos:line="127" pos:column="30"/></name></name><argument_list pos:line="127" pos:column="30">(<argument><expr><call><name><name pos:line="127" pos:column="31">e<pos:position pos:line="127" pos:column="32"/></name><operator pos:line="127" pos:column="32">-&gt;<pos:position pos:line="127" pos:column="37"/></operator><name pos:line="127" pos:column="34">clone<pos:position pos:line="127" pos:column="39"/></name></name><argument_list pos:line="127" pos:column="39">()<pos:position pos:line="127" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="43"/></expr_stmt></block></then></if>

        <break pos:line="129" pos:column="9">break;<pos:position pos:line="129" pos:column="15"/></break>

    <case pos:line="131" pos:column="5">case <expr><name pos:line="131" pos:column="10">HDR_RANGE<pos:position pos:line="131" pos:column="19"/></name></expr>:<pos:position pos:line="131" pos:column="20"/></case>

    <case pos:line="133" pos:column="5">case <expr><name pos:line="133" pos:column="10">HDR_IF_RANGE<pos:position pos:line="133" pos:column="22"/></name></expr>:<pos:position pos:line="133" pos:column="23"/></case>

    <case pos:line="135" pos:column="5">case <expr><name pos:line="135" pos:column="10">HDR_REQUEST_RANGE<pos:position pos:line="135" pos:column="27"/></name></expr>:<pos:position pos:line="135" pos:column="28"/></case>
        <comment type="block" format="doxygen" pos:line="136" pos:column="9">/** \par Range:, If-Range:, Request-Range:
         * Only pass if we accept ranges */</comment>
        <if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><operator pos:line="138" pos:column="13">!<pos:position pos:line="138" pos:column="14"/></operator><name pos:line="138" pos:column="14">we_do_ranges<pos:position pos:line="138" pos:column="26"/></name></expr>)<pos:position pos:line="138" pos:column="27"/></condition><then pos:line="138" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="139" pos:column="13">hdr_out<pos:position pos:line="139" pos:column="20"/></name><operator pos:line="139" pos:column="20">-&gt;<pos:position pos:line="139" pos:column="25"/></operator><name pos:line="139" pos:column="22">addEntry<pos:position pos:line="139" pos:column="30"/></name></name><argument_list pos:line="139" pos:column="30">(<argument><expr><call><name><name pos:line="139" pos:column="31">e<pos:position pos:line="139" pos:column="32"/></name><operator pos:line="139" pos:column="32">-&gt;<pos:position pos:line="139" pos:column="37"/></operator><name pos:line="139" pos:column="34">clone<pos:position pos:line="139" pos:column="39"/></name></name><argument_list pos:line="139" pos:column="39">()<pos:position pos:line="139" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt></block></then></if>

        <break pos:line="141" pos:column="9">break;<pos:position pos:line="141" pos:column="15"/></break>

    <case pos:line="143" pos:column="5">case <expr><name pos:line="143" pos:column="10">HDR_PROXY_CONNECTION<pos:position pos:line="143" pos:column="30"/></name></expr>:<pos:position pos:line="143" pos:column="31"/></case> <comment type="line" pos:line="143" pos:column="32">// SHOULD ignore. But doing so breaks things.</comment>
        <break pos:line="144" pos:column="9">break;<pos:position pos:line="144" pos:column="15"/></break>

    <case pos:line="146" pos:column="5">case <expr><name pos:line="146" pos:column="10">HDR_CONTENT_LENGTH<pos:position pos:line="146" pos:column="28"/></name></expr>:<pos:position pos:line="146" pos:column="29"/></case>
        <comment type="line" pos:line="147" pos:column="9">// pass through unless we chunk; also, keeping this away from default</comment>
        <comment type="line" pos:line="148" pos:column="9">// prevents request smuggling via Connection: Content-Length tricks</comment>
        <if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><operator pos:line="149" pos:column="13">!<pos:position pos:line="149" pos:column="14"/></operator><name><name pos:line="149" pos:column="14">flags<pos:position pos:line="149" pos:column="19"/></name><operator pos:line="149" pos:column="19">.<pos:position pos:line="149" pos:column="20"/></operator><name pos:line="149" pos:column="20">chunked_request<pos:position pos:line="149" pos:column="35"/></name></name></expr>)<pos:position pos:line="149" pos:column="36"/></condition><then pos:line="149" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="150" pos:column="13">hdr_out<pos:position pos:line="150" pos:column="20"/></name><operator pos:line="150" pos:column="20">-&gt;<pos:position pos:line="150" pos:column="25"/></operator><name pos:line="150" pos:column="22">addEntry<pos:position pos:line="150" pos:column="30"/></name></name><argument_list pos:line="150" pos:column="30">(<argument><expr><call><name><name pos:line="150" pos:column="31">e<pos:position pos:line="150" pos:column="32"/></name><operator pos:line="150" pos:column="32">-&gt;<pos:position pos:line="150" pos:column="37"/></operator><name pos:line="150" pos:column="34">clone<pos:position pos:line="150" pos:column="39"/></name></name><argument_list pos:line="150" pos:column="39">()<pos:position pos:line="150" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="150" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="43"/></expr_stmt></block></then></if>
        <break pos:line="151" pos:column="9">break;<pos:position pos:line="151" pos:column="15"/></break>

    <case pos:line="153" pos:column="5">case <expr><name pos:line="153" pos:column="10">HDR_X_FORWARDED_FOR<pos:position pos:line="153" pos:column="29"/></name></expr>:<pos:position pos:line="153" pos:column="30"/></case>

    <case pos:line="155" pos:column="5">case <expr><name pos:line="155" pos:column="10">HDR_CACHE_CONTROL<pos:position pos:line="155" pos:column="27"/></name></expr>:<pos:position pos:line="155" pos:column="28"/></case>
        <comment type="block" format="doxygen" pos:line="156" pos:column="9">/** \par X-Forwarded-For:, Cache-Control:
         * handled specially by Squid, so leave off for now.
         * append these after the loop if needed */</comment>
        <break pos:line="159" pos:column="9">break;<pos:position pos:line="159" pos:column="15"/></break>

    <case pos:line="161" pos:column="5">case <expr><name pos:line="161" pos:column="10">HDR_FRONT_END_HTTPS<pos:position pos:line="161" pos:column="29"/></name></expr>:<pos:position pos:line="161" pos:column="30"/></case>
        <comment type="block" format="doxygen" pos:line="162" pos:column="9">/** \par Front-End-Https:
         * Pass thru only if peer is configured with front-end-https */</comment>
        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><operator pos:line="164" pos:column="13">!<pos:position pos:line="164" pos:column="14"/></operator><name><name pos:line="164" pos:column="14">flags<pos:position pos:line="164" pos:column="19"/></name><operator pos:line="164" pos:column="19">.<pos:position pos:line="164" pos:column="20"/></operator><name pos:line="164" pos:column="20">front_end_https<pos:position pos:line="164" pos:column="35"/></name></name></expr>)<pos:position pos:line="164" pos:column="36"/></condition><then pos:line="164" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="165" pos:column="13">hdr_out<pos:position pos:line="165" pos:column="20"/></name><operator pos:line="165" pos:column="20">-&gt;<pos:position pos:line="165" pos:column="25"/></operator><name pos:line="165" pos:column="22">addEntry<pos:position pos:line="165" pos:column="30"/></name></name><argument_list pos:line="165" pos:column="30">(<argument><expr><call><name><name pos:line="165" pos:column="31">e<pos:position pos:line="165" pos:column="32"/></name><operator pos:line="165" pos:column="32">-&gt;<pos:position pos:line="165" pos:column="37"/></operator><name pos:line="165" pos:column="34">clone<pos:position pos:line="165" pos:column="39"/></name></name><argument_list pos:line="165" pos:column="39">()<pos:position pos:line="165" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="165" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="43"/></expr_stmt></block></then></if>

        <break pos:line="167" pos:column="9">break;<pos:position pos:line="167" pos:column="15"/></break>

    <default pos:line="169" pos:column="5">default:<pos:position pos:line="169" pos:column="13"/></default>
        <comment type="block" format="doxygen" pos:line="170" pos:column="9">/** \par default.
         * pass on all other header fields
         * which are NOT listed by the special Connection: header. */</comment>

        <if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><call><name><name pos:line="174" pos:column="13">strConnection<pos:position pos:line="174" pos:column="26"/></name><operator pos:line="174" pos:column="26">.<pos:position pos:line="174" pos:column="27"/></operator><name pos:line="174" pos:column="27">size<pos:position pos:line="174" pos:column="31"/></name></name><argument_list pos:line="174" pos:column="31">()<pos:position pos:line="174" pos:column="33"/></argument_list></call><operator pos:line="174" pos:column="33">&gt;<pos:position pos:line="174" pos:column="37"/></operator><literal type="number" pos:line="174" pos:column="34">0<pos:position pos:line="174" pos:column="35"/></literal> <operator pos:line="174" pos:column="36">&amp;&amp;<pos:position pos:line="174" pos:column="46"/></operator> <call><name pos:line="174" pos:column="39">strListIsMember<pos:position pos:line="174" pos:column="54"/></name><argument_list pos:line="174" pos:column="54">(<argument><expr><operator pos:line="174" pos:column="55">&amp;<pos:position pos:line="174" pos:column="60"/></operator><name pos:line="174" pos:column="56">strConnection<pos:position pos:line="174" pos:column="69"/></name></expr></argument>, <argument><expr><call><name><name pos:line="174" pos:column="71">e<pos:position pos:line="174" pos:column="72"/></name><operator pos:line="174" pos:column="72">-&gt;<pos:position pos:line="174" pos:column="77"/></operator><name pos:line="174" pos:column="74">name<pos:position pos:line="174" pos:column="78"/></name><operator pos:line="174" pos:column="78">.<pos:position pos:line="174" pos:column="79"/></operator><name pos:line="174" pos:column="79">termedBuf<pos:position pos:line="174" pos:column="88"/></name></name><argument_list pos:line="174" pos:column="88">()<pos:position pos:line="174" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="174" pos:column="92">','<pos:position pos:line="174" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="96"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="97"/></condition><then pos:line="174" pos:column="97"> <block pos:line="174" pos:column="98">{
            <expr_stmt><expr><call><name pos:line="175" pos:column="13">debugs<pos:position pos:line="175" pos:column="19"/></name><argument_list pos:line="175" pos:column="19">(<argument><expr><literal type="number" pos:line="175" pos:column="20">11<pos:position pos:line="175" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="175" pos:column="24">2<pos:position pos:line="175" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="27">"'"<pos:position pos:line="175" pos:column="30"/></literal> <operator pos:line="175" pos:column="31">&lt;&lt;<pos:position pos:line="175" pos:column="39"/></operator> <name><name pos:line="175" pos:column="34">e<pos:position pos:line="175" pos:column="35"/></name><operator pos:line="175" pos:column="35">-&gt;<pos:position pos:line="175" pos:column="40"/></operator><name pos:line="175" pos:column="37">name<pos:position pos:line="175" pos:column="41"/></name></name> <operator pos:line="175" pos:column="42">&lt;&lt;<pos:position pos:line="175" pos:column="50"/></operator> <literal type="string" pos:line="175" pos:column="45">"' header cropped by Connection: definition"<pos:position pos:line="175" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="91"/></expr_stmt>
            <return pos:line="176" pos:column="13">return;<pos:position pos:line="176" pos:column="20"/></return>
        }<pos:position pos:line="177" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="179" pos:column="9">hdr_out<pos:position pos:line="179" pos:column="16"/></name><operator pos:line="179" pos:column="16">-&gt;<pos:position pos:line="179" pos:column="21"/></operator><name pos:line="179" pos:column="18">addEntry<pos:position pos:line="179" pos:column="26"/></name></name><argument_list pos:line="179" pos:column="26">(<argument><expr><call><name><name pos:line="179" pos:column="27">e<pos:position pos:line="179" pos:column="28"/></name><operator pos:line="179" pos:column="28">-&gt;<pos:position pos:line="179" pos:column="33"/></operator><name pos:line="179" pos:column="30">clone<pos:position pos:line="179" pos:column="35"/></name></name><argument_list pos:line="179" pos:column="35">()<pos:position pos:line="179" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="179" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="180" pos:column="6"/></block></switch>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

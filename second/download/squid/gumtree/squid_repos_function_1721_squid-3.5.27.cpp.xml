<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1721_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type>
<name><name pos:line="2" pos:column="1">ClassCNetPool<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">makeKey<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">Ip<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">Address<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">src_addr<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list> <specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* IPv4 required for this pool */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">( <expr><operator pos:line="5" pos:column="10">!<pos:position pos:line="5" pos:column="11"/></operator><call><name><name pos:line="5" pos:column="11">src_addr<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">isIPv4<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr> )<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">in_addr<pos:position pos:line="8" pos:column="19"/></name></name></type> <name pos:line="8" pos:column="20">net<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">src_addr<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">getInAddr<pos:position pos:line="9" pos:column="23"/></name></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">net<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><call><name pos:line="10" pos:column="15">ntohl<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name><name pos:line="10" pos:column="21">net<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">s_addr<pos:position pos:line="10" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call> <operator pos:line="10" pos:column="33">&gt;&gt;<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="36">8<pos:position pos:line="10" pos:column="37"/></literal><operator pos:line="10" pos:column="37">)<pos:position pos:line="10" pos:column="38"/></operator> <operator pos:line="10" pos:column="39">&amp;<pos:position pos:line="10" pos:column="44"/></operator> <literal type="number" pos:line="10" pos:column="41">0xff<pos:position pos:line="10" pos:column="45"/></literal><operator pos:line="10" pos:column="45">)<pos:position pos:line="10" pos:column="46"/></operator></expr>;<pos:position pos:line="10" pos:column="47"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

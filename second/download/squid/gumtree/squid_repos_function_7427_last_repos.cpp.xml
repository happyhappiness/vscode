<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7427_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">SessionIsResumed<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name><name pos:line="2" pos:column="34">Security<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">SessionPointer<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="60">s<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">result<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="boolean" pos:line="4" pos:column="19">false<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_OPENSSL<pos:position pos:line="5" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="6" pos:column="5">result<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">SSL_session_reused<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><call><name><name pos:line="6" pos:column="33">s<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">.<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">get<pos:position pos:line="6" pos:column="38"/></name></name><argument_list pos:line="6" pos:column="38">()<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call> <operator pos:line="6" pos:column="42">==<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="45">1<pos:position pos:line="6" pos:column="46"/></literal></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
<cpp:elif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">elif<pos:position pos:line="7" pos:column="6"/></cpp:directive> <expr><name pos:line="7" pos:column="7">USE_GNUTLS<pos:position pos:line="7" pos:column="17"/></name></expr></cpp:elif>
    <expr_stmt><expr><name pos:line="8" pos:column="5">result<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">gnutls_session_is_resumed<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><call><name><name pos:line="8" pos:column="40">s<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">get<pos:position pos:line="8" pos:column="45"/></name></name><argument_list pos:line="8" pos:column="45">()<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call> <operator pos:line="8" pos:column="49">!=<pos:position pos:line="8" pos:column="51"/></operator> <literal type="number" pos:line="8" pos:column="52">0<pos:position pos:line="8" pos:column="53"/></literal></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">83<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">7<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"session="<pos:position pos:line="10" pos:column="29"/></literal> <operator pos:line="10" pos:column="30">&lt;&lt;<pos:position pos:line="10" pos:column="38"/></operator> <operator pos:line="10" pos:column="33">(<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">void<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><call><name><name pos:line="10" pos:column="40">s<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">get<pos:position pos:line="10" pos:column="45"/></name></name><argument_list pos:line="10" pos:column="45">()<pos:position pos:line="10" pos:column="47"/></argument_list></call> <operator pos:line="10" pos:column="48">&lt;&lt;<pos:position pos:line="10" pos:column="56"/></operator> <literal type="string" pos:line="10" pos:column="51">", query? answer: "<pos:position pos:line="10" pos:column="70"/></literal> <operator pos:line="10" pos:column="71">&lt;&lt;<pos:position pos:line="10" pos:column="79"/></operator> <operator pos:line="10" pos:column="74">(<pos:position pos:line="10" pos:column="75"/></operator><ternary><condition><expr><name pos:line="10" pos:column="75">result<pos:position pos:line="10" pos:column="81"/></name></expr> ?<pos:position pos:line="10" pos:column="83"/></condition><then pos:line="10" pos:column="83"> <expr><literal type="char" pos:line="10" pos:column="84">'T'<pos:position pos:line="10" pos:column="87"/></literal></expr> <pos:position pos:line="10" pos:column="88"/></then><else pos:line="10" pos:column="88">: <expr><literal type="char" pos:line="10" pos:column="90">'F'<pos:position pos:line="10" pos:column="93"/></literal></expr></else></ternary><operator pos:line="10" pos:column="93">)<pos:position pos:line="10" pos:column="94"/></operator></expr></argument> )<pos:position pos:line="10" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="97"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

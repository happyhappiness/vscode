<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3108_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">MemBuf<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type>
<name><name pos:line="2" pos:column="1">ErrorState<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">BuildContent<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">m<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">page_id<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">&gt;<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="22">ERR_NONE<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">&amp;&amp;<pos:position pos:line="6" pos:column="41"/></operator> <name pos:line="6" pos:column="34">page_id<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">&lt;<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="44">error_page_count<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="8" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">String<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">hdr<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">dir<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><literal type="number" pos:line="10" pos:column="14">256<pos:position pos:line="10" pos:column="17"/></literal></expr>]<pos:position pos:line="10" pos:column="18"/></index></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">l<pos:position pos:line="11" pos:column="10"/></name> <init pos:line="11" pos:column="11">= <expr><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">freePage<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>

    <comment type="block" format="doxygen" pos:line="14" pos:column="5">/** error_directory option in squid.conf overrides translations.
     * Custom errors are always found either in error_directory or the templates directory.
     * Otherwise locate the Accept-Language header
     */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">Config<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">errorDirectory<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">&amp;&amp;<pos:position pos:line="18" pos:column="42"/></operator> <name pos:line="18" pos:column="35">page_id<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">&lt;<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="45">ERR_MAX<pos:position pos:line="18" pos:column="52"/></name> <operator pos:line="18" pos:column="53">&amp;&amp;<pos:position pos:line="18" pos:column="63"/></operator> <name pos:line="18" pos:column="56">request<pos:position pos:line="18" pos:column="63"/></name> <operator pos:line="18" pos:column="64">&amp;&amp;<pos:position pos:line="18" pos:column="74"/></operator> <call><name><name pos:line="18" pos:column="67">request<pos:position pos:line="18" pos:column="74"/></name><operator pos:line="18" pos:column="74">-&gt;<pos:position pos:line="18" pos:column="79"/></operator><name pos:line="18" pos:column="76">header<pos:position pos:line="18" pos:column="82"/></name><operator pos:line="18" pos:column="82">.<pos:position pos:line="18" pos:column="83"/></operator><name pos:line="18" pos:column="83">getList<pos:position pos:line="18" pos:column="90"/></name></name><argument_list pos:line="18" pos:column="90">(<argument><expr><name pos:line="18" pos:column="91">HDR_ACCEPT_LANGUAGE<pos:position pos:line="18" pos:column="110"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="112">&amp;<pos:position pos:line="18" pos:column="117"/></operator><name pos:line="18" pos:column="113">hdr<pos:position pos:line="18" pos:column="116"/></name></expr></argument>)<pos:position pos:line="18" pos:column="117"/></argument_list></call></expr> )<pos:position pos:line="18" pos:column="119"/></condition><then pos:line="18" pos:column="119"> <block pos:line="18" pos:column="120">{

        <decl_stmt><decl><type><name pos:line="20" pos:column="9">size_t<pos:position pos:line="20" pos:column="15"/></name></type> <name pos:line="20" pos:column="16">pos<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">= <expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt> <comment type="line" pos:line="20" pos:column="25">// current parsing position in header string</comment>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name> <modifier pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></modifier></type><name pos:line="21" pos:column="15">reset<pos:position pos:line="21" pos:column="20"/></name> <init pos:line="21" pos:column="21">= <expr><name pos:line="21" pos:column="23">NULL<pos:position pos:line="21" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt> <comment type="line" pos:line="21" pos:column="29">// where to reset the p pointer for each new tag file</comment>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">char<pos:position pos:line="22" pos:column="13"/></name> <modifier pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></modifier></type><name pos:line="22" pos:column="15">dt<pos:position pos:line="22" pos:column="17"/></name> <init pos:line="22" pos:column="18">= <expr><name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>

        <comment type="block" pos:line="24" pos:column="9">/* prep the directory path string to prevent snprintf ... */</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">l<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">strlen<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">DEFAULT_SQUID_ERROR_DIR<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">memcpy<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">dir<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="21">DEFAULT_SQUID_ERROR_DIR<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">l<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">dir<pos:position pos:line="27" pos:column="12"/></name><index pos:line="27" pos:column="12">[ <expr><name pos:line="27" pos:column="14">l<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">++<pos:position pos:line="27" pos:column="17"/></operator></expr> ]<pos:position pos:line="27" pos:column="19"/></index></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <literal type="char" pos:line="27" pos:column="22">'/'<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">reset<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">dt<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">dir<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">+<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">l<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">4<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="19">6<pos:position pos:line="30" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="22">HERE<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">&lt;&lt;<pos:position pos:line="30" pos:column="35"/></operator> <literal type="string" pos:line="30" pos:column="30">"Testing Header: '"<pos:position pos:line="30" pos:column="49"/></literal> <operator pos:line="30" pos:column="50">&lt;&lt;<pos:position pos:line="30" pos:column="58"/></operator> <name pos:line="30" pos:column="53">hdr<pos:position pos:line="30" pos:column="56"/></name> <operator pos:line="30" pos:column="57">&lt;&lt;<pos:position pos:line="30" pos:column="65"/></operator> <literal type="string" pos:line="30" pos:column="60">"'"<pos:position pos:line="30" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="65"/></expr_stmt>

        <while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">( <expr><name pos:line="32" pos:column="17">pos<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">&lt;<pos:position pos:line="32" pos:column="25"/></operator> <call><name><name pos:line="32" pos:column="23">hdr<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">.<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">size<pos:position pos:line="32" pos:column="31"/></name></name><argument_list pos:line="32" pos:column="31">()<pos:position pos:line="32" pos:column="33"/></argument_list></call></expr> )<pos:position pos:line="32" pos:column="35"/></condition> <block pos:line="32" pos:column="36">{

            <comment type="block" pos:line="34" pos:column="13">/* skip any initial whitespace. */</comment>
            <while pos:line="35" pos:column="13">while <condition pos:line="35" pos:column="19">(<expr><name pos:line="35" pos:column="20">pos<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">&lt;<pos:position pos:line="35" pos:column="28"/></operator> <call><name><name pos:line="35" pos:column="26">hdr<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">.<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">size<pos:position pos:line="35" pos:column="34"/></name></name><argument_list pos:line="35" pos:column="34">()<pos:position pos:line="35" pos:column="36"/></argument_list></call> <operator pos:line="35" pos:column="37">&amp;&amp;<pos:position pos:line="35" pos:column="47"/></operator> <call><name pos:line="35" pos:column="40">xisspace<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name><name pos:line="35" pos:column="49">hdr<pos:position pos:line="35" pos:column="52"/></name><index pos:line="35" pos:column="52">[<expr><name pos:line="35" pos:column="53">pos<pos:position pos:line="35" pos:column="56"/></name></expr>]<pos:position pos:line="35" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="59"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="60">pos<pos:position pos:line="35" pos:column="63"/></name><operator pos:line="35" pos:column="63">++<pos:position pos:line="35" pos:column="65"/></operator></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt></block></while>

            <comment type="block" pos:line="37" pos:column="13">/*
             * Header value format:
             *  - sequence of whitespace delimited tags
             *  - each tag may suffix with ';'.* which we can ignore.
             *  - IFF a tag contains only two characters we can wildcard ANY translations matching: &lt;it&gt; '-'? .*
             *    with preference given to an exact match.
             */</comment>
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">bool<pos:position pos:line="44" pos:column="17"/></name></type> <name pos:line="44" pos:column="18">invalid_byte<pos:position pos:line="44" pos:column="30"/></name> <init pos:line="44" pos:column="31">= <expr><literal type="boolean" pos:line="44" pos:column="33">false<pos:position pos:line="44" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="44" pos:column="39"/></decl_stmt>
            <while pos:line="45" pos:column="13">while <condition pos:line="45" pos:column="19">(<expr><name pos:line="45" pos:column="20">pos<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">&lt;<pos:position pos:line="45" pos:column="28"/></operator> <call><name><name pos:line="45" pos:column="26">hdr<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">.<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">size<pos:position pos:line="45" pos:column="34"/></name></name><argument_list pos:line="45" pos:column="34">()<pos:position pos:line="45" pos:column="36"/></argument_list></call> <operator pos:line="45" pos:column="37">&amp;&amp;<pos:position pos:line="45" pos:column="47"/></operator> <name><name pos:line="45" pos:column="40">hdr<pos:position pos:line="45" pos:column="43"/></name><index pos:line="45" pos:column="43">[<expr><name pos:line="45" pos:column="44">pos<pos:position pos:line="45" pos:column="47"/></name></expr>]<pos:position pos:line="45" pos:column="48"/></index></name> <operator pos:line="45" pos:column="49">!=<pos:position pos:line="45" pos:column="51"/></operator> <literal type="char" pos:line="45" pos:column="52">';'<pos:position pos:line="45" pos:column="55"/></literal> <operator pos:line="45" pos:column="56">&amp;&amp;<pos:position pos:line="45" pos:column="66"/></operator> <name><name pos:line="45" pos:column="59">hdr<pos:position pos:line="45" pos:column="62"/></name><index pos:line="45" pos:column="62">[<expr><name pos:line="45" pos:column="63">pos<pos:position pos:line="45" pos:column="66"/></name></expr>]<pos:position pos:line="45" pos:column="67"/></index></name> <operator pos:line="45" pos:column="68">!=<pos:position pos:line="45" pos:column="70"/></operator> <literal type="char" pos:line="45" pos:column="71">','<pos:position pos:line="45" pos:column="74"/></literal> <operator pos:line="45" pos:column="75">&amp;&amp;<pos:position pos:line="45" pos:column="85"/></operator> <operator pos:line="45" pos:column="78">!<pos:position pos:line="45" pos:column="79"/></operator><call><name pos:line="45" pos:column="79">xisspace<pos:position pos:line="45" pos:column="87"/></name><argument_list pos:line="45" pos:column="87">(<argument><expr><name><name pos:line="45" pos:column="88">hdr<pos:position pos:line="45" pos:column="91"/></name><index pos:line="45" pos:column="91">[<expr><name pos:line="45" pos:column="92">pos<pos:position pos:line="45" pos:column="95"/></name></expr>]<pos:position pos:line="45" pos:column="96"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="97"/></argument_list></call> <operator pos:line="45" pos:column="98">&amp;&amp;<pos:position pos:line="45" pos:column="108"/></operator> <name pos:line="45" pos:column="101">dt<pos:position pos:line="45" pos:column="103"/></name> <operator pos:line="45" pos:column="104">&lt;<pos:position pos:line="45" pos:column="108"/></operator> <operator pos:line="45" pos:column="106">(<pos:position pos:line="45" pos:column="107"/></operator><name pos:line="45" pos:column="107">dir<pos:position pos:line="45" pos:column="110"/></name><operator pos:line="45" pos:column="110">+<pos:position pos:line="45" pos:column="111"/></operator><literal type="number" pos:line="45" pos:column="111">256<pos:position pos:line="45" pos:column="114"/></literal><operator pos:line="45" pos:column="114">)<pos:position pos:line="45" pos:column="115"/></operator></expr> )<pos:position pos:line="45" pos:column="117"/></condition> <block pos:line="45" pos:column="118">{
                <if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">invalid_byte<pos:position pos:line="46" pos:column="34"/></name></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35"> <block pos:line="46" pos:column="36">{
<cpp:if pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">if<pos:position pos:line="47" pos:column="4"/></cpp:directive> <expr><name pos:line="47" pos:column="5">HTTP_VIOLATIONS<pos:position pos:line="47" pos:column="20"/></name></expr></cpp:if>
                    <comment type="line" pos:line="48" pos:column="21">// if accepting violations we may as well accept some broken browsers</comment>
                    <comment type="line" pos:line="49" pos:column="21">//  which may send us the right code, wrong ISO formatting.</comment>
                    <if pos:line="50" pos:column="21">if <condition pos:line="50" pos:column="24">(<expr><name><name pos:line="50" pos:column="25">hdr<pos:position pos:line="50" pos:column="28"/></name><index pos:line="50" pos:column="28">[<expr><name pos:line="50" pos:column="29">pos<pos:position pos:line="50" pos:column="32"/></name></expr>]<pos:position pos:line="50" pos:column="33"/></index></name> <operator pos:line="50" pos:column="34">==<pos:position pos:line="50" pos:column="36"/></operator> <literal type="char" pos:line="50" pos:column="37">'_'<pos:position pos:line="50" pos:column="40"/></literal></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41">
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="25">*<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="26">dt<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <literal type="char" pos:line="51" pos:column="31">'-'<pos:position pos:line="51" pos:column="34"/></literal></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt></block></then>
                    <else pos:line="52" pos:column="21">else
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="25">*<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">dt<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <call><name pos:line="54" pos:column="31">xtolower<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name><name pos:line="54" pos:column="40">hdr<pos:position pos:line="54" pos:column="43"/></name><index pos:line="54" pos:column="43">[<expr><name pos:line="54" pos:column="44">pos<pos:position pos:line="54" pos:column="47"/></name></expr>]<pos:position pos:line="54" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt></block></else></if>
                    <comment type="line" pos:line="55" pos:column="21">// valid codes only contain A-Z, hyphen (-) and *</comment>
                    <if pos:line="56" pos:column="21">if <condition pos:line="56" pos:column="24">(<expr><operator pos:line="56" pos:column="25">*<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">dt<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">!=<pos:position pos:line="56" pos:column="31"/></operator> <literal type="char" pos:line="56" pos:column="32">'-'<pos:position pos:line="56" pos:column="35"/></literal> <operator pos:line="56" pos:column="36">&amp;&amp;<pos:position pos:line="56" pos:column="46"/></operator> <operator pos:line="56" pos:column="39">*<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="40">dt<pos:position pos:line="56" pos:column="42"/></name> <operator pos:line="56" pos:column="43">!=<pos:position pos:line="56" pos:column="45"/></operator> <literal type="char" pos:line="56" pos:column="46">'*'<pos:position pos:line="56" pos:column="49"/></literal> <operator pos:line="56" pos:column="50">&amp;&amp;<pos:position pos:line="56" pos:column="60"/></operator> <operator pos:line="56" pos:column="53">(<pos:position pos:line="56" pos:column="54"/></operator><operator pos:line="56" pos:column="54">*<pos:position pos:line="56" pos:column="55"/></operator><name><name pos:line="56" pos:column="55">dt<pos:position pos:line="56" pos:column="57"/></name> <argument_list type="generic" pos:line="56" pos:column="58">&lt; <argument><expr><literal type="char" pos:line="56" pos:column="60">'a'<pos:position pos:line="56" pos:column="63"/></literal> <operator pos:line="56" pos:column="64">||<pos:position pos:line="56" pos:column="66"/></operator> <operator pos:line="56" pos:column="67">*<pos:position pos:line="56" pos:column="68"/></operator><name pos:line="56" pos:column="68">dt<pos:position pos:line="56" pos:column="70"/></name></expr></argument> &gt;<pos:position pos:line="56" pos:column="75"/></argument_list></name> <literal type="char" pos:line="56" pos:column="73">'z'<pos:position pos:line="56" pos:column="76"/></literal><operator pos:line="56" pos:column="76">)<pos:position pos:line="56" pos:column="77"/></operator></expr> )<pos:position pos:line="56" pos:column="79"/></condition><then pos:line="56" pos:column="79">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="25">invalid_byte<pos:position pos:line="57" pos:column="37"/></name> <operator pos:line="57" pos:column="38">=<pos:position pos:line="57" pos:column="39"/></operator> <literal type="boolean" pos:line="57" pos:column="40">true<pos:position pos:line="57" pos:column="44"/></literal></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt></block></then>
                    <else pos:line="58" pos:column="21">else
                        <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="25">dt<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">++<pos:position pos:line="59" pos:column="29"/></operator></expr>;<pos:position pos:line="59" pos:column="30"/></expr_stmt></block></else></if> <comment type="line" pos:line="59" pos:column="31">// move to next destination byte.</comment>
                }<pos:position pos:line="60" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="61" pos:column="17">pos<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">++<pos:position pos:line="61" pos:column="22"/></operator></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
            }<pos:position pos:line="62" pos:column="14"/></block></while>
            <expr_stmt><expr><operator pos:line="63" pos:column="13">*<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">dt<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">++<pos:position pos:line="63" pos:column="18"/></operator> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <literal type="char" pos:line="63" pos:column="21">'\0'<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt> <comment type="line" pos:line="63" pos:column="27">// nul-terminated the filename content string before system use.</comment>

            <expr_stmt><expr><call><name pos:line="65" pos:column="13">debugs<pos:position pos:line="65" pos:column="19"/></name><argument_list pos:line="65" pos:column="19">(<argument><expr><literal type="number" pos:line="65" pos:column="20">4<pos:position pos:line="65" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="23">9<pos:position pos:line="65" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="26">HERE<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">&lt;&lt;<pos:position pos:line="65" pos:column="39"/></operator> <literal type="string" pos:line="65" pos:column="34">"STATE: dt='"<pos:position pos:line="65" pos:column="47"/></literal> <operator pos:line="65" pos:column="48">&lt;&lt;<pos:position pos:line="65" pos:column="56"/></operator> <name pos:line="65" pos:column="51">dt<pos:position pos:line="65" pos:column="53"/></name> <operator pos:line="65" pos:column="54">&lt;&lt;<pos:position pos:line="65" pos:column="62"/></operator> <literal type="string" pos:line="65" pos:column="57">"', reset='"<pos:position pos:line="65" pos:column="69"/></literal> <operator pos:line="65" pos:column="70">&lt;&lt;<pos:position pos:line="65" pos:column="78"/></operator> <name pos:line="65" pos:column="73">reset<pos:position pos:line="65" pos:column="78"/></name> <operator pos:line="65" pos:column="79">&lt;&lt;<pos:position pos:line="65" pos:column="87"/></operator> <literal type="string" pos:line="65" pos:column="82">"', pos="<pos:position pos:line="65" pos:column="91"/></literal> <operator pos:line="65" pos:column="92">&lt;&lt;<pos:position pos:line="65" pos:column="100"/></operator> <name pos:line="65" pos:column="95">pos<pos:position pos:line="65" pos:column="98"/></name> <operator pos:line="65" pos:column="99">&lt;&lt;<pos:position pos:line="65" pos:column="107"/></operator> <literal type="string" pos:line="65" pos:column="102">", buf='"<pos:position pos:line="65" pos:column="111"/></literal> <operator pos:line="65" pos:column="112">&lt;&lt;<pos:position pos:line="65" pos:column="120"/></operator> <operator pos:line="65" pos:column="115">(<pos:position pos:line="65" pos:column="116"/></operator><ternary><condition><expr><operator pos:line="65" pos:column="116">(<pos:position pos:line="65" pos:column="117"/></operator><name pos:line="65" pos:column="117">pos<pos:position pos:line="65" pos:column="120"/></name> <operator pos:line="65" pos:column="121">&lt;<pos:position pos:line="65" pos:column="125"/></operator> <call><name><name pos:line="65" pos:column="123">hdr<pos:position pos:line="65" pos:column="126"/></name><operator pos:line="65" pos:column="126">.<pos:position pos:line="65" pos:column="127"/></operator><name pos:line="65" pos:column="127">size<pos:position pos:line="65" pos:column="131"/></name></name><argument_list pos:line="65" pos:column="131">()<pos:position pos:line="65" pos:column="133"/></argument_list></call><operator pos:line="65" pos:column="133">)<pos:position pos:line="65" pos:column="134"/></operator></expr> ?<pos:position pos:line="65" pos:column="136"/></condition><then pos:line="65" pos:column="136"> <expr><call><name><name pos:line="65" pos:column="137">hdr<pos:position pos:line="65" pos:column="140"/></name><operator pos:line="65" pos:column="140">.<pos:position pos:line="65" pos:column="141"/></operator><name pos:line="65" pos:column="141">substr<pos:position pos:line="65" pos:column="147"/></name></name><argument_list pos:line="65" pos:column="147">(<argument><expr><name pos:line="65" pos:column="148">pos<pos:position pos:line="65" pos:column="151"/></name></expr></argument>,<argument><expr><call><name><name pos:line="65" pos:column="152">hdr<pos:position pos:line="65" pos:column="155"/></name><operator pos:line="65" pos:column="155">.<pos:position pos:line="65" pos:column="156"/></operator><name pos:line="65" pos:column="156">size<pos:position pos:line="65" pos:column="160"/></name></name><argument_list pos:line="65" pos:column="160">()<pos:position pos:line="65" pos:column="162"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="163"/></argument_list></call></expr> <pos:position pos:line="65" pos:column="164"/></then><else pos:line="65" pos:column="164">: <expr><literal type="string" pos:line="65" pos:column="166">""<pos:position pos:line="65" pos:column="168"/></literal></expr></else></ternary><operator pos:line="65" pos:column="168">)<pos:position pos:line="65" pos:column="169"/></operator> <operator pos:line="65" pos:column="170">&lt;&lt;<pos:position pos:line="65" pos:column="178"/></operator> <literal type="string" pos:line="65" pos:column="173">"'"<pos:position pos:line="65" pos:column="176"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="177"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="178"/></expr_stmt>

            <comment type="block" pos:line="67" pos:column="13">/* if we found anything we might use, try it. */</comment>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><operator pos:line="68" pos:column="17">*<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">reset<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">!=<pos:position pos:line="68" pos:column="26"/></operator> <literal type="char" pos:line="68" pos:column="27">'\0'<pos:position pos:line="68" pos:column="31"/></literal> <operator pos:line="68" pos:column="32">&amp;&amp;<pos:position pos:line="68" pos:column="42"/></operator> <operator pos:line="68" pos:column="35">!<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="36">invalid_byte<pos:position pos:line="68" pos:column="48"/></name></expr>)<pos:position pos:line="68" pos:column="49"/></condition><then pos:line="68" pos:column="49"> <block pos:line="68" pos:column="50">{

                <comment type="block" pos:line="70" pos:column="17">/* wildcard uses the configured default language */</comment>
                <if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name><name pos:line="71" pos:column="21">reset<pos:position pos:line="71" pos:column="26"/></name><index pos:line="71" pos:column="26">[<expr><literal type="number" pos:line="71" pos:column="27">0<pos:position pos:line="71" pos:column="28"/></literal></expr>]<pos:position pos:line="71" pos:column="29"/></index></name> <operator pos:line="71" pos:column="30">==<pos:position pos:line="71" pos:column="32"/></operator> <literal type="char" pos:line="71" pos:column="33">'*'<pos:position pos:line="71" pos:column="36"/></literal> <operator pos:line="71" pos:column="37">&amp;&amp;<pos:position pos:line="71" pos:column="47"/></operator> <name><name pos:line="71" pos:column="40">reset<pos:position pos:line="71" pos:column="45"/></name><index pos:line="71" pos:column="45">[<expr><literal type="number" pos:line="71" pos:column="46">1<pos:position pos:line="71" pos:column="47"/></literal></expr>]<pos:position pos:line="71" pos:column="48"/></index></name> <operator pos:line="71" pos:column="49">==<pos:position pos:line="71" pos:column="51"/></operator> <literal type="char" pos:line="71" pos:column="52">'\0'<pos:position pos:line="71" pos:column="56"/></literal></expr>)<pos:position pos:line="71" pos:column="57"/></condition><then pos:line="71" pos:column="57"> <block pos:line="71" pos:column="58">{
                    <expr_stmt><expr><call><name pos:line="72" pos:column="21">debugs<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><literal type="number" pos:line="72" pos:column="28">4<pos:position pos:line="72" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="31">6<pos:position pos:line="72" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">HERE<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">&lt;&lt;<pos:position pos:line="72" pos:column="47"/></operator> <literal type="string" pos:line="72" pos:column="42">"Found language '"<pos:position pos:line="72" pos:column="60"/></literal> <operator pos:line="72" pos:column="61">&lt;&lt;<pos:position pos:line="72" pos:column="69"/></operator> <name pos:line="72" pos:column="64">reset<pos:position pos:line="72" pos:column="69"/></name> <operator pos:line="72" pos:column="70">&lt;&lt;<pos:position pos:line="72" pos:column="78"/></operator> <literal type="string" pos:line="72" pos:column="73">"'. Using configured default."<pos:position pos:line="72" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="105"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="73" pos:column="21">m<pos:position pos:line="73" pos:column="22"/></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <name><name pos:line="73" pos:column="25">error_text<pos:position pos:line="73" pos:column="35"/></name><index pos:line="73" pos:column="35">[<expr><name pos:line="73" pos:column="36">page_id<pos:position pos:line="73" pos:column="43"/></name></expr>]<pos:position pos:line="73" pos:column="44"/></index></name></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>
                    <if pos:line="74" pos:column="21">if <condition pos:line="74" pos:column="24">(<expr><operator pos:line="74" pos:column="25">!<pos:position pos:line="74" pos:column="26"/></operator><name><name pos:line="74" pos:column="26">Config<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">.<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="33">errorDirectory<pos:position pos:line="74" pos:column="47"/></name></name></expr>)<pos:position pos:line="74" pos:column="48"/></condition><then pos:line="74" pos:column="48">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="25">err_language<pos:position pos:line="75" pos:column="37"/></name> <operator pos:line="75" pos:column="38">=<pos:position pos:line="75" pos:column="39"/></operator> <name><name pos:line="75" pos:column="40">Config<pos:position pos:line="75" pos:column="46"/></name><operator pos:line="75" pos:column="46">.<pos:position pos:line="75" pos:column="47"/></operator><name pos:line="75" pos:column="47">errorDefaultLanguage<pos:position pos:line="75" pos:column="67"/></name></name></expr>;<pos:position pos:line="75" pos:column="68"/></expr_stmt></block></then></if>
                    <break pos:line="76" pos:column="21">break;<pos:position pos:line="76" pos:column="27"/></break>
                }<pos:position pos:line="77" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="79" pos:column="17">debugs<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><literal type="number" pos:line="79" pos:column="24">4<pos:position pos:line="79" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="27">6<pos:position pos:line="79" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">HERE<pos:position pos:line="79" pos:column="34"/></name> <operator pos:line="79" pos:column="35">&lt;&lt;<pos:position pos:line="79" pos:column="43"/></operator> <literal type="string" pos:line="79" pos:column="38">"Found language '"<pos:position pos:line="79" pos:column="56"/></literal> <operator pos:line="79" pos:column="57">&lt;&lt;<pos:position pos:line="79" pos:column="65"/></operator> <name pos:line="79" pos:column="60">reset<pos:position pos:line="79" pos:column="65"/></name> <operator pos:line="79" pos:column="66">&lt;&lt;<pos:position pos:line="79" pos:column="74"/></operator> <literal type="string" pos:line="79" pos:column="69">"', testing for available template in: '"<pos:position pos:line="79" pos:column="110"/></literal> <operator pos:line="79" pos:column="111">&lt;&lt;<pos:position pos:line="79" pos:column="119"/></operator> <name pos:line="79" pos:column="114">dir<pos:position pos:line="79" pos:column="117"/></name> <operator pos:line="79" pos:column="118">&lt;&lt;<pos:position pos:line="79" pos:column="126"/></operator> <literal type="string" pos:line="79" pos:column="121">"'"<pos:position pos:line="79" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="126"/></expr_stmt>

                <expr_stmt><expr><name pos:line="81" pos:column="17">m<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">=<pos:position pos:line="81" pos:column="20"/></operator> <call><name pos:line="81" pos:column="21">errorTryLoadText<pos:position pos:line="81" pos:column="37"/></name><argument_list pos:line="81" pos:column="37">( <argument><expr><name><name pos:line="81" pos:column="39">err_type_str<pos:position pos:line="81" pos:column="51"/></name><index pos:line="81" pos:column="51">[<expr><name pos:line="81" pos:column="52">page_id<pos:position pos:line="81" pos:column="59"/></name></expr>]<pos:position pos:line="81" pos:column="60"/></index></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="62">dir<pos:position pos:line="81" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="81" pos:column="67">false<pos:position pos:line="81" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="74"/></expr_stmt>

                <if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name pos:line="83" pos:column="21">m<pos:position pos:line="83" pos:column="22"/></name></expr>)<pos:position pos:line="83" pos:column="23"/></condition><then pos:line="83" pos:column="23"> <block pos:line="83" pos:column="24">{
                    <comment type="block" pos:line="84" pos:column="21">/* store the language we found for the Content-Language reply header */</comment>
                    <expr_stmt><expr><name pos:line="85" pos:column="21">err_language<pos:position pos:line="85" pos:column="33"/></name> <operator pos:line="85" pos:column="34">=<pos:position pos:line="85" pos:column="35"/></operator> <call><name pos:line="85" pos:column="36">xstrdup<pos:position pos:line="85" pos:column="43"/></name><argument_list pos:line="85" pos:column="43">(<argument><expr><name pos:line="85" pos:column="44">reset<pos:position pos:line="85" pos:column="49"/></name></expr></argument>)<pos:position pos:line="85" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="86" pos:column="21">freePage<pos:position pos:line="86" pos:column="29"/></name> <operator pos:line="86" pos:column="30">=<pos:position pos:line="86" pos:column="31"/></operator> <name pos:line="86" pos:column="32">m<pos:position pos:line="86" pos:column="33"/></name></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
                    <break pos:line="87" pos:column="21">break;<pos:position pos:line="87" pos:column="27"/></break>
                }<pos:position pos:line="88" pos:column="18"/></block></then> <elseif pos:line="88" pos:column="19">else <if pos:line="88" pos:column="24">if <condition pos:line="88" pos:column="27">(<expr><name><name pos:line="88" pos:column="28">Config<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">.<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="35">errorLogMissingLanguages<pos:position pos:line="88" pos:column="59"/></name></name></expr>)<pos:position pos:line="88" pos:column="60"/></condition><then pos:line="88" pos:column="60"> <block pos:line="88" pos:column="61">{
                    <expr_stmt><expr><call><name pos:line="89" pos:column="21">debugs<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><literal type="number" pos:line="89" pos:column="28">4<pos:position pos:line="89" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="31">DBG_IMPORTANT<pos:position pos:line="89" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="46">"WARNING: Error Pages Missing Language: "<pos:position pos:line="89" pos:column="87"/></literal> <operator pos:line="89" pos:column="88">&lt;&lt;<pos:position pos:line="89" pos:column="96"/></operator> <name pos:line="89" pos:column="91">reset<pos:position pos:line="89" pos:column="96"/></name></expr></argument>)<pos:position pos:line="89" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="98"/></expr_stmt>
                }<pos:position pos:line="90" pos:column="18"/></block></then></if></elseif></if>

<cpp:if pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">if<pos:position pos:line="92" pos:column="4"/></cpp:directive> <expr><name pos:line="92" pos:column="5">HAVE_GLOB<pos:position pos:line="92" pos:column="14"/></name></expr></cpp:if>
                <if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">( <expr><operator pos:line="93" pos:column="22">(<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="23">dt<pos:position pos:line="93" pos:column="25"/></name> <operator pos:line="93" pos:column="26">-<pos:position pos:line="93" pos:column="27"/></operator> <name pos:line="93" pos:column="28">reset<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">)<pos:position pos:line="93" pos:column="34"/></operator> <operator pos:line="93" pos:column="35">==<pos:position pos:line="93" pos:column="37"/></operator> <literal type="number" pos:line="93" pos:column="38">2<pos:position pos:line="93" pos:column="39"/></literal></expr>)<pos:position pos:line="93" pos:column="40"/></condition><then pos:line="93" pos:column="40"> <block pos:line="93" pos:column="41">{
                    <comment type="block" pos:line="94" pos:column="21">/* TODO glob the error directory for sub-dirs matching: &lt;tag&gt; '-*'   */</comment>
                    <comment type="block" pos:line="95" pos:column="21">/* use first result. */</comment>
                    <expr_stmt><expr><call><name pos:line="96" pos:column="21">debugs<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><literal type="number" pos:line="96" pos:column="28">4<pos:position pos:line="96" pos:column="29"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="96" pos:column="30">2<pos:position pos:line="96" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="33">HERE<pos:position pos:line="96" pos:column="37"/></name> <operator pos:line="96" pos:column="38">&lt;&lt;<pos:position pos:line="96" pos:column="46"/></operator> <literal type="string" pos:line="96" pos:column="41">"wildcard fallback errors not coded yet."<pos:position pos:line="96" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="84"/></expr_stmt>
                }<pos:position pos:line="97" pos:column="18"/></block></then></if>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="99" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="101" pos:column="13">dt<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">=<pos:position pos:line="101" pos:column="17"/></operator> <name pos:line="101" pos:column="18">reset<pos:position pos:line="101" pos:column="23"/></name></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt> <comment type="line" pos:line="101" pos:column="25">// reset for next tag testing. we replace the failed name instead of cloning.</comment>

            <comment type="line" pos:line="103" pos:column="13">// IFF we terminated the tag on whitespace or ';' we need to skip to the next ',' or end of header.</comment>
            <while pos:line="104" pos:column="13">while <condition pos:line="104" pos:column="19">(<expr><name pos:line="104" pos:column="20">pos<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">&lt;<pos:position pos:line="104" pos:column="28"/></operator> <call><name><name pos:line="104" pos:column="26">hdr<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">.<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="30">size<pos:position pos:line="104" pos:column="34"/></name></name><argument_list pos:line="104" pos:column="34">()<pos:position pos:line="104" pos:column="36"/></argument_list></call> <operator pos:line="104" pos:column="37">&amp;&amp;<pos:position pos:line="104" pos:column="47"/></operator> <name><name pos:line="104" pos:column="40">hdr<pos:position pos:line="104" pos:column="43"/></name><index pos:line="104" pos:column="43">[<expr><name pos:line="104" pos:column="44">pos<pos:position pos:line="104" pos:column="47"/></name></expr>]<pos:position pos:line="104" pos:column="48"/></index></name> <operator pos:line="104" pos:column="49">!=<pos:position pos:line="104" pos:column="51"/></operator> <literal type="char" pos:line="104" pos:column="52">','<pos:position pos:line="104" pos:column="55"/></literal></expr>)<pos:position pos:line="104" pos:column="56"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="57">pos<pos:position pos:line="104" pos:column="60"/></name><operator pos:line="104" pos:column="60">++<pos:position pos:line="104" pos:column="62"/></operator></expr>;<pos:position pos:line="104" pos:column="63"/></expr_stmt></block></while>
            <if pos:line="105" pos:column="13">if <condition pos:line="105" pos:column="16">(<expr><name><name pos:line="105" pos:column="17">hdr<pos:position pos:line="105" pos:column="20"/></name><index pos:line="105" pos:column="20">[<expr><name pos:line="105" pos:column="21">pos<pos:position pos:line="105" pos:column="24"/></name></expr>]<pos:position pos:line="105" pos:column="25"/></index></name> <operator pos:line="105" pos:column="26">==<pos:position pos:line="105" pos:column="28"/></operator> <literal type="char" pos:line="105" pos:column="29">','<pos:position pos:line="105" pos:column="32"/></literal></expr>)<pos:position pos:line="105" pos:column="33"/></condition><then pos:line="105" pos:column="33"> <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="34">pos<pos:position pos:line="105" pos:column="37"/></name><operator pos:line="105" pos:column="37">++<pos:position pos:line="105" pos:column="39"/></operator></expr>;<pos:position pos:line="105" pos:column="40"/></expr_stmt></block></then></if>
        }<pos:position pos:line="106" pos:column="10"/></block></while>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="108" pos:column="8">/* USE_ERR_LOCALES */</comment>

    <comment type="block" format="doxygen" pos:line="110" pos:column="5">/** \par
     * If client-specific error templates are not enabled or available.
     * fall back to the old style squid.conf settings.
     */</comment>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><operator pos:line="114" pos:column="9">!<pos:position pos:line="114" pos:column="10"/></operator><name pos:line="114" pos:column="10">m<pos:position pos:line="114" pos:column="11"/></name></expr>)<pos:position pos:line="114" pos:column="12"/></condition><then pos:line="114" pos:column="12"> <block pos:line="114" pos:column="13">{
        <expr_stmt><expr><name pos:line="115" pos:column="9">m<pos:position pos:line="115" pos:column="10"/></name> <operator pos:line="115" pos:column="11">=<pos:position pos:line="115" pos:column="12"/></operator> <name><name pos:line="115" pos:column="13">error_text<pos:position pos:line="115" pos:column="23"/></name><index pos:line="115" pos:column="23">[<expr><name pos:line="115" pos:column="24">page_id<pos:position pos:line="115" pos:column="31"/></name></expr>]<pos:position pos:line="115" pos:column="32"/></index></name></expr>;<pos:position pos:line="115" pos:column="33"/></expr_stmt>
<cpp:if pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">if<pos:position pos:line="116" pos:column="4"/></cpp:directive> <expr><name pos:line="116" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="116" pos:column="20"/></name></expr></cpp:if>
        <if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><operator pos:line="117" pos:column="13">!<pos:position pos:line="117" pos:column="14"/></operator><name><name pos:line="117" pos:column="14">Config<pos:position pos:line="117" pos:column="20"/></name><operator pos:line="117" pos:column="20">.<pos:position pos:line="117" pos:column="21"/></operator><name pos:line="117" pos:column="21">errorDirectory<pos:position pos:line="117" pos:column="35"/></name></name></expr>)<pos:position pos:line="117" pos:column="36"/></condition><then pos:line="117" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="13">err_language<pos:position pos:line="118" pos:column="25"/></name> <operator pos:line="118" pos:column="26">=<pos:position pos:line="118" pos:column="27"/></operator> <name><name pos:line="118" pos:column="28">Config<pos:position pos:line="118" pos:column="34"/></name><operator pos:line="118" pos:column="34">.<pos:position pos:line="118" pos:column="35"/></operator><name pos:line="118" pos:column="35">errorDefaultLanguage<pos:position pos:line="118" pos:column="55"/></name></name></expr>;<pos:position pos:line="118" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">endif<pos:position pos:line="119" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">debugs<pos:position pos:line="120" pos:column="15"/></name><argument_list pos:line="120" pos:column="15">(<argument><expr><literal type="number" pos:line="120" pos:column="16">4<pos:position pos:line="120" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="19">2<pos:position pos:line="120" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="22">HERE<pos:position pos:line="120" pos:column="26"/></name> <operator pos:line="120" pos:column="27">&lt;&lt;<pos:position pos:line="120" pos:column="35"/></operator> <literal type="string" pos:line="120" pos:column="30">"No existing error page language negotiated for "<pos:position pos:line="120" pos:column="79"/></literal> <operator pos:line="120" pos:column="80">&lt;&lt;<pos:position pos:line="120" pos:column="88"/></operator> <call><name pos:line="120" pos:column="83">errorPageName<pos:position pos:line="120" pos:column="96"/></name><argument_list pos:line="120" pos:column="96">(<argument><expr><name pos:line="120" pos:column="97">page_id<pos:position pos:line="120" pos:column="104"/></name></expr></argument>)<pos:position pos:line="120" pos:column="105"/></argument_list></call> <operator pos:line="120" pos:column="106">&lt;&lt;<pos:position pos:line="120" pos:column="114"/></operator> <literal type="string" pos:line="120" pos:column="109">". Using default error file."<pos:position pos:line="120" pos:column="138"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="140"/></expr_stmt>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="123" pos:column="5">MemBuf<pos:position pos:line="123" pos:column="11"/></name> <modifier pos:line="123" pos:column="12">*<pos:position pos:line="123" pos:column="13"/></modifier></type><name pos:line="123" pos:column="13">result<pos:position pos:line="123" pos:column="19"/></name> <init pos:line="123" pos:column="20">= <expr><call><name pos:line="123" pos:column="22">ConvertText<pos:position pos:line="123" pos:column="33"/></name><argument_list pos:line="123" pos:column="33">(<argument><expr><name pos:line="123" pos:column="34">m<pos:position pos:line="123" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="123" pos:column="37">true<pos:position pos:line="123" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="123" pos:column="43"/></decl_stmt>
<cpp:if pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">if<pos:position pos:line="124" pos:column="4"/></cpp:directive> <expr><name pos:line="124" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="124" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">safe_free<pos:position pos:line="125" pos:column="14"/></name><argument_list pos:line="125" pos:column="14">(<argument><expr><name pos:line="125" pos:column="15">freePage<pos:position pos:line="125" pos:column="23"/></name></expr></argument>)<pos:position pos:line="125" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">endif<pos:position pos:line="126" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="128" pos:column="5">return <expr><name pos:line="128" pos:column="12">result<pos:position pos:line="128" pos:column="18"/></name></expr>;<pos:position pos:line="128" pos:column="19"/></return>
}<pos:position pos:line="129" pos:column="2"/></block></function></unit>

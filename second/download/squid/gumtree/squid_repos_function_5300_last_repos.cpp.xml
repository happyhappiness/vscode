<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5300_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Client<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">scheduleReadControlReply<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">buffered_ok<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">9<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="18">ctrl<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">buffered_ok<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&amp;&amp;<pos:position pos:line="6" pos:column="31"/></operator> <name><name pos:line="6" pos:column="24">ctrl<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">offset<pos:position pos:line="6" pos:column="35"/></name></name> <operator pos:line="6" pos:column="36">&gt;<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40"> <block pos:line="6" pos:column="41">{
        <comment type="block" pos:line="7" pos:column="9">/* We've already read some reply data */</comment>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">handleControlReply<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">()<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name><name pos:line="11" pos:column="14">Comm<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">::<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">IsConnOpen<pos:position pos:line="11" pos:column="30"/></name></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">ctrl<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">conn<pos:position pos:line="11" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42"> <block pos:line="11" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">9<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="23">3<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"cannot read without ctrl "<pos:position pos:line="12" pos:column="53"/></literal> <operator pos:line="12" pos:column="54">&lt;&lt;<pos:position pos:line="12" pos:column="62"/></operator> <name><name pos:line="12" pos:column="57">ctrl<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">.<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="62">conn<pos:position pos:line="12" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
            <return pos:line="13" pos:column="13">return;<pos:position pos:line="13" pos:column="20"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="15" pos:column="9">/*
         * Cancel the timeout on the Data socket (if any) and
         * establish one on the control socket.
         */</comment>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name><name pos:line="19" pos:column="13">Comm<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">::<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">IsConnOpen<pos:position pos:line="19" pos:column="29"/></name></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name><name pos:line="19" pos:column="30">data<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">conn<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41"> <block pos:line="19" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">commUnsetConnTimeout<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name><name pos:line="20" pos:column="34">data<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">conn<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">const<pos:position pos:line="23" pos:column="14"/></specifier> <name pos:line="23" pos:column="15">time_t<pos:position pos:line="23" pos:column="21"/></name></type> <name pos:line="23" pos:column="22">tout<pos:position pos:line="23" pos:column="26"/></name> <init pos:line="23" pos:column="27">= <expr><ternary><condition><expr><name pos:line="23" pos:column="29">shortenReadTimeout<pos:position pos:line="23" pos:column="47"/></name></expr> ?<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
                            <expr><call><name pos:line="24" pos:column="29">min<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name><name pos:line="24" pos:column="33">Config<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">.<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">Timeout<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">.<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">connect<pos:position pos:line="24" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="57">Config<pos:position pos:line="24" pos:column="63"/></name><operator pos:line="24" pos:column="63">.<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="64">Timeout<pos:position pos:line="24" pos:column="71"/></name><operator pos:line="24" pos:column="71">.<pos:position pos:line="24" pos:column="72"/></operator><name pos:line="24" pos:column="72">read<pos:position pos:line="24" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr></then><else pos:line="24" pos:column="77">:
                            <expr><name><name pos:line="25" pos:column="29">Config<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">.<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">Timeout<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">.<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">read<pos:position pos:line="25" pos:column="48"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="25" pos:column="49"/></decl_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">shortenReadTimeout<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <literal type="boolean" pos:line="26" pos:column="30">false<pos:position pos:line="26" pos:column="35"/></literal></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt> <comment type="line" pos:line="26" pos:column="37">// we only need to do this once, after PASV</comment>

        <typedef pos:line="28" pos:column="9">typedef <type><name><name pos:line="28" pos:column="17">CommCbMemFunT<pos:position pos:line="28" pos:column="30"/></name><argument_list type="generic" pos:line="28" pos:column="30">&lt;<argument><expr><name pos:line="28" pos:column="31">Client<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">CommTimeoutCbParams<pos:position pos:line="28" pos:column="58"/></name></expr></argument>&gt;<pos:position pos:line="28" pos:column="62"/></argument_list></name></type> <name pos:line="28" pos:column="60">TimeoutDialer<pos:position pos:line="28" pos:column="73"/></name>;<pos:position pos:line="28" pos:column="74"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="29" pos:column="9">AsyncCall<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">::<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">Pointer<pos:position pos:line="29" pos:column="27"/></name></name></type> <name pos:line="29" pos:column="28">timeoutCall<pos:position pos:line="29" pos:column="39"/></name> <init pos:line="29" pos:column="40">= <expr><call><name pos:line="29" pos:column="42">JobCallback<pos:position pos:line="29" pos:column="53"/></name><argument_list pos:line="29" pos:column="53">(<argument><expr><literal type="number" pos:line="29" pos:column="54">9<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="57">5<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="60">TimeoutDialer<pos:position pos:line="29" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="75">this<pos:position pos:line="29" pos:column="79"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="81">Ftp<pos:position pos:line="29" pos:column="84"/></name><operator pos:line="29" pos:column="84">::<pos:position pos:line="29" pos:column="86"/></operator><name pos:line="29" pos:column="86">Client<pos:position pos:line="29" pos:column="92"/></name><operator pos:line="29" pos:column="92">::<pos:position pos:line="29" pos:column="94"/></operator><name pos:line="29" pos:column="94">timeout<pos:position pos:line="29" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="102"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="103"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">commSetConnTimeout<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">ctrl<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">.<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">conn<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">tout<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">timeoutCall<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>

        <typedef pos:line="32" pos:column="9">typedef <type><name><name pos:line="32" pos:column="17">CommCbMemFunT<pos:position pos:line="32" pos:column="30"/></name><argument_list type="generic" pos:line="32" pos:column="30">&lt;<argument><expr><name pos:line="32" pos:column="31">Client<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">CommIoCbParams<pos:position pos:line="32" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="32" pos:column="57"/></argument_list></name></type> <name pos:line="32" pos:column="55">Dialer<pos:position pos:line="32" pos:column="61"/></name>;<pos:position pos:line="32" pos:column="62"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="33" pos:column="9">AsyncCall<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">::<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">Pointer<pos:position pos:line="33" pos:column="27"/></name></name></type> <name pos:line="33" pos:column="28">reader<pos:position pos:line="33" pos:column="34"/></name> <init pos:line="33" pos:column="35">= <expr><call><name pos:line="33" pos:column="37">JobCallback<pos:position pos:line="33" pos:column="48"/></name><argument_list pos:line="33" pos:column="48">(<argument><expr><literal type="number" pos:line="33" pos:column="49">9<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="52">5<pos:position pos:line="33" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">Dialer<pos:position pos:line="33" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">this<pos:position pos:line="33" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="69">Ftp<pos:position pos:line="33" pos:column="72"/></name><operator pos:line="33" pos:column="72">::<pos:position pos:line="33" pos:column="74"/></operator><name pos:line="33" pos:column="74">Client<pos:position pos:line="33" pos:column="80"/></name><operator pos:line="33" pos:column="80">::<pos:position pos:line="33" pos:column="82"/></operator><name pos:line="33" pos:column="82">readControlReply<pos:position pos:line="33" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="99"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="100"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">comm_read<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name><name pos:line="34" pos:column="19">ctrl<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">.<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">conn<pos:position pos:line="34" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="30">ctrl<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">buf<pos:position pos:line="34" pos:column="38"/></name></name> <operator pos:line="34" pos:column="39">+<pos:position pos:line="34" pos:column="40"/></operator> <name><name pos:line="34" pos:column="41">ctrl<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">.<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">offset<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="54">ctrl<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">.<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="59">size<pos:position pos:line="34" pos:column="63"/></name></name> <operator pos:line="34" pos:column="64">-<pos:position pos:line="34" pos:column="65"/></operator> <name><name pos:line="34" pos:column="66">ctrl<pos:position pos:line="34" pos:column="70"/></name><operator pos:line="34" pos:column="70">.<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="71">offset<pos:position pos:line="34" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="79">reader<pos:position pos:line="34" pos:column="85"/></name></expr></argument>)<pos:position pos:line="34" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="87"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

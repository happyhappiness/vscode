<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1488_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">external_acl<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">maybeCacheable<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">allow_t<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">&amp;<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="45">result<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">cache_size<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&lt;=<pos:position pos:line="4" pos:column="25"/></operator> <literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="5" pos:column="23">// cache is disabled</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">ACCESS_DUNNO<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="8" pos:column="23">// non-cacheable response</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><ternary><condition><expr><call><name><name pos:line="10" pos:column="10">result<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">allowed<pos:position pos:line="10" pos:column="24"/></name></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr> ?<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <expr><name pos:line="10" pos:column="29">ttl<pos:position pos:line="10" pos:column="32"/></name></expr> <pos:position pos:line="10" pos:column="33"/></then><else pos:line="10" pos:column="33">: <expr><name pos:line="10" pos:column="35">negative_ttl<pos:position pos:line="10" pos:column="47"/></name></expr></else></ternary><operator pos:line="10" pos:column="47">)<pos:position pos:line="10" pos:column="48"/></operator> <operator pos:line="10" pos:column="49">&lt;=<pos:position pos:line="10" pos:column="54"/></operator> <literal type="number" pos:line="10" pos:column="52">0<pos:position pos:line="10" pos:column="53"/></literal></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="11" pos:column="23">// not caching this type of response</comment>

    <return pos:line="13" pos:column="5">return <expr><literal type="boolean" pos:line="13" pos:column="12">true<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

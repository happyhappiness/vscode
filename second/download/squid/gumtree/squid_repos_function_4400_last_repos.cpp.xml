<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4400_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">wchar_t<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name pos:line="2" pos:column="1">My_NameTranslate<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">wchar_t<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">name<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">in_format<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">out_format<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IADsNameTranslate<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">pNto<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HRESULT<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">hr<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BSTR<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">bstr<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">wchar_t<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">wc<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">WIN32_COM_initialized<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">==<pos:position pos:line="9" pos:column="33"/></operator> <literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">hr<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">CoInitialize<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">NULL<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">FAILED<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">hr<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debug<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"My_NameTranslate: cannot initialize COM interface, ERROR: %s\n"<pos:position pos:line="12" pos:column="83"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="85">Get_WIN32_ErrorMessage<pos:position pos:line="12" pos:column="107"/></name><argument_list pos:line="12" pos:column="107">(<argument><expr><name pos:line="12" pos:column="108">hr<pos:position pos:line="12" pos:column="110"/></name></expr></argument>)<pos:position pos:line="12" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="113"/></expr_stmt>
            <comment type="block" pos:line="13" pos:column="13">/* This is a fatal error */</comment>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">exit<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><literal type="number" pos:line="14" pos:column="18">1<pos:position pos:line="14" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="16" pos:column="9">WIN32_COM_initialized<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="33">1<pos:position pos:line="16" pos:column="34"/></literal></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="18" pos:column="5">hr<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">CoCreateInstance<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">&amp;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="28">CLSID_NameTranslate<pos:position pos:line="18" pos:column="47"/></name></expr></argument>,
                          <argument><expr><name pos:line="19" pos:column="27">NULL<pos:position pos:line="19" pos:column="31"/></name></expr></argument>,
                          <argument><expr><name pos:line="20" pos:column="27">CLSCTX_INPROC_SERVER<pos:position pos:line="20" pos:column="47"/></name></expr></argument>,
                          <argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">IID_IADsNameTranslate<pos:position pos:line="21" pos:column="49"/></name></expr></argument>,
                          <argument><expr><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">void<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">*<pos:position pos:line="22" pos:column="34"/></operator><operator pos:line="22" pos:column="34">*<pos:position pos:line="22" pos:column="35"/></operator><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator> <operator pos:line="22" pos:column="37">&amp;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="38">pNto<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">FAILED<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">hr<pos:position pos:line="23" pos:column="18"/></name></expr></argument>)<pos:position pos:line="23" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debug<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="string" pos:line="24" pos:column="15">"My_NameTranslate: cannot create COM instance, ERROR: %s\n"<pos:position pos:line="24" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="76">Get_WIN32_ErrorMessage<pos:position pos:line="24" pos:column="98"/></name><argument_list pos:line="24" pos:column="98">(<argument><expr><name pos:line="24" pos:column="99">hr<pos:position pos:line="24" pos:column="101"/></name></expr></argument>)<pos:position pos:line="24" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="104"/></expr_stmt>
        <comment type="block" pos:line="25" pos:column="9">/* This is a fatal error */</comment>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">exit<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">hr<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name><name pos:line="28" pos:column="10">pNto<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">lpVtbl<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">Init<pos:position pos:line="28" pos:column="28"/></name></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">pNto<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">ADS_NAME_INITTYPE_GC<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="57">L""<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">FAILED<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">hr<pos:position pos:line="29" pos:column="18"/></name></expr></argument>)<pos:position pos:line="29" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20"> <block pos:line="29" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debug<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><literal type="string" pos:line="30" pos:column="15">"My_NameTranslate: cannot initialise NameTranslate API, ERROR: %s\n"<pos:position pos:line="30" pos:column="83"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="85">Get_WIN32_ErrorMessage<pos:position pos:line="30" pos:column="107"/></name><argument_list pos:line="30" pos:column="107">(<argument><expr><name pos:line="30" pos:column="108">hr<pos:position pos:line="30" pos:column="110"/></name></expr></argument>)<pos:position pos:line="30" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="113"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="31" pos:column="9">pNto<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">lpVtbl<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">Release<pos:position pos:line="31" pos:column="30"/></name></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">pNto<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
        <comment type="block" pos:line="32" pos:column="9">/* This is a fatal error */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">exit<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="35" pos:column="5">hr<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name><name pos:line="35" pos:column="10">pNto<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">lpVtbl<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">Set<pos:position pos:line="35" pos:column="27"/></name></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">pNto<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">in_format<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">name<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">FAILED<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">hr<pos:position pos:line="36" pos:column="18"/></name></expr></argument>)<pos:position pos:line="36" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="20"/></condition><then pos:line="36" pos:column="20"> <block pos:line="36" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">debug<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="string" pos:line="37" pos:column="15">"My_NameTranslate: cannot set translate of %S, ERROR: %s\n"<pos:position pos:line="37" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="76">name<pos:position pos:line="37" pos:column="80"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="82">Get_WIN32_ErrorMessage<pos:position pos:line="37" pos:column="104"/></name><argument_list pos:line="37" pos:column="104">(<argument><expr><name pos:line="37" pos:column="105">hr<pos:position pos:line="37" pos:column="107"/></name></expr></argument>)<pos:position pos:line="37" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="110"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="38" pos:column="9">pNto<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">lpVtbl<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">Release<pos:position pos:line="38" pos:column="30"/></name></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">pNto<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">NULL<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="41" pos:column="5">hr<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name><name pos:line="41" pos:column="10">pNto<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">lpVtbl<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">Get<pos:position pos:line="41" pos:column="27"/></name></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">pNto<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">out_format<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="46">&amp;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="47">bstr<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">FAILED<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">hr<pos:position pos:line="42" pos:column="18"/></name></expr></argument>)<pos:position pos:line="42" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="20"/></condition><then pos:line="42" pos:column="20"> <block pos:line="42" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debug<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><literal type="string" pos:line="43" pos:column="15">"My_NameTranslate: cannot get translate of %S, ERROR: %s\n"<pos:position pos:line="43" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="76">name<pos:position pos:line="43" pos:column="80"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="82">Get_WIN32_ErrorMessage<pos:position pos:line="43" pos:column="104"/></name><argument_list pos:line="43" pos:column="104">(<argument><expr><name pos:line="43" pos:column="105">hr<pos:position pos:line="43" pos:column="107"/></name></expr></argument>)<pos:position pos:line="43" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="110"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="44" pos:column="9">pNto<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">lpVtbl<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">Release<pos:position pos:line="44" pos:column="30"/></name></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">pNto<pos:position pos:line="44" pos:column="35"/></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">NULL<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">debug<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="string" pos:line="47" pos:column="11">"My_NameTranslate: %S translated to %S\n"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="54">name<pos:position pos:line="47" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="60">bstr<pos:position pos:line="47" pos:column="64"/></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><name pos:line="49" pos:column="5">wc<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <operator pos:line="49" pos:column="10">(<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">wchar_t<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">*<pos:position pos:line="49" pos:column="20"/></operator><operator pos:line="49" pos:column="20">)<pos:position pos:line="49" pos:column="21"/></operator> <call><name pos:line="49" pos:column="22">xmalloc<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><operator pos:line="49" pos:column="30">(<pos:position pos:line="49" pos:column="31"/></operator><call><name pos:line="49" pos:column="31">wcslen<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">bstr<pos:position pos:line="49" pos:column="42"/></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call> <operator pos:line="49" pos:column="44">+<pos:position pos:line="49" pos:column="45"/></operator> <literal type="number" pos:line="49" pos:column="46">1<pos:position pos:line="49" pos:column="47"/></literal><operator pos:line="49" pos:column="47">)<pos:position pos:line="49" pos:column="48"/></operator> <operator pos:line="49" pos:column="49">*<pos:position pos:line="49" pos:column="50"/></operator> <sizeof pos:line="49" pos:column="51">sizeof<argument_list pos:line="49" pos:column="57">(<argument><expr><name pos:line="49" pos:column="58">wchar_t<pos:position pos:line="49" pos:column="65"/></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">wcscpy<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name pos:line="50" pos:column="12">wc<pos:position pos:line="50" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="16">bstr<pos:position pos:line="50" pos:column="20"/></name></expr></argument>)<pos:position pos:line="50" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">SysFreeString<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><name pos:line="51" pos:column="19">bstr<pos:position pos:line="51" pos:column="23"/></name></expr></argument>)<pos:position pos:line="51" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="52" pos:column="5">pNto<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">lpVtbl<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">Release<pos:position pos:line="52" pos:column="26"/></name></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">pNto<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">wc<pos:position pos:line="53" pos:column="14"/></name></expr>;<pos:position pos:line="53" pos:column="15"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

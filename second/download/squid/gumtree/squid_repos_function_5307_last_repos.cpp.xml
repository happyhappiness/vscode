<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5307_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Client<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">sendPassive<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">9<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="6" pos:column="5">/** \par
      * Checks for EPSV ALL special conditions:
      * If enabled to be sent, squid MUST NOT request any other connect methods.
      * If 'ALL' is sent and fails the entire FTP Session fails.
      * NP: By my reading exact EPSV protocols maybe attempted, but only EPSV method. */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">Config<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">Ftp<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">epsv_all<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="32">state<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">==<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="41">SENT_EPSV_1<pos:position pos:line="11" pos:column="52"/></name></expr> )<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54"> <block pos:line="11" pos:column="55">{
        <comment type="line" pos:line="12" pos:column="9">// We are here because the last "EPSV 1" failed, but because of epsv_all</comment>
        <comment type="line" pos:line="13" pos:column="9">// no other method allowed.</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">9<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="19">DBG_IMPORTANT<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"FTP does not allow PASV method after 'EPSV ALL' has been sent."<pos:position pos:line="14" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="100"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">failed<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">ERR_FTP_FAILURE<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><literal type="boolean" pos:line="16" pos:column="16">false<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="line" format="doxygen" pos:line="19" pos:column="5">/// Closes any old FTP-Data connection which may exist. */</comment>
    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">data<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">.<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">close<pos:position pos:line="20" pos:column="15"/></name></name><argument_list pos:line="20" pos:column="15">()<pos:position pos:line="20" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="22" pos:column="5">/** \par
      * Checks for previous EPSV/PASV failures on this server/session.
      * Diverts to EPRT immediately if they are not working. */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name><name pos:line="25" pos:column="10">Config<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">Ftp<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">passive<pos:position pos:line="25" pos:column="28"/></name></name> <operator pos:line="25" pos:column="29">||<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="32">state<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">SENT_PASV<pos:position pos:line="25" pos:column="50"/></name></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51"> <block pos:line="25" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">sendEprt<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">()<pos:position pos:line="26" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><literal type="boolean" pos:line="27" pos:column="16">true<pos:position pos:line="27" pos:column="20"/></literal></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <decl_stmt><decl><specifier pos:line="30" pos:column="5">static<pos:position pos:line="30" pos:column="11"/></specifier> <type><name pos:line="30" pos:column="12">MemBuf<pos:position pos:line="30" pos:column="18"/></name></type> <name pos:line="30" pos:column="19">mb<pos:position pos:line="30" pos:column="21"/></name></decl>;<pos:position pos:line="30" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">mb<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">.<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">reset<pos:position pos:line="31" pos:column="13"/></name></name><argument_list pos:line="31" pos:column="13">()<pos:position pos:line="31" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
    <comment type="block" format="doxygen" pos:line="32" pos:column="5">/** \par
      * Send EPSV (ALL,2,1) or PASV on the control channel.
      *
      *  - EPSV ALL  is used if enabled.
      *  - EPSV 2    is used if ALL is disabled and IPv6 is available and ctrl channel is IPv6.
      *  - EPSV 1    is used if EPSV 2 (IPv6) fails or is not available or ctrl channel is IPv4.
      *  - PASV      is used if EPSV 1 fails.
      */</comment>
    <switch pos:line="40" pos:column="5">switch <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">state<pos:position pos:line="40" pos:column="18"/></name></expr>)<pos:position pos:line="40" pos:column="19"/></condition> <block pos:line="40" pos:column="20">{
    <case pos:line="41" pos:column="5">case <expr><name pos:line="41" pos:column="10">SENT_EPSV_ALL<pos:position pos:line="41" pos:column="23"/></name></expr>:<pos:position pos:line="41" pos:column="24"/></case> <comment type="block" pos:line="41" pos:column="25">/* EPSV ALL resulted in a bad response. Try ther EPSV methods. */</comment>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name><name pos:line="42" pos:column="13">ctrl<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">.<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">conn<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">local<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">.<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">isIPv6<pos:position pos:line="42" pos:column="36"/></name></name><argument_list pos:line="42" pos:column="36">()<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39"> <block pos:line="42" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">debugs<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="number" pos:line="43" pos:column="20">9<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="23">5<pos:position pos:line="43" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="26">"FTP Channel is IPv6 ("<pos:position pos:line="43" pos:column="49"/></literal> <operator pos:line="43" pos:column="50">&lt;&lt;<pos:position pos:line="43" pos:column="58"/></operator> <name><name pos:line="43" pos:column="53">ctrl<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">.<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="58">conn<pos:position pos:line="43" pos:column="62"/></name><operator pos:line="43" pos:column="62">-&gt;<pos:position pos:line="43" pos:column="67"/></operator><name pos:line="43" pos:column="64">remote<pos:position pos:line="43" pos:column="70"/></name></name> <operator pos:line="43" pos:column="71">&lt;&lt;<pos:position pos:line="43" pos:column="79"/></operator> <literal type="string" pos:line="43" pos:column="74">") attempting EPSV 2 after EPSV ALL has failed."<pos:position pos:line="43" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="124"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">mb<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">.<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">appendf<pos:position pos:line="44" pos:column="23"/></name></name><argument_list pos:line="44" pos:column="23">(<argument><expr><literal type="string" pos:line="44" pos:column="24">"EPSV 2%s"<pos:position pos:line="44" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="36">Ftp<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">::<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">crlf<pos:position pos:line="44" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">state<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">SENT_EPSV_2<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
    <comment type="line" pos:line="48" pos:column="5">// else fall through to skip EPSV 2</comment>

    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">SENT_EPSV_2<pos:position pos:line="50" pos:column="21"/></name></expr>:<pos:position pos:line="50" pos:column="22"/></case> <comment type="block" pos:line="50" pos:column="23">/* EPSV IPv6 failed. Try EPSV IPv4 */</comment>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><call><name><name pos:line="51" pos:column="13">ctrl<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">.<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">conn<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="24">local<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">.<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">isIPv4<pos:position pos:line="51" pos:column="36"/></name></name><argument_list pos:line="51" pos:column="36">()<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="39"/></condition><then pos:line="51" pos:column="39"> <block pos:line="51" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">debugs<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><literal type="number" pos:line="52" pos:column="20">9<pos:position pos:line="52" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="23">5<pos:position pos:line="52" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="26">"FTP Channel is IPv4 ("<pos:position pos:line="52" pos:column="49"/></literal> <operator pos:line="52" pos:column="50">&lt;&lt;<pos:position pos:line="52" pos:column="58"/></operator> <name><name pos:line="52" pos:column="53">ctrl<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">.<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="58">conn<pos:position pos:line="52" pos:column="62"/></name><operator pos:line="52" pos:column="62">-&gt;<pos:position pos:line="52" pos:column="67"/></operator><name pos:line="52" pos:column="64">remote<pos:position pos:line="52" pos:column="70"/></name></name> <operator pos:line="52" pos:column="71">&lt;&lt;<pos:position pos:line="52" pos:column="79"/></operator> <literal type="string" pos:line="52" pos:column="74">") attempting EPSV 1 after EPSV ALL has failed."<pos:position pos:line="52" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="124"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">mb<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">.<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">appendf<pos:position pos:line="53" pos:column="23"/></name></name><argument_list pos:line="53" pos:column="23">(<argument><expr><literal type="string" pos:line="53" pos:column="24">"EPSV 1%s"<pos:position pos:line="53" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">Ftp<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">::<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="41">crlf<pos:position pos:line="53" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">state<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name pos:line="54" pos:column="21">SENT_EPSV_1<pos:position pos:line="54" pos:column="32"/></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
            <break pos:line="55" pos:column="13">break;<pos:position pos:line="55" pos:column="19"/></break>
        }<pos:position pos:line="56" pos:column="10"/></block></then> <elseif pos:line="56" pos:column="11">else <if pos:line="56" pos:column="16">if <condition pos:line="56" pos:column="19">(<expr><name><name pos:line="56" pos:column="20">Config<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">.<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="27">Ftp<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">.<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">epsv_all<pos:position pos:line="56" pos:column="39"/></name></name></expr>)<pos:position pos:line="56" pos:column="40"/></condition><then pos:line="56" pos:column="40"> <block pos:line="56" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">debugs<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="number" pos:line="57" pos:column="20">9<pos:position pos:line="57" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="23">DBG_IMPORTANT<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="38">"FTP does not allow PASV method after 'EPSV ALL' has been sent."<pos:position pos:line="57" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">failed<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">ERR_FTP_FAILURE<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="37">0<pos:position pos:line="58" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
            <return pos:line="59" pos:column="13">return <expr><literal type="boolean" pos:line="59" pos:column="20">false<pos:position pos:line="59" pos:column="25"/></literal></expr>;<pos:position pos:line="59" pos:column="26"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if></elseif></if>
    <comment type="line" pos:line="61" pos:column="5">// else fall through to skip EPSV 1</comment>

    <case pos:line="63" pos:column="5">case <expr><name pos:line="63" pos:column="10">SENT_EPSV_1<pos:position pos:line="63" pos:column="21"/></name></expr>:<pos:position pos:line="63" pos:column="22"/></case> <comment type="block" pos:line="63" pos:column="23">/* EPSV options exhausted. Try PASV now. */</comment>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">debugs<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="number" pos:line="64" pos:column="16">9<pos:position pos:line="64" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="19">5<pos:position pos:line="64" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="22">"FTP Channel ("<pos:position pos:line="64" pos:column="37"/></literal> <operator pos:line="64" pos:column="38">&lt;&lt;<pos:position pos:line="64" pos:column="46"/></operator> <name><name pos:line="64" pos:column="41">ctrl<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">.<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="46">conn<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">-&gt;<pos:position pos:line="64" pos:column="55"/></operator><name pos:line="64" pos:column="52">remote<pos:position pos:line="64" pos:column="58"/></name></name> <operator pos:line="64" pos:column="59">&lt;&lt;<pos:position pos:line="64" pos:column="67"/></operator> <literal type="string" pos:line="64" pos:column="62">") rejects EPSV connection attempts. Trying PASV instead."<pos:position pos:line="64" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="122"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="65" pos:column="9">mb<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">.<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">appendf<pos:position pos:line="65" pos:column="19"/></name></name><argument_list pos:line="65" pos:column="19">(<argument><expr><literal type="string" pos:line="65" pos:column="20">"PASV%s"<pos:position pos:line="65" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="30">Ftp<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">::<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="35">crlf<pos:position pos:line="65" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">state<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <name pos:line="66" pos:column="17">SENT_PASV<pos:position pos:line="66" pos:column="26"/></name></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>

    <default pos:line="69" pos:column="5">default:<pos:position pos:line="69" pos:column="13"/></default> <block pos:line="69" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="70" pos:column="9">bool<pos:position pos:line="70" pos:column="13"/></name></type> <name pos:line="70" pos:column="14">doEpsv<pos:position pos:line="70" pos:column="20"/></name> <init pos:line="70" pos:column="21">= <expr><literal type="boolean" pos:line="70" pos:column="23">true<pos:position pos:line="70" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="70" pos:column="28"/></decl_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name><name pos:line="71" pos:column="13">Config<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">.<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">accessList<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">.<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="31">ftp_epsv<pos:position pos:line="71" pos:column="39"/></name></name></expr>)<pos:position pos:line="71" pos:column="40"/></condition><then pos:line="71" pos:column="40"> <block pos:line="71" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">ACLFilledChecklist<pos:position pos:line="72" pos:column="31"/></name></type> <name pos:line="72" pos:column="32">checklist<pos:position pos:line="72" pos:column="41"/></name><argument_list pos:line="72" pos:column="41">(<argument><expr><name><name pos:line="72" pos:column="42">Config<pos:position pos:line="72" pos:column="48"/></name><operator pos:line="72" pos:column="48">.<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="49">accessList<pos:position pos:line="72" pos:column="59"/></name><operator pos:line="72" pos:column="59">.<pos:position pos:line="72" pos:column="60"/></operator><name pos:line="72" pos:column="60">ftp_epsv<pos:position pos:line="72" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="70">fwd<pos:position pos:line="72" pos:column="73"/></name><operator pos:line="72" pos:column="73">-&gt;<pos:position pos:line="72" pos:column="78"/></operator><name pos:line="72" pos:column="75">request<pos:position pos:line="72" pos:column="82"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="84">NULL<pos:position pos:line="72" pos:column="88"/></name></expr></argument>)<pos:position pos:line="72" pos:column="89"/></argument_list></decl>;<pos:position pos:line="72" pos:column="90"/></decl_stmt>
            <expr_stmt><expr><name pos:line="73" pos:column="13">doEpsv<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <call><name><name pos:line="73" pos:column="22">checklist<pos:position pos:line="73" pos:column="31"/></name><operator pos:line="73" pos:column="31">.<pos:position pos:line="73" pos:column="32"/></operator><name pos:line="73" pos:column="32">fastCheck<pos:position pos:line="73" pos:column="41"/></name></name><argument_list pos:line="73" pos:column="41">()<pos:position pos:line="73" pos:column="43"/></argument_list></call><operator pos:line="73" pos:column="43">.<pos:position pos:line="73" pos:column="44"/></operator><call><name pos:line="73" pos:column="44">allowed<pos:position pos:line="73" pos:column="51"/></name><argument_list pos:line="73" pos:column="51">()<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><operator pos:line="75" pos:column="13">!<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="14">doEpsv<pos:position pos:line="75" pos:column="20"/></name></expr>)<pos:position pos:line="75" pos:column="21"/></condition><then pos:line="75" pos:column="21"> <block pos:line="75" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">debugs<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><literal type="number" pos:line="76" pos:column="20">9<pos:position pos:line="76" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="23">5<pos:position pos:line="76" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="26">"EPSV support manually disabled. Sending PASV for FTP Channel ("<pos:position pos:line="76" pos:column="90"/></literal> <operator pos:line="76" pos:column="91">&lt;&lt;<pos:position pos:line="76" pos:column="99"/></operator> <name><name pos:line="76" pos:column="94">ctrl<pos:position pos:line="76" pos:column="98"/></name><operator pos:line="76" pos:column="98">.<pos:position pos:line="76" pos:column="99"/></operator><name pos:line="76" pos:column="99">conn<pos:position pos:line="76" pos:column="103"/></name><operator pos:line="76" pos:column="103">-&gt;<pos:position pos:line="76" pos:column="108"/></operator><name pos:line="76" pos:column="105">remote<pos:position pos:line="76" pos:column="111"/></name></name> <operator pos:line="76" pos:column="112">&lt;&lt;<pos:position pos:line="76" pos:column="120"/></operator><literal type="string" pos:line="76" pos:column="114">")"<pos:position pos:line="76" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="119"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="77" pos:column="13">mb<pos:position pos:line="77" pos:column="15"/></name><operator pos:line="77" pos:column="15">.<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="16">appendf<pos:position pos:line="77" pos:column="23"/></name></name><argument_list pos:line="77" pos:column="23">(<argument><expr><literal type="string" pos:line="77" pos:column="24">"PASV%s"<pos:position pos:line="77" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="34">Ftp<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">::<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="39">crlf<pos:position pos:line="77" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="78" pos:column="13">state<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">SENT_PASV<pos:position pos:line="78" pos:column="30"/></name></expr>;<pos:position pos:line="78" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then> <elseif pos:line="79" pos:column="11">else <if pos:line="79" pos:column="16">if <condition pos:line="79" pos:column="19">(<expr><name><name pos:line="79" pos:column="20">Config<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">.<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">Ftp<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">.<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="31">epsv_all<pos:position pos:line="79" pos:column="39"/></name></name></expr>)<pos:position pos:line="79" pos:column="40"/></condition><then pos:line="79" pos:column="40"> <block pos:line="79" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">debugs<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><literal type="number" pos:line="80" pos:column="20">9<pos:position pos:line="80" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="23">5<pos:position pos:line="80" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="26">"EPSV ALL manually enabled. Attempting with FTP Channel ("<pos:position pos:line="80" pos:column="84"/></literal> <operator pos:line="80" pos:column="85">&lt;&lt;<pos:position pos:line="80" pos:column="93"/></operator> <name><name pos:line="80" pos:column="88">ctrl<pos:position pos:line="80" pos:column="92"/></name><operator pos:line="80" pos:column="92">.<pos:position pos:line="80" pos:column="93"/></operator><name pos:line="80" pos:column="93">conn<pos:position pos:line="80" pos:column="97"/></name><operator pos:line="80" pos:column="97">-&gt;<pos:position pos:line="80" pos:column="102"/></operator><name pos:line="80" pos:column="99">remote<pos:position pos:line="80" pos:column="105"/></name></name> <operator pos:line="80" pos:column="106">&lt;&lt;<pos:position pos:line="80" pos:column="114"/></operator><literal type="string" pos:line="80" pos:column="108">")"<pos:position pos:line="80" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="113"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="81" pos:column="13">mb<pos:position pos:line="81" pos:column="15"/></name><operator pos:line="81" pos:column="15">.<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="16">appendf<pos:position pos:line="81" pos:column="23"/></name></name><argument_list pos:line="81" pos:column="23">(<argument><expr><literal type="string" pos:line="81" pos:column="24">"EPSV ALL%s"<pos:position pos:line="81" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="38">Ftp<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">::<pos:position pos:line="81" pos:column="43"/></operator><name pos:line="81" pos:column="43">crlf<pos:position pos:line="81" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="82" pos:column="13">state<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator> <name pos:line="82" pos:column="21">SENT_EPSV_ALL<pos:position pos:line="82" pos:column="34"/></name></expr>;<pos:position pos:line="82" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if></elseif> <else pos:line="83" pos:column="11">else <block pos:line="83" pos:column="16">{
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><call><name><name pos:line="84" pos:column="17">ctrl<pos:position pos:line="84" pos:column="21"/></name><operator pos:line="84" pos:column="21">.<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="22">conn<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">-&gt;<pos:position pos:line="84" pos:column="31"/></operator><name pos:line="84" pos:column="28">local<pos:position pos:line="84" pos:column="33"/></name><operator pos:line="84" pos:column="33">.<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">isIPv6<pos:position pos:line="84" pos:column="40"/></name></name><argument_list pos:line="84" pos:column="40">()<pos:position pos:line="84" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="43"/></condition><then pos:line="84" pos:column="43"> <block pos:line="84" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="85" pos:column="17">debugs<pos:position pos:line="85" pos:column="23"/></name><argument_list pos:line="85" pos:column="23">(<argument><expr><literal type="number" pos:line="85" pos:column="24">9<pos:position pos:line="85" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="27">5<pos:position pos:line="85" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="30">"FTP Channel ("<pos:position pos:line="85" pos:column="45"/></literal> <operator pos:line="85" pos:column="46">&lt;&lt;<pos:position pos:line="85" pos:column="54"/></operator> <name><name pos:line="85" pos:column="49">ctrl<pos:position pos:line="85" pos:column="53"/></name><operator pos:line="85" pos:column="53">.<pos:position pos:line="85" pos:column="54"/></operator><name pos:line="85" pos:column="54">conn<pos:position pos:line="85" pos:column="58"/></name><operator pos:line="85" pos:column="58">-&gt;<pos:position pos:line="85" pos:column="63"/></operator><name pos:line="85" pos:column="60">remote<pos:position pos:line="85" pos:column="66"/></name></name> <operator pos:line="85" pos:column="67">&lt;&lt;<pos:position pos:line="85" pos:column="75"/></operator> <literal type="string" pos:line="85" pos:column="70">"). Sending default EPSV 2"<pos:position pos:line="85" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="99"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="86" pos:column="17">mb<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">.<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">appendf<pos:position pos:line="86" pos:column="27"/></name></name><argument_list pos:line="86" pos:column="27">(<argument><expr><literal type="string" pos:line="86" pos:column="28">"EPSV 2%s"<pos:position pos:line="86" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="40">Ftp<pos:position pos:line="86" pos:column="43"/></name><operator pos:line="86" pos:column="43">::<pos:position pos:line="86" pos:column="45"/></operator><name pos:line="86" pos:column="45">crlf<pos:position pos:line="86" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="87" pos:column="17">state<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">=<pos:position pos:line="87" pos:column="24"/></operator> <name pos:line="87" pos:column="25">SENT_EPSV_2<pos:position pos:line="87" pos:column="36"/></name></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><call><name><name pos:line="89" pos:column="17">ctrl<pos:position pos:line="89" pos:column="21"/></name><operator pos:line="89" pos:column="21">.<pos:position pos:line="89" pos:column="22"/></operator><name pos:line="89" pos:column="22">conn<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">-&gt;<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="28">local<pos:position pos:line="89" pos:column="33"/></name><operator pos:line="89" pos:column="33">.<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="34">isIPv4<pos:position pos:line="89" pos:column="40"/></name></name><argument_list pos:line="89" pos:column="40">()<pos:position pos:line="89" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="43"/></condition><then pos:line="89" pos:column="43"> <block pos:line="89" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">debugs<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><literal type="number" pos:line="90" pos:column="24">9<pos:position pos:line="90" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="27">5<pos:position pos:line="90" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="30">"Channel ("<pos:position pos:line="90" pos:column="41"/></literal> <operator pos:line="90" pos:column="42">&lt;&lt;<pos:position pos:line="90" pos:column="50"/></operator> <name><name pos:line="90" pos:column="45">ctrl<pos:position pos:line="90" pos:column="49"/></name><operator pos:line="90" pos:column="49">.<pos:position pos:line="90" pos:column="50"/></operator><name pos:line="90" pos:column="50">conn<pos:position pos:line="90" pos:column="54"/></name><operator pos:line="90" pos:column="54">-&gt;<pos:position pos:line="90" pos:column="59"/></operator><name pos:line="90" pos:column="56">remote<pos:position pos:line="90" pos:column="62"/></name></name> <operator pos:line="90" pos:column="63">&lt;&lt;<pos:position pos:line="90" pos:column="71"/></operator><literal type="string" pos:line="90" pos:column="65">"). Sending default EPSV 1"<pos:position pos:line="90" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="94"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="91" pos:column="17">mb<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">.<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="20">appendf<pos:position pos:line="91" pos:column="27"/></name></name><argument_list pos:line="91" pos:column="27">(<argument><expr><literal type="string" pos:line="91" pos:column="28">"EPSV 1%s"<pos:position pos:line="91" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="40">Ftp<pos:position pos:line="91" pos:column="43"/></name><operator pos:line="91" pos:column="43">::<pos:position pos:line="91" pos:column="45"/></operator><name pos:line="91" pos:column="45">crlf<pos:position pos:line="91" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="92" pos:column="17">state<pos:position pos:line="92" pos:column="22"/></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <name pos:line="92" pos:column="25">SENT_EPSV_1<pos:position pos:line="92" pos:column="36"/></name></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if>
        }<pos:position pos:line="94" pos:column="10"/></block></else></if>
        <break pos:line="95" pos:column="9">break;<pos:position pos:line="95" pos:column="15"/></break>
    }<pos:position pos:line="96" pos:column="6"/></block>
    }<pos:position pos:line="97" pos:column="6"/></block></switch>

    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><name><name pos:line="99" pos:column="9">ctrl<pos:position pos:line="99" pos:column="13"/></name><operator pos:line="99" pos:column="13">.<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="14">message<pos:position pos:line="99" pos:column="21"/></name></name></expr>)<pos:position pos:line="99" pos:column="22"/></condition><then pos:line="99" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="9">wordlistDestroy<pos:position pos:line="100" pos:column="24"/></name><argument_list pos:line="100" pos:column="24">(<argument><expr><operator pos:line="100" pos:column="25">&amp;<pos:position pos:line="100" pos:column="30"/></operator><name><name pos:line="100" pos:column="26">ctrl<pos:position pos:line="100" pos:column="30"/></name><operator pos:line="100" pos:column="30">.<pos:position pos:line="100" pos:column="31"/></operator><name pos:line="100" pos:column="31">message<pos:position pos:line="100" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="40"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">ctrl<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">.<pos:position pos:line="101" pos:column="10"/></operator><name pos:line="101" pos:column="10">message<pos:position pos:line="101" pos:column="17"/></name></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <name pos:line="101" pos:column="20">NULL<pos:position pos:line="101" pos:column="24"/></name></expr>;<pos:position pos:line="101" pos:column="25"/></expr_stmt> <comment type="line" pos:line="101" pos:column="26">//No message to return to client.</comment>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">ctrl<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">.<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">offset<pos:position pos:line="102" pos:column="16"/></name></name> <operator pos:line="102" pos:column="17">=<pos:position pos:line="102" pos:column="18"/></operator> <literal type="number" pos:line="102" pos:column="19">0<pos:position pos:line="102" pos:column="20"/></literal></expr>;<pos:position pos:line="102" pos:column="21"/></expr_stmt> <comment type="line" pos:line="102" pos:column="22">//reset readed response, to make room read the next response</comment>

    <expr_stmt><expr><call><name pos:line="104" pos:column="5">writeCommand<pos:position pos:line="104" pos:column="17"/></name><argument_list pos:line="104" pos:column="17">(<argument><expr><call><name><name pos:line="104" pos:column="18">mb<pos:position pos:line="104" pos:column="20"/></name><operator pos:line="104" pos:column="20">.<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="21">content<pos:position pos:line="104" pos:column="28"/></name></name><argument_list pos:line="104" pos:column="28">()<pos:position pos:line="104" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="106" pos:column="5">shortenReadTimeout<pos:position pos:line="106" pos:column="23"/></name> <operator pos:line="106" pos:column="24">=<pos:position pos:line="106" pos:column="25"/></operator> <literal type="boolean" pos:line="106" pos:column="26">true<pos:position pos:line="106" pos:column="30"/></literal></expr>;<pos:position pos:line="106" pos:column="31"/></expr_stmt>
    <return pos:line="107" pos:column="5">return <expr><literal type="boolean" pos:line="107" pos:column="12">true<pos:position pos:line="107" pos:column="16"/></literal></expr>;<pos:position pos:line="107" pos:column="17"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

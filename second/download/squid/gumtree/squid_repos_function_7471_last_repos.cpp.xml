<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7471_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerOptions<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">updateContextNpn<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name><name pos:line="2" pos:column="41">Security<pos:position pos:line="2" pos:column="49"/></name><operator pos:line="2" pos:column="49">::<pos:position pos:line="2" pos:column="51"/></operator><name pos:line="2" pos:column="51">ContextPointer<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">&amp;<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="67">ctx<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">flags<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">tlsNpn<pos:position pos:line="4" pos:column="22"/></name></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">USE_OPENSSL<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&amp;&amp;<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="20">defined<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">TLSEXT_TYPE_next_proto_neg<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">SSL_CTX_set_next_proto_select_cb<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><call><name><name pos:line="8" pos:column="38">ctx<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">get<pos:position pos:line="8" pos:column="45"/></name></name><argument_list pos:line="8" pos:column="45">()<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="8" pos:column="49">&amp;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="50">ssl_next_proto_cb<pos:position pos:line="8" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="8" pos:column="69">nullptr<pos:position pos:line="8" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="11" pos:column="5">// NOTE: GnuTLS does not support the obsolete NPN extension.</comment>
    <comment type="line" pos:line="12" pos:column="5">//       it does support ALPN per-session, not per-context.</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

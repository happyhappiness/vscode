<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1632_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SwapDir<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">optionObjectSizeParse<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">option<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">value<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">int<pos:position pos:line="2" pos:column="74"/></name></type> <name pos:line="2" pos:column="75">isaReconfig<pos:position pos:line="2" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="87"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int64_t<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">val<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">strcmp<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="24">"max-size"<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call> <operator pos:line="5" pos:column="36">==<pos:position pos:line="5" pos:column="38"/></operator> <literal type="number" pos:line="5" pos:column="39">0<pos:position pos:line="5" pos:column="40"/></literal></expr>)<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41"> <block pos:line="5" pos:column="42">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">val<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">&amp;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="16">max_objsize<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <elseif pos:line="7" pos:column="7">else <if pos:line="7" pos:column="12">if <condition pos:line="7" pos:column="15">(<expr><call><name pos:line="7" pos:column="16">strcmp<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">option<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="31">"min-size"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call> <operator pos:line="7" pos:column="43">==<pos:position pos:line="7" pos:column="45"/></operator> <literal type="number" pos:line="7" pos:column="46">0<pos:position pos:line="7" pos:column="47"/></literal></expr>)<pos:position pos:line="7" pos:column="48"/></condition><then pos:line="7" pos:column="48"> <block pos:line="7" pos:column="49">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">val<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <operator pos:line="8" pos:column="15">&amp;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="16">min_objsize<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if></elseif> <else pos:line="9" pos:column="7">else
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></else></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">value<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">self_destruct<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">()<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int64_t<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">size<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><call><name pos:line="15" pos:column="20">strtoll<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">value<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">NULL<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="41">10<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">isaReconfig<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&amp;&amp;<pos:position pos:line="17" pos:column="31"/></operator> <operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">val<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">!=<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">size<pos:position pos:line="17" pos:column="36"/></name></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37"> <block pos:line="17" pos:column="38">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">allowOptionReconfigure<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">option<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44"> <block pos:line="18" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">debugs<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="number" pos:line="19" pos:column="20">3<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">DBG_IMPORTANT<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"cache_dir '"<pos:position pos:line="19" pos:column="51"/></literal> <operator pos:line="19" pos:column="52">&lt;&lt;<pos:position pos:line="19" pos:column="60"/></operator> <name pos:line="19" pos:column="55">path<pos:position pos:line="19" pos:column="59"/></name> <operator pos:line="19" pos:column="60">&lt;&lt;<pos:position pos:line="19" pos:column="68"/></operator> <literal type="string" pos:line="19" pos:column="63">"' object "<pos:position pos:line="19" pos:column="74"/></literal> <operator pos:line="19" pos:column="75">&lt;&lt;<pos:position pos:line="19" pos:column="83"/></operator>
                   <name pos:line="20" pos:column="20">option<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&lt;&lt;<pos:position pos:line="20" pos:column="35"/></operator> <literal type="string" pos:line="20" pos:column="30">" now "<pos:position pos:line="20" pos:column="37"/></literal> <operator pos:line="20" pos:column="38">&lt;&lt;<pos:position pos:line="20" pos:column="46"/></operator> <name pos:line="20" pos:column="41">size<pos:position pos:line="20" pos:column="45"/></name> <operator pos:line="20" pos:column="46">&lt;&lt;<pos:position pos:line="20" pos:column="54"/></operator> <literal type="string" pos:line="20" pos:column="49">" Bytes"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else <block pos:line="21" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">3<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">DBG_IMPORTANT<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="38">"WARNING: cache_dir '"<pos:position pos:line="22" pos:column="60"/></literal> <operator pos:line="22" pos:column="61">&lt;&lt;<pos:position pos:line="22" pos:column="69"/></operator> <name pos:line="22" pos:column="64">path<pos:position pos:line="22" pos:column="68"/></name> <operator pos:line="22" pos:column="69">&lt;&lt;<pos:position pos:line="22" pos:column="77"/></operator> <literal type="string" pos:line="22" pos:column="72">"' "<pos:position pos:line="22" pos:column="76"/></literal>
                   <literal type="string" pos:line="23" pos:column="20">"object "<pos:position pos:line="23" pos:column="29"/></literal> <operator pos:line="23" pos:column="30">&lt;&lt;<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="33">option<pos:position pos:line="23" pos:column="39"/></name> <operator pos:line="23" pos:column="40">&lt;&lt;<pos:position pos:line="23" pos:column="48"/></operator> <literal type="string" pos:line="23" pos:column="43">" cannot be changed dynamically, "<pos:position pos:line="23" pos:column="77"/></literal> <operator pos:line="23" pos:column="78">&lt;&lt;<pos:position pos:line="23" pos:column="86"/></operator>
                   <literal type="string" pos:line="24" pos:column="20">"value left unchanged ("<pos:position pos:line="24" pos:column="44"/></literal> <operator pos:line="24" pos:column="45">&lt;&lt;<pos:position pos:line="24" pos:column="53"/></operator> <operator pos:line="24" pos:column="48">*<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">val<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">&lt;&lt;<pos:position pos:line="24" pos:column="61"/></operator> <literal type="string" pos:line="24" pos:column="56">" Bytes)"<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><literal type="boolean" pos:line="25" pos:column="20">true<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="29" pos:column="5">*<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">val<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <name pos:line="29" pos:column="12">size<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>

    <return pos:line="31" pos:column="5">return <expr><literal type="boolean" pos:line="31" pos:column="12">true<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

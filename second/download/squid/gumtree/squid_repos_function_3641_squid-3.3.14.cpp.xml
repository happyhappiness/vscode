<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3641_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHdrRange<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">getCanonizedSpecs<pos:position pos:line="2" pos:column="32"/></name></name> <parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name><name pos:line="2" pos:column="34">Vector<pos:position pos:line="2" pos:column="40"/></name><argument_list type="generic" pos:line="2" pos:column="40">&lt;<argument><expr><name pos:line="2" pos:column="41">HttpHdrRangeSpec<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></expr></argument>&gt;<pos:position pos:line="2" pos:column="63"/></argument_list></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">copy<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* canonize each entry and destroy bad ones if any */</comment>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">iterator<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">pos<pos:position pos:line="6" pos:column="22"/></name> <argument_list pos:line="6" pos:column="23">(<argument><expr><call><name pos:line="6" pos:column="24">begin<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></decl>;<pos:position pos:line="6" pos:column="33"/></init> <condition><expr><name pos:line="6" pos:column="34">pos<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">!=<pos:position pos:line="6" pos:column="40"/></operator> <call><name pos:line="6" pos:column="41">end<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">()<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></condition> <incr><expr><operator pos:line="6" pos:column="48">++<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">pos<pos:position pos:line="6" pos:column="53"/></name></expr></incr>)<pos:position pos:line="6" pos:column="54"/></control> <block pos:line="6" pos:column="55">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">pos<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">canonize<pos:position pos:line="7" pos:column="29"/></name></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">clen<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="13">copy<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">push_back<pos:position pos:line="8" pos:column="27"/></name></name> <argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">pos<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt></block></then>
        <else pos:line="9" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="13">delete<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">(<pos:position pos:line="10" pos:column="21"/></operator><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">pos<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></else></if>
    }<pos:position pos:line="11" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">64<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">3<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"HttpHdrRange::getCanonizedSpecs: found "<pos:position pos:line="13" pos:column="60"/></literal> <operator pos:line="13" pos:column="61">&lt;&lt;<pos:position pos:line="13" pos:column="69"/></operator>
           <call><name><name pos:line="14" pos:column="12">specs<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">size<pos:position pos:line="14" pos:column="22"/></name></name><argument_list pos:line="14" pos:column="22">()<pos:position pos:line="14" pos:column="24"/></argument_list></call> <operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator> <call><name><name pos:line="14" pos:column="27">copy<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">.<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">size<pos:position pos:line="14" pos:column="36"/></name></name><argument_list pos:line="14" pos:column="36">()<pos:position pos:line="14" pos:column="38"/></argument_list></call> <operator pos:line="14" pos:column="39">&lt;&lt;<pos:position pos:line="14" pos:column="47"/></operator> <literal type="string" pos:line="14" pos:column="42">" bad specs"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

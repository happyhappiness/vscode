<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4669_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Http<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Stream<pos:position pos:line="1" pos:column="13"/></name></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Server<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">parseOneRequest<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">PROF_start<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">HttpServer_parseOneRequest<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// parser is incremental. Generate new parser state if we,</comment>
    <comment type="line" pos:line="7" pos:column="5">// a) dont have one already</comment>
    <comment type="line" pos:line="8" pos:column="5">// b) have completed the previous request parsing already</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">parser_<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">||<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name><name pos:line="9" pos:column="22">parser_<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">needsMoreData<pos:position pos:line="9" pos:column="44"/></name></name><argument_list pos:line="9" pos:column="44">()<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">parser_<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <operator pos:line="10" pos:column="19">new<pos:position pos:line="10" pos:column="22"/></operator> <call><name><name pos:line="10" pos:column="23">Http1<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">::<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">RequestParser<pos:position pos:line="10" pos:column="43"/></name></name><argument_list pos:line="10" pos:column="43">(<argument><expr><call><name pos:line="10" pos:column="44">mayTunnelUnsupportedProto<pos:position pos:line="10" pos:column="69"/></name><argument_list pos:line="10" pos:column="69">()<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* Process request */</comment>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">Http<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">::<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">Stream<pos:position pos:line="13" pos:column="17"/></name></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">context<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><call><name pos:line="13" pos:column="29">parseHttpRequest<pos:position pos:line="13" pos:column="45"/></name><argument_list pos:line="13" pos:column="45">(<argument><expr><name pos:line="13" pos:column="46">this<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">parser_<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="61"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">PROF_stop<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">HttpServer_parseOneRequest<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">context<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

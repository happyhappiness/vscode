<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6614_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>			<comment type="block" pos:line="1" pos:column="33">/* XXX: arbitrary ordering for non-contiguous masks */</comment>
<name pos:line="2" pos:column="1">rn_lexobetter<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">m_arg<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">void<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">n_arg<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">u_char<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">mp<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">m_arg<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="35">np<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name pos:line="4" pos:column="40">n_arg<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="48">lim<pos:position pos:line="4" pos:column="51"/></name></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">mp<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">&gt;<pos:position pos:line="6" pos:column="17"/></operator> <operator pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">np<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>		<comment type="block" pos:line="7" pos:column="33">/* not really, but need to check longer one first */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">mp<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">np<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
        <block type="pseudo"><for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">lim<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">mp<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">+<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">mp<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></init> <condition><expr><name pos:line="9" pos:column="30">mp<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">&lt;<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="35">lim<pos:position pos:line="9" pos:column="38"/></name></expr>;<pos:position pos:line="9" pos:column="39"/></condition><incr/>)<pos:position pos:line="9" pos:column="40"/></control>
            <block type="pseudo"><if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">mp<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">++<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">&gt;<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">np<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">++<pos:position pos:line="10" pos:column="30"/></operator></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
                <block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if></block></for></block></then></if>
    <return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

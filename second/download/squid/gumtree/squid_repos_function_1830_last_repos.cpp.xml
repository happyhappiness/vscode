<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1830_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">startConnectionOrFail<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">17<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <call><name><name pos:line="4" pos:column="27">entry<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">url<pos:position pos:line="4" pos:column="37"/></name></name><argument_list pos:line="4" pos:column="37">()<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name><name pos:line="6" pos:column="9">serverDestinations<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">.<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">size<pos:position pos:line="6" pos:column="32"/></name></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call> <operator pos:line="6" pos:column="35">&gt;<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <block pos:line="6" pos:column="40">{
        <comment type="line" pos:line="7" pos:column="9">// Ditch error page if it was created before.</comment>
        <comment type="line" pos:line="8" pos:column="9">// A new one will be created if there's another problem</comment>
        <expr_stmt><expr><operator pos:line="9" pos:column="9">delete<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">err<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">NULL<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>

        <comment type="line" pos:line="12" pos:column="9">// Update the logging information about this new server connection.</comment>
        <comment type="line" pos:line="13" pos:column="9">// Done here before anything else so the errors get logged for</comment>
        <comment type="line" pos:line="14" pos:column="9">// this server link regardless of what happens when connecting to it.</comment>
        <comment type="line" pos:line="15" pos:column="9">// IF sucessfuly connected this top destination will become the serverConnection().</comment>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">syncHierNote<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name><name pos:line="16" pos:column="22">serverDestinations<pos:position pos:line="16" pos:column="40"/></name><index pos:line="16" pos:column="40">[<expr><literal type="number" pos:line="16" pos:column="41">0<pos:position pos:line="16" pos:column="42"/></literal></expr>]<pos:position pos:line="16" pos:column="43"/></index></name></expr></argument>, <argument><expr><call><name><name pos:line="16" pos:column="45">request<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">url<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">.<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">host<pos:position pos:line="16" pos:column="62"/></name></name><argument_list pos:line="16" pos:column="62">()<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">request<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">clearError<pos:position pos:line="17" pos:column="28"/></name></name><argument_list pos:line="17" pos:column="28">()<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="19" pos:column="9">connectStart<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">()<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else <block pos:line="20" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">17<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">3<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="23">HERE<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">&lt;&lt;<pos:position pos:line="21" pos:column="36"/></operator> <literal type="string" pos:line="21" pos:column="31">"Connection failed: "<pos:position pos:line="21" pos:column="52"/></literal> <operator pos:line="21" pos:column="53">&lt;&lt;<pos:position pos:line="21" pos:column="61"/></operator> <call><name><name pos:line="21" pos:column="56">entry<pos:position pos:line="21" pos:column="61"/></name><operator pos:line="21" pos:column="61">-&gt;<pos:position pos:line="21" pos:column="66"/></operator><name pos:line="21" pos:column="63">url<pos:position pos:line="21" pos:column="66"/></name></name><argument_list pos:line="21" pos:column="66">()<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">err<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18"> <block pos:line="22" pos:column="19">{
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">ErrorState<pos:position pos:line="23" pos:column="23"/></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier></type><name pos:line="23" pos:column="25">anErr<pos:position pos:line="23" pos:column="30"/></name> <init pos:line="23" pos:column="31">= <expr><operator pos:line="23" pos:column="33">new<pos:position pos:line="23" pos:column="36"/></operator> <call><name pos:line="23" pos:column="37">ErrorState<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><name pos:line="23" pos:column="48">ERR_CANNOT_FORWARD<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="68">Http<pos:position pos:line="23" pos:column="72"/></name><operator pos:line="23" pos:column="72">::<pos:position pos:line="23" pos:column="74"/></operator><name pos:line="23" pos:column="74">scInternalServerError<pos:position pos:line="23" pos:column="95"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="97">request<pos:position pos:line="23" pos:column="104"/></name></expr></argument>)<pos:position pos:line="23" pos:column="105"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="106"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">fail<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">anErr<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if> <comment type="line" pos:line="25" pos:column="11">// else use actual error from last connection attempt</comment>
        <expr_stmt><expr><name pos:line="26" pos:column="9">self<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>       <comment type="line" pos:line="26" pos:column="28">// refcounted</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

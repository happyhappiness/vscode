<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2664_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">htcpSpecifier<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type>
<name pos:line="2" pos:column="1">htcpUnpackSpecifier<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">buf<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">sz<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">htcpSpecifier<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">s<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">new<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">htcpSpecifier<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpRequestMethod<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">method<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Find length of METHOD */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">u_int16_t<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">l<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><call><name pos:line="8" pos:column="19">ntohs<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">u_int16_t<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></operator><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">buf<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">sz<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">-=<pos:position pos:line="9" pos:column="10"/></operator> <literal type="number" pos:line="9" pos:column="11">2<pos:position pos:line="9" pos:column="12"/></literal></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">buf<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">+=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="number" pos:line="10" pos:column="12">2<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">l<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&gt;<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="13">sz<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <block pos:line="12" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">31<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">3<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"htcpUnpackSpecifier: failed to unpack METHOD"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">htcpFreeSpecifier<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">s<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* Set METHOD */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">s<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">method<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">buf<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">buf<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">+=<pos:position pos:line="21" pos:column="11"/></operator> <name pos:line="21" pos:column="12">l<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">sz<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">-=<pos:position pos:line="23" pos:column="10"/></operator> <name pos:line="23" pos:column="11">l<pos:position pos:line="23" pos:column="12"/></name></expr>;<pos:position pos:line="23" pos:column="13"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* Find length of URI */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">l<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">ntohs<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><operator pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></operator><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">u_int16_t<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">*<pos:position pos:line="26" pos:column="28"/></operator><operator pos:line="26" pos:column="28">)<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">buf<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">sz<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">-=<pos:position pos:line="28" pos:column="10"/></operator> <literal type="number" pos:line="28" pos:column="11">2<pos:position pos:line="28" pos:column="12"/></literal></expr>;<pos:position pos:line="28" pos:column="13"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">l<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">&gt;<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="13">sz<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">31<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">3<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"htcpUnpackSpecifier: failed to unpack URI"<pos:position pos:line="31" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">htcpFreeSpecifier<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">s<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">NULL<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* Add terminating null to METHOD */</comment>
    <expr_stmt><expr><operator pos:line="37" pos:column="5">*<pos:position pos:line="37" pos:column="6"/></operator><name pos:line="37" pos:column="6">buf<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <literal type="char" pos:line="37" pos:column="12">'\0'<pos:position pos:line="37" pos:column="16"/></literal></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* Set URI */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">buf<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">+=<pos:position pos:line="40" pos:column="11"/></operator> <literal type="number" pos:line="40" pos:column="12">2<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">s<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">uri<pos:position pos:line="42" pos:column="11"/></name></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">buf<pos:position pos:line="42" pos:column="17"/></name></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="44" pos:column="5">buf<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">+=<pos:position pos:line="44" pos:column="11"/></operator> <name pos:line="44" pos:column="12">l<pos:position pos:line="44" pos:column="13"/></name></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">sz<pos:position pos:line="46" pos:column="7"/></name> <operator pos:line="46" pos:column="8">-=<pos:position pos:line="46" pos:column="10"/></operator> <name pos:line="46" pos:column="11">l<pos:position pos:line="46" pos:column="12"/></name></expr>;<pos:position pos:line="46" pos:column="13"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* Find length of VERSION */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">l<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <call><name pos:line="49" pos:column="9">ntohs<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><operator pos:line="49" pos:column="15">*<pos:position pos:line="49" pos:column="16"/></operator><operator pos:line="49" pos:column="16">(<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">u_int16_t<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">*<pos:position pos:line="49" pos:column="28"/></operator><operator pos:line="49" pos:column="28">)<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">buf<pos:position pos:line="49" pos:column="33"/></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="51" pos:column="5">sz<pos:position pos:line="51" pos:column="7"/></name> <operator pos:line="51" pos:column="8">-=<pos:position pos:line="51" pos:column="10"/></operator> <literal type="number" pos:line="51" pos:column="11">2<pos:position pos:line="51" pos:column="12"/></literal></expr>;<pos:position pos:line="51" pos:column="13"/></expr_stmt>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">l<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">&gt;<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="13">sz<pos:position pos:line="53" pos:column="15"/></name></expr>)<pos:position pos:line="53" pos:column="16"/></condition><then pos:line="53" pos:column="16"> <block pos:line="53" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">31<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="20">3<pos:position pos:line="54" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"htcpUnpackSpecifier: failed to unpack VERSION"<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">htcpFreeSpecifier<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">s<pos:position pos:line="55" pos:column="28"/></name></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">NULL<pos:position pos:line="56" pos:column="20"/></name></expr>;<pos:position pos:line="56" pos:column="21"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/* Add terminating null to URI */</comment>
    <expr_stmt><expr><operator pos:line="60" pos:column="5">*<pos:position pos:line="60" pos:column="6"/></operator><name pos:line="60" pos:column="6">buf<pos:position pos:line="60" pos:column="9"/></name> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator> <literal type="char" pos:line="60" pos:column="12">'\0'<pos:position pos:line="60" pos:column="16"/></literal></expr>;<pos:position pos:line="60" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="62" pos:column="5">/* Set VERSION */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">buf<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">+=<pos:position pos:line="63" pos:column="11"/></operator> <literal type="number" pos:line="63" pos:column="12">2<pos:position pos:line="63" pos:column="13"/></literal></expr>;<pos:position pos:line="63" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="65" pos:column="5">s<pos:position pos:line="65" pos:column="6"/></name><operator pos:line="65" pos:column="6">-&gt;<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="8">version<pos:position pos:line="65" pos:column="15"/></name></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <name pos:line="65" pos:column="18">buf<pos:position pos:line="65" pos:column="21"/></name></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="67" pos:column="5">buf<pos:position pos:line="67" pos:column="8"/></name> <operator pos:line="67" pos:column="9">+=<pos:position pos:line="67" pos:column="11"/></operator> <name pos:line="67" pos:column="12">l<pos:position pos:line="67" pos:column="13"/></name></expr>;<pos:position pos:line="67" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name pos:line="69" pos:column="5">sz<pos:position pos:line="69" pos:column="7"/></name> <operator pos:line="69" pos:column="8">-=<pos:position pos:line="69" pos:column="10"/></operator> <name pos:line="69" pos:column="11">l<pos:position pos:line="69" pos:column="12"/></name></expr>;<pos:position pos:line="69" pos:column="13"/></expr_stmt>

    <comment type="block" pos:line="71" pos:column="5">/* Find length of REQ-HDRS */</comment>
    <expr_stmt><expr><name pos:line="72" pos:column="5">l<pos:position pos:line="72" pos:column="6"/></name> <operator pos:line="72" pos:column="7">=<pos:position pos:line="72" pos:column="8"/></operator> <call><name pos:line="72" pos:column="9">ntohs<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><operator pos:line="72" pos:column="15">*<pos:position pos:line="72" pos:column="16"/></operator><operator pos:line="72" pos:column="16">(<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">u_int16_t<pos:position pos:line="72" pos:column="26"/></name> <operator pos:line="72" pos:column="27">*<pos:position pos:line="72" pos:column="28"/></operator><operator pos:line="72" pos:column="28">)<pos:position pos:line="72" pos:column="29"/></operator> <name pos:line="72" pos:column="30">buf<pos:position pos:line="72" pos:column="33"/></name></expr></argument>)<pos:position pos:line="72" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="74" pos:column="5">sz<pos:position pos:line="74" pos:column="7"/></name> <operator pos:line="74" pos:column="8">-=<pos:position pos:line="74" pos:column="10"/></operator> <literal type="number" pos:line="74" pos:column="11">2<pos:position pos:line="74" pos:column="12"/></literal></expr>;<pos:position pos:line="74" pos:column="13"/></expr_stmt>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">l<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">&gt;<pos:position pos:line="76" pos:column="15"/></operator> <name pos:line="76" pos:column="13">sz<pos:position pos:line="76" pos:column="15"/></name></expr>)<pos:position pos:line="76" pos:column="16"/></condition><then pos:line="76" pos:column="16"> <block pos:line="76" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">debugs<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><literal type="number" pos:line="77" pos:column="16">31<pos:position pos:line="77" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="20">3<pos:position pos:line="77" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="23">"htcpUnpackSpecifier: failed to unpack REQ-HDRS"<pos:position pos:line="77" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">htcpFreeSpecifier<pos:position pos:line="78" pos:column="26"/></name><argument_list pos:line="78" pos:column="26">(<argument><expr><name pos:line="78" pos:column="27">s<pos:position pos:line="78" pos:column="28"/></name></expr></argument>)<pos:position pos:line="78" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">NULL<pos:position pos:line="79" pos:column="20"/></name></expr>;<pos:position pos:line="79" pos:column="21"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="82" pos:column="5">/* Add terminating null to URI */</comment>
    <expr_stmt><expr><operator pos:line="83" pos:column="5">*<pos:position pos:line="83" pos:column="6"/></operator><name pos:line="83" pos:column="6">buf<pos:position pos:line="83" pos:column="9"/></name> <operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator> <literal type="char" pos:line="83" pos:column="12">'\0'<pos:position pos:line="83" pos:column="16"/></literal></expr>;<pos:position pos:line="83" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="85" pos:column="5">/* Set REQ-HDRS */</comment>
    <expr_stmt><expr><name pos:line="86" pos:column="5">buf<pos:position pos:line="86" pos:column="8"/></name> <operator pos:line="86" pos:column="9">+=<pos:position pos:line="86" pos:column="11"/></operator> <literal type="number" pos:line="86" pos:column="12">2<pos:position pos:line="86" pos:column="13"/></literal></expr>;<pos:position pos:line="86" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="88" pos:column="5">s<pos:position pos:line="88" pos:column="6"/></name><operator pos:line="88" pos:column="6">-&gt;<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="8">req_hdrs<pos:position pos:line="88" pos:column="16"/></name></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">buf<pos:position pos:line="88" pos:column="22"/></name></expr>;<pos:position pos:line="88" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="90" pos:column="5">buf<pos:position pos:line="90" pos:column="8"/></name> <operator pos:line="90" pos:column="9">+=<pos:position pos:line="90" pos:column="11"/></operator> <name pos:line="90" pos:column="12">l<pos:position pos:line="90" pos:column="13"/></name></expr>;<pos:position pos:line="90" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name pos:line="92" pos:column="5">sz<pos:position pos:line="92" pos:column="7"/></name> <operator pos:line="92" pos:column="8">-=<pos:position pos:line="92" pos:column="10"/></operator> <name pos:line="92" pos:column="11">l<pos:position pos:line="92" pos:column="12"/></name></expr>;<pos:position pos:line="92" pos:column="13"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="94" pos:column="5">debugs<pos:position pos:line="94" pos:column="11"/></name><argument_list pos:line="94" pos:column="11">(<argument><expr><literal type="number" pos:line="94" pos:column="12">31<pos:position pos:line="94" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="16">3<pos:position pos:line="94" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="19">"htcpUnpackSpecifier: "<pos:position pos:line="94" pos:column="42"/></literal> <operator pos:line="94" pos:column="43">&lt;&lt;<pos:position pos:line="94" pos:column="51"/></operator> <name pos:line="94" pos:column="46">sz<pos:position pos:line="94" pos:column="48"/></name> <operator pos:line="94" pos:column="49">&lt;&lt;<pos:position pos:line="94" pos:column="57"/></operator> <literal type="string" pos:line="94" pos:column="52">" bytes left"<pos:position pos:line="94" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="96" pos:column="5">/*
     * Add terminating null to REQ-HDRS. This is possible because we allocated
     * an extra byte when we received the packet. This will overwrite any following
     * AUTH block.
     */</comment>
    <expr_stmt><expr><operator pos:line="101" pos:column="5">*<pos:position pos:line="101" pos:column="6"/></operator><name pos:line="101" pos:column="6">buf<pos:position pos:line="101" pos:column="9"/></name> <operator pos:line="101" pos:column="10">=<pos:position pos:line="101" pos:column="11"/></operator> <literal type="char" pos:line="101" pos:column="12">'\0'<pos:position pos:line="101" pos:column="16"/></literal></expr>;<pos:position pos:line="101" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="103" pos:column="5">/*
     * Parse the request
     */</comment>
    <expr_stmt><expr><name pos:line="106" pos:column="5">method<pos:position pos:line="106" pos:column="11"/></name> <operator pos:line="106" pos:column="12">=<pos:position pos:line="106" pos:column="13"/></operator> <call><name pos:line="106" pos:column="14">HttpRequestMethod<pos:position pos:line="106" pos:column="31"/></name><argument_list pos:line="106" pos:column="31">(<argument><expr><name><name pos:line="106" pos:column="32">s<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">-&gt;<pos:position pos:line="106" pos:column="38"/></operator><name pos:line="106" pos:column="35">method<pos:position pos:line="106" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="43">NULL<pos:position pos:line="106" pos:column="47"/></name></expr></argument>)<pos:position pos:line="106" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="108" pos:column="5">s<pos:position pos:line="108" pos:column="6"/></name><operator pos:line="108" pos:column="6">-&gt;<pos:position pos:line="108" pos:column="11"/></operator><name pos:line="108" pos:column="8">request<pos:position pos:line="108" pos:column="15"/></name></name> <operator pos:line="108" pos:column="16">=<pos:position pos:line="108" pos:column="17"/></operator> <call><name><name pos:line="108" pos:column="18">HttpRequest<pos:position pos:line="108" pos:column="29"/></name><operator pos:line="108" pos:column="29">::<pos:position pos:line="108" pos:column="31"/></operator><name pos:line="108" pos:column="31">CreateFromUrlAndMethod<pos:position pos:line="108" pos:column="53"/></name></name><argument_list pos:line="108" pos:column="53">(<argument><expr><name><name pos:line="108" pos:column="54">s<pos:position pos:line="108" pos:column="55"/></name><operator pos:line="108" pos:column="55">-&gt;<pos:position pos:line="108" pos:column="60"/></operator><name pos:line="108" pos:column="57">uri<pos:position pos:line="108" pos:column="60"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="108" pos:column="62">method<pos:position pos:line="108" pos:column="68"/></name> <operator pos:line="108" pos:column="69">==<pos:position pos:line="108" pos:column="71"/></operator> <name pos:line="108" pos:column="72">METHOD_NONE<pos:position pos:line="108" pos:column="83"/></name></expr> ?<pos:position pos:line="108" pos:column="85"/></condition><then pos:line="108" pos:column="85"> <expr><call><name pos:line="108" pos:column="86">HttpRequestMethod<pos:position pos:line="108" pos:column="103"/></name><argument_list pos:line="108" pos:column="103">(<argument><expr><name pos:line="108" pos:column="104">METHOD_GET<pos:position pos:line="108" pos:column="114"/></name></expr></argument>)<pos:position pos:line="108" pos:column="115"/></argument_list></call></expr> <pos:position pos:line="108" pos:column="116"/></then><else pos:line="108" pos:column="116">: <expr><name pos:line="108" pos:column="118">method<pos:position pos:line="108" pos:column="124"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="108" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="126"/></expr_stmt>

    <if pos:line="110" pos:column="5">if <condition pos:line="110" pos:column="8">(<expr><name><name pos:line="110" pos:column="9">s<pos:position pos:line="110" pos:column="10"/></name><operator pos:line="110" pos:column="10">-&gt;<pos:position pos:line="110" pos:column="15"/></operator><name pos:line="110" pos:column="12">request<pos:position pos:line="110" pos:column="19"/></name></name></expr>)<pos:position pos:line="110" pos:column="20"/></condition><then pos:line="110" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="9">HTTPMSGLOCK<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name><name pos:line="111" pos:column="21">s<pos:position pos:line="111" pos:column="22"/></name><operator pos:line="111" pos:column="22">-&gt;<pos:position pos:line="111" pos:column="27"/></operator><name pos:line="111" pos:column="24">request<pos:position pos:line="111" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="33"/></expr_stmt></block></then></if>

    <return pos:line="113" pos:column="5">return <expr><name pos:line="113" pos:column="12">s<pos:position pos:line="113" pos:column="13"/></name></expr>;<pos:position pos:line="113" pos:column="14"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

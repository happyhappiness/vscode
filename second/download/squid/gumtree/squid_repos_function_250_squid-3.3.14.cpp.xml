<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_250_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">wchar_t<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier><modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name pos:line="2" pos:column="1">build_groups_DN_array<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">array<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">userdomain<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">wchar_t<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">wc<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">wcsize<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">source_group_format<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">Group<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><name pos:line="7" pos:column="16">GNLEN<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">+<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr>]<pos:position pos:line="7" pos:column="26"/></index></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">wchar_t<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier><modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">wc_array<pos:position pos:line="9" pos:column="23"/></name></decl>, <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier><modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="27">entry<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">entry<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">wc_array<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">wchar_t<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">*<pos:position pos:line="11" pos:column="34"/></operator><operator pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></operator><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator> <call><name pos:line="11" pos:column="37">xmalloc<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><operator pos:line="11" pos:column="45">(<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">numberofgroups<pos:position pos:line="11" pos:column="60"/></name> <operator pos:line="11" pos:column="61">+<pos:position pos:line="11" pos:column="62"/></operator> <literal type="number" pos:line="11" pos:column="63">1<pos:position pos:line="11" pos:column="64"/></literal><operator pos:line="11" pos:column="64">)<pos:position pos:line="11" pos:column="65"/></operator> <operator pos:line="11" pos:column="66">*<pos:position pos:line="11" pos:column="67"/></operator> <sizeof pos:line="11" pos:column="68">sizeof<argument_list pos:line="11" pos:column="74">(<argument><expr><name pos:line="11" pos:column="75">wchar_t<pos:position pos:line="11" pos:column="82"/></name> <operator pos:line="11" pos:column="83">*<pos:position pos:line="11" pos:column="84"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="87"/></expr_stmt>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">array<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition> <block pos:line="13" pos:column="20">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">strchr<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">array<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="28">'/'<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call> <operator pos:line="14" pos:column="33">!=<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">NULL<pos:position pos:line="14" pos:column="40"/></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <block pos:line="14" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">strncpy<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">Group<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">array<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">GNLEN<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">source_group_format<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">ADS_NAME_TYPE_CANONICAL<pos:position pos:line="16" pos:column="58"/></name></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else <block pos:line="17" pos:column="16">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">source_group_format<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">=<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">ADS_NAME_TYPE_NT4<pos:position pos:line="18" pos:column="52"/></name></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">strchr<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">array<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="32">'\\'<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call> <operator pos:line="19" pos:column="38">==<pos:position pos:line="19" pos:column="40"/></operator> <name pos:line="19" pos:column="41">NULL<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46"> <block pos:line="19" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">strcpy<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">Group<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">userdomain<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">strcat<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">Group<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"\\"<pos:position pos:line="21" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">strncat<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">Group<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="32">*<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">array<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">GNLEN<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">-<pos:position pos:line="22" pos:column="47"/></operator> <sizeof pos:line="22" pos:column="48">sizeof<argument_list pos:line="22" pos:column="54">(<argument><expr><name pos:line="22" pos:column="55">userdomain<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></sizeof> <operator pos:line="22" pos:column="67">-<pos:position pos:line="22" pos:column="68"/></operator> <literal type="number" pos:line="22" pos:column="69">1<pos:position pos:line="22" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then> <else pos:line="23" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">strncpy<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">Group<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="32">*<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">array<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">GNLEN<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt></block></else></if>
        }<pos:position pos:line="25" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="27" pos:column="9">wcsize<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">MultiByteToWideChar<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">CP_ACP<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="46">0<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">Group<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="56">-<pos:position pos:line="27" pos:column="57"/></operator><literal type="number" pos:line="27" pos:column="57">1<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">wc<pos:position pos:line="27" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="64">0<pos:position pos:line="27" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">wc<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">wchar_t<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">xmalloc<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">wcsize<pos:position pos:line="28" pos:column="40"/></name> <operator pos:line="28" pos:column="41">*<pos:position pos:line="28" pos:column="42"/></operator> <sizeof pos:line="28" pos:column="43">sizeof<argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">wchar_t<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">MultiByteToWideChar<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">CP_ACP<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">Group<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="47">-<pos:position pos:line="29" pos:column="48"/></operator><literal type="number" pos:line="29" pos:column="48">1<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">wc<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">wcsize<pos:position pos:line="29" pos:column="61"/></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">entry<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">My_NameTranslate<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">wc<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">source_group_format<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">ADS_NAME_TYPE_1779<pos:position pos:line="30" pos:column="78"/></name></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">safe_free<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">wc<pos:position pos:line="31" pos:column="21"/></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="32" pos:column="9">++<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">array<pos:position pos:line="32" pos:column="16"/></name></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">entry<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">==<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">NULL<pos:position pos:line="33" pos:column="27"/></name></expr>)<pos:position pos:line="33" pos:column="28"/></condition><then pos:line="33" pos:column="28"> <block pos:line="33" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debug<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">"build_groups_DN_array: cannot get DN for '%s'.\n"<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="71">Group<pos:position pos:line="34" pos:column="76"/></name></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
            <continue pos:line="35" pos:column="13">continue;<pos:position pos:line="35" pos:column="22"/></continue>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">++<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">entry<pos:position pos:line="37" pos:column="16"/></name></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">entry<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <name pos:line="39" pos:column="14">NULL<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">wc_array<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

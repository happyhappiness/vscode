<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4265_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">asnFreeMemory<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">squid_rn_walktree<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">AS_tree_head<pos:position pos:line="4" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="37">destroyRadixNode<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="55">AS_tree_head<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">destroyRadixNode<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator>struct <name pos:line="6" pos:column="30">squid_radix_node<pos:position pos:line="6" pos:column="46"/></name> <operator pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></operator><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator> <literal type="number" pos:line="6" pos:column="50">0<pos:position pos:line="6" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="53">(<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">void<pos:position pos:line="6" pos:column="58"/></name> <operator pos:line="6" pos:column="59">*<pos:position pos:line="6" pos:column="60"/></operator><operator pos:line="6" pos:column="60">)<pos:position pos:line="6" pos:column="61"/></operator> <name pos:line="6" pos:column="62">AS_tree_head<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="76"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

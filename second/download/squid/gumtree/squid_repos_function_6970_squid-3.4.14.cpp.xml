<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6970_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">CpuAnd<pos:position pos:line="2" pos:column="7"/></name><parameter_list pos:line="2" pos:column="7">(<parameter><decl><type><name pos:line="2" pos:column="8">cpu_set_t<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">destset<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">cpu_set_t<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">srcset1<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">cpu_set_t<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">srcset2<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="25">CPU_SETSIZE<pos:position pos:line="4" pos:column="36"/></name></expr>;<pos:position pos:line="4" pos:column="37"/></condition> <incr><expr><operator pos:line="4" pos:column="38">++<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">i<pos:position pos:line="4" pos:column="41"/></name></expr></incr>)<pos:position pos:line="4" pos:column="42"/></control> <block pos:line="4" pos:column="43">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">CPU_ISSET<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">i<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">srcset1<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call> <operator pos:line="5" pos:column="35">&amp;&amp;<pos:position pos:line="5" pos:column="45"/></operator> <call><name pos:line="5" pos:column="38">CPU_ISSET<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">(<argument><expr><name pos:line="5" pos:column="48">i<pos:position pos:line="5" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="51">srcset2<pos:position pos:line="5" pos:column="58"/></name></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="60"/></condition><then pos:line="5" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="13">CPU_SET<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">destset<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt></block></then>
        <else pos:line="7" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="13">CPU_CLR<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="24">destset<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt></block></else></if>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

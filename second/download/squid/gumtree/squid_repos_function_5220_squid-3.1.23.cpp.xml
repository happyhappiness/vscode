<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5220_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">aio_close<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">fd<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">CloseHandle<pos:position pos:line="3" pos:column="16"/></name><argument_list pos:line="3" pos:column="16">(<argument><expr><operator pos:line="3" pos:column="17">(<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">HANDLE<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">)<pos:position pos:line="3" pos:column="25"/></operator><call><name pos:line="3" pos:column="25">_get_osfhandle<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name pos:line="3" pos:column="40">fd<pos:position pos:line="3" pos:column="42"/></name></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">fd_close<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><name pos:line="4" pos:column="14">fd<pos:position pos:line="4" pos:column="16"/></name></expr></argument>)<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">statCounter<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">syscalls<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">disk<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">closes<pos:position pos:line="5" pos:column="37"/></name></name><operator pos:line="5" pos:column="37">++<pos:position pos:line="5" pos:column="39"/></operator></expr>;<pos:position pos:line="5" pos:column="40"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

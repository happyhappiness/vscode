<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1653_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FileMap<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">grow<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">()<pos:position pos:line="2" pos:column="16"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">old_sz<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">nwords<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></operator> <sizeof pos:line="4" pos:column="27">sizeof<argument_list pos:line="4" pos:column="33">(<argument><expr><operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">bitmap<pos:position pos:line="4" pos:column="41"/></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">old_map<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">bitmap<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">capacity_<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">&lt;&lt;=<pos:position pos:line="6" pos:column="24"/></operator> <literal type="number" pos:line="6" pos:column="19">1<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">capacity_<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">&lt;=<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <literal type="number" pos:line="7" pos:column="31">24<pos:position pos:line="7" pos:column="33"/></literal><operator pos:line="7" pos:column="33">)<pos:position pos:line="7" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt> <comment type="block" pos:line="7" pos:column="37">/* swap_filen is 25 bits, signed */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">nwords<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">capacity_<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">&gt;&gt;<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="27">LONG_BIT_SHIFT<pos:position pos:line="8" pos:column="41"/></name></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">8<pos:position pos:line="9" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="15">3<pos:position pos:line="9" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="18">HERE<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;&lt;<pos:position pos:line="9" pos:column="31"/></operator> <literal type="string" pos:line="9" pos:column="26">" creating space for "<pos:position pos:line="9" pos:column="48"/></literal> <operator pos:line="9" pos:column="49">&lt;&lt;<pos:position pos:line="9" pos:column="57"/></operator> <name pos:line="9" pos:column="52">capacity_<pos:position pos:line="9" pos:column="61"/></name> <operator pos:line="9" pos:column="62">&lt;&lt;<pos:position pos:line="9" pos:column="70"/></operator> <literal type="string" pos:line="9" pos:column="65">" files"<pos:position pos:line="9" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">8<pos:position pos:line="10" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="15">5<pos:position pos:line="10" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="18">"--&gt; "<pos:position pos:line="10" pos:column="27"/></literal> <operator pos:line="10" pos:column="25">&lt;&lt;<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="28">nwords<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">&lt;&lt;<pos:position pos:line="10" pos:column="43"/></operator> <literal type="string" pos:line="10" pos:column="38">" words of "<pos:position pos:line="10" pos:column="50"/></literal> <operator pos:line="10" pos:column="51">&lt;&lt;<pos:position pos:line="10" pos:column="59"/></operator> <sizeof pos:line="10" pos:column="54">sizeof<argument_list pos:line="10" pos:column="60">(<argument><expr><operator pos:line="10" pos:column="61">*<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="62">bitmap<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></sizeof> <operator pos:line="10" pos:column="70">&lt;&lt;<pos:position pos:line="10" pos:column="78"/></operator> <literal type="string" pos:line="10" pos:column="73">" bytes each"<pos:position pos:line="10" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">bitmap<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">unsigned<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">long<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator><call><name pos:line="11" pos:column="31">xcalloc<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">nwords<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="47">sizeof<argument_list pos:line="11" pos:column="53">(<argument><expr><operator pos:line="11" pos:column="54">*<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">bitmap<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">8<pos:position pos:line="12" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="15">3<pos:position pos:line="12" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="18">"copying "<pos:position pos:line="12" pos:column="28"/></literal> <operator pos:line="12" pos:column="29">&lt;&lt;<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="32">old_sz<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">&lt;&lt;<pos:position pos:line="12" pos:column="47"/></operator> <literal type="string" pos:line="12" pos:column="42">" old bytes"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memcpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">bitmap<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">old_map<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">old_sz<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">xfree<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">old_map<pos:position pos:line="14" pos:column="18"/></name></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* XXX account fm-&gt;bitmap */</comment>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

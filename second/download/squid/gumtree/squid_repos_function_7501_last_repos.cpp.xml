<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7501_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">processNewRequest<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">Ssl<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">CrtdMessage<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">&amp;<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="50">request_message<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="67">std<pos:position pos:line="1" pos:column="70"/></name><operator pos:line="1" pos:column="70">::<pos:position pos:line="1" pos:column="72"/></operator><name pos:line="1" pos:column="72">string<pos:position pos:line="1" pos:column="78"/></name></name> <specifier pos:line="1" pos:column="79">const<pos:position pos:line="1" pos:column="84"/></specifier> <modifier pos:line="1" pos:column="85">&amp;<pos:position pos:line="1" pos:column="90"/></modifier></type> <name pos:line="1" pos:column="87">db_path<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="96">size_t<pos:position pos:line="1" pos:column="102"/></name></type> <name pos:line="1" pos:column="103">max_db_size<pos:position pos:line="1" pos:column="114"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="116">size_t<pos:position pos:line="1" pos:column="122"/></name></type> <name pos:line="1" pos:column="123">fs_block_size<pos:position pos:line="1" pos:column="136"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="137"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">Ssl<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">CertificateProperties<pos:position pos:line="3" pos:column="31"/></name></name></type> <name pos:line="3" pos:column="32">certProperties<pos:position pos:line="3" pos:column="46"/></name></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">string<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">error<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">request_message<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">parseRequest<pos:position pos:line="5" pos:column="38"/></name></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">certProperties<pos:position pos:line="5" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="55">error<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="62"/></condition><then pos:line="5" pos:column="62">
        <block type="pseudo"><throw pos:line="6" pos:column="9">throw <expr><call><name><name pos:line="6" pos:column="15">std<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">runtime_error<pos:position pos:line="6" pos:column="33"/></name></name><argument_list pos:line="6" pos:column="33">(<argument><expr><literal type="string" pos:line="6" pos:column="34">"Error while parsing the crtd request: "<pos:position pos:line="6" pos:column="74"/></literal> <operator pos:line="6" pos:column="75">+<pos:position pos:line="6" pos:column="76"/></operator> <name pos:line="6" pos:column="77">error<pos:position pos:line="6" pos:column="82"/></name></expr></argument>)<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="84"/></throw></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">Ssl<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">::<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">CertificateDb<pos:position pos:line="8" pos:column="23"/></name></name></type> <name pos:line="8" pos:column="24">db<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">db_path<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">max_db_size<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">fs_block_size<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Security<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">::<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">CertPointer<pos:position pos:line="10" pos:column="26"/></name></name></type> <name pos:line="10" pos:column="27">cert<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">Ssl<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">::<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">EVP_PKEY_Pointer<pos:position pos:line="11" pos:column="26"/></name></name></type> <name pos:line="11" pos:column="27">pkey<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">std<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">::<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">string<pos:position pos:line="12" pos:column="16"/></name></name> <modifier pos:line="12" pos:column="17">&amp;<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="18">cert_subject<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><call><name><name pos:line="12" pos:column="33">certProperties<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">dbKey<pos:position pos:line="12" pos:column="53"/></name></name><argument_list pos:line="12" pos:column="53">()<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="56"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">bool<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">dbFailed<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><literal type="boolean" pos:line="14" pos:column="21">false<pos:position pos:line="14" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
    <try pos:line="15" pos:column="5">try <block pos:line="15" pos:column="9">{
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">db<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">find<pos:position pos:line="16" pos:column="16"/></name></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">cert_subject<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">cert<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">pkey<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block> <catch pos:line="17" pos:column="7">catch <parameter_list pos:line="17" pos:column="13">(<parameter><decl><type><name><name pos:line="17" pos:column="14">std<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">::<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">runtime_error<pos:position pos:line="17" pos:column="32"/></name></name> <modifier pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></modifier></type><name pos:line="17" pos:column="34">err<pos:position pos:line="17" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="17" pos:column="38"/></parameter_list> <block pos:line="17" pos:column="39">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">dbFailed<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="boolean" pos:line="18" pos:column="20">true<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">error<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name><name pos:line="19" pos:column="17">err<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">what<pos:position pos:line="19" pos:column="25"/></name></name><argument_list pos:line="19" pos:column="25">()<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></catch></try>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">cert<pos:position pos:line="22" pos:column="13"/></name></expr>)<pos:position pos:line="22" pos:column="14"/></condition><then pos:line="22" pos:column="14"> <block pos:line="22" pos:column="15">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name><name pos:line="23" pos:column="14">Ssl<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">::<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">certificateMatchesProperties<pos:position pos:line="23" pos:column="47"/></name></name><argument_list pos:line="23" pos:column="47">(<argument><expr><call><name><name pos:line="23" pos:column="48">cert<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">.<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">get<pos:position pos:line="23" pos:column="56"/></name></name><argument_list pos:line="23" pos:column="56">()<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">certProperties<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="76"/></condition><then pos:line="23" pos:column="76"> <block pos:line="23" pos:column="77">{
            <comment type="line" pos:line="24" pos:column="13">// The certificate changed (renewed or other reason).</comment>
            <comment type="line" pos:line="25" pos:column="13">// Generete a new one with the updated fields.</comment>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">cert<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">reset<pos:position pos:line="26" pos:column="23"/></name></name><argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">pkey<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">reset<pos:position pos:line="27" pos:column="23"/></name></name><argument_list pos:line="27" pos:column="23">()<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">db<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">.<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">purgeCert<pos:position pos:line="28" pos:column="25"/></name></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">cert_subject<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">cert<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">||<pos:position pos:line="32" pos:column="17"/></operator> <operator pos:line="32" pos:column="18">!<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">pkey<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24"> <block pos:line="32" pos:column="25">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name><name pos:line="33" pos:column="14">Ssl<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">::<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">generateSslCertificate<pos:position pos:line="33" pos:column="41"/></name></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">cert<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">pkey<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">certProperties<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="70"/></condition><then pos:line="33" pos:column="70">
            <block type="pseudo"><throw pos:line="34" pos:column="13">throw <expr><call><name><name pos:line="34" pos:column="19">std<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">::<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">runtime_error<pos:position pos:line="34" pos:column="37"/></name></name><argument_list pos:line="34" pos:column="37">(<argument><expr><literal type="string" pos:line="34" pos:column="38">"Cannot create ssl certificate or private key."<pos:position pos:line="34" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="87"/></throw></block></then></if>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">dbFailed<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&amp;&amp;<pos:position pos:line="36" pos:column="33"/></operator> <call><name><name pos:line="36" pos:column="26">db<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">.<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">IsEnabledDiskStore<pos:position pos:line="36" pos:column="47"/></name></name><argument_list pos:line="36" pos:column="47">()<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50"> <block pos:line="36" pos:column="51">{
            <try pos:line="37" pos:column="13">try <block pos:line="37" pos:column="17">{
                <if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><call><name><name pos:line="38" pos:column="22">db<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">.<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">addCertAndPrivateKey<pos:position pos:line="38" pos:column="45"/></name></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">cert<pos:position pos:line="38" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">pkey<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">cert_subject<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="72"/></condition><then pos:line="38" pos:column="72"> <block pos:line="38" pos:column="73">{
                    <expr_stmt><expr><name pos:line="39" pos:column="21">dbFailed<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="boolean" pos:line="39" pos:column="32">true<pos:position pos:line="39" pos:column="36"/></literal></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="40" pos:column="21">error<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="string" pos:line="40" pos:column="29">"Cannot add certificate to db."<pos:position pos:line="40" pos:column="60"/></literal></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="41" pos:column="18"/></block></then></if>
            }<pos:position pos:line="42" pos:column="14"/></block> <catch pos:line="42" pos:column="15">catch <parameter_list pos:line="42" pos:column="21">(<parameter><decl><type><specifier pos:line="42" pos:column="22">const<pos:position pos:line="42" pos:column="27"/></specifier> <name><name pos:line="42" pos:column="28">std<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">::<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">runtime_error<pos:position pos:line="42" pos:column="46"/></name></name> <modifier pos:line="42" pos:column="47">&amp;<pos:position pos:line="42" pos:column="52"/></modifier></type><name pos:line="42" pos:column="48">err<pos:position pos:line="42" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="42" pos:column="52"/></parameter_list> <block pos:line="42" pos:column="53">{
                <expr_stmt><expr><name pos:line="43" pos:column="17">dbFailed<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <literal type="boolean" pos:line="43" pos:column="28">true<pos:position pos:line="43" pos:column="32"/></literal></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="44" pos:column="17">error<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <call><name><name pos:line="44" pos:column="25">err<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">what<pos:position pos:line="44" pos:column="33"/></name></name><argument_list pos:line="44" pos:column="33">()<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></catch></try>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">dbFailed<pos:position pos:line="49" pos:column="17"/></name></expr>)<pos:position pos:line="49" pos:column="18"/></condition><then pos:line="49" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="9">std<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">::<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">cerr<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">&lt;&lt;<pos:position pos:line="50" pos:column="27"/></operator> <literal type="string" pos:line="50" pos:column="22">"security_file_certgen helper database '"<pos:position pos:line="50" pos:column="63"/></literal> <operator pos:line="50" pos:column="64">&lt;&lt;<pos:position pos:line="50" pos:column="72"/></operator> <name pos:line="50" pos:column="67">db_path<pos:position pos:line="50" pos:column="74"/></name>  <operator pos:line="50" pos:column="76">&lt;&lt;<pos:position pos:line="50" pos:column="84"/></operator> <literal type="string" pos:line="50" pos:column="79">"' failed: "<pos:position pos:line="50" pos:column="91"/></literal> <operator pos:line="50" pos:column="92">&lt;&lt;<pos:position pos:line="50" pos:column="100"/></operator> <name pos:line="50" pos:column="95">error<pos:position pos:line="50" pos:column="100"/></name> <operator pos:line="50" pos:column="101">&lt;&lt;<pos:position pos:line="50" pos:column="109"/></operator> <name><name pos:line="50" pos:column="104">std<pos:position pos:line="50" pos:column="107"/></name><operator pos:line="50" pos:column="107">::<pos:position pos:line="50" pos:column="109"/></operator><name pos:line="50" pos:column="109">endl<pos:position pos:line="50" pos:column="113"/></name></name></expr>;<pos:position pos:line="50" pos:column="114"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="52" pos:column="5">std<pos:position pos:line="52" pos:column="8"/></name><operator pos:line="52" pos:column="8">::<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">string<pos:position pos:line="52" pos:column="16"/></name></name></type> <name pos:line="52" pos:column="17">bufferToWrite<pos:position pos:line="52" pos:column="30"/></name></decl>;<pos:position pos:line="52" pos:column="31"/></decl_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">!<pos:position pos:line="53" pos:column="10"/></operator><call><name><name pos:line="53" pos:column="10">Ssl<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">::<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">writeCertAndPrivateKeyToMemory<pos:position pos:line="53" pos:column="45"/></name></name><argument_list pos:line="53" pos:column="45">(<argument><expr><name pos:line="53" pos:column="46">cert<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">pkey<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="58">bufferToWrite<pos:position pos:line="53" pos:column="71"/></name></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="73"/></condition><then pos:line="53" pos:column="73">
        <block type="pseudo"><throw pos:line="54" pos:column="9">throw <expr><call><name><name pos:line="54" pos:column="15">std<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">::<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">runtime_error<pos:position pos:line="54" pos:column="33"/></name></name><argument_list pos:line="54" pos:column="33">(<argument><expr><literal type="string" pos:line="54" pos:column="34">"Cannot write ssl certificate or/and private key to memory."<pos:position pos:line="54" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="96"/></throw></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="56" pos:column="5">Ssl<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">::<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">CrtdMessage<pos:position pos:line="56" pos:column="21"/></name></name></type> <name pos:line="56" pos:column="22">response_message<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name><name pos:line="56" pos:column="39">Ssl<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">::<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="44">CrtdMessage<pos:position pos:line="56" pos:column="55"/></name><operator pos:line="56" pos:column="55">::<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="57">REPLY<pos:position pos:line="56" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></decl>;<pos:position pos:line="56" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="57" pos:column="5">response_message<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">.<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">setCode<pos:position pos:line="57" pos:column="29"/></name></name><argument_list pos:line="57" pos:column="29">(<argument><expr><literal type="string" pos:line="57" pos:column="30">"OK"<pos:position pos:line="57" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="58" pos:column="5">response_message<pos:position pos:line="58" pos:column="21"/></name><operator pos:line="58" pos:column="21">.<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">setBody<pos:position pos:line="58" pos:column="29"/></name></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">bufferToWrite<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>

    <comment type="line" pos:line="60" pos:column="5">// Use the '\1' char as end-of-message character</comment>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">std<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">::<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">cout<pos:position pos:line="61" pos:column="14"/></name></name> <operator pos:line="61" pos:column="15">&lt;&lt;<pos:position pos:line="61" pos:column="23"/></operator> <call><name><name pos:line="61" pos:column="18">response_message<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">.<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="35">compose<pos:position pos:line="61" pos:column="42"/></name></name><argument_list pos:line="61" pos:column="42">()<pos:position pos:line="61" pos:column="44"/></argument_list></call> <operator pos:line="61" pos:column="45">&lt;&lt;<pos:position pos:line="61" pos:column="53"/></operator> <literal type="char" pos:line="61" pos:column="48">'\1'<pos:position pos:line="61" pos:column="52"/></literal> <operator pos:line="61" pos:column="53">&lt;&lt;<pos:position pos:line="61" pos:column="61"/></operator> <name><name pos:line="61" pos:column="56">std<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">::<pos:position pos:line="61" pos:column="61"/></operator><name pos:line="61" pos:column="61">flush<pos:position pos:line="61" pos:column="66"/></name></name></expr>;<pos:position pos:line="61" pos:column="67"/></expr_stmt>

    <return pos:line="63" pos:column="5">return <expr><literal type="boolean" pos:line="63" pos:column="12">true<pos:position pos:line="63" pos:column="16"/></literal></expr>;<pos:position pos:line="63" pos:column="17"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5372_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">esiTry<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">provideData<pos:position pos:line="2" pos:column="20"/></name></name> <parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">ESISegment<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">Pointer<pos:position pos:line="2" pos:column="41"/></name></name></type> <name pos:line="2" pos:column="42">data<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">ESIElement<pos:position pos:line="2" pos:column="58"/></name><modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type> <name pos:line="2" pos:column="60">source<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">source<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">==<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">attempt<pos:position pos:line="4" pos:column="26"/></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <block pos:line="4" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="5" pos:column="9">flags<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">.<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">attemptok<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">=<pos:position pos:line="5" pos:column="26"/></operator> <literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">parent<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">provideData<pos:position pos:line="6" pos:column="28"/></name></name> <argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">data<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">this<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <elseif pos:line="7" pos:column="7">else <if pos:line="7" pos:column="12">if <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">source<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">==<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">except<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33"> <block pos:line="7" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">flags<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">exceptok<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">exceptbuffer<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">==<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">ESISegment<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">::<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">ListTransfer<pos:position pos:line="10" pos:column="33"/></name></name> <argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">data<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">exceptbuffer<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">notifyParent<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">()<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1995_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerProbeConnectDone<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name><name pos:line="2" pos:column="28">Comm<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">ConnectionPointer<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">conn<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="59">Comm<pos:position pos:line="2" pos:column="63"/></name><operator pos:line="2" pos:column="63">::<pos:position pos:line="2" pos:column="65"/></operator><name pos:line="2" pos:column="65">Flag<pos:position pos:line="2" pos:column="69"/></name></name></type> <name pos:line="2" pos:column="70">status<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="78">int<pos:position pos:line="2" pos:column="81"/></name></type> <name pos:line="2" pos:column="82">xerrno<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="90">void<pos:position pos:line="2" pos:column="94"/></name> <modifier pos:line="2" pos:column="95">*<pos:position pos:line="2" pos:column="96"/></modifier></type><name pos:line="2" pos:column="96">data<pos:position pos:line="2" pos:column="100"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="101"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">p<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><operator pos:line="4" pos:column="20">(<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">CachePeer<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator><operator pos:line="4" pos:column="31">)<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">data<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">==<pos:position pos:line="6" pos:column="18"/></operator> <name><name pos:line="6" pos:column="19">Comm<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">::<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">OK<pos:position pos:line="6" pos:column="27"/></name></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">peerConnectSucceded<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">p<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then> <else pos:line="8" pos:column="7">else <block pos:line="8" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">peerConnectFailedSilent<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">p<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="12" pos:column="5">--<pos:position pos:line="12" pos:column="7"/></operator> <name><name pos:line="12" pos:column="8">p<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">testing_now<pos:position pos:line="12" pos:column="22"/></name></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">conn<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">close<pos:position pos:line="13" pos:column="16"/></name></name><argument_list pos:line="13" pos:column="16">()<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
    <comment type="line" pos:line="14" pos:column="5">// TODO: log this traffic.</comment>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

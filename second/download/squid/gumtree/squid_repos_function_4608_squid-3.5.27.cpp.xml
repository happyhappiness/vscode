<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4608_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CertificateDb<pos:position pos:line="1" pos:column="24"/></name><operator pos:line="1" pos:column="24">::<pos:position pos:line="1" pos:column="26"/></operator><name pos:line="1" pos:column="26">subSize<pos:position pos:line="1" pos:column="33"/></name></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">std<pos:position pos:line="1" pos:column="37"/></name><operator pos:line="1" pos:column="37">::<pos:position pos:line="1" pos:column="39"/></operator><name pos:line="1" pos:column="39">string<pos:position pos:line="1" pos:column="45"/></name></name> <specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <modifier pos:line="1" pos:column="52">&amp;<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="54">filename<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list> <block pos:line="1" pos:column="64">{
    <comment type="line" pos:line="2" pos:column="5">// readSize will rebuild 'size' file if missing or it is corrupted</comment>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">size_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">dbSize<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">readSize<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">()<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">size_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">fileSize<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">getFileSize<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">filename<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">dbSize<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <ternary><condition><expr><name pos:line="5" pos:column="14">dbSize<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&gt;<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="23">fileSize<pos:position pos:line="5" pos:column="31"/></name></expr> ?<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33"> <expr><name pos:line="5" pos:column="34">dbSize<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">-<pos:position pos:line="5" pos:column="42"/></operator> <name pos:line="5" pos:column="43">fileSize<pos:position pos:line="5" pos:column="51"/></name></expr> <pos:position pos:line="5" pos:column="52"/></then><else pos:line="5" pos:column="52">: <expr><literal type="number" pos:line="5" pos:column="54">0<pos:position pos:line="5" pos:column="55"/></literal></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">writeSize<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">dbSize<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

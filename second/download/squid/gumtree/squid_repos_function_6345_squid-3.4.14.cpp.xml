<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6345_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">Value<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">fetchAndAnd<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">Value<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">v2<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
    <block pos:line="2" pos:column="5">{ <expr_stmt><expr><call><name pos:line="2" pos:column="7">assert<pos:position pos:line="2" pos:column="13"/></name><argument_list pos:line="2" pos:column="13">(<argument><expr><call><name pos:line="2" pos:column="14">Enabled<pos:position pos:line="2" pos:column="21"/></name><argument_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></argument_list></call></expr></argument>)<pos:position pos:line="2" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="25"/></expr_stmt> <decl_stmt><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">Value<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">v1<pos:position pos:line="2" pos:column="40"/></name> <init pos:line="2" pos:column="41">= <expr><name pos:line="2" pos:column="43">value<pos:position pos:line="2" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="49"/></decl_stmt> <expr_stmt><expr><name pos:line="2" pos:column="50">value<pos:position pos:line="2" pos:column="55"/></name> <operator pos:line="2" pos:column="56">&amp;=<pos:position pos:line="2" pos:column="62"/></operator> <name pos:line="2" pos:column="59">v2<pos:position pos:line="2" pos:column="61"/></name></expr>;<pos:position pos:line="2" pos:column="62"/></expr_stmt> <return pos:line="2" pos:column="63">return <expr><name pos:line="2" pos:column="70">v1<pos:position pos:line="2" pos:column="72"/></name></expr>;<pos:position pos:line="2" pos:column="73"/></return> }<pos:position pos:line="2" pos:column="75"/></block></function></unit>

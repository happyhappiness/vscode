<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4928_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Rock<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">SwapDir<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">disconnect<pos:position pos:line="1" pos:column="31"/></name></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">StoreEntry<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">&amp;<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="44">e<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name><name pos:line="3" pos:column="12">e<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">.<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">swap_dirn<pos:position pos:line="3" pos:column="23"/></name></name> <operator pos:line="3" pos:column="24">==<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="27">index<pos:position pos:line="3" pos:column="32"/></name></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name><name pos:line="4" pos:column="12">e<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">.<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">swap_filen<pos:position pos:line="4" pos:column="24"/></name></name> <operator pos:line="4" pos:column="25">&gt;=<pos:position pos:line="4" pos:column="30"/></operator> <literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>
    <comment type="line" pos:line="5" pos:column="5">// cannot have SWAPOUT_NONE entry with swap_filen &gt;= 0</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">e<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">.<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">swap_status<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">!=<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">SWAPOUT_NONE<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

    <comment type="line" pos:line="8" pos:column="5">// do not rely on e.swap_status here because there is an async delay</comment>
    <comment type="line" pos:line="9" pos:column="5">// before it switches from SWAPOUT_WRITING to SWAPOUT_DONE.</comment>

    <comment type="line" pos:line="11" pos:column="5">// since e has swap_filen, its slot is locked for reading and/or writing</comment>
    <comment type="line" pos:line="12" pos:column="5">// but it is difficult to know whether THIS worker is reading or writing e,</comment>
    <comment type="line" pos:line="13" pos:column="5">// especially since we may switch from writing to reading. This code relies</comment>
    <comment type="line" pos:line="14" pos:column="5">// on Rock::IoState::writeableAnchor_ being set when we locked for writing.</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">e<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">.<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">mem_obj<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">&amp;&amp;<pos:position pos:line="15" pos:column="29"/></operator> <name><name pos:line="15" pos:column="22">e<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">mem_obj<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">swapout<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">.<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">sio<pos:position pos:line="15" pos:column="44"/></name></name> <operator pos:line="15" pos:column="45">!=<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="48">NULL<pos:position pos:line="15" pos:column="52"/></name> <operator pos:line="15" pos:column="53">&amp;&amp;<pos:position pos:line="15" pos:column="63"/></operator>
            <cast type="dynamic" pos:line="16" pos:column="13">dynamic_cast<argument_list type="generic" pos:line="16" pos:column="25">&lt;<argument><expr><name pos:line="16" pos:column="26">IoState<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">&amp;<pos:position pos:line="16" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="16" pos:column="38"/></argument_list><argument_list pos:line="16" pos:column="35">(<argument><expr><operator pos:line="16" pos:column="36">*<pos:position pos:line="16" pos:column="37"/></operator><name><name pos:line="16" pos:column="37">e<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">.<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">mem_obj<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">swapout<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">.<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">sio<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></cast><operator pos:line="16" pos:column="60">.<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="61">writeableAnchor_<pos:position pos:line="16" pos:column="77"/></name></expr>)<pos:position pos:line="16" pos:column="78"/></condition><then pos:line="16" pos:column="78"> <block pos:line="16" pos:column="79">{
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">map<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">abortWriting<pos:position pos:line="17" pos:column="26"/></name></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">e<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">swap_filen<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">e<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">.<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">swap_dirn<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="23">-<pos:position pos:line="18" pos:column="24"/></operator><literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">e<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">.<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">swap_filen<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">e<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">.<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">swap_status<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">SWAPOUT_NONE<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><cast type="dynamic" pos:line="21" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="21" pos:column="21">&lt;<argument><expr><name pos:line="21" pos:column="22">IoState<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">&amp;<pos:position pos:line="21" pos:column="34"/></operator></expr></argument>&gt;<pos:position pos:line="21" pos:column="34"/></argument_list><argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></operator><name><name pos:line="21" pos:column="33">e<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">mem_obj<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">swapout<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">.<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">sio<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></cast><operator pos:line="21" pos:column="56">.<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">writeableAnchor_<pos:position pos:line="21" pos:column="73"/></name> <operator pos:line="21" pos:column="74">=<pos:position pos:line="21" pos:column="75"/></operator> <name pos:line="21" pos:column="76">NULL<pos:position pos:line="21" pos:column="80"/></name></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">Store<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">::<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">Root<pos:position pos:line="22" pos:column="20"/></name></name><argument_list pos:line="22" pos:column="20">()<pos:position pos:line="22" pos:column="22"/></argument_list></call><operator pos:line="22" pos:column="22">.<pos:position pos:line="22" pos:column="23"/></operator><call><name pos:line="22" pos:column="23">transientsAbandon<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">e<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt> <comment type="line" pos:line="22" pos:column="45">// broadcasts after the change</comment>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">map<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">closeForReading<pos:position pos:line="24" pos:column="29"/></name></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name><name pos:line="24" pos:column="30">e<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">swap_filen<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">e<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">.<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">swap_dirn<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <operator pos:line="25" pos:column="23">-<pos:position pos:line="25" pos:column="24"/></operator><literal type="number" pos:line="25" pos:column="24">1<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">e<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">.<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">swap_filen<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <operator pos:line="26" pos:column="24">-<pos:position pos:line="26" pos:column="25"/></operator><literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">e<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">.<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">swap_status<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">SWAPOUT_NONE<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

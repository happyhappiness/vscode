<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4337_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">SearchIPLDAP<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">edui_ldap_t<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">l<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ber_len_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">i<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">x<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ber_len_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">j<pos:position pos:line="5" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="18">k<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ber_len_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">y<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">z<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">c<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">bufa<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><name pos:line="8" pos:column="15">EDUI_MAXLEN<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="29">bufb<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">EDUI_MAXLEN<pos:position pos:line="8" pos:column="45"/></name></expr>]<pos:position pos:line="8" pos:column="46"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="8" pos:column="48">hexc<pos:position pos:line="8" pos:column="52"/></name><index pos:line="8" pos:column="52">[<expr><literal type="number" pos:line="8" pos:column="53">4<pos:position pos:line="8" pos:column="54"/></literal></expr>]<pos:position pos:line="8" pos:column="55"/></index></name></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">LDAPMessage<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">ent<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">l<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block type="pseudo"><return pos:line="10" pos:column="20">return <expr><name pos:line="10" pos:column="27">LDAP_ERR_NULL<pos:position pos:line="10" pos:column="40"/></name></expr>;<pos:position pos:line="10" pos:column="41"/></return></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">l<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">lp<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block type="pseudo"><return pos:line="11" pos:column="24">return <expr><name pos:line="11" pos:column="31">LDAP_ERR_POINTER<pos:position pos:line="11" pos:column="47"/></name></expr>;<pos:position pos:line="11" pos:column="48"/></return></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">l<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">status<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="23">LDAP_INIT_S<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36"> <block type="pseudo"><return pos:line="12" pos:column="37">return <expr><name pos:line="12" pos:column="44">LDAP_ERR_INIT<pos:position pos:line="12" pos:column="57"/></name></expr>;<pos:position pos:line="12" pos:column="58"/></return></block></then></if>               <comment type="block" pos:line="12" pos:column="73">/* Not initalized */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name><name pos:line="13" pos:column="11">l<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">status<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="23">LDAP_OPEN_S<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <block type="pseudo"><return pos:line="13" pos:column="37">return <expr><name pos:line="13" pos:column="44">LDAP_ERR_OPEN<pos:position pos:line="13" pos:column="57"/></name></expr>;<pos:position pos:line="13" pos:column="58"/></return></block></then></if>               <comment type="block" pos:line="13" pos:column="73">/* Not open */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name><name pos:line="14" pos:column="11">l<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">status<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="23">LDAP_BIND_S<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block type="pseudo"><return pos:line="14" pos:column="37">return <expr><name pos:line="14" pos:column="44">LDAP_ERR_BIND<pos:position pos:line="14" pos:column="57"/></name></expr>;<pos:position pos:line="14" pos:column="58"/></return></block></then></if>               <comment type="block" pos:line="14" pos:column="73">/* Not bound */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">l<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">status<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="23">LDAP_SEARCH_S<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">)<pos:position pos:line="15" pos:column="37"/></operator></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38"> <block type="pseudo"><return pos:line="15" pos:column="39">return <expr><name pos:line="15" pos:column="46">LDAP_ERR_NOT_SEARCHED<pos:position pos:line="15" pos:column="67"/></name></expr>;<pos:position pos:line="15" pos:column="68"/></return></block></then></if>         <comment type="block" pos:line="15" pos:column="77">/* Not searched */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">l<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">num_ent<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">&lt;=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debug<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><literal type="string" pos:line="17" pos:column="15">"l-&gt;num_ent: %d\n"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="35">l<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">num_ent<pos:position pos:line="17" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">LDAP_ERR_DATA<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></return>                               <comment type="block" pos:line="18" pos:column="61">/* No entries found */</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">l<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">val<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">NULL<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">ldap_value_free_len<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name><name pos:line="21" pos:column="29">l<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">val<pos:position pos:line="21" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt></block></then></if>                            <comment type="block" pos:line="21" pos:column="65">/* Clear data before populating */</comment>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">l<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">num_val<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">l<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">status<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">&amp;<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="21">LDAP_VAL_S<pos:position pos:line="23" pos:column="31"/></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="9">l<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">status<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">&amp;=<pos:position pos:line="24" pos:column="25"/></operator> <operator pos:line="24" pos:column="22">~<pos:position pos:line="24" pos:column="23"/></operator><operator pos:line="24" pos:column="23">(<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">LDAP_VAL_S<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">)<pos:position pos:line="24" pos:column="35"/></operator></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt></block></then></if>                         <comment type="block" pos:line="24" pos:column="61">/* Clear VAL bit */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">edui_conf<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">attrib<pos:position pos:line="25" pos:column="25"/></name><index pos:line="25" pos:column="25">[<expr><literal type="number" pos:line="25" pos:column="26">0<pos:position pos:line="25" pos:column="27"/></literal></expr>]<pos:position pos:line="25" pos:column="28"/></index></name> <operator pos:line="25" pos:column="29">==<pos:position pos:line="25" pos:column="31"/></operator> <literal type="char" pos:line="25" pos:column="32">'\0'<pos:position pos:line="25" pos:column="36"/></literal></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="9">xstrncpy<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name><name pos:line="26" pos:column="18">edui_conf<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">.<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">attrib<pos:position pos:line="26" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="36">"cn"<pos:position pos:line="26" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="42">sizeof<argument_list pos:line="26" pos:column="48">(<argument><expr><name><name pos:line="26" pos:column="49">edui_conf<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">.<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="59">attrib<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt></block></then></if>         <comment type="block" pos:line="26" pos:column="77">/* Make sure edui_conf.attrib is set */</comment>

    <comment type="block" pos:line="28" pos:column="5">/* Sift through entries */</comment>
    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">struct<pos:position pos:line="29" pos:column="11"/></name> <name pos:line="29" pos:column="12">berval<pos:position pos:line="29" pos:column="18"/></name></name> <modifier pos:line="29" pos:column="19">*<pos:position pos:line="29" pos:column="20"/></modifier><modifier pos:line="29" pos:column="20">*<pos:position pos:line="29" pos:column="21"/></modifier></type><name pos:line="29" pos:column="21">ber<pos:position pos:line="29" pos:column="24"/></name> <init pos:line="29" pos:column="25">= <expr><name pos:line="29" pos:column="27">NULL<pos:position pos:line="29" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="32"/></decl_stmt>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">ent<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">ldap_first_entry<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">l<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">lp<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="40">l<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">lm<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></init> <condition><expr><name pos:line="30" pos:column="48">ent<pos:position pos:line="30" pos:column="51"/></name> <operator pos:line="30" pos:column="52">!=<pos:position pos:line="30" pos:column="54"/></operator> <name pos:line="30" pos:column="55">NULL<pos:position pos:line="30" pos:column="59"/></name></expr>;<pos:position pos:line="30" pos:column="60"/></condition> <incr><expr><name pos:line="30" pos:column="61">ent<pos:position pos:line="30" pos:column="64"/></name> <operator pos:line="30" pos:column="65">=<pos:position pos:line="30" pos:column="66"/></operator> <call><name pos:line="30" pos:column="67">ldap_next_entry<pos:position pos:line="30" pos:column="82"/></name><argument_list pos:line="30" pos:column="82">(<argument><expr><name><name pos:line="30" pos:column="83">l<pos:position pos:line="30" pos:column="84"/></name><operator pos:line="30" pos:column="84">-&gt;<pos:position pos:line="30" pos:column="89"/></operator><name pos:line="30" pos:column="86">lp<pos:position pos:line="30" pos:column="88"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="90">ent<pos:position pos:line="30" pos:column="93"/></name></expr></argument>)<pos:position pos:line="30" pos:column="94"/></argument_list></call></expr></incr>)<pos:position pos:line="30" pos:column="95"/></control> <block pos:line="30" pos:column="96">{
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">l<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">val<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">ldap_get_values_len<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name><name pos:line="31" pos:column="38">l<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">lp<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">ent<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="50">"networkAddress"<pos:position pos:line="31" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">ber<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">ldap_get_values_len<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name><name pos:line="32" pos:column="35">l<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">lp<pos:position pos:line="32" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">ent<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="47">edui_conf<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">.<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="57">attrib<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>            <comment type="block" pos:line="32" pos:column="77">/* edui_conf.attrib is the &lt;userid&gt; mapping */</comment>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">l<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">val<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">!=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">NULL<pos:position pos:line="33" pos:column="27"/></name></expr>)<pos:position pos:line="33" pos:column="28"/></condition><then pos:line="33" pos:column="28"> <block pos:line="33" pos:column="29">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">x<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">ldap_count_values_len<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><name><name pos:line="34" pos:column="39">l<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">val<pos:position pos:line="34" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>                      <comment type="block" pos:line="34" pos:column="69">/* We got x values ... */</comment>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">l<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">num_val<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">x<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">x<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&gt;<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal></expr>)<pos:position pos:line="36" pos:column="23"/></condition><then pos:line="36" pos:column="23"> <block pos:line="36" pos:column="24">{
                <comment type="block" pos:line="37" pos:column="17">/* Display all values */</comment>
                <for pos:line="38" pos:column="17">for <control pos:line="38" pos:column="21">(<init><expr><name pos:line="38" pos:column="22">i<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr>;<pos:position pos:line="38" pos:column="28"/></init> <condition><expr><name pos:line="38" pos:column="29">i<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&lt;<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="33">x<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></condition> <incr><expr><operator pos:line="38" pos:column="36">++<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">i<pos:position pos:line="38" pos:column="39"/></name></expr></incr>)<pos:position pos:line="38" pos:column="40"/></control> <block pos:line="38" pos:column="41">{
                    <expr_stmt><expr><name pos:line="39" pos:column="21">j<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <name><name pos:line="39" pos:column="25">l<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">val<pos:position pos:line="39" pos:column="31"/></name><index pos:line="39" pos:column="31">[<expr><name pos:line="39" pos:column="32">i<pos:position pos:line="39" pos:column="33"/></name></expr>]<pos:position pos:line="39" pos:column="34"/></index></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">bv_len<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">memcpy<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name pos:line="40" pos:column="28">bufa<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="34">l<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">val<pos:position pos:line="40" pos:column="40"/></name><index pos:line="40" pos:column="40">[<expr><name pos:line="40" pos:column="41">i<pos:position pos:line="40" pos:column="42"/></name></expr>]<pos:position pos:line="40" pos:column="43"/></index></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">bv_val<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">j<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="41" pos:column="21">z<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <call><name pos:line="41" pos:column="25">BinarySplit<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">bufa<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">j<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="46">'#'<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">bufb<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="57">sizeof<argument_list pos:line="41" pos:column="63">(<argument><expr><name pos:line="41" pos:column="64">bufb<pos:position pos:line="41" pos:column="68"/></name></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>
                    <comment type="block" pos:line="42" pos:column="21">/* BINARY DEBUGGING *
                                              local_printfx("value[%" PRIuSIZE "]: BinarySplit(", (size_t) i);
                                              for (k = 0; k &lt; z; ++k) {
                                                c = (int) bufb[k];
                                                if (c &lt; 0)
                                                  c = c + 256;
                                                local_printfx("%02X", c);
                                              }
                                              local_printfx(", ");
                                              for (k = 0; k &lt; (j - z - 1); ++k) {
                                                c = (int) bufa[k];
                                                if (c &lt; 0)
                                                  c = c + 256;
                                                local_printfx("%02X", c);
                                              }
                                              local_printfx("): %" PRIuSIZE "\n", (size_t) z);
                    * BINARY DEBUGGING */</comment>
                    <expr_stmt><expr><name pos:line="59" pos:column="21">z<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="25">j<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">-<pos:position pos:line="59" pos:column="28"/></operator> <name pos:line="59" pos:column="29">z<pos:position pos:line="59" pos:column="30"/></name> <operator pos:line="59" pos:column="31">-<pos:position pos:line="59" pos:column="32"/></operator> <literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="60" pos:column="21">j<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <call><name pos:line="60" pos:column="25">atoi<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">bufb<pos:position pos:line="60" pos:column="34"/></name></expr></argument>)<pos:position pos:line="60" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>
                    <if pos:line="61" pos:column="21">if <condition pos:line="61" pos:column="24">(<expr><name pos:line="61" pos:column="25">j<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">==<pos:position pos:line="61" pos:column="29"/></operator> <literal type="number" pos:line="61" pos:column="30">1<pos:position pos:line="61" pos:column="31"/></literal></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32"> <block pos:line="61" pos:column="33">{
                        <comment type="block" pos:line="62" pos:column="25">/* IPv4 address (eDirectory 8.7 and below) */</comment>
                        <comment type="block" pos:line="63" pos:column="25">/* bufa is the address, just compare it */</comment>
                        <if pos:line="64" pos:column="25">if <condition pos:line="64" pos:column="28">(<expr><operator pos:line="64" pos:column="29">!<pos:position pos:line="64" pos:column="30"/></operator><operator pos:line="64" pos:column="30">(<pos:position pos:line="64" pos:column="31"/></operator><name><name pos:line="64" pos:column="31">l<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">status<pos:position pos:line="64" pos:column="40"/></name></name> <operator pos:line="64" pos:column="41">&amp;<pos:position pos:line="64" pos:column="46"/></operator> <name pos:line="64" pos:column="43">LDAP_IPV4_S<pos:position pos:line="64" pos:column="54"/></name><operator pos:line="64" pos:column="54">)<pos:position pos:line="64" pos:column="55"/></operator> <operator pos:line="64" pos:column="56">||<pos:position pos:line="64" pos:column="58"/></operator> <operator pos:line="64" pos:column="59">(<pos:position pos:line="64" pos:column="60"/></operator><name><name pos:line="64" pos:column="60">l<pos:position pos:line="64" pos:column="61"/></name><operator pos:line="64" pos:column="61">-&gt;<pos:position pos:line="64" pos:column="66"/></operator><name pos:line="64" pos:column="63">status<pos:position pos:line="64" pos:column="69"/></name></name> <operator pos:line="64" pos:column="70">&amp;<pos:position pos:line="64" pos:column="75"/></operator> <name pos:line="64" pos:column="72">LDAP_IPV6_S<pos:position pos:line="64" pos:column="83"/></name><operator pos:line="64" pos:column="83">)<pos:position pos:line="64" pos:column="84"/></operator></expr>)<pos:position pos:line="64" pos:column="85"/></condition><then pos:line="64" pos:column="85">
                            <block type="pseudo"><break pos:line="65" pos:column="29">break;<pos:position pos:line="65" pos:column="35"/></break></block></then></if>                          <comment type="block" pos:line="65" pos:column="61">/* Not looking for IPv4 */</comment>
                        <for pos:line="66" pos:column="25">for <control pos:line="66" pos:column="29">(<init><expr><name pos:line="66" pos:column="30">k<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">=<pos:position pos:line="66" pos:column="33"/></operator> <literal type="number" pos:line="66" pos:column="34">0<pos:position pos:line="66" pos:column="35"/></literal></expr>;<pos:position pos:line="66" pos:column="36"/></init> <condition><expr><name pos:line="66" pos:column="37">k<pos:position pos:line="66" pos:column="38"/></name> <operator pos:line="66" pos:column="39">&lt;<pos:position pos:line="66" pos:column="43"/></operator> <name pos:line="66" pos:column="41">z<pos:position pos:line="66" pos:column="42"/></name></expr>;<pos:position pos:line="66" pos:column="43"/></condition> <incr><expr><operator pos:line="66" pos:column="44">++<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="46">k<pos:position pos:line="66" pos:column="47"/></name></expr></incr>)<pos:position pos:line="66" pos:column="48"/></control> <block pos:line="66" pos:column="49">{
                            <expr_stmt><expr><name pos:line="67" pos:column="29">c<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">=<pos:position pos:line="67" pos:column="32"/></operator> <operator pos:line="67" pos:column="33">(<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">int<pos:position pos:line="67" pos:column="37"/></name><operator pos:line="67" pos:column="37">)<pos:position pos:line="67" pos:column="38"/></operator> <name><name pos:line="67" pos:column="39">bufa<pos:position pos:line="67" pos:column="43"/></name><index pos:line="67" pos:column="43">[<expr><name pos:line="67" pos:column="44">k<pos:position pos:line="67" pos:column="45"/></name></expr>]<pos:position pos:line="67" pos:column="46"/></index></name></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
                            <if pos:line="68" pos:column="29">if <condition pos:line="68" pos:column="32">(<expr><name pos:line="68" pos:column="33">c<pos:position pos:line="68" pos:column="34"/></name> <operator pos:line="68" pos:column="35">&lt;<pos:position pos:line="68" pos:column="39"/></operator> <literal type="number" pos:line="68" pos:column="37">0<pos:position pos:line="68" pos:column="38"/></literal></expr>)<pos:position pos:line="68" pos:column="39"/></condition><then pos:line="68" pos:column="39">
                                <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="33">c<pos:position pos:line="69" pos:column="34"/></name> <operator pos:line="69" pos:column="35">=<pos:position pos:line="69" pos:column="36"/></operator> <name pos:line="69" pos:column="37">c<pos:position pos:line="69" pos:column="38"/></name> <operator pos:line="69" pos:column="39">+<pos:position pos:line="69" pos:column="40"/></operator> <literal type="number" pos:line="69" pos:column="41">256<pos:position pos:line="69" pos:column="44"/></literal></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt></block></then></if>
                            <decl_stmt><decl><type><name pos:line="70" pos:column="29">int<pos:position pos:line="70" pos:column="32"/></name></type> <name pos:line="70" pos:column="33">hlen<pos:position pos:line="70" pos:column="37"/></name> <init pos:line="70" pos:column="38">= <expr><call><name pos:line="70" pos:column="40">snprintf<pos:position pos:line="70" pos:column="48"/></name><argument_list pos:line="70" pos:column="48">(<argument><expr><name pos:line="70" pos:column="49">hexc<pos:position pos:line="70" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="55">sizeof<argument_list pos:line="70" pos:column="61">(<argument><expr><name pos:line="70" pos:column="62">hexc<pos:position pos:line="70" pos:column="66"/></name></expr></argument>)<pos:position pos:line="70" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="69">"%02X"<pos:position pos:line="70" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="77">c<pos:position pos:line="70" pos:column="78"/></name></expr></argument>)<pos:position pos:line="70" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="70" pos:column="80"/></decl_stmt>
                            <if pos:line="71" pos:column="29">if <condition pos:line="71" pos:column="32">(<expr><name pos:line="71" pos:column="33">k<pos:position pos:line="71" pos:column="34"/></name> <operator pos:line="71" pos:column="35">==<pos:position pos:line="71" pos:column="37"/></operator> <literal type="number" pos:line="71" pos:column="38">0<pos:position pos:line="71" pos:column="39"/></literal></expr>)<pos:position pos:line="71" pos:column="40"/></condition><then pos:line="71" pos:column="40">
                                <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="33">xstrncpy<pos:position pos:line="72" pos:column="41"/></name><argument_list pos:line="72" pos:column="41">(<argument><expr><name pos:line="72" pos:column="42">bufb<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="48">hexc<pos:position pos:line="72" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="54">sizeof<argument_list pos:line="72" pos:column="60">(<argument><expr><name pos:line="72" pos:column="61">bufb<pos:position pos:line="72" pos:column="65"/></name></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="68"/></expr_stmt></block></then>
                            <else pos:line="73" pos:column="29">else
                                <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="33">strncat<pos:position pos:line="74" pos:column="40"/></name><argument_list pos:line="74" pos:column="40">(<argument><expr><name pos:line="74" pos:column="41">bufb<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">hexc<pos:position pos:line="74" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="53">hlen<pos:position pos:line="74" pos:column="57"/></name></expr></argument>)<pos:position pos:line="74" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="59"/></expr_stmt></block></else></if>
                        }<pos:position pos:line="75" pos:column="26"/></block></for>
                        <expr_stmt><expr><name pos:line="76" pos:column="25">y<pos:position pos:line="76" pos:column="26"/></name> <operator pos:line="76" pos:column="27">=<pos:position pos:line="76" pos:column="28"/></operator> <call><name pos:line="76" pos:column="29">strlen<pos:position pos:line="76" pos:column="35"/></name><argument_list pos:line="76" pos:column="35">(<argument><expr><name pos:line="76" pos:column="36">bufb<pos:position pos:line="76" pos:column="40"/></name></expr></argument>)<pos:position pos:line="76" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="42"/></expr_stmt>
                        <comment type="block" pos:line="77" pos:column="25">/* Compare value with IP */</comment>
                        <if pos:line="78" pos:column="25">if <condition pos:line="78" pos:column="28">(<expr><call><name pos:line="78" pos:column="29">memcmp<pos:position pos:line="78" pos:column="35"/></name><argument_list pos:line="78" pos:column="35">(<argument><expr><name><name pos:line="78" pos:column="36">l<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">search_ip<pos:position pos:line="78" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="50">bufb<pos:position pos:line="78" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="56">y<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call> <operator pos:line="78" pos:column="59">==<pos:position pos:line="78" pos:column="61"/></operator> <literal type="number" pos:line="78" pos:column="62">0<pos:position pos:line="78" pos:column="63"/></literal></expr>)<pos:position pos:line="78" pos:column="64"/></condition><then pos:line="78" pos:column="64"> <block pos:line="78" pos:column="65">{
                            <comment type="block" pos:line="79" pos:column="29">/* We got a match! - Scan 'ber' for 'cn' values */</comment>
                            <expr_stmt><expr><name pos:line="80" pos:column="29">z<pos:position pos:line="80" pos:column="30"/></name> <operator pos:line="80" pos:column="31">=<pos:position pos:line="80" pos:column="32"/></operator> <call><name pos:line="80" pos:column="33">ldap_count_values_len<pos:position pos:line="80" pos:column="54"/></name><argument_list pos:line="80" pos:column="54">(<argument><expr><name pos:line="80" pos:column="55">ber<pos:position pos:line="80" pos:column="58"/></name></expr></argument>)<pos:position pos:line="80" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="60"/></expr_stmt>
                            <for pos:line="81" pos:column="29">for <control pos:line="81" pos:column="33">(<init><expr><name pos:line="81" pos:column="34">j<pos:position pos:line="81" pos:column="35"/></name> <operator pos:line="81" pos:column="36">=<pos:position pos:line="81" pos:column="37"/></operator> <literal type="number" pos:line="81" pos:column="38">0<pos:position pos:line="81" pos:column="39"/></literal></expr>;<pos:position pos:line="81" pos:column="40"/></init> <condition><expr><name pos:line="81" pos:column="41">j<pos:position pos:line="81" pos:column="42"/></name> <operator pos:line="81" pos:column="43">&lt;<pos:position pos:line="81" pos:column="47"/></operator> <name pos:line="81" pos:column="45">z<pos:position pos:line="81" pos:column="46"/></name></expr>;<pos:position pos:line="81" pos:column="47"/></condition> <incr><expr><operator pos:line="81" pos:column="48">++<pos:position pos:line="81" pos:column="50"/></operator><name pos:line="81" pos:column="50">j<pos:position pos:line="81" pos:column="51"/></name></expr></incr>)<pos:position pos:line="81" pos:column="52"/></control> <block pos:line="81" pos:column="53">{
<comment type="line" pos:line="82" pos:column="1">// broken?                        xstrncpy(l-&gt;userid, ber[j]-&gt;bv_val, min(sizeof(l-&gt;userid),static_cast&lt;size_t&gt;(ber[j]-&gt;bv_len)));</comment>
                                <expr_stmt><expr><call><name pos:line="83" pos:column="33">xstrncpy<pos:position pos:line="83" pos:column="41"/></name><argument_list pos:line="83" pos:column="41">(<argument><expr><name><name pos:line="83" pos:column="42">l<pos:position pos:line="83" pos:column="43"/></name><operator pos:line="83" pos:column="43">-&gt;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="45">userid<pos:position pos:line="83" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="53">ber<pos:position pos:line="83" pos:column="56"/></name><index pos:line="83" pos:column="56">[<expr><name pos:line="83" pos:column="57">j<pos:position pos:line="83" pos:column="58"/></name></expr>]<pos:position pos:line="83" pos:column="59"/></index></name><operator pos:line="83" pos:column="59">-&gt;<pos:position pos:line="83" pos:column="64"/></operator><name pos:line="83" pos:column="61">bv_val<pos:position pos:line="83" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="69">sizeof<argument_list pos:line="83" pos:column="75">(<argument><expr><name><name pos:line="83" pos:column="76">l<pos:position pos:line="83" pos:column="77"/></name><operator pos:line="83" pos:column="77">-&gt;<pos:position pos:line="83" pos:column="82"/></operator><name pos:line="83" pos:column="79">userid<pos:position pos:line="83" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="88"/></expr_stmt>
                                <comment type="block" pos:line="84" pos:column="33">/* Using bv_len of min() breaks the result by 2 chars */</comment>
                            }<pos:position pos:line="85" pos:column="30"/></block></for>
                            <expr_stmt><expr><call><name pos:line="86" pos:column="29">ldap_value_free_len<pos:position pos:line="86" pos:column="48"/></name><argument_list pos:line="86" pos:column="48">(<argument><expr><name><name pos:line="86" pos:column="49">l<pos:position pos:line="86" pos:column="50"/></name><operator pos:line="86" pos:column="50">-&gt;<pos:position pos:line="86" pos:column="55"/></operator><name pos:line="86" pos:column="52">val<pos:position pos:line="86" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="57"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="87" pos:column="29">l<pos:position pos:line="87" pos:column="30"/></name><operator pos:line="87" pos:column="30">-&gt;<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="32">val<pos:position pos:line="87" pos:column="35"/></name></name> <operator pos:line="87" pos:column="36">=<pos:position pos:line="87" pos:column="37"/></operator> <name pos:line="87" pos:column="38">NULL<pos:position pos:line="87" pos:column="42"/></name></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="88" pos:column="29">ldap_value_free_len<pos:position pos:line="88" pos:column="48"/></name><argument_list pos:line="88" pos:column="48">(<argument><expr><name pos:line="88" pos:column="49">ber<pos:position pos:line="88" pos:column="52"/></name></expr></argument>)<pos:position pos:line="88" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="54"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="89" pos:column="29">ber<pos:position pos:line="89" pos:column="32"/></name> <operator pos:line="89" pos:column="33">=<pos:position pos:line="89" pos:column="34"/></operator> <name pos:line="89" pos:column="35">NULL<pos:position pos:line="89" pos:column="39"/></name></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="90" pos:column="29">l<pos:position pos:line="90" pos:column="30"/></name><operator pos:line="90" pos:column="30">-&gt;<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="32">num_val<pos:position pos:line="90" pos:column="39"/></name></name> <operator pos:line="90" pos:column="40">=<pos:position pos:line="90" pos:column="41"/></operator> <literal type="number" pos:line="90" pos:column="42">0<pos:position pos:line="90" pos:column="43"/></literal></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="91" pos:column="29">l<pos:position pos:line="91" pos:column="30"/></name><operator pos:line="91" pos:column="30">-&gt;<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="32">err<pos:position pos:line="91" pos:column="35"/></name></name> <operator pos:line="91" pos:column="36">=<pos:position pos:line="91" pos:column="37"/></operator> <name pos:line="91" pos:column="38">LDAP_SUCCESS<pos:position pos:line="91" pos:column="50"/></name></expr>;<pos:position pos:line="91" pos:column="51"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="92" pos:column="29">l<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">-&gt;<pos:position pos:line="92" pos:column="35"/></operator><name pos:line="92" pos:column="32">status<pos:position pos:line="92" pos:column="38"/></name></name> <operator pos:line="92" pos:column="39">&amp;=<pos:position pos:line="92" pos:column="45"/></operator> <operator pos:line="92" pos:column="42">~<pos:position pos:line="92" pos:column="43"/></operator><operator pos:line="92" pos:column="43">(<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="44">LDAP_SEARCH_S<pos:position pos:line="92" pos:column="57"/></name><operator pos:line="92" pos:column="57">)<pos:position pos:line="92" pos:column="58"/></operator></expr>;<pos:position pos:line="92" pos:column="59"/></expr_stmt>
                            <return pos:line="93" pos:column="29">return <expr><name pos:line="93" pos:column="36">LDAP_ERR_SUCCESS<pos:position pos:line="93" pos:column="52"/></name></expr>;<pos:position pos:line="93" pos:column="53"/></return>                <comment type="block" pos:line="93" pos:column="69">/* We got our userid */</comment>
                        }<pos:position pos:line="94" pos:column="26"/></block></then></if>
                        <comment type="block" pos:line="95" pos:column="25">/* Not matched, continue */</comment>
                    }<pos:position pos:line="96" pos:column="22"/></block></then> <elseif pos:line="96" pos:column="23">else <if pos:line="96" pos:column="28">if <condition pos:line="96" pos:column="31">(<expr><operator pos:line="96" pos:column="32">(<pos:position pos:line="96" pos:column="33"/></operator><name pos:line="96" pos:column="33">j<pos:position pos:line="96" pos:column="34"/></name> <operator pos:line="96" pos:column="35">==<pos:position pos:line="96" pos:column="37"/></operator> <literal type="number" pos:line="96" pos:column="38">8<pos:position pos:line="96" pos:column="39"/></literal><operator pos:line="96" pos:column="39">)<pos:position pos:line="96" pos:column="40"/></operator> <operator pos:line="96" pos:column="41">||<pos:position pos:line="96" pos:column="43"/></operator> <operator pos:line="96" pos:column="44">(<pos:position pos:line="96" pos:column="45"/></operator><name pos:line="96" pos:column="45">j<pos:position pos:line="96" pos:column="46"/></name> <operator pos:line="96" pos:column="47">==<pos:position pos:line="96" pos:column="49"/></operator> <literal type="number" pos:line="96" pos:column="50">9<pos:position pos:line="96" pos:column="51"/></literal><operator pos:line="96" pos:column="51">)<pos:position pos:line="96" pos:column="52"/></operator></expr>)<pos:position pos:line="96" pos:column="53"/></condition><then pos:line="96" pos:column="53"> <block pos:line="96" pos:column="54">{
                        <comment type="block" pos:line="97" pos:column="25">/* IPv4 (UDP/TCP) address (eDirectory 8.8 and higher) */</comment>
                        <comment type="block" pos:line="98" pos:column="25">/* bufa + 2 is the address (skip 2 digit port) */</comment>
                        <if pos:line="99" pos:column="25">if <condition pos:line="99" pos:column="28">(<expr><operator pos:line="99" pos:column="29">!<pos:position pos:line="99" pos:column="30"/></operator><operator pos:line="99" pos:column="30">(<pos:position pos:line="99" pos:column="31"/></operator><name><name pos:line="99" pos:column="31">l<pos:position pos:line="99" pos:column="32"/></name><operator pos:line="99" pos:column="32">-&gt;<pos:position pos:line="99" pos:column="37"/></operator><name pos:line="99" pos:column="34">status<pos:position pos:line="99" pos:column="40"/></name></name> <operator pos:line="99" pos:column="41">&amp;<pos:position pos:line="99" pos:column="46"/></operator> <name pos:line="99" pos:column="43">LDAP_IPV4_S<pos:position pos:line="99" pos:column="54"/></name><operator pos:line="99" pos:column="54">)<pos:position pos:line="99" pos:column="55"/></operator> <operator pos:line="99" pos:column="56">||<pos:position pos:line="99" pos:column="58"/></operator> <operator pos:line="99" pos:column="59">(<pos:position pos:line="99" pos:column="60"/></operator><name><name pos:line="99" pos:column="60">l<pos:position pos:line="99" pos:column="61"/></name><operator pos:line="99" pos:column="61">-&gt;<pos:position pos:line="99" pos:column="66"/></operator><name pos:line="99" pos:column="63">status<pos:position pos:line="99" pos:column="69"/></name></name> <operator pos:line="99" pos:column="70">&amp;<pos:position pos:line="99" pos:column="75"/></operator> <name pos:line="99" pos:column="72">LDAP_IPV6_S<pos:position pos:line="99" pos:column="83"/></name><operator pos:line="99" pos:column="83">)<pos:position pos:line="99" pos:column="84"/></operator></expr>)<pos:position pos:line="99" pos:column="85"/></condition><then pos:line="99" pos:column="85">
                            <block type="pseudo"><break pos:line="100" pos:column="29">break;<pos:position pos:line="100" pos:column="35"/></break></block></then></if>                          <comment type="block" pos:line="100" pos:column="61">/* Not looking for IPv4 */</comment>
                        <for pos:line="101" pos:column="25">for <control pos:line="101" pos:column="29">(<init><expr><name pos:line="101" pos:column="30">k<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">=<pos:position pos:line="101" pos:column="33"/></operator> <literal type="number" pos:line="101" pos:column="34">2<pos:position pos:line="101" pos:column="35"/></literal></expr>;<pos:position pos:line="101" pos:column="36"/></init> <condition><expr><name pos:line="101" pos:column="37">k<pos:position pos:line="101" pos:column="38"/></name> <operator pos:line="101" pos:column="39">&lt;<pos:position pos:line="101" pos:column="43"/></operator> <name pos:line="101" pos:column="41">z<pos:position pos:line="101" pos:column="42"/></name></expr>;<pos:position pos:line="101" pos:column="43"/></condition> <incr><expr><operator pos:line="101" pos:column="44">++<pos:position pos:line="101" pos:column="46"/></operator><name pos:line="101" pos:column="46">k<pos:position pos:line="101" pos:column="47"/></name></expr></incr>)<pos:position pos:line="101" pos:column="48"/></control> <block pos:line="101" pos:column="49">{
                            <expr_stmt><expr><name pos:line="102" pos:column="29">c<pos:position pos:line="102" pos:column="30"/></name> <operator pos:line="102" pos:column="31">=<pos:position pos:line="102" pos:column="32"/></operator> <operator pos:line="102" pos:column="33">(<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="34">int<pos:position pos:line="102" pos:column="37"/></name><operator pos:line="102" pos:column="37">)<pos:position pos:line="102" pos:column="38"/></operator> <name><name pos:line="102" pos:column="39">bufa<pos:position pos:line="102" pos:column="43"/></name><index pos:line="102" pos:column="43">[<expr><name pos:line="102" pos:column="44">k<pos:position pos:line="102" pos:column="45"/></name></expr>]<pos:position pos:line="102" pos:column="46"/></index></name></expr>;<pos:position pos:line="102" pos:column="47"/></expr_stmt>
                            <if pos:line="103" pos:column="29">if <condition pos:line="103" pos:column="32">(<expr><name pos:line="103" pos:column="33">c<pos:position pos:line="103" pos:column="34"/></name> <operator pos:line="103" pos:column="35">&lt;<pos:position pos:line="103" pos:column="39"/></operator> <literal type="number" pos:line="103" pos:column="37">0<pos:position pos:line="103" pos:column="38"/></literal></expr>)<pos:position pos:line="103" pos:column="39"/></condition><then pos:line="103" pos:column="39">
                                <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="33">c<pos:position pos:line="104" pos:column="34"/></name> <operator pos:line="104" pos:column="35">=<pos:position pos:line="104" pos:column="36"/></operator> <name pos:line="104" pos:column="37">c<pos:position pos:line="104" pos:column="38"/></name> <operator pos:line="104" pos:column="39">+<pos:position pos:line="104" pos:column="40"/></operator> <literal type="number" pos:line="104" pos:column="41">256<pos:position pos:line="104" pos:column="44"/></literal></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt></block></then></if>
                            <decl_stmt><decl><type><name pos:line="105" pos:column="29">int<pos:position pos:line="105" pos:column="32"/></name></type> <name pos:line="105" pos:column="33">hlen<pos:position pos:line="105" pos:column="37"/></name> <init pos:line="105" pos:column="38">= <expr><call><name pos:line="105" pos:column="40">snprintf<pos:position pos:line="105" pos:column="48"/></name><argument_list pos:line="105" pos:column="48">(<argument><expr><name pos:line="105" pos:column="49">hexc<pos:position pos:line="105" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="105" pos:column="55">sizeof<argument_list pos:line="105" pos:column="61">(<argument><expr><name pos:line="105" pos:column="62">hexc<pos:position pos:line="105" pos:column="66"/></name></expr></argument>)<pos:position pos:line="105" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="69">"%02X"<pos:position pos:line="105" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="77">c<pos:position pos:line="105" pos:column="78"/></name></expr></argument>)<pos:position pos:line="105" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="105" pos:column="80"/></decl_stmt>
                            <if pos:line="106" pos:column="29">if <condition pos:line="106" pos:column="32">(<expr><name pos:line="106" pos:column="33">k<pos:position pos:line="106" pos:column="34"/></name> <operator pos:line="106" pos:column="35">==<pos:position pos:line="106" pos:column="37"/></operator> <literal type="number" pos:line="106" pos:column="38">2<pos:position pos:line="106" pos:column="39"/></literal></expr>)<pos:position pos:line="106" pos:column="40"/></condition><then pos:line="106" pos:column="40">
                                <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="33">xstrncpy<pos:position pos:line="107" pos:column="41"/></name><argument_list pos:line="107" pos:column="41">(<argument><expr><name pos:line="107" pos:column="42">bufb<pos:position pos:line="107" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="48">hexc<pos:position pos:line="107" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="54">sizeof<argument_list pos:line="107" pos:column="60">(<argument><expr><name pos:line="107" pos:column="61">bufb<pos:position pos:line="107" pos:column="65"/></name></expr></argument>)<pos:position pos:line="107" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="107" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="68"/></expr_stmt></block></then>
                            <else pos:line="108" pos:column="29">else
                                <block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="33">strncat<pos:position pos:line="109" pos:column="40"/></name><argument_list pos:line="109" pos:column="40">(<argument><expr><name pos:line="109" pos:column="41">bufb<pos:position pos:line="109" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="47">hexc<pos:position pos:line="109" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="53">hlen<pos:position pos:line="109" pos:column="57"/></name></expr></argument>)<pos:position pos:line="109" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="59"/></expr_stmt></block></else></if>
                        }<pos:position pos:line="110" pos:column="26"/></block></for>
                        <expr_stmt><expr><name pos:line="111" pos:column="25">y<pos:position pos:line="111" pos:column="26"/></name> <operator pos:line="111" pos:column="27">=<pos:position pos:line="111" pos:column="28"/></operator> <call><name pos:line="111" pos:column="29">strlen<pos:position pos:line="111" pos:column="35"/></name><argument_list pos:line="111" pos:column="35">(<argument><expr><name pos:line="111" pos:column="36">bufb<pos:position pos:line="111" pos:column="40"/></name></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="42"/></expr_stmt>
                        <comment type="block" pos:line="112" pos:column="25">/* Compare value with IP */</comment>
                        <if pos:line="113" pos:column="25">if <condition pos:line="113" pos:column="28">(<expr><call><name pos:line="113" pos:column="29">memcmp<pos:position pos:line="113" pos:column="35"/></name><argument_list pos:line="113" pos:column="35">(<argument><expr><name><name pos:line="113" pos:column="36">l<pos:position pos:line="113" pos:column="37"/></name><operator pos:line="113" pos:column="37">-&gt;<pos:position pos:line="113" pos:column="42"/></operator><name pos:line="113" pos:column="39">search_ip<pos:position pos:line="113" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="50">bufb<pos:position pos:line="113" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="56">y<pos:position pos:line="113" pos:column="57"/></name></expr></argument>)<pos:position pos:line="113" pos:column="58"/></argument_list></call> <operator pos:line="113" pos:column="59">==<pos:position pos:line="113" pos:column="61"/></operator> <literal type="number" pos:line="113" pos:column="62">0<pos:position pos:line="113" pos:column="63"/></literal></expr>)<pos:position pos:line="113" pos:column="64"/></condition><then pos:line="113" pos:column="64"> <block pos:line="113" pos:column="65">{
                            <comment type="block" pos:line="114" pos:column="29">/* We got a match! - Scan 'ber' for 'cn' values */</comment>
                            <expr_stmt><expr><name pos:line="115" pos:column="29">z<pos:position pos:line="115" pos:column="30"/></name> <operator pos:line="115" pos:column="31">=<pos:position pos:line="115" pos:column="32"/></operator> <call><name pos:line="115" pos:column="33">ldap_count_values_len<pos:position pos:line="115" pos:column="54"/></name><argument_list pos:line="115" pos:column="54">(<argument><expr><name pos:line="115" pos:column="55">ber<pos:position pos:line="115" pos:column="58"/></name></expr></argument>)<pos:position pos:line="115" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="60"/></expr_stmt>
                            <for pos:line="116" pos:column="29">for <control pos:line="116" pos:column="33">(<init><expr><name pos:line="116" pos:column="34">j<pos:position pos:line="116" pos:column="35"/></name> <operator pos:line="116" pos:column="36">=<pos:position pos:line="116" pos:column="37"/></operator> <literal type="number" pos:line="116" pos:column="38">0<pos:position pos:line="116" pos:column="39"/></literal></expr>;<pos:position pos:line="116" pos:column="40"/></init> <condition><expr><name pos:line="116" pos:column="41">j<pos:position pos:line="116" pos:column="42"/></name> <operator pos:line="116" pos:column="43">&lt;<pos:position pos:line="116" pos:column="47"/></operator> <name pos:line="116" pos:column="45">z<pos:position pos:line="116" pos:column="46"/></name></expr>;<pos:position pos:line="116" pos:column="47"/></condition> <incr><expr><operator pos:line="116" pos:column="48">++<pos:position pos:line="116" pos:column="50"/></operator><name pos:line="116" pos:column="50">j<pos:position pos:line="116" pos:column="51"/></name></expr></incr>)<pos:position pos:line="116" pos:column="52"/></control> <block pos:line="116" pos:column="53">{
<comment type="line" pos:line="117" pos:column="1">// broken?                        xstrncpy(l-&gt;userid, ber[j]-&gt;bv_val, min(sizeof(l-&gt;userid),static_cast&lt;size_t&gt;(ber[j]-&gt;bv_len)));</comment>
                                <expr_stmt><expr><call><name pos:line="118" pos:column="33">xstrncpy<pos:position pos:line="118" pos:column="41"/></name><argument_list pos:line="118" pos:column="41">(<argument><expr><name><name pos:line="118" pos:column="42">l<pos:position pos:line="118" pos:column="43"/></name><operator pos:line="118" pos:column="43">-&gt;<pos:position pos:line="118" pos:column="48"/></operator><name pos:line="118" pos:column="45">userid<pos:position pos:line="118" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="53">ber<pos:position pos:line="118" pos:column="56"/></name><index pos:line="118" pos:column="56">[<expr><name pos:line="118" pos:column="57">j<pos:position pos:line="118" pos:column="58"/></name></expr>]<pos:position pos:line="118" pos:column="59"/></index></name><operator pos:line="118" pos:column="59">-&gt;<pos:position pos:line="118" pos:column="64"/></operator><name pos:line="118" pos:column="61">bv_val<pos:position pos:line="118" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="118" pos:column="69">sizeof<argument_list pos:line="118" pos:column="75">(<argument><expr><name><name pos:line="118" pos:column="76">l<pos:position pos:line="118" pos:column="77"/></name><operator pos:line="118" pos:column="77">-&gt;<pos:position pos:line="118" pos:column="82"/></operator><name pos:line="118" pos:column="79">userid<pos:position pos:line="118" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="118" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="88"/></expr_stmt>
                                <comment type="block" pos:line="119" pos:column="33">/* Using bv_len of min() breaks the result by 2 chars */</comment>
                            }<pos:position pos:line="120" pos:column="30"/></block></for>
                            <expr_stmt><expr><call><name pos:line="121" pos:column="29">ldap_value_free_len<pos:position pos:line="121" pos:column="48"/></name><argument_list pos:line="121" pos:column="48">(<argument><expr><name><name pos:line="121" pos:column="49">l<pos:position pos:line="121" pos:column="50"/></name><operator pos:line="121" pos:column="50">-&gt;<pos:position pos:line="121" pos:column="55"/></operator><name pos:line="121" pos:column="52">val<pos:position pos:line="121" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="57"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="122" pos:column="29">l<pos:position pos:line="122" pos:column="30"/></name><operator pos:line="122" pos:column="30">-&gt;<pos:position pos:line="122" pos:column="35"/></operator><name pos:line="122" pos:column="32">val<pos:position pos:line="122" pos:column="35"/></name></name> <operator pos:line="122" pos:column="36">=<pos:position pos:line="122" pos:column="37"/></operator> <name pos:line="122" pos:column="38">NULL<pos:position pos:line="122" pos:column="42"/></name></expr>;<pos:position pos:line="122" pos:column="43"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="123" pos:column="29">ldap_value_free_len<pos:position pos:line="123" pos:column="48"/></name><argument_list pos:line="123" pos:column="48">(<argument><expr><name pos:line="123" pos:column="49">ber<pos:position pos:line="123" pos:column="52"/></name></expr></argument>)<pos:position pos:line="123" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="54"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="124" pos:column="29">ber<pos:position pos:line="124" pos:column="32"/></name> <operator pos:line="124" pos:column="33">=<pos:position pos:line="124" pos:column="34"/></operator> <name pos:line="124" pos:column="35">NULL<pos:position pos:line="124" pos:column="39"/></name></expr>;<pos:position pos:line="124" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="125" pos:column="29">l<pos:position pos:line="125" pos:column="30"/></name><operator pos:line="125" pos:column="30">-&gt;<pos:position pos:line="125" pos:column="35"/></operator><name pos:line="125" pos:column="32">num_val<pos:position pos:line="125" pos:column="39"/></name></name> <operator pos:line="125" pos:column="40">=<pos:position pos:line="125" pos:column="41"/></operator> <literal type="number" pos:line="125" pos:column="42">0<pos:position pos:line="125" pos:column="43"/></literal></expr>;<pos:position pos:line="125" pos:column="44"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="126" pos:column="29">l<pos:position pos:line="126" pos:column="30"/></name><operator pos:line="126" pos:column="30">-&gt;<pos:position pos:line="126" pos:column="35"/></operator><name pos:line="126" pos:column="32">err<pos:position pos:line="126" pos:column="35"/></name></name> <operator pos:line="126" pos:column="36">=<pos:position pos:line="126" pos:column="37"/></operator> <name pos:line="126" pos:column="38">LDAP_SUCCESS<pos:position pos:line="126" pos:column="50"/></name></expr>;<pos:position pos:line="126" pos:column="51"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="127" pos:column="29">l<pos:position pos:line="127" pos:column="30"/></name><operator pos:line="127" pos:column="30">-&gt;<pos:position pos:line="127" pos:column="35"/></operator><name pos:line="127" pos:column="32">status<pos:position pos:line="127" pos:column="38"/></name></name> <operator pos:line="127" pos:column="39">&amp;=<pos:position pos:line="127" pos:column="45"/></operator> <operator pos:line="127" pos:column="42">~<pos:position pos:line="127" pos:column="43"/></operator><operator pos:line="127" pos:column="43">(<pos:position pos:line="127" pos:column="44"/></operator><name pos:line="127" pos:column="44">LDAP_SEARCH_S<pos:position pos:line="127" pos:column="57"/></name><operator pos:line="127" pos:column="57">)<pos:position pos:line="127" pos:column="58"/></operator></expr>;<pos:position pos:line="127" pos:column="59"/></expr_stmt>
                            <return pos:line="128" pos:column="29">return <expr><name pos:line="128" pos:column="36">LDAP_ERR_SUCCESS<pos:position pos:line="128" pos:column="52"/></name></expr>;<pos:position pos:line="128" pos:column="53"/></return>                <comment type="block" pos:line="128" pos:column="69">/* We got our userid */</comment>
                        }<pos:position pos:line="129" pos:column="26"/></block></then></if>
                        <comment type="block" pos:line="130" pos:column="25">/* Not matched, continue */</comment>
                    }<pos:position pos:line="131" pos:column="22"/></block></then></if></elseif> <elseif pos:line="131" pos:column="23">else <if pos:line="131" pos:column="28">if <condition pos:line="131" pos:column="31">(<expr><operator pos:line="131" pos:column="32">(<pos:position pos:line="131" pos:column="33"/></operator><name pos:line="131" pos:column="33">j<pos:position pos:line="131" pos:column="34"/></name> <operator pos:line="131" pos:column="35">==<pos:position pos:line="131" pos:column="37"/></operator> <literal type="number" pos:line="131" pos:column="38">10<pos:position pos:line="131" pos:column="40"/></literal><operator pos:line="131" pos:column="40">)<pos:position pos:line="131" pos:column="41"/></operator> <operator pos:line="131" pos:column="42">||<pos:position pos:line="131" pos:column="44"/></operator> <operator pos:line="131" pos:column="45">(<pos:position pos:line="131" pos:column="46"/></operator><name pos:line="131" pos:column="46">j<pos:position pos:line="131" pos:column="47"/></name> <operator pos:line="131" pos:column="48">==<pos:position pos:line="131" pos:column="50"/></operator> <literal type="number" pos:line="131" pos:column="51">11<pos:position pos:line="131" pos:column="53"/></literal><operator pos:line="131" pos:column="53">)<pos:position pos:line="131" pos:column="54"/></operator></expr>)<pos:position pos:line="131" pos:column="55"/></condition><then pos:line="131" pos:column="55"> <block pos:line="131" pos:column="56">{
                        <comment type="block" pos:line="132" pos:column="25">/* IPv6 (UDP/TCP) address (eDirectory 8.8 and higher) */</comment>
                        <comment type="block" pos:line="133" pos:column="25">/* bufa + 2 is the address (skip 2 digit port) */</comment>
                        <if pos:line="134" pos:column="25">if <condition pos:line="134" pos:column="28">(<expr><operator pos:line="134" pos:column="29">!<pos:position pos:line="134" pos:column="30"/></operator><operator pos:line="134" pos:column="30">(<pos:position pos:line="134" pos:column="31"/></operator><name><name pos:line="134" pos:column="31">l<pos:position pos:line="134" pos:column="32"/></name><operator pos:line="134" pos:column="32">-&gt;<pos:position pos:line="134" pos:column="37"/></operator><name pos:line="134" pos:column="34">status<pos:position pos:line="134" pos:column="40"/></name></name> <operator pos:line="134" pos:column="41">&amp;<pos:position pos:line="134" pos:column="46"/></operator> <name pos:line="134" pos:column="43">LDAP_IPV6_S<pos:position pos:line="134" pos:column="54"/></name><operator pos:line="134" pos:column="54">)<pos:position pos:line="134" pos:column="55"/></operator></expr>)<pos:position pos:line="134" pos:column="56"/></condition><then pos:line="134" pos:column="56">
                            <block type="pseudo"><break pos:line="135" pos:column="29">break;<pos:position pos:line="135" pos:column="35"/></break></block></then></if>                          <comment type="block" pos:line="135" pos:column="61">/* Not looking for IPv6 */</comment>
                        <for pos:line="136" pos:column="25">for <control pos:line="136" pos:column="29">(<init><expr><name pos:line="136" pos:column="30">k<pos:position pos:line="136" pos:column="31"/></name> <operator pos:line="136" pos:column="32">=<pos:position pos:line="136" pos:column="33"/></operator> <literal type="number" pos:line="136" pos:column="34">2<pos:position pos:line="136" pos:column="35"/></literal></expr>;<pos:position pos:line="136" pos:column="36"/></init> <condition><expr><name pos:line="136" pos:column="37">k<pos:position pos:line="136" pos:column="38"/></name> <operator pos:line="136" pos:column="39">&lt;<pos:position pos:line="136" pos:column="43"/></operator> <name pos:line="136" pos:column="41">z<pos:position pos:line="136" pos:column="42"/></name></expr>;<pos:position pos:line="136" pos:column="43"/></condition> <incr><expr><operator pos:line="136" pos:column="44">++<pos:position pos:line="136" pos:column="46"/></operator><name pos:line="136" pos:column="46">k<pos:position pos:line="136" pos:column="47"/></name></expr></incr>)<pos:position pos:line="136" pos:column="48"/></control> <block pos:line="136" pos:column="49">{
                            <expr_stmt><expr><name pos:line="137" pos:column="29">c<pos:position pos:line="137" pos:column="30"/></name> <operator pos:line="137" pos:column="31">=<pos:position pos:line="137" pos:column="32"/></operator> <operator pos:line="137" pos:column="33">(<pos:position pos:line="137" pos:column="34"/></operator><name pos:line="137" pos:column="34">int<pos:position pos:line="137" pos:column="37"/></name><operator pos:line="137" pos:column="37">)<pos:position pos:line="137" pos:column="38"/></operator> <name><name pos:line="137" pos:column="39">bufa<pos:position pos:line="137" pos:column="43"/></name><index pos:line="137" pos:column="43">[<expr><name pos:line="137" pos:column="44">k<pos:position pos:line="137" pos:column="45"/></name></expr>]<pos:position pos:line="137" pos:column="46"/></index></name></expr>;<pos:position pos:line="137" pos:column="47"/></expr_stmt>
                            <if pos:line="138" pos:column="29">if <condition pos:line="138" pos:column="32">(<expr><name pos:line="138" pos:column="33">c<pos:position pos:line="138" pos:column="34"/></name> <operator pos:line="138" pos:column="35">&lt;<pos:position pos:line="138" pos:column="39"/></operator> <literal type="number" pos:line="138" pos:column="37">0<pos:position pos:line="138" pos:column="38"/></literal></expr>)<pos:position pos:line="138" pos:column="39"/></condition><then pos:line="138" pos:column="39">
                                <block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="33">c<pos:position pos:line="139" pos:column="34"/></name> <operator pos:line="139" pos:column="35">=<pos:position pos:line="139" pos:column="36"/></operator> <name pos:line="139" pos:column="37">c<pos:position pos:line="139" pos:column="38"/></name> <operator pos:line="139" pos:column="39">+<pos:position pos:line="139" pos:column="40"/></operator> <literal type="number" pos:line="139" pos:column="41">256<pos:position pos:line="139" pos:column="44"/></literal></expr>;<pos:position pos:line="139" pos:column="45"/></expr_stmt></block></then></if>
                            <decl_stmt><decl><type><name pos:line="140" pos:column="29">int<pos:position pos:line="140" pos:column="32"/></name></type> <name pos:line="140" pos:column="33">hlen<pos:position pos:line="140" pos:column="37"/></name> <init pos:line="140" pos:column="38">= <expr><call><name pos:line="140" pos:column="40">snprintf<pos:position pos:line="140" pos:column="48"/></name><argument_list pos:line="140" pos:column="48">(<argument><expr><name pos:line="140" pos:column="49">hexc<pos:position pos:line="140" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="140" pos:column="55">sizeof<argument_list pos:line="140" pos:column="61">(<argument><expr><name pos:line="140" pos:column="62">hexc<pos:position pos:line="140" pos:column="66"/></name></expr></argument>)<pos:position pos:line="140" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="69">"%02X"<pos:position pos:line="140" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="140" pos:column="77">c<pos:position pos:line="140" pos:column="78"/></name></expr></argument>)<pos:position pos:line="140" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="140" pos:column="80"/></decl_stmt>
                            <if pos:line="141" pos:column="29">if <condition pos:line="141" pos:column="32">(<expr><name pos:line="141" pos:column="33">k<pos:position pos:line="141" pos:column="34"/></name> <operator pos:line="141" pos:column="35">==<pos:position pos:line="141" pos:column="37"/></operator> <literal type="number" pos:line="141" pos:column="38">2<pos:position pos:line="141" pos:column="39"/></literal></expr>)<pos:position pos:line="141" pos:column="40"/></condition><then pos:line="141" pos:column="40">
                                <block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="33">xstrncpy<pos:position pos:line="142" pos:column="41"/></name><argument_list pos:line="142" pos:column="41">(<argument><expr><name pos:line="142" pos:column="42">bufb<pos:position pos:line="142" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="48">hexc<pos:position pos:line="142" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="54">sizeof<argument_list pos:line="142" pos:column="60">(<argument><expr><name pos:line="142" pos:column="61">bufb<pos:position pos:line="142" pos:column="65"/></name></expr></argument>)<pos:position pos:line="142" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="142" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="68"/></expr_stmt></block></then>
                            <else pos:line="143" pos:column="29">else
                                <block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="33">strncat<pos:position pos:line="144" pos:column="40"/></name><argument_list pos:line="144" pos:column="40">(<argument><expr><name pos:line="144" pos:column="41">bufb<pos:position pos:line="144" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="47">hexc<pos:position pos:line="144" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="53">hlen<pos:position pos:line="144" pos:column="57"/></name></expr></argument>)<pos:position pos:line="144" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="59"/></expr_stmt></block></else></if>
                        }<pos:position pos:line="145" pos:column="26"/></block></for>
                        <expr_stmt><expr><name pos:line="146" pos:column="25">y<pos:position pos:line="146" pos:column="26"/></name> <operator pos:line="146" pos:column="27">=<pos:position pos:line="146" pos:column="28"/></operator> <call><name pos:line="146" pos:column="29">strlen<pos:position pos:line="146" pos:column="35"/></name><argument_list pos:line="146" pos:column="35">(<argument><expr><name pos:line="146" pos:column="36">bufb<pos:position pos:line="146" pos:column="40"/></name></expr></argument>)<pos:position pos:line="146" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="42"/></expr_stmt>
                        <comment type="block" pos:line="147" pos:column="25">/* Compare value with IP */</comment>
                        <if pos:line="148" pos:column="25">if <condition pos:line="148" pos:column="28">(<expr><call><name pos:line="148" pos:column="29">memcmp<pos:position pos:line="148" pos:column="35"/></name><argument_list pos:line="148" pos:column="35">(<argument><expr><name><name pos:line="148" pos:column="36">l<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">-&gt;<pos:position pos:line="148" pos:column="42"/></operator><name pos:line="148" pos:column="39">search_ip<pos:position pos:line="148" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="50">bufb<pos:position pos:line="148" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="56">y<pos:position pos:line="148" pos:column="57"/></name></expr></argument>)<pos:position pos:line="148" pos:column="58"/></argument_list></call> <operator pos:line="148" pos:column="59">==<pos:position pos:line="148" pos:column="61"/></operator> <literal type="number" pos:line="148" pos:column="62">0<pos:position pos:line="148" pos:column="63"/></literal></expr>)<pos:position pos:line="148" pos:column="64"/></condition><then pos:line="148" pos:column="64"> <block pos:line="148" pos:column="65">{
                            <comment type="block" pos:line="149" pos:column="29">/* We got a match! - Scan 'ber' for 'cn' values */</comment>
                            <expr_stmt><expr><name pos:line="150" pos:column="29">z<pos:position pos:line="150" pos:column="30"/></name> <operator pos:line="150" pos:column="31">=<pos:position pos:line="150" pos:column="32"/></operator> <call><name pos:line="150" pos:column="33">ldap_count_values_len<pos:position pos:line="150" pos:column="54"/></name><argument_list pos:line="150" pos:column="54">(<argument><expr><name pos:line="150" pos:column="55">ber<pos:position pos:line="150" pos:column="58"/></name></expr></argument>)<pos:position pos:line="150" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="60"/></expr_stmt>
                            <for pos:line="151" pos:column="29">for <control pos:line="151" pos:column="33">(<init><expr><name pos:line="151" pos:column="34">j<pos:position pos:line="151" pos:column="35"/></name> <operator pos:line="151" pos:column="36">=<pos:position pos:line="151" pos:column="37"/></operator> <literal type="number" pos:line="151" pos:column="38">0<pos:position pos:line="151" pos:column="39"/></literal></expr>;<pos:position pos:line="151" pos:column="40"/></init> <condition><expr><name pos:line="151" pos:column="41">j<pos:position pos:line="151" pos:column="42"/></name> <operator pos:line="151" pos:column="43">&lt;<pos:position pos:line="151" pos:column="47"/></operator> <name pos:line="151" pos:column="45">z<pos:position pos:line="151" pos:column="46"/></name></expr>;<pos:position pos:line="151" pos:column="47"/></condition> <incr><expr><operator pos:line="151" pos:column="48">++<pos:position pos:line="151" pos:column="50"/></operator><name pos:line="151" pos:column="50">j<pos:position pos:line="151" pos:column="51"/></name></expr></incr>)<pos:position pos:line="151" pos:column="52"/></control> <block pos:line="151" pos:column="53">{
<comment type="line" pos:line="152" pos:column="1">// broken?                        xstrncpy(l-&gt;userid, ber[j]-&gt;bv_val, min(sizeof(l-&gt;userid),static_cast&lt;size_t&gt;(ber[j]-&gt;bv_len)));</comment>
                                <expr_stmt><expr><call><name pos:line="153" pos:column="33">xstrncpy<pos:position pos:line="153" pos:column="41"/></name><argument_list pos:line="153" pos:column="41">(<argument><expr><name><name pos:line="153" pos:column="42">l<pos:position pos:line="153" pos:column="43"/></name><operator pos:line="153" pos:column="43">-&gt;<pos:position pos:line="153" pos:column="48"/></operator><name pos:line="153" pos:column="45">userid<pos:position pos:line="153" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="53">ber<pos:position pos:line="153" pos:column="56"/></name><index pos:line="153" pos:column="56">[<expr><name pos:line="153" pos:column="57">j<pos:position pos:line="153" pos:column="58"/></name></expr>]<pos:position pos:line="153" pos:column="59"/></index></name><operator pos:line="153" pos:column="59">-&gt;<pos:position pos:line="153" pos:column="64"/></operator><name pos:line="153" pos:column="61">bv_val<pos:position pos:line="153" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="153" pos:column="69">sizeof<argument_list pos:line="153" pos:column="75">(<argument><expr><name><name pos:line="153" pos:column="76">l<pos:position pos:line="153" pos:column="77"/></name><operator pos:line="153" pos:column="77">-&gt;<pos:position pos:line="153" pos:column="82"/></operator><name pos:line="153" pos:column="79">userid<pos:position pos:line="153" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="153" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="88"/></expr_stmt>
                                <comment type="block" pos:line="154" pos:column="33">/* Using bv_len of min() breaks the result by 2 chars */</comment>
                            }<pos:position pos:line="155" pos:column="30"/></block></for>
                            <expr_stmt><expr><call><name pos:line="156" pos:column="29">ldap_value_free_len<pos:position pos:line="156" pos:column="48"/></name><argument_list pos:line="156" pos:column="48">(<argument><expr><name><name pos:line="156" pos:column="49">l<pos:position pos:line="156" pos:column="50"/></name><operator pos:line="156" pos:column="50">-&gt;<pos:position pos:line="156" pos:column="55"/></operator><name pos:line="156" pos:column="52">val<pos:position pos:line="156" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="57"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="157" pos:column="29">l<pos:position pos:line="157" pos:column="30"/></name><operator pos:line="157" pos:column="30">-&gt;<pos:position pos:line="157" pos:column="35"/></operator><name pos:line="157" pos:column="32">val<pos:position pos:line="157" pos:column="35"/></name></name> <operator pos:line="157" pos:column="36">=<pos:position pos:line="157" pos:column="37"/></operator> <name pos:line="157" pos:column="38">NULL<pos:position pos:line="157" pos:column="42"/></name></expr>;<pos:position pos:line="157" pos:column="43"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="158" pos:column="29">ldap_value_free_len<pos:position pos:line="158" pos:column="48"/></name><argument_list pos:line="158" pos:column="48">(<argument><expr><name pos:line="158" pos:column="49">ber<pos:position pos:line="158" pos:column="52"/></name></expr></argument>)<pos:position pos:line="158" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="54"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="159" pos:column="29">ber<pos:position pos:line="159" pos:column="32"/></name> <operator pos:line="159" pos:column="33">=<pos:position pos:line="159" pos:column="34"/></operator> <name pos:line="159" pos:column="35">NULL<pos:position pos:line="159" pos:column="39"/></name></expr>;<pos:position pos:line="159" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="160" pos:column="29">l<pos:position pos:line="160" pos:column="30"/></name><operator pos:line="160" pos:column="30">-&gt;<pos:position pos:line="160" pos:column="35"/></operator><name pos:line="160" pos:column="32">num_val<pos:position pos:line="160" pos:column="39"/></name></name> <operator pos:line="160" pos:column="40">=<pos:position pos:line="160" pos:column="41"/></operator> <literal type="number" pos:line="160" pos:column="42">0<pos:position pos:line="160" pos:column="43"/></literal></expr>;<pos:position pos:line="160" pos:column="44"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="161" pos:column="29">l<pos:position pos:line="161" pos:column="30"/></name><operator pos:line="161" pos:column="30">-&gt;<pos:position pos:line="161" pos:column="35"/></operator><name pos:line="161" pos:column="32">err<pos:position pos:line="161" pos:column="35"/></name></name> <operator pos:line="161" pos:column="36">=<pos:position pos:line="161" pos:column="37"/></operator> <name pos:line="161" pos:column="38">LDAP_SUCCESS<pos:position pos:line="161" pos:column="50"/></name></expr>;<pos:position pos:line="161" pos:column="51"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="162" pos:column="29">l<pos:position pos:line="162" pos:column="30"/></name><operator pos:line="162" pos:column="30">-&gt;<pos:position pos:line="162" pos:column="35"/></operator><name pos:line="162" pos:column="32">status<pos:position pos:line="162" pos:column="38"/></name></name> <operator pos:line="162" pos:column="39">&amp;=<pos:position pos:line="162" pos:column="45"/></operator> <operator pos:line="162" pos:column="42">~<pos:position pos:line="162" pos:column="43"/></operator><operator pos:line="162" pos:column="43">(<pos:position pos:line="162" pos:column="44"/></operator><name pos:line="162" pos:column="44">LDAP_SEARCH_S<pos:position pos:line="162" pos:column="57"/></name><operator pos:line="162" pos:column="57">)<pos:position pos:line="162" pos:column="58"/></operator></expr>;<pos:position pos:line="162" pos:column="59"/></expr_stmt>
                            <return pos:line="163" pos:column="29">return <expr><name pos:line="163" pos:column="36">LDAP_ERR_SUCCESS<pos:position pos:line="163" pos:column="52"/></name></expr>;<pos:position pos:line="163" pos:column="53"/></return>                <comment type="block" pos:line="163" pos:column="69">/* We got our userid */</comment>
                        }<pos:position pos:line="164" pos:column="26"/></block></then></if>
                        <comment type="block" pos:line="165" pos:column="25">/* Not matched, continue */</comment>
                    }<pos:position pos:line="166" pos:column="22"/></block></then></if></elseif></if>
<comment type="line" pos:line="167" pos:column="1">//          else {</comment>
                    <comment type="block" pos:line="168" pos:column="21">/* Others are unsupported */</comment>
<comment type="line" pos:line="169" pos:column="1">//                    }</comment>
                }<pos:position pos:line="170" pos:column="18"/></block></for>
                <if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><name pos:line="171" pos:column="21">ber<pos:position pos:line="171" pos:column="24"/></name> <operator pos:line="171" pos:column="25">!=<pos:position pos:line="171" pos:column="27"/></operator> <name pos:line="171" pos:column="28">NULL<pos:position pos:line="171" pos:column="32"/></name></expr>)<pos:position pos:line="171" pos:column="33"/></condition><then pos:line="171" pos:column="33"> <block pos:line="171" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="172" pos:column="21">ldap_value_free_len<pos:position pos:line="172" pos:column="40"/></name><argument_list pos:line="172" pos:column="40">(<argument><expr><name pos:line="172" pos:column="41">ber<pos:position pos:line="172" pos:column="44"/></name></expr></argument>)<pos:position pos:line="172" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="173" pos:column="21">ber<pos:position pos:line="173" pos:column="24"/></name> <operator pos:line="173" pos:column="25">=<pos:position pos:line="173" pos:column="26"/></operator> <name pos:line="173" pos:column="27">NULL<pos:position pos:line="173" pos:column="31"/></name></expr>;<pos:position pos:line="173" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="174" pos:column="18"/></block></then></if>
            }<pos:position pos:line="175" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="176" pos:column="13">ldap_value_free_len<pos:position pos:line="176" pos:column="32"/></name><argument_list pos:line="176" pos:column="32">(<argument><expr><name><name pos:line="176" pos:column="33">l<pos:position pos:line="176" pos:column="34"/></name><operator pos:line="176" pos:column="34">-&gt;<pos:position pos:line="176" pos:column="39"/></operator><name pos:line="176" pos:column="36">val<pos:position pos:line="176" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="177" pos:column="13">l<pos:position pos:line="177" pos:column="14"/></name><operator pos:line="177" pos:column="14">-&gt;<pos:position pos:line="177" pos:column="19"/></operator><name pos:line="177" pos:column="16">val<pos:position pos:line="177" pos:column="19"/></name></name> <operator pos:line="177" pos:column="20">=<pos:position pos:line="177" pos:column="21"/></operator> <name pos:line="177" pos:column="22">NULL<pos:position pos:line="177" pos:column="26"/></name></expr>;<pos:position pos:line="177" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="178" pos:column="10"/></block></then></if>
        <if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">ber<pos:position pos:line="179" pos:column="16"/></name> <operator pos:line="179" pos:column="17">!=<pos:position pos:line="179" pos:column="19"/></operator> <name pos:line="179" pos:column="20">NULL<pos:position pos:line="179" pos:column="24"/></name></expr>)<pos:position pos:line="179" pos:column="25"/></condition><then pos:line="179" pos:column="25"> <block pos:line="179" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">ldap_value_free_len<pos:position pos:line="180" pos:column="32"/></name><argument_list pos:line="180" pos:column="32">(<argument><expr><name pos:line="180" pos:column="33">ber<pos:position pos:line="180" pos:column="36"/></name></expr></argument>)<pos:position pos:line="180" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="181" pos:column="13">ber<pos:position pos:line="181" pos:column="16"/></name> <operator pos:line="181" pos:column="17">=<pos:position pos:line="181" pos:column="18"/></operator> <name pos:line="181" pos:column="19">NULL<pos:position pos:line="181" pos:column="23"/></name></expr>;<pos:position pos:line="181" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="182" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="183" pos:column="9">/* Attr not found, continue */</comment>
    }<pos:position pos:line="184" pos:column="6"/></block></for>
    <comment type="block" pos:line="185" pos:column="5">/* No entries found using given attr */</comment>
    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><name><name pos:line="186" pos:column="9">l<pos:position pos:line="186" pos:column="10"/></name><operator pos:line="186" pos:column="10">-&gt;<pos:position pos:line="186" pos:column="15"/></operator><name pos:line="186" pos:column="12">val<pos:position pos:line="186" pos:column="15"/></name></name> <operator pos:line="186" pos:column="16">!=<pos:position pos:line="186" pos:column="18"/></operator> <name pos:line="186" pos:column="19">NULL<pos:position pos:line="186" pos:column="23"/></name></expr>)<pos:position pos:line="186" pos:column="24"/></condition><then pos:line="186" pos:column="24"> <block pos:line="186" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">ldap_value_free_len<pos:position pos:line="187" pos:column="28"/></name><argument_list pos:line="187" pos:column="28">(<argument><expr><name><name pos:line="187" pos:column="29">l<pos:position pos:line="187" pos:column="30"/></name><operator pos:line="187" pos:column="30">-&gt;<pos:position pos:line="187" pos:column="35"/></operator><name pos:line="187" pos:column="32">val<pos:position pos:line="187" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="188" pos:column="9">l<pos:position pos:line="188" pos:column="10"/></name><operator pos:line="188" pos:column="10">-&gt;<pos:position pos:line="188" pos:column="15"/></operator><name pos:line="188" pos:column="12">val<pos:position pos:line="188" pos:column="15"/></name></name> <operator pos:line="188" pos:column="16">=<pos:position pos:line="188" pos:column="17"/></operator> <name pos:line="188" pos:column="18">NULL<pos:position pos:line="188" pos:column="22"/></name></expr>;<pos:position pos:line="188" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>
    <if pos:line="190" pos:column="5">if <condition pos:line="190" pos:column="8">(<expr><name><name pos:line="190" pos:column="9">l<pos:position pos:line="190" pos:column="10"/></name><operator pos:line="190" pos:column="10">-&gt;<pos:position pos:line="190" pos:column="15"/></operator><name pos:line="190" pos:column="12">lm<pos:position pos:line="190" pos:column="14"/></name></name> <operator pos:line="190" pos:column="15">!=<pos:position pos:line="190" pos:column="17"/></operator> <name pos:line="190" pos:column="18">NULL<pos:position pos:line="190" pos:column="22"/></name></expr>)<pos:position pos:line="190" pos:column="23"/></condition><then pos:line="190" pos:column="23"> <block pos:line="190" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="191" pos:column="9">ldap_msgfree<pos:position pos:line="191" pos:column="21"/></name><argument_list pos:line="191" pos:column="21">(<argument><expr><name><name pos:line="191" pos:column="22">l<pos:position pos:line="191" pos:column="23"/></name><operator pos:line="191" pos:column="23">-&gt;<pos:position pos:line="191" pos:column="28"/></operator><name pos:line="191" pos:column="25">lm<pos:position pos:line="191" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="191" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="192" pos:column="9">l<pos:position pos:line="192" pos:column="10"/></name><operator pos:line="192" pos:column="10">-&gt;<pos:position pos:line="192" pos:column="15"/></operator><name pos:line="192" pos:column="12">lm<pos:position pos:line="192" pos:column="14"/></name></name> <operator pos:line="192" pos:column="15">=<pos:position pos:line="192" pos:column="16"/></operator> <name pos:line="192" pos:column="17">NULL<pos:position pos:line="192" pos:column="21"/></name></expr>;<pos:position pos:line="192" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="194" pos:column="5">l<pos:position pos:line="194" pos:column="6"/></name><operator pos:line="194" pos:column="6">-&gt;<pos:position pos:line="194" pos:column="11"/></operator><name pos:line="194" pos:column="8">num_ent<pos:position pos:line="194" pos:column="15"/></name></name> <operator pos:line="194" pos:column="16">=<pos:position pos:line="194" pos:column="17"/></operator> <literal type="number" pos:line="194" pos:column="18">0<pos:position pos:line="194" pos:column="19"/></literal></expr>;<pos:position pos:line="194" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="195" pos:column="5">l<pos:position pos:line="195" pos:column="6"/></name><operator pos:line="195" pos:column="6">-&gt;<pos:position pos:line="195" pos:column="11"/></operator><name pos:line="195" pos:column="8">num_val<pos:position pos:line="195" pos:column="15"/></name></name> <operator pos:line="195" pos:column="16">=<pos:position pos:line="195" pos:column="17"/></operator> <literal type="number" pos:line="195" pos:column="18">0<pos:position pos:line="195" pos:column="19"/></literal></expr>;<pos:position pos:line="195" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="196" pos:column="5">l<pos:position pos:line="196" pos:column="6"/></name><operator pos:line="196" pos:column="6">-&gt;<pos:position pos:line="196" pos:column="11"/></operator><name pos:line="196" pos:column="8">err<pos:position pos:line="196" pos:column="11"/></name></name> <operator pos:line="196" pos:column="12">=<pos:position pos:line="196" pos:column="13"/></operator> <name pos:line="196" pos:column="14">LDAP_NO_SUCH_OBJECT<pos:position pos:line="196" pos:column="33"/></name></expr>;<pos:position pos:line="196" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="197" pos:column="5">l<pos:position pos:line="197" pos:column="6"/></name><operator pos:line="197" pos:column="6">-&gt;<pos:position pos:line="197" pos:column="11"/></operator><name pos:line="197" pos:column="8">status<pos:position pos:line="197" pos:column="14"/></name></name> <operator pos:line="197" pos:column="15">&amp;=<pos:position pos:line="197" pos:column="21"/></operator> <operator pos:line="197" pos:column="18">~<pos:position pos:line="197" pos:column="19"/></operator><operator pos:line="197" pos:column="19">(<pos:position pos:line="197" pos:column="20"/></operator><name pos:line="197" pos:column="20">LDAP_SEARCH_S<pos:position pos:line="197" pos:column="33"/></name><operator pos:line="197" pos:column="33">)<pos:position pos:line="197" pos:column="34"/></operator></expr>;<pos:position pos:line="197" pos:column="35"/></expr_stmt>
    <return pos:line="198" pos:column="5">return <expr><name pos:line="198" pos:column="12">LDAP_ERR_NOTFOUND<pos:position pos:line="198" pos:column="29"/></name></expr>;<pos:position pos:line="198" pos:column="30"/></return>                       <comment type="block" pos:line="198" pos:column="53">/* Not found ... Sorry :) */</comment>
}<pos:position pos:line="199" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6285_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Comm<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">ConnectionPointer<pos:position pos:line="1" pos:column="24"/></name></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Coordinator<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">openListenSocket<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">SharedListenRequest<pos:position pos:line="2" pos:column="61"/></name><modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type> <name pos:line="2" pos:column="63">request<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">int<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">&amp;<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="41">errNo<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">OpenListenerParams<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="31">p<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name><name pos:line="5" pos:column="35">request<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">params<pos:position pos:line="5" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">54<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">6<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">HERE<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="string" pos:line="7" pos:column="27">"opening listen FD at "<pos:position pos:line="7" pos:column="50"/></literal> <operator pos:line="7" pos:column="51">&lt;&lt;<pos:position pos:line="7" pos:column="59"/></operator> <name><name pos:line="7" pos:column="54">p<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">.<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">addr<pos:position pos:line="7" pos:column="60"/></name></name> <operator pos:line="7" pos:column="61">&lt;&lt;<pos:position pos:line="7" pos:column="69"/></operator> <literal type="string" pos:line="7" pos:column="64">" for kid"<pos:position pos:line="7" pos:column="74"/></literal> <operator pos:line="7" pos:column="75">&lt;&lt;<pos:position pos:line="7" pos:column="83"/></operator>
           <name><name pos:line="8" pos:column="12">request<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">requestorId<pos:position pos:line="8" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Comm<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">::<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">ConnectionPointer<pos:position pos:line="10" pos:column="28"/></name></name></type> <name pos:line="10" pos:column="29">newConn<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><operator pos:line="10" pos:column="39">new<pos:position pos:line="10" pos:column="42"/></operator> <name><name pos:line="10" pos:column="43">Comm<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">::<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">Connection<pos:position pos:line="10" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">newConn<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">local<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name><name pos:line="11" pos:column="22">p<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">addr<pos:position pos:line="11" pos:column="28"/></name></name></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt> <comment type="line" pos:line="11" pos:column="30">// comm_open_listener may modify it</comment>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">newConn<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">flags<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name><name pos:line="12" pos:column="22">p<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">flags<pos:position pos:line="12" pos:column="29"/></name></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">enter_suid<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">()<pos:position pos:line="14" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">comm_open_listener<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">p<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">.<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">sock_type<pos:position pos:line="15" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="37">p<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">.<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">proto<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">newConn<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="55">FdNote<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name><name pos:line="15" pos:column="62">p<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">.<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="64">fdNote<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">errNo<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <ternary><condition><expr><call><name><name pos:line="16" pos:column="13">Comm<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">::<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">IsConnOpen<pos:position pos:line="16" pos:column="29"/></name></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">newConn<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <expr><literal type="number" pos:line="16" pos:column="41">0<pos:position pos:line="16" pos:column="42"/></literal></expr> <pos:position pos:line="16" pos:column="43"/></then><else pos:line="16" pos:column="43">: <expr><name pos:line="16" pos:column="45">errno<pos:position pos:line="16" pos:column="50"/></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">leave_suid<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">()<pos:position pos:line="17" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">54<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">6<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="19">HERE<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&lt;&lt;<pos:position pos:line="19" pos:column="32"/></operator> <literal type="string" pos:line="19" pos:column="27">"tried listening on "<pos:position pos:line="19" pos:column="48"/></literal> <operator pos:line="19" pos:column="49">&lt;&lt;<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="52">newConn<pos:position pos:line="19" pos:column="59"/></name> <operator pos:line="19" pos:column="60">&lt;&lt;<pos:position pos:line="19" pos:column="68"/></operator> <literal type="string" pos:line="19" pos:column="63">" for kid"<pos:position pos:line="19" pos:column="73"/></literal> <operator pos:line="19" pos:column="74">&lt;&lt;<pos:position pos:line="19" pos:column="82"/></operator>
           <name><name pos:line="20" pos:column="12">request<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">requestorId<pos:position pos:line="20" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>

    <comment type="line" pos:line="22" pos:column="5">// cache positive results</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name><name pos:line="23" pos:column="9">Comm<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">::<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">IsConnOpen<pos:position pos:line="23" pos:column="25"/></name></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">newConn<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="9">listeners<pos:position pos:line="24" pos:column="18"/></name><index pos:line="24" pos:column="18">[<expr><name><name pos:line="24" pos:column="19">request<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">params<pos:position pos:line="24" pos:column="33"/></name></name></expr>]<pos:position pos:line="24" pos:column="34"/></index></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">newConn<pos:position pos:line="24" pos:column="44"/></name></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt></block></then></if>

    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">newConn<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_424_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">crypt_md5<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">pw<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">salt<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">magic<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="string" pos:line="3" pos:column="25">"$1$"<pos:position pos:line="3" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">magiclen<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">3<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name></type> <name><name pos:line="5" pos:column="17">passwd<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><literal type="number" pos:line="5" pos:column="24">120<pos:position pos:line="5" pos:column="27"/></literal></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>, <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="31">p<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><specifier pos:line="6" pos:column="12">const<pos:position pos:line="6" pos:column="17"/></specifier> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">sp<pos:position pos:line="6" pos:column="26"/></name></decl>, <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="29">ep<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name></type> <name><name pos:line="7" pos:column="19">final<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><literal type="number" pos:line="7" pos:column="25">16<pos:position pos:line="7" pos:column="27"/></literal></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">sl<pos:position pos:line="8" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="13">pl<pos:position pos:line="8" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">j<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">SquidMD5_CTX<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">ctx<pos:position pos:line="9" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="23">ctx1<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">long<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">l<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">salt<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <literal type="char" pos:line="12" pos:column="18">'$'<pos:position pos:line="12" pos:column="21"/></literal></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">magic<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">salt<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">++<pos:position pos:line="13" pos:column="23"/></operator></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
        <while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><operator pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">salt<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">&amp;&amp;<pos:position pos:line="14" pos:column="32"/></operator> <operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">salt<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">!=<pos:position pos:line="14" pos:column="33"/></operator> <literal type="char" pos:line="14" pos:column="34">'$'<pos:position pos:line="14" pos:column="37"/></literal></expr>)<pos:position pos:line="14" pos:column="38"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="13">salt<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">++<pos:position pos:line="15" pos:column="19"/></operator></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt></block></while>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">salt<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <literal type="char" pos:line="16" pos:column="22">'$'<pos:position pos:line="16" pos:column="25"/></literal></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">salt<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">++<pos:position pos:line="17" pos:column="19"/></operator></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name pos:line="18" pos:column="13">magiclen<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">salt<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">-<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">magic<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else <block pos:line="19" pos:column="16">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">salt<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">magic<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">magic<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <literal type="string" pos:line="21" pos:column="21">"$1$"<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></else></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* Refine the Salt first */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">sp<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <name pos:line="26" pos:column="10">salt<pos:position pos:line="26" pos:column="14"/></name></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* It stops at the first '$', max 8 chars */</comment>
    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><expr><name pos:line="29" pos:column="10">ep<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">sp<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></init> <condition><expr><operator pos:line="29" pos:column="19">*<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">ep<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&amp;&amp;<pos:position pos:line="29" pos:column="33"/></operator> <operator pos:line="29" pos:column="26">*<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">ep<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">!=<pos:position pos:line="29" pos:column="32"/></operator> <literal type="char" pos:line="29" pos:column="33">'$'<pos:position pos:line="29" pos:column="36"/></literal> <operator pos:line="29" pos:column="37">&amp;&amp;<pos:position pos:line="29" pos:column="47"/></operator> <name pos:line="29" pos:column="40">ep<pos:position pos:line="29" pos:column="42"/></name> <operator pos:line="29" pos:column="43">&lt;<pos:position pos:line="29" pos:column="47"/></operator> <operator pos:line="29" pos:column="45">(<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="46">sp<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">+<pos:position pos:line="29" pos:column="50"/></operator> <literal type="number" pos:line="29" pos:column="51">8<pos:position pos:line="29" pos:column="52"/></literal><operator pos:line="29" pos:column="52">)<pos:position pos:line="29" pos:column="53"/></operator></expr>;<pos:position pos:line="29" pos:column="54"/></condition> <incr><expr><name pos:line="29" pos:column="55">ep<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">++<pos:position pos:line="29" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="60"/></control>
        <block type="pseudo"><continue pos:line="30" pos:column="9">continue;<pos:position pos:line="30" pos:column="18"/></continue></block></for>

    <comment type="block" pos:line="32" pos:column="5">/* get the length of the true salt */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">sl<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <name pos:line="33" pos:column="10">ep<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">sp<pos:position pos:line="33" pos:column="17"/></name></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">SquidMD5Init<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">ctx<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* The password first, since that is what is most unknown */</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">SquidMD5Update<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><operator pos:line="38" pos:column="20">&amp;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="21">ctx<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="26">(<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">unsigned<pos:position pos:line="38" pos:column="35"/></name> <specifier pos:line="38" pos:column="36">const<pos:position pos:line="38" pos:column="41"/></specifier> <name pos:line="38" pos:column="42">char<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">*<pos:position pos:line="38" pos:column="48"/></operator><operator pos:line="38" pos:column="48">)<pos:position pos:line="38" pos:column="49"/></operator> <name pos:line="38" pos:column="50">pw<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="54">strlen<pos:position pos:line="38" pos:column="60"/></name><argument_list pos:line="38" pos:column="60">(<argument><expr><name pos:line="38" pos:column="61">pw<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="40" pos:column="5">/* Then our magic string */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">SquidMD5Update<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><operator pos:line="41" pos:column="20">&amp;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="21">ctx<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="26">(<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">unsigned<pos:position pos:line="41" pos:column="35"/></name> <specifier pos:line="41" pos:column="36">const<pos:position pos:line="41" pos:column="41"/></specifier> <name pos:line="41" pos:column="42">char<pos:position pos:line="41" pos:column="46"/></name> <operator pos:line="41" pos:column="47">*<pos:position pos:line="41" pos:column="48"/></operator><operator pos:line="41" pos:column="48">)<pos:position pos:line="41" pos:column="49"/></operator> <name pos:line="41" pos:column="50">magic<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="57">magiclen<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Then the raw salt */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">SquidMD5Update<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><operator pos:line="44" pos:column="20">&amp;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="21">ctx<pos:position pos:line="44" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="26">(<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="27">unsigned<pos:position pos:line="44" pos:column="35"/></name> <specifier pos:line="44" pos:column="36">const<pos:position pos:line="44" pos:column="41"/></specifier> <name pos:line="44" pos:column="42">char<pos:position pos:line="44" pos:column="46"/></name> <operator pos:line="44" pos:column="47">*<pos:position pos:line="44" pos:column="48"/></operator><operator pos:line="44" pos:column="48">)<pos:position pos:line="44" pos:column="49"/></operator> <name pos:line="44" pos:column="50">sp<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">sl<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Then just as many characters of the MD5(pw,salt,pw) */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">SquidMD5Init<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><operator pos:line="47" pos:column="18">&amp;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="19">ctx1<pos:position pos:line="47" pos:column="23"/></name></expr></argument>)<pos:position pos:line="47" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">SquidMD5Update<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><operator pos:line="48" pos:column="20">&amp;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="21">ctx1<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="27">(<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">unsigned<pos:position pos:line="48" pos:column="36"/></name> <specifier pos:line="48" pos:column="37">const<pos:position pos:line="48" pos:column="42"/></specifier> <name pos:line="48" pos:column="43">char<pos:position pos:line="48" pos:column="47"/></name> <operator pos:line="48" pos:column="48">*<pos:position pos:line="48" pos:column="49"/></operator><operator pos:line="48" pos:column="49">)<pos:position pos:line="48" pos:column="50"/></operator> <name pos:line="48" pos:column="51">pw<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="55">strlen<pos:position pos:line="48" pos:column="61"/></name><argument_list pos:line="48" pos:column="61">(<argument><expr><name pos:line="48" pos:column="62">pw<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">SquidMD5Update<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><operator pos:line="49" pos:column="20">&amp;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="21">ctx1<pos:position pos:line="49" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="27">(<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">unsigned<pos:position pos:line="49" pos:column="36"/></name> <specifier pos:line="49" pos:column="37">const<pos:position pos:line="49" pos:column="42"/></specifier> <name pos:line="49" pos:column="43">char<pos:position pos:line="49" pos:column="47"/></name> <operator pos:line="49" pos:column="48">*<pos:position pos:line="49" pos:column="49"/></operator><operator pos:line="49" pos:column="49">)<pos:position pos:line="49" pos:column="50"/></operator> <name pos:line="49" pos:column="51">sp<pos:position pos:line="49" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="55">sl<pos:position pos:line="49" pos:column="57"/></name></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">SquidMD5Update<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><operator pos:line="50" pos:column="20">&amp;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="21">ctx1<pos:position pos:line="50" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="27">(<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">unsigned<pos:position pos:line="50" pos:column="36"/></name> <specifier pos:line="50" pos:column="37">const<pos:position pos:line="50" pos:column="42"/></specifier> <name pos:line="50" pos:column="43">char<pos:position pos:line="50" pos:column="47"/></name> <operator pos:line="50" pos:column="48">*<pos:position pos:line="50" pos:column="49"/></operator><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator> <name pos:line="50" pos:column="51">pw<pos:position pos:line="50" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="55">strlen<pos:position pos:line="50" pos:column="61"/></name><argument_list pos:line="50" pos:column="61">(<argument><expr><name pos:line="50" pos:column="62">pw<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">SquidMD5Final<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><name pos:line="51" pos:column="19">final<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="26">&amp;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="27">ctx1<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>
    <for pos:line="52" pos:column="5">for <control pos:line="52" pos:column="9">(<init><expr><name pos:line="52" pos:column="10">pl<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <call><name pos:line="52" pos:column="15">strlen<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">pw<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></init> <condition><expr><name pos:line="52" pos:column="27">pl<pos:position pos:line="52" pos:column="29"/></name> <operator pos:line="52" pos:column="30">&gt;<pos:position pos:line="52" pos:column="34"/></operator> <literal type="number" pos:line="52" pos:column="32">0<pos:position pos:line="52" pos:column="33"/></literal></expr>;<pos:position pos:line="52" pos:column="34"/></condition> <incr><expr><name pos:line="52" pos:column="35">pl<pos:position pos:line="52" pos:column="37"/></name> <operator pos:line="52" pos:column="38">-=<pos:position pos:line="52" pos:column="40"/></operator> <literal type="number" pos:line="52" pos:column="41">16<pos:position pos:line="52" pos:column="43"/></literal></expr></incr>)<pos:position pos:line="52" pos:column="44"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="9">SquidMD5Update<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><operator pos:line="53" pos:column="24">&amp;<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="25">ctx<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="30">(<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">unsigned<pos:position pos:line="53" pos:column="39"/></name> <specifier pos:line="53" pos:column="40">const<pos:position pos:line="53" pos:column="45"/></specifier> <name pos:line="53" pos:column="46">char<pos:position pos:line="53" pos:column="50"/></name> <operator pos:line="53" pos:column="51">*<pos:position pos:line="53" pos:column="52"/></operator><operator pos:line="53" pos:column="52">)<pos:position pos:line="53" pos:column="53"/></operator> <name pos:line="53" pos:column="54">final<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="53" pos:column="61">pl<pos:position pos:line="53" pos:column="63"/></name> <operator pos:line="53" pos:column="64">&gt;<pos:position pos:line="53" pos:column="68"/></operator> <literal type="number" pos:line="53" pos:column="66">16<pos:position pos:line="53" pos:column="68"/></literal></expr> ?<pos:position pos:line="53" pos:column="70"/></condition><then pos:line="53" pos:column="70"> <expr><literal type="number" pos:line="53" pos:column="71">16<pos:position pos:line="53" pos:column="73"/></literal></expr> <pos:position pos:line="53" pos:column="74"/></then><else pos:line="53" pos:column="74">: <expr><name pos:line="53" pos:column="76">pl<pos:position pos:line="53" pos:column="78"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="80"/></expr_stmt></block></for>

    <comment type="block" pos:line="55" pos:column="5">/* Don't leave anything around in vm they could use. */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">memset<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><name pos:line="56" pos:column="12">final<pos:position pos:line="56" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="22">sizeof <name pos:line="56" pos:column="29">final<pos:position pos:line="56" pos:column="34"/></name></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* Then something really weird... */</comment>
    <for pos:line="59" pos:column="5">for <control pos:line="59" pos:column="9">(<init><expr><name pos:line="59" pos:column="10">j<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <literal type="number" pos:line="59" pos:column="14">0<pos:position pos:line="59" pos:column="15"/></literal></expr><operator pos:line="59" pos:column="15">,<pos:position pos:line="59" pos:column="16"/></operator> <expr><name pos:line="59" pos:column="17">i<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">strlen<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">pw<pos:position pos:line="59" pos:column="30"/></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="32"/></init> <condition><expr><name pos:line="59" pos:column="33">i<pos:position pos:line="59" pos:column="34"/></name></expr>;<pos:position pos:line="59" pos:column="35"/></condition> <incr><expr><name pos:line="59" pos:column="36">i<pos:position pos:line="59" pos:column="37"/></name> <operator pos:line="59" pos:column="38">&gt;&gt;=<pos:position pos:line="59" pos:column="47"/></operator> <literal type="number" pos:line="59" pos:column="42">1<pos:position pos:line="59" pos:column="43"/></literal></expr></incr>)<pos:position pos:line="59" pos:column="44"/></control>
        <block type="pseudo"><if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">i<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">&amp;<pos:position pos:line="60" pos:column="20"/></operator> <literal type="number" pos:line="60" pos:column="17">1<pos:position pos:line="60" pos:column="18"/></literal></expr>)<pos:position pos:line="60" pos:column="19"/></condition><then pos:line="60" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="13">SquidMD5Update<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><operator pos:line="61" pos:column="28">&amp;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="29">ctx<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="34">(<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="35">unsigned<pos:position pos:line="61" pos:column="43"/></name> <specifier pos:line="61" pos:column="44">const<pos:position pos:line="61" pos:column="49"/></specifier> <name pos:line="61" pos:column="50">char<pos:position pos:line="61" pos:column="54"/></name> <operator pos:line="61" pos:column="55">*<pos:position pos:line="61" pos:column="56"/></operator><operator pos:line="61" pos:column="56">)<pos:position pos:line="61" pos:column="57"/></operator> <name pos:line="61" pos:column="58">final<pos:position pos:line="61" pos:column="63"/></name> <operator pos:line="61" pos:column="64">+<pos:position pos:line="61" pos:column="65"/></operator> <name pos:line="61" pos:column="66">j<pos:position pos:line="61" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="69">1<pos:position pos:line="61" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt></block></then>
        <else pos:line="62" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="13">SquidMD5Update<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><operator pos:line="63" pos:column="28">&amp;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="29">ctx<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="34">(<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="35">unsigned<pos:position pos:line="63" pos:column="43"/></name> <specifier pos:line="63" pos:column="44">const<pos:position pos:line="63" pos:column="49"/></specifier> <name pos:line="63" pos:column="50">char<pos:position pos:line="63" pos:column="54"/></name> <operator pos:line="63" pos:column="55">*<pos:position pos:line="63" pos:column="56"/></operator><operator pos:line="63" pos:column="56">)<pos:position pos:line="63" pos:column="57"/></operator> <name pos:line="63" pos:column="58">pw<pos:position pos:line="63" pos:column="60"/></name> <operator pos:line="63" pos:column="61">+<pos:position pos:line="63" pos:column="62"/></operator> <name pos:line="63" pos:column="63">j<pos:position pos:line="63" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="66">1<pos:position pos:line="63" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="69"/></expr_stmt></block></else></if></block></for>

    <comment type="block" pos:line="65" pos:column="5">/* Now make the output string */</comment>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">memset<pos:position pos:line="66" pos:column="11"/></name><argument_list pos:line="66" pos:column="11">(<argument><expr><name pos:line="66" pos:column="12">passwd<pos:position pos:line="66" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="20">0<pos:position pos:line="66" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="23">sizeof<argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">passwd<pos:position pos:line="66" pos:column="36"/></name></expr></argument>)<pos:position pos:line="66" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">strncat<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">passwd<pos:position pos:line="67" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="21">magic<pos:position pos:line="67" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="28">magiclen<pos:position pos:line="67" pos:column="36"/></name></expr></argument>)<pos:position pos:line="67" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">strncat<pos:position pos:line="68" pos:column="12"/></name><argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">passwd<pos:position pos:line="68" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="21">sp<pos:position pos:line="68" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="25">sl<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">strcat<pos:position pos:line="69" pos:column="11"/></name><argument_list pos:line="69" pos:column="11">(<argument><expr><name pos:line="69" pos:column="12">passwd<pos:position pos:line="69" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="20">"$"<pos:position pos:line="69" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">SquidMD5Final<pos:position pos:line="71" pos:column="18"/></name><argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">final<pos:position pos:line="71" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="26">&amp;<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="27">ctx<pos:position pos:line="71" pos:column="30"/></name></expr></argument>)<pos:position pos:line="71" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="73" pos:column="5">/*
     * and now, just to make sure things don't run too fast
     * On a 60 Mhz Pentium this takes 34 msec, so you would
     * need 30 seconds to build a 1000 entry dictionary...
     */</comment>
    <for pos:line="78" pos:column="5">for <control pos:line="78" pos:column="9">(<init><expr><name pos:line="78" pos:column="10">i<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <literal type="number" pos:line="78" pos:column="14">0<pos:position pos:line="78" pos:column="15"/></literal></expr>;<pos:position pos:line="78" pos:column="16"/></init> <condition><expr><name pos:line="78" pos:column="17">i<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">&lt;<pos:position pos:line="78" pos:column="23"/></operator> <literal type="number" pos:line="78" pos:column="21">1000<pos:position pos:line="78" pos:column="25"/></literal></expr>;<pos:position pos:line="78" pos:column="26"/></condition> <incr><expr><name pos:line="78" pos:column="27">i<pos:position pos:line="78" pos:column="28"/></name><operator pos:line="78" pos:column="28">++<pos:position pos:line="78" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="78" pos:column="31"/></control> <block pos:line="78" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">SquidMD5Init<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><operator pos:line="79" pos:column="22">&amp;<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="23">ctx1<pos:position pos:line="79" pos:column="27"/></name></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">i<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">&amp;<pos:position pos:line="80" pos:column="20"/></operator> <literal type="number" pos:line="80" pos:column="17">1<pos:position pos:line="80" pos:column="18"/></literal></expr>)<pos:position pos:line="80" pos:column="19"/></condition><then pos:line="80" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="13">SquidMD5Update<pos:position pos:line="81" pos:column="27"/></name><argument_list pos:line="81" pos:column="27">(<argument><expr><operator pos:line="81" pos:column="28">&amp;<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="29">ctx1<pos:position pos:line="81" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="35">(<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="36">unsigned<pos:position pos:line="81" pos:column="44"/></name> <specifier pos:line="81" pos:column="45">const<pos:position pos:line="81" pos:column="50"/></specifier> <name pos:line="81" pos:column="51">char<pos:position pos:line="81" pos:column="55"/></name> <operator pos:line="81" pos:column="56">*<pos:position pos:line="81" pos:column="57"/></operator><operator pos:line="81" pos:column="57">)<pos:position pos:line="81" pos:column="58"/></operator> <name pos:line="81" pos:column="59">pw<pos:position pos:line="81" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="63">strlen<pos:position pos:line="81" pos:column="69"/></name><argument_list pos:line="81" pos:column="69">(<argument><expr><name pos:line="81" pos:column="70">pw<pos:position pos:line="81" pos:column="72"/></name></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="75"/></expr_stmt></block></then>
        <else pos:line="82" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="13">SquidMD5Update<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><operator pos:line="83" pos:column="28">&amp;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="29">ctx1<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="35">(<pos:position pos:line="83" pos:column="36"/></operator><name pos:line="83" pos:column="36">unsigned<pos:position pos:line="83" pos:column="44"/></name> <specifier pos:line="83" pos:column="45">const<pos:position pos:line="83" pos:column="50"/></specifier> <name pos:line="83" pos:column="51">char<pos:position pos:line="83" pos:column="55"/></name> <operator pos:line="83" pos:column="56">*<pos:position pos:line="83" pos:column="57"/></operator><operator pos:line="83" pos:column="57">)<pos:position pos:line="83" pos:column="58"/></operator> <name pos:line="83" pos:column="59">final<pos:position pos:line="83" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="66">16<pos:position pos:line="83" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="70"/></expr_stmt></block></else></if>

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">i<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">%<pos:position pos:line="85" pos:column="16"/></operator> <literal type="number" pos:line="85" pos:column="17">3<pos:position pos:line="85" pos:column="18"/></literal></expr>)<pos:position pos:line="85" pos:column="19"/></condition><then pos:line="85" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="13">SquidMD5Update<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><operator pos:line="86" pos:column="28">&amp;<pos:position pos:line="86" pos:column="33"/></operator><name pos:line="86" pos:column="29">ctx1<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="35">(<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="36">unsigned<pos:position pos:line="86" pos:column="44"/></name> <specifier pos:line="86" pos:column="45">const<pos:position pos:line="86" pos:column="50"/></specifier> <name pos:line="86" pos:column="51">char<pos:position pos:line="86" pos:column="55"/></name> <operator pos:line="86" pos:column="56">*<pos:position pos:line="86" pos:column="57"/></operator><operator pos:line="86" pos:column="57">)<pos:position pos:line="86" pos:column="58"/></operator> <name pos:line="86" pos:column="59">sp<pos:position pos:line="86" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="63">sl<pos:position pos:line="86" pos:column="65"/></name></expr></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="67"/></expr_stmt></block></then></if>

        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">i<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">%<pos:position pos:line="88" pos:column="16"/></operator> <literal type="number" pos:line="88" pos:column="17">7<pos:position pos:line="88" pos:column="18"/></literal></expr>)<pos:position pos:line="88" pos:column="19"/></condition><then pos:line="88" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="13">SquidMD5Update<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><operator pos:line="89" pos:column="28">&amp;<pos:position pos:line="89" pos:column="33"/></operator><name pos:line="89" pos:column="29">ctx1<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="35">(<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="36">unsigned<pos:position pos:line="89" pos:column="44"/></name> <specifier pos:line="89" pos:column="45">const<pos:position pos:line="89" pos:column="50"/></specifier> <name pos:line="89" pos:column="51">char<pos:position pos:line="89" pos:column="55"/></name> <operator pos:line="89" pos:column="56">*<pos:position pos:line="89" pos:column="57"/></operator><operator pos:line="89" pos:column="57">)<pos:position pos:line="89" pos:column="58"/></operator> <name pos:line="89" pos:column="59">pw<pos:position pos:line="89" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="63">strlen<pos:position pos:line="89" pos:column="69"/></name><argument_list pos:line="89" pos:column="69">(<argument><expr><name pos:line="89" pos:column="70">pw<pos:position pos:line="89" pos:column="72"/></name></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="75"/></expr_stmt></block></then></if>

        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">i<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">&amp;<pos:position pos:line="91" pos:column="20"/></operator> <literal type="number" pos:line="91" pos:column="17">1<pos:position pos:line="91" pos:column="18"/></literal></expr>)<pos:position pos:line="91" pos:column="19"/></condition><then pos:line="91" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="13">SquidMD5Update<pos:position pos:line="92" pos:column="27"/></name><argument_list pos:line="92" pos:column="27">(<argument><expr><operator pos:line="92" pos:column="28">&amp;<pos:position pos:line="92" pos:column="33"/></operator><name pos:line="92" pos:column="29">ctx1<pos:position pos:line="92" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="35">(<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="36">unsigned<pos:position pos:line="92" pos:column="44"/></name> <specifier pos:line="92" pos:column="45">const<pos:position pos:line="92" pos:column="50"/></specifier> <name pos:line="92" pos:column="51">char<pos:position pos:line="92" pos:column="55"/></name> <operator pos:line="92" pos:column="56">*<pos:position pos:line="92" pos:column="57"/></operator><operator pos:line="92" pos:column="57">)<pos:position pos:line="92" pos:column="58"/></operator> <name pos:line="92" pos:column="59">final<pos:position pos:line="92" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="66">16<pos:position pos:line="92" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="70"/></expr_stmt></block></then>
        <else pos:line="93" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="13">SquidMD5Update<pos:position pos:line="94" pos:column="27"/></name><argument_list pos:line="94" pos:column="27">(<argument><expr><operator pos:line="94" pos:column="28">&amp;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="29">ctx1<pos:position pos:line="94" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="35">(<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">unsigned<pos:position pos:line="94" pos:column="44"/></name> <specifier pos:line="94" pos:column="45">const<pos:position pos:line="94" pos:column="50"/></specifier> <name pos:line="94" pos:column="51">char<pos:position pos:line="94" pos:column="55"/></name> <operator pos:line="94" pos:column="56">*<pos:position pos:line="94" pos:column="57"/></operator><operator pos:line="94" pos:column="57">)<pos:position pos:line="94" pos:column="58"/></operator> <name pos:line="94" pos:column="59">pw<pos:position pos:line="94" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="63">strlen<pos:position pos:line="94" pos:column="69"/></name><argument_list pos:line="94" pos:column="69">(<argument><expr><name pos:line="94" pos:column="70">pw<pos:position pos:line="94" pos:column="72"/></name></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="75"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">SquidMD5Final<pos:position pos:line="95" pos:column="22"/></name><argument_list pos:line="95" pos:column="22">(<argument><expr><name pos:line="95" pos:column="23">final<pos:position pos:line="95" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="30">&amp;<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="31">ctx1<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="98" pos:column="5">p<pos:position pos:line="98" pos:column="6"/></name> <operator pos:line="98" pos:column="7">=<pos:position pos:line="98" pos:column="8"/></operator> <name pos:line="98" pos:column="9">passwd<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">+<pos:position pos:line="98" pos:column="17"/></operator> <call><name pos:line="98" pos:column="18">strlen<pos:position pos:line="98" pos:column="24"/></name><argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">passwd<pos:position pos:line="98" pos:column="31"/></name></expr></argument>)<pos:position pos:line="98" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="100" pos:column="5">l<pos:position pos:line="100" pos:column="6"/></name> <operator pos:line="100" pos:column="7">=<pos:position pos:line="100" pos:column="8"/></operator> <operator pos:line="100" pos:column="9">(<pos:position pos:line="100" pos:column="10"/></operator><name><name pos:line="100" pos:column="10">final<pos:position pos:line="100" pos:column="15"/></name><index pos:line="100" pos:column="15">[<expr><literal type="number" pos:line="100" pos:column="16">0<pos:position pos:line="100" pos:column="17"/></literal></expr>]<pos:position pos:line="100" pos:column="18"/></index></name> <operator pos:line="100" pos:column="19">&lt;&lt;<pos:position pos:line="100" pos:column="27"/></operator> <literal type="number" pos:line="100" pos:column="22">16<pos:position pos:line="100" pos:column="24"/></literal><operator pos:line="100" pos:column="24">)<pos:position pos:line="100" pos:column="25"/></operator> <operator pos:line="100" pos:column="26">|<pos:position pos:line="100" pos:column="27"/></operator> <operator pos:line="100" pos:column="28">(<pos:position pos:line="100" pos:column="29"/></operator><name><name pos:line="100" pos:column="29">final<pos:position pos:line="100" pos:column="34"/></name><index pos:line="100" pos:column="34">[<expr><literal type="number" pos:line="100" pos:column="35">6<pos:position pos:line="100" pos:column="36"/></literal></expr>]<pos:position pos:line="100" pos:column="37"/></index></name> <operator pos:line="100" pos:column="38">&lt;&lt;<pos:position pos:line="100" pos:column="46"/></operator> <literal type="number" pos:line="100" pos:column="41">8<pos:position pos:line="100" pos:column="42"/></literal><operator pos:line="100" pos:column="42">)<pos:position pos:line="100" pos:column="43"/></operator> <operator pos:line="100" pos:column="44">|<pos:position pos:line="100" pos:column="45"/></operator> <name><name pos:line="100" pos:column="46">final<pos:position pos:line="100" pos:column="51"/></name><index pos:line="100" pos:column="51">[<expr><literal type="number" pos:line="100" pos:column="52">12<pos:position pos:line="100" pos:column="54"/></literal></expr>]<pos:position pos:line="100" pos:column="55"/></index></name></expr>;<pos:position pos:line="100" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">md5to64<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">p<pos:position pos:line="101" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="16">l<pos:position pos:line="101" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="19">4<pos:position pos:line="101" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="102" pos:column="5">p<pos:position pos:line="102" pos:column="6"/></name> <operator pos:line="102" pos:column="7">+=<pos:position pos:line="102" pos:column="9"/></operator> <literal type="number" pos:line="102" pos:column="10">4<pos:position pos:line="102" pos:column="11"/></literal></expr>;<pos:position pos:line="102" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="103" pos:column="5">l<pos:position pos:line="103" pos:column="6"/></name> <operator pos:line="103" pos:column="7">=<pos:position pos:line="103" pos:column="8"/></operator> <operator pos:line="103" pos:column="9">(<pos:position pos:line="103" pos:column="10"/></operator><name><name pos:line="103" pos:column="10">final<pos:position pos:line="103" pos:column="15"/></name><index pos:line="103" pos:column="15">[<expr><literal type="number" pos:line="103" pos:column="16">1<pos:position pos:line="103" pos:column="17"/></literal></expr>]<pos:position pos:line="103" pos:column="18"/></index></name> <operator pos:line="103" pos:column="19">&lt;&lt;<pos:position pos:line="103" pos:column="27"/></operator> <literal type="number" pos:line="103" pos:column="22">16<pos:position pos:line="103" pos:column="24"/></literal><operator pos:line="103" pos:column="24">)<pos:position pos:line="103" pos:column="25"/></operator> <operator pos:line="103" pos:column="26">|<pos:position pos:line="103" pos:column="27"/></operator> <operator pos:line="103" pos:column="28">(<pos:position pos:line="103" pos:column="29"/></operator><name><name pos:line="103" pos:column="29">final<pos:position pos:line="103" pos:column="34"/></name><index pos:line="103" pos:column="34">[<expr><literal type="number" pos:line="103" pos:column="35">7<pos:position pos:line="103" pos:column="36"/></literal></expr>]<pos:position pos:line="103" pos:column="37"/></index></name> <operator pos:line="103" pos:column="38">&lt;&lt;<pos:position pos:line="103" pos:column="46"/></operator> <literal type="number" pos:line="103" pos:column="41">8<pos:position pos:line="103" pos:column="42"/></literal><operator pos:line="103" pos:column="42">)<pos:position pos:line="103" pos:column="43"/></operator> <operator pos:line="103" pos:column="44">|<pos:position pos:line="103" pos:column="45"/></operator> <name><name pos:line="103" pos:column="46">final<pos:position pos:line="103" pos:column="51"/></name><index pos:line="103" pos:column="51">[<expr><literal type="number" pos:line="103" pos:column="52">13<pos:position pos:line="103" pos:column="54"/></literal></expr>]<pos:position pos:line="103" pos:column="55"/></index></name></expr>;<pos:position pos:line="103" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">md5to64<pos:position pos:line="104" pos:column="12"/></name><argument_list pos:line="104" pos:column="12">(<argument><expr><name pos:line="104" pos:column="13">p<pos:position pos:line="104" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="16">l<pos:position pos:line="104" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="19">4<pos:position pos:line="104" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="105" pos:column="5">p<pos:position pos:line="105" pos:column="6"/></name> <operator pos:line="105" pos:column="7">+=<pos:position pos:line="105" pos:column="9"/></operator> <literal type="number" pos:line="105" pos:column="10">4<pos:position pos:line="105" pos:column="11"/></literal></expr>;<pos:position pos:line="105" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="106" pos:column="5">l<pos:position pos:line="106" pos:column="6"/></name> <operator pos:line="106" pos:column="7">=<pos:position pos:line="106" pos:column="8"/></operator> <operator pos:line="106" pos:column="9">(<pos:position pos:line="106" pos:column="10"/></operator><name><name pos:line="106" pos:column="10">final<pos:position pos:line="106" pos:column="15"/></name><index pos:line="106" pos:column="15">[<expr><literal type="number" pos:line="106" pos:column="16">2<pos:position pos:line="106" pos:column="17"/></literal></expr>]<pos:position pos:line="106" pos:column="18"/></index></name> <operator pos:line="106" pos:column="19">&lt;&lt;<pos:position pos:line="106" pos:column="27"/></operator> <literal type="number" pos:line="106" pos:column="22">16<pos:position pos:line="106" pos:column="24"/></literal><operator pos:line="106" pos:column="24">)<pos:position pos:line="106" pos:column="25"/></operator> <operator pos:line="106" pos:column="26">|<pos:position pos:line="106" pos:column="27"/></operator> <operator pos:line="106" pos:column="28">(<pos:position pos:line="106" pos:column="29"/></operator><name><name pos:line="106" pos:column="29">final<pos:position pos:line="106" pos:column="34"/></name><index pos:line="106" pos:column="34">[<expr><literal type="number" pos:line="106" pos:column="35">8<pos:position pos:line="106" pos:column="36"/></literal></expr>]<pos:position pos:line="106" pos:column="37"/></index></name> <operator pos:line="106" pos:column="38">&lt;&lt;<pos:position pos:line="106" pos:column="46"/></operator> <literal type="number" pos:line="106" pos:column="41">8<pos:position pos:line="106" pos:column="42"/></literal><operator pos:line="106" pos:column="42">)<pos:position pos:line="106" pos:column="43"/></operator> <operator pos:line="106" pos:column="44">|<pos:position pos:line="106" pos:column="45"/></operator> <name><name pos:line="106" pos:column="46">final<pos:position pos:line="106" pos:column="51"/></name><index pos:line="106" pos:column="51">[<expr><literal type="number" pos:line="106" pos:column="52">14<pos:position pos:line="106" pos:column="54"/></literal></expr>]<pos:position pos:line="106" pos:column="55"/></index></name></expr>;<pos:position pos:line="106" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">md5to64<pos:position pos:line="107" pos:column="12"/></name><argument_list pos:line="107" pos:column="12">(<argument><expr><name pos:line="107" pos:column="13">p<pos:position pos:line="107" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="16">l<pos:position pos:line="107" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="19">4<pos:position pos:line="107" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="108" pos:column="5">p<pos:position pos:line="108" pos:column="6"/></name> <operator pos:line="108" pos:column="7">+=<pos:position pos:line="108" pos:column="9"/></operator> <literal type="number" pos:line="108" pos:column="10">4<pos:position pos:line="108" pos:column="11"/></literal></expr>;<pos:position pos:line="108" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="109" pos:column="5">l<pos:position pos:line="109" pos:column="6"/></name> <operator pos:line="109" pos:column="7">=<pos:position pos:line="109" pos:column="8"/></operator> <operator pos:line="109" pos:column="9">(<pos:position pos:line="109" pos:column="10"/></operator><name><name pos:line="109" pos:column="10">final<pos:position pos:line="109" pos:column="15"/></name><index pos:line="109" pos:column="15">[<expr><literal type="number" pos:line="109" pos:column="16">3<pos:position pos:line="109" pos:column="17"/></literal></expr>]<pos:position pos:line="109" pos:column="18"/></index></name> <operator pos:line="109" pos:column="19">&lt;&lt;<pos:position pos:line="109" pos:column="27"/></operator> <literal type="number" pos:line="109" pos:column="22">16<pos:position pos:line="109" pos:column="24"/></literal><operator pos:line="109" pos:column="24">)<pos:position pos:line="109" pos:column="25"/></operator> <operator pos:line="109" pos:column="26">|<pos:position pos:line="109" pos:column="27"/></operator> <operator pos:line="109" pos:column="28">(<pos:position pos:line="109" pos:column="29"/></operator><name><name pos:line="109" pos:column="29">final<pos:position pos:line="109" pos:column="34"/></name><index pos:line="109" pos:column="34">[<expr><literal type="number" pos:line="109" pos:column="35">9<pos:position pos:line="109" pos:column="36"/></literal></expr>]<pos:position pos:line="109" pos:column="37"/></index></name> <operator pos:line="109" pos:column="38">&lt;&lt;<pos:position pos:line="109" pos:column="46"/></operator> <literal type="number" pos:line="109" pos:column="41">8<pos:position pos:line="109" pos:column="42"/></literal><operator pos:line="109" pos:column="42">)<pos:position pos:line="109" pos:column="43"/></operator> <operator pos:line="109" pos:column="44">|<pos:position pos:line="109" pos:column="45"/></operator> <name><name pos:line="109" pos:column="46">final<pos:position pos:line="109" pos:column="51"/></name><index pos:line="109" pos:column="51">[<expr><literal type="number" pos:line="109" pos:column="52">15<pos:position pos:line="109" pos:column="54"/></literal></expr>]<pos:position pos:line="109" pos:column="55"/></index></name></expr>;<pos:position pos:line="109" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">md5to64<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument><expr><name pos:line="110" pos:column="13">p<pos:position pos:line="110" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="16">l<pos:position pos:line="110" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="19">4<pos:position pos:line="110" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="111" pos:column="5">p<pos:position pos:line="111" pos:column="6"/></name> <operator pos:line="111" pos:column="7">+=<pos:position pos:line="111" pos:column="9"/></operator> <literal type="number" pos:line="111" pos:column="10">4<pos:position pos:line="111" pos:column="11"/></literal></expr>;<pos:position pos:line="111" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="112" pos:column="5">l<pos:position pos:line="112" pos:column="6"/></name> <operator pos:line="112" pos:column="7">=<pos:position pos:line="112" pos:column="8"/></operator> <operator pos:line="112" pos:column="9">(<pos:position pos:line="112" pos:column="10"/></operator><name><name pos:line="112" pos:column="10">final<pos:position pos:line="112" pos:column="15"/></name><index pos:line="112" pos:column="15">[<expr><literal type="number" pos:line="112" pos:column="16">4<pos:position pos:line="112" pos:column="17"/></literal></expr>]<pos:position pos:line="112" pos:column="18"/></index></name> <operator pos:line="112" pos:column="19">&lt;&lt;<pos:position pos:line="112" pos:column="27"/></operator> <literal type="number" pos:line="112" pos:column="22">16<pos:position pos:line="112" pos:column="24"/></literal><operator pos:line="112" pos:column="24">)<pos:position pos:line="112" pos:column="25"/></operator> <operator pos:line="112" pos:column="26">|<pos:position pos:line="112" pos:column="27"/></operator> <operator pos:line="112" pos:column="28">(<pos:position pos:line="112" pos:column="29"/></operator><name><name pos:line="112" pos:column="29">final<pos:position pos:line="112" pos:column="34"/></name><index pos:line="112" pos:column="34">[<expr><literal type="number" pos:line="112" pos:column="35">10<pos:position pos:line="112" pos:column="37"/></literal></expr>]<pos:position pos:line="112" pos:column="38"/></index></name> <operator pos:line="112" pos:column="39">&lt;&lt;<pos:position pos:line="112" pos:column="47"/></operator> <literal type="number" pos:line="112" pos:column="42">8<pos:position pos:line="112" pos:column="43"/></literal><operator pos:line="112" pos:column="43">)<pos:position pos:line="112" pos:column="44"/></operator> <operator pos:line="112" pos:column="45">|<pos:position pos:line="112" pos:column="46"/></operator> <name><name pos:line="112" pos:column="47">final<pos:position pos:line="112" pos:column="52"/></name><index pos:line="112" pos:column="52">[<expr><literal type="number" pos:line="112" pos:column="53">5<pos:position pos:line="112" pos:column="54"/></literal></expr>]<pos:position pos:line="112" pos:column="55"/></index></name></expr>;<pos:position pos:line="112" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">md5to64<pos:position pos:line="113" pos:column="12"/></name><argument_list pos:line="113" pos:column="12">(<argument><expr><name pos:line="113" pos:column="13">p<pos:position pos:line="113" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="16">l<pos:position pos:line="113" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="19">4<pos:position pos:line="113" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="114" pos:column="5">p<pos:position pos:line="114" pos:column="6"/></name> <operator pos:line="114" pos:column="7">+=<pos:position pos:line="114" pos:column="9"/></operator> <literal type="number" pos:line="114" pos:column="10">4<pos:position pos:line="114" pos:column="11"/></literal></expr>;<pos:position pos:line="114" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="115" pos:column="5">l<pos:position pos:line="115" pos:column="6"/></name> <operator pos:line="115" pos:column="7">=<pos:position pos:line="115" pos:column="8"/></operator> <name><name pos:line="115" pos:column="9">final<pos:position pos:line="115" pos:column="14"/></name><index pos:line="115" pos:column="14">[<expr><literal type="number" pos:line="115" pos:column="15">11<pos:position pos:line="115" pos:column="17"/></literal></expr>]<pos:position pos:line="115" pos:column="18"/></index></name></expr>;<pos:position pos:line="115" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">md5to64<pos:position pos:line="116" pos:column="12"/></name><argument_list pos:line="116" pos:column="12">(<argument><expr><name pos:line="116" pos:column="13">p<pos:position pos:line="116" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="16">l<pos:position pos:line="116" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="19">2<pos:position pos:line="116" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="117" pos:column="5">p<pos:position pos:line="117" pos:column="6"/></name> <operator pos:line="117" pos:column="7">+=<pos:position pos:line="117" pos:column="9"/></operator> <literal type="number" pos:line="117" pos:column="10">2<pos:position pos:line="117" pos:column="11"/></literal></expr>;<pos:position pos:line="117" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="118" pos:column="5">*<pos:position pos:line="118" pos:column="6"/></operator><name pos:line="118" pos:column="6">p<pos:position pos:line="118" pos:column="7"/></name> <operator pos:line="118" pos:column="8">=<pos:position pos:line="118" pos:column="9"/></operator> <literal type="char" pos:line="118" pos:column="10">'\0'<pos:position pos:line="118" pos:column="14"/></literal></expr>;<pos:position pos:line="118" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="120" pos:column="5">/* Don't leave anything around in vm they could use. */</comment>
    <expr_stmt><expr><call><name pos:line="121" pos:column="5">memset<pos:position pos:line="121" pos:column="11"/></name><argument_list pos:line="121" pos:column="11">(<argument><expr><name pos:line="121" pos:column="12">final<pos:position pos:line="121" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="19">0<pos:position pos:line="121" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="22">sizeof <name pos:line="121" pos:column="29">final<pos:position pos:line="121" pos:column="34"/></name></sizeof></expr></argument>)<pos:position pos:line="121" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="36"/></expr_stmt>

    <return pos:line="123" pos:column="5">return <expr><name pos:line="123" pos:column="12">passwd<pos:position pos:line="123" pos:column="18"/></name></expr>;<pos:position pos:line="123" pos:column="19"/></return>
}<pos:position pos:line="124" pos:column="2"/></block></function></unit>

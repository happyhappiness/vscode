<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_939_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ThrowIfAlreadyRunningWith<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">File<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">&amp;<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="33">pidFile<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">running<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="boolean" pos:line="4" pos:column="20">false<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SBuf<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">description<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <try pos:line="6" pos:column="5">try <block pos:line="6" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <specifier pos:line="7" pos:column="15">auto<pos:position pos:line="7" pos:column="19"/></specifier></type> <name pos:line="7" pos:column="20">pid<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><call><name pos:line="7" pos:column="26">GetOtherPid<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">pidFile<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">description<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">ToSBuf<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">TheFile<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="39">" with PID "<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">pid<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">running<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">ProcessIsRunning<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">pid<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block>
    <catch pos:line="11" pos:column="5">catch <parameter_list pos:line="11" pos:column="11">(<parameter><decl><type><specifier pos:line="11" pos:column="12">const<pos:position pos:line="11" pos:column="17"/></specifier> <name><name pos:line="11" pos:column="18">std<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">::<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">exception<pos:position pos:line="11" pos:column="32"/></name></name> <modifier pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></modifier></type><name pos:line="11" pos:column="34">ex<pos:position pos:line="11" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="11" pos:column="37"/></parameter_list> <block pos:line="11" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">50<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">5<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"assuming no other Squid instance: "<pos:position pos:line="12" pos:column="59"/></literal> <operator pos:line="12" pos:column="60">&lt;&lt;<pos:position pos:line="12" pos:column="68"/></operator> <call><name><name pos:line="12" pos:column="63">ex<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">.<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="66">what<pos:position pos:line="12" pos:column="70"/></name></name><argument_list pos:line="12" pos:column="70">()<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></catch></try>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">running<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17">
        <block type="pseudo"><throw pos:line="17" pos:column="9">throw <expr><call><name pos:line="17" pos:column="15">TexcHere<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><call><name pos:line="17" pos:column="24">ToSBuf<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"Squid is already running: Found fresh instance "<pos:position pos:line="17" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="82">description<pos:position pos:line="17" pos:column="93"/></name></expr></argument>)<pos:position pos:line="17" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="96"/></throw></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">50<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">5<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"assuming stale instance "<pos:position pos:line="19" pos:column="45"/></literal> <operator pos:line="19" pos:column="46">&lt;&lt;<pos:position pos:line="19" pos:column="54"/></operator> <name pos:line="19" pos:column="49">description<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

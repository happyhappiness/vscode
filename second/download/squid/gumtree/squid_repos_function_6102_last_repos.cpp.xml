<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6102_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">File<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">lockOnce<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">FileOpeningConfig<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">cfg<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="4" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name pos:line="5" pos:column="10">LockFileEx<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">fd_<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="26">cfg<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">lockFlags<pos:position pos:line="5" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="41">0<pos:position pos:line="5" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="47">1<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="50">0<pos:position pos:line="5" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="53"/></condition><then pos:line="5" pos:column="53"> <block pos:line="5" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <specifier pos:line="6" pos:column="15">auto<pos:position pos:line="6" pos:column="19"/></specifier></type> <name pos:line="6" pos:column="20">savedError<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><call><name pos:line="6" pos:column="33">GetLastError<pos:position pos:line="6" pos:column="45"/></name><argument_list pos:line="6" pos:column="45">()<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
        <throw pos:line="7" pos:column="9">throw <expr><call><name pos:line="7" pos:column="15">TexcHere<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><call><name pos:line="7" pos:column="24">sysCallFailure<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><literal type="string" pos:line="7" pos:column="39">"LockFileEx"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="53">WindowsErrorMessage<pos:position pos:line="7" pos:column="72"/></name><argument_list pos:line="7" pos:column="72">(<argument><expr><name pos:line="7" pos:column="73">savedError<pos:position pos:line="7" pos:column="83"/></name></expr></argument>)<pos:position pos:line="7" pos:column="84"/></argument_list></call><operator pos:line="7" pos:column="84">.<pos:position pos:line="7" pos:column="85"/></operator><call><name pos:line="7" pos:column="85">c_str<pos:position pos:line="7" pos:column="90"/></name><argument_list pos:line="7" pos:column="90">()<pos:position pos:line="7" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="95"/></throw>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
<cpp:elif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">elif<pos:position pos:line="9" pos:column="6"/></cpp:directive> <expr><name pos:line="9" pos:column="7">_SQUID_SOLARIS_<pos:position pos:line="9" pos:column="22"/></name></expr></cpp:elif>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">fcntlLock<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">fd_<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="24">cfg<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">lockType<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call> <operator pos:line="10" pos:column="38">!=<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <specifier pos:line="11" pos:column="15">auto<pos:position pos:line="11" pos:column="19"/></specifier></type> <name pos:line="11" pos:column="20">savedErrno<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><name pos:line="11" pos:column="33">errno<pos:position pos:line="11" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
        <throw pos:line="12" pos:column="9">throw <expr><call><name pos:line="12" pos:column="15">TexcHere<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><call><name pos:line="12" pos:column="24">sysCallError<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><literal type="string" pos:line="12" pos:column="37">"fcntl(flock)"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">savedErrno<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></throw>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><operator pos:line="15" pos:column="9">::<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">flock<pos:position pos:line="15" pos:column="16"/></name></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">fd_<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="22">cfg<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">.<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">flockMode<pos:position pos:line="15" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call> <operator pos:line="15" pos:column="37">!=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42"> <block pos:line="15" pos:column="43">{
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <specifier pos:line="16" pos:column="15">auto<pos:position pos:line="16" pos:column="19"/></specifier></type> <name pos:line="16" pos:column="20">savedErrno<pos:position pos:line="16" pos:column="30"/></name> <init pos:line="16" pos:column="31">= <expr><name pos:line="16" pos:column="33">errno<pos:position pos:line="16" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="39"/></decl_stmt>
        <throw pos:line="17" pos:column="9">throw <expr><call><name pos:line="17" pos:column="15">TexcHere<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><call><name pos:line="17" pos:column="24">sysCallError<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><literal type="string" pos:line="17" pos:column="37">"flock"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">savedErrno<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></throw>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">54<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="16">3<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"succeeded for "<pos:position pos:line="20" pos:column="35"/></literal> <operator pos:line="20" pos:column="36">&lt;&lt;<pos:position pos:line="20" pos:column="44"/></operator> <name pos:line="20" pos:column="39">name_<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

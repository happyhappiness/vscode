<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1399_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">helperHandleRead<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name><name pos:line="2" pos:column="24">Comm<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">ConnectionPointer<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">&amp;<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="49">conn<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">size_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">len<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="75">Comm<pos:position pos:line="2" pos:column="79"/></name><operator pos:line="2" pos:column="79">::<pos:position pos:line="2" pos:column="81"/></operator><name pos:line="2" pos:column="81">Flag<pos:position pos:line="2" pos:column="85"/></name></name></type> <name pos:line="2" pos:column="86">flag<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="92">int<pos:position pos:line="2" pos:column="95"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="97">void<pos:position pos:line="2" pos:column="101"/></name> <modifier pos:line="2" pos:column="102">*<pos:position pos:line="2" pos:column="103"/></modifier></type><name pos:line="2" pos:column="103">data<pos:position pos:line="2" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="108"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">helper_server<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">srv<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">helper_server<pos:position pos:line="4" pos:column="40"/></name> <operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">data<pos:position pos:line="4" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">helper<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">hlp<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name><name pos:line="5" pos:column="19">srv<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">parent<pos:position pos:line="5" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><call><name pos:line="6" pos:column="12">cbdataReferenceValid<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">data<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* Bail out early on Comm::ERR_CLOSING - close handlers will tidy up for us */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">flag<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <name><name pos:line="10" pos:column="17">Comm<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">::<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">ERR_CLOSING<pos:position pos:line="10" pos:column="34"/></name></name></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35"> <block pos:line="10" pos:column="36">{
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">conn<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">fd<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">==<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">srv<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">readPipe<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">fd<pos:position pos:line="14" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">84<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">5<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"helperHandleRead: "<pos:position pos:line="16" pos:column="39"/></literal> <operator pos:line="16" pos:column="40">&lt;&lt;<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="43">len<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">&lt;&lt;<pos:position pos:line="16" pos:column="55"/></operator> <literal type="string" pos:line="16" pos:column="50">" bytes from "<pos:position pos:line="16" pos:column="64"/></literal> <operator pos:line="16" pos:column="65">&lt;&lt;<pos:position pos:line="16" pos:column="73"/></operator> <name><name pos:line="16" pos:column="68">hlp<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">-&gt;<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="73">id_name<pos:position pos:line="16" pos:column="80"/></name></name> <operator pos:line="16" pos:column="81">&lt;&lt;<pos:position pos:line="16" pos:column="89"/></operator> <literal type="string" pos:line="16" pos:column="84">" #"<pos:position pos:line="16" pos:column="88"/></literal> <operator pos:line="16" pos:column="89">&lt;&lt;<pos:position pos:line="16" pos:column="97"/></operator> <name><name pos:line="16" pos:column="92">srv<pos:position pos:line="16" pos:column="95"/></name><operator pos:line="16" pos:column="95">-&gt;<pos:position pos:line="16" pos:column="100"/></operator><name pos:line="16" pos:column="97">index<pos:position pos:line="16" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="104"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">flag<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <name><name pos:line="18" pos:column="17">Comm<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">::<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">OK<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">||<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">len<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">==<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">srv<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">closePipesSafely<pos:position pos:line="19" pos:column="30"/></name></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">hlp<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">id_name<pos:position pos:line="19" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">srv<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">roffset<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">+=<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">len<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">srv<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">rbuf<pos:position pos:line="24" pos:column="14"/></name><index pos:line="24" pos:column="14">[<expr><name><name pos:line="24" pos:column="15">srv<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">roffset<pos:position pos:line="24" pos:column="27"/></name></name></expr>]<pos:position pos:line="24" pos:column="28"/></index></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <literal type="char" pos:line="24" pos:column="31">'\0'<pos:position pos:line="24" pos:column="35"/></literal></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">debugs<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">84<pos:position pos:line="25" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="16">DBG_DATA<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="26">Raw<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><literal type="string" pos:line="25" pos:column="30">"accumulated"<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="45">srv<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">rbuf<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="56">srv<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">-&gt;<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="61">roffset<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name><name pos:line="27" pos:column="10">srv<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">stats<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">pending<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">&amp;&amp;<pos:position pos:line="27" pos:column="39"/></operator> <operator pos:line="27" pos:column="32">!<pos:position pos:line="27" pos:column="33"/></operator><name><name pos:line="27" pos:column="33">srv<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">stats<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">.<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">timedout<pos:position pos:line="27" pos:column="52"/></name></name></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53"> <block pos:line="27" pos:column="54">{
        <comment type="block" pos:line="28" pos:column="9">/* someone spoke without being spoken to */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">84<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="20">DBG_IMPORTANT<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="35">"helperHandleRead: unexpected read from "<pos:position pos:line="29" pos:column="76"/></literal> <operator pos:line="29" pos:column="77">&lt;&lt;<pos:position pos:line="29" pos:column="85"/></operator>
               <name><name pos:line="30" pos:column="16">hlp<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">id_name<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">&lt;&lt;<pos:position pos:line="30" pos:column="37"/></operator> <literal type="string" pos:line="30" pos:column="32">" #"<pos:position pos:line="30" pos:column="36"/></literal> <operator pos:line="30" pos:column="37">&lt;&lt;<pos:position pos:line="30" pos:column="45"/></operator> <name><name pos:line="30" pos:column="40">srv<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">index<pos:position pos:line="30" pos:column="50"/></name></name> <operator pos:line="30" pos:column="51">&lt;&lt;<pos:position pos:line="30" pos:column="59"/></operator> <literal type="string" pos:line="30" pos:column="54">", "<pos:position pos:line="30" pos:column="58"/></literal> <operator pos:line="30" pos:column="59">&lt;&lt;<pos:position pos:line="30" pos:column="67"/></operator> <operator pos:line="30" pos:column="62">(<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="63">int<pos:position pos:line="30" pos:column="66"/></name><operator pos:line="30" pos:column="66">)<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="67">len<pos:position pos:line="30" pos:column="70"/></name> <operator pos:line="30" pos:column="71">&lt;&lt;<pos:position pos:line="30" pos:column="79"/></operator>
               <literal type="string" pos:line="31" pos:column="16">" bytes '"<pos:position pos:line="31" pos:column="26"/></literal> <operator pos:line="31" pos:column="27">&lt;&lt;<pos:position pos:line="31" pos:column="35"/></operator> <name><name pos:line="31" pos:column="30">srv<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">rbuf<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">&lt;&lt;<pos:position pos:line="31" pos:column="48"/></operator> <literal type="string" pos:line="31" pos:column="43">"'"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="33" pos:column="9">srv<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">roffset<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">srv<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">rbuf<pos:position pos:line="34" pos:column="18"/></name><index pos:line="34" pos:column="18">[<expr><literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal></expr>]<pos:position pos:line="34" pos:column="21"/></index></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <literal type="char" pos:line="34" pos:column="24">'\0'<pos:position pos:line="34" pos:column="28"/></literal></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="37" pos:column="5">bool<pos:position pos:line="37" pos:column="9"/></name></type> <name pos:line="37" pos:column="10">needsMore<pos:position pos:line="37" pos:column="19"/></name> <init pos:line="37" pos:column="20">= <expr><literal type="boolean" pos:line="37" pos:column="22">false<pos:position pos:line="37" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name pos:line="38" pos:column="11">msg<pos:position pos:line="38" pos:column="14"/></name> <init pos:line="38" pos:column="15">= <expr><name><name pos:line="38" pos:column="17">srv<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">rbuf<pos:position pos:line="38" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="38" pos:column="27"/></decl_stmt>
    <while pos:line="39" pos:column="5">while <condition pos:line="39" pos:column="11">(<expr><operator pos:line="39" pos:column="12">*<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">msg<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&amp;&amp;<pos:position pos:line="39" pos:column="27"/></operator> <operator pos:line="39" pos:column="20">!<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">needsMore<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition> <block pos:line="39" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">int<pos:position pos:line="40" pos:column="12"/></name></type> <name pos:line="40" pos:column="13">skip<pos:position pos:line="40" pos:column="17"/></name> <init pos:line="40" pos:column="18">= <expr><literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="40" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">char<pos:position pos:line="41" pos:column="13"/></name> <modifier pos:line="41" pos:column="14">*<pos:position pos:line="41" pos:column="15"/></modifier></type><name pos:line="41" pos:column="15">eom<pos:position pos:line="41" pos:column="18"/></name> <init pos:line="41" pos:column="19">= <expr><call><name pos:line="41" pos:column="21">strchr<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">msg<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="33">hlp<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">eom<pos:position pos:line="41" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="43"/></decl_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">eom<pos:position pos:line="42" pos:column="16"/></name></expr>)<pos:position pos:line="42" pos:column="17"/></condition><then pos:line="42" pos:column="17"> <block pos:line="42" pos:column="18">{
            <expr_stmt><expr><name pos:line="43" pos:column="13">skip<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <literal type="number" pos:line="43" pos:column="20">1<pos:position pos:line="43" pos:column="21"/></literal></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">debugs<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><literal type="number" pos:line="44" pos:column="20">84<pos:position pos:line="44" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="24">3<pos:position pos:line="44" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"helperHandleRead: end of reply found"<pos:position pos:line="44" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">eom<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">&gt;<pos:position pos:line="45" pos:column="25"/></operator> <name pos:line="45" pos:column="23">msg<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">&amp;&amp;<pos:position pos:line="45" pos:column="37"/></operator> <name><name pos:line="45" pos:column="30">eom<pos:position pos:line="45" pos:column="33"/></name><index pos:line="45" pos:column="33">[<expr><operator pos:line="45" pos:column="34">-<pos:position pos:line="45" pos:column="35"/></operator><literal type="number" pos:line="45" pos:column="35">1<pos:position pos:line="45" pos:column="36"/></literal></expr>]<pos:position pos:line="45" pos:column="37"/></index></name> <operator pos:line="45" pos:column="38">==<pos:position pos:line="45" pos:column="40"/></operator> <literal type="char" pos:line="45" pos:column="41">'\r'<pos:position pos:line="45" pos:column="45"/></literal> <operator pos:line="45" pos:column="46">&amp;&amp;<pos:position pos:line="45" pos:column="56"/></operator> <name><name pos:line="45" pos:column="49">hlp<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">-&gt;<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="54">eom<pos:position pos:line="45" pos:column="57"/></name></name> <operator pos:line="45" pos:column="58">==<pos:position pos:line="45" pos:column="60"/></operator> <literal type="char" pos:line="45" pos:column="61">'\n'<pos:position pos:line="45" pos:column="65"/></literal></expr>)<pos:position pos:line="45" pos:column="66"/></condition><then pos:line="45" pos:column="66"> <block pos:line="45" pos:column="67">{
                <expr_stmt><expr><operator pos:line="46" pos:column="17">*<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">eom<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <literal type="char" pos:line="46" pos:column="24">'\0'<pos:position pos:line="46" pos:column="28"/></literal></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
                <comment type="line" pos:line="47" pos:column="17">// rewind to the \r octet which is the real terminal now</comment>
                <comment type="line" pos:line="48" pos:column="17">// and remember that we have to skip forward 2 places now.</comment>
                <expr_stmt><expr><name pos:line="49" pos:column="17">skip<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="24">2<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="50" pos:column="17">--<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">eom<pos:position pos:line="50" pos:column="22"/></name></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="52" pos:column="13">*<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">eom<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <literal type="char" pos:line="52" pos:column="20">'\0'<pos:position pos:line="52" pos:column="24"/></literal></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><name><name pos:line="55" pos:column="14">srv<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">ignoreToEom<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">&amp;&amp;<pos:position pos:line="55" pos:column="41"/></operator> <operator pos:line="55" pos:column="34">!<pos:position pos:line="55" pos:column="35"/></operator><name><name pos:line="55" pos:column="35">srv<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">-&gt;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="40">replyXaction<pos:position pos:line="55" pos:column="52"/></name></name></expr>)<pos:position pos:line="55" pos:column="53"/></condition><then pos:line="55" pos:column="53"> <block pos:line="55" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">int<pos:position pos:line="56" pos:column="16"/></name></type> <name pos:line="56" pos:column="17">i<pos:position pos:line="56" pos:column="18"/></name> <init pos:line="56" pos:column="19">= <expr><literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="56" pos:column="23"/></decl_stmt>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name><name pos:line="57" pos:column="17">hlp<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">childs<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">.<pos:position pos:line="57" pos:column="29"/></operator><name pos:line="57" pos:column="29">concurrency<pos:position pos:line="57" pos:column="40"/></name></name></expr>)<pos:position pos:line="57" pos:column="41"/></condition><then pos:line="57" pos:column="41"> <block pos:line="57" pos:column="42">{
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">char<pos:position pos:line="58" pos:column="21"/></name> <modifier pos:line="58" pos:column="22">*<pos:position pos:line="58" pos:column="23"/></modifier></type><name pos:line="58" pos:column="23">e<pos:position pos:line="58" pos:column="24"/></name> <init pos:line="58" pos:column="25">= <expr><name pos:line="58" pos:column="27">NULL<pos:position pos:line="58" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="58" pos:column="32"/></decl_stmt>
                <expr_stmt><expr><name pos:line="59" pos:column="17">i<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">strtol<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">msg<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="33">&amp;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="34">e<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="37">10<pos:position pos:line="59" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
                <comment type="line" pos:line="60" pos:column="17">// Do we need to check for e == msg? Means wrong response from helper.</comment>
                <comment type="line" pos:line="61" pos:column="17">// Will be droped as "unexpected reply on channel 0"</comment>
                <expr_stmt><expr><name pos:line="62" pos:column="17">needsMore<pos:position pos:line="62" pos:column="26"/></name> <operator pos:line="62" pos:column="27">=<pos:position pos:line="62" pos:column="28"/></operator> <operator pos:line="62" pos:column="29">!<pos:position pos:line="62" pos:column="30"/></operator><operator pos:line="62" pos:column="30">(<pos:position pos:line="62" pos:column="31"/></operator><call><name pos:line="62" pos:column="31">xisspace<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><operator pos:line="62" pos:column="40">*<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="41">e<pos:position pos:line="62" pos:column="42"/></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call> <operator pos:line="62" pos:column="44">||<pos:position pos:line="62" pos:column="46"/></operator> <operator pos:line="62" pos:column="47">(<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="48">eom<pos:position pos:line="62" pos:column="51"/></name> <operator pos:line="62" pos:column="52">&amp;&amp;<pos:position pos:line="62" pos:column="62"/></operator> <name pos:line="62" pos:column="55">e<pos:position pos:line="62" pos:column="56"/></name> <operator pos:line="62" pos:column="57">==<pos:position pos:line="62" pos:column="59"/></operator> <name pos:line="62" pos:column="60">eom<pos:position pos:line="62" pos:column="63"/></name><operator pos:line="62" pos:column="63">)<pos:position pos:line="62" pos:column="64"/></operator><operator pos:line="62" pos:column="64">)<pos:position pos:line="62" pos:column="65"/></operator></expr>;<pos:position pos:line="62" pos:column="66"/></expr_stmt>
                <if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">!<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">needsMore<pos:position pos:line="63" pos:column="31"/></name></expr>)<pos:position pos:line="63" pos:column="32"/></condition><then pos:line="63" pos:column="32"> <block pos:line="63" pos:column="33">{
                    <expr_stmt><expr><name pos:line="64" pos:column="21">msg<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <name pos:line="64" pos:column="27">e<pos:position pos:line="64" pos:column="28"/></name></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
                    <while pos:line="65" pos:column="21">while <condition pos:line="65" pos:column="27">(<expr><operator pos:line="65" pos:column="28">*<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="29">msg<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">&amp;&amp;<pos:position pos:line="65" pos:column="43"/></operator> <call><name pos:line="65" pos:column="36">xisspace<pos:position pos:line="65" pos:column="44"/></name><argument_list pos:line="65" pos:column="44">(<argument><expr><operator pos:line="65" pos:column="45">*<pos:position pos:line="65" pos:column="46"/></operator><name pos:line="65" pos:column="46">msg<pos:position pos:line="65" pos:column="49"/></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="51"/></condition>
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="25">++<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">msg<pos:position pos:line="66" pos:column="30"/></name></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt></block></while>
                }<pos:position pos:line="67" pos:column="18"/></block></then></if> <comment type="line" pos:line="67" pos:column="19">// else not enough data to compute request number</comment>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><operator pos:line="69" pos:column="17">!<pos:position pos:line="69" pos:column="18"/></operator><operator pos:line="69" pos:column="18">(<pos:position pos:line="69" pos:column="19"/></operator><name><name pos:line="69" pos:column="19">srv<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">-&gt;<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="24">replyXaction<pos:position pos:line="69" pos:column="36"/></name></name> <operator pos:line="69" pos:column="37">=<pos:position pos:line="69" pos:column="38"/></operator> <call><name><name pos:line="69" pos:column="39">srv<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">popRequest<pos:position pos:line="69" pos:column="54"/></name></name><argument_list pos:line="69" pos:column="54">(<argument><expr><name pos:line="69" pos:column="55">i<pos:position pos:line="69" pos:column="56"/></name></expr></argument>)<pos:position pos:line="69" pos:column="57"/></argument_list></call><operator pos:line="69" pos:column="57">)<pos:position pos:line="69" pos:column="58"/></operator></expr>)<pos:position pos:line="69" pos:column="59"/></condition><then pos:line="69" pos:column="59"> <block pos:line="69" pos:column="60">{
                <if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name><name pos:line="70" pos:column="21">srv<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">stats<pos:position pos:line="70" pos:column="31"/></name><operator pos:line="70" pos:column="31">.<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="32">timedout<pos:position pos:line="70" pos:column="40"/></name></name></expr>)<pos:position pos:line="70" pos:column="41"/></condition><then pos:line="70" pos:column="41"> <block pos:line="70" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="71" pos:column="21">debugs<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><literal type="number" pos:line="71" pos:column="28">84<pos:position pos:line="71" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="32">3<pos:position pos:line="71" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="35">"Timedout reply received for request-ID: "<pos:position pos:line="71" pos:column="77"/></literal> <operator pos:line="71" pos:column="78">&lt;&lt;<pos:position pos:line="71" pos:column="86"/></operator> <name pos:line="71" pos:column="81">i<pos:position pos:line="71" pos:column="82"/></name> <operator pos:line="71" pos:column="83">&lt;&lt;<pos:position pos:line="71" pos:column="91"/></operator> <literal type="string" pos:line="71" pos:column="86">" , ignore"<pos:position pos:line="71" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="99"/></expr_stmt>
                }<pos:position pos:line="72" pos:column="18"/></block></then> <else pos:line="72" pos:column="19">else <block pos:line="72" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="73" pos:column="21">debugs<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><literal type="number" pos:line="73" pos:column="28">84<pos:position pos:line="73" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="32">DBG_IMPORTANT<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="47">"helperHandleRead: unexpected reply on channel "<pos:position pos:line="73" pos:column="95"/></literal> <operator pos:line="73" pos:column="96">&lt;&lt;<pos:position pos:line="73" pos:column="104"/></operator>
                           <name pos:line="74" pos:column="28">i<pos:position pos:line="74" pos:column="29"/></name> <operator pos:line="74" pos:column="30">&lt;&lt;<pos:position pos:line="74" pos:column="38"/></operator> <literal type="string" pos:line="74" pos:column="33">" from "<pos:position pos:line="74" pos:column="41"/></literal> <operator pos:line="74" pos:column="42">&lt;&lt;<pos:position pos:line="74" pos:column="50"/></operator> <name><name pos:line="74" pos:column="45">hlp<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">-&gt;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="50">id_name<pos:position pos:line="74" pos:column="57"/></name></name> <operator pos:line="74" pos:column="58">&lt;&lt;<pos:position pos:line="74" pos:column="66"/></operator> <literal type="string" pos:line="74" pos:column="61">" #"<pos:position pos:line="74" pos:column="65"/></literal> <operator pos:line="74" pos:column="66">&lt;&lt;<pos:position pos:line="74" pos:column="74"/></operator> <name><name pos:line="74" pos:column="69">srv<pos:position pos:line="74" pos:column="72"/></name><operator pos:line="74" pos:column="72">-&gt;<pos:position pos:line="74" pos:column="77"/></operator><name pos:line="74" pos:column="74">index<pos:position pos:line="74" pos:column="79"/></name></name> <operator pos:line="74" pos:column="80">&lt;&lt;<pos:position pos:line="74" pos:column="88"/></operator>
                           <literal type="string" pos:line="75" pos:column="28">" '"<pos:position pos:line="75" pos:column="32"/></literal> <operator pos:line="75" pos:column="33">&lt;&lt;<pos:position pos:line="75" pos:column="41"/></operator> <name><name pos:line="75" pos:column="36">srv<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">rbuf<pos:position pos:line="75" pos:column="45"/></name></name> <operator pos:line="75" pos:column="46">&lt;&lt;<pos:position pos:line="75" pos:column="54"/></operator> <literal type="string" pos:line="75" pos:column="49">"'"<pos:position pos:line="75" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="76" pos:column="18"/></block></else></if>
                <expr_stmt><expr><name><name pos:line="77" pos:column="17">srv<pos:position pos:line="77" pos:column="20"/></name><operator pos:line="77" pos:column="20">-&gt;<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="22">ignoreToEom<pos:position pos:line="77" pos:column="33"/></name></name> <operator pos:line="77" pos:column="34">=<pos:position pos:line="77" pos:column="35"/></operator> <literal type="boolean" pos:line="77" pos:column="36">true<pos:position pos:line="77" pos:column="40"/></literal></expr>;<pos:position pos:line="77" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="78" pos:column="14"/></block></then></if>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if> <comment type="line" pos:line="79" pos:column="11">// else we need to just append reply data to the current Xaction</comment>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">needsMore<pos:position pos:line="81" pos:column="23"/></name></expr>)<pos:position pos:line="81" pos:column="24"/></condition><then pos:line="81" pos:column="24"> <block pos:line="81" pos:column="25">{
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">size_t<pos:position pos:line="82" pos:column="19"/></name></type> <name pos:line="82" pos:column="20">msgSize<pos:position pos:line="82" pos:column="27"/></name>  <init pos:line="82" pos:column="29">= <expr><ternary><condition><expr><name pos:line="82" pos:column="31">eom<pos:position pos:line="82" pos:column="34"/></name></expr> ?<pos:position pos:line="82" pos:column="36"/></condition><then pos:line="82" pos:column="36"> <expr><name pos:line="82" pos:column="37">eom<pos:position pos:line="82" pos:column="40"/></name> <operator pos:line="82" pos:column="41">-<pos:position pos:line="82" pos:column="42"/></operator> <name pos:line="82" pos:column="43">msg<pos:position pos:line="82" pos:column="46"/></name></expr> <pos:position pos:line="82" pos:column="47"/></then><else pos:line="82" pos:column="47">: <expr><operator pos:line="82" pos:column="49">(<pos:position pos:line="82" pos:column="50"/></operator><name><name pos:line="82" pos:column="50">srv<pos:position pos:line="82" pos:column="53"/></name><operator pos:line="82" pos:column="53">-&gt;<pos:position pos:line="82" pos:column="58"/></operator><name pos:line="82" pos:column="55">roffset<pos:position pos:line="82" pos:column="62"/></name></name> <operator pos:line="82" pos:column="63">-<pos:position pos:line="82" pos:column="64"/></operator> <operator pos:line="82" pos:column="65">(<pos:position pos:line="82" pos:column="66"/></operator><name pos:line="82" pos:column="66">msg<pos:position pos:line="82" pos:column="69"/></name> <operator pos:line="82" pos:column="70">-<pos:position pos:line="82" pos:column="71"/></operator> <name><name pos:line="82" pos:column="72">srv<pos:position pos:line="82" pos:column="75"/></name><operator pos:line="82" pos:column="75">-&gt;<pos:position pos:line="82" pos:column="80"/></operator><name pos:line="82" pos:column="77">rbuf<pos:position pos:line="82" pos:column="81"/></name></name><operator pos:line="82" pos:column="81">)<pos:position pos:line="82" pos:column="82"/></operator><operator pos:line="82" pos:column="82">)<pos:position pos:line="82" pos:column="83"/></operator></expr></else></ternary></expr></init></decl>;<pos:position pos:line="82" pos:column="84"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">assert<pos:position pos:line="83" pos:column="19"/></name><argument_list pos:line="83" pos:column="19">(<argument><expr><name pos:line="83" pos:column="20">msgSize<pos:position pos:line="83" pos:column="27"/></name> <operator pos:line="83" pos:column="28">&lt;=<pos:position pos:line="83" pos:column="33"/></operator> <name><name pos:line="83" pos:column="31">srv<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">-&gt;<pos:position pos:line="83" pos:column="39"/></operator><name pos:line="83" pos:column="36">rbuf_sz<pos:position pos:line="83" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">helperReturnBuffer<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">(<argument><expr><name pos:line="84" pos:column="32">srv<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="37">hlp<pos:position pos:line="84" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="42">msg<pos:position pos:line="84" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="47">msgSize<pos:position pos:line="84" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="56">eom<pos:position pos:line="84" pos:column="59"/></name></expr></argument>)<pos:position pos:line="84" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name pos:line="85" pos:column="13">msg<pos:position pos:line="85" pos:column="16"/></name> <operator pos:line="85" pos:column="17">+=<pos:position pos:line="85" pos:column="19"/></operator> <name pos:line="85" pos:column="20">msgSize<pos:position pos:line="85" pos:column="27"/></name> <operator pos:line="85" pos:column="28">+<pos:position pos:line="85" pos:column="29"/></operator> <name pos:line="85" pos:column="30">skip<pos:position pos:line="85" pos:column="34"/></name></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">assert<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><cast type="static" pos:line="86" pos:column="20">static_cast<argument_list type="generic" pos:line="86" pos:column="31">&lt;<argument><expr><name pos:line="86" pos:column="32">size_t<pos:position pos:line="86" pos:column="38"/></name></expr></argument>&gt;<pos:position pos:line="86" pos:column="42"/></argument_list><argument_list pos:line="86" pos:column="39">(<argument><expr><name pos:line="86" pos:column="40">msg<pos:position pos:line="86" pos:column="43"/></name> <operator pos:line="86" pos:column="44">-<pos:position pos:line="86" pos:column="45"/></operator> <name><name pos:line="86" pos:column="46">srv<pos:position pos:line="86" pos:column="49"/></name><operator pos:line="86" pos:column="49">-&gt;<pos:position pos:line="86" pos:column="54"/></operator><name pos:line="86" pos:column="51">rbuf<pos:position pos:line="86" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></cast> <operator pos:line="86" pos:column="57">&lt;=<pos:position pos:line="86" pos:column="62"/></operator> <name><name pos:line="86" pos:column="60">srv<pos:position pos:line="86" pos:column="63"/></name><operator pos:line="86" pos:column="63">-&gt;<pos:position pos:line="86" pos:column="68"/></operator><name pos:line="86" pos:column="65">rbuf_sz<pos:position pos:line="86" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="74"/></expr_stmt>

            <comment type="line" pos:line="88" pos:column="13">// The next message should not ignored.</comment>
            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name pos:line="89" pos:column="17">eom<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">&amp;&amp;<pos:position pos:line="89" pos:column="31"/></operator> <name><name pos:line="89" pos:column="24">srv<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">-&gt;<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="29">ignoreToEom<pos:position pos:line="89" pos:column="40"/></name></name></expr>)<pos:position pos:line="89" pos:column="41"/></condition><then pos:line="89" pos:column="41">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="90" pos:column="17">srv<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">ignoreToEom<pos:position pos:line="90" pos:column="33"/></name></name> <operator pos:line="90" pos:column="34">=<pos:position pos:line="90" pos:column="35"/></operator> <literal type="boolean" pos:line="90" pos:column="36">false<pos:position pos:line="90" pos:column="41"/></literal></expr>;<pos:position pos:line="90" pos:column="42"/></expr_stmt></block></then></if>
        }<pos:position pos:line="91" pos:column="10"/></block></then> <else pos:line="91" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="13">assert<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">(<argument><expr><name pos:line="92" pos:column="20">skip<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">==<pos:position pos:line="92" pos:column="27"/></operator> <literal type="number" pos:line="92" pos:column="28">0<pos:position pos:line="92" pos:column="29"/></literal> <operator pos:line="92" pos:column="30">&amp;&amp;<pos:position pos:line="92" pos:column="40"/></operator> <name pos:line="92" pos:column="33">eom<pos:position pos:line="92" pos:column="36"/></name> <operator pos:line="92" pos:column="37">==<pos:position pos:line="92" pos:column="39"/></operator> <name pos:line="92" pos:column="40">NULL<pos:position pos:line="92" pos:column="44"/></name></expr></argument>)<pos:position pos:line="92" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="46"/></expr_stmt></block></else></if>
    }<pos:position pos:line="93" pos:column="6"/></block></while>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">needsMore<pos:position pos:line="95" pos:column="18"/></name></expr>)<pos:position pos:line="95" pos:column="19"/></condition><then pos:line="95" pos:column="19"> <block pos:line="95" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="96" pos:column="9">size_t<pos:position pos:line="96" pos:column="15"/></name></type> <name pos:line="96" pos:column="16">msgSize<pos:position pos:line="96" pos:column="23"/></name> <init pos:line="96" pos:column="24">= <expr><operator pos:line="96" pos:column="26">(<pos:position pos:line="96" pos:column="27"/></operator><name><name pos:line="96" pos:column="27">srv<pos:position pos:line="96" pos:column="30"/></name><operator pos:line="96" pos:column="30">-&gt;<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="32">roffset<pos:position pos:line="96" pos:column="39"/></name></name> <operator pos:line="96" pos:column="40">-<pos:position pos:line="96" pos:column="41"/></operator> <operator pos:line="96" pos:column="42">(<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="43">msg<pos:position pos:line="96" pos:column="46"/></name> <operator pos:line="96" pos:column="47">-<pos:position pos:line="96" pos:column="48"/></operator> <name><name pos:line="96" pos:column="49">srv<pos:position pos:line="96" pos:column="52"/></name><operator pos:line="96" pos:column="52">-&gt;<pos:position pos:line="96" pos:column="57"/></operator><name pos:line="96" pos:column="54">rbuf<pos:position pos:line="96" pos:column="58"/></name></name><operator pos:line="96" pos:column="58">)<pos:position pos:line="96" pos:column="59"/></operator><operator pos:line="96" pos:column="59">)<pos:position pos:line="96" pos:column="60"/></operator></expr></init></decl>;<pos:position pos:line="96" pos:column="61"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">assert<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">(<argument><expr><name pos:line="97" pos:column="16">msgSize<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">&lt;=<pos:position pos:line="97" pos:column="29"/></operator> <name><name pos:line="97" pos:column="27">srv<pos:position pos:line="97" pos:column="30"/></name><operator pos:line="97" pos:column="30">-&gt;<pos:position pos:line="97" pos:column="35"/></operator><name pos:line="97" pos:column="32">rbuf_sz<pos:position pos:line="97" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">memmove<pos:position pos:line="98" pos:column="16"/></name><argument_list pos:line="98" pos:column="16">(<argument><expr><name><name pos:line="98" pos:column="17">srv<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">-&gt;<pos:position pos:line="98" pos:column="25"/></operator><name pos:line="98" pos:column="22">rbuf<pos:position pos:line="98" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="28">msg<pos:position pos:line="98" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="33">msgSize<pos:position pos:line="98" pos:column="40"/></name></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">srv<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">-&gt;<pos:position pos:line="99" pos:column="17"/></operator><name pos:line="99" pos:column="14">roffset<pos:position pos:line="99" pos:column="21"/></name></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <name pos:line="99" pos:column="24">msgSize<pos:position pos:line="99" pos:column="31"/></name></expr>;<pos:position pos:line="99" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="100" pos:column="9">srv<pos:position pos:line="100" pos:column="12"/></name><operator pos:line="100" pos:column="12">-&gt;<pos:position pos:line="100" pos:column="17"/></operator><name pos:line="100" pos:column="14">rbuf<pos:position pos:line="100" pos:column="18"/></name><index pos:line="100" pos:column="18">[<expr><name><name pos:line="100" pos:column="19">srv<pos:position pos:line="100" pos:column="22"/></name><operator pos:line="100" pos:column="22">-&gt;<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="24">roffset<pos:position pos:line="100" pos:column="31"/></name></name></expr>]<pos:position pos:line="100" pos:column="32"/></index></name> <operator pos:line="100" pos:column="33">=<pos:position pos:line="100" pos:column="34"/></operator> <literal type="char" pos:line="100" pos:column="35">'\0'<pos:position pos:line="100" pos:column="39"/></literal></expr>;<pos:position pos:line="100" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then> <else pos:line="101" pos:column="7">else <block pos:line="101" pos:column="12">{
        <comment type="line" pos:line="102" pos:column="9">// All of the responses parsed and msg points at the end of read data</comment>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">assert<pos:position pos:line="103" pos:column="15"/></name><argument_list pos:line="103" pos:column="15">(<argument><expr><cast type="static" pos:line="103" pos:column="16">static_cast<argument_list type="generic" pos:line="103" pos:column="27">&lt;<argument><expr><name pos:line="103" pos:column="28">size_t<pos:position pos:line="103" pos:column="34"/></name></expr></argument>&gt;<pos:position pos:line="103" pos:column="38"/></argument_list><argument_list pos:line="103" pos:column="35">(<argument><expr><name pos:line="103" pos:column="36">msg<pos:position pos:line="103" pos:column="39"/></name> <operator pos:line="103" pos:column="40">-<pos:position pos:line="103" pos:column="41"/></operator> <name><name pos:line="103" pos:column="42">srv<pos:position pos:line="103" pos:column="45"/></name><operator pos:line="103" pos:column="45">-&gt;<pos:position pos:line="103" pos:column="50"/></operator><name pos:line="103" pos:column="47">rbuf<pos:position pos:line="103" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="52"/></argument_list></cast> <operator pos:line="103" pos:column="53">==<pos:position pos:line="103" pos:column="55"/></operator> <name><name pos:line="103" pos:column="56">srv<pos:position pos:line="103" pos:column="59"/></name><operator pos:line="103" pos:column="59">-&gt;<pos:position pos:line="103" pos:column="64"/></operator><name pos:line="103" pos:column="61">roffset<pos:position pos:line="103" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">srv<pos:position pos:line="104" pos:column="12"/></name><operator pos:line="104" pos:column="12">-&gt;<pos:position pos:line="104" pos:column="17"/></operator><name pos:line="104" pos:column="14">roffset<pos:position pos:line="104" pos:column="21"/></name></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <literal type="number" pos:line="104" pos:column="24">0<pos:position pos:line="104" pos:column="25"/></literal></expr>;<pos:position pos:line="104" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></else></if>

    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><call><name><name pos:line="107" pos:column="9">Comm<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">::<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="15">IsConnOpen<pos:position pos:line="107" pos:column="25"/></name></name><argument_list pos:line="107" pos:column="25">(<argument><expr><name><name pos:line="107" pos:column="26">srv<pos:position pos:line="107" pos:column="29"/></name><operator pos:line="107" pos:column="29">-&gt;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="31">readPipe<pos:position pos:line="107" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="40"/></argument_list></call> <operator pos:line="107" pos:column="41">&amp;&amp;<pos:position pos:line="107" pos:column="51"/></operator> <operator pos:line="107" pos:column="44">!<pos:position pos:line="107" pos:column="45"/></operator><name><name pos:line="107" pos:column="45">fd_table<pos:position pos:line="107" pos:column="53"/></name><index pos:line="107" pos:column="53">[<expr><name><name pos:line="107" pos:column="54">srv<pos:position pos:line="107" pos:column="57"/></name><operator pos:line="107" pos:column="57">-&gt;<pos:position pos:line="107" pos:column="62"/></operator><name pos:line="107" pos:column="59">readPipe<pos:position pos:line="107" pos:column="67"/></name><operator pos:line="107" pos:column="67">-&gt;<pos:position pos:line="107" pos:column="72"/></operator><name pos:line="107" pos:column="69">fd<pos:position pos:line="107" pos:column="71"/></name></name></expr>]<pos:position pos:line="107" pos:column="72"/></index></name><operator pos:line="107" pos:column="72">.<pos:position pos:line="107" pos:column="73"/></operator><call><name pos:line="107" pos:column="73">closing<pos:position pos:line="107" pos:column="80"/></name><argument_list pos:line="107" pos:column="80">()<pos:position pos:line="107" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="83"/></condition><then pos:line="107" pos:column="83"> <block pos:line="107" pos:column="84">{
        <decl_stmt><decl><type><name pos:line="108" pos:column="9">int<pos:position pos:line="108" pos:column="12"/></name></type> <name pos:line="108" pos:column="13">spaceSize<pos:position pos:line="108" pos:column="22"/></name> <init pos:line="108" pos:column="23">= <expr><name><name pos:line="108" pos:column="25">srv<pos:position pos:line="108" pos:column="28"/></name><operator pos:line="108" pos:column="28">-&gt;<pos:position pos:line="108" pos:column="33"/></operator><name pos:line="108" pos:column="30">rbuf_sz<pos:position pos:line="108" pos:column="37"/></name></name> <operator pos:line="108" pos:column="38">-<pos:position pos:line="108" pos:column="39"/></operator> <name><name pos:line="108" pos:column="40">srv<pos:position pos:line="108" pos:column="43"/></name><operator pos:line="108" pos:column="43">-&gt;<pos:position pos:line="108" pos:column="48"/></operator><name pos:line="108" pos:column="45">roffset<pos:position pos:line="108" pos:column="52"/></name></name> <operator pos:line="108" pos:column="53">-<pos:position pos:line="108" pos:column="54"/></operator> <literal type="number" pos:line="108" pos:column="55">1<pos:position pos:line="108" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="108" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">assert<pos:position pos:line="109" pos:column="15"/></name><argument_list pos:line="109" pos:column="15">(<argument><expr><name pos:line="109" pos:column="16">spaceSize<pos:position pos:line="109" pos:column="25"/></name> <operator pos:line="109" pos:column="26">&gt;=<pos:position pos:line="109" pos:column="31"/></operator> <literal type="number" pos:line="109" pos:column="29">0<pos:position pos:line="109" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="32"/></expr_stmt>

        <decl_stmt><decl><type><name><name pos:line="111" pos:column="9">AsyncCall<pos:position pos:line="111" pos:column="18"/></name><operator pos:line="111" pos:column="18">::<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="20">Pointer<pos:position pos:line="111" pos:column="27"/></name></name></type> <name pos:line="111" pos:column="28">call<pos:position pos:line="111" pos:column="32"/></name> <init pos:line="111" pos:column="33">= <expr><call><name pos:line="111" pos:column="35">commCbCall<pos:position pos:line="111" pos:column="45"/></name><argument_list pos:line="111" pos:column="45">(<argument><expr><literal type="number" pos:line="111" pos:column="46">5<pos:position pos:line="111" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="111" pos:column="48">4<pos:position pos:line="111" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="51">"helperHandleRead"<pos:position pos:line="111" pos:column="69"/></literal></expr></argument>,
                                             <argument><expr><call><name pos:line="112" pos:column="46">CommIoCbPtrFun<pos:position pos:line="112" pos:column="60"/></name><argument_list pos:line="112" pos:column="60">(<argument><expr><name pos:line="112" pos:column="61">helperHandleRead<pos:position pos:line="112" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="79">srv<pos:position pos:line="112" pos:column="82"/></name></expr></argument>)<pos:position pos:line="112" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="85"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">comm_read<pos:position pos:line="113" pos:column="18"/></name><argument_list pos:line="113" pos:column="18">(<argument><expr><name><name pos:line="113" pos:column="19">srv<pos:position pos:line="113" pos:column="22"/></name><operator pos:line="113" pos:column="22">-&gt;<pos:position pos:line="113" pos:column="27"/></operator><name pos:line="113" pos:column="24">readPipe<pos:position pos:line="113" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="34">srv<pos:position pos:line="113" pos:column="37"/></name><operator pos:line="113" pos:column="37">-&gt;<pos:position pos:line="113" pos:column="42"/></operator><name pos:line="113" pos:column="39">rbuf<pos:position pos:line="113" pos:column="43"/></name></name> <operator pos:line="113" pos:column="44">+<pos:position pos:line="113" pos:column="45"/></operator> <name><name pos:line="113" pos:column="46">srv<pos:position pos:line="113" pos:column="49"/></name><operator pos:line="113" pos:column="49">-&gt;<pos:position pos:line="113" pos:column="54"/></operator><name pos:line="113" pos:column="51">roffset<pos:position pos:line="113" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="60">spaceSize<pos:position pos:line="113" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="71">call<pos:position pos:line="113" pos:column="75"/></name></expr></argument>)<pos:position pos:line="113" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

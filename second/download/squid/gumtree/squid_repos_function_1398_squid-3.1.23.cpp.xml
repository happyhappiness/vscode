<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1398_squid-3.1.23.cpp" pos:tabs="8"><function type="operator"><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">_method_t<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">&amp;<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="12">operator<name pos:line="2" pos:column="20">++<pos:position pos:line="2" pos:column="22"/></name></name> <parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">_method_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="35">aMethod<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">tmp<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><operator pos:line="4" pos:column="15">(<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">)<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">aMethod<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">aMethod<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call pos:line="5" pos:column="15">(<name pos:line="5" pos:column="16">_method_t<pos:position pos:line="5" pos:column="25"/></name>)<argument_list pos:line="5" pos:column="26">(<argument><expr><operator pos:line="5" pos:column="27">++<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">tmp<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">aMethod<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3098_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">unpinConnection<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">bool<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">andClose<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">33<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name><name pos:line="4" pos:column="27">pinning<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">serverConnection<pos:position pos:line="4" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="53"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">pinning<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">peer<pos:position pos:line="6" pos:column="21"/></name></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">cbdataReferenceDone<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">pinning<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">.<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">peer<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">Comm<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">::<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">IsConnOpen<pos:position pos:line="9" pos:column="25"/></name></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name><name pos:line="9" pos:column="26">pinning<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">.<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">serverConnection<pos:position pos:line="9" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52"> <block pos:line="9" pos:column="53">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">pinning<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">closeHandler<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">!=<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">NULL<pos:position pos:line="10" pos:column="41"/></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">comm_remove_close_handler<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name><name pos:line="11" pos:column="39">pinning<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">serverConnection<pos:position pos:line="11" pos:column="63"/></name><operator pos:line="11" pos:column="63">-&gt;<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="65">fd<pos:position pos:line="11" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="69">pinning<pos:position pos:line="11" pos:column="76"/></name><operator pos:line="11" pos:column="76">.<pos:position pos:line="11" pos:column="77"/></operator><name pos:line="11" pos:column="77">closeHandler<pos:position pos:line="11" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="12" pos:column="13">pinning<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">closeHandler<pos:position pos:line="12" pos:column="33"/></name></name> <operator pos:line="12" pos:column="34">=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="15" pos:column="9">stopPinnedConnectionMonitoring<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">()<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>

        <comment type="line" pos:line="17" pos:column="9">// close the server side socket if requested</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">andClose<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="13">pinning<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">serverConnection<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">close<pos:position pos:line="19" pos:column="44"/></name></name><argument_list pos:line="19" pos:column="44">()<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">pinning<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">serverConnection<pos:position pos:line="20" pos:column="33"/></name></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">NULL<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">safe_free<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">pinning<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">host<pos:position pos:line="23" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">pinning<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">zeroReply<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <literal type="boolean" pos:line="25" pos:column="25">false<pos:position pos:line="25" pos:column="30"/></literal></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* NOTE: pinning.pinned should be kept. This combined with fd == -1 at the end of a request indicates that the host
     * connection has gone away */</comment>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

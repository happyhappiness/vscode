<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_122_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Transport<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">TheConfig<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">parseCommandOpts<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">argc<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name><name pos:line="2" pos:column="56">argv<pos:position pos:line="2" pos:column="60"/></name><index pos:line="2" pos:column="60">[]<pos:position pos:line="2" pos:column="62"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">int<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">c<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">int<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">&amp;<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="76">optIndex<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">tls<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="boolean" pos:line="4" pos:column="16">false<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">shortOpStr<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="string" pos:line="5" pos:column="30">"h:l:p:T:?"<pos:position pos:line="5" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>

    <comment type="line" pos:line="7" pos:column="5">// options for controlling squidclient transport connection</comment>
    <decl_stmt><decl><specifier pos:line="8" pos:column="5">static<pos:position pos:line="8" pos:column="11"/></specifier> <type><name><name pos:line="8" pos:column="12">struct<pos:position pos:line="8" pos:column="18"/></name> <name pos:line="8" pos:column="19">option<pos:position pos:line="8" pos:column="25"/></name></name></type> <name><name pos:line="8" pos:column="26">longOptions<pos:position pos:line="8" pos:column="37"/></name><index pos:line="8" pos:column="37">[]<pos:position pos:line="8" pos:column="39"/></index></name> <init pos:line="8" pos:column="40">= <expr><block pos:line="8" pos:column="42">{
        <expr><block pos:line="9" pos:column="9">{<expr><literal type="string" pos:line="9" pos:column="10">"anonymous-tls"<pos:position pos:line="9" pos:column="25"/></literal></expr>,<expr><name pos:line="9" pos:column="26">no_argument<pos:position pos:line="9" pos:column="37"/></name></expr>, <expr><literal type="number" pos:line="9" pos:column="39">0<pos:position pos:line="9" pos:column="40"/></literal></expr>, <expr><literal type="char" pos:line="9" pos:column="42">'\1'<pos:position pos:line="9" pos:column="46"/></literal></expr>}<pos:position pos:line="9" pos:column="47"/></block></expr>,
        <expr><block pos:line="10" pos:column="9">{<expr><literal type="string" pos:line="10" pos:column="10">"https"<pos:position pos:line="10" pos:column="17"/></literal></expr>,        <expr><name pos:line="10" pos:column="26">no_argument<pos:position pos:line="10" pos:column="37"/></name></expr>, <expr><literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr>, <expr><literal type="char" pos:line="10" pos:column="42">'\3'<pos:position pos:line="10" pos:column="46"/></literal></expr>}<pos:position pos:line="10" pos:column="47"/></block></expr>,
        <expr><block pos:line="11" pos:column="9">{<expr><literal type="string" pos:line="11" pos:column="10">"trusted-ca"<pos:position pos:line="11" pos:column="22"/></literal></expr>,   <expr><name pos:line="11" pos:column="26">required_argument<pos:position pos:line="11" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="11" pos:column="45">0<pos:position pos:line="11" pos:column="46"/></literal></expr>, <expr><literal type="char" pos:line="11" pos:column="48">'A'<pos:position pos:line="11" pos:column="51"/></literal></expr>}<pos:position pos:line="11" pos:column="52"/></block></expr>,
        <expr><block pos:line="12" pos:column="9">{<expr><literal type="string" pos:line="12" pos:column="10">"cert"<pos:position pos:line="12" pos:column="16"/></literal></expr>,         <expr><name pos:line="12" pos:column="26">required_argument<pos:position pos:line="12" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr>, <expr><literal type="char" pos:line="12" pos:column="48">'C'<pos:position pos:line="12" pos:column="51"/></literal></expr>}<pos:position pos:line="12" pos:column="52"/></block></expr>,
        <expr><block pos:line="13" pos:column="9">{<expr><literal type="string" pos:line="13" pos:column="10">"host"<pos:position pos:line="13" pos:column="16"/></literal></expr>,         <expr><name pos:line="13" pos:column="26">required_argument<pos:position pos:line="13" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="13" pos:column="45">0<pos:position pos:line="13" pos:column="46"/></literal></expr>, <expr><literal type="char" pos:line="13" pos:column="48">'h'<pos:position pos:line="13" pos:column="51"/></literal></expr>}<pos:position pos:line="13" pos:column="52"/></block></expr>,
        <expr><block pos:line="14" pos:column="9">{<expr><literal type="string" pos:line="14" pos:column="10">"local"<pos:position pos:line="14" pos:column="17"/></literal></expr>,        <expr><name pos:line="14" pos:column="26">required_argument<pos:position pos:line="14" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="14" pos:column="45">0<pos:position pos:line="14" pos:column="46"/></literal></expr>, <expr><literal type="char" pos:line="14" pos:column="48">'l'<pos:position pos:line="14" pos:column="51"/></literal></expr>}<pos:position pos:line="14" pos:column="52"/></block></expr>,
        <expr><block pos:line="15" pos:column="9">{<expr><literal type="string" pos:line="15" pos:column="10">"port"<pos:position pos:line="15" pos:column="16"/></literal></expr>,         <expr><name pos:line="15" pos:column="26">required_argument<pos:position pos:line="15" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr>, <expr><literal type="char" pos:line="15" pos:column="48">'p'<pos:position pos:line="15" pos:column="51"/></literal></expr>}<pos:position pos:line="15" pos:column="52"/></block></expr>,
        <expr><block pos:line="16" pos:column="9">{<expr><literal type="string" pos:line="16" pos:column="10">"params"<pos:position pos:line="16" pos:column="18"/></literal></expr>,       <expr><name pos:line="16" pos:column="26">required_argument<pos:position pos:line="16" pos:column="43"/></name></expr>, <expr><literal type="number" pos:line="16" pos:column="45">0<pos:position pos:line="16" pos:column="46"/></literal></expr>, <expr><literal type="char" pos:line="16" pos:column="48">'P'<pos:position pos:line="16" pos:column="51"/></literal></expr>}<pos:position pos:line="16" pos:column="52"/></block></expr>,
        <expr><block pos:line="17" pos:column="9">{<expr><literal type="number" pos:line="17" pos:column="10">0<pos:position pos:line="17" pos:column="11"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>}<pos:position pos:line="17" pos:column="21"/></block></expr>
    }<pos:position pos:line="18" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="18" pos:column="7"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">saved_opterr<pos:position pos:line="20" pos:column="21"/></name> <init pos:line="20" pos:column="22">= <expr><name pos:line="20" pos:column="24">opterr<pos:position pos:line="20" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">opterr<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt> <comment type="line" pos:line="21" pos:column="17">// suppress errors from getopt</comment>
    <do pos:line="22" pos:column="5">do <block pos:line="22" pos:column="8">{
        <switch pos:line="23" pos:column="9">switch <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">c<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition> <block pos:line="23" pos:column="20">{
        <case pos:line="24" pos:column="9">case <expr><literal type="char" pos:line="24" pos:column="14">'\1'<pos:position pos:line="24" pos:column="18"/></literal></expr>:<pos:position pos:line="24" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="25" pos:column="13">tls<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <literal type="boolean" pos:line="25" pos:column="19">true<pos:position pos:line="25" pos:column="23"/></literal></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">tlsAnonymous<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <literal type="boolean" pos:line="26" pos:column="28">true<pos:position pos:line="26" pos:column="32"/></literal></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="27" pos:column="13">params<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <literal type="string" pos:line="27" pos:column="22">"PERFORMANCE:+ANON-ECDH:+ANON-DH"<pos:position pos:line="27" pos:column="55"/></literal></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
            <break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break>

        <case pos:line="30" pos:column="9">case <expr><literal type="char" pos:line="30" pos:column="14">'\3'<pos:position pos:line="30" pos:column="18"/></literal></expr>:<pos:position pos:line="30" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="31" pos:column="13">tls<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="boolean" pos:line="31" pos:column="19">true<pos:position pos:line="31" pos:column="23"/></literal></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>

        <case pos:line="34" pos:column="9">case <expr><literal type="char" pos:line="34" pos:column="14">'A'<pos:position pos:line="34" pos:column="17"/></literal></expr>:<pos:position pos:line="34" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="35" pos:column="13">tls<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="boolean" pos:line="35" pos:column="19">true<pos:position pos:line="35" pos:column="23"/></literal></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">caFiles<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">push_back<pos:position pos:line="36" pos:column="30"/></name></name><argument_list pos:line="36" pos:column="30">(<argument><expr><call><name><name pos:line="36" pos:column="31">std<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">::<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">string<pos:position pos:line="36" pos:column="42"/></name></name><argument_list pos:line="36" pos:column="42">(<argument><expr><name pos:line="36" pos:column="43">optarg<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>

        <case pos:line="39" pos:column="9">case <expr><literal type="char" pos:line="39" pos:column="14">'C'<pos:position pos:line="39" pos:column="17"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="40" pos:column="13">tls<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <literal type="boolean" pos:line="40" pos:column="19">true<pos:position pos:line="40" pos:column="23"/></literal></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">certFiles<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">push_back<pos:position pos:line="41" pos:column="32"/></name></name><argument_list pos:line="41" pos:column="32">(<argument><expr><call><name><name pos:line="41" pos:column="33">std<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">::<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">string<pos:position pos:line="41" pos:column="44"/></name></name><argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">optarg<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
            <break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break>

        <case pos:line="44" pos:column="9">case <expr><literal type="char" pos:line="44" pos:column="14">'h'<pos:position pos:line="44" pos:column="17"/></literal></expr>:<pos:position pos:line="44" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="45" pos:column="13">hostname<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">optarg<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break>

        <case pos:line="48" pos:column="9">case <expr><literal type="char" pos:line="48" pos:column="14">'l'<pos:position pos:line="48" pos:column="17"/></literal></expr>:<pos:position pos:line="48" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="49" pos:column="13">localHost<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <name pos:line="49" pos:column="25">optarg<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
            <break pos:line="50" pos:column="13">break;<pos:position pos:line="50" pos:column="19"/></break>

        <case pos:line="52" pos:column="9">case <expr><literal type="char" pos:line="52" pos:column="14">'p'<pos:position pos:line="52" pos:column="17"/></literal></expr>:<pos:position pos:line="52" pos:column="18"/></case>           <comment type="block" pos:line="52" pos:column="29">/* port number */</comment>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">sscanf<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">optarg<pos:position pos:line="53" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="28">"%hd"<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="35">&amp;<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="36">port<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">port<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">&lt;<pos:position pos:line="54" pos:column="26"/></operator> <literal type="number" pos:line="54" pos:column="24">1<pos:position pos:line="54" pos:column="25"/></literal></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="17">port<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">CACHE_HTTP_PORT<pos:position pos:line="55" pos:column="39"/></name></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt></block></then></if>     <comment type="block" pos:line="55" pos:column="45">/* default */</comment>
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>

        <case pos:line="58" pos:column="9">case <expr><literal type="char" pos:line="58" pos:column="14">'P'<pos:position pos:line="58" pos:column="17"/></literal></expr>:<pos:position pos:line="58" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="59" pos:column="13">tls<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <literal type="boolean" pos:line="59" pos:column="19">true<pos:position pos:line="59" pos:column="23"/></literal></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">params<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="22">optarg<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>

        <case pos:line="63" pos:column="9">case <expr><literal type="char" pos:line="63" pos:column="14">'T'<pos:position pos:line="63" pos:column="17"/></literal></expr>:<pos:position pos:line="63" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="64" pos:column="13">ioTimeout<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <call><name pos:line="64" pos:column="25">atoi<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">optarg<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
            <break pos:line="65" pos:column="13">break;<pos:position pos:line="65" pos:column="19"/></break>

        <default pos:line="67" pos:column="9">default:<pos:position pos:line="67" pos:column="17"/></default>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">tls<pos:position pos:line="68" pos:column="20"/></name></expr>)<pos:position pos:line="68" pos:column="21"/></condition><then pos:line="68" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="69" pos:column="17">Transport<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">::<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="28">InitTls<pos:position pos:line="69" pos:column="35"/></name></name><argument_list pos:line="69" pos:column="35">()<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt></block></then></if>

            <comment type="line" pos:line="71" pos:column="13">// rewind and let the caller handle unknown options</comment>
            <expr_stmt><expr><operator pos:line="72" pos:column="13">--<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">optind<pos:position pos:line="72" pos:column="21"/></name></expr>;<pos:position pos:line="72" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="73" pos:column="13">opterr<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="22">saved_opterr<pos:position pos:line="73" pos:column="34"/></name></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>
            <return pos:line="74" pos:column="13">return <expr><literal type="boolean" pos:line="74" pos:column="20">true<pos:position pos:line="74" pos:column="24"/></literal></expr>;<pos:position pos:line="74" pos:column="25"/></return>
        }<pos:position pos:line="75" pos:column="10"/></block></switch>
    }<pos:position pos:line="76" pos:column="6"/></block> while <condition pos:line="76" pos:column="13">(<expr><operator pos:line="76" pos:column="14">(<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="15">c<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator> <call><name pos:line="76" pos:column="19">getopt_long<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">argc<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">argv<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="43">shortOpStr<pos:position pos:line="76" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="55">longOptions<pos:position pos:line="76" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="68">&amp;<pos:position pos:line="76" pos:column="73"/></operator><name pos:line="76" pos:column="69">optIndex<pos:position pos:line="76" pos:column="77"/></name></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call><operator pos:line="76" pos:column="78">)<pos:position pos:line="76" pos:column="79"/></operator> <operator pos:line="76" pos:column="80">!=<pos:position pos:line="76" pos:column="82"/></operator> <operator pos:line="76" pos:column="83">-<pos:position pos:line="76" pos:column="84"/></operator><literal type="number" pos:line="76" pos:column="84">1<pos:position pos:line="76" pos:column="85"/></literal></expr>)<pos:position pos:line="76" pos:column="86"/></condition>;<pos:position pos:line="76" pos:column="87"/></do>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">tls<pos:position pos:line="78" pos:column="12"/></name></expr>)<pos:position pos:line="78" pos:column="13"/></condition><then pos:line="78" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="79" pos:column="9">Transport<pos:position pos:line="79" pos:column="18"/></name><operator pos:line="79" pos:column="18">::<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="20">InitTls<pos:position pos:line="79" pos:column="27"/></name></name><argument_list pos:line="79" pos:column="27">()<pos:position pos:line="79" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="81" pos:column="5">opterr<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <name pos:line="81" pos:column="14">saved_opterr<pos:position pos:line="81" pos:column="26"/></name></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><literal type="boolean" pos:line="82" pos:column="12">false<pos:position pos:line="82" pos:column="17"/></literal></expr>;<pos:position pos:line="82" pos:column="18"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

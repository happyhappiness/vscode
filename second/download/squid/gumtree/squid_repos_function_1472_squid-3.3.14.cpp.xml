<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1472_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">shut_down<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">int<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">sig<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">do_shutdown<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="4" pos:column="19">sig<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">==<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">SIGINT<pos:position pos:line="4" pos:column="32"/></name></expr> ?<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34"> <expr><operator pos:line="4" pos:column="35">-<pos:position pos:line="4" pos:column="36"/></operator><literal type="number" pos:line="4" pos:column="36">1<pos:position pos:line="4" pos:column="37"/></literal></expr> <pos:position pos:line="4" pos:column="38"/></then><else pos:line="4" pos:column="38">: <expr><literal type="number" pos:line="4" pos:column="40">1<pos:position pos:line="4" pos:column="41"/></literal></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">ShutdownSignal<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">sig<pos:position pos:line="5" pos:column="25"/></name></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">SIGTTIN<pos:position pos:line="6" pos:column="15"/></name></cpp:ifdef>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">SIGTTIN<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">sig<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">shutdown_status<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="27">1<pos:position pos:line="9" pos:column="28"/></literal></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt></block></then></if>

<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">pid_t<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">ppid<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><call><name pos:line="13" pos:column="24">getppid<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">()<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><call><name pos:line="15" pos:column="10">IamMasterProcess<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">()<pos:position pos:line="15" pos:column="28"/></argument_list></call> <operator pos:line="15" pos:column="29">&amp;&amp;<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="32">ppid<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">&gt;<pos:position pos:line="15" pos:column="41"/></operator> <literal type="number" pos:line="15" pos:column="39">1<pos:position pos:line="15" pos:column="40"/></literal></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <block pos:line="15" pos:column="42">{
        <comment type="line" pos:line="16" pos:column="9">// notify master that we are shutting down</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">kill<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">ppid<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">SIGUSR1<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call> <operator pos:line="17" pos:column="33">&lt;<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="35">0<pos:position pos:line="17" pos:column="36"/></literal></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">debugs<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">DBG_IMPORTANT<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="38">"Failed to send SIGUSR1 to master process,"<pos:position pos:line="18" pos:column="81"/></literal>
                   <literal type="string" pos:line="19" pos:column="20">" pid "<pos:position pos:line="19" pos:column="27"/></literal> <operator pos:line="19" pos:column="28">&lt;&lt;<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="31">ppid<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">&lt;&lt;<pos:position pos:line="19" pos:column="44"/></operator> <literal type="string" pos:line="19" pos:column="39">": "<pos:position pos:line="19" pos:column="43"/></literal> <operator pos:line="19" pos:column="44">&lt;&lt;<pos:position pos:line="19" pos:column="52"/></operator> <call><name pos:line="19" pos:column="47">xstrerror<pos:position pos:line="19" pos:column="56"/></name><argument_list pos:line="19" pos:column="56">()<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><operator pos:line="22" pos:column="5">!<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">_SQUID_WINDOWS_<pos:position pos:line="22" pos:column="21"/></name></expr></cpp:if>
<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">KILL_PARENT_OPT<pos:position pos:line="23" pos:column="20"/></name></expr></cpp:if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><call><name pos:line="25" pos:column="10">IamMasterProcess<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">()<pos:position pos:line="25" pos:column="28"/></argument_list></call> <operator pos:line="25" pos:column="29">&amp;&amp;<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="32">ppid<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">&gt;<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41"> <block pos:line="25" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">1<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">DBG_IMPORTANT<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"Killing master process, pid "<pos:position pos:line="26" pos:column="64"/></literal> <operator pos:line="26" pos:column="65">&lt;&lt;<pos:position pos:line="26" pos:column="73"/></operator> <name pos:line="26" pos:column="68">ppid<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">kill<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">ppid<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="24">sig<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call> <operator pos:line="28" pos:column="29">&lt;<pos:position pos:line="28" pos:column="33"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">1<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">DBG_IMPORTANT<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="38">"kill "<pos:position pos:line="29" pos:column="45"/></literal> <operator pos:line="29" pos:column="46">&lt;&lt;<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="49">ppid<pos:position pos:line="29" pos:column="53"/></name> <operator pos:line="29" pos:column="54">&lt;&lt;<pos:position pos:line="29" pos:column="62"/></operator> <literal type="string" pos:line="29" pos:column="57">": "<pos:position pos:line="29" pos:column="61"/></literal> <operator pos:line="29" pos:column="62">&lt;&lt;<pos:position pos:line="29" pos:column="70"/></operator> <call><name pos:line="29" pos:column="65">xstrerror<pos:position pos:line="29" pos:column="74"/></name><argument_list pos:line="29" pos:column="74">()<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="78"/></expr_stmt></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="32" pos:column="8">/* KILL_PARENT_OPT */</comment>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">SA_RESETHAND<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">==<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">signal<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">SIGTERM<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="21">SIG_DFL<pos:position pos:line="34" pos:column="28"/></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">signal<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">SIGINT<pos:position pos:line="36" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="20">SIG_DFL<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>

<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

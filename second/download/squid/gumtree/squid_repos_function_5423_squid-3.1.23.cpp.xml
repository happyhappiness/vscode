<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5423_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">esi_startElementSAXFunc<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">ctx<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">xmlChar<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="58">name<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier> <name pos:line="1" pos:column="70">xmlChar<pos:position pos:line="1" pos:column="77"/></name> <modifier pos:line="1" pos:column="78">*<pos:position pos:line="1" pos:column="79"/></modifier><modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type> <name pos:line="1" pos:column="81">atts<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">count<pos:position pos:line="3" pos:column="14"/></name><init pos:line="3" pos:column="14">=<expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">xmlChar<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier><modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">tmp<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">xmlChar<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator><operator pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></operator><operator pos:line="4" pos:column="32">)<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">atts<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><name pos:line="6" pos:column="12">tmp<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&amp;&amp;<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">tmp<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">!=<pos:position pos:line="6" pos:column="26"/></operator> <name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr>)<pos:position pos:line="6" pos:column="32"/></condition> <block pos:line="6" pos:column="33">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">count<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">++<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">tmp<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">++<pos:position pos:line="8" pos:column="14"/></operator></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></while>

    <comment type="line" pos:line="11" pos:column="5">// we increased on every key and value</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">count<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">/=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">2<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">ESILibxml2Parser<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">p<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">ESILibxml2Parser<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">*<pos:position pos:line="14" pos:column="46"/></operator><operator pos:line="14" pos:column="46">)<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">ctx<pos:position pos:line="14" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="51"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">p<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">getClient<pos:position pos:line="16" pos:column="17"/></name></name><argument_list pos:line="16" pos:column="17">()<pos:position pos:line="16" pos:column="19"/></argument_list></call><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><call><name pos:line="16" pos:column="21">start<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><operator pos:line="16" pos:column="27">(<pos:position pos:line="16" pos:column="28"/></operator><specifier pos:line="16" pos:column="28">const<pos:position pos:line="16" pos:column="33"/></specifier> <name pos:line="16" pos:column="34">char<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">*<pos:position pos:line="16" pos:column="40"/></operator><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">name<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="47">(<pos:position pos:line="16" pos:column="48"/></operator><specifier pos:line="16" pos:column="48">const<pos:position pos:line="16" pos:column="53"/></specifier> <name pos:line="16" pos:column="54">char<pos:position pos:line="16" pos:column="58"/></name> <operator pos:line="16" pos:column="59">*<pos:position pos:line="16" pos:column="60"/></operator><operator pos:line="16" pos:column="60">*<pos:position pos:line="16" pos:column="61"/></operator><operator pos:line="16" pos:column="61">)<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="62">atts<pos:position pos:line="16" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="68">count<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

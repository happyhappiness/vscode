<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_161_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier> <specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier></type> <name><name pos:line="1" pos:column="33">argv<pos:position pos:line="1" pos:column="37"/></name><index pos:line="1" pos:column="37">[]<pos:position pos:line="1" pos:column="39"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">MAX_AUTHTOKEN_LEN<pos:position pos:line="3" pos:column="31"/></name></expr>]<pos:position pos:line="3" pos:column="32"/></index></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">c<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">user<pos:position pos:line="5" pos:column="15"/></name><init pos:line="5" pos:column="15">=<expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">length<pos:position pos:line="6" pos:column="15"/></name><init pos:line="6" pos:column="15">=<expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">int<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">err<pos:position pos:line="7" pos:column="19"/></name><init pos:line="7" pos:column="19">=<expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">opt<pos:position pos:line="8" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="14">debug<pos:position pos:line="8" pos:column="19"/></name><init pos:line="8" pos:column="19">=<expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="23">log<pos:position pos:line="8" pos:column="26"/></name><init pos:line="8" pos:column="26">=<expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">OM_uint32<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">ret_flags<pos:position pos:line="9" pos:column="24"/></name><init pos:line="9" pos:column="24">=<expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="28">spnego_flag<pos:position pos:line="9" pos:column="39"/></name><init pos:line="9" pos:column="39">=<expr><literal type="number" pos:line="9" pos:column="40">0<pos:position pos:line="9" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">service_name<pos:position pos:line="10" pos:column="23"/></name><init pos:line="10" pos:column="23">=<expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">char<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator><literal type="string" pos:line="10" pos:column="32">"HTTP"<pos:position pos:line="10" pos:column="38"/></literal></expr></init></decl>,<modifier pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="40">host_name<pos:position pos:line="10" pos:column="49"/></name><init pos:line="10" pos:column="49">=<expr><name pos:line="10" pos:column="50">NULL<pos:position pos:line="10" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">token<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">service_principal<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">= <expr><name pos:line="12" pos:column="31">NULL<pos:position pos:line="12" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">OM_uint32<pos:position pos:line="13" pos:column="14"/></name></type> <name pos:line="13" pos:column="15">major_status<pos:position pos:line="13" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="29">minor_status<pos:position pos:line="13" pos:column="41"/></name></decl>;<pos:position pos:line="13" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">gss_ctx_id_t<pos:position pos:line="14" pos:column="17"/></name></type> 		<name pos:line="14" pos:column="33">gss_context<pos:position pos:line="14" pos:column="44"/></name> <init pos:line="14" pos:column="45">= <expr><name pos:line="14" pos:column="47">GSS_C_NO_CONTEXT<pos:position pos:line="14" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">gss_name_t<pos:position pos:line="15" pos:column="15"/></name></type> 		<name pos:line="15" pos:column="25">client_name<pos:position pos:line="15" pos:column="36"/></name> <init pos:line="15" pos:column="37">= <expr><name pos:line="15" pos:column="39">GSS_C_NO_NAME<pos:position pos:line="15" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">gss_name_t<pos:position pos:line="16" pos:column="15"/></name></type> 		<name pos:line="16" pos:column="25">server_name<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><name pos:line="16" pos:column="39">GSS_C_NO_NAME<pos:position pos:line="16" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">gss_cred_id_t<pos:position pos:line="17" pos:column="18"/></name></type> 	<name pos:line="17" pos:column="25">server_creds<pos:position pos:line="17" pos:column="37"/></name> <init pos:line="17" pos:column="38">= <expr><name pos:line="17" pos:column="40">GSS_C_NO_CREDENTIAL<pos:position pos:line="17" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">gss_buffer_desc<pos:position pos:line="18" pos:column="20"/></name></type> 	<name pos:line="18" pos:column="25">service<pos:position pos:line="18" pos:column="32"/></name> <init pos:line="18" pos:column="33">= <expr><name pos:line="18" pos:column="35">GSS_C_EMPTY_BUFFER<pos:position pos:line="18" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">gss_buffer_desc<pos:position pos:line="19" pos:column="20"/></name></type> 	<name pos:line="19" pos:column="25">input_token<pos:position pos:line="19" pos:column="36"/></name> <init pos:line="19" pos:column="37">= <expr><name pos:line="19" pos:column="39">GSS_C_EMPTY_BUFFER<pos:position pos:line="19" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">gss_buffer_desc<pos:position pos:line="20" pos:column="20"/></name></type> 	<name pos:line="20" pos:column="25">output_token<pos:position pos:line="20" pos:column="37"/></name> <init pos:line="20" pos:column="38">= <expr><name pos:line="20" pos:column="40">GSS_C_EMPTY_BUFFER<pos:position pos:line="20" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">unsigned<pos:position pos:line="21" pos:column="19"/></name> <name pos:line="21" pos:column="20">char<pos:position pos:line="21" pos:column="24"/></name>	<modifier pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></modifier></type><name pos:line="21" pos:column="26">kerberosToken<pos:position pos:line="21" pos:column="39"/></name>       <init pos:line="21" pos:column="46">= <expr><name pos:line="21" pos:column="48">NULL<pos:position pos:line="21" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">unsigned<pos:position pos:line="22" pos:column="19"/></name> <name pos:line="22" pos:column="20">char<pos:position pos:line="22" pos:column="24"/></name>	<modifier pos:line="22" pos:column="25">*<pos:position pos:line="22" pos:column="26"/></modifier></type><name pos:line="22" pos:column="26">spnegoToken<pos:position pos:line="22" pos:column="37"/></name>         <init pos:line="22" pos:column="46">= <expr><name pos:line="22" pos:column="48">NULL<pos:position pos:line="22" pos:column="52"/></name></expr></init></decl> ;<pos:position pos:line="22" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">size_t<pos:position pos:line="23" pos:column="11"/></name></type>		<name pos:line="23" pos:column="25">spnegoTokenLength<pos:position pos:line="23" pos:column="42"/></name>   <init pos:line="23" pos:column="45">= <expr><literal type="number" pos:line="23" pos:column="47">0<pos:position pos:line="23" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="49"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">setbuf<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">stdout<pos:position pos:line="25" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">setbuf<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">stdin<pos:position pos:line="26" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="26" pos:column="18">NULL<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>

    <while pos:line="28" pos:column="5">while <condition pos:line="28" pos:column="11">(<expr><operator pos:line="28" pos:column="12">-<pos:position pos:line="28" pos:column="13"/></operator><literal type="number" pos:line="28" pos:column="13">1<pos:position pos:line="28" pos:column="14"/></literal> <operator pos:line="28" pos:column="15">!=<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">opt<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">getopt<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">argc<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">argv<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="44">"dis:h"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call><operator pos:line="28" pos:column="52">)<pos:position pos:line="28" pos:column="53"/></operator></expr>)<pos:position pos:line="28" pos:column="54"/></condition> <block pos:line="28" pos:column="55">{
        <switch pos:line="29" pos:column="9">switch <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">opt<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition> <block pos:line="29" pos:column="22">{
        <case pos:line="30" pos:column="9">case <expr><literal type="char" pos:line="30" pos:column="14">'d'<pos:position pos:line="30" pos:column="17"/></literal></expr>:<pos:position pos:line="30" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="31" pos:column="13">debug<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">1<pos:position pos:line="31" pos:column="22"/></literal></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>
        <case pos:line="33" pos:column="9">case <expr><literal type="char" pos:line="33" pos:column="14">'i'<pos:position pos:line="33" pos:column="17"/></literal></expr>:<pos:position pos:line="33" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="34" pos:column="13">log<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="19">1<pos:position pos:line="34" pos:column="20"/></literal></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
            <break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break>
        <case pos:line="36" pos:column="9">case <expr><literal type="char" pos:line="36" pos:column="14">'s'<pos:position pos:line="36" pos:column="17"/></literal></expr>:<pos:position pos:line="36" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="37" pos:column="13">service_principal<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <call><name pos:line="37" pos:column="33">xstrdup<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">optarg<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>
        <case pos:line="39" pos:column="9">case <expr><literal type="char" pos:line="39" pos:column="14">'h'<pos:position pos:line="39" pos:column="17"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">fprintf<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">stderr<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="29">"Usage: \n"<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">fprintf<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">stderr<pos:position pos:line="41" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="29">"squid_kerb_auth [-d] [-i] [-s SPN] [-h]\n"<pos:position pos:line="41" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">fprintf<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">stderr<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="29">"-d full debug\n"<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">fprintf<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">stderr<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="29">"-i informational messages\n"<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">fprintf<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">stderr<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="29">"-s service principal name\n"<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">fprintf<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">stderr<pos:position pos:line="45" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="29">"-h help\n"<pos:position pos:line="45" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">fprintf<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">stderr<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="29">"The SPN can be set to GSS_C_NO_NAME to allow any entry from keytab\n"<pos:position pos:line="46" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="101"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">fprintf<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">stderr<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="29">"default SPN is HTTP/fqdn@DEFAULT_REALM\n"<pos:position pos:line="47" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">exit<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>
        <default pos:line="49" pos:column="9">default:<pos:position pos:line="49" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">fprintf<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">stderr<pos:position pos:line="50" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="29">"%s| %s: WARNING: unknown option: -%c.\n"<pos:position pos:line="50" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="72">LogTime<pos:position pos:line="50" pos:column="79"/></name><argument_list pos:line="50" pos:column="79">()<pos:position pos:line="50" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="50" pos:column="83">PROGRAM<pos:position pos:line="50" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="92">opt<pos:position pos:line="50" pos:column="95"/></name></expr></argument>)<pos:position pos:line="50" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="97"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></switch>
    }<pos:position pos:line="52" pos:column="6"/></block></while>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">debug<pos:position pos:line="54" pos:column="14"/></name></expr>)<pos:position pos:line="54" pos:column="15"/></condition><then pos:line="54" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="9">fprintf<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">stderr<pos:position pos:line="55" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="25">"%s| %s: INFO: Starting version %s\n"<pos:position pos:line="55" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="64">LogTime<pos:position pos:line="55" pos:column="71"/></name><argument_list pos:line="55" pos:column="71">()<pos:position pos:line="55" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="55" pos:column="75">PROGRAM<pos:position pos:line="55" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="84">VERSION<pos:position pos:line="55" pos:column="91"/></name></expr></argument>)<pos:position pos:line="55" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="93"/></expr_stmt></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">service_principal<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">&amp;&amp;<pos:position pos:line="56" pos:column="37"/></operator> <call><name pos:line="56" pos:column="30">strcasecmp<pos:position pos:line="56" pos:column="40"/></name><argument_list pos:line="56" pos:column="40">(<argument><expr><name pos:line="56" pos:column="41">service_principal<pos:position pos:line="56" pos:column="58"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="56" pos:column="59">"GSS_C_NO_NAME"<pos:position pos:line="56" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr> )<pos:position pos:line="56" pos:column="77"/></condition><then pos:line="56" pos:column="77"> <block pos:line="56" pos:column="78">{
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">service<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">.<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">value<pos:position pos:line="57" pos:column="22"/></name></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <name pos:line="57" pos:column="25">service_principal<pos:position pos:line="57" pos:column="42"/></name></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">service<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">.<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">length<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <call><name pos:line="58" pos:column="26">strlen<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><operator pos:line="58" pos:column="33">(<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="34">char<pos:position pos:line="58" pos:column="38"/></name> <operator pos:line="58" pos:column="39">*<pos:position pos:line="58" pos:column="40"/></operator><operator pos:line="58" pos:column="40">)<pos:position pos:line="58" pos:column="41"/></operator><name><name pos:line="58" pos:column="41">service<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">.<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="49">value<pos:position pos:line="58" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then> <else pos:line="59" pos:column="7">else <block pos:line="59" pos:column="12">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">host_name<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">=<pos:position pos:line="60" pos:column="19"/></operator><call><name pos:line="60" pos:column="19">gethost_name<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">()<pos:position pos:line="60" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">( <expr><operator pos:line="61" pos:column="14">!<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">host_name<pos:position pos:line="61" pos:column="24"/></name></expr> )<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26"> <block pos:line="61" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">fprintf<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">stderr<pos:position pos:line="62" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="29">"%s| %s: FATAL: Local hostname could not be determined. Please specify the service principal\n"<pos:position pos:line="62" pos:column="124"/></literal></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="126">LogTime<pos:position pos:line="62" pos:column="133"/></name><argument_list pos:line="62" pos:column="133">()<pos:position pos:line="62" pos:column="135"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="137">PROGRAM<pos:position pos:line="62" pos:column="144"/></name></expr></argument>)<pos:position pos:line="62" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="146"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">fprintf<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">stdout<pos:position pos:line="63" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="29">"BH hostname error\n"<pos:position pos:line="63" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">exit<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><operator pos:line="64" pos:column="18">-<pos:position pos:line="64" pos:column="19"/></operator><literal type="number" pos:line="64" pos:column="19">1<pos:position pos:line="64" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">service<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">.<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="17">value<pos:position pos:line="66" pos:column="22"/></name></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <call><name pos:line="66" pos:column="25">xmalloc<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><call><name pos:line="66" pos:column="33">strlen<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">service_name<pos:position pos:line="66" pos:column="52"/></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call><operator pos:line="66" pos:column="53">+<pos:position pos:line="66" pos:column="54"/></operator><call><name pos:line="66" pos:column="54">strlen<pos:position pos:line="66" pos:column="60"/></name><argument_list pos:line="66" pos:column="60">(<argument><expr><name pos:line="66" pos:column="61">host_name<pos:position pos:line="66" pos:column="70"/></name></expr></argument>)<pos:position pos:line="66" pos:column="71"/></argument_list></call><operator pos:line="66" pos:column="71">+<pos:position pos:line="66" pos:column="72"/></operator><literal type="number" pos:line="66" pos:column="72">2<pos:position pos:line="66" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">snprintf<pos:position pos:line="67" pos:column="17"/></name><argument_list pos:line="67" pos:column="17">(<argument><expr><name><name pos:line="67" pos:column="18">service<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">.<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">value<pos:position pos:line="67" pos:column="31"/></name></name></expr></argument>,<argument><expr><call><name pos:line="67" pos:column="32">strlen<pos:position pos:line="67" pos:column="38"/></name><argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">service_name<pos:position pos:line="67" pos:column="51"/></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call><operator pos:line="67" pos:column="52">+<pos:position pos:line="67" pos:column="53"/></operator><call><name pos:line="67" pos:column="53">strlen<pos:position pos:line="67" pos:column="59"/></name><argument_list pos:line="67" pos:column="59">(<argument><expr><name pos:line="67" pos:column="60">host_name<pos:position pos:line="67" pos:column="69"/></name></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call><operator pos:line="67" pos:column="70">+<pos:position pos:line="67" pos:column="71"/></operator><literal type="number" pos:line="67" pos:column="71">2<pos:position pos:line="67" pos:column="72"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="67" pos:column="73">"%s@%s"<pos:position pos:line="67" pos:column="80"/></literal></expr></argument>,<argument><expr><name pos:line="67" pos:column="81">service_name<pos:position pos:line="67" pos:column="93"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="94">host_name<pos:position pos:line="67" pos:column="103"/></name></expr></argument>)<pos:position pos:line="67" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="105"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">service<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">.<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">length<pos:position pos:line="68" pos:column="23"/></name></name> <operator pos:line="68" pos:column="24">=<pos:position pos:line="68" pos:column="25"/></operator> <call><name pos:line="68" pos:column="26">strlen<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><operator pos:line="68" pos:column="33">(<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="34">char<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">*<pos:position pos:line="68" pos:column="40"/></operator><operator pos:line="68" pos:column="40">)<pos:position pos:line="68" pos:column="41"/></operator><name><name pos:line="68" pos:column="41">service<pos:position pos:line="68" pos:column="48"/></name><operator pos:line="68" pos:column="48">.<pos:position pos:line="68" pos:column="49"/></operator><name pos:line="68" pos:column="49">value<pos:position pos:line="68" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>

    <while pos:line="71" pos:column="5">while <condition pos:line="71" pos:column="11">(<expr><literal type="number" pos:line="71" pos:column="12">1<pos:position pos:line="71" pos:column="13"/></literal></expr>)<pos:position pos:line="71" pos:column="14"/></condition> <block pos:line="71" pos:column="15">{
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">fgets<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">buf<pos:position pos:line="72" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="24">sizeof<argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">buf<pos:position pos:line="72" pos:column="34"/></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></sizeof><operator pos:line="72" pos:column="35">-<pos:position pos:line="72" pos:column="36"/></operator><literal type="number" pos:line="72" pos:column="36">1<pos:position pos:line="72" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="39">stdin<pos:position pos:line="72" pos:column="44"/></name></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call> <operator pos:line="72" pos:column="46">==<pos:position pos:line="72" pos:column="48"/></operator> <name pos:line="72" pos:column="49">NULL<pos:position pos:line="72" pos:column="53"/></name></expr>)<pos:position pos:line="72" pos:column="54"/></condition><then pos:line="72" pos:column="54"> <block pos:line="72" pos:column="55">{
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><call><name pos:line="73" pos:column="17">ferror<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><name pos:line="73" pos:column="24">stdin<pos:position pos:line="73" pos:column="29"/></name></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="31"/></condition><then pos:line="73" pos:column="31"> <block pos:line="73" pos:column="32">{
                <if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">debug<pos:position pos:line="74" pos:column="26"/></name></expr>)<pos:position pos:line="74" pos:column="27"/></condition><then pos:line="74" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="21">fprintf<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">stderr<pos:position pos:line="75" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="37">"%s| %s: FATAL: fgets() failed! dying..... errno=%d (%s)\n"<pos:position pos:line="75" pos:column="96"/></literal></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="98">LogTime<pos:position pos:line="75" pos:column="105"/></name><argument_list pos:line="75" pos:column="105">()<pos:position pos:line="75" pos:column="107"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="75" pos:column="109">PROGRAM<pos:position pos:line="75" pos:column="116"/></name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="118">ferror<pos:position pos:line="75" pos:column="124"/></name><argument_list pos:line="75" pos:column="124">(<argument><expr><name pos:line="75" pos:column="125">stdin<pos:position pos:line="75" pos:column="130"/></name></expr></argument>)<pos:position pos:line="75" pos:column="131"/></argument_list></call></expr></argument>,
                            <argument><expr><call><name pos:line="76" pos:column="29">strerror<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><call><name pos:line="76" pos:column="38">ferror<pos:position pos:line="76" pos:column="44"/></name><argument_list pos:line="76" pos:column="44">(<argument><expr><name pos:line="76" pos:column="45">stdin<pos:position pos:line="76" pos:column="50"/></name></expr></argument>)<pos:position pos:line="76" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="54"/></expr_stmt></block></then></if>

                <expr_stmt><expr><call><name pos:line="78" pos:column="17">fprintf<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">stdout<pos:position pos:line="78" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="33">"BH input error\n"<pos:position pos:line="78" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">exit<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><literal type="number" pos:line="79" pos:column="22">1<pos:position pos:line="79" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>    <comment type="block" pos:line="79" pos:column="29">/* BIIG buffer */</comment>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">fprintf<pos:position pos:line="81" pos:column="20"/></name><argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">stdout<pos:position pos:line="81" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="29">"BH input error\n"<pos:position pos:line="81" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">exit<pos:position pos:line="82" pos:column="17"/></name><argument_list pos:line="82" pos:column="17">(<argument><expr><literal type="number" pos:line="82" pos:column="18">0<pos:position pos:line="82" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="85" pos:column="9">c<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">=<pos:position pos:line="85" pos:column="11"/></operator><call><name pos:line="85" pos:column="11">memchr<pos:position pos:line="85" pos:column="17"/></name><argument_list pos:line="85" pos:column="17">(<argument><expr><name pos:line="85" pos:column="18">buf<pos:position pos:line="85" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="85" pos:column="22">'\n'<pos:position pos:line="85" pos:column="26"/></literal></expr></argument>,<argument><expr><sizeof pos:line="85" pos:column="27">sizeof<argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">buf<pos:position pos:line="85" pos:column="37"/></name></expr></argument>)<pos:position pos:line="85" pos:column="38"/></argument_list></sizeof><operator pos:line="85" pos:column="38">-<pos:position pos:line="85" pos:column="39"/></operator><literal type="number" pos:line="85" pos:column="39">1<pos:position pos:line="85" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="42"/></expr_stmt>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">c<pos:position pos:line="86" pos:column="14"/></name></expr>)<pos:position pos:line="86" pos:column="15"/></condition><then pos:line="86" pos:column="15"> <block pos:line="86" pos:column="16">{
            <expr_stmt><expr><operator pos:line="87" pos:column="13">*<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">c<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <literal type="char" pos:line="87" pos:column="18">'\0'<pos:position pos:line="87" pos:column="22"/></literal></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="88" pos:column="13">length<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="22">c<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">-<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="24">buf<pos:position pos:line="88" pos:column="27"/></name></expr>;<pos:position pos:line="88" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></then> <else pos:line="89" pos:column="11">else <block pos:line="89" pos:column="16">{
            <expr_stmt><expr><name pos:line="90" pos:column="13">err<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">=<pos:position pos:line="90" pos:column="18"/></operator> <literal type="number" pos:line="90" pos:column="19">1<pos:position pos:line="90" pos:column="20"/></literal></expr>;<pos:position pos:line="90" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></else></if>
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">err<pos:position pos:line="92" pos:column="16"/></name></expr>)<pos:position pos:line="92" pos:column="17"/></condition><then pos:line="92" pos:column="17"> <block pos:line="92" pos:column="18">{
            <if pos:line="93" pos:column="13">if <condition pos:line="93" pos:column="16">(<expr><name pos:line="93" pos:column="17">debug<pos:position pos:line="93" pos:column="22"/></name></expr>)<pos:position pos:line="93" pos:column="23"/></condition><then pos:line="93" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="17">fprintf<pos:position pos:line="94" pos:column="24"/></name><argument_list pos:line="94" pos:column="24">(<argument><expr><name pos:line="94" pos:column="25">stderr<pos:position pos:line="94" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="33">"%s| %s: ERROR: Oversized message\n"<pos:position pos:line="94" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="71">LogTime<pos:position pos:line="94" pos:column="78"/></name><argument_list pos:line="94" pos:column="78">()<pos:position pos:line="94" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="94" pos:column="82">PROGRAM<pos:position pos:line="94" pos:column="89"/></name></expr></argument>)<pos:position pos:line="94" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="91"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">fprintf<pos:position pos:line="95" pos:column="20"/></name><argument_list pos:line="95" pos:column="20">(<argument><expr><name pos:line="95" pos:column="21">stdout<pos:position pos:line="95" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="29">"BH Oversized message\n"<pos:position pos:line="95" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="96" pos:column="13">err<pos:position pos:line="96" pos:column="16"/></name> <operator pos:line="96" pos:column="17">=<pos:position pos:line="96" pos:column="18"/></operator> <literal type="number" pos:line="96" pos:column="19">0<pos:position pos:line="96" pos:column="20"/></literal></expr>;<pos:position pos:line="96" pos:column="21"/></expr_stmt>
            <continue pos:line="97" pos:column="13">continue;<pos:position pos:line="97" pos:column="22"/></continue>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">debug<pos:position pos:line="100" pos:column="18"/></name></expr>)<pos:position pos:line="100" pos:column="19"/></condition><then pos:line="100" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="13">fprintf<pos:position pos:line="101" pos:column="20"/></name><argument_list pos:line="101" pos:column="20">(<argument><expr><name pos:line="101" pos:column="21">stderr<pos:position pos:line="101" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="29">"%s| %s: DEBUG: Got '%s' from squid (length: %d).\n"<pos:position pos:line="101" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="83">LogTime<pos:position pos:line="101" pos:column="90"/></name><argument_list pos:line="101" pos:column="90">()<pos:position pos:line="101" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="101" pos:column="94">PROGRAM<pos:position pos:line="101" pos:column="101"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="103">buf<pos:position pos:line="101" pos:column="106"/></name></expr></argument>,<argument><expr><name pos:line="101" pos:column="107">length<pos:position pos:line="101" pos:column="113"/></name></expr></argument>)<pos:position pos:line="101" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="115"/></expr_stmt></block></then></if>

        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name><name pos:line="103" pos:column="13">buf<pos:position pos:line="103" pos:column="16"/></name><index pos:line="103" pos:column="16">[<expr><literal type="number" pos:line="103" pos:column="17">0<pos:position pos:line="103" pos:column="18"/></literal></expr>]<pos:position pos:line="103" pos:column="19"/></index></name> <operator pos:line="103" pos:column="20">==<pos:position pos:line="103" pos:column="22"/></operator> <literal type="char" pos:line="103" pos:column="23">'\0'<pos:position pos:line="103" pos:column="27"/></literal></expr>)<pos:position pos:line="103" pos:column="28"/></condition><then pos:line="103" pos:column="28"> <block pos:line="103" pos:column="29">{
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><name pos:line="104" pos:column="17">debug<pos:position pos:line="104" pos:column="22"/></name></expr>)<pos:position pos:line="104" pos:column="23"/></condition><then pos:line="104" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="17">fprintf<pos:position pos:line="105" pos:column="24"/></name><argument_list pos:line="105" pos:column="24">(<argument><expr><name pos:line="105" pos:column="25">stderr<pos:position pos:line="105" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="33">"%s| %s: ERROR: Invalid request\n"<pos:position pos:line="105" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="105" pos:column="69">LogTime<pos:position pos:line="105" pos:column="76"/></name><argument_list pos:line="105" pos:column="76">()<pos:position pos:line="105" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="105" pos:column="80">PROGRAM<pos:position pos:line="105" pos:column="87"/></name></expr></argument>)<pos:position pos:line="105" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="89"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">fprintf<pos:position pos:line="106" pos:column="20"/></name><argument_list pos:line="106" pos:column="20">(<argument><expr><name pos:line="106" pos:column="21">stdout<pos:position pos:line="106" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="29">"BH Invalid request\n"<pos:position pos:line="106" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="53"/></expr_stmt>
            <continue pos:line="107" pos:column="13">continue;<pos:position pos:line="107" pos:column="22"/></continue>
        }<pos:position pos:line="108" pos:column="10"/></block></then></if>

        <if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><call><name pos:line="110" pos:column="13">strlen<pos:position pos:line="110" pos:column="19"/></name><argument_list pos:line="110" pos:column="19">(<argument><expr><name pos:line="110" pos:column="20">buf<pos:position pos:line="110" pos:column="23"/></name></expr></argument>)<pos:position pos:line="110" pos:column="24"/></argument_list></call> <operator pos:line="110" pos:column="25">&lt;<pos:position pos:line="110" pos:column="29"/></operator> <literal type="number" pos:line="110" pos:column="27">2<pos:position pos:line="110" pos:column="28"/></literal></expr>)<pos:position pos:line="110" pos:column="29"/></condition><then pos:line="110" pos:column="29"> <block pos:line="110" pos:column="30">{
            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">debug<pos:position pos:line="111" pos:column="22"/></name></expr>)<pos:position pos:line="111" pos:column="23"/></condition><then pos:line="111" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="17">fprintf<pos:position pos:line="112" pos:column="24"/></name><argument_list pos:line="112" pos:column="24">(<argument><expr><name pos:line="112" pos:column="25">stderr<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="33">"%s| %s: ERROR: Invalid request [%s]\n"<pos:position pos:line="112" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="112" pos:column="74">LogTime<pos:position pos:line="112" pos:column="81"/></name><argument_list pos:line="112" pos:column="81">()<pos:position pos:line="112" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="112" pos:column="85">PROGRAM<pos:position pos:line="112" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="94">buf<pos:position pos:line="112" pos:column="97"/></name></expr></argument>)<pos:position pos:line="112" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="99"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">fprintf<pos:position pos:line="113" pos:column="20"/></name><argument_list pos:line="113" pos:column="20">(<argument><expr><name pos:line="113" pos:column="21">stdout<pos:position pos:line="113" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="29">"BH Invalid request\n"<pos:position pos:line="113" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="53"/></expr_stmt>
            <continue pos:line="114" pos:column="13">continue;<pos:position pos:line="114" pos:column="22"/></continue>
        }<pos:position pos:line="115" pos:column="10"/></block></then></if>

        <if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">( <expr><operator pos:line="117" pos:column="14">!<pos:position pos:line="117" pos:column="15"/></operator><call><name pos:line="117" pos:column="15">strncmp<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">(<argument><expr><name pos:line="117" pos:column="23">buf<pos:position pos:line="117" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="28">"QQ"<pos:position pos:line="117" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="34">2<pos:position pos:line="117" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="36"/></argument_list></call></expr> )<pos:position pos:line="117" pos:column="38"/></condition><then pos:line="117" pos:column="38"> <block pos:line="117" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="118" pos:column="13">gss_release_buffer<pos:position pos:line="118" pos:column="31"/></name><argument_list pos:line="118" pos:column="31">(<argument><expr><operator pos:line="118" pos:column="32">&amp;<pos:position pos:line="118" pos:column="37"/></operator><name pos:line="118" pos:column="33">minor_status<pos:position pos:line="118" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="47">&amp;<pos:position pos:line="118" pos:column="52"/></operator><name pos:line="118" pos:column="48">input_token<pos:position pos:line="118" pos:column="59"/></name></expr></argument>)<pos:position pos:line="118" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">gss_release_buffer<pos:position pos:line="119" pos:column="31"/></name><argument_list pos:line="119" pos:column="31">(<argument><expr><operator pos:line="119" pos:column="32">&amp;<pos:position pos:line="119" pos:column="37"/></operator><name pos:line="119" pos:column="33">minor_status<pos:position pos:line="119" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="47">&amp;<pos:position pos:line="119" pos:column="52"/></operator><name pos:line="119" pos:column="48">output_token<pos:position pos:line="119" pos:column="60"/></name></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">gss_release_buffer<pos:position pos:line="120" pos:column="31"/></name><argument_list pos:line="120" pos:column="31">(<argument><expr><operator pos:line="120" pos:column="32">&amp;<pos:position pos:line="120" pos:column="37"/></operator><name pos:line="120" pos:column="33">minor_status<pos:position pos:line="120" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="47">&amp;<pos:position pos:line="120" pos:column="52"/></operator><name pos:line="120" pos:column="48">service<pos:position pos:line="120" pos:column="55"/></name></expr></argument>)<pos:position pos:line="120" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="121" pos:column="13">gss_release_cred<pos:position pos:line="121" pos:column="29"/></name><argument_list pos:line="121" pos:column="29">(<argument><expr><operator pos:line="121" pos:column="30">&amp;<pos:position pos:line="121" pos:column="35"/></operator><name pos:line="121" pos:column="31">minor_status<pos:position pos:line="121" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="45">&amp;<pos:position pos:line="121" pos:column="50"/></operator><name pos:line="121" pos:column="46">server_creds<pos:position pos:line="121" pos:column="58"/></name></expr></argument>)<pos:position pos:line="121" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="60"/></expr_stmt>
            <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><name pos:line="122" pos:column="17">server_name<pos:position pos:line="122" pos:column="28"/></name></expr>)<pos:position pos:line="122" pos:column="29"/></condition><then pos:line="122" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="17">gss_release_name<pos:position pos:line="123" pos:column="33"/></name><argument_list pos:line="123" pos:column="33">(<argument><expr><operator pos:line="123" pos:column="34">&amp;<pos:position pos:line="123" pos:column="39"/></operator><name pos:line="123" pos:column="35">minor_status<pos:position pos:line="123" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="49">&amp;<pos:position pos:line="123" pos:column="54"/></operator><name pos:line="123" pos:column="50">server_name<pos:position pos:line="123" pos:column="61"/></name></expr></argument>)<pos:position pos:line="123" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="63"/></expr_stmt></block></then></if>
            <if pos:line="124" pos:column="13">if <condition pos:line="124" pos:column="16">(<expr><name pos:line="124" pos:column="17">client_name<pos:position pos:line="124" pos:column="28"/></name></expr>)<pos:position pos:line="124" pos:column="29"/></condition><then pos:line="124" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="17">gss_release_name<pos:position pos:line="125" pos:column="33"/></name><argument_list pos:line="125" pos:column="33">(<argument><expr><operator pos:line="125" pos:column="34">&amp;<pos:position pos:line="125" pos:column="39"/></operator><name pos:line="125" pos:column="35">minor_status<pos:position pos:line="125" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="49">&amp;<pos:position pos:line="125" pos:column="54"/></operator><name pos:line="125" pos:column="50">client_name<pos:position pos:line="125" pos:column="61"/></name></expr></argument>)<pos:position pos:line="125" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="63"/></expr_stmt></block></then></if>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><name pos:line="126" pos:column="17">gss_context<pos:position pos:line="126" pos:column="28"/></name> <operator pos:line="126" pos:column="29">!=<pos:position pos:line="126" pos:column="31"/></operator> <name pos:line="126" pos:column="32">GSS_C_NO_CONTEXT<pos:position pos:line="126" pos:column="48"/></name></expr> )<pos:position pos:line="126" pos:column="50"/></condition><then pos:line="126" pos:column="50">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="17">gss_delete_sec_context<pos:position pos:line="127" pos:column="39"/></name><argument_list pos:line="127" pos:column="39">(<argument><expr><operator pos:line="127" pos:column="40">&amp;<pos:position pos:line="127" pos:column="45"/></operator><name pos:line="127" pos:column="41">minor_status<pos:position pos:line="127" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="127" pos:column="55">&amp;<pos:position pos:line="127" pos:column="60"/></operator><name pos:line="127" pos:column="56">gss_context<pos:position pos:line="127" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="69">NULL<pos:position pos:line="127" pos:column="73"/></name></expr></argument>)<pos:position pos:line="127" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="75"/></expr_stmt></block></then></if>
            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><name pos:line="128" pos:column="17">kerberosToken<pos:position pos:line="128" pos:column="30"/></name></expr>)<pos:position pos:line="128" pos:column="31"/></condition><then pos:line="128" pos:column="31"> <block pos:line="128" pos:column="32">{
                <comment type="block" pos:line="129" pos:column="17">/* Allocated by parseNegTokenInit, but no matching free function exists.. */</comment>
                <if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><operator pos:line="130" pos:column="21">!<pos:position pos:line="130" pos:column="22"/></operator><name pos:line="130" pos:column="22">spnego_flag<pos:position pos:line="130" pos:column="33"/></name></expr>)<pos:position pos:line="130" pos:column="34"/></condition><then pos:line="130" pos:column="34">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="21">xfree<pos:position pos:line="131" pos:column="26"/></name><argument_list pos:line="131" pos:column="26">(<argument><expr><operator pos:line="131" pos:column="27">(<pos:position pos:line="131" pos:column="28"/></operator><name pos:line="131" pos:column="28">char<pos:position pos:line="131" pos:column="32"/></name> <operator pos:line="131" pos:column="33">*<pos:position pos:line="131" pos:column="34"/></operator><operator pos:line="131" pos:column="34">)<pos:position pos:line="131" pos:column="35"/></operator><name pos:line="131" pos:column="35">kerberosToken<pos:position pos:line="131" pos:column="48"/></name></expr></argument>)<pos:position pos:line="131" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="50"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="132" pos:column="17">kerberosToken<pos:position pos:line="132" pos:column="30"/></name><operator pos:line="132" pos:column="30">=<pos:position pos:line="132" pos:column="31"/></operator><name pos:line="132" pos:column="31">NULL<pos:position pos:line="132" pos:column="35"/></name></expr>;<pos:position pos:line="132" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="133" pos:column="14"/></block></then></if>
            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><name pos:line="134" pos:column="17">spnego_flag<pos:position pos:line="134" pos:column="28"/></name></expr>)<pos:position pos:line="134" pos:column="29"/></condition><then pos:line="134" pos:column="29"> <block pos:line="134" pos:column="30">{
                <comment type="block" pos:line="135" pos:column="17">/* Allocated by makeNegTokenTarg, but no matching free function exists.. */</comment>
                <if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><name pos:line="136" pos:column="21">spnegoToken<pos:position pos:line="136" pos:column="32"/></name></expr>)<pos:position pos:line="136" pos:column="33"/></condition><then pos:line="136" pos:column="33">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="21">xfree<pos:position pos:line="137" pos:column="26"/></name><argument_list pos:line="137" pos:column="26">(<argument><expr><operator pos:line="137" pos:column="27">(<pos:position pos:line="137" pos:column="28"/></operator><name pos:line="137" pos:column="28">char<pos:position pos:line="137" pos:column="32"/></name> <operator pos:line="137" pos:column="33">*<pos:position pos:line="137" pos:column="34"/></operator><operator pos:line="137" pos:column="34">)<pos:position pos:line="137" pos:column="35"/></operator><name pos:line="137" pos:column="35">spnegoToken<pos:position pos:line="137" pos:column="46"/></name></expr></argument>)<pos:position pos:line="137" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="48"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="138" pos:column="17">spnegoToken<pos:position pos:line="138" pos:column="28"/></name><operator pos:line="138" pos:column="28">=<pos:position pos:line="138" pos:column="29"/></operator><name pos:line="138" pos:column="29">NULL<pos:position pos:line="138" pos:column="33"/></name></expr>;<pos:position pos:line="138" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="139" pos:column="14"/></block></then></if>
            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><name pos:line="140" pos:column="17">token<pos:position pos:line="140" pos:column="22"/></name></expr>)<pos:position pos:line="140" pos:column="23"/></condition><then pos:line="140" pos:column="23"> <block pos:line="140" pos:column="24">{
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">xfree<pos:position pos:line="141" pos:column="22"/></name><argument_list pos:line="141" pos:column="22">(<argument><expr><name pos:line="141" pos:column="23">token<pos:position pos:line="141" pos:column="28"/></name></expr></argument>)<pos:position pos:line="141" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="142" pos:column="17">token<pos:position pos:line="142" pos:column="22"/></name><operator pos:line="142" pos:column="22">=<pos:position pos:line="142" pos:column="23"/></operator><name pos:line="142" pos:column="23">NULL<pos:position pos:line="142" pos:column="27"/></name></expr>;<pos:position pos:line="142" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="143" pos:column="14"/></block></then></if>
            <if pos:line="144" pos:column="13">if <condition pos:line="144" pos:column="16">(<expr><name pos:line="144" pos:column="17">host_name<pos:position pos:line="144" pos:column="26"/></name></expr>)<pos:position pos:line="144" pos:column="27"/></condition><then pos:line="144" pos:column="27"> <block pos:line="144" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="145" pos:column="17">xfree<pos:position pos:line="145" pos:column="22"/></name><argument_list pos:line="145" pos:column="22">(<argument><expr><name pos:line="145" pos:column="23">host_name<pos:position pos:line="145" pos:column="32"/></name></expr></argument>)<pos:position pos:line="145" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="146" pos:column="17">host_name<pos:position pos:line="146" pos:column="26"/></name><operator pos:line="146" pos:column="26">=<pos:position pos:line="146" pos:column="27"/></operator><name pos:line="146" pos:column="27">NULL<pos:position pos:line="146" pos:column="31"/></name></expr>;<pos:position pos:line="146" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="147" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">fprintf<pos:position pos:line="148" pos:column="20"/></name><argument_list pos:line="148" pos:column="20">(<argument><expr><name pos:line="148" pos:column="21">stdout<pos:position pos:line="148" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="29">"BH quit command\n"<pos:position pos:line="148" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">exit<pos:position pos:line="149" pos:column="17"/></name><argument_list pos:line="149" pos:column="17">(<argument><expr><literal type="number" pos:line="149" pos:column="18">0<pos:position pos:line="149" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="150" pos:column="10"/></block></then></if>

        <if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">( <expr><call><name pos:line="152" pos:column="14">strncmp<pos:position pos:line="152" pos:column="21"/></name><argument_list pos:line="152" pos:column="21">(<argument><expr><name pos:line="152" pos:column="22">buf<pos:position pos:line="152" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="27">"YR"<pos:position pos:line="152" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="33">2<pos:position pos:line="152" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="35"/></argument_list></call> <operator pos:line="152" pos:column="36">&amp;&amp;<pos:position pos:line="152" pos:column="46"/></operator> <call><name pos:line="152" pos:column="39">strncmp<pos:position pos:line="152" pos:column="46"/></name><argument_list pos:line="152" pos:column="46">(<argument><expr><name pos:line="152" pos:column="47">buf<pos:position pos:line="152" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="52">"KK"<pos:position pos:line="152" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="58">2<pos:position pos:line="152" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="60"/></argument_list></call></expr> )<pos:position pos:line="152" pos:column="62"/></condition><then pos:line="152" pos:column="62"> <block pos:line="152" pos:column="63">{
            <if pos:line="153" pos:column="13">if <condition pos:line="153" pos:column="16">(<expr><name pos:line="153" pos:column="17">debug<pos:position pos:line="153" pos:column="22"/></name></expr>)<pos:position pos:line="153" pos:column="23"/></condition><then pos:line="153" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="154" pos:column="17">fprintf<pos:position pos:line="154" pos:column="24"/></name><argument_list pos:line="154" pos:column="24">(<argument><expr><name pos:line="154" pos:column="25">stderr<pos:position pos:line="154" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="33">"%s| %s: ERROR: Invalid request [%s]\n"<pos:position pos:line="154" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="154" pos:column="74">LogTime<pos:position pos:line="154" pos:column="81"/></name><argument_list pos:line="154" pos:column="81">()<pos:position pos:line="154" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="154" pos:column="85">PROGRAM<pos:position pos:line="154" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="94">buf<pos:position pos:line="154" pos:column="97"/></name></expr></argument>)<pos:position pos:line="154" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="99"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="155" pos:column="13">fprintf<pos:position pos:line="155" pos:column="20"/></name><argument_list pos:line="155" pos:column="20">(<argument><expr><name pos:line="155" pos:column="21">stdout<pos:position pos:line="155" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="29">"BH Invalid request\n"<pos:position pos:line="155" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="53"/></expr_stmt>
            <continue pos:line="156" pos:column="13">continue;<pos:position pos:line="156" pos:column="22"/></continue>
        }<pos:position pos:line="157" pos:column="10"/></block></then></if>
        <if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">( <expr><operator pos:line="158" pos:column="14">!<pos:position pos:line="158" pos:column="15"/></operator><call><name pos:line="158" pos:column="15">strncmp<pos:position pos:line="158" pos:column="22"/></name><argument_list pos:line="158" pos:column="22">(<argument><expr><name pos:line="158" pos:column="23">buf<pos:position pos:line="158" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="28">"YR"<pos:position pos:line="158" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="34">2<pos:position pos:line="158" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="36"/></argument_list></call></expr> )<pos:position pos:line="158" pos:column="38"/></condition><then pos:line="158" pos:column="38"> <block pos:line="158" pos:column="39">{
            <if pos:line="159" pos:column="13">if <condition pos:line="159" pos:column="16">(<expr><name pos:line="159" pos:column="17">gss_context<pos:position pos:line="159" pos:column="28"/></name> <operator pos:line="159" pos:column="29">!=<pos:position pos:line="159" pos:column="31"/></operator> <name pos:line="159" pos:column="32">GSS_C_NO_CONTEXT<pos:position pos:line="159" pos:column="48"/></name></expr> )<pos:position pos:line="159" pos:column="50"/></condition><then pos:line="159" pos:column="50">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="17">gss_delete_sec_context<pos:position pos:line="160" pos:column="39"/></name><argument_list pos:line="160" pos:column="39">(<argument><expr><operator pos:line="160" pos:column="40">&amp;<pos:position pos:line="160" pos:column="45"/></operator><name pos:line="160" pos:column="41">minor_status<pos:position pos:line="160" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="160" pos:column="55">&amp;<pos:position pos:line="160" pos:column="60"/></operator><name pos:line="160" pos:column="56">gss_context<pos:position pos:line="160" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="69">NULL<pos:position pos:line="160" pos:column="73"/></name></expr></argument>)<pos:position pos:line="160" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="75"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="161" pos:column="13">gss_context<pos:position pos:line="161" pos:column="24"/></name> <operator pos:line="161" pos:column="25">=<pos:position pos:line="161" pos:column="26"/></operator> <name pos:line="161" pos:column="27">GSS_C_NO_CONTEXT<pos:position pos:line="161" pos:column="43"/></name></expr>;<pos:position pos:line="161" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="162" pos:column="10"/></block></then></if>

        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><call><name pos:line="164" pos:column="13">strlen<pos:position pos:line="164" pos:column="19"/></name><argument_list pos:line="164" pos:column="19">(<argument><expr><name pos:line="164" pos:column="20">buf<pos:position pos:line="164" pos:column="23"/></name></expr></argument>)<pos:position pos:line="164" pos:column="24"/></argument_list></call> <operator pos:line="164" pos:column="25">&lt;=<pos:position pos:line="164" pos:column="30"/></operator> <literal type="number" pos:line="164" pos:column="28">3<pos:position pos:line="164" pos:column="29"/></literal></expr>)<pos:position pos:line="164" pos:column="30"/></condition><then pos:line="164" pos:column="30"> <block pos:line="164" pos:column="31">{
            <if pos:line="165" pos:column="13">if <condition pos:line="165" pos:column="16">(<expr><name pos:line="165" pos:column="17">debug<pos:position pos:line="165" pos:column="22"/></name></expr>)<pos:position pos:line="165" pos:column="23"/></condition><then pos:line="165" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="17">fprintf<pos:position pos:line="166" pos:column="24"/></name><argument_list pos:line="166" pos:column="24">(<argument><expr><name pos:line="166" pos:column="25">stderr<pos:position pos:line="166" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="33">"%s| %s: ERROR: Invalid negotiate request [%s]\n"<pos:position pos:line="166" pos:column="82"/></literal></expr></argument>, <argument><expr><call><name pos:line="166" pos:column="84">LogTime<pos:position pos:line="166" pos:column="91"/></name><argument_list pos:line="166" pos:column="91">()<pos:position pos:line="166" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="166" pos:column="95">PROGRAM<pos:position pos:line="166" pos:column="102"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="104">buf<pos:position pos:line="166" pos:column="107"/></name></expr></argument>)<pos:position pos:line="166" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="109"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="167" pos:column="13">fprintf<pos:position pos:line="167" pos:column="20"/></name><argument_list pos:line="167" pos:column="20">(<argument><expr><name pos:line="167" pos:column="21">stdout<pos:position pos:line="167" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="29">"BH Invalid negotiate request\n"<pos:position pos:line="167" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="63"/></expr_stmt>
            <continue pos:line="168" pos:column="13">continue;<pos:position pos:line="168" pos:column="22"/></continue>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="171" pos:column="9">input_token<pos:position pos:line="171" pos:column="20"/></name><operator pos:line="171" pos:column="20">.<pos:position pos:line="171" pos:column="21"/></operator><name pos:line="171" pos:column="21">length<pos:position pos:line="171" pos:column="27"/></name></name> <operator pos:line="171" pos:column="28">=<pos:position pos:line="171" pos:column="29"/></operator> <call><name pos:line="171" pos:column="30">ska_base64_decode_len<pos:position pos:line="171" pos:column="51"/></name><argument_list pos:line="171" pos:column="51">(<argument><expr><name pos:line="171" pos:column="52">buf<pos:position pos:line="171" pos:column="55"/></name><operator pos:line="171" pos:column="55">+<pos:position pos:line="171" pos:column="56"/></operator><literal type="number" pos:line="171" pos:column="56">3<pos:position pos:line="171" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="59"/></expr_stmt>
        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><name pos:line="172" pos:column="13">debug<pos:position pos:line="172" pos:column="18"/></name></expr>)<pos:position pos:line="172" pos:column="19"/></condition><then pos:line="172" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="173" pos:column="13">fprintf<pos:position pos:line="173" pos:column="20"/></name><argument_list pos:line="173" pos:column="20">(<argument><expr><name pos:line="173" pos:column="21">stderr<pos:position pos:line="173" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="29">"%s| %s: DEBUG: Decode '%s' (decoded length: %d).\n"<pos:position pos:line="173" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="173" pos:column="83">LogTime<pos:position pos:line="173" pos:column="90"/></name><argument_list pos:line="173" pos:column="90">()<pos:position pos:line="173" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="173" pos:column="94">PROGRAM<pos:position pos:line="173" pos:column="101"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="103">buf<pos:position pos:line="173" pos:column="106"/></name><operator pos:line="173" pos:column="106">+<pos:position pos:line="173" pos:column="107"/></operator><literal type="number" pos:line="173" pos:column="107">3<pos:position pos:line="173" pos:column="108"/></literal></expr></argument>,<argument><expr><operator pos:line="173" pos:column="109">(<pos:position pos:line="173" pos:column="110"/></operator><name pos:line="173" pos:column="110">int<pos:position pos:line="173" pos:column="113"/></name><operator pos:line="173" pos:column="113">)<pos:position pos:line="173" pos:column="114"/></operator><name><name pos:line="173" pos:column="114">input_token<pos:position pos:line="173" pos:column="125"/></name><operator pos:line="173" pos:column="125">.<pos:position pos:line="173" pos:column="126"/></operator><name pos:line="173" pos:column="126">length<pos:position pos:line="173" pos:column="132"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="134"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">input_token<pos:position pos:line="174" pos:column="20"/></name><operator pos:line="174" pos:column="20">.<pos:position pos:line="174" pos:column="21"/></operator><name pos:line="174" pos:column="21">value<pos:position pos:line="174" pos:column="26"/></name></name> <operator pos:line="174" pos:column="27">=<pos:position pos:line="174" pos:column="28"/></operator> <call><name pos:line="174" pos:column="29">xmalloc<pos:position pos:line="174" pos:column="36"/></name><argument_list pos:line="174" pos:column="36">(<argument><expr><name><name pos:line="174" pos:column="37">input_token<pos:position pos:line="174" pos:column="48"/></name><operator pos:line="174" pos:column="48">.<pos:position pos:line="174" pos:column="49"/></operator><name pos:line="174" pos:column="49">length<pos:position pos:line="174" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="57"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="176" pos:column="9">ska_base64_decode<pos:position pos:line="176" pos:column="26"/></name><argument_list pos:line="176" pos:column="26">(<argument><expr><name><name pos:line="176" pos:column="27">input_token<pos:position pos:line="176" pos:column="38"/></name><operator pos:line="176" pos:column="38">.<pos:position pos:line="176" pos:column="39"/></operator><name pos:line="176" pos:column="39">value<pos:position pos:line="176" pos:column="44"/></name></name></expr></argument>,<argument><expr><name pos:line="176" pos:column="45">buf<pos:position pos:line="176" pos:column="48"/></name><operator pos:line="176" pos:column="48">+<pos:position pos:line="176" pos:column="49"/></operator><literal type="number" pos:line="176" pos:column="49">3<pos:position pos:line="176" pos:column="50"/></literal></expr></argument>,<argument><expr><name><name pos:line="176" pos:column="51">input_token<pos:position pos:line="176" pos:column="62"/></name><operator pos:line="176" pos:column="62">.<pos:position pos:line="176" pos:column="63"/></operator><name pos:line="176" pos:column="63">length<pos:position pos:line="176" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="71"/></expr_stmt>


        <if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><operator pos:line="179" pos:column="13">(<pos:position pos:line="179" pos:column="14"/></operator><name><name pos:line="179" pos:column="14">input_token<pos:position pos:line="179" pos:column="25"/></name><operator pos:line="179" pos:column="25">.<pos:position pos:line="179" pos:column="26"/></operator><name pos:line="179" pos:column="26">length<pos:position pos:line="179" pos:column="32"/></name></name> <operator pos:line="179" pos:column="33">&gt;=<pos:position pos:line="179" pos:column="38"/></operator> <sizeof pos:line="179" pos:column="36">sizeof <name pos:line="179" pos:column="43">ntlmProtocol<pos:position pos:line="179" pos:column="55"/></name></sizeof> <operator pos:line="179" pos:column="56">+<pos:position pos:line="179" pos:column="57"/></operator> <literal type="number" pos:line="179" pos:column="58">1<pos:position pos:line="179" pos:column="59"/></literal><operator pos:line="179" pos:column="59">)<pos:position pos:line="179" pos:column="60"/></operator> <operator pos:line="179" pos:column="61">&amp;&amp;<pos:position pos:line="179" pos:column="71"/></operator>
                <operator pos:line="180" pos:column="17">(<pos:position pos:line="180" pos:column="18"/></operator><operator pos:line="180" pos:column="18">!<pos:position pos:line="180" pos:column="19"/></operator><call><name pos:line="180" pos:column="19">memcmp<pos:position pos:line="180" pos:column="25"/></name> <argument_list pos:line="180" pos:column="26">(<argument><expr><name><name pos:line="180" pos:column="27">input_token<pos:position pos:line="180" pos:column="38"/></name><operator pos:line="180" pos:column="38">.<pos:position pos:line="180" pos:column="39"/></operator><name pos:line="180" pos:column="39">value<pos:position pos:line="180" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="46">ntlmProtocol<pos:position pos:line="180" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="180" pos:column="60">sizeof <name pos:line="180" pos:column="67">ntlmProtocol<pos:position pos:line="180" pos:column="79"/></name></sizeof></expr></argument>)<pos:position pos:line="180" pos:column="80"/></argument_list></call><operator pos:line="180" pos:column="80">)<pos:position pos:line="180" pos:column="81"/></operator></expr>)<pos:position pos:line="180" pos:column="82"/></condition><then pos:line="180" pos:column="82"> <block pos:line="180" pos:column="83">{
            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><name pos:line="181" pos:column="17">debug<pos:position pos:line="181" pos:column="22"/></name></expr>)<pos:position pos:line="181" pos:column="23"/></condition><then pos:line="181" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="182" pos:column="17">fprintf<pos:position pos:line="182" pos:column="24"/></name><argument_list pos:line="182" pos:column="24">(<argument><expr><name pos:line="182" pos:column="25">stderr<pos:position pos:line="182" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="33">"%s| %s: WARNING: received type %d NTLM token\n"<pos:position pos:line="182" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="182" pos:column="83">LogTime<pos:position pos:line="182" pos:column="90"/></name><argument_list pos:line="182" pos:column="90">()<pos:position pos:line="182" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="182" pos:column="94">PROGRAM<pos:position pos:line="182" pos:column="101"/></name></expr></argument>, <argument><expr><operator pos:line="182" pos:column="103">(<pos:position pos:line="182" pos:column="104"/></operator><name pos:line="182" pos:column="104">int<pos:position pos:line="182" pos:column="107"/></name><operator pos:line="182" pos:column="107">)<pos:position pos:line="182" pos:column="108"/></operator> <operator pos:line="182" pos:column="109">*<pos:position pos:line="182" pos:column="110"/></operator><operator pos:line="182" pos:column="110">(<pos:position pos:line="182" pos:column="111"/></operator><operator pos:line="182" pos:column="111">(<pos:position pos:line="182" pos:column="112"/></operator><name pos:line="182" pos:column="112">unsigned<pos:position pos:line="182" pos:column="120"/></name> <name pos:line="182" pos:column="121">char<pos:position pos:line="182" pos:column="125"/></name> <operator pos:line="182" pos:column="126">*<pos:position pos:line="182" pos:column="127"/></operator><operator pos:line="182" pos:column="127">)<pos:position pos:line="182" pos:column="128"/></operator><name><name pos:line="182" pos:column="128">input_token<pos:position pos:line="182" pos:column="139"/></name><operator pos:line="182" pos:column="139">.<pos:position pos:line="182" pos:column="140"/></operator><name pos:line="182" pos:column="140">value<pos:position pos:line="182" pos:column="145"/></name></name> <operator pos:line="182" pos:column="146">+<pos:position pos:line="182" pos:column="147"/></operator> <sizeof pos:line="182" pos:column="148">sizeof <name pos:line="182" pos:column="155">ntlmProtocol<pos:position pos:line="182" pos:column="167"/></name></sizeof><operator pos:line="182" pos:column="167">)<pos:position pos:line="182" pos:column="168"/></operator></expr></argument>)<pos:position pos:line="182" pos:column="169"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="170"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="183" pos:column="13">fprintf<pos:position pos:line="183" pos:column="20"/></name><argument_list pos:line="183" pos:column="20">(<argument><expr><name pos:line="183" pos:column="21">stdout<pos:position pos:line="183" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="29">"BH received type %d NTLM token\n"<pos:position pos:line="183" pos:column="63"/></literal></expr></argument>,<argument><expr><operator pos:line="183" pos:column="64">(<pos:position pos:line="183" pos:column="65"/></operator><name pos:line="183" pos:column="65">int<pos:position pos:line="183" pos:column="68"/></name><operator pos:line="183" pos:column="68">)<pos:position pos:line="183" pos:column="69"/></operator> <operator pos:line="183" pos:column="70">*<pos:position pos:line="183" pos:column="71"/></operator><operator pos:line="183" pos:column="71">(<pos:position pos:line="183" pos:column="72"/></operator><operator pos:line="183" pos:column="72">(<pos:position pos:line="183" pos:column="73"/></operator><name pos:line="183" pos:column="73">unsigned<pos:position pos:line="183" pos:column="81"/></name> <name pos:line="183" pos:column="82">char<pos:position pos:line="183" pos:column="86"/></name> <operator pos:line="183" pos:column="87">*<pos:position pos:line="183" pos:column="88"/></operator><operator pos:line="183" pos:column="88">)<pos:position pos:line="183" pos:column="89"/></operator><name><name pos:line="183" pos:column="89">input_token<pos:position pos:line="183" pos:column="100"/></name><operator pos:line="183" pos:column="100">.<pos:position pos:line="183" pos:column="101"/></operator><name pos:line="183" pos:column="101">value<pos:position pos:line="183" pos:column="106"/></name></name> <operator pos:line="183" pos:column="107">+<pos:position pos:line="183" pos:column="108"/></operator> <sizeof pos:line="183" pos:column="109">sizeof <name pos:line="183" pos:column="116">ntlmProtocol<pos:position pos:line="183" pos:column="128"/></name></sizeof><operator pos:line="183" pos:column="128">)<pos:position pos:line="183" pos:column="129"/></operator></expr></argument>)<pos:position pos:line="183" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="131"/></expr_stmt>
            <goto pos:line="184" pos:column="13">goto <name pos:line="184" pos:column="18">cleanup<pos:position pos:line="184" pos:column="25"/></name>;<pos:position pos:line="184" pos:column="26"/></goto>
        }<pos:position pos:line="185" pos:column="10"/></block></then></if>

        <if pos:line="187" pos:column="9">if <condition pos:line="187" pos:column="12">( <expr><name pos:line="187" pos:column="14">service_principal<pos:position pos:line="187" pos:column="31"/></name></expr> )<pos:position pos:line="187" pos:column="33"/></condition><then pos:line="187" pos:column="33"> <block pos:line="187" pos:column="34">{
            <if pos:line="188" pos:column="13">if <condition pos:line="188" pos:column="16">( <expr><call><name pos:line="188" pos:column="18">strcasecmp<pos:position pos:line="188" pos:column="28"/></name><argument_list pos:line="188" pos:column="28">(<argument><expr><name pos:line="188" pos:column="29">service_principal<pos:position pos:line="188" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="188" pos:column="47">"GSS_C_NO_NAME"<pos:position pos:line="188" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="63"/></argument_list></call></expr> )<pos:position pos:line="188" pos:column="65"/></condition><then pos:line="188" pos:column="65"> <block pos:line="188" pos:column="66">{
                <expr_stmt><expr><name pos:line="189" pos:column="17">major_status<pos:position pos:line="189" pos:column="29"/></name> <operator pos:line="189" pos:column="30">=<pos:position pos:line="189" pos:column="31"/></operator> <call><name pos:line="189" pos:column="32">gss_import_name<pos:position pos:line="189" pos:column="47"/></name><argument_list pos:line="189" pos:column="47">(<argument><expr><operator pos:line="189" pos:column="48">&amp;<pos:position pos:line="189" pos:column="53"/></operator><name pos:line="189" pos:column="49">minor_status<pos:position pos:line="189" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="189" pos:column="63">&amp;<pos:position pos:line="189" pos:column="68"/></operator><name pos:line="189" pos:column="64">service<pos:position pos:line="189" pos:column="71"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="190" pos:column="48">(<pos:position pos:line="190" pos:column="49"/></operator><name pos:line="190" pos:column="49">gss_OID<pos:position pos:line="190" pos:column="56"/></name><operator pos:line="190" pos:column="56">)<pos:position pos:line="190" pos:column="57"/></operator> <name pos:line="190" pos:column="58">GSS_C_NULL_OID<pos:position pos:line="190" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="190" pos:column="74">&amp;<pos:position pos:line="190" pos:column="79"/></operator><name pos:line="190" pos:column="75">server_name<pos:position pos:line="190" pos:column="86"/></name></expr></argument>)<pos:position pos:line="190" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="88"/></expr_stmt>

            }<pos:position pos:line="192" pos:column="14"/></block></then> <else pos:line="192" pos:column="15">else <block pos:line="192" pos:column="20">{
                <expr_stmt><expr><name pos:line="193" pos:column="17">server_name<pos:position pos:line="193" pos:column="28"/></name> <operator pos:line="193" pos:column="29">=<pos:position pos:line="193" pos:column="30"/></operator> <name pos:line="193" pos:column="31">GSS_C_NO_NAME<pos:position pos:line="193" pos:column="44"/></name></expr>;<pos:position pos:line="193" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name pos:line="194" pos:column="17">major_status<pos:position pos:line="194" pos:column="29"/></name> <operator pos:line="194" pos:column="30">=<pos:position pos:line="194" pos:column="31"/></operator> <name pos:line="194" pos:column="32">GSS_S_COMPLETE<pos:position pos:line="194" pos:column="46"/></name></expr>;<pos:position pos:line="194" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="195" pos:column="14"/></block></else></if>
        }<pos:position pos:line="196" pos:column="10"/></block></then> <else pos:line="196" pos:column="11">else <block pos:line="196" pos:column="16">{
            <expr_stmt><expr><name pos:line="197" pos:column="13">major_status<pos:position pos:line="197" pos:column="25"/></name> <operator pos:line="197" pos:column="26">=<pos:position pos:line="197" pos:column="27"/></operator> <call><name pos:line="197" pos:column="28">gss_import_name<pos:position pos:line="197" pos:column="43"/></name><argument_list pos:line="197" pos:column="43">(<argument><expr><operator pos:line="197" pos:column="44">&amp;<pos:position pos:line="197" pos:column="49"/></operator><name pos:line="197" pos:column="45">minor_status<pos:position pos:line="197" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="59">&amp;<pos:position pos:line="197" pos:column="64"/></operator><name pos:line="197" pos:column="60">service<pos:position pos:line="197" pos:column="67"/></name></expr></argument>,
                                           <argument><expr><name pos:line="198" pos:column="44">gss_nt_service_name<pos:position pos:line="198" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="198" pos:column="65">&amp;<pos:position pos:line="198" pos:column="70"/></operator><name pos:line="198" pos:column="66">server_name<pos:position pos:line="198" pos:column="77"/></name></expr></argument>)<pos:position pos:line="198" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="199" pos:column="10"/></block></else></if>

        <if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">( <expr><call><name pos:line="201" pos:column="14">check_gss_err<pos:position pos:line="201" pos:column="27"/></name><argument_list pos:line="201" pos:column="27">(<argument><expr><name pos:line="201" pos:column="28">major_status<pos:position pos:line="201" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="201" pos:column="41">minor_status<pos:position pos:line="201" pos:column="53"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="201" pos:column="54">"gss_import_name()"<pos:position pos:line="201" pos:column="73"/></literal></expr></argument>,<argument><expr><name pos:line="201" pos:column="74">debug<pos:position pos:line="201" pos:column="79"/></name></expr></argument>,<argument><expr><name pos:line="201" pos:column="80">log<pos:position pos:line="201" pos:column="83"/></name></expr></argument>)<pos:position pos:line="201" pos:column="84"/></argument_list></call></expr> )<pos:position pos:line="201" pos:column="86"/></condition><then pos:line="201" pos:column="86">
            <block type="pseudo"><goto pos:line="202" pos:column="13">goto <name pos:line="202" pos:column="18">cleanup<pos:position pos:line="202" pos:column="25"/></name>;<pos:position pos:line="202" pos:column="26"/></goto></block></then></if>

        <expr_stmt><expr><name pos:line="204" pos:column="9">major_status<pos:position pos:line="204" pos:column="21"/></name> <operator pos:line="204" pos:column="22">=<pos:position pos:line="204" pos:column="23"/></operator> <call><name pos:line="204" pos:column="24">gss_acquire_cred<pos:position pos:line="204" pos:column="40"/></name><argument_list pos:line="204" pos:column="40">(<argument><expr><operator pos:line="204" pos:column="41">&amp;<pos:position pos:line="204" pos:column="46"/></operator><name pos:line="204" pos:column="42">minor_status<pos:position pos:line="204" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="56">server_name<pos:position pos:line="204" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="69">GSS_C_INDEFINITE<pos:position pos:line="204" pos:column="85"/></name></expr></argument>,
                                        <argument><expr><name pos:line="205" pos:column="41">GSS_C_NO_OID_SET<pos:position pos:line="205" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="59">GSS_C_ACCEPT<pos:position pos:line="205" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="205" pos:column="73">&amp;<pos:position pos:line="205" pos:column="78"/></operator><name pos:line="205" pos:column="74">server_creds<pos:position pos:line="205" pos:column="86"/></name></expr></argument>,
                                        <argument><expr><name pos:line="206" pos:column="41">NULL<pos:position pos:line="206" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="47">NULL<pos:position pos:line="206" pos:column="51"/></name></expr></argument>)<pos:position pos:line="206" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="53"/></expr_stmt>
        <if pos:line="207" pos:column="9">if <condition pos:line="207" pos:column="12">(<expr><call><name pos:line="207" pos:column="13">check_gss_err<pos:position pos:line="207" pos:column="26"/></name><argument_list pos:line="207" pos:column="26">(<argument><expr><name pos:line="207" pos:column="27">major_status<pos:position pos:line="207" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="207" pos:column="40">minor_status<pos:position pos:line="207" pos:column="52"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="207" pos:column="53">"gss_acquire_cred()"<pos:position pos:line="207" pos:column="73"/></literal></expr></argument>,<argument><expr><name pos:line="207" pos:column="74">debug<pos:position pos:line="207" pos:column="79"/></name></expr></argument>,<argument><expr><name pos:line="207" pos:column="80">log<pos:position pos:line="207" pos:column="83"/></name></expr></argument>)<pos:position pos:line="207" pos:column="84"/></argument_list></call></expr> )<pos:position pos:line="207" pos:column="86"/></condition><then pos:line="207" pos:column="86">
            <block type="pseudo"><goto pos:line="208" pos:column="13">goto <name pos:line="208" pos:column="18">cleanup<pos:position pos:line="208" pos:column="25"/></name>;<pos:position pos:line="208" pos:column="26"/></goto></block></then></if>

        <expr_stmt><expr><name pos:line="210" pos:column="9">major_status<pos:position pos:line="210" pos:column="21"/></name> <operator pos:line="210" pos:column="22">=<pos:position pos:line="210" pos:column="23"/></operator> <call><name pos:line="210" pos:column="24">gss_accept_sec_context<pos:position pos:line="210" pos:column="46"/></name><argument_list pos:line="210" pos:column="46">(<argument><expr><operator pos:line="210" pos:column="47">&amp;<pos:position pos:line="210" pos:column="52"/></operator><name pos:line="210" pos:column="48">minor_status<pos:position pos:line="210" pos:column="60"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="211" pos:column="47">&amp;<pos:position pos:line="211" pos:column="52"/></operator><name pos:line="211" pos:column="48">gss_context<pos:position pos:line="211" pos:column="59"/></name></expr></argument>,
                                              <argument><expr><name pos:line="212" pos:column="47">server_creds<pos:position pos:line="212" pos:column="59"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="213" pos:column="47">&amp;<pos:position pos:line="213" pos:column="52"/></operator><name pos:line="213" pos:column="48">input_token<pos:position pos:line="213" pos:column="59"/></name></expr></argument>,
                                              <argument><expr><name pos:line="214" pos:column="47">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="214" pos:column="72"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="215" pos:column="47">&amp;<pos:position pos:line="215" pos:column="52"/></operator><name pos:line="215" pos:column="48">client_name<pos:position pos:line="215" pos:column="59"/></name></expr></argument>,
                                              <argument><expr><name pos:line="216" pos:column="47">NULL<pos:position pos:line="216" pos:column="51"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="217" pos:column="47">&amp;<pos:position pos:line="217" pos:column="52"/></operator><name pos:line="217" pos:column="48">output_token<pos:position pos:line="217" pos:column="60"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="218" pos:column="47">&amp;<pos:position pos:line="218" pos:column="52"/></operator><name pos:line="218" pos:column="48">ret_flags<pos:position pos:line="218" pos:column="57"/></name></expr></argument>,
                                              <argument><expr><name pos:line="219" pos:column="47">NULL<pos:position pos:line="219" pos:column="51"/></name></expr></argument>,
                                              <argument><expr><name pos:line="220" pos:column="47">NULL<pos:position pos:line="220" pos:column="51"/></name></expr></argument>)<pos:position pos:line="220" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="53"/></expr_stmt>


        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">output_token<pos:position pos:line="223" pos:column="25"/></name><operator pos:line="223" pos:column="25">.<pos:position pos:line="223" pos:column="26"/></operator><name pos:line="223" pos:column="26">length<pos:position pos:line="223" pos:column="32"/></name></name></expr>)<pos:position pos:line="223" pos:column="33"/></condition><then pos:line="223" pos:column="33"> <block pos:line="223" pos:column="34">{
            <expr_stmt><expr><name pos:line="224" pos:column="13">spnegoToken<pos:position pos:line="224" pos:column="24"/></name> <operator pos:line="224" pos:column="25">=<pos:position pos:line="224" pos:column="26"/></operator> <name><name pos:line="224" pos:column="27">output_token<pos:position pos:line="224" pos:column="39"/></name><operator pos:line="224" pos:column="39">.<pos:position pos:line="224" pos:column="40"/></operator><name pos:line="224" pos:column="40">value<pos:position pos:line="224" pos:column="45"/></name></name></expr>;<pos:position pos:line="224" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="225" pos:column="13">spnegoTokenLength<pos:position pos:line="225" pos:column="30"/></name> <operator pos:line="225" pos:column="31">=<pos:position pos:line="225" pos:column="32"/></operator> <name><name pos:line="225" pos:column="33">output_token<pos:position pos:line="225" pos:column="45"/></name><operator pos:line="225" pos:column="45">.<pos:position pos:line="225" pos:column="46"/></operator><name pos:line="225" pos:column="46">length<pos:position pos:line="225" pos:column="52"/></name></name></expr>;<pos:position pos:line="225" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name pos:line="226" pos:column="13">token<pos:position pos:line="226" pos:column="18"/></name> <operator pos:line="226" pos:column="19">=<pos:position pos:line="226" pos:column="20"/></operator> <call><name pos:line="226" pos:column="21">xmalloc<pos:position pos:line="226" pos:column="28"/></name><argument_list pos:line="226" pos:column="28">(<argument><expr><call><name pos:line="226" pos:column="29">ska_base64_encode_len<pos:position pos:line="226" pos:column="50"/></name><argument_list pos:line="226" pos:column="50">(<argument><expr><name pos:line="226" pos:column="51">spnegoTokenLength<pos:position pos:line="226" pos:column="68"/></name></expr></argument>)<pos:position pos:line="226" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="226" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="71"/></expr_stmt>
            <if pos:line="227" pos:column="13">if <condition pos:line="227" pos:column="16">(<expr><name pos:line="227" pos:column="17">token<pos:position pos:line="227" pos:column="22"/></name> <operator pos:line="227" pos:column="23">==<pos:position pos:line="227" pos:column="25"/></operator> <name pos:line="227" pos:column="26">NULL<pos:position pos:line="227" pos:column="30"/></name></expr>)<pos:position pos:line="227" pos:column="31"/></condition><then pos:line="227" pos:column="31"> <block pos:line="227" pos:column="32">{
                <if pos:line="228" pos:column="17">if <condition pos:line="228" pos:column="20">(<expr><name pos:line="228" pos:column="21">debug<pos:position pos:line="228" pos:column="26"/></name></expr>)<pos:position pos:line="228" pos:column="27"/></condition><then pos:line="228" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="229" pos:column="21">fprintf<pos:position pos:line="229" pos:column="28"/></name><argument_list pos:line="229" pos:column="28">(<argument><expr><name pos:line="229" pos:column="29">stderr<pos:position pos:line="229" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="37">"%s| %s: ERROT: Not enough memory\n"<pos:position pos:line="229" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="229" pos:column="75">LogTime<pos:position pos:line="229" pos:column="82"/></name><argument_list pos:line="229" pos:column="82">()<pos:position pos:line="229" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="229" pos:column="86">PROGRAM<pos:position pos:line="229" pos:column="93"/></name></expr></argument>)<pos:position pos:line="229" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="95"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="230" pos:column="17">fprintf<pos:position pos:line="230" pos:column="24"/></name><argument_list pos:line="230" pos:column="24">(<argument><expr><name pos:line="230" pos:column="25">stdout<pos:position pos:line="230" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="33">"BH Not enough memory\n"<pos:position pos:line="230" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="59"/></expr_stmt>
                <goto pos:line="231" pos:column="17">goto <name pos:line="231" pos:column="22">cleanup<pos:position pos:line="231" pos:column="29"/></name>;<pos:position pos:line="231" pos:column="30"/></goto>
            }<pos:position pos:line="232" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="234" pos:column="13">ska_base64_encode<pos:position pos:line="234" pos:column="30"/></name><argument_list pos:line="234" pos:column="30">(<argument><expr><name pos:line="234" pos:column="31">token<pos:position pos:line="234" pos:column="36"/></name></expr></argument>,<argument><expr><operator pos:line="234" pos:column="37">(<pos:position pos:line="234" pos:column="38"/></operator><specifier pos:line="234" pos:column="38">const<pos:position pos:line="234" pos:column="43"/></specifier> <name pos:line="234" pos:column="44">char<pos:position pos:line="234" pos:column="48"/></name> <operator pos:line="234" pos:column="49">*<pos:position pos:line="234" pos:column="50"/></operator><operator pos:line="234" pos:column="50">)<pos:position pos:line="234" pos:column="51"/></operator><name pos:line="234" pos:column="51">spnegoToken<pos:position pos:line="234" pos:column="62"/></name></expr></argument>,<argument><expr><call><name pos:line="234" pos:column="63">ska_base64_encode_len<pos:position pos:line="234" pos:column="84"/></name><argument_list pos:line="234" pos:column="84">(<argument><expr><name pos:line="234" pos:column="85">spnegoTokenLength<pos:position pos:line="234" pos:column="102"/></name></expr></argument>)<pos:position pos:line="234" pos:column="103"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="234" pos:column="104">spnegoTokenLength<pos:position pos:line="234" pos:column="121"/></name></expr></argument>)<pos:position pos:line="234" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="123"/></expr_stmt>

            <if pos:line="236" pos:column="13">if <condition pos:line="236" pos:column="16">(<expr><call><name pos:line="236" pos:column="17">check_gss_err<pos:position pos:line="236" pos:column="30"/></name><argument_list pos:line="236" pos:column="30">(<argument><expr><name pos:line="236" pos:column="31">major_status<pos:position pos:line="236" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="236" pos:column="44">minor_status<pos:position pos:line="236" pos:column="56"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="236" pos:column="57">"gss_accept_sec_context()"<pos:position pos:line="236" pos:column="83"/></literal></expr></argument>,<argument><expr><name pos:line="236" pos:column="84">debug<pos:position pos:line="236" pos:column="89"/></name></expr></argument>,<argument><expr><name pos:line="236" pos:column="90">log<pos:position pos:line="236" pos:column="93"/></name></expr></argument>)<pos:position pos:line="236" pos:column="94"/></argument_list></call></expr> )<pos:position pos:line="236" pos:column="96"/></condition><then pos:line="236" pos:column="96">
                <block type="pseudo"><goto pos:line="237" pos:column="17">goto <name pos:line="237" pos:column="22">cleanup<pos:position pos:line="237" pos:column="29"/></name>;<pos:position pos:line="237" pos:column="30"/></goto></block></then></if>
            <if pos:line="238" pos:column="13">if <condition pos:line="238" pos:column="16">(<expr><name pos:line="238" pos:column="17">major_status<pos:position pos:line="238" pos:column="29"/></name> <operator pos:line="238" pos:column="30">&amp;<pos:position pos:line="238" pos:column="35"/></operator> <name pos:line="238" pos:column="32">GSS_S_CONTINUE_NEEDED<pos:position pos:line="238" pos:column="53"/></name></expr>)<pos:position pos:line="238" pos:column="54"/></condition><then pos:line="238" pos:column="54"> <block pos:line="238" pos:column="55">{
                <if pos:line="239" pos:column="17">if <condition pos:line="239" pos:column="20">(<expr><name pos:line="239" pos:column="21">debug<pos:position pos:line="239" pos:column="26"/></name></expr>)<pos:position pos:line="239" pos:column="27"/></condition><then pos:line="239" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="240" pos:column="21">fprintf<pos:position pos:line="240" pos:column="28"/></name><argument_list pos:line="240" pos:column="28">(<argument><expr><name pos:line="240" pos:column="29">stderr<pos:position pos:line="240" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="240" pos:column="37">"%s| %s: INFO: continuation needed\n"<pos:position pos:line="240" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="240" pos:column="76">LogTime<pos:position pos:line="240" pos:column="83"/></name><argument_list pos:line="240" pos:column="83">()<pos:position pos:line="240" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="240" pos:column="87">PROGRAM<pos:position pos:line="240" pos:column="94"/></name></expr></argument>)<pos:position pos:line="240" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="96"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="241" pos:column="17">fprintf<pos:position pos:line="241" pos:column="24"/></name><argument_list pos:line="241" pos:column="24">(<argument><expr><name pos:line="241" pos:column="25">stdout<pos:position pos:line="241" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="241" pos:column="33">"TT %s\n"<pos:position pos:line="241" pos:column="42"/></literal></expr></argument>,<argument><expr><name pos:line="241" pos:column="43">token<pos:position pos:line="241" pos:column="48"/></name></expr></argument>)<pos:position pos:line="241" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="50"/></expr_stmt>
                <goto pos:line="242" pos:column="17">goto <name pos:line="242" pos:column="22">cleanup<pos:position pos:line="242" pos:column="29"/></name>;<pos:position pos:line="242" pos:column="30"/></goto>
            }<pos:position pos:line="243" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="244" pos:column="13">gss_release_buffer<pos:position pos:line="244" pos:column="31"/></name><argument_list pos:line="244" pos:column="31">(<argument><expr><operator pos:line="244" pos:column="32">&amp;<pos:position pos:line="244" pos:column="37"/></operator><name pos:line="244" pos:column="33">minor_status<pos:position pos:line="244" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="244" pos:column="47">&amp;<pos:position pos:line="244" pos:column="52"/></operator><name pos:line="244" pos:column="48">output_token<pos:position pos:line="244" pos:column="60"/></name></expr></argument>)<pos:position pos:line="244" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="245" pos:column="13">major_status<pos:position pos:line="245" pos:column="25"/></name> <operator pos:line="245" pos:column="26">=<pos:position pos:line="245" pos:column="27"/></operator> <call><name pos:line="245" pos:column="28">gss_display_name<pos:position pos:line="245" pos:column="44"/></name><argument_list pos:line="245" pos:column="44">(<argument><expr><operator pos:line="245" pos:column="45">&amp;<pos:position pos:line="245" pos:column="50"/></operator><name pos:line="245" pos:column="46">minor_status<pos:position pos:line="245" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="60">client_name<pos:position pos:line="245" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="245" pos:column="73">&amp;<pos:position pos:line="245" pos:column="78"/></operator><name pos:line="245" pos:column="74">output_token<pos:position pos:line="245" pos:column="86"/></name></expr></argument>,
                                            <argument><expr><name pos:line="246" pos:column="45">NULL<pos:position pos:line="246" pos:column="49"/></name></expr></argument>)<pos:position pos:line="246" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="51"/></expr_stmt>

            <if pos:line="248" pos:column="13">if <condition pos:line="248" pos:column="16">(<expr><call><name pos:line="248" pos:column="17">check_gss_err<pos:position pos:line="248" pos:column="30"/></name><argument_list pos:line="248" pos:column="30">(<argument><expr><name pos:line="248" pos:column="31">major_status<pos:position pos:line="248" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="248" pos:column="44">minor_status<pos:position pos:line="248" pos:column="56"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="248" pos:column="57">"gss_display_name()"<pos:position pos:line="248" pos:column="77"/></literal></expr></argument>,<argument><expr><name pos:line="248" pos:column="78">debug<pos:position pos:line="248" pos:column="83"/></name></expr></argument>,<argument><expr><name pos:line="248" pos:column="84">log<pos:position pos:line="248" pos:column="87"/></name></expr></argument>)<pos:position pos:line="248" pos:column="88"/></argument_list></call></expr> )<pos:position pos:line="248" pos:column="90"/></condition><then pos:line="248" pos:column="90">
                <block type="pseudo"><goto pos:line="249" pos:column="17">goto <name pos:line="249" pos:column="22">cleanup<pos:position pos:line="249" pos:column="29"/></name>;<pos:position pos:line="249" pos:column="30"/></goto></block></then></if>
            <expr_stmt><expr><name pos:line="250" pos:column="13">user<pos:position pos:line="250" pos:column="17"/></name><operator pos:line="250" pos:column="17">=<pos:position pos:line="250" pos:column="18"/></operator><call><name pos:line="250" pos:column="18">xmalloc<pos:position pos:line="250" pos:column="25"/></name><argument_list pos:line="250" pos:column="25">(<argument><expr><name><name pos:line="250" pos:column="26">output_token<pos:position pos:line="250" pos:column="38"/></name><operator pos:line="250" pos:column="38">.<pos:position pos:line="250" pos:column="39"/></operator><name pos:line="250" pos:column="39">length<pos:position pos:line="250" pos:column="45"/></name></name><operator pos:line="250" pos:column="45">+<pos:position pos:line="250" pos:column="46"/></operator><literal type="number" pos:line="250" pos:column="46">1<pos:position pos:line="250" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="250" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="49"/></expr_stmt>
            <if pos:line="251" pos:column="13">if <condition pos:line="251" pos:column="16">(<expr><name pos:line="251" pos:column="17">user<pos:position pos:line="251" pos:column="21"/></name> <operator pos:line="251" pos:column="22">==<pos:position pos:line="251" pos:column="24"/></operator> <name pos:line="251" pos:column="25">NULL<pos:position pos:line="251" pos:column="29"/></name></expr>)<pos:position pos:line="251" pos:column="30"/></condition><then pos:line="251" pos:column="30"> <block pos:line="251" pos:column="31">{
                <if pos:line="252" pos:column="17">if <condition pos:line="252" pos:column="20">(<expr><name pos:line="252" pos:column="21">debug<pos:position pos:line="252" pos:column="26"/></name></expr>)<pos:position pos:line="252" pos:column="27"/></condition><then pos:line="252" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="253" pos:column="21">fprintf<pos:position pos:line="253" pos:column="28"/></name><argument_list pos:line="253" pos:column="28">(<argument><expr><name pos:line="253" pos:column="29">stderr<pos:position pos:line="253" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="37">"%s| %s: ERROR: Not enough memory\n"<pos:position pos:line="253" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="253" pos:column="75">LogTime<pos:position pos:line="253" pos:column="82"/></name><argument_list pos:line="253" pos:column="82">()<pos:position pos:line="253" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="253" pos:column="86">PROGRAM<pos:position pos:line="253" pos:column="93"/></name></expr></argument>)<pos:position pos:line="253" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="95"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="254" pos:column="17">fprintf<pos:position pos:line="254" pos:column="24"/></name><argument_list pos:line="254" pos:column="24">(<argument><expr><name pos:line="254" pos:column="25">stdout<pos:position pos:line="254" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="33">"BH Not enough memory\n"<pos:position pos:line="254" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="59"/></expr_stmt>
                <goto pos:line="255" pos:column="17">goto <name pos:line="255" pos:column="22">cleanup<pos:position pos:line="255" pos:column="29"/></name>;<pos:position pos:line="255" pos:column="30"/></goto>
            }<pos:position pos:line="256" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="257" pos:column="13">memcpy<pos:position pos:line="257" pos:column="19"/></name><argument_list pos:line="257" pos:column="19">(<argument><expr><name pos:line="257" pos:column="20">user<pos:position pos:line="257" pos:column="24"/></name></expr></argument>,<argument><expr><name><name pos:line="257" pos:column="25">output_token<pos:position pos:line="257" pos:column="37"/></name><operator pos:line="257" pos:column="37">.<pos:position pos:line="257" pos:column="38"/></operator><name pos:line="257" pos:column="38">value<pos:position pos:line="257" pos:column="43"/></name></name></expr></argument>,<argument><expr><name><name pos:line="257" pos:column="44">output_token<pos:position pos:line="257" pos:column="56"/></name><operator pos:line="257" pos:column="56">.<pos:position pos:line="257" pos:column="57"/></operator><name pos:line="257" pos:column="57">length<pos:position pos:line="257" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="257" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="258" pos:column="13">user<pos:position pos:line="258" pos:column="17"/></name><index pos:line="258" pos:column="17">[<expr><name><name pos:line="258" pos:column="18">output_token<pos:position pos:line="258" pos:column="30"/></name><operator pos:line="258" pos:column="30">.<pos:position pos:line="258" pos:column="31"/></operator><name pos:line="258" pos:column="31">length<pos:position pos:line="258" pos:column="37"/></name></name></expr>]<pos:position pos:line="258" pos:column="38"/></index></name><operator pos:line="258" pos:column="38">=<pos:position pos:line="258" pos:column="39"/></operator><literal type="char" pos:line="258" pos:column="39">'\0'<pos:position pos:line="258" pos:column="43"/></literal></expr>;<pos:position pos:line="258" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="259" pos:column="13">fprintf<pos:position pos:line="259" pos:column="20"/></name><argument_list pos:line="259" pos:column="20">(<argument><expr><name pos:line="259" pos:column="21">stdout<pos:position pos:line="259" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="259" pos:column="29">"AF %s %s\n"<pos:position pos:line="259" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="259" pos:column="42">token<pos:position pos:line="259" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="259" pos:column="48">user<pos:position pos:line="259" pos:column="52"/></name></expr></argument>)<pos:position pos:line="259" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="54"/></expr_stmt>
            <if pos:line="260" pos:column="13">if <condition pos:line="260" pos:column="16">(<expr><name pos:line="260" pos:column="17">debug<pos:position pos:line="260" pos:column="22"/></name></expr>)<pos:position pos:line="260" pos:column="23"/></condition><then pos:line="260" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="261" pos:column="17">fprintf<pos:position pos:line="261" pos:column="24"/></name><argument_list pos:line="261" pos:column="24">(<argument><expr><name pos:line="261" pos:column="25">stderr<pos:position pos:line="261" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="33">"%s| %s: DEBUG: AF %s %s\n"<pos:position pos:line="261" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="261" pos:column="62">LogTime<pos:position pos:line="261" pos:column="69"/></name><argument_list pos:line="261" pos:column="69">()<pos:position pos:line="261" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="261" pos:column="73">PROGRAM<pos:position pos:line="261" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="82">token<pos:position pos:line="261" pos:column="87"/></name></expr></argument>,<argument><expr><name pos:line="261" pos:column="88">user<pos:position pos:line="261" pos:column="92"/></name></expr></argument>)<pos:position pos:line="261" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="94"/></expr_stmt></block></then></if>
            <if pos:line="262" pos:column="13">if <condition pos:line="262" pos:column="16">(<expr><name pos:line="262" pos:column="17">log<pos:position pos:line="262" pos:column="20"/></name></expr>)<pos:position pos:line="262" pos:column="21"/></condition><then pos:line="262" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="263" pos:column="17">fprintf<pos:position pos:line="263" pos:column="24"/></name><argument_list pos:line="263" pos:column="24">(<argument><expr><name pos:line="263" pos:column="25">stderr<pos:position pos:line="263" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="33">"%s| %s: INFO: User %s authenticated\n"<pos:position pos:line="263" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="263" pos:column="74">LogTime<pos:position pos:line="263" pos:column="81"/></name><argument_list pos:line="263" pos:column="81">()<pos:position pos:line="263" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="263" pos:column="85">PROGRAM<pos:position pos:line="263" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="94">user<pos:position pos:line="263" pos:column="98"/></name></expr></argument>)<pos:position pos:line="263" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="100"/></expr_stmt></block></then></if>
            <goto pos:line="264" pos:column="13">goto <name pos:line="264" pos:column="18">cleanup<pos:position pos:line="264" pos:column="25"/></name>;<pos:position pos:line="264" pos:column="26"/></goto>
        }<pos:position pos:line="265" pos:column="10"/></block></then> <else pos:line="265" pos:column="11">else <block pos:line="265" pos:column="16">{
            <if pos:line="266" pos:column="13">if <condition pos:line="266" pos:column="16">(<expr><call><name pos:line="266" pos:column="17">check_gss_err<pos:position pos:line="266" pos:column="30"/></name><argument_list pos:line="266" pos:column="30">(<argument><expr><name pos:line="266" pos:column="31">major_status<pos:position pos:line="266" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="266" pos:column="44">minor_status<pos:position pos:line="266" pos:column="56"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="266" pos:column="57">"gss_accept_sec_context()"<pos:position pos:line="266" pos:column="83"/></literal></expr></argument>,<argument><expr><name pos:line="266" pos:column="84">debug<pos:position pos:line="266" pos:column="89"/></name></expr></argument>,<argument><expr><name pos:line="266" pos:column="90">log<pos:position pos:line="266" pos:column="93"/></name></expr></argument>)<pos:position pos:line="266" pos:column="94"/></argument_list></call></expr> )<pos:position pos:line="266" pos:column="96"/></condition><then pos:line="266" pos:column="96">
                <block type="pseudo"><goto pos:line="267" pos:column="17">goto <name pos:line="267" pos:column="22">cleanup<pos:position pos:line="267" pos:column="29"/></name>;<pos:position pos:line="267" pos:column="30"/></goto></block></then></if>
            <if pos:line="268" pos:column="13">if <condition pos:line="268" pos:column="16">(<expr><name pos:line="268" pos:column="17">major_status<pos:position pos:line="268" pos:column="29"/></name> <operator pos:line="268" pos:column="30">&amp;<pos:position pos:line="268" pos:column="35"/></operator> <name pos:line="268" pos:column="32">GSS_S_CONTINUE_NEEDED<pos:position pos:line="268" pos:column="53"/></name></expr>)<pos:position pos:line="268" pos:column="54"/></condition><then pos:line="268" pos:column="54"> <block pos:line="268" pos:column="55">{
                <if pos:line="269" pos:column="17">if <condition pos:line="269" pos:column="20">(<expr><name pos:line="269" pos:column="21">debug<pos:position pos:line="269" pos:column="26"/></name></expr>)<pos:position pos:line="269" pos:column="27"/></condition><then pos:line="269" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="270" pos:column="21">fprintf<pos:position pos:line="270" pos:column="28"/></name><argument_list pos:line="270" pos:column="28">(<argument><expr><name pos:line="270" pos:column="29">stderr<pos:position pos:line="270" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="37">"%s| %s: INFO: continuation needed\n"<pos:position pos:line="270" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="270" pos:column="76">LogTime<pos:position pos:line="270" pos:column="83"/></name><argument_list pos:line="270" pos:column="83">()<pos:position pos:line="270" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="270" pos:column="87">PROGRAM<pos:position pos:line="270" pos:column="94"/></name></expr></argument>)<pos:position pos:line="270" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="96"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="271" pos:column="17">fprintf<pos:position pos:line="271" pos:column="24"/></name><argument_list pos:line="271" pos:column="24">(<argument><expr><name pos:line="271" pos:column="25">stdout<pos:position pos:line="271" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="33">"NA %s\n"<pos:position pos:line="271" pos:column="42"/></literal></expr></argument>,<argument><expr><name pos:line="271" pos:column="43">token<pos:position pos:line="271" pos:column="48"/></name></expr></argument>)<pos:position pos:line="271" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="50"/></expr_stmt>
                <goto pos:line="272" pos:column="17">goto <name pos:line="272" pos:column="22">cleanup<pos:position pos:line="272" pos:column="29"/></name>;<pos:position pos:line="272" pos:column="30"/></goto>
            }<pos:position pos:line="273" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="274" pos:column="13">gss_release_buffer<pos:position pos:line="274" pos:column="31"/></name><argument_list pos:line="274" pos:column="31">(<argument><expr><operator pos:line="274" pos:column="32">&amp;<pos:position pos:line="274" pos:column="37"/></operator><name pos:line="274" pos:column="33">minor_status<pos:position pos:line="274" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="274" pos:column="47">&amp;<pos:position pos:line="274" pos:column="52"/></operator><name pos:line="274" pos:column="48">output_token<pos:position pos:line="274" pos:column="60"/></name></expr></argument>)<pos:position pos:line="274" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="275" pos:column="13">major_status<pos:position pos:line="275" pos:column="25"/></name> <operator pos:line="275" pos:column="26">=<pos:position pos:line="275" pos:column="27"/></operator> <call><name pos:line="275" pos:column="28">gss_display_name<pos:position pos:line="275" pos:column="44"/></name><argument_list pos:line="275" pos:column="44">(<argument><expr><operator pos:line="275" pos:column="45">&amp;<pos:position pos:line="275" pos:column="50"/></operator><name pos:line="275" pos:column="46">minor_status<pos:position pos:line="275" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="60">client_name<pos:position pos:line="275" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="275" pos:column="73">&amp;<pos:position pos:line="275" pos:column="78"/></operator><name pos:line="275" pos:column="74">output_token<pos:position pos:line="275" pos:column="86"/></name></expr></argument>,
                                            <argument><expr><name pos:line="276" pos:column="45">NULL<pos:position pos:line="276" pos:column="49"/></name></expr></argument>)<pos:position pos:line="276" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="51"/></expr_stmt>

            <if pos:line="278" pos:column="13">if <condition pos:line="278" pos:column="16">(<expr><call><name pos:line="278" pos:column="17">check_gss_err<pos:position pos:line="278" pos:column="30"/></name><argument_list pos:line="278" pos:column="30">(<argument><expr><name pos:line="278" pos:column="31">major_status<pos:position pos:line="278" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="278" pos:column="44">minor_status<pos:position pos:line="278" pos:column="56"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="278" pos:column="57">"gss_display_name()"<pos:position pos:line="278" pos:column="77"/></literal></expr></argument>,<argument><expr><name pos:line="278" pos:column="78">debug<pos:position pos:line="278" pos:column="83"/></name></expr></argument>,<argument><expr><name pos:line="278" pos:column="84">log<pos:position pos:line="278" pos:column="87"/></name></expr></argument>)<pos:position pos:line="278" pos:column="88"/></argument_list></call></expr> )<pos:position pos:line="278" pos:column="90"/></condition><then pos:line="278" pos:column="90">
                <block type="pseudo"><goto pos:line="279" pos:column="17">goto <name pos:line="279" pos:column="22">cleanup<pos:position pos:line="279" pos:column="29"/></name>;<pos:position pos:line="279" pos:column="30"/></goto></block></then></if>
            <comment type="block" pos:line="280" pos:column="13">/*
             *  Return dummy token AA. May need an extra return tag then AF
             */</comment>
            <expr_stmt><expr><name pos:line="283" pos:column="13">user<pos:position pos:line="283" pos:column="17"/></name><operator pos:line="283" pos:column="17">=<pos:position pos:line="283" pos:column="18"/></operator><call><name pos:line="283" pos:column="18">xmalloc<pos:position pos:line="283" pos:column="25"/></name><argument_list pos:line="283" pos:column="25">(<argument><expr><name><name pos:line="283" pos:column="26">output_token<pos:position pos:line="283" pos:column="38"/></name><operator pos:line="283" pos:column="38">.<pos:position pos:line="283" pos:column="39"/></operator><name pos:line="283" pos:column="39">length<pos:position pos:line="283" pos:column="45"/></name></name><operator pos:line="283" pos:column="45">+<pos:position pos:line="283" pos:column="46"/></operator><literal type="number" pos:line="283" pos:column="46">1<pos:position pos:line="283" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="49"/></expr_stmt>
            <if pos:line="284" pos:column="13">if <condition pos:line="284" pos:column="16">(<expr><name pos:line="284" pos:column="17">user<pos:position pos:line="284" pos:column="21"/></name> <operator pos:line="284" pos:column="22">==<pos:position pos:line="284" pos:column="24"/></operator> <name pos:line="284" pos:column="25">NULL<pos:position pos:line="284" pos:column="29"/></name></expr>)<pos:position pos:line="284" pos:column="30"/></condition><then pos:line="284" pos:column="30"> <block pos:line="284" pos:column="31">{
                <if pos:line="285" pos:column="17">if <condition pos:line="285" pos:column="20">(<expr><name pos:line="285" pos:column="21">debug<pos:position pos:line="285" pos:column="26"/></name></expr>)<pos:position pos:line="285" pos:column="27"/></condition><then pos:line="285" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="286" pos:column="21">fprintf<pos:position pos:line="286" pos:column="28"/></name><argument_list pos:line="286" pos:column="28">(<argument><expr><name pos:line="286" pos:column="29">stderr<pos:position pos:line="286" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="37">"%s| %s: ERROR: Not enough memory\n"<pos:position pos:line="286" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="286" pos:column="75">LogTime<pos:position pos:line="286" pos:column="82"/></name><argument_list pos:line="286" pos:column="82">()<pos:position pos:line="286" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="286" pos:column="86">PROGRAM<pos:position pos:line="286" pos:column="93"/></name></expr></argument>)<pos:position pos:line="286" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="95"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="287" pos:column="17">fprintf<pos:position pos:line="287" pos:column="24"/></name><argument_list pos:line="287" pos:column="24">(<argument><expr><name pos:line="287" pos:column="25">stdout<pos:position pos:line="287" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="287" pos:column="33">"BH Not enough memory\n"<pos:position pos:line="287" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="287" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="59"/></expr_stmt>
                <goto pos:line="288" pos:column="17">goto <name pos:line="288" pos:column="22">cleanup<pos:position pos:line="288" pos:column="29"/></name>;<pos:position pos:line="288" pos:column="30"/></goto>
            }<pos:position pos:line="289" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="290" pos:column="13">memcpy<pos:position pos:line="290" pos:column="19"/></name><argument_list pos:line="290" pos:column="19">(<argument><expr><name pos:line="290" pos:column="20">user<pos:position pos:line="290" pos:column="24"/></name></expr></argument>,<argument><expr><name><name pos:line="290" pos:column="25">output_token<pos:position pos:line="290" pos:column="37"/></name><operator pos:line="290" pos:column="37">.<pos:position pos:line="290" pos:column="38"/></operator><name pos:line="290" pos:column="38">value<pos:position pos:line="290" pos:column="43"/></name></name></expr></argument>,<argument><expr><name><name pos:line="290" pos:column="44">output_token<pos:position pos:line="290" pos:column="56"/></name><operator pos:line="290" pos:column="56">.<pos:position pos:line="290" pos:column="57"/></operator><name pos:line="290" pos:column="57">length<pos:position pos:line="290" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="290" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="291" pos:column="13">user<pos:position pos:line="291" pos:column="17"/></name><index pos:line="291" pos:column="17">[<expr><name><name pos:line="291" pos:column="18">output_token<pos:position pos:line="291" pos:column="30"/></name><operator pos:line="291" pos:column="30">.<pos:position pos:line="291" pos:column="31"/></operator><name pos:line="291" pos:column="31">length<pos:position pos:line="291" pos:column="37"/></name></name></expr>]<pos:position pos:line="291" pos:column="38"/></index></name><operator pos:line="291" pos:column="38">=<pos:position pos:line="291" pos:column="39"/></operator><literal type="char" pos:line="291" pos:column="39">'\0'<pos:position pos:line="291" pos:column="43"/></literal></expr>;<pos:position pos:line="291" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="292" pos:column="13">fprintf<pos:position pos:line="292" pos:column="20"/></name><argument_list pos:line="292" pos:column="20">(<argument><expr><name pos:line="292" pos:column="21">stdout<pos:position pos:line="292" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="29">"AF %s %s\n"<pos:position pos:line="292" pos:column="41"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="292" pos:column="42">"AA=="<pos:position pos:line="292" pos:column="48"/></literal></expr></argument>,<argument><expr><name pos:line="292" pos:column="49">user<pos:position pos:line="292" pos:column="53"/></name></expr></argument>)<pos:position pos:line="292" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="55"/></expr_stmt>
            <if pos:line="293" pos:column="13">if <condition pos:line="293" pos:column="16">(<expr><name pos:line="293" pos:column="17">debug<pos:position pos:line="293" pos:column="22"/></name></expr>)<pos:position pos:line="293" pos:column="23"/></condition><then pos:line="293" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="294" pos:column="17">fprintf<pos:position pos:line="294" pos:column="24"/></name><argument_list pos:line="294" pos:column="24">(<argument><expr><name pos:line="294" pos:column="25">stderr<pos:position pos:line="294" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="33">"%s| %s: DEBUG: AF %s %s\n"<pos:position pos:line="294" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="294" pos:column="62">LogTime<pos:position pos:line="294" pos:column="69"/></name><argument_list pos:line="294" pos:column="69">()<pos:position pos:line="294" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="294" pos:column="73">PROGRAM<pos:position pos:line="294" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="82">"AA=="<pos:position pos:line="294" pos:column="88"/></literal></expr></argument>, <argument><expr><name pos:line="294" pos:column="90">user<pos:position pos:line="294" pos:column="94"/></name></expr></argument>)<pos:position pos:line="294" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="96"/></expr_stmt></block></then></if>
            <if pos:line="295" pos:column="13">if <condition pos:line="295" pos:column="16">(<expr><name pos:line="295" pos:column="17">log<pos:position pos:line="295" pos:column="20"/></name></expr>)<pos:position pos:line="295" pos:column="21"/></condition><then pos:line="295" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="296" pos:column="17">fprintf<pos:position pos:line="296" pos:column="24"/></name><argument_list pos:line="296" pos:column="24">(<argument><expr><name pos:line="296" pos:column="25">stderr<pos:position pos:line="296" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="33">"%s| %s: INFO: User %s authenticated\n"<pos:position pos:line="296" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="296" pos:column="74">LogTime<pos:position pos:line="296" pos:column="81"/></name><argument_list pos:line="296" pos:column="81">()<pos:position pos:line="296" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="296" pos:column="85">PROGRAM<pos:position pos:line="296" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="94">user<pos:position pos:line="296" pos:column="98"/></name></expr></argument>)<pos:position pos:line="296" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="100"/></expr_stmt></block></then></if>

<label><name pos:line="298" pos:column="1">cleanup<pos:position pos:line="298" pos:column="8"/></name>:<pos:position pos:line="298" pos:column="9"/></label>
            <expr_stmt><expr><call><name pos:line="299" pos:column="13">gss_release_buffer<pos:position pos:line="299" pos:column="31"/></name><argument_list pos:line="299" pos:column="31">(<argument><expr><operator pos:line="299" pos:column="32">&amp;<pos:position pos:line="299" pos:column="37"/></operator><name pos:line="299" pos:column="33">minor_status<pos:position pos:line="299" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="299" pos:column="47">&amp;<pos:position pos:line="299" pos:column="52"/></operator><name pos:line="299" pos:column="48">input_token<pos:position pos:line="299" pos:column="59"/></name></expr></argument>)<pos:position pos:line="299" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="300" pos:column="13">gss_release_buffer<pos:position pos:line="300" pos:column="31"/></name><argument_list pos:line="300" pos:column="31">(<argument><expr><operator pos:line="300" pos:column="32">&amp;<pos:position pos:line="300" pos:column="37"/></operator><name pos:line="300" pos:column="33">minor_status<pos:position pos:line="300" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="300" pos:column="47">&amp;<pos:position pos:line="300" pos:column="52"/></operator><name pos:line="300" pos:column="48">output_token<pos:position pos:line="300" pos:column="60"/></name></expr></argument>)<pos:position pos:line="300" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="301" pos:column="13">gss_release_cred<pos:position pos:line="301" pos:column="29"/></name><argument_list pos:line="301" pos:column="29">(<argument><expr><operator pos:line="301" pos:column="30">&amp;<pos:position pos:line="301" pos:column="35"/></operator><name pos:line="301" pos:column="31">minor_status<pos:position pos:line="301" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="301" pos:column="45">&amp;<pos:position pos:line="301" pos:column="50"/></operator><name pos:line="301" pos:column="46">server_creds<pos:position pos:line="301" pos:column="58"/></name></expr></argument>)<pos:position pos:line="301" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="60"/></expr_stmt>
            <if pos:line="302" pos:column="13">if <condition pos:line="302" pos:column="16">(<expr><name pos:line="302" pos:column="17">server_name<pos:position pos:line="302" pos:column="28"/></name></expr>)<pos:position pos:line="302" pos:column="29"/></condition><then pos:line="302" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="303" pos:column="17">gss_release_name<pos:position pos:line="303" pos:column="33"/></name><argument_list pos:line="303" pos:column="33">(<argument><expr><operator pos:line="303" pos:column="34">&amp;<pos:position pos:line="303" pos:column="39"/></operator><name pos:line="303" pos:column="35">minor_status<pos:position pos:line="303" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="303" pos:column="49">&amp;<pos:position pos:line="303" pos:column="54"/></operator><name pos:line="303" pos:column="50">server_name<pos:position pos:line="303" pos:column="61"/></name></expr></argument>)<pos:position pos:line="303" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="63"/></expr_stmt></block></then></if>
            <if pos:line="304" pos:column="13">if <condition pos:line="304" pos:column="16">(<expr><name pos:line="304" pos:column="17">client_name<pos:position pos:line="304" pos:column="28"/></name></expr>)<pos:position pos:line="304" pos:column="29"/></condition><then pos:line="304" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="305" pos:column="17">gss_release_name<pos:position pos:line="305" pos:column="33"/></name><argument_list pos:line="305" pos:column="33">(<argument><expr><operator pos:line="305" pos:column="34">&amp;<pos:position pos:line="305" pos:column="39"/></operator><name pos:line="305" pos:column="35">minor_status<pos:position pos:line="305" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="305" pos:column="49">&amp;<pos:position pos:line="305" pos:column="54"/></operator><name pos:line="305" pos:column="50">client_name<pos:position pos:line="305" pos:column="61"/></name></expr></argument>)<pos:position pos:line="305" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="63"/></expr_stmt></block></then></if>
            <if pos:line="306" pos:column="13">if <condition pos:line="306" pos:column="16">(<expr><name pos:line="306" pos:column="17">kerberosToken<pos:position pos:line="306" pos:column="30"/></name></expr>)<pos:position pos:line="306" pos:column="31"/></condition><then pos:line="306" pos:column="31"> <block pos:line="306" pos:column="32">{
                <comment type="block" pos:line="307" pos:column="17">/* Allocated by parseNegTokenInit, but no matching free function exists.. */</comment>
                <if pos:line="308" pos:column="17">if <condition pos:line="308" pos:column="20">(<expr><operator pos:line="308" pos:column="21">!<pos:position pos:line="308" pos:column="22"/></operator><name pos:line="308" pos:column="22">spnego_flag<pos:position pos:line="308" pos:column="33"/></name></expr>)<pos:position pos:line="308" pos:column="34"/></condition><then pos:line="308" pos:column="34">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="309" pos:column="21">xfree<pos:position pos:line="309" pos:column="26"/></name><argument_list pos:line="309" pos:column="26">(<argument><expr><operator pos:line="309" pos:column="27">(<pos:position pos:line="309" pos:column="28"/></operator><name pos:line="309" pos:column="28">char<pos:position pos:line="309" pos:column="32"/></name> <operator pos:line="309" pos:column="33">*<pos:position pos:line="309" pos:column="34"/></operator><operator pos:line="309" pos:column="34">)<pos:position pos:line="309" pos:column="35"/></operator><name pos:line="309" pos:column="35">kerberosToken<pos:position pos:line="309" pos:column="48"/></name></expr></argument>)<pos:position pos:line="309" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="50"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="310" pos:column="17">kerberosToken<pos:position pos:line="310" pos:column="30"/></name><operator pos:line="310" pos:column="30">=<pos:position pos:line="310" pos:column="31"/></operator><name pos:line="310" pos:column="31">NULL<pos:position pos:line="310" pos:column="35"/></name></expr>;<pos:position pos:line="310" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="311" pos:column="14"/></block></then></if>
            <if pos:line="312" pos:column="13">if <condition pos:line="312" pos:column="16">(<expr><name pos:line="312" pos:column="17">spnego_flag<pos:position pos:line="312" pos:column="28"/></name></expr>)<pos:position pos:line="312" pos:column="29"/></condition><then pos:line="312" pos:column="29"> <block pos:line="312" pos:column="30">{
                <comment type="block" pos:line="313" pos:column="17">/* Allocated by makeNegTokenTarg, but no matching free function exists.. */</comment>
                <if pos:line="314" pos:column="17">if <condition pos:line="314" pos:column="20">(<expr><name pos:line="314" pos:column="21">spnegoToken<pos:position pos:line="314" pos:column="32"/></name></expr>)<pos:position pos:line="314" pos:column="33"/></condition><then pos:line="314" pos:column="33">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="315" pos:column="21">xfree<pos:position pos:line="315" pos:column="26"/></name><argument_list pos:line="315" pos:column="26">(<argument><expr><operator pos:line="315" pos:column="27">(<pos:position pos:line="315" pos:column="28"/></operator><name pos:line="315" pos:column="28">char<pos:position pos:line="315" pos:column="32"/></name> <operator pos:line="315" pos:column="33">*<pos:position pos:line="315" pos:column="34"/></operator><operator pos:line="315" pos:column="34">)<pos:position pos:line="315" pos:column="35"/></operator><name pos:line="315" pos:column="35">spnegoToken<pos:position pos:line="315" pos:column="46"/></name></expr></argument>)<pos:position pos:line="315" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="48"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="316" pos:column="17">spnegoToken<pos:position pos:line="316" pos:column="28"/></name><operator pos:line="316" pos:column="28">=<pos:position pos:line="316" pos:column="29"/></operator><name pos:line="316" pos:column="29">NULL<pos:position pos:line="316" pos:column="33"/></name></expr>;<pos:position pos:line="316" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="317" pos:column="14"/></block></then></if>
            <if pos:line="318" pos:column="13">if <condition pos:line="318" pos:column="16">(<expr><name pos:line="318" pos:column="17">token<pos:position pos:line="318" pos:column="22"/></name></expr>)<pos:position pos:line="318" pos:column="23"/></condition><then pos:line="318" pos:column="23"> <block pos:line="318" pos:column="24">{
                <expr_stmt><expr><call><name pos:line="319" pos:column="17">xfree<pos:position pos:line="319" pos:column="22"/></name><argument_list pos:line="319" pos:column="22">(<argument><expr><name pos:line="319" pos:column="23">token<pos:position pos:line="319" pos:column="28"/></name></expr></argument>)<pos:position pos:line="319" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="320" pos:column="17">token<pos:position pos:line="320" pos:column="22"/></name><operator pos:line="320" pos:column="22">=<pos:position pos:line="320" pos:column="23"/></operator><name pos:line="320" pos:column="23">NULL<pos:position pos:line="320" pos:column="27"/></name></expr>;<pos:position pos:line="320" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="321" pos:column="14"/></block></then></if>
            <if pos:line="322" pos:column="13">if <condition pos:line="322" pos:column="16">(<expr><name pos:line="322" pos:column="17">user<pos:position pos:line="322" pos:column="21"/></name></expr>)<pos:position pos:line="322" pos:column="22"/></condition><then pos:line="322" pos:column="22"> <block pos:line="322" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="323" pos:column="17">xfree<pos:position pos:line="323" pos:column="22"/></name><argument_list pos:line="323" pos:column="22">(<argument><expr><name pos:line="323" pos:column="23">user<pos:position pos:line="323" pos:column="27"/></name></expr></argument>)<pos:position pos:line="323" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="324" pos:column="17">user<pos:position pos:line="324" pos:column="21"/></name><operator pos:line="324" pos:column="21">=<pos:position pos:line="324" pos:column="22"/></operator><name pos:line="324" pos:column="22">NULL<pos:position pos:line="324" pos:column="26"/></name></expr>;<pos:position pos:line="324" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="325" pos:column="14"/></block></then></if>
            <continue pos:line="326" pos:column="13">continue;<pos:position pos:line="326" pos:column="22"/></continue>
        }<pos:position pos:line="327" pos:column="10"/></block></else></if>
    }<pos:position pos:line="328" pos:column="6"/></block></while>
}<pos:position pos:line="329" pos:column="2"/></block></function></unit>

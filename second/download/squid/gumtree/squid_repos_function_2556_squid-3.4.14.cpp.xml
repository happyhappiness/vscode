<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2556_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">handleControlReply<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">wordlist<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier><modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">W<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">bytes_used<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">wordlistDestroy<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">&amp;<pos:position pos:line="6" pos:column="26"/></operator><name><name pos:line="6" pos:column="22">ctrl<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">message<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">ctrl<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">.<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">message<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">ftpParseControlReply<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name><name pos:line="7" pos:column="41">ctrl<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">buf<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="8" pos:column="41">ctrl<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">offset<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator><name><name pos:line="8" pos:column="55">ctrl<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">replycode<pos:position pos:line="8" pos:column="69"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="71">&amp;<pos:position pos:line="8" pos:column="76"/></operator><name pos:line="8" pos:column="72">bytes_used<pos:position pos:line="8" pos:column="82"/></name></expr></argument>)<pos:position pos:line="8" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="84"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">ctrl<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">.<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">message<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">==<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30"> <block pos:line="10" pos:column="31">{
        <comment type="block" pos:line="11" pos:column="9">/* didn't get complete reply yet */</comment>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">ctrl<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">offset<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">==<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="28">ctrl<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">size<pos:position pos:line="13" pos:column="37"/></name></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <block pos:line="13" pos:column="39">{
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">ctrl<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">buf<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">char<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></operator><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator><call><name pos:line="14" pos:column="32">memReallocBuf<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name><name pos:line="14" pos:column="46">ctrl<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">.<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="51">buf<pos:position pos:line="14" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="56">ctrl<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">.<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">size<pos:position pos:line="14" pos:column="65"/></name></name> <operator pos:line="14" pos:column="66">&lt;&lt;<pos:position pos:line="14" pos:column="74"/></operator> <literal type="number" pos:line="14" pos:column="69">1<pos:position pos:line="14" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="72">&amp;<pos:position pos:line="14" pos:column="77"/></operator><name><name pos:line="14" pos:column="73">ctrl<pos:position pos:line="14" pos:column="77"/></name><operator pos:line="14" pos:column="77">.<pos:position pos:line="14" pos:column="78"/></operator><name pos:line="14" pos:column="78">size<pos:position pos:line="14" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">scheduleReadControlReply<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><literal type="number" pos:line="17" pos:column="34">0<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <elseif pos:line="19" pos:column="7">else <if pos:line="19" pos:column="12">if <condition pos:line="19" pos:column="15">(<expr><name><name pos:line="19" pos:column="16">ctrl<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">offset<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">==<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">bytes_used<pos:position pos:line="19" pos:column="41"/></name></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <block pos:line="19" pos:column="43">{
        <comment type="block" pos:line="20" pos:column="9">/* used it all up */</comment>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">ctrl<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">.<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">offset<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if></elseif> <else pos:line="22" pos:column="7">else <block pos:line="22" pos:column="12">{
        <comment type="block" pos:line="23" pos:column="9">/* Got some data past the complete reply */</comment>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">assert<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">bytes_used<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">&lt;<pos:position pos:line="24" pos:column="31"/></operator> <name><name pos:line="24" pos:column="29">ctrl<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">offset<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">ctrl<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">offset<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">-=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">bytes_used<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">memmove<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name><name pos:line="26" pos:column="17">ctrl<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">.<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">buf<pos:position pos:line="26" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="27">ctrl<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">buf<pos:position pos:line="26" pos:column="35"/></name></name> <operator pos:line="26" pos:column="36">+<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">bytes_used<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">ctrl<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">offset<pos:position pos:line="26" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="29" pos:column="5">/* Move the last line of the reply message to ctrl.last_reply */</comment>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">W<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <operator pos:line="30" pos:column="14">&amp;<pos:position pos:line="30" pos:column="19"/></operator><name><name pos:line="30" pos:column="15">ctrl<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">message<pos:position pos:line="30" pos:column="27"/></name></name></expr>;<pos:position pos:line="30" pos:column="28"/></init> <condition><expr><name><operator pos:line="30" pos:column="29">(<pos:position pos:line="30" pos:column="30"/></operator><operator pos:line="30" pos:column="30">*<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">W<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">)<pos:position pos:line="30" pos:column="33"/></operator><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">next<pos:position pos:line="30" pos:column="39"/></name></name></expr>;<pos:position pos:line="30" pos:column="40"/></condition> <incr><expr><name pos:line="30" pos:column="41">W<pos:position pos:line="30" pos:column="42"/></name> <operator pos:line="30" pos:column="43">=<pos:position pos:line="30" pos:column="44"/></operator> <operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name><operator pos:line="30" pos:column="46">(<pos:position pos:line="30" pos:column="47"/></operator><operator pos:line="30" pos:column="47">*<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="48">W<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">)<pos:position pos:line="30" pos:column="50"/></operator><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">next<pos:position pos:line="30" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="57"/></control><block type="pseudo"><empty_stmt pos:line="30" pos:column="57">;<pos:position pos:line="30" pos:column="58"/></empty_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">safe_free<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name><name pos:line="31" pos:column="15">ctrl<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">last_reply<pos:position pos:line="31" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">ctrl<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">.<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">last_reply<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">xstrdup<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name><operator pos:line="33" pos:column="31">(<pos:position pos:line="33" pos:column="32"/></operator><operator pos:line="33" pos:column="32">*<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">W<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">)<pos:position pos:line="33" pos:column="35"/></operator><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">key<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">wordlistDestroy<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">W<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* Copy the rest of the message to cwd_message to be printed in
     * error messages
     */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">ctrl<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">.<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">message<pos:position pos:line="40" pos:column="21"/></name></name></expr>)<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <block pos:line="40" pos:column="23">{
        <for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><decl><type><name pos:line="41" pos:column="14">wordlist<pos:position pos:line="41" pos:column="22"/></name> <modifier pos:line="41" pos:column="23">*<pos:position pos:line="41" pos:column="24"/></modifier></type><name pos:line="41" pos:column="24">w<pos:position pos:line="41" pos:column="25"/></name> <init pos:line="41" pos:column="26">= <expr><name><name pos:line="41" pos:column="28">ctrl<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">.<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">message<pos:position pos:line="41" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="41"/></init> <condition><expr><name pos:line="41" pos:column="42">w<pos:position pos:line="41" pos:column="43"/></name></expr>;<pos:position pos:line="41" pos:column="44"/></condition> <incr><expr><name pos:line="41" pos:column="45">w<pos:position pos:line="41" pos:column="46"/></name> <operator pos:line="41" pos:column="47">=<pos:position pos:line="41" pos:column="48"/></operator> <name><name pos:line="41" pos:column="49">w<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">-&gt;<pos:position pos:line="41" pos:column="55"/></operator><name pos:line="41" pos:column="52">next<pos:position pos:line="41" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="41" pos:column="57"/></control> <block pos:line="41" pos:column="58">{
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">cwd_message<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">.<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">append<pos:position pos:line="42" pos:column="31"/></name></name><argument_list pos:line="42" pos:column="31">(<argument><expr><literal type="char" pos:line="42" pos:column="32">'\n'<pos:position pos:line="42" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">cwd_message<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">.<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">append<pos:position pos:line="43" pos:column="31"/></name></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name><name pos:line="43" pos:column="32">w<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">key<pos:position pos:line="43" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></for>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">debugs<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><literal type="number" pos:line="47" pos:column="12">9<pos:position pos:line="47" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="15">3<pos:position pos:line="47" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="18">HERE<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">&lt;&lt;<pos:position pos:line="47" pos:column="31"/></operator> <literal type="string" pos:line="47" pos:column="26">"state="<pos:position pos:line="47" pos:column="34"/></literal> <operator pos:line="47" pos:column="35">&lt;&lt;<pos:position pos:line="47" pos:column="43"/></operator> <name pos:line="47" pos:column="38">state<pos:position pos:line="47" pos:column="43"/></name> <operator pos:line="47" pos:column="44">&lt;&lt;<pos:position pos:line="47" pos:column="52"/></operator> <literal type="string" pos:line="47" pos:column="47">", code="<pos:position pos:line="47" pos:column="56"/></literal> <operator pos:line="47" pos:column="57">&lt;&lt;<pos:position pos:line="47" pos:column="65"/></operator> <name><name pos:line="47" pos:column="60">ctrl<pos:position pos:line="47" pos:column="64"/></name><operator pos:line="47" pos:column="64">.<pos:position pos:line="47" pos:column="65"/></operator><name pos:line="47" pos:column="65">replycode<pos:position pos:line="47" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">FTP_SM_FUNCS<pos:position pos:line="49" pos:column="17"/></name><index pos:line="49" pos:column="17">[<expr><name pos:line="49" pos:column="18">state<pos:position pos:line="49" pos:column="23"/></name></expr>]<pos:position pos:line="49" pos:column="24"/></index></name> <operator pos:line="49" pos:column="25">(<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="26">this<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">)<pos:position pos:line="49" pos:column="31"/></operator></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

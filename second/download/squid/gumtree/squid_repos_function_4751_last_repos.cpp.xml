<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4751_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SBuf<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">reAlloc<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">size_type<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">newsize<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">24<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">8<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">id<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&lt;&lt;<pos:position pos:line="4" pos:column="30"/></operator> <literal type="string" pos:line="4" pos:column="25">" new size: "<pos:position pos:line="4" pos:column="38"/></literal> <operator pos:line="4" pos:column="39">&lt;&lt;<pos:position pos:line="4" pos:column="47"/></operator> <name pos:line="4" pos:column="42">newsize<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">newsize<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&gt;<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="19">maxSize<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27">
        <block type="pseudo"><throw pos:line="6" pos:column="9">throw <expr><call><name pos:line="6" pos:column="15">SBufTooBigException<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">__FILE__<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">__LINE__<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></throw></block></then></if>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">MemBlob<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">::<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">Pointer<pos:position pos:line="7" pos:column="21"/></name></name></type> <name pos:line="7" pos:column="22">newbuf<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><operator pos:line="7" pos:column="31">new<pos:position pos:line="7" pos:column="34"/></operator> <call><name pos:line="7" pos:column="35">MemBlob<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">newsize<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">length<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">()<pos:position pos:line="8" pos:column="17"/></argument_list></call> <operator pos:line="8" pos:column="18">&gt;<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="9">newbuf<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">append<pos:position pos:line="9" pos:column="23"/></name></name><argument_list pos:line="9" pos:column="23">(<argument><expr><call><name pos:line="9" pos:column="24">buf<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">()<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="31">length<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">()<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">store_<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">newbuf<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">off_<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="12" pos:column="5">++<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">stats<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">cowSlow<pos:position pos:line="12" pos:column="20"/></name></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">24<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">7<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">id<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&lt;&lt;<pos:position pos:line="13" pos:column="30"/></operator> <literal type="string" pos:line="13" pos:column="25">" new store capacity: "<pos:position pos:line="13" pos:column="48"/></literal> <operator pos:line="13" pos:column="49">&lt;&lt;<pos:position pos:line="13" pos:column="57"/></operator> <name><name pos:line="13" pos:column="52">store_<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">capacity<pos:position pos:line="13" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

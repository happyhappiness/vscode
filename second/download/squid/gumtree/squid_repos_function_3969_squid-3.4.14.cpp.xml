<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3969_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">RegisterAdapterService<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name><name pos:line="2" pos:column="48">Adaptation<pos:position pos:line="2" pos:column="58"/></name><operator pos:line="2" pos:column="58">::<pos:position pos:line="2" pos:column="60"/></operator><name pos:line="2" pos:column="60">Ecap<pos:position pos:line="2" pos:column="64"/></name><operator pos:line="2" pos:column="64">::<pos:position pos:line="2" pos:column="66"/></operator><name pos:line="2" pos:column="66">ServiceRep<pos:position pos:line="2" pos:column="76"/></name><operator pos:line="2" pos:column="76">::<pos:position pos:line="2" pos:column="78"/></operator><name pos:line="2" pos:column="78">AdapterService<pos:position pos:line="2" pos:column="92"/></name></name><modifier pos:line="2" pos:column="92">&amp;<pos:position pos:line="2" pos:column="97"/></modifier></type> <name pos:line="2" pos:column="94">adapterService<pos:position pos:line="2" pos:column="108"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="109"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <typedef pos:line="4" pos:column="5">typedef <type><name><name pos:line="4" pos:column="13">std<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">::<pos:position pos:line="4" pos:column="18"/></operator><name><name pos:line="4" pos:column="18">list<pos:position pos:line="4" pos:column="22"/></name><argument_list type="generic" pos:line="4" pos:column="22">&lt;<argument><expr><name><name pos:line="4" pos:column="23">ServiceRep<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">::<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">AdapterService<pos:position pos:line="4" pos:column="49"/></name></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="53"/></argument_list></name><operator pos:line="4" pos:column="50">::<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">iterator<pos:position pos:line="4" pos:column="60"/></name></name></type> <name pos:line="4" pos:column="61">ASI<pos:position pos:line="4" pos:column="64"/></name>;<pos:position pos:line="4" pos:column="65"/></typedef>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">ASI<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">s<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><call><name><name pos:line="5" pos:column="18">TheServices<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">begin<pos:position pos:line="5" pos:column="35"/></name></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></init> <condition><expr><name pos:line="5" pos:column="39">s<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">!=<pos:position pos:line="5" pos:column="43"/></operator> <call><name><name pos:line="5" pos:column="44">TheServices<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">.<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="56">end<pos:position pos:line="5" pos:column="59"/></name></name><argument_list pos:line="5" pos:column="59">()<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="62"/></condition> <incr><expr><operator pos:line="5" pos:column="63">++<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="65">s<pos:position pos:line="5" pos:column="66"/></name></expr></incr>)<pos:position pos:line="5" pos:column="67"/></control> <block pos:line="5" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">Must<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">s<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name><name pos:line="7" pos:column="13">adapterService<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">uri<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call> <operator pos:line="7" pos:column="35">==<pos:position pos:line="7" pos:column="37"/></operator> <call><name><operator pos:line="7" pos:column="38">(<pos:position pos:line="7" pos:column="39"/></operator><operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">s<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">uri<pos:position pos:line="7" pos:column="47"/></name></name><argument_list pos:line="7" pos:column="47">()<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50"> <block pos:line="7" pos:column="51">{
            <expr_stmt><expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">s<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">adapterService<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">93<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="24">3<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="27">"updated eCAP module service: "<pos:position pos:line="9" pos:column="58"/></literal> <operator pos:line="9" pos:column="59">&lt;&lt;<pos:position pos:line="9" pos:column="67"/></operator>
                   <call><name><name pos:line="10" pos:column="20">adapterService<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">uri<pos:position pos:line="10" pos:column="39"/></name></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
            <return pos:line="11" pos:column="13">return;<pos:position pos:line="11" pos:column="20"/></return>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">TheServices<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">.<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">push_back<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">adapterService<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">93<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">3<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"registered eCAP module service: "<pos:position pos:line="15" pos:column="53"/></literal> <operator pos:line="15" pos:column="54">&lt;&lt;<pos:position pos:line="15" pos:column="62"/></operator> <call><name><name pos:line="15" pos:column="57">adapterService<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">-&gt;<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="73">uri<pos:position pos:line="15" pos:column="76"/></name></name><argument_list pos:line="15" pos:column="76">()<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4091_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">makeUsernameHeader<pos:position pos:line="1" pos:column="51"/></name></name><parameter_list pos:line="1" pos:column="51">(<parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">HttpRequest<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">request<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="80">MemBuf<pos:position pos:line="1" pos:column="86"/></name> <modifier pos:line="1" pos:column="87">&amp;<pos:position pos:line="1" pos:column="92"/></modifier></type><name pos:line="1" pos:column="88">buf<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="92"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">USE_AUTH<pos:position pos:line="3" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">request<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">auth_user_request<pos:position pos:line="4" pos:column="35"/></name></name> <operator pos:line="4" pos:column="36">!=<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr>)<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44"> <block pos:line="4" pos:column="45">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <specifier pos:line="5" pos:column="14">const<pos:position pos:line="5" pos:column="19"/></specifier> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">name<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name><name pos:line="5" pos:column="28">request<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">auth_user_request<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">-&gt;<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="56">username<pos:position pos:line="5" pos:column="64"/></name></name><argument_list pos:line="5" pos:column="64">()<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="67"/></decl_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">name<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18"> <block pos:line="6" pos:column="19">{
            <decl_stmt><decl><type><specifier pos:line="7" pos:column="13">const<pos:position pos:line="7" pos:column="18"/></specifier> <name pos:line="7" pos:column="19">char<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">value<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><ternary><condition><expr><name><name pos:line="7" pos:column="33">TheConfig<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">client_username_encode<pos:position pos:line="7" pos:column="65"/></name></name></expr> ?<pos:position pos:line="7" pos:column="67"/></condition><then pos:line="7" pos:column="67"> <expr><call><name pos:line="7" pos:column="68">old_base64_encode<pos:position pos:line="7" pos:column="85"/></name><argument_list pos:line="7" pos:column="85">(<argument><expr><name pos:line="7" pos:column="86">name<pos:position pos:line="7" pos:column="90"/></name></expr></argument>)<pos:position pos:line="7" pos:column="91"/></argument_list></call></expr> <pos:position pos:line="7" pos:column="92"/></then><else pos:line="7" pos:column="92">: <expr><name pos:line="7" pos:column="94">name<pos:position pos:line="7" pos:column="98"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="99"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="8" pos:column="13">buf<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">Printf<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">(<argument><expr><literal type="string" pos:line="8" pos:column="24">"%s: %s\r\n"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="38">TheConfig<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">.<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">client_username_header<pos:position pos:line="8" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="72">value<pos:position pos:line="8" pos:column="77"/></name></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <elseif pos:line="10" pos:column="7">else <if pos:line="10" pos:column="12">if <condition pos:line="10" pos:column="15">(<expr><call><name><name pos:line="10" pos:column="16">request<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">extacl_user<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">.<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">defined<pos:position pos:line="10" pos:column="44"/></name></name><argument_list pos:line="10" pos:column="44">()<pos:position pos:line="10" pos:column="46"/></argument_list></call> <operator pos:line="10" pos:column="47">&amp;&amp;<pos:position pos:line="10" pos:column="57"/></operator> <call><name><name pos:line="10" pos:column="50">request<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">extacl_user<pos:position pos:line="10" pos:column="70"/></name><operator pos:line="10" pos:column="70">.<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="71">size<pos:position pos:line="10" pos:column="75"/></name></name><argument_list pos:line="10" pos:column="75">()<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="78"/></condition><then pos:line="10" pos:column="78"> <block pos:line="10" pos:column="79">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">value<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><ternary><condition><expr><name><name pos:line="11" pos:column="29">TheConfig<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">client_username_encode<pos:position pos:line="11" pos:column="61"/></name></name></expr> ?<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63"> <expr><call><name pos:line="11" pos:column="64">old_base64_encode<pos:position pos:line="11" pos:column="81"/></name><argument_list pos:line="11" pos:column="81">(<argument><expr><call><name><name pos:line="11" pos:column="82">request<pos:position pos:line="11" pos:column="89"/></name><operator pos:line="11" pos:column="89">-&gt;<pos:position pos:line="11" pos:column="94"/></operator><name pos:line="11" pos:column="91">extacl_user<pos:position pos:line="11" pos:column="102"/></name><operator pos:line="11" pos:column="102">.<pos:position pos:line="11" pos:column="103"/></operator><name pos:line="11" pos:column="103">termedBuf<pos:position pos:line="11" pos:column="112"/></name></name><argument_list pos:line="11" pos:column="112">()<pos:position pos:line="11" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="115"/></argument_list></call></expr> <pos:position pos:line="11" pos:column="116"/></then><else pos:line="11" pos:column="116">: <expr><call><name><name pos:line="11" pos:column="118">request<pos:position pos:line="11" pos:column="125"/></name><operator pos:line="11" pos:column="125">-&gt;<pos:position pos:line="11" pos:column="130"/></operator><name pos:line="11" pos:column="127">extacl_user<pos:position pos:line="11" pos:column="138"/></name><operator pos:line="11" pos:column="138">.<pos:position pos:line="11" pos:column="139"/></operator><name pos:line="11" pos:column="139">termedBuf<pos:position pos:line="11" pos:column="148"/></name></name><argument_list pos:line="11" pos:column="148">()<pos:position pos:line="11" pos:column="150"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="151"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">buf<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">Printf<pos:position pos:line="12" pos:column="19"/></name></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="string" pos:line="12" pos:column="20">"%s: %s\r\n"<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="34">TheConfig<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">client_username_header<pos:position pos:line="12" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="68">value<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if></elseif></if>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1125_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parse_time_t<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">time_t<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type> <name pos:line="2" pos:column="23">var<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">time_msec_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">tval<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">parseTimeLine<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><operator pos:line="5" pos:column="19">&amp;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="20">tval<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">T_SECOND_STR<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="5" pos:column="40">false<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="6" pos:column="5">*<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">var<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <cast type="static" pos:line="6" pos:column="12">static_cast<argument_list type="generic" pos:line="6" pos:column="23">&lt;<argument><expr><name pos:line="6" pos:column="24">time_t<pos:position pos:line="6" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="34"/></argument_list><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">tval<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">/<pos:position pos:line="6" pos:column="37"/></operator><literal type="number" pos:line="6" pos:column="37">1000<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></cast></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

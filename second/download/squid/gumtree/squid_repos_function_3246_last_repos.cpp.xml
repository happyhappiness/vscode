<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3246_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Address<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">getSockAddr<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">sockaddr_in6<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">buf<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">memcpy<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">&amp;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="13">buf<pos:position pos:line="4" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="18">&amp;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="19">mSocketAddr_<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="33">sizeof<argument_list pos:line="4" pos:column="39">(<argument><expr pos:line="4" pos:column="40">struct <name pos:line="4" pos:column="47">sockaddr_in6<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="62"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* maintain address family. It may have changed inside us. */</comment>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">buf<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">.<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">sin6_family<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">AF_INET6<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">HAVE_SIN6_LEN_IN_SAI<pos:position pos:line="8" pos:column="25"/></name></expr></cpp:if>
    <comment type="block" pos:line="9" pos:column="5">/* not all OS have this field, BUT when they do it can be a problem if set wrong */</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">buf<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">.<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">sin6_len<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <sizeof pos:line="10" pos:column="20">sizeof<argument_list pos:line="10" pos:column="26">(<argument><expr pos:line="10" pos:column="27">struct <name pos:line="10" pos:column="34">sockaddr_in6<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></sizeof></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6442_squid-3.5.27.cpp" pos:tabs="8"><function type="operator"><type><name><name pos:line="1" pos:column="1">Snmp<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Var<pos:position pos:line="1" pos:column="10"/></name></name><modifier pos:line="1" pos:column="10">&amp;<pos:position pos:line="1" pos:column="15"/></modifier></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Var<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">operator <name pos:line="2" pos:column="21">/=<pos:position pos:line="2" pos:column="23"/></name></name></name> <parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">num<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">num<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">!=<pos:position pos:line="4" pos:column="16"/></operator> <literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
    <switch pos:line="5" pos:column="5">switch <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">type<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition> <block pos:line="5" pos:column="19">{
    <case pos:line="6" pos:column="5">case <expr><name pos:line="6" pos:column="10">SMI_INTEGER<pos:position pos:line="6" pos:column="21"/></name></expr>:<pos:position pos:line="6" pos:column="22"/></case>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">setInt<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><call><name pos:line="7" pos:column="16">asInt<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call> <operator pos:line="7" pos:column="24">/<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">num<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
        <break pos:line="8" pos:column="9">break;<pos:position pos:line="8" pos:column="15"/></break>
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">SMI_GAUGE32<pos:position pos:line="9" pos:column="21"/></name></expr>:<pos:position pos:line="9" pos:column="22"/></case>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">setGauge<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><call><name pos:line="10" pos:column="18">asGauge<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">()<pos:position pos:line="10" pos:column="27"/></argument_list></call> <operator pos:line="10" pos:column="28">/<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="30">num<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
        <break pos:line="11" pos:column="9">break;<pos:position pos:line="11" pos:column="15"/></break>
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">SMI_COUNTER32<pos:position pos:line="12" pos:column="23"/></name></expr>:<pos:position pos:line="12" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">setCounter<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><call><name pos:line="13" pos:column="20">asCounter<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">()<pos:position pos:line="13" pos:column="31"/></argument_list></call> <operator pos:line="13" pos:column="32">/<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">num<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
        <break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break>
    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">SMI_COUNTER64<pos:position pos:line="15" pos:column="23"/></name></expr>:<pos:position pos:line="15" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">setCounter64<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><call><name pos:line="16" pos:column="22">asCounter64<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">()<pos:position pos:line="16" pos:column="35"/></argument_list></call> <operator pos:line="16" pos:column="36">/<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">num<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">SMI_TIMETICKS<pos:position pos:line="18" pos:column="23"/></name></expr>:<pos:position pos:line="18" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">setTimeTicks<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><call><name pos:line="19" pos:column="22">asTimeTicks<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">()<pos:position pos:line="19" pos:column="35"/></argument_list></call> <operator pos:line="19" pos:column="36">/<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">num<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
        <break pos:line="20" pos:column="9">break;<pos:position pos:line="20" pos:column="15"/></break>
    <default pos:line="21" pos:column="5">default:<pos:position pos:line="21" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">49<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">DBG_CRITICAL<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">HERE<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">&lt;&lt;<pos:position pos:line="22" pos:column="47"/></operator> <literal type="string" pos:line="22" pos:column="42">"Unsupported type: "<pos:position pos:line="22" pos:column="62"/></literal> <operator pos:line="22" pos:column="63">&lt;&lt;<pos:position pos:line="22" pos:column="71"/></operator> <name pos:line="22" pos:column="66">type<pos:position pos:line="22" pos:column="70"/></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
        <throw pos:line="23" pos:column="9">throw <expr><call><name pos:line="23" pos:column="15">TexcHere<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"Unsupported type"<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></throw>
        <break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>
    }<pos:position pos:line="25" pos:column="6"/></block></switch>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">*<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">this<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

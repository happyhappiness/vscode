<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2729_squid-3.5.27.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">getHost<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">()<pos:position pos:line="1" pos:column="23"/></parameter_list> <specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <block pos:line="1" pos:column="30">{
        <return pos:line="2" pos:column="9">return <expr><operator pos:line="2" pos:column="16">(<pos:position pos:line="2" pos:column="17"/></operator><ternary><condition><expr><name><name pos:line="2" pos:column="17">server<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">.<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">conn<pos:position pos:line="2" pos:column="28"/></name></name> <operator pos:line="2" pos:column="29">!=<pos:position pos:line="2" pos:column="31"/></operator> <name pos:line="2" pos:column="32">NULL<pos:position pos:line="2" pos:column="36"/></name> <operator pos:line="2" pos:column="37">&amp;&amp;<pos:position pos:line="2" pos:column="47"/></operator> <call><name><name pos:line="2" pos:column="40">server<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">.<pos:position pos:line="2" pos:column="47"/></operator><name pos:line="2" pos:column="47">conn<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">-&gt;<pos:position pos:line="2" pos:column="56"/></operator><name pos:line="2" pos:column="53">getPeer<pos:position pos:line="2" pos:column="60"/></name></name><argument_list pos:line="2" pos:column="60">()<pos:position pos:line="2" pos:column="62"/></argument_list></call></expr> ?<pos:position pos:line="2" pos:column="64"/></condition><then pos:line="2" pos:column="64"> <expr><call><name><name pos:line="2" pos:column="65">server<pos:position pos:line="2" pos:column="71"/></name><operator pos:line="2" pos:column="71">.<pos:position pos:line="2" pos:column="72"/></operator><name pos:line="2" pos:column="72">conn<pos:position pos:line="2" pos:column="76"/></name><operator pos:line="2" pos:column="76">-&gt;<pos:position pos:line="2" pos:column="81"/></operator><name pos:line="2" pos:column="78">getPeer<pos:position pos:line="2" pos:column="85"/></name></name><argument_list pos:line="2" pos:column="85">()<pos:position pos:line="2" pos:column="87"/></argument_list></call><operator pos:line="2" pos:column="87">-&gt;<pos:position pos:line="2" pos:column="92"/></operator><name pos:line="2" pos:column="89">host<pos:position pos:line="2" pos:column="93"/></name></expr> <pos:position pos:line="2" pos:column="94"/></then><else pos:line="2" pos:column="94">: <expr><call><name><name pos:line="2" pos:column="96">request<pos:position pos:line="2" pos:column="103"/></name><operator pos:line="2" pos:column="103">-&gt;<pos:position pos:line="2" pos:column="108"/></operator><name pos:line="2" pos:column="105">GetHost<pos:position pos:line="2" pos:column="112"/></name></name><argument_list pos:line="2" pos:column="112">()<pos:position pos:line="2" pos:column="114"/></argument_list></call></expr></else></ternary><operator pos:line="2" pos:column="114">)<pos:position pos:line="2" pos:column="115"/></operator></expr>;<pos:position pos:line="2" pos:column="116"/></return>
    }<pos:position pos:line="3" pos:column="6"/></block></function></unit>

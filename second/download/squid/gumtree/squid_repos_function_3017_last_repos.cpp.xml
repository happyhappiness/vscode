<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3017_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">prepareAcceleratedURL<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">ConnStateData<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">conn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">ClientHttpRequest<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">http<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="70">const<pos:position pos:line="2" pos:column="75"/></specifier> <name><name pos:line="2" pos:column="76">Http1<pos:position pos:line="2" pos:column="81"/></name><operator pos:line="2" pos:column="81">::<pos:position pos:line="2" pos:column="83"/></operator><name pos:line="2" pos:column="83">RequestParserPointer<pos:position pos:line="2" pos:column="103"/></name></name> <modifier pos:line="2" pos:column="104">&amp;<pos:position pos:line="2" pos:column="109"/></modifier></type><name pos:line="2" pos:column="105">hp<pos:position pos:line="2" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="108"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">vhost<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name><name pos:line="4" pos:column="17">conn<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">port<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">vhost<pos:position pos:line="4" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">vport<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name><name pos:line="5" pos:column="17">conn<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">port<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">vport<pos:position pos:line="5" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">ipbuf<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><name pos:line="6" pos:column="23">MAX_IPSTRLEN<pos:position pos:line="6" pos:column="35"/></name></expr>]<pos:position pos:line="6" pos:column="36"/></index></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">http<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">flags<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">accel<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="boolean" pos:line="8" pos:column="25">true<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* BUG: Squid cannot deal with '*' URLs (RFC2616 5.1.2) */</comment>

    <decl_stmt><decl><specifier pos:line="12" pos:column="5">static<pos:position pos:line="12" pos:column="11"/></specifier> <type><specifier pos:line="12" pos:column="12">const<pos:position pos:line="12" pos:column="17"/></specifier> <name pos:line="12" pos:column="18">SBuf<pos:position pos:line="12" pos:column="22"/></name></type> <name pos:line="12" pos:column="23">cache_object<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><literal type="string" pos:line="12" pos:column="36">"cache_object://"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></decl>;<pos:position pos:line="12" pos:column="55"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name><name pos:line="13" pos:column="9">hp<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">requestUri<pos:position pos:line="13" pos:column="23"/></name></name><argument_list pos:line="13" pos:column="23">()<pos:position pos:line="13" pos:column="25"/></argument_list></call><operator pos:line="13" pos:column="25">.<pos:position pos:line="13" pos:column="26"/></operator><call><name pos:line="13" pos:column="26">startsWith<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">cache_object<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="14" pos:column="17">/* already in good shape */</comment>

    <comment type="line" pos:line="16" pos:column="5">// XXX: re-use proper URL parser for this</comment>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">SBuf<pos:position pos:line="17" pos:column="9"/></name></type> <name pos:line="17" pos:column="10">url<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><call><name><name pos:line="17" pos:column="16">hp<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">requestUri<pos:position pos:line="17" pos:column="30"/></name></name><argument_list pos:line="17" pos:column="30">()<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt> <comment type="line" pos:line="17" pos:column="34">// use full provided URI if we abort</comment>
    <do pos:line="18" pos:column="5">do <block pos:line="18" pos:column="8">{ <comment type="line" pos:line="18" pos:column="10">// use a loop so we can break out of it</comment>
        <decl_stmt><decl><type><name><operator pos:line="19" pos:column="9">::<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">Parser<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">::<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">Tokenizer<pos:position pos:line="19" pos:column="28"/></name></name></type> <name pos:line="19" pos:column="29">tok<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">url<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name><name pos:line="20" pos:column="13">tok<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">skip<pos:position pos:line="20" pos:column="21"/></name></name><argument_list pos:line="20" pos:column="21">(<argument><expr><literal type="char" pos:line="20" pos:column="22">'/'<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <comment type="line" pos:line="20" pos:column="28">// origin-form URL already.</comment>
            <block type="pseudo"><break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">conn<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">port<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">vhost<pos:position pos:line="23" pos:column="30"/></name></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
            <block type="pseudo"><return pos:line="24" pos:column="13">return;<pos:position pos:line="24" pos:column="20"/></return></block></then></if> <comment type="block" pos:line="24" pos:column="21">/* already in good shape */</comment>

        <comment type="line" pos:line="26" pos:column="9">// skip the URI scheme</comment>
        <decl_stmt><decl><specifier pos:line="27" pos:column="9">static<pos:position pos:line="27" pos:column="15"/></specifier> <type><specifier pos:line="27" pos:column="16">const<pos:position pos:line="27" pos:column="21"/></specifier> <name pos:line="27" pos:column="22">CharacterSet<pos:position pos:line="27" pos:column="34"/></name></type> <name pos:line="27" pos:column="35">uriScheme<pos:position pos:line="27" pos:column="44"/></name> <init pos:line="27" pos:column="45">= <expr><call><name pos:line="27" pos:column="47">CharacterSet<pos:position pos:line="27" pos:column="59"/></name><argument_list pos:line="27" pos:column="59">(<argument><expr><literal type="string" pos:line="27" pos:column="60">"URI-scheme"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="27" pos:column="73">"+-."<pos:position pos:line="27" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call> <operator pos:line="27" pos:column="80">+<pos:position pos:line="27" pos:column="81"/></operator> <name><name pos:line="27" pos:column="82">CharacterSet<pos:position pos:line="27" pos:column="94"/></name><operator pos:line="27" pos:column="94">::<pos:position pos:line="27" pos:column="96"/></operator><name pos:line="27" pos:column="96">ALPHA<pos:position pos:line="27" pos:column="101"/></name></name> <operator pos:line="27" pos:column="102">+<pos:position pos:line="27" pos:column="103"/></operator> <name><name pos:line="27" pos:column="104">CharacterSet<pos:position pos:line="27" pos:column="116"/></name><operator pos:line="27" pos:column="116">::<pos:position pos:line="27" pos:column="118"/></operator><name pos:line="27" pos:column="118">DIGIT<pos:position pos:line="27" pos:column="123"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="124"/></decl_stmt>
        <decl_stmt><decl><specifier pos:line="28" pos:column="9">static<pos:position pos:line="28" pos:column="15"/></specifier> <type><specifier pos:line="28" pos:column="16">const<pos:position pos:line="28" pos:column="21"/></specifier> <name pos:line="28" pos:column="22">SBuf<pos:position pos:line="28" pos:column="26"/></name></type> <name pos:line="28" pos:column="27">uriSchemeEnd<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><literal type="string" pos:line="28" pos:column="40">"://"<pos:position pos:line="28" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></decl>;<pos:position pos:line="28" pos:column="47"/></decl_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><call><name><name pos:line="29" pos:column="14">tok<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">skipAll<pos:position pos:line="29" pos:column="25"/></name></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">uriScheme<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call> <operator pos:line="29" pos:column="37">||<pos:position pos:line="29" pos:column="39"/></operator> <operator pos:line="29" pos:column="40">!<pos:position pos:line="29" pos:column="41"/></operator><call><name><name pos:line="29" pos:column="41">tok<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">.<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">skip<pos:position pos:line="29" pos:column="49"/></name></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">uriSchemeEnd<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="64"/></condition><then pos:line="29" pos:column="64">
            <block type="pseudo"><break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break></block></then></if>

        <comment type="line" pos:line="32" pos:column="9">// skip the authority segment</comment>
        <comment type="line" pos:line="33" pos:column="9">// RFC 3986 complex nested ABNF for "authority" boils down to this:</comment>
        <decl_stmt><decl><specifier pos:line="34" pos:column="9">static<pos:position pos:line="34" pos:column="15"/></specifier> <type><specifier pos:line="34" pos:column="16">const<pos:position pos:line="34" pos:column="21"/></specifier> <name pos:line="34" pos:column="22">CharacterSet<pos:position pos:line="34" pos:column="34"/></name></type> <name pos:line="34" pos:column="35">authority<pos:position pos:line="34" pos:column="44"/></name> <init pos:line="34" pos:column="45">= <expr><call><name pos:line="34" pos:column="47">CharacterSet<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><literal type="string" pos:line="34" pos:column="60">"authority"<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="34" pos:column="72">"-._~%:@[]!$&amp;'()*+,;="<pos:position pos:line="34" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="95"/></argument_list></call> <operator pos:line="34" pos:column="96">+<pos:position pos:line="34" pos:column="97"/></operator>
                                              <name><name pos:line="35" pos:column="47">CharacterSet<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">::<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="61">HEXDIG<pos:position pos:line="35" pos:column="67"/></name></name> <operator pos:line="35" pos:column="68">+<pos:position pos:line="35" pos:column="69"/></operator> <name><name pos:line="35" pos:column="70">CharacterSet<pos:position pos:line="35" pos:column="82"/></name><operator pos:line="35" pos:column="82">::<pos:position pos:line="35" pos:column="84"/></operator><name pos:line="35" pos:column="84">ALPHA<pos:position pos:line="35" pos:column="89"/></name></name> <operator pos:line="35" pos:column="90">+<pos:position pos:line="35" pos:column="91"/></operator> <name><name pos:line="35" pos:column="92">CharacterSet<pos:position pos:line="35" pos:column="104"/></name><operator pos:line="35" pos:column="104">::<pos:position pos:line="35" pos:column="106"/></operator><name pos:line="35" pos:column="106">DIGIT<pos:position pos:line="35" pos:column="111"/></name></name></expr></init></decl>;<pos:position pos:line="35" pos:column="112"/></decl_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name><name pos:line="36" pos:column="14">tok<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">skipAll<pos:position pos:line="36" pos:column="25"/></name></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">authority<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37">
            <block type="pseudo"><break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break></block></then></if>

        <decl_stmt><decl><specifier pos:line="39" pos:column="9">static<pos:position pos:line="39" pos:column="15"/></specifier> <type><specifier pos:line="39" pos:column="16">const<pos:position pos:line="39" pos:column="21"/></specifier> <name pos:line="39" pos:column="22">SBuf<pos:position pos:line="39" pos:column="26"/></name></type> <name pos:line="39" pos:column="27">slashUri<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><literal type="string" pos:line="39" pos:column="36">"/"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></decl>;<pos:position pos:line="39" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">const<pos:position pos:line="40" pos:column="14"/></specifier> <name pos:line="40" pos:column="15">SBuf<pos:position pos:line="40" pos:column="19"/></name></type> <name pos:line="40" pos:column="20">t<pos:position pos:line="40" pos:column="21"/></name> <init pos:line="40" pos:column="22">= <expr><call><name><name pos:line="40" pos:column="24">tok<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">remaining<pos:position pos:line="40" pos:column="37"/></name></name><argument_list pos:line="40" pos:column="37">()<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="40"/></decl_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name><name pos:line="41" pos:column="13">t<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">isEmpty<pos:position pos:line="41" pos:column="22"/></name></name><argument_list pos:line="41" pos:column="22">()<pos:position pos:line="41" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="13">url<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">slashUri<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt></block></then>
        <elseif pos:line="43" pos:column="9">else <if pos:line="43" pos:column="14">if <condition pos:line="43" pos:column="17">(<expr><name><name pos:line="43" pos:column="18">t<pos:position pos:line="43" pos:column="19"/></name><index pos:line="43" pos:column="19">[<expr><literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr>]<pos:position pos:line="43" pos:column="22"/></index></name><operator pos:line="43" pos:column="22">==<pos:position pos:line="43" pos:column="24"/></operator><literal type="char" pos:line="43" pos:column="24">'/'<pos:position pos:line="43" pos:column="27"/></literal></expr>)<pos:position pos:line="43" pos:column="28"/></condition><then pos:line="43" pos:column="28"> <comment type="line" pos:line="43" pos:column="29">// looks like path</comment>
            <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="13">url<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">t<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><name><name pos:line="45" pos:column="18">t<pos:position pos:line="45" pos:column="19"/></name><index pos:line="45" pos:column="19">[<expr><literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal></expr>]<pos:position pos:line="45" pos:column="22"/></index></name><operator pos:line="45" pos:column="22">==<pos:position pos:line="45" pos:column="24"/></operator><literal type="char" pos:line="45" pos:column="24">'?'<pos:position pos:line="45" pos:column="27"/></literal> <operator pos:line="45" pos:column="28">||<pos:position pos:line="45" pos:column="30"/></operator> <name><name pos:line="45" pos:column="31">t<pos:position pos:line="45" pos:column="32"/></name><index pos:line="45" pos:column="32">[<expr><literal type="number" pos:line="45" pos:column="33">0<pos:position pos:line="45" pos:column="34"/></literal></expr>]<pos:position pos:line="45" pos:column="35"/></index></name><operator pos:line="45" pos:column="35">==<pos:position pos:line="45" pos:column="37"/></operator><literal type="char" pos:line="45" pos:column="37">'#'<pos:position pos:line="45" pos:column="40"/></literal></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41"> <block pos:line="45" pos:column="42">{ <comment type="line" pos:line="45" pos:column="44">// looks like query or fragment. fix '/'</comment>
            <expr_stmt><expr><name pos:line="46" pos:column="13">url<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">slashUri<pos:position pos:line="46" pos:column="27"/></name></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">url<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">.<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">append<pos:position pos:line="47" pos:column="23"/></name></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">t<pos:position pos:line="47" pos:column="25"/></name></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif></if> <comment type="line" pos:line="48" pos:column="11">// else do nothing. invalid path</comment>

    }<pos:position pos:line="50" pos:column="6"/></block> while<condition pos:line="50" pos:column="12">(<expr><literal type="boolean" pos:line="50" pos:column="13">false<pos:position pos:line="50" pos:column="18"/></literal></expr>)<pos:position pos:line="50" pos:column="19"/></condition>;<pos:position pos:line="50" pos:column="20"/></do>

<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">SHOULD_REJECT_UNKNOWN_URLS<pos:position pos:line="52" pos:column="31"/></name></expr></cpp:if>
    <comment type="line" pos:line="53" pos:column="5">// reject URI which are not well-formed even after the processing above</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name><name pos:line="54" pos:column="9">url<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">.<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">isEmpty<pos:position pos:line="54" pos:column="20"/></name></name><argument_list pos:line="54" pos:column="20">()<pos:position pos:line="54" pos:column="22"/></argument_list></call> <operator pos:line="54" pos:column="23">||<pos:position pos:line="54" pos:column="25"/></operator> <name><name pos:line="54" pos:column="26">url<pos:position pos:line="54" pos:column="29"/></name><index pos:line="54" pos:column="29">[<expr><literal type="number" pos:line="54" pos:column="30">0<pos:position pos:line="54" pos:column="31"/></literal></expr>]<pos:position pos:line="54" pos:column="32"/></index></name> <operator pos:line="54" pos:column="33">!=<pos:position pos:line="54" pos:column="35"/></operator> <literal type="char" pos:line="54" pos:column="36">'/'<pos:position pos:line="54" pos:column="39"/></literal></expr>)<pos:position pos:line="54" pos:column="40"/></condition><then pos:line="54" pos:column="40"> <block pos:line="54" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">hp<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">parseStatusCode<pos:position pos:line="55" pos:column="28"/></name></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <name><name pos:line="55" pos:column="31">Http<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">::<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="37">scBadRequest<pos:position pos:line="55" pos:column="49"/></name></name></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><call><name><name pos:line="56" pos:column="16">conn<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">abortRequestParsing<pos:position pos:line="56" pos:column="41"/></name></name><argument_list pos:line="56" pos:column="41">(<argument><expr><literal type="string" pos:line="56" pos:column="42">"error:invalid-request"<pos:position pos:line="56" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="67"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">vport<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">&lt;<pos:position pos:line="60" pos:column="19"/></operator> <literal type="number" pos:line="60" pos:column="17">0<pos:position pos:line="60" pos:column="18"/></literal></expr>)<pos:position pos:line="60" pos:column="19"/></condition><then pos:line="60" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="9">vport<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <call><name><name pos:line="61" pos:column="17">http<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">getConn<pos:position pos:line="61" pos:column="30"/></name></name><argument_list pos:line="61" pos:column="30">()<pos:position pos:line="61" pos:column="32"/></argument_list></call><operator pos:line="61" pos:column="32">-&gt;<pos:position pos:line="61" pos:column="37"/></operator><call><name><name pos:line="61" pos:column="34">clientConnection<pos:position pos:line="61" pos:column="50"/></name><operator pos:line="61" pos:column="50">-&gt;<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="52">local<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">.<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="58">port<pos:position pos:line="61" pos:column="62"/></name></name><argument_list pos:line="61" pos:column="62">()<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="65"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="63" pos:column="5">const<pos:position pos:line="63" pos:column="10"/></specifier> <name pos:line="63" pos:column="11">bool<pos:position pos:line="63" pos:column="15"/></name></type> <name pos:line="63" pos:column="16">switchedToHttps<pos:position pos:line="63" pos:column="31"/></name> <init pos:line="63" pos:column="32">= <expr><call><name><name pos:line="63" pos:column="34">conn<pos:position pos:line="63" pos:column="38"/></name><operator pos:line="63" pos:column="38">-&gt;<pos:position pos:line="63" pos:column="43"/></operator><name pos:line="63" pos:column="40">switchedToHttps<pos:position pos:line="63" pos:column="55"/></name></name><argument_list pos:line="63" pos:column="55">()<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="64" pos:column="5">const<pos:position pos:line="64" pos:column="10"/></specifier> <name pos:line="64" pos:column="11">bool<pos:position pos:line="64" pos:column="15"/></name></type> <name pos:line="64" pos:column="16">tryHostHeader<pos:position pos:line="64" pos:column="29"/></name> <init pos:line="64" pos:column="30">= <expr><name pos:line="64" pos:column="32">vhost<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">||<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">switchedToHttps<pos:position pos:line="64" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="64" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">char<pos:position pos:line="65" pos:column="9"/></name> <modifier pos:line="65" pos:column="10">*<pos:position pos:line="65" pos:column="11"/></modifier></type><name pos:line="65" pos:column="11">host<pos:position pos:line="65" pos:column="15"/></name> <init pos:line="65" pos:column="16">= <expr><name pos:line="65" pos:column="18">NULL<pos:position pos:line="65" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="65" pos:column="23"/></decl_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">tryHostHeader<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">&amp;&amp;<pos:position pos:line="66" pos:column="33"/></operator> <operator pos:line="66" pos:column="26">(<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">host<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">=<pos:position pos:line="66" pos:column="33"/></operator> <call><name><name pos:line="66" pos:column="34">hp<pos:position pos:line="66" pos:column="36"/></name><operator pos:line="66" pos:column="36">-&gt;<pos:position pos:line="66" pos:column="41"/></operator><name pos:line="66" pos:column="38">getHeaderField<pos:position pos:line="66" pos:column="52"/></name></name><argument_list pos:line="66" pos:column="52">(<argument><expr><literal type="string" pos:line="66" pos:column="53">"Host"<pos:position pos:line="66" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call><operator pos:line="66" pos:column="60">)<pos:position pos:line="66" pos:column="61"/></operator></expr>)<pos:position pos:line="66" pos:column="62"/></condition><then pos:line="66" pos:column="62"> <block pos:line="66" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">debugs<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><literal type="number" pos:line="67" pos:column="16">33<pos:position pos:line="67" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="20">5<pos:position pos:line="67" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="23">"ACCEL VHOST REWRITE: vhost="<pos:position pos:line="67" pos:column="52"/></literal> <operator pos:line="67" pos:column="53">&lt;&lt;<pos:position pos:line="67" pos:column="61"/></operator> <name pos:line="67" pos:column="56">host<pos:position pos:line="67" pos:column="60"/></name> <operator pos:line="67" pos:column="61">&lt;&lt;<pos:position pos:line="67" pos:column="69"/></operator> <literal type="string" pos:line="67" pos:column="64">" + vport="<pos:position pos:line="67" pos:column="75"/></literal> <operator pos:line="67" pos:column="76">&lt;&lt;<pos:position pos:line="67" pos:column="84"/></operator> <name pos:line="67" pos:column="79">vport<pos:position pos:line="67" pos:column="84"/></name></expr></argument>)<pos:position pos:line="67" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="86"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">char<pos:position pos:line="68" pos:column="13"/></name></type> <name><name pos:line="68" pos:column="14">thost<pos:position pos:line="68" pos:column="19"/></name><index pos:line="68" pos:column="19">[<expr><literal type="number" pos:line="68" pos:column="20">256<pos:position pos:line="68" pos:column="23"/></literal></expr>]<pos:position pos:line="68" pos:column="24"/></index></name></decl>;<pos:position pos:line="68" pos:column="25"/></decl_stmt>
        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">vport<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">&gt;<pos:position pos:line="69" pos:column="23"/></operator> <literal type="number" pos:line="69" pos:column="21">0<pos:position pos:line="69" pos:column="22"/></literal></expr>)<pos:position pos:line="69" pos:column="23"/></condition><then pos:line="69" pos:column="23"> <block pos:line="69" pos:column="24">{
            <expr_stmt><expr><name><name pos:line="70" pos:column="13">thost<pos:position pos:line="70" pos:column="18"/></name><index pos:line="70" pos:column="18">[<expr><literal type="number" pos:line="70" pos:column="19">0<pos:position pos:line="70" pos:column="20"/></literal></expr>]<pos:position pos:line="70" pos:column="21"/></index></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <literal type="char" pos:line="70" pos:column="24">'\0'<pos:position pos:line="70" pos:column="28"/></literal></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="71" pos:column="13">char<pos:position pos:line="71" pos:column="17"/></name> <modifier pos:line="71" pos:column="18">*<pos:position pos:line="71" pos:column="19"/></modifier></type><name pos:line="71" pos:column="19">t<pos:position pos:line="71" pos:column="20"/></name> <init pos:line="71" pos:column="21">= <expr><name pos:line="71" pos:column="23">NULL<pos:position pos:line="71" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="71" pos:column="28"/></decl_stmt>
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><name><name pos:line="72" pos:column="17">host<pos:position pos:line="72" pos:column="21"/></name><index pos:line="72" pos:column="21">[<expr><call><name pos:line="72" pos:column="22">strlen<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">host<pos:position pos:line="72" pos:column="33"/></name></expr></argument>)<pos:position pos:line="72" pos:column="34"/></argument_list></call></expr>]<pos:position pos:line="72" pos:column="35"/></index></name> <operator pos:line="72" pos:column="36">!=<pos:position pos:line="72" pos:column="38"/></operator> <literal type="char" pos:line="72" pos:column="39">']'<pos:position pos:line="72" pos:column="42"/></literal> <operator pos:line="72" pos:column="43">&amp;&amp;<pos:position pos:line="72" pos:column="53"/></operator> <operator pos:line="72" pos:column="46">(<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="47">t<pos:position pos:line="72" pos:column="48"/></name> <operator pos:line="72" pos:column="49">=<pos:position pos:line="72" pos:column="50"/></operator> <call><name pos:line="72" pos:column="51">strrchr<pos:position pos:line="72" pos:column="58"/></name><argument_list pos:line="72" pos:column="58">(<argument><expr><name pos:line="72" pos:column="59">host<pos:position pos:line="72" pos:column="63"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="72" pos:column="64">':'<pos:position pos:line="72" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call><operator pos:line="72" pos:column="68">)<pos:position pos:line="72" pos:column="69"/></operator> <operator pos:line="72" pos:column="70">!=<pos:position pos:line="72" pos:column="72"/></operator> <name pos:line="72" pos:column="73">NULL<pos:position pos:line="72" pos:column="77"/></name></expr>)<pos:position pos:line="72" pos:column="78"/></condition><then pos:line="72" pos:column="78"> <block pos:line="72" pos:column="79">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">strncpy<pos:position pos:line="73" pos:column="24"/></name><argument_list pos:line="73" pos:column="24">(<argument><expr><name pos:line="73" pos:column="25">thost<pos:position pos:line="73" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="32">host<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="38">(<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="39">t<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">-<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="41">host<pos:position pos:line="73" pos:column="45"/></name><operator pos:line="73" pos:column="45">)<pos:position pos:line="73" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">snprintf<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">thost<pos:position pos:line="74" pos:column="31"/></name><operator pos:line="74" pos:column="31">+<pos:position pos:line="74" pos:column="32"/></operator><operator pos:line="74" pos:column="32">(<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="33">t<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">-<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">host<pos:position pos:line="74" pos:column="39"/></name><operator pos:line="74" pos:column="39">)<pos:position pos:line="74" pos:column="40"/></operator></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="42">sizeof<argument_list pos:line="74" pos:column="48">(<argument><expr><name pos:line="74" pos:column="49">thost<pos:position pos:line="74" pos:column="54"/></name></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></sizeof><operator pos:line="74" pos:column="55">-<pos:position pos:line="74" pos:column="56"/></operator><operator pos:line="74" pos:column="56">(<pos:position pos:line="74" pos:column="57"/></operator><name pos:line="74" pos:column="57">t<pos:position pos:line="74" pos:column="58"/></name><operator pos:line="74" pos:column="58">-<pos:position pos:line="74" pos:column="59"/></operator><name pos:line="74" pos:column="59">host<pos:position pos:line="74" pos:column="63"/></name><operator pos:line="74" pos:column="63">)<pos:position pos:line="74" pos:column="64"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="66">":%d"<pos:position pos:line="74" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="73">vport<pos:position pos:line="74" pos:column="78"/></name></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">host<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">thost<pos:position pos:line="75" pos:column="29"/></name></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then> <elseif pos:line="76" pos:column="15">else <if pos:line="76" pos:column="20">if <condition pos:line="76" pos:column="23">(<expr><operator pos:line="76" pos:column="24">!<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="25">t<pos:position pos:line="76" pos:column="26"/></name></expr>)<pos:position pos:line="76" pos:column="27"/></condition><then pos:line="76" pos:column="27"> <block pos:line="76" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">snprintf<pos:position pos:line="77" pos:column="25"/></name><argument_list pos:line="77" pos:column="25">(<argument><expr><name pos:line="77" pos:column="26">thost<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="33">sizeof<argument_list pos:line="77" pos:column="39">(<argument><expr><name pos:line="77" pos:column="40">thost<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="48">"%s:%d"<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>,<argument><expr><name pos:line="77" pos:column="56">host<pos:position pos:line="77" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="62">vport<pos:position pos:line="77" pos:column="67"/></name></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name pos:line="78" pos:column="17">host<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <name pos:line="78" pos:column="24">thost<pos:position pos:line="78" pos:column="29"/></name></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if> <comment type="line" pos:line="80" pos:column="11">// else nothing to alter port-wise.</comment>
        <decl_stmt><decl><type><specifier pos:line="81" pos:column="9">const<pos:position pos:line="81" pos:column="14"/></specifier> <name pos:line="81" pos:column="15">int<pos:position pos:line="81" pos:column="18"/></name></type> <name pos:line="81" pos:column="19">url_sz<pos:position pos:line="81" pos:column="25"/></name> <init pos:line="81" pos:column="26">= <expr><call><name><name pos:line="81" pos:column="28">hp<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">-&gt;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="32">requestUri<pos:position pos:line="81" pos:column="42"/></name></name><argument_list pos:line="81" pos:column="42">()<pos:position pos:line="81" pos:column="44"/></argument_list></call><operator pos:line="81" pos:column="44">.<pos:position pos:line="81" pos:column="45"/></operator><call><name pos:line="81" pos:column="45">length<pos:position pos:line="81" pos:column="51"/></name><argument_list pos:line="81" pos:column="51">()<pos:position pos:line="81" pos:column="53"/></argument_list></call> <operator pos:line="81" pos:column="54">+<pos:position pos:line="81" pos:column="55"/></operator> <literal type="number" pos:line="81" pos:column="56">32<pos:position pos:line="81" pos:column="58"/></literal> <operator pos:line="81" pos:column="59">+<pos:position pos:line="81" pos:column="60"/></operator> <name><name pos:line="81" pos:column="61">Config<pos:position pos:line="81" pos:column="67"/></name><operator pos:line="81" pos:column="67">.<pos:position pos:line="81" pos:column="68"/></operator><name pos:line="81" pos:column="68">appendDomainLen<pos:position pos:line="81" pos:column="83"/></name></name> <operator pos:line="81" pos:column="84">+<pos:position pos:line="81" pos:column="85"/></operator> <call><name pos:line="81" pos:column="86">strlen<pos:position pos:line="81" pos:column="92"/></name><argument_list pos:line="81" pos:column="92">(<argument><expr><name pos:line="81" pos:column="93">host<pos:position pos:line="81" pos:column="97"/></name></expr></argument>)<pos:position pos:line="81" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="81" pos:column="99"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">http<pos:position pos:line="82" pos:column="13"/></name><operator pos:line="82" pos:column="13">-&gt;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="15">uri<pos:position pos:line="82" pos:column="18"/></name></name> <operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator> <operator pos:line="82" pos:column="21">(<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">char<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">*<pos:position pos:line="82" pos:column="28"/></operator><operator pos:line="82" pos:column="28">)<pos:position pos:line="82" pos:column="29"/></operator><call><name pos:line="82" pos:column="29">xcalloc<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><name pos:line="82" pos:column="37">url_sz<pos:position pos:line="82" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="45">1<pos:position pos:line="82" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="48"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="83" pos:column="9">const<pos:position pos:line="83" pos:column="14"/></specifier> <name pos:line="83" pos:column="15">SBuf<pos:position pos:line="83" pos:column="19"/></name> <modifier pos:line="83" pos:column="20">&amp;<pos:position pos:line="83" pos:column="25"/></modifier></type><name pos:line="83" pos:column="21">scheme<pos:position pos:line="83" pos:column="27"/></name> <init pos:line="83" pos:column="28">= <expr><call><name><name pos:line="83" pos:column="30">AnyP<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">::<pos:position pos:line="83" pos:column="36"/></operator><name pos:line="83" pos:column="36">UriScheme<pos:position pos:line="83" pos:column="45"/></name></name><argument_list pos:line="83" pos:column="45">(<argument><expr><name><name pos:line="83" pos:column="46">conn<pos:position pos:line="83" pos:column="50"/></name><operator pos:line="83" pos:column="50">-&gt;<pos:position pos:line="83" pos:column="55"/></operator><name pos:line="83" pos:column="52">transferProtocol<pos:position pos:line="83" pos:column="68"/></name><operator pos:line="83" pos:column="68">.<pos:position pos:line="83" pos:column="69"/></operator><name pos:line="83" pos:column="69">protocol<pos:position pos:line="83" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="78"/></argument_list></call><operator pos:line="83" pos:column="78">.<pos:position pos:line="83" pos:column="79"/></operator><call><name pos:line="83" pos:column="79">image<pos:position pos:line="83" pos:column="84"/></name><argument_list pos:line="83" pos:column="84">()<pos:position pos:line="83" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="83" pos:column="87"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">snprintf<pos:position pos:line="84" pos:column="17"/></name><argument_list pos:line="84" pos:column="17">(<argument><expr><name><name pos:line="84" pos:column="18">http<pos:position pos:line="84" pos:column="22"/></name><operator pos:line="84" pos:column="22">-&gt;<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="24">uri<pos:position pos:line="84" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="29">url_sz<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="37">SQUIDSBUFPH<pos:position pos:line="84" pos:column="48"/></name> <literal type="string" pos:line="84" pos:column="49">"://%s"<pos:position pos:line="84" pos:column="56"/></literal> <name pos:line="84" pos:column="57">SQUIDSBUFPH<pos:position pos:line="84" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="70">SQUIDSBUFPRINT<pos:position pos:line="84" pos:column="84"/></name><argument_list pos:line="84" pos:column="84">(<argument><expr><name pos:line="84" pos:column="85">scheme<pos:position pos:line="84" pos:column="91"/></name></expr></argument>)<pos:position pos:line="84" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="84" pos:column="94">host<pos:position pos:line="84" pos:column="98"/></name></expr></argument>, <argument><expr><call><name pos:line="84" pos:column="100">SQUIDSBUFPRINT<pos:position pos:line="84" pos:column="114"/></name><argument_list pos:line="84" pos:column="114">(<argument><expr><name pos:line="84" pos:column="115">url<pos:position pos:line="84" pos:column="118"/></name></expr></argument>)<pos:position pos:line="84" pos:column="119"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="121"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">debugs<pos:position pos:line="85" pos:column="15"/></name><argument_list pos:line="85" pos:column="15">(<argument><expr><literal type="number" pos:line="85" pos:column="16">33<pos:position pos:line="85" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="20">5<pos:position pos:line="85" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="23">"ACCEL VHOST REWRITE: "<pos:position pos:line="85" pos:column="46"/></literal> <operator pos:line="85" pos:column="47">&lt;&lt;<pos:position pos:line="85" pos:column="55"/></operator> <name><name pos:line="85" pos:column="50">http<pos:position pos:line="85" pos:column="54"/></name><operator pos:line="85" pos:column="54">-&gt;<pos:position pos:line="85" pos:column="59"/></operator><name pos:line="85" pos:column="56">uri<pos:position pos:line="85" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then> <elseif pos:line="86" pos:column="7">else <if pos:line="86" pos:column="12">if <condition pos:line="86" pos:column="15">(<expr><name><name pos:line="86" pos:column="16">conn<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">-&gt;<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="22">port<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">-&gt;<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="28">defaultsite<pos:position pos:line="86" pos:column="39"/></name></name></expr> <comment type="block" pos:line="86" pos:column="40">/* &amp;&amp; !vhost */</comment>)<pos:position pos:line="86" pos:column="56"/></condition><then pos:line="86" pos:column="56"> <block pos:line="86" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">debugs<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><literal type="number" pos:line="87" pos:column="16">33<pos:position pos:line="87" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="20">5<pos:position pos:line="87" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="23">"ACCEL DEFAULTSITE REWRITE: defaultsite="<pos:position pos:line="87" pos:column="64"/></literal> <operator pos:line="87" pos:column="65">&lt;&lt;<pos:position pos:line="87" pos:column="73"/></operator> <name><name pos:line="87" pos:column="68">conn<pos:position pos:line="87" pos:column="72"/></name><operator pos:line="87" pos:column="72">-&gt;<pos:position pos:line="87" pos:column="77"/></operator><name pos:line="87" pos:column="74">port<pos:position pos:line="87" pos:column="78"/></name><operator pos:line="87" pos:column="78">-&gt;<pos:position pos:line="87" pos:column="83"/></operator><name pos:line="87" pos:column="80">defaultsite<pos:position pos:line="87" pos:column="91"/></name></name> <operator pos:line="87" pos:column="92">&lt;&lt;<pos:position pos:line="87" pos:column="100"/></operator> <literal type="string" pos:line="87" pos:column="95">" + vport="<pos:position pos:line="87" pos:column="106"/></literal> <operator pos:line="87" pos:column="107">&lt;&lt;<pos:position pos:line="87" pos:column="115"/></operator> <name pos:line="87" pos:column="110">vport<pos:position pos:line="87" pos:column="115"/></name></expr></argument>)<pos:position pos:line="87" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="117"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="88" pos:column="9">const<pos:position pos:line="88" pos:column="14"/></specifier> <name pos:line="88" pos:column="15">int<pos:position pos:line="88" pos:column="18"/></name></type> <name pos:line="88" pos:column="19">url_sz<pos:position pos:line="88" pos:column="25"/></name> <init pos:line="88" pos:column="26">= <expr><call><name><name pos:line="88" pos:column="28">hp<pos:position pos:line="88" pos:column="30"/></name><operator pos:line="88" pos:column="30">-&gt;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="32">requestUri<pos:position pos:line="88" pos:column="42"/></name></name><argument_list pos:line="88" pos:column="42">()<pos:position pos:line="88" pos:column="44"/></argument_list></call><operator pos:line="88" pos:column="44">.<pos:position pos:line="88" pos:column="45"/></operator><call><name pos:line="88" pos:column="45">length<pos:position pos:line="88" pos:column="51"/></name><argument_list pos:line="88" pos:column="51">()<pos:position pos:line="88" pos:column="53"/></argument_list></call> <operator pos:line="88" pos:column="54">+<pos:position pos:line="88" pos:column="55"/></operator> <literal type="number" pos:line="88" pos:column="56">32<pos:position pos:line="88" pos:column="58"/></literal> <operator pos:line="88" pos:column="59">+<pos:position pos:line="88" pos:column="60"/></operator> <name><name pos:line="88" pos:column="61">Config<pos:position pos:line="88" pos:column="67"/></name><operator pos:line="88" pos:column="67">.<pos:position pos:line="88" pos:column="68"/></operator><name pos:line="88" pos:column="68">appendDomainLen<pos:position pos:line="88" pos:column="83"/></name></name> <operator pos:line="88" pos:column="84">+<pos:position pos:line="88" pos:column="85"/></operator>
                           <call><name pos:line="89" pos:column="28">strlen<pos:position pos:line="89" pos:column="34"/></name><argument_list pos:line="89" pos:column="34">(<argument><expr><name><name pos:line="89" pos:column="35">conn<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">-&gt;<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="41">port<pos:position pos:line="89" pos:column="45"/></name><operator pos:line="89" pos:column="45">-&gt;<pos:position pos:line="89" pos:column="50"/></operator><name pos:line="89" pos:column="47">defaultsite<pos:position pos:line="89" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="89" pos:column="60"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">http<pos:position pos:line="90" pos:column="13"/></name><operator pos:line="90" pos:column="13">-&gt;<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="15">uri<pos:position pos:line="90" pos:column="18"/></name></name> <operator pos:line="90" pos:column="19">=<pos:position pos:line="90" pos:column="20"/></operator> <operator pos:line="90" pos:column="21">(<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="22">char<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">*<pos:position pos:line="90" pos:column="28"/></operator><operator pos:line="90" pos:column="28">)<pos:position pos:line="90" pos:column="29"/></operator><call><name pos:line="90" pos:column="29">xcalloc<pos:position pos:line="90" pos:column="36"/></name><argument_list pos:line="90" pos:column="36">(<argument><expr><name pos:line="90" pos:column="37">url_sz<pos:position pos:line="90" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="45">1<pos:position pos:line="90" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="91" pos:column="9">char<pos:position pos:line="91" pos:column="13"/></name></type> <name><name pos:line="91" pos:column="14">vportStr<pos:position pos:line="91" pos:column="22"/></name><index pos:line="91" pos:column="22">[<expr><literal type="number" pos:line="91" pos:column="23">32<pos:position pos:line="91" pos:column="25"/></literal></expr>]<pos:position pos:line="91" pos:column="26"/></index></name></decl>;<pos:position pos:line="91" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">vportStr<pos:position pos:line="92" pos:column="17"/></name><index pos:line="92" pos:column="17">[<expr><literal type="number" pos:line="92" pos:column="18">0<pos:position pos:line="92" pos:column="19"/></literal></expr>]<pos:position pos:line="92" pos:column="20"/></index></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <literal type="char" pos:line="92" pos:column="23">'\0'<pos:position pos:line="92" pos:column="27"/></literal></expr>;<pos:position pos:line="92" pos:column="28"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">vport<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">&gt;<pos:position pos:line="93" pos:column="23"/></operator> <literal type="number" pos:line="93" pos:column="21">0<pos:position pos:line="93" pos:column="22"/></literal></expr>)<pos:position pos:line="93" pos:column="23"/></condition><then pos:line="93" pos:column="23"> <block pos:line="93" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">snprintf<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><name pos:line="94" pos:column="22">vportStr<pos:position pos:line="94" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="32">sizeof<argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">vportStr<pos:position pos:line="94" pos:column="47"/></name></expr></argument>)<pos:position pos:line="94" pos:column="48"/></argument_list></sizeof></expr></argument>,<argument><expr><literal type="string" pos:line="94" pos:column="49">":%d"<pos:position pos:line="94" pos:column="54"/></literal></expr></argument>,<argument><expr><name pos:line="94" pos:column="55">vport<pos:position pos:line="94" pos:column="60"/></name></expr></argument>)<pos:position pos:line="94" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><specifier pos:line="96" pos:column="9">const<pos:position pos:line="96" pos:column="14"/></specifier> <name pos:line="96" pos:column="15">SBuf<pos:position pos:line="96" pos:column="19"/></name> <modifier pos:line="96" pos:column="20">&amp;<pos:position pos:line="96" pos:column="25"/></modifier></type><name pos:line="96" pos:column="21">scheme<pos:position pos:line="96" pos:column="27"/></name> <init pos:line="96" pos:column="28">= <expr><call><name><name pos:line="96" pos:column="30">AnyP<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">::<pos:position pos:line="96" pos:column="36"/></operator><name pos:line="96" pos:column="36">UriScheme<pos:position pos:line="96" pos:column="45"/></name></name><argument_list pos:line="96" pos:column="45">(<argument><expr><name><name pos:line="96" pos:column="46">conn<pos:position pos:line="96" pos:column="50"/></name><operator pos:line="96" pos:column="50">-&gt;<pos:position pos:line="96" pos:column="55"/></operator><name pos:line="96" pos:column="52">transferProtocol<pos:position pos:line="96" pos:column="68"/></name><operator pos:line="96" pos:column="68">.<pos:position pos:line="96" pos:column="69"/></operator><name pos:line="96" pos:column="69">protocol<pos:position pos:line="96" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="78"/></argument_list></call><operator pos:line="96" pos:column="78">.<pos:position pos:line="96" pos:column="79"/></operator><call><name pos:line="96" pos:column="79">image<pos:position pos:line="96" pos:column="84"/></name><argument_list pos:line="96" pos:column="84">()<pos:position pos:line="96" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="87"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">snprintf<pos:position pos:line="97" pos:column="17"/></name><argument_list pos:line="97" pos:column="17">(<argument><expr><name><name pos:line="97" pos:column="18">http<pos:position pos:line="97" pos:column="22"/></name><operator pos:line="97" pos:column="22">-&gt;<pos:position pos:line="97" pos:column="27"/></operator><name pos:line="97" pos:column="24">uri<pos:position pos:line="97" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="29">url_sz<pos:position pos:line="97" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="37">SQUIDSBUFPH<pos:position pos:line="97" pos:column="48"/></name> <literal type="string" pos:line="97" pos:column="49">"://%s%s"<pos:position pos:line="97" pos:column="58"/></literal> <name pos:line="97" pos:column="59">SQUIDSBUFPH<pos:position pos:line="97" pos:column="70"/></name></expr></argument>,
                 <argument><expr><call><name pos:line="98" pos:column="18">SQUIDSBUFPRINT<pos:position pos:line="98" pos:column="32"/></name><argument_list pos:line="98" pos:column="32">(<argument><expr><name pos:line="98" pos:column="33">scheme<pos:position pos:line="98" pos:column="39"/></name></expr></argument>)<pos:position pos:line="98" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="42">conn<pos:position pos:line="98" pos:column="46"/></name><operator pos:line="98" pos:column="46">-&gt;<pos:position pos:line="98" pos:column="51"/></operator><name pos:line="98" pos:column="48">port<pos:position pos:line="98" pos:column="52"/></name><operator pos:line="98" pos:column="52">-&gt;<pos:position pos:line="98" pos:column="57"/></operator><name pos:line="98" pos:column="54">defaultsite<pos:position pos:line="98" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="67">vportStr<pos:position pos:line="98" pos:column="75"/></name></expr></argument>, <argument><expr><call><name pos:line="98" pos:column="77">SQUIDSBUFPRINT<pos:position pos:line="98" pos:column="91"/></name><argument_list pos:line="98" pos:column="91">(<argument><expr><name pos:line="98" pos:column="92">url<pos:position pos:line="98" pos:column="95"/></name></expr></argument>)<pos:position pos:line="98" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="98"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">debugs<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><literal type="number" pos:line="99" pos:column="16">33<pos:position pos:line="99" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="20">5<pos:position pos:line="99" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="23">"ACCEL DEFAULTSITE REWRITE: "<pos:position pos:line="99" pos:column="52"/></literal> <operator pos:line="99" pos:column="53">&lt;&lt;<pos:position pos:line="99" pos:column="61"/></operator> <name><name pos:line="99" pos:column="56">http<pos:position pos:line="99" pos:column="60"/></name><operator pos:line="99" pos:column="60">-&gt;<pos:position pos:line="99" pos:column="65"/></operator><name pos:line="99" pos:column="62">uri<pos:position pos:line="99" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if></elseif> <elseif pos:line="100" pos:column="7">else <if pos:line="100" pos:column="12">if <condition pos:line="100" pos:column="15">(<expr><name pos:line="100" pos:column="16">vport<pos:position pos:line="100" pos:column="21"/></name> <operator pos:line="100" pos:column="22">&gt;<pos:position pos:line="100" pos:column="26"/></operator> <literal type="number" pos:line="100" pos:column="24">0<pos:position pos:line="100" pos:column="25"/></literal></expr> <comment type="block" pos:line="100" pos:column="26">/* &amp;&amp; (!vhost || no Host:) */</comment>)<pos:position pos:line="100" pos:column="56"/></condition><then pos:line="100" pos:column="56"> <block pos:line="100" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">debugs<pos:position pos:line="101" pos:column="15"/></name><argument_list pos:line="101" pos:column="15">(<argument><expr><literal type="number" pos:line="101" pos:column="16">33<pos:position pos:line="101" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="20">5<pos:position pos:line="101" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="23">"ACCEL VPORT REWRITE: *_port IP + vport="<pos:position pos:line="101" pos:column="64"/></literal> <operator pos:line="101" pos:column="65">&lt;&lt;<pos:position pos:line="101" pos:column="73"/></operator> <name pos:line="101" pos:column="68">vport<pos:position pos:line="101" pos:column="73"/></name></expr></argument>)<pos:position pos:line="101" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="75"/></expr_stmt>
        <comment type="block" pos:line="102" pos:column="9">/* Put the local socket IP address as the hostname, with whatever vport we found  */</comment>
        <decl_stmt><decl><type><specifier pos:line="103" pos:column="9">const<pos:position pos:line="103" pos:column="14"/></specifier> <name pos:line="103" pos:column="15">int<pos:position pos:line="103" pos:column="18"/></name></type> <name pos:line="103" pos:column="19">url_sz<pos:position pos:line="103" pos:column="25"/></name> <init pos:line="103" pos:column="26">= <expr><call><name><name pos:line="103" pos:column="28">hp<pos:position pos:line="103" pos:column="30"/></name><operator pos:line="103" pos:column="30">-&gt;<pos:position pos:line="103" pos:column="35"/></operator><name pos:line="103" pos:column="32">requestUri<pos:position pos:line="103" pos:column="42"/></name></name><argument_list pos:line="103" pos:column="42">()<pos:position pos:line="103" pos:column="44"/></argument_list></call><operator pos:line="103" pos:column="44">.<pos:position pos:line="103" pos:column="45"/></operator><call><name pos:line="103" pos:column="45">length<pos:position pos:line="103" pos:column="51"/></name><argument_list pos:line="103" pos:column="51">()<pos:position pos:line="103" pos:column="53"/></argument_list></call> <operator pos:line="103" pos:column="54">+<pos:position pos:line="103" pos:column="55"/></operator> <literal type="number" pos:line="103" pos:column="56">32<pos:position pos:line="103" pos:column="58"/></literal> <operator pos:line="103" pos:column="59">+<pos:position pos:line="103" pos:column="60"/></operator> <name><name pos:line="103" pos:column="61">Config<pos:position pos:line="103" pos:column="67"/></name><operator pos:line="103" pos:column="67">.<pos:position pos:line="103" pos:column="68"/></operator><name pos:line="103" pos:column="68">appendDomainLen<pos:position pos:line="103" pos:column="83"/></name></name></expr></init></decl>;<pos:position pos:line="103" pos:column="84"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">http<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">uri<pos:position pos:line="104" pos:column="18"/></name></name> <operator pos:line="104" pos:column="19">=<pos:position pos:line="104" pos:column="20"/></operator> <operator pos:line="104" pos:column="21">(<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="22">char<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">*<pos:position pos:line="104" pos:column="28"/></operator><operator pos:line="104" pos:column="28">)<pos:position pos:line="104" pos:column="29"/></operator><call><name pos:line="104" pos:column="29">xcalloc<pos:position pos:line="104" pos:column="36"/></name><argument_list pos:line="104" pos:column="36">(<argument><expr><name pos:line="104" pos:column="37">url_sz<pos:position pos:line="104" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="45">1<pos:position pos:line="104" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="105" pos:column="9">http<pos:position pos:line="105" pos:column="13"/></name><operator pos:line="105" pos:column="13">-&gt;<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="15">getConn<pos:position pos:line="105" pos:column="22"/></name></name><argument_list pos:line="105" pos:column="22">()<pos:position pos:line="105" pos:column="24"/></argument_list></call><operator pos:line="105" pos:column="24">-&gt;<pos:position pos:line="105" pos:column="29"/></operator><call><name><name pos:line="105" pos:column="26">clientConnection<pos:position pos:line="105" pos:column="42"/></name><operator pos:line="105" pos:column="42">-&gt;<pos:position pos:line="105" pos:column="47"/></operator><name pos:line="105" pos:column="44">local<pos:position pos:line="105" pos:column="49"/></name><operator pos:line="105" pos:column="49">.<pos:position pos:line="105" pos:column="50"/></operator><name pos:line="105" pos:column="50">toHostStr<pos:position pos:line="105" pos:column="59"/></name></name><argument_list pos:line="105" pos:column="59">(<argument><expr><name pos:line="105" pos:column="60">ipbuf<pos:position pos:line="105" pos:column="65"/></name></expr></argument>,<argument><expr><name pos:line="105" pos:column="66">MAX_IPSTRLEN<pos:position pos:line="105" pos:column="78"/></name></expr></argument>)<pos:position pos:line="105" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="80"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="106" pos:column="9">const<pos:position pos:line="106" pos:column="14"/></specifier> <name pos:line="106" pos:column="15">SBuf<pos:position pos:line="106" pos:column="19"/></name> <modifier pos:line="106" pos:column="20">&amp;<pos:position pos:line="106" pos:column="25"/></modifier></type><name pos:line="106" pos:column="21">scheme<pos:position pos:line="106" pos:column="27"/></name> <init pos:line="106" pos:column="28">= <expr><call><name><name pos:line="106" pos:column="30">AnyP<pos:position pos:line="106" pos:column="34"/></name><operator pos:line="106" pos:column="34">::<pos:position pos:line="106" pos:column="36"/></operator><name pos:line="106" pos:column="36">UriScheme<pos:position pos:line="106" pos:column="45"/></name></name><argument_list pos:line="106" pos:column="45">(<argument><expr><name><name pos:line="106" pos:column="46">conn<pos:position pos:line="106" pos:column="50"/></name><operator pos:line="106" pos:column="50">-&gt;<pos:position pos:line="106" pos:column="55"/></operator><name pos:line="106" pos:column="52">transferProtocol<pos:position pos:line="106" pos:column="68"/></name><operator pos:line="106" pos:column="68">.<pos:position pos:line="106" pos:column="69"/></operator><name pos:line="106" pos:column="69">protocol<pos:position pos:line="106" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="78"/></argument_list></call><operator pos:line="106" pos:column="78">.<pos:position pos:line="106" pos:column="79"/></operator><call><name pos:line="106" pos:column="79">image<pos:position pos:line="106" pos:column="84"/></name><argument_list pos:line="106" pos:column="84">()<pos:position pos:line="106" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="106" pos:column="87"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">snprintf<pos:position pos:line="107" pos:column="17"/></name><argument_list pos:line="107" pos:column="17">(<argument><expr><name><name pos:line="107" pos:column="18">http<pos:position pos:line="107" pos:column="22"/></name><operator pos:line="107" pos:column="22">-&gt;<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="24">uri<pos:position pos:line="107" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="29">url_sz<pos:position pos:line="107" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="37">SQUIDSBUFPH<pos:position pos:line="107" pos:column="48"/></name> <literal type="string" pos:line="107" pos:column="49">"://%s:%d"<pos:position pos:line="107" pos:column="59"/></literal> <name pos:line="107" pos:column="60">SQUIDSBUFPH<pos:position pos:line="107" pos:column="71"/></name></expr></argument>,
                 <argument><expr><call><name pos:line="108" pos:column="18">SQUIDSBUFPRINT<pos:position pos:line="108" pos:column="32"/></name><argument_list pos:line="108" pos:column="32">(<argument><expr><name pos:line="108" pos:column="33">scheme<pos:position pos:line="108" pos:column="39"/></name></expr></argument>)<pos:position pos:line="108" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="108" pos:column="42">ipbuf<pos:position pos:line="108" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="49">vport<pos:position pos:line="108" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="56">SQUIDSBUFPRINT<pos:position pos:line="108" pos:column="70"/></name><argument_list pos:line="108" pos:column="70">(<argument><expr><name pos:line="108" pos:column="71">url<pos:position pos:line="108" pos:column="74"/></name></expr></argument>)<pos:position pos:line="108" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">debugs<pos:position pos:line="109" pos:column="15"/></name><argument_list pos:line="109" pos:column="15">(<argument><expr><literal type="number" pos:line="109" pos:column="16">33<pos:position pos:line="109" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="20">5<pos:position pos:line="109" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="23">"ACCEL VPORT REWRITE: "<pos:position pos:line="109" pos:column="46"/></literal> <operator pos:line="109" pos:column="47">&lt;&lt;<pos:position pos:line="109" pos:column="55"/></operator> <name><name pos:line="109" pos:column="50">http<pos:position pos:line="109" pos:column="54"/></name><operator pos:line="109" pos:column="54">-&gt;<pos:position pos:line="109" pos:column="59"/></operator><name pos:line="109" pos:column="56">uri<pos:position pos:line="109" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

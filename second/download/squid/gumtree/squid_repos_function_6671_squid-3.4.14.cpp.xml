<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6671_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">MemPoolChunked<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">get<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">Free<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="6" pos:column="5">++<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">saved_calls<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* first, try cache */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">freeCache<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">Free<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">void<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></operator><operator pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">freeCache<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">void<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">)<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">VALGRIND_MAKE_MEM_DEFINED<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">Free<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">obj_size<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">freeCache<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">Free<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">Free<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">Free<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="16" pos:column="5">/* then try perchunk freelist chain */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">nextFreeChunk<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">==<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">NULL<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
        <comment type="block" pos:line="18" pos:column="9">/* no chunk with frees, so create new one */</comment>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">--<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">saved_calls<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt> <comment type="line" pos:line="19" pos:column="25">// compensate for the ++ above</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">createChunk<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">()<pos:position pos:line="20" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="22" pos:column="5">/* now we have some in perchunk freelist chain */</comment>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">MemChunk<pos:position pos:line="23" pos:column="13"/></name> <modifier pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></modifier></type><name pos:line="23" pos:column="15">chunk<pos:position pos:line="23" pos:column="20"/></name> <init pos:line="23" pos:column="21">= <expr><name pos:line="23" pos:column="23">nextFreeChunk<pos:position pos:line="23" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">Free<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">void<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">*<pos:position pos:line="25" pos:column="19"/></operator><operator pos:line="25" pos:column="19">*<pos:position pos:line="25" pos:column="20"/></operator><operator pos:line="25" pos:column="20">)<pos:position pos:line="25" pos:column="21"/></operator><name><name pos:line="25" pos:column="21">chunk<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">freeList<pos:position pos:line="25" pos:column="36"/></name></name></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">chunk<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">freeList<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <operator pos:line="26" pos:column="23">*<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">Free<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="27" pos:column="5">*<pos:position pos:line="27" pos:column="6"/></operator><name pos:line="27" pos:column="6">Free<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">NULL<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">++<pos:position pos:line="28" pos:column="7"/></operator><name><name pos:line="28" pos:column="7">chunk<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">inuse_count<pos:position pos:line="28" pos:column="25"/></name></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">chunk<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">lastref<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">squid_curtime<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">chunk<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">freeList<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">==<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">NULL<pos:position pos:line="31" pos:column="32"/></name></expr>)<pos:position pos:line="31" pos:column="33"/></condition><then pos:line="31" pos:column="33"> <block pos:line="31" pos:column="34">{
        <comment type="block" pos:line="32" pos:column="9">/* last free in this chunk, so remove us from perchunk freelist chain */</comment>
        <expr_stmt><expr><name pos:line="33" pos:column="9">nextFreeChunk<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name><name pos:line="33" pos:column="25">chunk<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">nextFreeChunk<pos:position pos:line="33" pos:column="45"/></name></name></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="35" pos:column="5">(<pos:position pos:line="35" pos:column="6"/></operator><name pos:line="35" pos:column="6">void<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">)<pos:position pos:line="35" pos:column="11"/></operator> <call><name pos:line="35" pos:column="12">VALGRIND_MAKE_MEM_DEFINED<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">Free<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">obj_size<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">Free<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

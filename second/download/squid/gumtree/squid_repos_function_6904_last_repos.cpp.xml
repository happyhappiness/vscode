<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6904_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIInclude<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Start<pos:position pos:line="2" pos:column="18"/></name></name> <parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">ESIStreamContext<pos:position pos:line="2" pos:column="36"/></name><operator pos:line="2" pos:column="36">::<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="38">Pointer<pos:position pos:line="2" pos:column="45"/></name></name></type> <name pos:line="2" pos:column="46">stream<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">url<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">ESIVarState<pos:position pos:line="2" pos:column="82"/></name> <modifier pos:line="2" pos:column="83">*<pos:position pos:line="2" pos:column="84"/></modifier></type><name pos:line="2" pos:column="84">vars<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">stream<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">getRaw<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HttpHeader<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">tempheaders<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">hoRequest<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">prepareRequestHeaders<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">tempheaders<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">vars<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Ensure variable state is clean */</comment>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">vars<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">feedData<pos:position pos:line="12" pos:column="19"/></name></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">url<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="25">strlen<pos:position pos:line="12" pos:column="31"/></name> <argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">url<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* tempUrl is eaten by the request */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <specifier pos:line="15" pos:column="10">const<pos:position pos:line="15" pos:column="15"/></specifier> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">tempUrl<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><call><name><name pos:line="15" pos:column="27">vars<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">extractChar<pos:position pos:line="15" pos:column="44"/></name></name> <argument_list pos:line="15" pos:column="45">()<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">86<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">5<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"ESIIncludeStart: Starting subrequest with url '"<pos:position pos:line="17" pos:column="68"/></literal> <operator pos:line="17" pos:column="69">&lt;&lt;<pos:position pos:line="17" pos:column="77"/></operator> <name pos:line="17" pos:column="72">tempUrl<pos:position pos:line="17" pos:column="79"/></name> <operator pos:line="17" pos:column="80">&lt;&lt;<pos:position pos:line="17" pos:column="88"/></operator> <literal type="string" pos:line="17" pos:column="83">"'"<pos:position pos:line="17" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="88"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name><name pos:line="18" pos:column="11">MasterXaction<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">::<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">Pointer<pos:position pos:line="18" pos:column="33"/></name></name></type> <name pos:line="18" pos:column="34">mx<pos:position pos:line="18" pos:column="36"/></name> <init pos:line="18" pos:column="37">= <expr><operator pos:line="18" pos:column="39">new<pos:position pos:line="18" pos:column="42"/></operator> <call><name pos:line="18" pos:column="43">MasterXaction<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><name><name pos:line="18" pos:column="57">XactionInitiator<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">::<pos:position pos:line="18" pos:column="75"/></operator><name pos:line="18" pos:column="75">initEsi<pos:position pos:line="18" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="84"/></decl_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">clientBeginRequest<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">Http<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">::<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">METHOD_GET<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">tempUrl<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">esiBufferRecipient<pos:position pos:line="19" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="75">esiBufferDetach<pos:position pos:line="19" pos:column="90"/></name></expr></argument>, <argument><expr><call><name><name pos:line="19" pos:column="92">stream<pos:position pos:line="19" pos:column="98"/></name><operator pos:line="19" pos:column="98">.<pos:position pos:line="19" pos:column="99"/></operator><name pos:line="19" pos:column="99">getRaw<pos:position pos:line="19" pos:column="105"/></name></name><argument_list pos:line="19" pos:column="105">()<pos:position pos:line="19" pos:column="107"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="19" pos:column="109">&amp;<pos:position pos:line="19" pos:column="114"/></operator><name pos:line="19" pos:column="110">tempheaders<pos:position pos:line="19" pos:column="121"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="123">stream<pos:position pos:line="19" pos:column="129"/></name><operator pos:line="19" pos:column="129">-&gt;<pos:position pos:line="19" pos:column="134"/></operator><name pos:line="19" pos:column="131">localbuffer<pos:position pos:line="19" pos:column="142"/></name><operator pos:line="19" pos:column="142">-&gt;<pos:position pos:line="19" pos:column="147"/></operator><name pos:line="19" pos:column="144">buf<pos:position pos:line="19" pos:column="147"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="149">HTTP_REQBUF_SZ<pos:position pos:line="19" pos:column="163"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="165">mx<pos:position pos:line="19" pos:column="167"/></name></expr></argument>)<pos:position pos:line="19" pos:column="168"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="169"/></condition><then pos:line="19" pos:column="169"> <block pos:line="19" pos:column="170">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">86<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="20">DBG_CRITICAL<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"starting new ESI subrequest failed"<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">tempheaders<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">clean<pos:position pos:line="23" pos:column="22"/></name></name><argument_list pos:line="23" pos:column="22">()<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

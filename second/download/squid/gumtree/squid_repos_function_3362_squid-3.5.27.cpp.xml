<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3362_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IdleConnList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">push<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">Comm<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ConnectionPointer<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">conn<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">size_<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">capacity_<pos:position pos:line="4" pos:column="27"/></name></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28"> <block pos:line="4" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">48<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">HERE<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="31">"growing idle Connection array"<pos:position pos:line="5" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">capacity_<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;&lt;=<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="23">1<pos:position pos:line="6" pos:column="24"/></literal></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">Comm<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">::<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">ConnectionPointer<pos:position pos:line="7" pos:column="38"/></name></name> <modifier pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></modifier></type><name pos:line="7" pos:column="40">oldList<pos:position pos:line="7" pos:column="47"/></name> <init pos:line="7" pos:column="48">= <expr><name pos:line="7" pos:column="50">theList_<pos:position pos:line="7" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">theList_<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="20">new<pos:position pos:line="8" pos:column="23"/></operator> <name><name pos:line="8" pos:column="24">Comm<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">::<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">ConnectionPointer<pos:position pos:line="8" pos:column="47"/></name><index pos:line="8" pos:column="47">[<expr><name pos:line="8" pos:column="48">capacity_<pos:position pos:line="8" pos:column="57"/></name></expr>]<pos:position pos:line="8" pos:column="58"/></index></name></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
        <for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><decl><type><name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">index<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></init> <condition><expr><name pos:line="9" pos:column="29">index<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">&lt;<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="37">size_<pos:position pos:line="9" pos:column="42"/></name></expr>;<pos:position pos:line="9" pos:column="43"/></condition> <incr><expr><operator pos:line="9" pos:column="44">++<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">index<pos:position pos:line="9" pos:column="51"/></name></expr></incr>)<pos:position pos:line="9" pos:column="52"/></control>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="13">theList_<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><name pos:line="10" pos:column="22">index<pos:position pos:line="10" pos:column="27"/></name></expr>]<pos:position pos:line="10" pos:column="28"/></index></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <name><name pos:line="10" pos:column="31">oldList<pos:position pos:line="10" pos:column="38"/></name><index pos:line="10" pos:column="38">[<expr><name pos:line="10" pos:column="39">index<pos:position pos:line="10" pos:column="44"/></name></expr>]<pos:position pos:line="10" pos:column="45"/></index></name></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt></block></for>

        <expr_stmt><expr><operator pos:line="12" pos:column="9">delete<pos:position pos:line="12" pos:column="15"/></operator><index pos:line="12" pos:column="15">[]<pos:position pos:line="12" pos:column="17"/></index> <name pos:line="12" pos:column="18">oldList<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">parent_<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="16" pos:column="9">parent_<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">noteConnectionAdded<pos:position pos:line="16" pos:column="37"/></name></name><argument_list pos:line="16" pos:column="37">()<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">theList_<pos:position pos:line="18" pos:column="13"/></name><index pos:line="18" pos:column="13">[<expr><name pos:line="18" pos:column="14">size_<pos:position pos:line="18" pos:column="19"/></name></expr>]<pos:position pos:line="18" pos:column="20"/></index></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">conn<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">++<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">size_<pos:position pos:line="19" pos:column="12"/></name></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">AsyncCall<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">::<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">Pointer<pos:position pos:line="20" pos:column="23"/></name></name></type> <name pos:line="20" pos:column="24">readCall<pos:position pos:line="20" pos:column="32"/></name> <init pos:line="20" pos:column="33">= <expr><call><name pos:line="20" pos:column="35">commCbCall<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><literal type="number" pos:line="20" pos:column="46">5<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="48">4<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="51">"IdleConnList::Read"<pos:position pos:line="20" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><call><name pos:line="21" pos:column="35">CommIoCbPtrFun<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">(<argument><expr><name><name pos:line="21" pos:column="50">IdleConnList<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">::<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="64">Read<pos:position pos:line="21" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="70">this<pos:position pos:line="21" pos:column="74"/></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="77"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">comm_read<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">conn<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="21">fakeReadBuf_<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="35">sizeof<argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">fakeReadBuf_<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">readCall<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="23" pos:column="5">AsyncCall<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">::<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">Pointer<pos:position pos:line="23" pos:column="23"/></name></name></type> <name pos:line="23" pos:column="24">timeoutCall<pos:position pos:line="23" pos:column="35"/></name> <init pos:line="23" pos:column="36">= <expr><call><name pos:line="23" pos:column="38">commCbCall<pos:position pos:line="23" pos:column="48"/></name><argument_list pos:line="23" pos:column="48">(<argument><expr><literal type="number" pos:line="23" pos:column="49">5<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="23" pos:column="51">4<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="54">"IdleConnList::Timeout"<pos:position pos:line="23" pos:column="77"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="24" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="24" pos:column="57"/></name><argument_list pos:line="24" pos:column="57">(<argument><expr><name><name pos:line="24" pos:column="58">IdleConnList<pos:position pos:line="24" pos:column="70"/></name><operator pos:line="24" pos:column="70">::<pos:position pos:line="24" pos:column="72"/></operator><name pos:line="24" pos:column="72">Timeout<pos:position pos:line="24" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="81">this<pos:position pos:line="24" pos:column="85"/></name></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="87"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="88"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">commSetConnTimeout<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">conn<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="30">Config<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">Timeout<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">serverIdlePconn<pos:position pos:line="25" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="62">timeoutCall<pos:position pos:line="25" pos:column="73"/></name></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

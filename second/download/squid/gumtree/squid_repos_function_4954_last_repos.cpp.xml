<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4954_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">StoreIOState<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">createStoreIO<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">StoreEntry<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="42">e<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="45">StoreIOState<pos:position pos:line="2" pos:column="57"/></name><operator pos:line="2" pos:column="57">::<pos:position pos:line="2" pos:column="59"/></operator><name pos:line="2" pos:column="59">STFNCB<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">cbFile<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="75">StoreIOState<pos:position pos:line="2" pos:column="87"/></name><operator pos:line="2" pos:column="87">::<pos:position pos:line="2" pos:column="89"/></operator><name pos:line="2" pos:column="89">STIOCB<pos:position pos:line="2" pos:column="95"/></name></name> <modifier pos:line="2" pos:column="96">*<pos:position pos:line="2" pos:column="97"/></modifier></type><name pos:line="2" pos:column="97">cbIo<pos:position pos:line="2" pos:column="101"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="103">void<pos:position pos:line="2" pos:column="107"/></name> <modifier pos:line="2" pos:column="108">*<pos:position pos:line="2" pos:column="109"/></modifier></type><name pos:line="2" pos:column="109">data<pos:position pos:line="2" pos:column="113"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="114"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">theFile<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">||<pos:position pos:line="4" pos:column="20"/></operator> <call><name><name pos:line="4" pos:column="21">theFile<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">error<pos:position pos:line="4" pos:column="35"/></name></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38"> <block pos:line="4" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">47<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="19">4<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="22">HERE<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&lt;&lt;<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="30">theFile<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">sfileno<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">filen<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Ipc<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">::<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">StoreMapAnchor<pos:position pos:line="10" pos:column="24"/></name></name> <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier><specifier pos:line="10" pos:column="26">const<pos:position pos:line="10" pos:column="31"/></specifier></type> <name pos:line="10" pos:column="32">slot<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">=
        <expr><call><name><name pos:line="11" pos:column="9">map<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">openForWriting<pos:position pos:line="11" pos:column="28"/></name></name><argument_list pos:line="11" pos:column="28">(<argument><expr><cast type="reinterpret" pos:line="11" pos:column="29">reinterpret_cast<argument_list type="generic" pos:line="11" pos:column="45">&lt;<argument><expr><specifier pos:line="11" pos:column="46">const<pos:position pos:line="11" pos:column="51"/></specifier> <name pos:line="11" pos:column="52">cache_key<pos:position pos:line="11" pos:column="61"/></name> <operator pos:line="11" pos:column="62">*<pos:position pos:line="11" pos:column="63"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="67"/></argument_list><argument_list pos:line="11" pos:column="64">(<argument><expr><name><name pos:line="11" pos:column="65">e<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">.<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="67">key<pos:position pos:line="11" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="11" pos:column="73">filen<pos:position pos:line="11" pos:column="78"/></name></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="80"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">slot<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block pos:line="12" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">47<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">5<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">HERE<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&lt;&lt;<pos:position pos:line="13" pos:column="36"/></operator> <literal type="string" pos:line="13" pos:column="31">"map-&gt;add failed"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">filen<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&gt;=<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">slot<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">set<pos:position pos:line="18" pos:column="14"/></name></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">e<pos:position pos:line="18" pos:column="16"/></name></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>

    <comment type="line" pos:line="20" pos:column="5">// XXX: We rely on our caller, storeSwapOutStart(), to set e.fileno.</comment>
    <comment type="line" pos:line="21" pos:column="5">// If that does not happen, the entry will not decrement the read level!</comment>

    <decl_stmt><decl><type><name><name pos:line="23" pos:column="5">Rock<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">::<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">SwapDir<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">::<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">Pointer<pos:position pos:line="23" pos:column="27"/></name></name></type> <name pos:line="23" pos:column="28">self<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">this<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></decl>;<pos:position pos:line="23" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">IoState<pos:position pos:line="24" pos:column="12"/></name> <modifier pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></modifier></type><name pos:line="24" pos:column="14">sio<pos:position pos:line="24" pos:column="17"/></name> <init pos:line="24" pos:column="18">= <expr><operator pos:line="24" pos:column="20">new<pos:position pos:line="24" pos:column="23"/></operator> <call><name pos:line="24" pos:column="24">IoState<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">self<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="39">e<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">cbFile<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">cbIo<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">data<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="62"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">sio<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">swap_dirn<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">index<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">sio<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">swap_filen<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">filen<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">sio<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">writeableAnchor_<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">slot<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">debugs<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="number" pos:line="30" pos:column="12">47<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="30" pos:column="15">5<pos:position pos:line="30" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="18">HERE<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;&lt;<pos:position pos:line="30" pos:column="31"/></operator> <literal type="string" pos:line="30" pos:column="26">"dir "<pos:position pos:line="30" pos:column="32"/></literal> <operator pos:line="30" pos:column="33">&lt;&lt;<pos:position pos:line="30" pos:column="41"/></operator> <name pos:line="30" pos:column="36">index<pos:position pos:line="30" pos:column="41"/></name> <operator pos:line="30" pos:column="42">&lt;&lt;<pos:position pos:line="30" pos:column="50"/></operator> <literal type="string" pos:line="30" pos:column="45">" created new filen "<pos:position pos:line="30" pos:column="66"/></literal> <operator pos:line="30" pos:column="67">&lt;&lt;<pos:position pos:line="30" pos:column="75"/></operator>
           <call><name><name pos:line="31" pos:column="12">std<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">::<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">setfill<pos:position pos:line="31" pos:column="24"/></name></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="char" pos:line="31" pos:column="25">'0'<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call> <operator pos:line="31" pos:column="30">&lt;&lt;<pos:position pos:line="31" pos:column="38"/></operator> <name><name pos:line="31" pos:column="33">std<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">::<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">hex<pos:position pos:line="31" pos:column="41"/></name></name> <operator pos:line="31" pos:column="42">&lt;&lt;<pos:position pos:line="31" pos:column="50"/></operator> <name><name pos:line="31" pos:column="45">std<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">::<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">uppercase<pos:position pos:line="31" pos:column="59"/></name></name> <operator pos:line="31" pos:column="60">&lt;&lt;<pos:position pos:line="31" pos:column="68"/></operator> <call><name><name pos:line="31" pos:column="63">std<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">::<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="68">setw<pos:position pos:line="31" pos:column="72"/></name></name><argument_list pos:line="31" pos:column="72">(<argument><expr><literal type="number" pos:line="31" pos:column="73">8<pos:position pos:line="31" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call> <operator pos:line="31" pos:column="76">&lt;&lt;<pos:position pos:line="31" pos:column="84"/></operator>
           <name><name pos:line="32" pos:column="12">sio<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">swap_filen<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">&lt;&lt;<pos:position pos:line="32" pos:column="36"/></operator> <name><name pos:line="32" pos:column="31">std<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">::<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">dec<pos:position pos:line="32" pos:column="39"/></name></name> <operator pos:line="32" pos:column="40">&lt;&lt;<pos:position pos:line="32" pos:column="48"/></operator> <literal type="string" pos:line="32" pos:column="43">" starting at "<pos:position pos:line="32" pos:column="58"/></literal> <operator pos:line="32" pos:column="59">&lt;&lt;<pos:position pos:line="32" pos:column="67"/></operator>
           <call><name pos:line="33" pos:column="12">diskOffset<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name><name pos:line="33" pos:column="23">sio<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">swap_filen<pos:position pos:line="33" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">sio<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">file<pos:position pos:line="35" pos:column="14"/></name></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">theFile<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">trackReferences<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">e<pos:position pos:line="37" pos:column="22"/></name></expr></argument>)<pos:position pos:line="37" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">sio<pos:position pos:line="38" pos:column="15"/></name></expr>;<pos:position pos:line="38" pos:column="16"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

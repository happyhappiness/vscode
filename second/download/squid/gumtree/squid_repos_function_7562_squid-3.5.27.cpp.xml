<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7562_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">mdfour<pos:position pos:line="2" pos:column="7"/></name><parameter_list pos:line="2" pos:column="7">(<parameter><decl><type><name pos:line="2" pos:column="8">unsigned<pos:position pos:line="2" pos:column="16"/></name> <name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">out<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">unsigned<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">in<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">n<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">char<pos:position pos:line="4" pos:column="18"/></name></type> <name><name pos:line="4" pos:column="19">buf<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><literal type="number" pos:line="4" pos:column="23">128<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uint32<pos:position pos:line="5" pos:column="11"/></name></type> <name><name pos:line="5" pos:column="12">M<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">16<pos:position pos:line="5" pos:column="16"/></literal></expr>]<pos:position pos:line="5" pos:column="17"/></index></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uint32<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">b<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">n<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="20">8<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">A<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <literal type="number" pos:line="9" pos:column="9">0x67452301<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">B<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <literal type="number" pos:line="10" pos:column="9">0xefcdab89<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">C<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <literal type="number" pos:line="11" pos:column="9">0x98badcfe<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">D<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <literal type="number" pos:line="12" pos:column="9">0x10325476<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">n<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&gt;<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="16">64<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition> <block pos:line="14" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">copy64<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">M<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">in<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">mdfour64<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">M<pos:position pos:line="16" pos:column="19"/></name></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">in<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">+=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="number" pos:line="17" pos:column="15">64<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">n<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">-=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">64<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></while>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">i<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="21">128<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></condition> <incr><expr><name pos:line="21" pos:column="26">i<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">++<pos:position pos:line="21" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="30"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="9">buf<pos:position pos:line="22" pos:column="12"/></name><index pos:line="22" pos:column="12">[<expr><name pos:line="22" pos:column="13">i<pos:position pos:line="22" pos:column="14"/></name></expr>]<pos:position pos:line="22" pos:column="15"/></index></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">memcpy<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name pos:line="23" pos:column="12">buf<pos:position pos:line="23" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="17">in<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="21">n<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">buf<pos:position pos:line="24" pos:column="8"/></name><index pos:line="24" pos:column="8">[<expr><name pos:line="24" pos:column="9">n<pos:position pos:line="24" pos:column="10"/></name></expr>]<pos:position pos:line="24" pos:column="11"/></index></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0x80<pos:position pos:line="24" pos:column="18"/></literal></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">n<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">&lt;=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="14">55<pos:position pos:line="26" pos:column="16"/></literal></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">copy4<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">buf<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">+<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="21">56<pos:position pos:line="27" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="25">b<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">copy64<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">M<pos:position pos:line="28" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="19">buf<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">mdfour64<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">M<pos:position pos:line="29" pos:column="19"/></name></expr></argument>)<pos:position pos:line="29" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">copy4<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">buf<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">+<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">120<pos:position pos:line="31" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="26">b<pos:position pos:line="31" pos:column="27"/></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">copy64<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">M<pos:position pos:line="32" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="19">buf<pos:position pos:line="32" pos:column="22"/></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">mdfour64<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">M<pos:position pos:line="33" pos:column="19"/></name></expr></argument>)<pos:position pos:line="33" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">copy64<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">M<pos:position pos:line="34" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="19">buf<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">+<pos:position pos:line="34" pos:column="24"/></operator> <literal type="number" pos:line="34" pos:column="25">64<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">mdfour64<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">M<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <for pos:line="38" pos:column="5">for <control pos:line="38" pos:column="9">(<init><expr><name pos:line="38" pos:column="10">i<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal></expr>;<pos:position pos:line="38" pos:column="16"/></init> <condition><expr><name pos:line="38" pos:column="17">i<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&lt;<pos:position pos:line="38" pos:column="23"/></operator> <literal type="number" pos:line="38" pos:column="21">128<pos:position pos:line="38" pos:column="24"/></literal></expr>;<pos:position pos:line="38" pos:column="25"/></condition> <incr><expr><name pos:line="38" pos:column="26">i<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">++<pos:position pos:line="38" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="30"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="9">buf<pos:position pos:line="39" pos:column="12"/></name><index pos:line="39" pos:column="12">[<expr><name pos:line="39" pos:column="13">i<pos:position pos:line="39" pos:column="14"/></name></expr>]<pos:position pos:line="39" pos:column="15"/></index></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">copy64<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><name pos:line="40" pos:column="12">M<pos:position pos:line="40" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="15">buf<pos:position pos:line="40" pos:column="18"/></name></expr></argument>)<pos:position pos:line="40" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">copy4<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">out<pos:position pos:line="42" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="16">A<pos:position pos:line="42" pos:column="17"/></name></expr></argument>)<pos:position pos:line="42" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">copy4<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">out<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">+<pos:position pos:line="43" pos:column="16"/></operator> <literal type="number" pos:line="43" pos:column="17">4<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">B<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">copy4<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">out<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">+<pos:position pos:line="44" pos:column="16"/></operator> <literal type="number" pos:line="44" pos:column="17">8<pos:position pos:line="44" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="20">C<pos:position pos:line="44" pos:column="21"/></name></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">copy4<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">out<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">+<pos:position pos:line="45" pos:column="16"/></operator> <literal type="number" pos:line="45" pos:column="17">12<pos:position pos:line="45" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="21">D<pos:position pos:line="45" pos:column="22"/></name></expr></argument>)<pos:position pos:line="45" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="47" pos:column="5">A<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <name pos:line="47" pos:column="9">B<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <name pos:line="47" pos:column="13">C<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">D<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <literal type="number" pos:line="47" pos:column="21">0<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

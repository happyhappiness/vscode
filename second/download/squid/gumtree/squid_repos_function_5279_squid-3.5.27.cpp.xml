<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5279_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">maintain<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* TODO: possible options for improvement;
     *
     * Note that too much aggression here is not good. It means that disk
     * controller is getting a long queue of removals to act on, along
     * with its regular I/O queue, and that client traffic is 'paused'
     * and growing the network I/O queue as well while the scan happens.
     * Possibly bad knock-on effects as Squid catches up on all that.
     *
     * Bug 2448 may have been a sign of what can wrong. At the least it
     * provides a test case for aggression effects in overflow conditions.
     *
     * - base removal limit on space saved, instead of count ?
     *
     * - base removal rate on a traffic speed counter ?
     *   as the purge took up more time out of the second it would grow to
     *   a graceful full pause
     *
     * - pass out a value to cause another event to be scheduled immediately
     *   instead of waiting a whole second more ?
     *   knock on; schedule less if all caches are under low-water
     *
     * - admin configurable removal rate or count ?
     *   the current numbers are arbitrary, config helps with experimental
     *   trials and future-proofing the install base.
     *   we also have this indirectly by shifting the relative positions
     *   of low-, high- water and the total capacity limit.
     */</comment>

    <comment type="line" pos:line="32" pos:column="5">// minSize() is swap_low_watermark in bytes</comment>
    <decl_stmt><decl><type><specifier pos:line="33" pos:column="5">const<pos:position pos:line="33" pos:column="10"/></specifier> <name pos:line="33" pos:column="11">uint64_t<pos:position pos:line="33" pos:column="19"/></name></type> <name pos:line="33" pos:column="20">lowWaterSz<pos:position pos:line="33" pos:column="30"/></name> <init pos:line="33" pos:column="31">= <expr><call><name pos:line="33" pos:column="33">minSize<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">()<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="43"/></decl_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">currentSize<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">()<pos:position pos:line="35" pos:column="22"/></argument_list></call> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="25">lowWaterSz<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">47<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="20">5<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="23">"space still available in "<pos:position pos:line="36" pos:column="50"/></literal> <operator pos:line="36" pos:column="51">&lt;&lt;<pos:position pos:line="36" pos:column="59"/></operator> <name pos:line="36" pos:column="54">path<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/* We can't delete objects while rebuilding swap */</comment>
    <comment type="block" pos:line="41" pos:column="5">/* XXX each store should start maintaining as it comes online. */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">StoreController<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">::<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">store_dirs_rebuilding<pos:position pos:line="42" pos:column="47"/></name></name></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48"> <block pos:line="42" pos:column="49">{
        <comment type="line" pos:line="43" pos:column="9">// suppress the warnings, except once each minute</comment>
        <decl_stmt><decl><specifier pos:line="44" pos:column="9">static<pos:position pos:line="44" pos:column="15"/></specifier> <type><name pos:line="44" pos:column="16">int64_t<pos:position pos:line="44" pos:column="23"/></name></type> <name pos:line="44" pos:column="24">lastWarn<pos:position pos:line="44" pos:column="32"/></name> <init pos:line="44" pos:column="33">= <expr><literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="44" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">int<pos:position pos:line="45" pos:column="12"/></name></type> <name pos:line="45" pos:column="13">warnLevel<pos:position pos:line="45" pos:column="22"/></name> <init pos:line="45" pos:column="23">= <expr><literal type="number" pos:line="45" pos:column="25">3<pos:position pos:line="45" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="27"/></decl_stmt>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">lastWarn<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">+<pos:position pos:line="46" pos:column="22"/></operator><literal type="number" pos:line="46" pos:column="22">60<pos:position pos:line="46" pos:column="24"/></literal> <operator pos:line="46" pos:column="25">&lt;<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="27">squid_curtime<pos:position pos:line="46" pos:column="40"/></name></expr>)<pos:position pos:line="46" pos:column="41"/></condition><then pos:line="46" pos:column="41"> <block pos:line="46" pos:column="42">{
            <expr_stmt><expr><name pos:line="47" pos:column="13">lastWarn<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">squid_curtime<pos:position pos:line="47" pos:column="37"/></name></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="48" pos:column="13">warnLevel<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="25">DBG_IMPORTANT<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">47<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="20">warnLevel<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="31">StoreController<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">::<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="48">store_dirs_rebuilding<pos:position pos:line="50" pos:column="69"/></name></name> <operator pos:line="50" pos:column="70">&lt;&lt;<pos:position pos:line="50" pos:column="78"/></operator> <literal type="string" pos:line="50" pos:column="73">" cache_dir still rebuilding. Skip GC for "<pos:position pos:line="50" pos:column="116"/></literal> <operator pos:line="50" pos:column="117">&lt;&lt;<pos:position pos:line="50" pos:column="125"/></operator> <name pos:line="50" pos:column="120">path<pos:position pos:line="50" pos:column="124"/></name></expr></argument>)<pos:position pos:line="50" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="126"/></expr_stmt>
        <return pos:line="51" pos:column="9">return;<pos:position pos:line="51" pos:column="16"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="54" pos:column="5">// maxSize() is cache_dir total size in bytes</comment>
    <decl_stmt><decl><type><specifier pos:line="55" pos:column="5">const<pos:position pos:line="55" pos:column="10"/></specifier> <name pos:line="55" pos:column="11">uint64_t<pos:position pos:line="55" pos:column="19"/></name></type> <name pos:line="55" pos:column="20">highWaterSz<pos:position pos:line="55" pos:column="31"/></name> <init pos:line="55" pos:column="32">= <expr><operator pos:line="55" pos:column="34">(<pos:position pos:line="55" pos:column="35"/></operator><operator pos:line="55" pos:column="35">(<pos:position pos:line="55" pos:column="36"/></operator><call><name pos:line="55" pos:column="36">maxSize<pos:position pos:line="55" pos:column="43"/></name><argument_list pos:line="55" pos:column="43">()<pos:position pos:line="55" pos:column="45"/></argument_list></call> <operator pos:line="55" pos:column="46">*<pos:position pos:line="55" pos:column="47"/></operator> <name><name pos:line="55" pos:column="48">Config<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">.<pos:position pos:line="55" pos:column="55"/></operator><name pos:line="55" pos:column="55">Swap<pos:position pos:line="55" pos:column="59"/></name><operator pos:line="55" pos:column="59">.<pos:position pos:line="55" pos:column="60"/></operator><name pos:line="55" pos:column="60">highWaterMark<pos:position pos:line="55" pos:column="73"/></name></name><operator pos:line="55" pos:column="73">)<pos:position pos:line="55" pos:column="74"/></operator> <operator pos:line="55" pos:column="75">/<pos:position pos:line="55" pos:column="76"/></operator> <literal type="number" pos:line="55" pos:column="77">100<pos:position pos:line="55" pos:column="80"/></literal><operator pos:line="55" pos:column="80">)<pos:position pos:line="55" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="55" pos:column="82"/></decl_stmt>

    <comment type="line" pos:line="57" pos:column="5">// f is percentage of 'gap' filled between low- and high-water.</comment>
    <comment type="line" pos:line="58" pos:column="5">// Used to reduced purge rate when between water markers, and</comment>
    <comment type="line" pos:line="59" pos:column="5">// to multiply it more agressively the further above high-water</comment>
    <comment type="line" pos:line="60" pos:column="5">// it reaches. But in a graceful linear growth curve.</comment>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">double<pos:position pos:line="61" pos:column="11"/></name></type> <name pos:line="61" pos:column="12">f<pos:position pos:line="61" pos:column="13"/></name> <init pos:line="61" pos:column="14">= <expr><literal type="number" pos:line="61" pos:column="16">1.0<pos:position pos:line="61" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="61" pos:column="20"/></decl_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">highWaterSz<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">&gt;<pos:position pos:line="62" pos:column="25"/></operator> <name pos:line="62" pos:column="23">lowWaterSz<pos:position pos:line="62" pos:column="33"/></name></expr>)<pos:position pos:line="62" pos:column="34"/></condition><then pos:line="62" pos:column="34"> <block pos:line="62" pos:column="35">{
        <comment type="line" pos:line="63" pos:column="9">// might be equal. n/0 is bad.</comment>
        <expr_stmt><expr><name pos:line="64" pos:column="9">f<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <call pos:line="64" pos:column="13">(<name pos:line="64" pos:column="14">double<pos:position pos:line="64" pos:column="20"/></name>) <argument_list pos:line="64" pos:column="22">(<argument><expr><call><name pos:line="64" pos:column="23">currentSize<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">()<pos:position pos:line="64" pos:column="36"/></argument_list></call> <operator pos:line="64" pos:column="37">-<pos:position pos:line="64" pos:column="38"/></operator> <name pos:line="64" pos:column="39">lowWaterSz<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call> <operator pos:line="64" pos:column="51">/<pos:position pos:line="64" pos:column="52"/></operator> <operator pos:line="64" pos:column="53">(<pos:position pos:line="64" pos:column="54"/></operator><name pos:line="64" pos:column="54">highWaterSz<pos:position pos:line="64" pos:column="65"/></name> <operator pos:line="64" pos:column="66">-<pos:position pos:line="64" pos:column="67"/></operator> <name pos:line="64" pos:column="68">lowWaterSz<pos:position pos:line="64" pos:column="78"/></name><operator pos:line="64" pos:column="78">)<pos:position pos:line="64" pos:column="79"/></operator></expr>;<pos:position pos:line="64" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="67" pos:column="5">// how deep to look for a single object that can be removed</comment>
    <decl_stmt><decl><type><name pos:line="68" pos:column="5">int<pos:position pos:line="68" pos:column="8"/></name></type> <name pos:line="68" pos:column="9">max_scan<pos:position pos:line="68" pos:column="17"/></name> <init pos:line="68" pos:column="18">= <expr><call pos:line="68" pos:column="20">(<name pos:line="68" pos:column="21">int<pos:position pos:line="68" pos:column="24"/></name>) <argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">f<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">*<pos:position pos:line="68" pos:column="30"/></operator> <literal type="number" pos:line="68" pos:column="31">400.0<pos:position pos:line="68" pos:column="36"/></literal> <operator pos:line="68" pos:column="37">+<pos:position pos:line="68" pos:column="38"/></operator> <literal type="number" pos:line="68" pos:column="39">100.0<pos:position pos:line="68" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="68" pos:column="46"/></decl_stmt>

    <comment type="line" pos:line="70" pos:column="5">// try to purge only this many objects this cycle.</comment>
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">int<pos:position pos:line="71" pos:column="8"/></name></type> <name pos:line="71" pos:column="9">max_remove<pos:position pos:line="71" pos:column="19"/></name> <init pos:line="71" pos:column="20">= <expr><call pos:line="71" pos:column="22">(<name pos:line="71" pos:column="23">int<pos:position pos:line="71" pos:column="26"/></name>) <argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">f<pos:position pos:line="71" pos:column="30"/></name> <operator pos:line="71" pos:column="31">*<pos:position pos:line="71" pos:column="32"/></operator> <literal type="number" pos:line="71" pos:column="33">300.0<pos:position pos:line="71" pos:column="38"/></literal> <operator pos:line="71" pos:column="39">+<pos:position pos:line="71" pos:column="40"/></operator> <literal type="number" pos:line="71" pos:column="41">20.0<pos:position pos:line="71" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="71" pos:column="47"/></decl_stmt>

    <comment type="block" pos:line="73" pos:column="5">/*
     * This is kinda cheap, but so we need this priority hack?
     */</comment>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">debugs<pos:position pos:line="76" pos:column="11"/></name><argument_list pos:line="76" pos:column="11">(<argument><expr><literal type="number" pos:line="76" pos:column="12">47<pos:position pos:line="76" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="16">3<pos:position pos:line="76" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="19">"f="<pos:position pos:line="76" pos:column="23"/></literal> <operator pos:line="76" pos:column="24">&lt;&lt;<pos:position pos:line="76" pos:column="32"/></operator> <name pos:line="76" pos:column="27">f<pos:position pos:line="76" pos:column="28"/></name> <operator pos:line="76" pos:column="29">&lt;&lt;<pos:position pos:line="76" pos:column="37"/></operator> <literal type="string" pos:line="76" pos:column="32">", max_scan="<pos:position pos:line="76" pos:column="45"/></literal> <operator pos:line="76" pos:column="46">&lt;&lt;<pos:position pos:line="76" pos:column="54"/></operator> <name pos:line="76" pos:column="49">max_scan<pos:position pos:line="76" pos:column="57"/></name> <operator pos:line="76" pos:column="58">&lt;&lt;<pos:position pos:line="76" pos:column="66"/></operator> <literal type="string" pos:line="76" pos:column="61">", max_remove="<pos:position pos:line="76" pos:column="76"/></literal> <operator pos:line="76" pos:column="77">&lt;&lt;<pos:position pos:line="76" pos:column="85"/></operator> <name pos:line="76" pos:column="80">max_remove<pos:position pos:line="76" pos:column="90"/></name></expr></argument>)<pos:position pos:line="76" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="92"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="78" pos:column="5">RemovalPurgeWalker<pos:position pos:line="78" pos:column="23"/></name> <modifier pos:line="78" pos:column="24">*<pos:position pos:line="78" pos:column="25"/></modifier></type><name pos:line="78" pos:column="25">walker<pos:position pos:line="78" pos:column="31"/></name> <init pos:line="78" pos:column="32">= <expr><call><name><name pos:line="78" pos:column="34">repl<pos:position pos:line="78" pos:column="38"/></name><operator pos:line="78" pos:column="38">-&gt;<pos:position pos:line="78" pos:column="43"/></operator><name pos:line="78" pos:column="40">PurgeInit<pos:position pos:line="78" pos:column="49"/></name></name><argument_list pos:line="78" pos:column="49">(<argument><expr><name pos:line="78" pos:column="50">repl<pos:position pos:line="78" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="56">max_scan<pos:position pos:line="78" pos:column="64"/></name></expr></argument>)<pos:position pos:line="78" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="78" pos:column="66"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="80" pos:column="5">int<pos:position pos:line="80" pos:column="8"/></name></type> <name pos:line="80" pos:column="9">removed<pos:position pos:line="80" pos:column="16"/></name> <init pos:line="80" pos:column="17">= <expr><literal type="number" pos:line="80" pos:column="19">0<pos:position pos:line="80" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="80" pos:column="21"/></decl_stmt>
    <comment type="line" pos:line="81" pos:column="5">// only purge while above low-water</comment>
    <while pos:line="82" pos:column="5">while <condition pos:line="82" pos:column="11">(<expr><call><name pos:line="82" pos:column="12">currentSize<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">()<pos:position pos:line="82" pos:column="25"/></argument_list></call> <operator pos:line="82" pos:column="26">&gt;=<pos:position pos:line="82" pos:column="31"/></operator> <name pos:line="82" pos:column="29">lowWaterSz<pos:position pos:line="82" pos:column="39"/></name></expr>)<pos:position pos:line="82" pos:column="40"/></condition> <block pos:line="82" pos:column="41">{

        <comment type="line" pos:line="84" pos:column="9">// stop if we reached max removals for this cycle,</comment>
        <comment type="line" pos:line="85" pos:column="9">// Bug 2448 may be from this not clearing enough,</comment>
        <comment type="line" pos:line="86" pos:column="9">// but it predates the current algorithm so not sure</comment>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">removed<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">&gt;=<pos:position pos:line="87" pos:column="26"/></operator> <name pos:line="87" pos:column="24">max_remove<pos:position pos:line="87" pos:column="34"/></name></expr>)<pos:position pos:line="87" pos:column="35"/></condition><then pos:line="87" pos:column="35">
            <block type="pseudo"><break pos:line="88" pos:column="13">break;<pos:position pos:line="88" pos:column="19"/></break></block></then></if>

        <decl_stmt><decl><type><name pos:line="90" pos:column="9">StoreEntry<pos:position pos:line="90" pos:column="19"/></name> <modifier pos:line="90" pos:column="20">*<pos:position pos:line="90" pos:column="21"/></modifier></type><name pos:line="90" pos:column="21">e<pos:position pos:line="90" pos:column="22"/></name> <init pos:line="90" pos:column="23">= <expr><call><name><name pos:line="90" pos:column="25">walker<pos:position pos:line="90" pos:column="31"/></name><operator pos:line="90" pos:column="31">-&gt;<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="33">Next<pos:position pos:line="90" pos:column="37"/></name></name><argument_list pos:line="90" pos:column="37">(<argument><expr><name pos:line="90" pos:column="38">walker<pos:position pos:line="90" pos:column="44"/></name></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="90" pos:column="46"/></decl_stmt>

        <comment type="line" pos:line="92" pos:column="9">// stop if all objects are locked / in-use,</comment>
        <comment type="line" pos:line="93" pos:column="9">// or the cache is empty</comment>
        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">!<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">e<pos:position pos:line="94" pos:column="15"/></name></expr>)<pos:position pos:line="94" pos:column="16"/></condition><then pos:line="94" pos:column="16">
            <block type="pseudo"><break pos:line="95" pos:column="13">break;<pos:position pos:line="95" pos:column="19"/></break></block></then></if>      <comment type="block" pos:line="95" pos:column="25">/* no more objects */</comment>

        <expr_stmt><expr><operator pos:line="97" pos:column="9">++<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="11">removed<pos:position pos:line="97" pos:column="18"/></name></expr>;<pos:position pos:line="97" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="99" pos:column="9">e<pos:position pos:line="99" pos:column="10"/></name><operator pos:line="99" pos:column="10">-&gt;<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="12">release<pos:position pos:line="99" pos:column="19"/></name></name><argument_list pos:line="99" pos:column="19">()<pos:position pos:line="99" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="102" pos:column="5">walker<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">-&gt;<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="13">Done<pos:position pos:line="102" pos:column="17"/></name></name><argument_list pos:line="102" pos:column="17">(<argument><expr><name pos:line="102" pos:column="18">walker<pos:position pos:line="102" pos:column="24"/></name></expr></argument>)<pos:position pos:line="102" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">debugs<pos:position pos:line="103" pos:column="11"/></name><argument_list pos:line="103" pos:column="11">(<argument><expr><literal type="number" pos:line="103" pos:column="12">47<pos:position pos:line="103" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="103" pos:column="16">(<pos:position pos:line="103" pos:column="17"/></operator><ternary><condition><expr><name pos:line="103" pos:column="17">removed<pos:position pos:line="103" pos:column="24"/></name></expr> ?<pos:position pos:line="103" pos:column="26"/></condition><then pos:line="103" pos:column="26"> <expr><literal type="number" pos:line="103" pos:column="27">2<pos:position pos:line="103" pos:column="28"/></literal></expr> <pos:position pos:line="103" pos:column="29"/></then><else pos:line="103" pos:column="29">: <expr><literal type="number" pos:line="103" pos:column="31">3<pos:position pos:line="103" pos:column="32"/></literal></expr></else></ternary><operator pos:line="103" pos:column="32">)<pos:position pos:line="103" pos:column="33"/></operator></expr></argument>, <argument><expr><name pos:line="103" pos:column="35">path<pos:position pos:line="103" pos:column="39"/></name> <operator pos:line="103" pos:column="40">&lt;&lt;<pos:position pos:line="103" pos:column="48"/></operator>
           <literal type="string" pos:line="104" pos:column="12">" removed "<pos:position pos:line="104" pos:column="23"/></literal> <operator pos:line="104" pos:column="24">&lt;&lt;<pos:position pos:line="104" pos:column="32"/></operator> <name pos:line="104" pos:column="27">removed<pos:position pos:line="104" pos:column="34"/></name> <operator pos:line="104" pos:column="35">&lt;&lt;<pos:position pos:line="104" pos:column="43"/></operator> <literal type="string" pos:line="104" pos:column="38">"/"<pos:position pos:line="104" pos:column="41"/></literal> <operator pos:line="104" pos:column="42">&lt;&lt;<pos:position pos:line="104" pos:column="50"/></operator> <name pos:line="104" pos:column="45">max_remove<pos:position pos:line="104" pos:column="55"/></name> <operator pos:line="104" pos:column="56">&lt;&lt;<pos:position pos:line="104" pos:column="64"/></operator> <literal type="string" pos:line="104" pos:column="59">" f="<pos:position pos:line="104" pos:column="64"/></literal> <operator pos:line="104" pos:column="65">&lt;&lt;<pos:position pos:line="104" pos:column="73"/></operator>
           <call><name><name pos:line="105" pos:column="12">std<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">::<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">setprecision<pos:position pos:line="105" pos:column="29"/></name></name><argument_list pos:line="105" pos:column="29">(<argument><expr><literal type="number" pos:line="105" pos:column="30">4<pos:position pos:line="105" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="32"/></argument_list></call> <operator pos:line="105" pos:column="33">&lt;&lt;<pos:position pos:line="105" pos:column="41"/></operator> <name pos:line="105" pos:column="36">f<pos:position pos:line="105" pos:column="37"/></name> <operator pos:line="105" pos:column="38">&lt;&lt;<pos:position pos:line="105" pos:column="46"/></operator> <literal type="string" pos:line="105" pos:column="41">" max_scan="<pos:position pos:line="105" pos:column="53"/></literal> <operator pos:line="105" pos:column="54">&lt;&lt;<pos:position pos:line="105" pos:column="62"/></operator> <name pos:line="105" pos:column="57">max_scan<pos:position pos:line="105" pos:column="65"/></name></expr></argument>)<pos:position pos:line="105" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="67"/></expr_stmt>

    <comment type="line" pos:line="107" pos:column="5">// what if cache is still over the high watermark ?</comment>
    <comment type="line" pos:line="108" pos:column="5">// Store::Maintain() schedules another purge in 1 second.</comment>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

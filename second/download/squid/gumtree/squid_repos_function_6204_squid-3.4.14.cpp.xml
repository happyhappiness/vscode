<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6204_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">esiProcessResult_t<pos:position pos:line="1" pos:column="19"/></name></type>
<name><name pos:line="2" pos:column="1">esiSequence<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">process<pos:position pos:line="2" pos:column="21"/></name></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">inheritedVarsFlag<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">86<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"esiSequence::process: "<pos:position pos:line="4" pos:column="43"/></literal> <operator pos:line="4" pos:column="44">&lt;&lt;<pos:position pos:line="4" pos:column="52"/></operator> <name pos:line="4" pos:column="47">this<pos:position pos:line="4" pos:column="51"/></name> <operator pos:line="4" pos:column="52">&lt;&lt;<pos:position pos:line="4" pos:column="60"/></operator> <literal type="string" pos:line="4" pos:column="55">" processing"<pos:position pos:line="4" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="70"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">processing<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">86<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">5<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"esiSequence::process: "<pos:position pos:line="7" pos:column="47"/></literal> <operator pos:line="7" pos:column="48">&lt;&lt;<pos:position pos:line="7" pos:column="56"/></operator> <name pos:line="7" pos:column="51">this<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">&lt;&lt;<pos:position pos:line="7" pos:column="64"/></operator>
               <literal type="string" pos:line="8" pos:column="16">" reentry attempt during processing"<pos:position pos:line="8" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/* process as much of the list as we can, stopping only on
     * faliures
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">processing<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">||<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">processedcount<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">==<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">processingResult<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">ESI_PROCESS_COMPLETE<pos:position pos:line="15" pos:column="48"/></name></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">dovars<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><name pos:line="17" pos:column="18">inheritedVarsFlag<pos:position pos:line="17" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">flags<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">dovars<pos:position pos:line="19" pos:column="21"/></name></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">dovars<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">86<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">5<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"esiSequence::process: Processing "<pos:position pos:line="22" pos:column="54"/></literal> <operator pos:line="22" pos:column="55">&lt;&lt;<pos:position pos:line="22" pos:column="63"/></operator> <name pos:line="22" pos:column="58">this<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">&lt;&lt;<pos:position pos:line="22" pos:column="71"/></operator> <literal type="string" pos:line="22" pos:column="66">" with"<pos:position pos:line="22" pos:column="73"/></literal> <operator pos:line="22" pos:column="74">&lt;&lt;<pos:position pos:line="22" pos:column="82"/></operator>
           <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><ternary><condition><expr><name pos:line="23" pos:column="13">dovars<pos:position pos:line="23" pos:column="19"/></name></expr> ?<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <expr><literal type="string" pos:line="23" pos:column="22">""<pos:position pos:line="23" pos:column="24"/></literal></expr> <pos:position pos:line="23" pos:column="25"/></then><else pos:line="23" pos:column="25">: <expr><literal type="string" pos:line="23" pos:column="27">"out"<pos:position pos:line="23" pos:column="32"/></literal></expr></else></ternary><operator pos:line="23" pos:column="32">)<pos:position pos:line="23" pos:column="33"/></operator> <operator pos:line="23" pos:column="34">&lt;&lt;<pos:position pos:line="23" pos:column="42"/></operator> <literal type="string" pos:line="23" pos:column="37">" variable processing"<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">processing<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="boolean" pos:line="25" pos:column="18">true<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">nextElementToProcess<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">processedcount<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>

    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><operator pos:line="29" pos:column="12">!<pos:position pos:line="29" pos:column="13"/></operator><call><name pos:line="29" pos:column="13">finishedProcessing<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">()<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="34"/></condition> <block pos:line="29" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">processStep<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">dovars<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">processing<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25">
            <block type="pseudo"><return pos:line="33" pos:column="13">return <expr><name pos:line="33" pos:column="20">processingResult<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></return></block></then></if>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">processingResult<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">==<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="33">ESI_PROCESS_FAILED<pos:position pos:line="35" pos:column="51"/></name></expr>)<pos:position pos:line="35" pos:column="52"/></condition><then pos:line="35" pos:column="52"> <block pos:line="35" pos:column="53">{
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">elements<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">.<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">setNULL<pos:position pos:line="36" pos:column="29"/></name></name> <argument_list pos:line="36" pos:column="30">(<argument><expr><literal type="number" pos:line="36" pos:column="31">0<pos:position pos:line="36" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="36" pos:column="34">elements<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">.<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">size<pos:position pos:line="36" pos:column="47"/></name></name><argument_list pos:line="36" pos:column="47">()<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">failed<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="boolean" pos:line="37" pos:column="22">true<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">parent<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">NULL<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="39" pos:column="13">processing<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="boolean" pos:line="39" pos:column="26">false<pos:position pos:line="39" pos:column="31"/></literal></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><name pos:line="40" pos:column="20">processingResult<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">assert<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">processingResult<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">!=<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">ESI_PROCESS_COMPLETE<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">||<pos:position pos:line="44" pos:column="56"/></operator> <name pos:line="44" pos:column="57">processedcount<pos:position pos:line="44" pos:column="71"/></name> <operator pos:line="44" pos:column="72">==<pos:position pos:line="44" pos:column="74"/></operator> <call><name><name pos:line="44" pos:column="75">elements<pos:position pos:line="44" pos:column="83"/></name><operator pos:line="44" pos:column="83">.<pos:position pos:line="44" pos:column="84"/></operator><name pos:line="44" pos:column="84">size<pos:position pos:line="44" pos:column="88"/></name></name><argument_list pos:line="44" pos:column="88">()<pos:position pos:line="44" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="92"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">processingResult<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">==<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">ESI_PROCESS_COMPLETE<pos:position pos:line="46" pos:column="49"/></name> <operator pos:line="46" pos:column="50">||<pos:position pos:line="46" pos:column="52"/></operator> <name pos:line="46" pos:column="53">processingResult<pos:position pos:line="46" pos:column="69"/></name> <operator pos:line="46" pos:column="70">==<pos:position pos:line="46" pos:column="72"/></operator> <name pos:line="46" pos:column="73">ESI_PROCESS_PENDING_WONTFAIL<pos:position pos:line="46" pos:column="101"/></name></expr>)<pos:position pos:line="46" pos:column="102"/></condition><then pos:line="46" pos:column="102">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">wontFail<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">()<pos:position pos:line="47" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">processedcount<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">==<pos:position pos:line="49" pos:column="26"/></operator> <call><name><name pos:line="49" pos:column="27">elements<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">.<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">size<pos:position pos:line="49" pos:column="40"/></name></name><argument_list pos:line="49" pos:column="40">()<pos:position pos:line="49" pos:column="42"/></argument_list></call> <operator pos:line="49" pos:column="43">||<pos:position pos:line="49" pos:column="45"/></operator> <name pos:line="49" pos:column="46">provideIncrementalData<pos:position pos:line="49" pos:column="68"/></name></expr>)<pos:position pos:line="49" pos:column="69"/></condition><then pos:line="49" pos:column="69"> <block pos:line="49" pos:column="70">{
        <decl_stmt><decl><type><name><name pos:line="50" pos:column="9">ESISegment<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">::<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">Pointer<pos:position pos:line="50" pos:column="28"/></name></name></type> <name pos:line="50" pos:column="29">temp<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><operator pos:line="50" pos:column="34">new<pos:position pos:line="50" pos:column="37"/></operator> <name pos:line="50" pos:column="38">ESISegment<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></decl>;<pos:position pos:line="50" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">render<pos:position pos:line="51" pos:column="15"/></name> <argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">temp<pos:position pos:line="51" pos:column="21"/></name></expr></argument>)<pos:position pos:line="51" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name><name pos:line="53" pos:column="13">temp<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">next<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">.<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="24">getRaw<pos:position pos:line="53" pos:column="30"/></name></name><argument_list pos:line="53" pos:column="30">()<pos:position pos:line="53" pos:column="32"/></argument_list></call> <operator pos:line="53" pos:column="33">||<pos:position pos:line="53" pos:column="35"/></operator> <name><name pos:line="53" pos:column="36">temp<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">-&gt;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="42">len<pos:position pos:line="53" pos:column="45"/></name></name></expr>)<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="54" pos:column="13">parent<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">provideData<pos:position pos:line="54" pos:column="32"/></name></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">temp<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="39">this<pos:position pos:line="54" pos:column="43"/></name></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt></block></then>
        <else pos:line="55" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="13">ESISegmentFreeList<pos:position pos:line="56" pos:column="31"/></name> <argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">temp<pos:position pos:line="56" pos:column="37"/></name></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt></block></else></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/* Depends on full parsing before processing */</comment>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">processedcount<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">==<pos:position pos:line="60" pos:column="26"/></operator> <call><name><name pos:line="60" pos:column="27">elements<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">.<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="36">size<pos:position pos:line="60" pos:column="40"/></name></name><argument_list pos:line="60" pos:column="40">()<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="9">parent<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">NULL<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">debugs<pos:position pos:line="63" pos:column="11"/></name><argument_list pos:line="63" pos:column="11">(<argument><expr><literal type="number" pos:line="63" pos:column="12">86<pos:position pos:line="63" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="16">5<pos:position pos:line="63" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="19">"esiSequence::process: "<pos:position pos:line="63" pos:column="43"/></literal> <operator pos:line="63" pos:column="44">&lt;&lt;<pos:position pos:line="63" pos:column="52"/></operator> <name pos:line="63" pos:column="47">this<pos:position pos:line="63" pos:column="51"/></name> <operator pos:line="63" pos:column="52">&lt;&lt;<pos:position pos:line="63" pos:column="60"/></operator> <literal type="string" pos:line="63" pos:column="55">" completed"<pos:position pos:line="63" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name pos:line="65" pos:column="5">processing<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <literal type="boolean" pos:line="65" pos:column="18">false<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt>

    <return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">processingResult<pos:position pos:line="67" pos:column="28"/></name></expr>;<pos:position pos:line="67" pos:column="29"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

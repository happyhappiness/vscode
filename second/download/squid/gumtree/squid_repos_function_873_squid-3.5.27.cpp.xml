<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_873_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Transients<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">disconnect<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">MemObject<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="35">mem_obj<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">mem_obj<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">xitTable<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">.<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">index<pos:position pos:line="4" pos:column="31"/></name></name> <operator pos:line="4" pos:column="32">&gt;=<pos:position pos:line="4" pos:column="37"/></operator> <literal type="number" pos:line="4" pos:column="35">0<pos:position pos:line="4" pos:column="36"/></literal></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37"> <block pos:line="4" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">assert<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">map<pos:position pos:line="5" pos:column="19"/></name></expr></argument>)<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">mem_obj<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">xitTable<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">.<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">io<pos:position pos:line="6" pos:column="32"/></name></name> <operator pos:line="6" pos:column="33">==<pos:position pos:line="6" pos:column="35"/></operator> <name><name pos:line="6" pos:column="36">MemObject<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">::<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="47">ioWriting<pos:position pos:line="6" pos:column="56"/></name></name></expr>)<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57"> <block pos:line="6" pos:column="58">{
            <expr_stmt><expr><call><name><name pos:line="7" pos:column="13">map<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">abortWriting<pos:position pos:line="7" pos:column="30"/></name></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name><name pos:line="7" pos:column="31">mem_obj<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">xitTable<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">.<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">index<pos:position pos:line="7" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="8" pos:column="10"/></block></then> <else pos:line="8" pos:column="11">else <block pos:line="8" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">assert<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name><name pos:line="9" pos:column="20">mem_obj<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">xitTable<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">io<pos:position pos:line="9" pos:column="39"/></name></name> <operator pos:line="9" pos:column="40">==<pos:position pos:line="9" pos:column="42"/></operator> <name><name pos:line="9" pos:column="43">MemObject<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">::<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="54">ioReading<pos:position pos:line="9" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">map<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">closeForReading<pos:position pos:line="10" pos:column="33"/></name></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name><name pos:line="10" pos:column="34">mem_obj<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">xitTable<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">index<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">locals<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">at<pos:position pos:line="12" pos:column="19"/></name></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">mem_obj<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">xitTable<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">.<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">index<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call> <operator pos:line="12" pos:column="44">=<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">NULL<pos:position pos:line="12" pos:column="50"/></name></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">mem_obj<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">xitTable<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">.<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">index<pos:position pos:line="13" pos:column="31"/></name></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <operator pos:line="13" pos:column="34">-<pos:position pos:line="13" pos:column="35"/></operator><literal type="number" pos:line="13" pos:column="35">1<pos:position pos:line="13" pos:column="36"/></literal></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">mem_obj<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">.<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">xitTable<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">io<pos:position pos:line="14" pos:column="28"/></name></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <name><name pos:line="14" pos:column="31">MemObject<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">::<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">ioDone<pos:position pos:line="14" pos:column="48"/></name></name></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

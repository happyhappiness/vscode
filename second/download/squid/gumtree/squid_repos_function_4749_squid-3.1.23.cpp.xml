<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4749_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ident<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Start<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">IpAddress<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">&amp;<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="25">me<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">IpAddress<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">my_peer<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">IDCB<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="56">callback<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">void<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">data<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IdentStateData<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">fd<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">key1<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">IDENT_KEY_SZ<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">key2<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><name pos:line="7" pos:column="15">IDENT_KEY_SZ<pos:position pos:line="7" pos:column="27"/></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">key<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><name pos:line="8" pos:column="14">IDENT_KEY_SZ<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">ntoabuf<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><name pos:line="9" pos:column="18">MAX_IPSTRLEN<pos:position pos:line="9" pos:column="30"/></name></expr>]<pos:position pos:line="9" pos:column="31"/></index></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">me<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">ToURL<pos:position pos:line="11" pos:column="13"/></name></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">key1<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">IDENT_KEY_SZ<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">my_peer<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">ToURL<pos:position pos:line="12" pos:column="18"/></name></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">key2<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">IDENT_KEY_SZ<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">snprintf<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">key<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">IDENT_KEY_SZ<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"%s,%s"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">key1<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">key2<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">ident_hash<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">Init<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">()<pos:position pos:line="16" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">state<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <operator pos:line="18" pos:column="18">(<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">IdentStateData<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><operator pos:line="18" pos:column="35">)<pos:position pos:line="18" pos:column="36"/></operator><call><name pos:line="18" pos:column="36">hash_lookup<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">ident_hash<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">key<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call><operator pos:line="18" pos:column="64">)<pos:position pos:line="18" pos:column="65"/></operator> <operator pos:line="18" pos:column="66">!=<pos:position pos:line="18" pos:column="68"/></operator> <name pos:line="18" pos:column="69">NULL<pos:position pos:line="18" pos:column="73"/></name></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74"> <block pos:line="18" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ClientAdd<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">state<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="26">callback<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">data<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">IpAddress<pos:position pos:line="23" pos:column="14"/></name></type> <name pos:line="23" pos:column="15">addr<pos:position pos:line="23" pos:column="19"/></name> <init pos:line="23" pos:column="20">= <expr><name pos:line="23" pos:column="22">me<pos:position pos:line="23" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">addr<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">.<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">SetPort<pos:position pos:line="24" pos:column="17"/></name></name><argument_list pos:line="24" pos:column="17">(<argument><expr><literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt> <comment type="line" pos:line="24" pos:column="22">// NP: use random port for secure outbound to IDENT_PORT</comment>

    <expr_stmt><expr><name pos:line="26" pos:column="5">fd<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <call><name pos:line="26" pos:column="10">comm_open_listener<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">SOCK_STREAM<pos:position pos:line="26" pos:column="40"/></name></expr></argument>,
                            <argument><expr><name pos:line="27" pos:column="29">IPPROTO_TCP<pos:position pos:line="27" pos:column="40"/></name></expr></argument>,
                            <argument><expr><name pos:line="28" pos:column="29">addr<pos:position pos:line="28" pos:column="33"/></name></expr></argument>,
                            <argument><expr><name pos:line="29" pos:column="29">COMM_NONBLOCKING<pos:position pos:line="29" pos:column="45"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="30" pos:column="29">"ident"<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">fd<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">==<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">COMM_ERROR<pos:position pos:line="32" pos:column="25"/></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
        <comment type="block" pos:line="33" pos:column="9">/* Failed to get a local socket */</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">callback<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">NULL<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">data<pos:position pos:line="34" pos:column="28"/></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
        <return pos:line="35" pos:column="9">return;<pos:position pos:line="35" pos:column="16"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">IdentStateData<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">state<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <call><name pos:line="39" pos:column="13">cbdataAlloc<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">IdentStateData<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">state<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">hash<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">key<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <call><name pos:line="40" pos:column="23">xstrdup<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">key<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">state<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">fd<pos:position pos:line="41" pos:column="14"/></name></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">fd<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">state<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">me<pos:position pos:line="42" pos:column="14"/></name></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">me<pos:position pos:line="42" pos:column="19"/></name></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">state<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">my_peer<pos:position pos:line="43" pos:column="19"/></name></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">my_peer<pos:position pos:line="43" pos:column="29"/></name></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ClientAdd<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">state<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="22">callback<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="32">data<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">hash_join<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">ident_hash<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="27">&amp;<pos:position pos:line="45" pos:column="32"/></operator><name><name pos:line="45" pos:column="28">state<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">hash<pos:position pos:line="45" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">comm_add_close_handler<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">fd<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="32">Ident<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">::<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">Close<pos:position pos:line="46" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">state<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">commSetTimeout<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">fd<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="24">Ident<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">::<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="31">TheConfig<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">.<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="41">timeout<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="50">Ident<pos:position pos:line="47" pos:column="55"/></name><operator pos:line="47" pos:column="55">::<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="57">Timeout<pos:position pos:line="47" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="66">state<pos:position pos:line="47" pos:column="71"/></name></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="48" pos:column="5">state<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">my_peer<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">NtoA<pos:position pos:line="48" pos:column="24"/></name></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">ntoabuf<pos:position pos:line="48" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="48" pos:column="33">MAX_IPSTRLEN<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">commConnectStart<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">fd<pos:position pos:line="49" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="26">ntoabuf<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="35">IDENT_PORT<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="47">Ident<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">::<pos:position pos:line="49" pos:column="54"/></operator><name pos:line="49" pos:column="54">ConnectDone<pos:position pos:line="49" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="67">state<pos:position pos:line="49" pos:column="72"/></name></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="74"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3867_squid-3.3.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">MetaHeader<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">::<pos:position pos:line="2" pos:column="33"/></operator><name pos:line="2" pos:column="33">match<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name pos:line="2" pos:column="39">HttpRequest<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">request<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">HttpReply<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">reply<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <typedef pos:line="5" pos:column="5">typedef <type><name><name pos:line="5" pos:column="13">Values<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">::<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">iterator<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">VLI<pos:position pos:line="5" pos:column="33"/></name>;<pos:position pos:line="5" pos:column="34"/></typedef>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ACLFilledChecklist<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">ch<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">request<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">NULL<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">reply<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">ch<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">reply<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">HTTPMSGLOCK<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">reply<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt></block></then></if>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><decl><type><name pos:line="10" pos:column="10">VLI<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><call><name><name pos:line="10" pos:column="18">values<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">begin<pos:position pos:line="10" pos:column="30"/></name></name><argument_list pos:line="10" pos:column="30">()<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></init> <condition><expr><name pos:line="10" pos:column="34">i<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">!=<pos:position pos:line="10" pos:column="38"/></operator> <call><name><name pos:line="10" pos:column="39">values<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">.<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="46">end<pos:position pos:line="10" pos:column="49"/></name></name><argument_list pos:line="10" pos:column="49">()<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></condition> <incr><expr><operator pos:line="10" pos:column="53">++<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="55">i<pos:position pos:line="10" pos:column="56"/></name></expr></incr> )<pos:position pos:line="10" pos:column="58"/></control> <block pos:line="10" pos:column="59">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">int<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">ret<pos:position pos:line="11" pos:column="22"/></name><init pos:line="11" pos:column="22">= <expr><call><name><name pos:line="11" pos:column="24">ch<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">.<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">fastCheck<pos:position pos:line="11" pos:column="36"/></name></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name><operator pos:line="11" pos:column="37">(<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">i<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">)<pos:position pos:line="11" pos:column="41"/></operator><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">aclList<pos:position pos:line="11" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">93<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">5<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">HERE<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">&lt;&lt;<pos:position pos:line="12" pos:column="36"/></operator> <literal type="string" pos:line="12" pos:column="31">"Check for header name: "<pos:position pos:line="12" pos:column="56"/></literal> <operator pos:line="12" pos:column="57">&lt;&lt;<pos:position pos:line="12" pos:column="65"/></operator> <name pos:line="12" pos:column="60">name<pos:position pos:line="12" pos:column="64"/></name> <operator pos:line="12" pos:column="65">&lt;&lt;<pos:position pos:line="12" pos:column="73"/></operator> <literal type="string" pos:line="12" pos:column="68">": "<pos:position pos:line="12" pos:column="72"/></literal> <operator pos:line="12" pos:column="73">&lt;&lt;<pos:position pos:line="12" pos:column="81"/></operator> <name><operator pos:line="12" pos:column="76">(<pos:position pos:line="12" pos:column="77"/></operator><operator pos:line="12" pos:column="77">*<pos:position pos:line="12" pos:column="78"/></operator><name pos:line="12" pos:column="78">i<pos:position pos:line="12" pos:column="79"/></name><operator pos:line="12" pos:column="79">)<pos:position pos:line="12" pos:column="80"/></operator><operator pos:line="12" pos:column="80">-&gt;<pos:position pos:line="12" pos:column="85"/></operator><name pos:line="12" pos:column="82">value<pos:position pos:line="12" pos:column="87"/></name></name>
               <operator pos:line="13" pos:column="16">&lt;&lt;<pos:position pos:line="13" pos:column="24"/></operator><literal type="string" pos:line="13" pos:column="18">", HttpRequest: "<pos:position pos:line="13" pos:column="35"/></literal> <operator pos:line="13" pos:column="36">&lt;&lt;<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="39">request<pos:position pos:line="13" pos:column="46"/></name> <operator pos:line="13" pos:column="47">&lt;&lt;<pos:position pos:line="13" pos:column="55"/></operator> <literal type="string" pos:line="13" pos:column="50">" HttpReply: "<pos:position pos:line="13" pos:column="64"/></literal> <operator pos:line="13" pos:column="65">&lt;&lt;<pos:position pos:line="13" pos:column="73"/></operator> <name pos:line="13" pos:column="68">reply<pos:position pos:line="13" pos:column="73"/></name> <operator pos:line="13" pos:column="74">&lt;&lt;<pos:position pos:line="13" pos:column="82"/></operator> <literal type="string" pos:line="13" pos:column="77">" matched: "<pos:position pos:line="13" pos:column="89"/></literal> <operator pos:line="13" pos:column="90">&lt;&lt;<pos:position pos:line="13" pos:column="98"/></operator> <name pos:line="13" pos:column="93">ret<pos:position pos:line="13" pos:column="96"/></name></expr></argument>)<pos:position pos:line="13" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="98"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ret<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">==<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">ACCESS_ALLOWED<pos:position pos:line="14" pos:column="34"/></name></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><call><name><operator pos:line="15" pos:column="20">(<pos:position pos:line="15" pos:column="21"/></operator><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">i<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">)<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name><name pos:line="15" pos:column="26">value<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">termedBuf<pos:position pos:line="15" pos:column="41"/></name></name></name><argument_list pos:line="15" pos:column="41">()<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></return></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

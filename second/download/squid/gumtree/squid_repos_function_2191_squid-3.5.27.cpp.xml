<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2191_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">HttpStateData<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">ReuseDecision<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">Answers<pos:position pos:line="1" pos:column="38"/></name></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">reusableReply<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name><name pos:line="2" pos:column="30">HttpStateData<pos:position pos:line="2" pos:column="43"/></name><operator pos:line="2" pos:column="43">::<pos:position pos:line="2" pos:column="45"/></operator><name pos:line="2" pos:column="45">ReuseDecision<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="60">decision<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpReply<pos:position pos:line="4" pos:column="14"/></name> <specifier pos:line="4" pos:column="15">const<pos:position pos:line="4" pos:column="20"/></specifier> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">rep<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">finalReply<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">()<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeader<pos:position pos:line="5" pos:column="15"/></name> <specifier pos:line="5" pos:column="16">const<pos:position pos:line="5" pos:column="21"/></specifier> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">hdr<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator><name><name pos:line="5" pos:column="30">rep<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">header<pos:position pos:line="5" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">v<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="8" pos:column="24"/></name></expr></cpp:if>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">RefreshPattern<pos:position pos:line="10" pos:column="25"/></name> <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier></type><name pos:line="10" pos:column="27">R<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><name pos:line="10" pos:column="31">NULL<pos:position pos:line="10" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* This strange looking define first looks up the refresh pattern
     * and then checks if the specified flag is set. The main purpose
     * of this is to simplify the refresh pattern lookup and USE_HTTP_VIOLATIONS
     * condition
     */</comment>
<cpp:define pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">define<pos:position pos:line="17" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="17" pos:column="9">REFRESH_OVERRIDE<pos:position pos:line="17" pos:column="25"/></name><parameter_list pos:line="17" pos:column="25">(<parameter><type><name pos:line="17" pos:column="26">flag<pos:position pos:line="17" pos:column="30"/></name></type></parameter>)<pos:position pos:line="17" pos:column="31"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="18" pos:column="5">((R = (R ? R : refreshLimits(entry-&gt;mem_obj-&gt;storeId()))) , \
    (R &amp;&amp; R-&gt;flags.flag))<pos:position pos:line="19" pos:column="26"/></cpp:value></cpp:define>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">REFRESH_OVERRIDE<pos:position pos:line="21" pos:column="25"/></name><parameter_list pos:line="21" pos:column="25">(<parameter><type><name pos:line="21" pos:column="26">flag<pos:position pos:line="21" pos:column="30"/></name></type></parameter>)<pos:position pos:line="21" pos:column="31"/></parameter_list></cpp:macro> <cpp:value pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></cpp:value></cpp:define>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">EBIT_TEST<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name><name pos:line="24" pos:column="19">entry<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">flags<pos:position pos:line="24" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">RELEASE_REQUEST<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><call><name><name pos:line="25" pos:column="16">decision<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">make<pos:position pos:line="25" pos:column="29"/></name></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">ReuseDecision<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">::<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">reuseNot<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="55">"the entry has been released"<pos:position pos:line="25" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="86"/></return></block></then></if>

    <comment type="line" pos:line="27" pos:column="5">// RFC 7234 section 4: a cache MUST use the most recent response</comment>
    <comment type="line" pos:line="28" pos:column="5">// (as determined by the Date header field)</comment>
    <comment type="line" pos:line="29" pos:column="5">// TODO: whether such responses could be shareable?</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">sawDateGoBack<pos:position pos:line="30" pos:column="22"/></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><call><name><name pos:line="31" pos:column="16">decision<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">make<pos:position pos:line="31" pos:column="29"/></name></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name><name pos:line="31" pos:column="30">ReuseDecision<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">::<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">reuseNot<pos:position pos:line="31" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="55">"the response has an older date header"<pos:position pos:line="31" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="96"/></return></block></then></if>

    <comment type="line" pos:line="33" pos:column="5">// Check for Surrogate/1.0 protocol conditions</comment>
    <comment type="line" pos:line="34" pos:column="5">// NP: reverse-proxy traffic our parent server has instructed us never to cache</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">surrogateNoStore<pos:position pos:line="35" pos:column="25"/></name></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26">
        <block type="pseudo"><return pos:line="36" pos:column="9">return <expr><call><name><name pos:line="36" pos:column="16">decision<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">.<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">make<pos:position pos:line="36" pos:column="29"/></name></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">ReuseDecision<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">::<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">reuseNot<pos:position pos:line="36" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="55">"Surrogate-Control:no-store"<pos:position pos:line="36" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="85"/></return></block></then></if>

    <comment type="line" pos:line="38" pos:column="5">// RFC 2616: HTTP/1.1 Cache-Control conditions</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">ignoreCacheControl<pos:position pos:line="39" pos:column="28"/></name></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29"> <block pos:line="39" pos:column="30">{
        <comment type="line" pos:line="40" pos:column="9">// XXX: check to see if the request headers alone were enough to prevent caching earlier</comment>
        <comment type="line" pos:line="41" pos:column="9">// (ie no-store request header) no need to check those all again here if so.</comment>
        <comment type="line" pos:line="42" pos:column="9">// for now we are not reliably doing that so we waste CPU re-checking request CC</comment>

        <comment type="line" pos:line="44" pos:column="9">// RFC 2616 section 14.9.2 - MUST NOT cache any response with request CC:no-store</comment>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">request<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">&amp;&amp;<pos:position pos:line="45" pos:column="31"/></operator> <name><name pos:line="45" pos:column="24">request<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">cache_control<pos:position pos:line="45" pos:column="46"/></name></name> <operator pos:line="45" pos:column="47">&amp;&amp;<pos:position pos:line="45" pos:column="57"/></operator> <call><name><name pos:line="45" pos:column="50">request<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">-&gt;<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="59">cache_control<pos:position pos:line="45" pos:column="72"/></name><operator pos:line="45" pos:column="72">-&gt;<pos:position pos:line="45" pos:column="77"/></operator><name pos:line="45" pos:column="74">hasNoStore<pos:position pos:line="45" pos:column="84"/></name></name><argument_list pos:line="45" pos:column="84">()<pos:position pos:line="45" pos:column="86"/></argument_list></call> <operator pos:line="45" pos:column="87">&amp;&amp;<pos:position pos:line="45" pos:column="97"/></operator>
                <operator pos:line="46" pos:column="17">!<pos:position pos:line="46" pos:column="18"/></operator><call><name pos:line="46" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">ignore_no_store<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52">
            <block type="pseudo"><return pos:line="47" pos:column="13">return <expr><call><name><name pos:line="47" pos:column="20">decision<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">.<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="29">make<pos:position pos:line="47" pos:column="33"/></name></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name><name pos:line="47" pos:column="34">ReuseDecision<pos:position pos:line="47" pos:column="47"/></name><operator pos:line="47" pos:column="47">::<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="49">reuseNot<pos:position pos:line="47" pos:column="57"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="48" pos:column="34">"client request Cache-Control:no-store"<pos:position pos:line="48" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></return></block></then></if>

        <comment type="line" pos:line="50" pos:column="9">// NP: request CC:no-cache only means cache READ is forbidden. STORE is permitted.</comment>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">rep<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">cache_control<pos:position pos:line="51" pos:column="31"/></name></name> <operator pos:line="51" pos:column="32">&amp;&amp;<pos:position pos:line="51" pos:column="42"/></operator> <call><name><name pos:line="51" pos:column="35">rep<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">cache_control<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">-&gt;<pos:position pos:line="51" pos:column="58"/></operator><name pos:line="51" pos:column="55">hasNoCache<pos:position pos:line="51" pos:column="65"/></name></name><argument_list pos:line="51" pos:column="65">()<pos:position pos:line="51" pos:column="67"/></argument_list></call> <operator pos:line="51" pos:column="68">&amp;&amp;<pos:position pos:line="51" pos:column="78"/></operator> <call><name><name pos:line="51" pos:column="71">rep<pos:position pos:line="51" pos:column="74"/></name><operator pos:line="51" pos:column="74">-&gt;<pos:position pos:line="51" pos:column="79"/></operator><name pos:line="51" pos:column="76">cache_control<pos:position pos:line="51" pos:column="89"/></name><operator pos:line="51" pos:column="89">-&gt;<pos:position pos:line="51" pos:column="94"/></operator><name pos:line="51" pos:column="91">noCache<pos:position pos:line="51" pos:column="98"/></name></name><argument_list pos:line="51" pos:column="98">()<pos:position pos:line="51" pos:column="100"/></argument_list></call><operator pos:line="51" pos:column="100">.<pos:position pos:line="51" pos:column="101"/></operator><call><name pos:line="51" pos:column="101">size<pos:position pos:line="51" pos:column="105"/></name><argument_list pos:line="51" pos:column="105">()<pos:position pos:line="51" pos:column="107"/></argument_list></call> <operator pos:line="51" pos:column="108">&gt;<pos:position pos:line="51" pos:column="112"/></operator> <literal type="number" pos:line="51" pos:column="110">0<pos:position pos:line="51" pos:column="111"/></literal></expr>)<pos:position pos:line="51" pos:column="112"/></condition><then pos:line="51" pos:column="112"> <block pos:line="51" pos:column="113">{
            <comment type="block" pos:line="52" pos:column="13">/* TODO: we are allowed to cache when no-cache= has parameters.
             * Provided we strip away any of the listed headers unless they are revalidated
             * successfully (ie, must revalidate AND these headers are prohibited on stale replies).
             * That is a bit tricky for squid right now so we avoid caching entirely.
             */</comment>
            <return pos:line="57" pos:column="13">return <expr><call><name><name pos:line="57" pos:column="20">decision<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">.<pos:position pos:line="57" pos:column="29"/></operator><name pos:line="57" pos:column="29">make<pos:position pos:line="57" pos:column="33"/></name></name><argument_list pos:line="57" pos:column="33">(<argument><expr><name><name pos:line="57" pos:column="34">ReuseDecision<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">::<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">reuseNot<pos:position pos:line="57" pos:column="57"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="58" pos:column="34">"server reply Cache-Control:no-cache has parameters"<pos:position pos:line="58" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="88"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="61" pos:column="9">// NP: request CC:private is undefined. We ignore.</comment>
        <comment type="line" pos:line="62" pos:column="9">// NP: other request CC flags are limiters on HIT/MISS. We don't care about here.</comment>

        <comment type="line" pos:line="64" pos:column="9">// RFC 2616 section 14.9.2 - MUST NOT cache any response with CC:no-store</comment>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">rep<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">cache_control<pos:position pos:line="65" pos:column="31"/></name></name> <operator pos:line="65" pos:column="32">&amp;&amp;<pos:position pos:line="65" pos:column="42"/></operator> <call><name><name pos:line="65" pos:column="35">rep<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">-&gt;<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="40">cache_control<pos:position pos:line="65" pos:column="53"/></name><operator pos:line="65" pos:column="53">-&gt;<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="55">hasNoStore<pos:position pos:line="65" pos:column="65"/></name></name><argument_list pos:line="65" pos:column="65">()<pos:position pos:line="65" pos:column="67"/></argument_list></call> <operator pos:line="65" pos:column="68">&amp;&amp;<pos:position pos:line="65" pos:column="78"/></operator>
                <operator pos:line="66" pos:column="17">!<pos:position pos:line="66" pos:column="18"/></operator><call><name pos:line="66" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">ignore_no_store<pos:position pos:line="66" pos:column="50"/></name></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52">
            <block type="pseudo"><return pos:line="67" pos:column="13">return <expr><call><name><name pos:line="67" pos:column="20">decision<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">.<pos:position pos:line="67" pos:column="29"/></operator><name pos:line="67" pos:column="29">make<pos:position pos:line="67" pos:column="33"/></name></name><argument_list pos:line="67" pos:column="33">(<argument><expr><name><name pos:line="67" pos:column="34">ReuseDecision<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">::<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="49">reuseNot<pos:position pos:line="67" pos:column="57"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="68" pos:column="34">"server reply Cache-Control:no-store"<pos:position pos:line="68" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="73"/></return></block></then></if>

        <comment type="line" pos:line="70" pos:column="9">// RFC 2616 section 14.9.1 - MUST NOT cache any response with CC:private in a shared cache like Squid.</comment>
        <comment type="line" pos:line="71" pos:column="9">// CC:private overrides CC:public when both are present in a response.</comment>
        <comment type="line" pos:line="72" pos:column="9">// TODO: add a shared/private cache configuration possibility.</comment>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">rep<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">cache_control<pos:position pos:line="73" pos:column="31"/></name></name> <operator pos:line="73" pos:column="32">&amp;&amp;<pos:position pos:line="73" pos:column="42"/></operator>
                <call><name><name pos:line="74" pos:column="17">rep<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">cache_control<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">hasPrivate<pos:position pos:line="74" pos:column="47"/></name></name><argument_list pos:line="74" pos:column="47">()<pos:position pos:line="74" pos:column="49"/></argument_list></call> <operator pos:line="74" pos:column="50">&amp;&amp;<pos:position pos:line="74" pos:column="60"/></operator>
                <operator pos:line="75" pos:column="17">!<pos:position pos:line="75" pos:column="18"/></operator><call><name pos:line="75" pos:column="18">REFRESH_OVERRIDE<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">(<argument><expr><name pos:line="75" pos:column="35">ignore_private<pos:position pos:line="75" pos:column="49"/></name></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="51"/></condition><then pos:line="75" pos:column="51"> <block pos:line="75" pos:column="52">{
            <comment type="block" pos:line="76" pos:column="13">/* TODO: we are allowed to cache when private= has parameters.
             * Provided we strip away any of the listed headers unless they are revalidated
             * successfully (ie, must revalidate AND these headers are prohibited on stale replies).
             * That is a bit tricky for squid right now so we avoid caching entirely.
             */</comment>
            <return pos:line="81" pos:column="13">return <expr><call><name><name pos:line="81" pos:column="20">decision<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">.<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="29">make<pos:position pos:line="81" pos:column="33"/></name></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name><name pos:line="81" pos:column="34">ReuseDecision<pos:position pos:line="81" pos:column="47"/></name><operator pos:line="81" pos:column="47">::<pos:position pos:line="81" pos:column="49"/></operator><name pos:line="81" pos:column="49">reuseNot<pos:position pos:line="81" pos:column="57"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="82" pos:column="34">"server reply Cache-Control:private"<pos:position pos:line="82" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="72"/></return>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="86" pos:column="5">// RFC 2068, sec 14.9.4 - MUST NOT cache any response with Authentication UNLESS certain CC controls are present</comment>
    <comment type="line" pos:line="87" pos:column="5">// allow HTTP violations to IGNORE those controls (ie re-block caching Auth)</comment>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">request<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">&amp;&amp;<pos:position pos:line="88" pos:column="27"/></operator> <operator pos:line="88" pos:column="20">(<pos:position pos:line="88" pos:column="21"/></operator><name><name pos:line="88" pos:column="21">request<pos:position pos:line="88" pos:column="28"/></name><operator pos:line="88" pos:column="28">-&gt;<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="30">flags<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">.<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="36">auth<pos:position pos:line="88" pos:column="40"/></name></name> <operator pos:line="88" pos:column="41">||<pos:position pos:line="88" pos:column="43"/></operator> <name><name pos:line="88" pos:column="44">request<pos:position pos:line="88" pos:column="51"/></name><operator pos:line="88" pos:column="51">-&gt;<pos:position pos:line="88" pos:column="56"/></operator><name pos:line="88" pos:column="53">flags<pos:position pos:line="88" pos:column="58"/></name><operator pos:line="88" pos:column="58">.<pos:position pos:line="88" pos:column="59"/></operator><name pos:line="88" pos:column="59">authSent<pos:position pos:line="88" pos:column="67"/></name></name><operator pos:line="88" pos:column="67">)<pos:position pos:line="88" pos:column="68"/></operator> <operator pos:line="88" pos:column="69">&amp;&amp;<pos:position pos:line="88" pos:column="79"/></operator> <operator pos:line="88" pos:column="72">!<pos:position pos:line="88" pos:column="73"/></operator><call><name pos:line="88" pos:column="73">REFRESH_OVERRIDE<pos:position pos:line="88" pos:column="89"/></name><argument_list pos:line="88" pos:column="89">(<argument><expr><name pos:line="88" pos:column="90">ignore_auth<pos:position pos:line="88" pos:column="101"/></name></expr></argument>)<pos:position pos:line="88" pos:column="102"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="103"/></condition><then pos:line="88" pos:column="103"> <block pos:line="88" pos:column="104">{
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">!<pos:position pos:line="89" pos:column="14"/></operator><name><name pos:line="89" pos:column="14">rep<pos:position pos:line="89" pos:column="17"/></name><operator pos:line="89" pos:column="17">-&gt;<pos:position pos:line="89" pos:column="22"/></operator><name pos:line="89" pos:column="19">cache_control<pos:position pos:line="89" pos:column="32"/></name></name></expr>)<pos:position pos:line="89" pos:column="33"/></condition><then pos:line="89" pos:column="33">
            <block type="pseudo"><return pos:line="90" pos:column="13">return <expr><call><name><name pos:line="90" pos:column="20">decision<pos:position pos:line="90" pos:column="28"/></name><operator pos:line="90" pos:column="28">.<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="29">make<pos:position pos:line="90" pos:column="33"/></name></name><argument_list pos:line="90" pos:column="33">(<argument><expr><name><name pos:line="90" pos:column="34">ReuseDecision<pos:position pos:line="90" pos:column="47"/></name><operator pos:line="90" pos:column="47">::<pos:position pos:line="90" pos:column="49"/></operator><name pos:line="90" pos:column="49">reuseNot<pos:position pos:line="90" pos:column="57"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="91" pos:column="34">"authenticated and server reply missing Cache-Control"<pos:position pos:line="91" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="90"/></return></block></then></if>

        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">ignoreCacheControl<pos:position pos:line="93" pos:column="31"/></name></expr>)<pos:position pos:line="93" pos:column="32"/></condition><then pos:line="93" pos:column="32">
            <block type="pseudo"><return pos:line="94" pos:column="13">return <expr><call><name><name pos:line="94" pos:column="20">decision<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">.<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="29">make<pos:position pos:line="94" pos:column="33"/></name></name><argument_list pos:line="94" pos:column="33">(<argument><expr><name><name pos:line="94" pos:column="34">ReuseDecision<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">::<pos:position pos:line="94" pos:column="49"/></operator><name pos:line="94" pos:column="49">reuseNot<pos:position pos:line="94" pos:column="57"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="95" pos:column="34">"authenticated and ignoring Cache-Control"<pos:position pos:line="95" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="78"/></return></block></then></if>

        <decl_stmt><decl><type><name pos:line="97" pos:column="9">bool<pos:position pos:line="97" pos:column="13"/></name></type> <name pos:line="97" pos:column="14">mayStore<pos:position pos:line="97" pos:column="22"/></name> <init pos:line="97" pos:column="23">= <expr><literal type="boolean" pos:line="97" pos:column="25">false<pos:position pos:line="97" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="97" pos:column="31"/></decl_stmt>
        <comment type="line" pos:line="98" pos:column="9">// HTTPbis pt6 section 3.2: a response CC:public is present</comment>
        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><call><name><name pos:line="99" pos:column="13">rep<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">-&gt;<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="18">cache_control<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">-&gt;<pos:position pos:line="99" pos:column="36"/></operator><name pos:line="99" pos:column="33">hasPublic<pos:position pos:line="99" pos:column="42"/></name></name><argument_list pos:line="99" pos:column="42">()<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="45"/></condition><then pos:line="99" pos:column="45"> <block pos:line="99" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">debugs<pos:position pos:line="100" pos:column="19"/></name><argument_list pos:line="100" pos:column="19">(<argument><expr><literal type="number" pos:line="100" pos:column="20">22<pos:position pos:line="100" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="24">3<pos:position pos:line="100" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="27">HERE<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">&lt;&lt;<pos:position pos:line="100" pos:column="40"/></operator> <literal type="string" pos:line="100" pos:column="35">"Authenticated but server reply Cache-Control:public"<pos:position pos:line="100" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><name pos:line="101" pos:column="13">mayStore<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">=<pos:position pos:line="101" pos:column="23"/></operator> <literal type="boolean" pos:line="101" pos:column="24">true<pos:position pos:line="101" pos:column="28"/></literal></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt>

            <comment type="line" pos:line="103" pos:column="13">// HTTPbis pt6 section 3.2: a response CC:must-revalidate is present</comment>
        }<pos:position pos:line="104" pos:column="10"/></block></then> <elseif pos:line="104" pos:column="11">else <if pos:line="104" pos:column="16">if <condition pos:line="104" pos:column="19">(<expr><call><name><name pos:line="104" pos:column="20">rep<pos:position pos:line="104" pos:column="23"/></name><operator pos:line="104" pos:column="23">-&gt;<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="25">cache_control<pos:position pos:line="104" pos:column="38"/></name><operator pos:line="104" pos:column="38">-&gt;<pos:position pos:line="104" pos:column="43"/></operator><name pos:line="104" pos:column="40">mustRevalidate<pos:position pos:line="104" pos:column="54"/></name></name><argument_list pos:line="104" pos:column="54">()<pos:position pos:line="104" pos:column="56"/></argument_list></call> <operator pos:line="104" pos:column="57">&amp;&amp;<pos:position pos:line="104" pos:column="67"/></operator> <operator pos:line="104" pos:column="60">!<pos:position pos:line="104" pos:column="61"/></operator><call><name pos:line="104" pos:column="61">REFRESH_OVERRIDE<pos:position pos:line="104" pos:column="77"/></name><argument_list pos:line="104" pos:column="77">(<argument><expr><name pos:line="104" pos:column="78">ignore_must_revalidate<pos:position pos:line="104" pos:column="100"/></name></expr></argument>)<pos:position pos:line="104" pos:column="101"/></argument_list></call></expr>)<pos:position pos:line="104" pos:column="102"/></condition><then pos:line="104" pos:column="102"> <block pos:line="104" pos:column="103">{
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">debugs<pos:position pos:line="105" pos:column="19"/></name><argument_list pos:line="105" pos:column="19">(<argument><expr><literal type="number" pos:line="105" pos:column="20">22<pos:position pos:line="105" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="24">3<pos:position pos:line="105" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="27">HERE<pos:position pos:line="105" pos:column="31"/></name> <operator pos:line="105" pos:column="32">&lt;&lt;<pos:position pos:line="105" pos:column="40"/></operator> <literal type="string" pos:line="105" pos:column="35">"Authenticated but server reply Cache-Control:public"<pos:position pos:line="105" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><name pos:line="106" pos:column="13">mayStore<pos:position pos:line="106" pos:column="21"/></name> <operator pos:line="106" pos:column="22">=<pos:position pos:line="106" pos:column="23"/></operator> <literal type="boolean" pos:line="106" pos:column="24">true<pos:position pos:line="106" pos:column="28"/></literal></expr>;<pos:position pos:line="106" pos:column="29"/></expr_stmt>

<cpp:if pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">if<pos:position pos:line="108" pos:column="4"/></cpp:directive> <expr><name pos:line="108" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="108" pos:column="24"/></name></expr></cpp:if>
            <comment type="line" pos:line="109" pos:column="13">// NP: given the must-revalidate exception we should also be able to exempt no-cache.</comment>
            <comment type="line" pos:line="110" pos:column="13">// HTTPbis WG verdict on this is that it is omitted from the spec due to being 'unexpected' by</comment>
            <comment type="line" pos:line="111" pos:column="13">// some. The caching+revalidate is not exactly unsafe though with Squids interpretation of no-cache</comment>
            <comment type="line" pos:line="112" pos:column="13">// (without parameters) as equivalent to must-revalidate in the reply.</comment>
        }<pos:position pos:line="113" pos:column="10"/></block></then></if></elseif> <elseif pos:line="113" pos:column="11">else <if pos:line="113" pos:column="16">if <condition pos:line="113" pos:column="19">(<expr><call><name><name pos:line="113" pos:column="20">rep<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">-&gt;<pos:position pos:line="113" pos:column="28"/></operator><name pos:line="113" pos:column="25">cache_control<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">-&gt;<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="40">hasNoCache<pos:position pos:line="113" pos:column="50"/></name></name><argument_list pos:line="113" pos:column="50">()<pos:position pos:line="113" pos:column="52"/></argument_list></call> <operator pos:line="113" pos:column="53">&amp;&amp;<pos:position pos:line="113" pos:column="63"/></operator> <call><name><name pos:line="113" pos:column="56">rep<pos:position pos:line="113" pos:column="59"/></name><operator pos:line="113" pos:column="59">-&gt;<pos:position pos:line="113" pos:column="64"/></operator><name pos:line="113" pos:column="61">cache_control<pos:position pos:line="113" pos:column="74"/></name><operator pos:line="113" pos:column="74">-&gt;<pos:position pos:line="113" pos:column="79"/></operator><name pos:line="113" pos:column="76">noCache<pos:position pos:line="113" pos:column="83"/></name></name><argument_list pos:line="113" pos:column="83">()<pos:position pos:line="113" pos:column="85"/></argument_list></call><operator pos:line="113" pos:column="85">.<pos:position pos:line="113" pos:column="86"/></operator><call><name pos:line="113" pos:column="86">size<pos:position pos:line="113" pos:column="90"/></name><argument_list pos:line="113" pos:column="90">()<pos:position pos:line="113" pos:column="92"/></argument_list></call> <operator pos:line="113" pos:column="93">==<pos:position pos:line="113" pos:column="95"/></operator> <literal type="number" pos:line="113" pos:column="96">0<pos:position pos:line="113" pos:column="97"/></literal> <operator pos:line="113" pos:column="98">&amp;&amp;<pos:position pos:line="113" pos:column="108"/></operator> <operator pos:line="113" pos:column="101">!<pos:position pos:line="113" pos:column="102"/></operator><call><name pos:line="113" pos:column="102">REFRESH_OVERRIDE<pos:position pos:line="113" pos:column="118"/></name><argument_list pos:line="113" pos:column="118">(<argument><expr><name pos:line="113" pos:column="119">ignore_must_revalidate<pos:position pos:line="113" pos:column="141"/></name></expr></argument>)<pos:position pos:line="113" pos:column="142"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="143"/></condition><then pos:line="113" pos:column="143"> <block pos:line="113" pos:column="144">{
            <expr_stmt><expr><call><name pos:line="114" pos:column="13">debugs<pos:position pos:line="114" pos:column="19"/></name><argument_list pos:line="114" pos:column="19">(<argument><expr><literal type="number" pos:line="114" pos:column="20">22<pos:position pos:line="114" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="24">3<pos:position pos:line="114" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="27">HERE<pos:position pos:line="114" pos:column="31"/></name> <operator pos:line="114" pos:column="32">&lt;&lt;<pos:position pos:line="114" pos:column="40"/></operator> <literal type="string" pos:line="114" pos:column="35">"Authenticated but server reply Cache-Control:no-cache (equivalent to must-revalidate)"<pos:position pos:line="114" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="124"/></expr_stmt>
            <expr_stmt><expr><name pos:line="115" pos:column="13">mayStore<pos:position pos:line="115" pos:column="21"/></name> <operator pos:line="115" pos:column="22">=<pos:position pos:line="115" pos:column="23"/></operator> <literal type="boolean" pos:line="115" pos:column="24">true<pos:position pos:line="115" pos:column="28"/></literal></expr>;<pos:position pos:line="115" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif<pos:position pos:line="116" pos:column="7"/></cpp:directive></cpp:endif>

            <comment type="line" pos:line="118" pos:column="13">// HTTPbis pt6 section 3.2: a response CC:s-maxage is present</comment>
        }<pos:position pos:line="119" pos:column="10"/></block></then></if></elseif> <elseif pos:line="119" pos:column="11">else <if pos:line="119" pos:column="16">if <condition pos:line="119" pos:column="19">(<expr><call><name><name pos:line="119" pos:column="20">rep<pos:position pos:line="119" pos:column="23"/></name><operator pos:line="119" pos:column="23">-&gt;<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="25">cache_control<pos:position pos:line="119" pos:column="38"/></name><operator pos:line="119" pos:column="38">-&gt;<pos:position pos:line="119" pos:column="43"/></operator><name pos:line="119" pos:column="40">hasSMaxAge<pos:position pos:line="119" pos:column="50"/></name></name><argument_list pos:line="119" pos:column="50">()<pos:position pos:line="119" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="53"/></condition><then pos:line="119" pos:column="53"> <block pos:line="119" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">debugs<pos:position pos:line="120" pos:column="19"/></name><argument_list pos:line="120" pos:column="19">(<argument><expr><literal type="number" pos:line="120" pos:column="20">22<pos:position pos:line="120" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="24">3<pos:position pos:line="120" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="27">HERE<pos:position pos:line="120" pos:column="31"/></name> <operator pos:line="120" pos:column="32">&lt;&lt;<pos:position pos:line="120" pos:column="40"/></operator> <literal type="string" pos:line="120" pos:column="35">"Authenticated but server reply Cache-Control:s-maxage"<pos:position pos:line="120" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><name pos:line="121" pos:column="13">mayStore<pos:position pos:line="121" pos:column="21"/></name> <operator pos:line="121" pos:column="22">=<pos:position pos:line="121" pos:column="23"/></operator> <literal type="boolean" pos:line="121" pos:column="24">true<pos:position pos:line="121" pos:column="28"/></literal></expr>;<pos:position pos:line="121" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="122" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><operator pos:line="124" pos:column="13">!<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="14">mayStore<pos:position pos:line="124" pos:column="22"/></name></expr>)<pos:position pos:line="124" pos:column="23"/></condition><then pos:line="124" pos:column="23">
            <block type="pseudo"><return pos:line="125" pos:column="13">return <expr><call><name><name pos:line="125" pos:column="20">decision<pos:position pos:line="125" pos:column="28"/></name><operator pos:line="125" pos:column="28">.<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="29">make<pos:position pos:line="125" pos:column="33"/></name></name><argument_list pos:line="125" pos:column="33">(<argument><expr><name><name pos:line="125" pos:column="34">ReuseDecision<pos:position pos:line="125" pos:column="47"/></name><operator pos:line="125" pos:column="47">::<pos:position pos:line="125" pos:column="49"/></operator><name pos:line="125" pos:column="49">reuseNot<pos:position pos:line="125" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="59">"authenticated transaction"<pos:position pos:line="125" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="88"/></return></block></then></if>

        <comment type="line" pos:line="127" pos:column="9">// NP: response CC:no-cache is equivalent to CC:must-revalidate,max-age=0. We MAY cache, and do so.</comment>
        <comment type="line" pos:line="128" pos:column="9">// NP: other request CC flags are limiters on HIT/MISS/REFRESH. We don't care about here.</comment>
    }<pos:position pos:line="129" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="131" pos:column="5">/* HACK: The "multipart/x-mixed-replace" content type is used for
     * continuous push replies.  These are generally dynamic and
     * probably should not be cachable
     */</comment>
    <if pos:line="135" pos:column="5">if <condition pos:line="135" pos:column="8">(<expr><operator pos:line="135" pos:column="9">(<pos:position pos:line="135" pos:column="10"/></operator><name pos:line="135" pos:column="10">v<pos:position pos:line="135" pos:column="11"/></name> <operator pos:line="135" pos:column="12">=<pos:position pos:line="135" pos:column="13"/></operator> <call><name><name pos:line="135" pos:column="14">hdr<pos:position pos:line="135" pos:column="17"/></name><operator pos:line="135" pos:column="17">-&gt;<pos:position pos:line="135" pos:column="22"/></operator><name pos:line="135" pos:column="19">getStr<pos:position pos:line="135" pos:column="25"/></name></name><argument_list pos:line="135" pos:column="25">(<argument><expr><name pos:line="135" pos:column="26">HDR_CONTENT_TYPE<pos:position pos:line="135" pos:column="42"/></name></expr></argument>)<pos:position pos:line="135" pos:column="43"/></argument_list></call><operator pos:line="135" pos:column="43">)<pos:position pos:line="135" pos:column="44"/></operator></expr>)<pos:position pos:line="135" pos:column="45"/></condition><then pos:line="135" pos:column="45">
        <block type="pseudo"><if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><operator pos:line="136" pos:column="13">!<pos:position pos:line="136" pos:column="14"/></operator><call><name pos:line="136" pos:column="14">strncasecmp<pos:position pos:line="136" pos:column="25"/></name><argument_list pos:line="136" pos:column="25">(<argument><expr><name pos:line="136" pos:column="26">v<pos:position pos:line="136" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="29">"multipart/x-mixed-replace"<pos:position pos:line="136" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="58">25<pos:position pos:line="136" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="62"/></condition><then pos:line="136" pos:column="62">
            <block type="pseudo"><return pos:line="137" pos:column="13">return <expr><call><name><name pos:line="137" pos:column="20">decision<pos:position pos:line="137" pos:column="28"/></name><operator pos:line="137" pos:column="28">.<pos:position pos:line="137" pos:column="29"/></operator><name pos:line="137" pos:column="29">make<pos:position pos:line="137" pos:column="33"/></name></name><argument_list pos:line="137" pos:column="33">(<argument><expr><name><name pos:line="137" pos:column="34">ReuseDecision<pos:position pos:line="137" pos:column="47"/></name><operator pos:line="137" pos:column="47">::<pos:position pos:line="137" pos:column="49"/></operator><name pos:line="137" pos:column="49">reuseNot<pos:position pos:line="137" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="59">"Content-Type:multipart/x-mixed-replace"<pos:position pos:line="137" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="101"/></return></block></then></if></block></then></if>

    <comment type="line" pos:line="139" pos:column="5">// TODO: if possible, provide more specific message for each status code</comment>
    <decl_stmt><decl><specifier pos:line="140" pos:column="5">static<pos:position pos:line="140" pos:column="11"/></specifier> <type><specifier pos:line="140" pos:column="12">const<pos:position pos:line="140" pos:column="17"/></specifier> <name pos:line="140" pos:column="18">char<pos:position pos:line="140" pos:column="22"/></name> <modifier pos:line="140" pos:column="23">*<pos:position pos:line="140" pos:column="24"/></modifier></type><name pos:line="140" pos:column="24">shareableError<pos:position pos:line="140" pos:column="38"/></name> <init pos:line="140" pos:column="39">= <expr><literal type="string" pos:line="140" pos:column="41">"shareable error status code"<pos:position pos:line="140" pos:column="70"/></literal></expr></init></decl>;<pos:position pos:line="140" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="141" pos:column="5">static<pos:position pos:line="141" pos:column="11"/></specifier> <type><specifier pos:line="141" pos:column="12">const<pos:position pos:line="141" pos:column="17"/></specifier> <name pos:line="141" pos:column="18">char<pos:position pos:line="141" pos:column="22"/></name> <modifier pos:line="141" pos:column="23">*<pos:position pos:line="141" pos:column="24"/></modifier></type><name pos:line="141" pos:column="24">nonShareableError<pos:position pos:line="141" pos:column="41"/></name> <init pos:line="141" pos:column="42">= <expr><literal type="string" pos:line="141" pos:column="44">"non-shareable error status code"<pos:position pos:line="141" pos:column="77"/></literal></expr></init></decl>;<pos:position pos:line="141" pos:column="78"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="142" pos:column="5">ReuseDecision<pos:position pos:line="142" pos:column="18"/></name><operator pos:line="142" pos:column="18">::<pos:position pos:line="142" pos:column="20"/></operator><name pos:line="142" pos:column="20">Answers<pos:position pos:line="142" pos:column="27"/></name></name></type> <name pos:line="142" pos:column="28">statusAnswer<pos:position pos:line="142" pos:column="40"/></name> <init pos:line="142" pos:column="41">= <expr><name><name pos:line="142" pos:column="43">ReuseDecision<pos:position pos:line="142" pos:column="56"/></name><operator pos:line="142" pos:column="56">::<pos:position pos:line="142" pos:column="58"/></operator><name pos:line="142" pos:column="58">reuseNot<pos:position pos:line="142" pos:column="66"/></name></name></expr></init></decl>;<pos:position pos:line="142" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="143" pos:column="5">const<pos:position pos:line="143" pos:column="10"/></specifier> <name pos:line="143" pos:column="11">char<pos:position pos:line="143" pos:column="15"/></name> <modifier pos:line="143" pos:column="16">*<pos:position pos:line="143" pos:column="17"/></modifier></type><name pos:line="143" pos:column="17">statusReason<pos:position pos:line="143" pos:column="29"/></name> <init pos:line="143" pos:column="30">= <expr><name pos:line="143" pos:column="32">nonShareableError<pos:position pos:line="143" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="143" pos:column="50"/></decl_stmt>

    <switch pos:line="145" pos:column="5">switch <condition pos:line="145" pos:column="12">(<expr><call><name><name pos:line="145" pos:column="13">rep<pos:position pos:line="145" pos:column="16"/></name><operator pos:line="145" pos:column="16">-&gt;<pos:position pos:line="145" pos:column="21"/></operator><name pos:line="145" pos:column="18">sline<pos:position pos:line="145" pos:column="23"/></name><operator pos:line="145" pos:column="23">.<pos:position pos:line="145" pos:column="24"/></operator><name pos:line="145" pos:column="24">status<pos:position pos:line="145" pos:column="30"/></name></name><argument_list pos:line="145" pos:column="30">()<pos:position pos:line="145" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="33"/></condition> <block pos:line="145" pos:column="34">{

    <comment type="block" pos:line="147" pos:column="5">/* There are several situations when a non-cacheable response may be
     * still shareable (e.g., among collapsed clients). We assume that these
     * are 3xx and 5xx responses, indicating server problems and some of
     * 4xx responses, common for all clients with a given cache key (e.g.,
     * 404 Not Found or 414 URI Too Long). On the other hand, we should not
     * share non-cacheable client-specific errors, such as 400 Bad Request
     * or 406 Not Acceptable.
     */</comment>

    <comment type="block" pos:line="156" pos:column="5">/* Responses that are cacheable */</comment>

    <case pos:line="158" pos:column="5">case <expr><name><name pos:line="158" pos:column="10">Http<pos:position pos:line="158" pos:column="14"/></name><operator pos:line="158" pos:column="14">::<pos:position pos:line="158" pos:column="16"/></operator><name pos:line="158" pos:column="16">scOkay<pos:position pos:line="158" pos:column="22"/></name></name></expr>:<pos:position pos:line="158" pos:column="23"/></case>

    <case pos:line="160" pos:column="5">case <expr><name><name pos:line="160" pos:column="10">Http<pos:position pos:line="160" pos:column="14"/></name><operator pos:line="160" pos:column="14">::<pos:position pos:line="160" pos:column="16"/></operator><name pos:line="160" pos:column="16">scNonAuthoritativeInformation<pos:position pos:line="160" pos:column="45"/></name></name></expr>:<pos:position pos:line="160" pos:column="46"/></case>

    <case pos:line="162" pos:column="5">case <expr><name><name pos:line="162" pos:column="10">Http<pos:position pos:line="162" pos:column="14"/></name><operator pos:line="162" pos:column="14">::<pos:position pos:line="162" pos:column="16"/></operator><name pos:line="162" pos:column="16">scMultipleChoices<pos:position pos:line="162" pos:column="33"/></name></name></expr>:<pos:position pos:line="162" pos:column="34"/></case>

    <case pos:line="164" pos:column="5">case <expr><name><name pos:line="164" pos:column="10">Http<pos:position pos:line="164" pos:column="14"/></name><operator pos:line="164" pos:column="14">::<pos:position pos:line="164" pos:column="16"/></operator><name pos:line="164" pos:column="16">scMovedPermanently<pos:position pos:line="164" pos:column="34"/></name></name></expr>:<pos:position pos:line="164" pos:column="35"/></case>
    <case pos:line="165" pos:column="5">case <expr><name><name pos:line="165" pos:column="10">Http<pos:position pos:line="165" pos:column="14"/></name><operator pos:line="165" pos:column="14">::<pos:position pos:line="165" pos:column="16"/></operator><name pos:line="165" pos:column="16">scPermanentRedirect<pos:position pos:line="165" pos:column="35"/></name></name></expr>:<pos:position pos:line="165" pos:column="36"/></case>

    <case pos:line="167" pos:column="5">case <expr><name><name pos:line="167" pos:column="10">Http<pos:position pos:line="167" pos:column="14"/></name><operator pos:line="167" pos:column="14">::<pos:position pos:line="167" pos:column="16"/></operator><name pos:line="167" pos:column="16">scGone<pos:position pos:line="167" pos:column="22"/></name></name></expr>:<pos:position pos:line="167" pos:column="23"/></case>
        <comment type="block" pos:line="168" pos:column="9">/*
         * Don't cache objects that need to be refreshed on next request,
         * unless we know how to refresh it.
         */</comment>
        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><call><name pos:line="172" pos:column="13">refreshIsCachable<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><name pos:line="172" pos:column="31">entry<pos:position pos:line="172" pos:column="36"/></name></expr></argument>)<pos:position pos:line="172" pos:column="37"/></argument_list></call> <operator pos:line="172" pos:column="38">||<pos:position pos:line="172" pos:column="40"/></operator> <call><name pos:line="172" pos:column="41">REFRESH_OVERRIDE<pos:position pos:line="172" pos:column="57"/></name><argument_list pos:line="172" pos:column="57">(<argument><expr><name pos:line="172" pos:column="58">store_stale<pos:position pos:line="172" pos:column="69"/></name></expr></argument>)<pos:position pos:line="172" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="172" pos:column="71"/></condition><then pos:line="172" pos:column="71">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="173" pos:column="13">decision<pos:position pos:line="173" pos:column="21"/></name><operator pos:line="173" pos:column="21">.<pos:position pos:line="173" pos:column="22"/></operator><name pos:line="173" pos:column="22">make<pos:position pos:line="173" pos:column="26"/></name></name><argument_list pos:line="173" pos:column="26">(<argument><expr><name><name pos:line="173" pos:column="27">ReuseDecision<pos:position pos:line="173" pos:column="40"/></name><operator pos:line="173" pos:column="40">::<pos:position pos:line="173" pos:column="42"/></operator><name pos:line="173" pos:column="42">cachePositively<pos:position pos:line="173" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="59">"refresh check returned cacheable"<pos:position pos:line="173" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="95"/></expr_stmt></block></then>
        <else pos:line="174" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="175" pos:column="13">decision<pos:position pos:line="175" pos:column="21"/></name><operator pos:line="175" pos:column="21">.<pos:position pos:line="175" pos:column="22"/></operator><name pos:line="175" pos:column="22">make<pos:position pos:line="175" pos:column="26"/></name></name><argument_list pos:line="175" pos:column="26">(<argument><expr><name><name pos:line="175" pos:column="27">ReuseDecision<pos:position pos:line="175" pos:column="40"/></name><operator pos:line="175" pos:column="40">::<pos:position pos:line="175" pos:column="42"/></operator><name pos:line="175" pos:column="42">doNotCacheButShare<pos:position pos:line="175" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="62">"refresh check returned non-cacheable"<pos:position pos:line="175" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="102"/></expr_stmt></block></else></if>

        <break pos:line="177" pos:column="9">break;<pos:position pos:line="177" pos:column="15"/></break>

    <comment type="block" pos:line="179" pos:column="5">/* Responses that only are cacheable if the server says so */</comment>

    <case pos:line="181" pos:column="5">case <expr><name><name pos:line="181" pos:column="10">Http<pos:position pos:line="181" pos:column="14"/></name><operator pos:line="181" pos:column="14">::<pos:position pos:line="181" pos:column="16"/></operator><name pos:line="181" pos:column="16">scFound<pos:position pos:line="181" pos:column="23"/></name></name></expr>:<pos:position pos:line="181" pos:column="24"/></case>
    <case pos:line="182" pos:column="5">case <expr><name><name pos:line="182" pos:column="10">Http<pos:position pos:line="182" pos:column="14"/></name><operator pos:line="182" pos:column="14">::<pos:position pos:line="182" pos:column="16"/></operator><name pos:line="182" pos:column="16">scTemporaryRedirect<pos:position pos:line="182" pos:column="35"/></name></name></expr>:<pos:position pos:line="182" pos:column="36"/></case>

        <if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name><name pos:line="184" pos:column="13">rep<pos:position pos:line="184" pos:column="16"/></name><operator pos:line="184" pos:column="16">-&gt;<pos:position pos:line="184" pos:column="21"/></operator><name pos:line="184" pos:column="18">date<pos:position pos:line="184" pos:column="22"/></name></name> <operator pos:line="184" pos:column="23">&lt;=<pos:position pos:line="184" pos:column="28"/></operator> <literal type="number" pos:line="184" pos:column="26">0<pos:position pos:line="184" pos:column="27"/></literal></expr>)<pos:position pos:line="184" pos:column="28"/></condition><then pos:line="184" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="185" pos:column="13">decision<pos:position pos:line="185" pos:column="21"/></name><operator pos:line="185" pos:column="21">.<pos:position pos:line="185" pos:column="22"/></operator><name pos:line="185" pos:column="22">make<pos:position pos:line="185" pos:column="26"/></name></name><argument_list pos:line="185" pos:column="26">(<argument><expr><name><name pos:line="185" pos:column="27">ReuseDecision<pos:position pos:line="185" pos:column="40"/></name><operator pos:line="185" pos:column="40">::<pos:position pos:line="185" pos:column="42"/></operator><name pos:line="185" pos:column="42">doNotCacheButShare<pos:position pos:line="185" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="62">"Date is missing/invalid"<pos:position pos:line="185" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="89"/></expr_stmt></block></then>
        <elseif pos:line="186" pos:column="9">else <if pos:line="186" pos:column="14">if <condition pos:line="186" pos:column="17">(<expr><name><name pos:line="186" pos:column="18">rep<pos:position pos:line="186" pos:column="21"/></name><operator pos:line="186" pos:column="21">-&gt;<pos:position pos:line="186" pos:column="26"/></operator><name pos:line="186" pos:column="23">expires<pos:position pos:line="186" pos:column="30"/></name></name> <operator pos:line="186" pos:column="31">&gt;<pos:position pos:line="186" pos:column="35"/></operator> <name><name pos:line="186" pos:column="33">rep<pos:position pos:line="186" pos:column="36"/></name><operator pos:line="186" pos:column="36">-&gt;<pos:position pos:line="186" pos:column="41"/></operator><name pos:line="186" pos:column="38">date<pos:position pos:line="186" pos:column="42"/></name></name></expr>)<pos:position pos:line="186" pos:column="43"/></condition><then pos:line="186" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="187" pos:column="13">decision<pos:position pos:line="187" pos:column="21"/></name><operator pos:line="187" pos:column="21">.<pos:position pos:line="187" pos:column="22"/></operator><name pos:line="187" pos:column="22">make<pos:position pos:line="187" pos:column="26"/></name></name><argument_list pos:line="187" pos:column="26">(<argument><expr><name><name pos:line="187" pos:column="27">ReuseDecision<pos:position pos:line="187" pos:column="40"/></name><operator pos:line="187" pos:column="40">::<pos:position pos:line="187" pos:column="42"/></operator><name pos:line="187" pos:column="42">cachePositively<pos:position pos:line="187" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="59">"Expires &gt; Date"<pos:position pos:line="187" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="77"/></expr_stmt></block></then></if></elseif>
        <else pos:line="188" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="189" pos:column="13">decision<pos:position pos:line="189" pos:column="21"/></name><operator pos:line="189" pos:column="21">.<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="22">make<pos:position pos:line="189" pos:column="26"/></name></name><argument_list pos:line="189" pos:column="26">(<argument><expr><name><name pos:line="189" pos:column="27">ReuseDecision<pos:position pos:line="189" pos:column="40"/></name><operator pos:line="189" pos:column="40">::<pos:position pos:line="189" pos:column="42"/></operator><name pos:line="189" pos:column="42">doNotCacheButShare<pos:position pos:line="189" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="62">"Expires &lt;= Date"<pos:position pos:line="189" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="81"/></expr_stmt></block></else></if>
        <break pos:line="190" pos:column="9">break;<pos:position pos:line="190" pos:column="15"/></break>

    <comment type="block" pos:line="192" pos:column="5">/* These responses can be negatively cached. Most can also be shared. */</comment>
    <case pos:line="193" pos:column="5">case <expr><name><name pos:line="193" pos:column="10">Http<pos:position pos:line="193" pos:column="14"/></name><operator pos:line="193" pos:column="14">::<pos:position pos:line="193" pos:column="16"/></operator><name pos:line="193" pos:column="16">scNoContent<pos:position pos:line="193" pos:column="27"/></name></name></expr>:<pos:position pos:line="193" pos:column="28"/></case>
    <case pos:line="194" pos:column="5">case <expr><name><name pos:line="194" pos:column="10">Http<pos:position pos:line="194" pos:column="14"/></name><operator pos:line="194" pos:column="14">::<pos:position pos:line="194" pos:column="16"/></operator><name pos:line="194" pos:column="16">scUseProxy<pos:position pos:line="194" pos:column="26"/></name></name></expr>:<pos:position pos:line="194" pos:column="27"/></case>
    <case pos:line="195" pos:column="5">case <expr><name><name pos:line="195" pos:column="10">Http<pos:position pos:line="195" pos:column="14"/></name><operator pos:line="195" pos:column="14">::<pos:position pos:line="195" pos:column="16"/></operator><name pos:line="195" pos:column="16">scForbidden<pos:position pos:line="195" pos:column="27"/></name></name></expr>:<pos:position pos:line="195" pos:column="28"/></case>
    <case pos:line="196" pos:column="5">case <expr><name><name pos:line="196" pos:column="10">Http<pos:position pos:line="196" pos:column="14"/></name><operator pos:line="196" pos:column="14">::<pos:position pos:line="196" pos:column="16"/></operator><name pos:line="196" pos:column="16">scNotFound<pos:position pos:line="196" pos:column="26"/></name></name></expr>:<pos:position pos:line="196" pos:column="27"/></case>
    <case pos:line="197" pos:column="5">case <expr><name><name pos:line="197" pos:column="10">Http<pos:position pos:line="197" pos:column="14"/></name><operator pos:line="197" pos:column="14">::<pos:position pos:line="197" pos:column="16"/></operator><name pos:line="197" pos:column="16">scMethodNotAllowed<pos:position pos:line="197" pos:column="34"/></name></name></expr>:<pos:position pos:line="197" pos:column="35"/></case>
    <case pos:line="198" pos:column="5">case <expr><name><name pos:line="198" pos:column="10">Http<pos:position pos:line="198" pos:column="14"/></name><operator pos:line="198" pos:column="14">::<pos:position pos:line="198" pos:column="16"/></operator><name pos:line="198" pos:column="16">scUriTooLong<pos:position pos:line="198" pos:column="28"/></name></name></expr>:<pos:position pos:line="198" pos:column="29"/></case>
    <case pos:line="199" pos:column="5">case <expr><name><name pos:line="199" pos:column="10">Http<pos:position pos:line="199" pos:column="14"/></name><operator pos:line="199" pos:column="14">::<pos:position pos:line="199" pos:column="16"/></operator><name pos:line="199" pos:column="16">scInternalServerError<pos:position pos:line="199" pos:column="37"/></name></name></expr>:<pos:position pos:line="199" pos:column="38"/></case>
    <case pos:line="200" pos:column="5">case <expr><name><name pos:line="200" pos:column="10">Http<pos:position pos:line="200" pos:column="14"/></name><operator pos:line="200" pos:column="14">::<pos:position pos:line="200" pos:column="16"/></operator><name pos:line="200" pos:column="16">scNotImplemented<pos:position pos:line="200" pos:column="32"/></name></name></expr>:<pos:position pos:line="200" pos:column="33"/></case>
    <case pos:line="201" pos:column="5">case <expr><name><name pos:line="201" pos:column="10">Http<pos:position pos:line="201" pos:column="14"/></name><operator pos:line="201" pos:column="14">::<pos:position pos:line="201" pos:column="16"/></operator><name pos:line="201" pos:column="16">scBadGateway<pos:position pos:line="201" pos:column="28"/></name></name></expr>:<pos:position pos:line="201" pos:column="29"/></case>
    <case pos:line="202" pos:column="5">case <expr><name><name pos:line="202" pos:column="10">Http<pos:position pos:line="202" pos:column="14"/></name><operator pos:line="202" pos:column="14">::<pos:position pos:line="202" pos:column="16"/></operator><name pos:line="202" pos:column="16">scServiceUnavailable<pos:position pos:line="202" pos:column="36"/></name></name></expr>:<pos:position pos:line="202" pos:column="37"/></case>
    <case pos:line="203" pos:column="5">case <expr><name><name pos:line="203" pos:column="10">Http<pos:position pos:line="203" pos:column="14"/></name><operator pos:line="203" pos:column="14">::<pos:position pos:line="203" pos:column="16"/></operator><name pos:line="203" pos:column="16">scGatewayTimeout<pos:position pos:line="203" pos:column="32"/></name></name></expr>:<pos:position pos:line="203" pos:column="33"/></case>
    <case pos:line="204" pos:column="5">case <expr><name><name pos:line="204" pos:column="10">Http<pos:position pos:line="204" pos:column="14"/></name><operator pos:line="204" pos:column="14">::<pos:position pos:line="204" pos:column="16"/></operator><name pos:line="204" pos:column="16">scMisdirectedRequest<pos:position pos:line="204" pos:column="36"/></name></name></expr>:<pos:position pos:line="204" pos:column="37"/></case>
        <expr_stmt><expr><name pos:line="205" pos:column="9">statusAnswer<pos:position pos:line="205" pos:column="21"/></name> <operator pos:line="205" pos:column="22">=<pos:position pos:line="205" pos:column="23"/></operator> <name><name pos:line="205" pos:column="24">ReuseDecision<pos:position pos:line="205" pos:column="37"/></name><operator pos:line="205" pos:column="37">::<pos:position pos:line="205" pos:column="39"/></operator><name pos:line="205" pos:column="39">doNotCacheButShare<pos:position pos:line="205" pos:column="57"/></name></name></expr>;<pos:position pos:line="205" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="206" pos:column="9">statusReason<pos:position pos:line="206" pos:column="21"/></name> <operator pos:line="206" pos:column="22">=<pos:position pos:line="206" pos:column="23"/></operator> <name pos:line="206" pos:column="24">shareableError<pos:position pos:line="206" pos:column="38"/></name></expr>;<pos:position pos:line="206" pos:column="39"/></expr_stmt>
    <comment type="line" pos:line="207" pos:column="5">// fall through to the actual decision making below</comment>

    <case pos:line="209" pos:column="5">case <expr><name><name pos:line="209" pos:column="10">Http<pos:position pos:line="209" pos:column="14"/></name><operator pos:line="209" pos:column="14">::<pos:position pos:line="209" pos:column="16"/></operator><name pos:line="209" pos:column="16">scBadRequest<pos:position pos:line="209" pos:column="28"/></name></name></expr>:<pos:position pos:line="209" pos:column="29"/></case> <comment type="line" pos:line="209" pos:column="30">// no sharing; perhaps the server did not like something specific to this request</comment>

<cpp:if pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">if<pos:position pos:line="211" pos:column="4"/></cpp:directive> <expr><name pos:line="211" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="211" pos:column="24"/></name></expr></cpp:if>
        <if pos:line="212" pos:column="9">if <condition pos:line="212" pos:column="12">(<expr><name><name pos:line="212" pos:column="13">Config<pos:position pos:line="212" pos:column="19"/></name><operator pos:line="212" pos:column="19">.<pos:position pos:line="212" pos:column="20"/></operator><name pos:line="212" pos:column="20">negativeTtl<pos:position pos:line="212" pos:column="31"/></name></name> <operator pos:line="212" pos:column="32">&gt;<pos:position pos:line="212" pos:column="36"/></operator> <literal type="number" pos:line="212" pos:column="34">0<pos:position pos:line="212" pos:column="35"/></literal></expr>)<pos:position pos:line="212" pos:column="36"/></condition><then pos:line="212" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="213" pos:column="13">decision<pos:position pos:line="213" pos:column="21"/></name><operator pos:line="213" pos:column="21">.<pos:position pos:line="213" pos:column="22"/></operator><name pos:line="213" pos:column="22">make<pos:position pos:line="213" pos:column="26"/></name></name><argument_list pos:line="213" pos:column="26">(<argument><expr><name><name pos:line="213" pos:column="27">ReuseDecision<pos:position pos:line="213" pos:column="40"/></name><operator pos:line="213" pos:column="40">::<pos:position pos:line="213" pos:column="42"/></operator><name pos:line="213" pos:column="42">cacheNegatively<pos:position pos:line="213" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="59">"Config.negativeTtl &gt; 0"<pos:position pos:line="213" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="85"/></expr_stmt></block></then>
        <else pos:line="214" pos:column="9">else
<cpp:endif pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">endif<pos:position pos:line="215" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="216" pos:column="13">decision<pos:position pos:line="216" pos:column="21"/></name><operator pos:line="216" pos:column="21">.<pos:position pos:line="216" pos:column="22"/></operator><name pos:line="216" pos:column="22">make<pos:position pos:line="216" pos:column="26"/></name></name><argument_list pos:line="216" pos:column="26">(<argument><expr><name pos:line="216" pos:column="27">statusAnswer<pos:position pos:line="216" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="41">statusReason<pos:position pos:line="216" pos:column="53"/></name></expr></argument>)<pos:position pos:line="216" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="55"/></expr_stmt></block></else></if>
        <break pos:line="217" pos:column="9">break;<pos:position pos:line="217" pos:column="15"/></break>

    <comment type="block" pos:line="219" pos:column="5">/* these responses can never be cached, some
       of them can be shared though */</comment>
    <case pos:line="221" pos:column="5">case <expr><name><name pos:line="221" pos:column="10">Http<pos:position pos:line="221" pos:column="14"/></name><operator pos:line="221" pos:column="14">::<pos:position pos:line="221" pos:column="16"/></operator><name pos:line="221" pos:column="16">scSeeOther<pos:position pos:line="221" pos:column="26"/></name></name></expr>:<pos:position pos:line="221" pos:column="27"/></case>
    <case pos:line="222" pos:column="5">case <expr><name><name pos:line="222" pos:column="10">Http<pos:position pos:line="222" pos:column="14"/></name><operator pos:line="222" pos:column="14">::<pos:position pos:line="222" pos:column="16"/></operator><name pos:line="222" pos:column="16">scNotModified<pos:position pos:line="222" pos:column="29"/></name></name></expr>:<pos:position pos:line="222" pos:column="30"/></case>
    <case pos:line="223" pos:column="5">case <expr><name><name pos:line="223" pos:column="10">Http<pos:position pos:line="223" pos:column="14"/></name><operator pos:line="223" pos:column="14">::<pos:position pos:line="223" pos:column="16"/></operator><name pos:line="223" pos:column="16">scUnauthorized<pos:position pos:line="223" pos:column="30"/></name></name></expr>:<pos:position pos:line="223" pos:column="31"/></case>
    <case pos:line="224" pos:column="5">case <expr><name><name pos:line="224" pos:column="10">Http<pos:position pos:line="224" pos:column="14"/></name><operator pos:line="224" pos:column="14">::<pos:position pos:line="224" pos:column="16"/></operator><name pos:line="224" pos:column="16">scProxyAuthenticationRequired<pos:position pos:line="224" pos:column="45"/></name></name></expr>:<pos:position pos:line="224" pos:column="46"/></case>
    <case pos:line="225" pos:column="5">case <expr><name><name pos:line="225" pos:column="10">Http<pos:position pos:line="225" pos:column="14"/></name><operator pos:line="225" pos:column="14">::<pos:position pos:line="225" pos:column="16"/></operator><name pos:line="225" pos:column="16">scPaymentRequired<pos:position pos:line="225" pos:column="33"/></name></name></expr>:<pos:position pos:line="225" pos:column="34"/></case>
    <case pos:line="226" pos:column="5">case <expr><name><name pos:line="226" pos:column="10">Http<pos:position pos:line="226" pos:column="14"/></name><operator pos:line="226" pos:column="14">::<pos:position pos:line="226" pos:column="16"/></operator><name pos:line="226" pos:column="16">scInsufficientStorage<pos:position pos:line="226" pos:column="37"/></name></name></expr>:<pos:position pos:line="226" pos:column="38"/></case>
        <comment type="line" pos:line="227" pos:column="9">// TODO: use more specific reason for non-error status codes</comment>
        <expr_stmt><expr><call><name><name pos:line="228" pos:column="9">decision<pos:position pos:line="228" pos:column="17"/></name><operator pos:line="228" pos:column="17">.<pos:position pos:line="228" pos:column="18"/></operator><name pos:line="228" pos:column="18">make<pos:position pos:line="228" pos:column="22"/></name></name><argument_list pos:line="228" pos:column="22">(<argument><expr><name><name pos:line="228" pos:column="23">ReuseDecision<pos:position pos:line="228" pos:column="36"/></name><operator pos:line="228" pos:column="36">::<pos:position pos:line="228" pos:column="38"/></operator><name pos:line="228" pos:column="38">doNotCacheButShare<pos:position pos:line="228" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="58">shareableError<pos:position pos:line="228" pos:column="72"/></name></expr></argument>)<pos:position pos:line="228" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="74"/></expr_stmt>
        <break pos:line="229" pos:column="9">break;<pos:position pos:line="229" pos:column="15"/></break>

    <case pos:line="231" pos:column="5">case <expr><name><name pos:line="231" pos:column="10">Http<pos:position pos:line="231" pos:column="14"/></name><operator pos:line="231" pos:column="14">::<pos:position pos:line="231" pos:column="16"/></operator><name pos:line="231" pos:column="16">scPartialContent<pos:position pos:line="231" pos:column="32"/></name></name></expr>:<pos:position pos:line="231" pos:column="33"/></case> <comment type="block" pos:line="231" pos:column="34">/* Not yet supported. TODO: make shareable for suitable ranges */</comment>
    <case pos:line="232" pos:column="5">case <expr><name><name pos:line="232" pos:column="10">Http<pos:position pos:line="232" pos:column="14"/></name><operator pos:line="232" pos:column="14">::<pos:position pos:line="232" pos:column="16"/></operator><name pos:line="232" pos:column="16">scNotAcceptable<pos:position pos:line="232" pos:column="31"/></name></name></expr>:<pos:position pos:line="232" pos:column="32"/></case>
    <case pos:line="233" pos:column="5">case <expr><name><name pos:line="233" pos:column="10">Http<pos:position pos:line="233" pos:column="14"/></name><operator pos:line="233" pos:column="14">::<pos:position pos:line="233" pos:column="16"/></operator><name pos:line="233" pos:column="16">scRequestTimeout<pos:position pos:line="233" pos:column="32"/></name></name></expr>:<pos:position pos:line="233" pos:column="33"/></case> <comment type="line" pos:line="233" pos:column="34">// TODO: is this shareable?</comment>
    <case pos:line="234" pos:column="5">case <expr><name><name pos:line="234" pos:column="10">Http<pos:position pos:line="234" pos:column="14"/></name><operator pos:line="234" pos:column="14">::<pos:position pos:line="234" pos:column="16"/></operator><name pos:line="234" pos:column="16">scConflict<pos:position pos:line="234" pos:column="26"/></name></name></expr>:<pos:position pos:line="234" pos:column="27"/></case> <comment type="line" pos:line="234" pos:column="28">// TODO: is this shareable?</comment>
    <case pos:line="235" pos:column="5">case <expr><name><name pos:line="235" pos:column="10">Http<pos:position pos:line="235" pos:column="14"/></name><operator pos:line="235" pos:column="14">::<pos:position pos:line="235" pos:column="16"/></operator><name pos:line="235" pos:column="16">scLengthRequired<pos:position pos:line="235" pos:column="32"/></name></name></expr>:<pos:position pos:line="235" pos:column="33"/></case>
    <case pos:line="236" pos:column="5">case <expr><name><name pos:line="236" pos:column="10">Http<pos:position pos:line="236" pos:column="14"/></name><operator pos:line="236" pos:column="14">::<pos:position pos:line="236" pos:column="16"/></operator><name pos:line="236" pos:column="16">scPreconditionFailed<pos:position pos:line="236" pos:column="36"/></name></name></expr>:<pos:position pos:line="236" pos:column="37"/></case>
    <case pos:line="237" pos:column="5">case <expr><name><name pos:line="237" pos:column="10">Http<pos:position pos:line="237" pos:column="14"/></name><operator pos:line="237" pos:column="14">::<pos:position pos:line="237" pos:column="16"/></operator><name pos:line="237" pos:column="16">scPayloadTooLarge<pos:position pos:line="237" pos:column="33"/></name></name></expr>:<pos:position pos:line="237" pos:column="34"/></case>
    <case pos:line="238" pos:column="5">case <expr><name><name pos:line="238" pos:column="10">Http<pos:position pos:line="238" pos:column="14"/></name><operator pos:line="238" pos:column="14">::<pos:position pos:line="238" pos:column="16"/></operator><name pos:line="238" pos:column="16">scUnsupportedMediaType<pos:position pos:line="238" pos:column="38"/></name></name></expr>:<pos:position pos:line="238" pos:column="39"/></case>
    <case pos:line="239" pos:column="5">case <expr><name><name pos:line="239" pos:column="10">Http<pos:position pos:line="239" pos:column="14"/></name><operator pos:line="239" pos:column="14">::<pos:position pos:line="239" pos:column="16"/></operator><name pos:line="239" pos:column="16">scUnprocessableEntity<pos:position pos:line="239" pos:column="37"/></name></name></expr>:<pos:position pos:line="239" pos:column="38"/></case>
    <case pos:line="240" pos:column="5">case <expr><name><name pos:line="240" pos:column="10">Http<pos:position pos:line="240" pos:column="14"/></name><operator pos:line="240" pos:column="14">::<pos:position pos:line="240" pos:column="16"/></operator><name pos:line="240" pos:column="16">scLocked<pos:position pos:line="240" pos:column="24"/></name></name></expr>:<pos:position pos:line="240" pos:column="25"/></case> <comment type="line" pos:line="240" pos:column="26">// TODO: is this shareable?</comment>
    <case pos:line="241" pos:column="5">case <expr><name><name pos:line="241" pos:column="10">Http<pos:position pos:line="241" pos:column="14"/></name><operator pos:line="241" pos:column="14">::<pos:position pos:line="241" pos:column="16"/></operator><name pos:line="241" pos:column="16">scFailedDependency<pos:position pos:line="241" pos:column="34"/></name></name></expr>:<pos:position pos:line="241" pos:column="35"/></case>
    <case pos:line="242" pos:column="5">case <expr><name><name pos:line="242" pos:column="10">Http<pos:position pos:line="242" pos:column="14"/></name><operator pos:line="242" pos:column="14">::<pos:position pos:line="242" pos:column="16"/></operator><name pos:line="242" pos:column="16">scRequestedRangeNotSatisfied<pos:position pos:line="242" pos:column="44"/></name></name></expr>:<pos:position pos:line="242" pos:column="45"/></case>
    <case pos:line="243" pos:column="5">case <expr><name><name pos:line="243" pos:column="10">Http<pos:position pos:line="243" pos:column="14"/></name><operator pos:line="243" pos:column="14">::<pos:position pos:line="243" pos:column="16"/></operator><name pos:line="243" pos:column="16">scExpectationFailed<pos:position pos:line="243" pos:column="35"/></name></name></expr>:<pos:position pos:line="243" pos:column="36"/></case>
    <case pos:line="244" pos:column="5">case <expr><name><name pos:line="244" pos:column="10">Http<pos:position pos:line="244" pos:column="14"/></name><operator pos:line="244" pos:column="14">::<pos:position pos:line="244" pos:column="16"/></operator><name pos:line="244" pos:column="16">scInvalidHeader<pos:position pos:line="244" pos:column="31"/></name></name></expr>:<pos:position pos:line="244" pos:column="32"/></case> <comment type="block" pos:line="244" pos:column="33">/* Squid header parsing error */</comment>
    <case pos:line="245" pos:column="5">case <expr><name><name pos:line="245" pos:column="10">Http<pos:position pos:line="245" pos:column="14"/></name><operator pos:line="245" pos:column="14">::<pos:position pos:line="245" pos:column="16"/></operator><name pos:line="245" pos:column="16">scHeaderTooLarge<pos:position pos:line="245" pos:column="32"/></name></name></expr>:<pos:position pos:line="245" pos:column="33"/></case>
        <expr_stmt><expr><call><name><name pos:line="246" pos:column="9">decision<pos:position pos:line="246" pos:column="17"/></name><operator pos:line="246" pos:column="17">.<pos:position pos:line="246" pos:column="18"/></operator><name pos:line="246" pos:column="18">make<pos:position pos:line="246" pos:column="22"/></name></name><argument_list pos:line="246" pos:column="22">(<argument><expr><name><name pos:line="246" pos:column="23">ReuseDecision<pos:position pos:line="246" pos:column="36"/></name><operator pos:line="246" pos:column="36">::<pos:position pos:line="246" pos:column="38"/></operator><name pos:line="246" pos:column="38">reuseNot<pos:position pos:line="246" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="48">nonShareableError<pos:position pos:line="246" pos:column="65"/></name></expr></argument>)<pos:position pos:line="246" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="67"/></expr_stmt>
        <break pos:line="247" pos:column="9">break;<pos:position pos:line="247" pos:column="15"/></break>
    <default pos:line="248" pos:column="5">default:<pos:position pos:line="248" pos:column="13"/></default>
        <comment type="block" pos:line="249" pos:column="9">/* RFC 2616 section 6.1.1: an unrecognized response MUST NOT be cached. */</comment>

        <expr_stmt><expr><call><name><name pos:line="251" pos:column="9">decision<pos:position pos:line="251" pos:column="17"/></name><operator pos:line="251" pos:column="17">.<pos:position pos:line="251" pos:column="18"/></operator><name pos:line="251" pos:column="18">make<pos:position pos:line="251" pos:column="22"/></name></name><argument_list pos:line="251" pos:column="22">(<argument><expr><name><name pos:line="251" pos:column="23">ReuseDecision<pos:position pos:line="251" pos:column="36"/></name><operator pos:line="251" pos:column="36">::<pos:position pos:line="251" pos:column="38"/></operator><name pos:line="251" pos:column="38">reuseNot<pos:position pos:line="251" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="48">"unknown status code"<pos:position pos:line="251" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="71"/></expr_stmt>
        <break pos:line="252" pos:column="9">break;<pos:position pos:line="252" pos:column="15"/></break>
    }<pos:position pos:line="253" pos:column="6"/></block></switch>

    <return pos:line="255" pos:column="5">return <expr><name><name pos:line="255" pos:column="12">decision<pos:position pos:line="255" pos:column="20"/></name><operator pos:line="255" pos:column="20">.<pos:position pos:line="255" pos:column="21"/></operator><name pos:line="255" pos:column="21">answer<pos:position pos:line="255" pos:column="27"/></name></name></expr>;<pos:position pos:line="255" pos:column="28"/></return>
}<pos:position pos:line="256" pos:column="2"/></block></function></unit>

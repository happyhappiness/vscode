<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3223_squid-3.1.23.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">PconnPool<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">key<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">host<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">short<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">port<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">domain<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">IpAddress<pos:position pos:line="2" pos:column="84"/></name> <modifier pos:line="2" pos:column="85">&amp;<pos:position pos:line="2" pos:column="90"/></modifier></type><name pos:line="2" pos:column="86">client_address<pos:position pos:line="2" pos:column="100"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="101"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">SQUIDHOSTNAMELEN<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator> <literal type="number" pos:line="4" pos:column="47">3<pos:position pos:line="4" pos:column="48"/></literal> <operator pos:line="4" pos:column="49">+<pos:position pos:line="4" pos:column="50"/></operator> <literal type="number" pos:line="4" pos:column="51">10<pos:position pos:line="4" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">ntoabuf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><name pos:line="5" pos:column="18">MAX_IPSTRLEN<pos:position pos:line="5" pos:column="30"/></name></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">domain<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">&amp;&amp;<pos:position pos:line="7" pos:column="26"/></operator> <operator pos:line="7" pos:column="19">!<pos:position pos:line="7" pos:column="20"/></operator><call><name><name pos:line="7" pos:column="20">client_address<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">IsAnyAddr<pos:position pos:line="7" pos:column="44"/></name></name><argument_list pos:line="7" pos:column="44">()<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="47"/></condition><then pos:line="7" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">snprintf<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">buf<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">SQUIDHOSTNAMELEN<pos:position pos:line="8" pos:column="39"/></name> <operator pos:line="8" pos:column="40">*<pos:position pos:line="8" pos:column="41"/></operator> <literal type="number" pos:line="8" pos:column="42">3<pos:position pos:line="8" pos:column="43"/></literal> <operator pos:line="8" pos:column="44">+<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">10<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="50">"%s:%d-%s/%s"<pos:position pos:line="8" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="65">host<pos:position pos:line="8" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="71">(<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="72">int<pos:position pos:line="8" pos:column="75"/></name><operator pos:line="8" pos:column="75">)<pos:position pos:line="8" pos:column="76"/></operator> <name pos:line="8" pos:column="77">port<pos:position pos:line="8" pos:column="81"/></name></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="83">client_address<pos:position pos:line="8" pos:column="97"/></name><operator pos:line="8" pos:column="97">.<pos:position pos:line="8" pos:column="98"/></operator><name pos:line="8" pos:column="98">NtoA<pos:position pos:line="8" pos:column="102"/></name></name><argument_list pos:line="8" pos:column="102">(<argument><expr><name pos:line="8" pos:column="103">ntoabuf<pos:position pos:line="8" pos:column="110"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="111">MAX_IPSTRLEN<pos:position pos:line="8" pos:column="123"/></name></expr></argument>)<pos:position pos:line="8" pos:column="124"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="126">domain<pos:position pos:line="8" pos:column="132"/></name></expr></argument>)<pos:position pos:line="8" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="134"/></expr_stmt></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name pos:line="9" pos:column="14">domain<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <call><name><name pos:line="9" pos:column="24">client_address<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">.<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">IsAnyAddr<pos:position pos:line="9" pos:column="48"/></name></name><argument_list pos:line="9" pos:column="48">()<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">snprintf<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">buf<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">SQUIDHOSTNAMELEN<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">*<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="42">3<pos:position pos:line="10" pos:column="43"/></literal> <operator pos:line="10" pos:column="44">+<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="46">10<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="50">"%s:%d/%s"<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">host<pos:position pos:line="10" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="68">(<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="69">int<pos:position pos:line="10" pos:column="72"/></name><operator pos:line="10" pos:column="72">)<pos:position pos:line="10" pos:column="73"/></operator> <name pos:line="10" pos:column="74">port<pos:position pos:line="10" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="80">domain<pos:position pos:line="10" pos:column="86"/></name></expr></argument>)<pos:position pos:line="10" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="88"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><operator pos:line="11" pos:column="15">!<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">domain<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator> <operator pos:line="11" pos:column="24">&amp;&amp;<pos:position pos:line="11" pos:column="34"/></operator> <operator pos:line="11" pos:column="27">!<pos:position pos:line="11" pos:column="28"/></operator><call><name><name pos:line="11" pos:column="28">client_address<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">.<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="43">IsAnyAddr<pos:position pos:line="11" pos:column="52"/></name></name><argument_list pos:line="11" pos:column="52">()<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">snprintf<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">buf<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">SQUIDHOSTNAMELEN<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></operator> <literal type="number" pos:line="12" pos:column="42">3<pos:position pos:line="12" pos:column="43"/></literal> <operator pos:line="12" pos:column="44">+<pos:position pos:line="12" pos:column="45"/></operator> <literal type="number" pos:line="12" pos:column="46">10<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="50">"%s:%d-%s"<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">host<pos:position pos:line="12" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="68">(<pos:position pos:line="12" pos:column="69"/></operator><name pos:line="12" pos:column="69">int<pos:position pos:line="12" pos:column="72"/></name><operator pos:line="12" pos:column="72">)<pos:position pos:line="12" pos:column="73"/></operator> <name pos:line="12" pos:column="74">port<pos:position pos:line="12" pos:column="78"/></name></expr></argument>, <argument><expr><call><name><name pos:line="12" pos:column="80">client_address<pos:position pos:line="12" pos:column="94"/></name><operator pos:line="12" pos:column="94">.<pos:position pos:line="12" pos:column="95"/></operator><name pos:line="12" pos:column="95">NtoA<pos:position pos:line="12" pos:column="99"/></name></name><argument_list pos:line="12" pos:column="99">(<argument><expr><name pos:line="12" pos:column="100">ntoabuf<pos:position pos:line="12" pos:column="107"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="108">MAX_IPSTRLEN<pos:position pos:line="12" pos:column="120"/></name></expr></argument>)<pos:position pos:line="12" pos:column="121"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="123"/></expr_stmt></block></then></if></elseif>
    <else pos:line="13" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="9">snprintf<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">buf<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="23">SQUIDHOSTNAMELEN<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">*<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">3<pos:position pos:line="14" pos:column="43"/></literal> <operator pos:line="14" pos:column="44">+<pos:position pos:line="14" pos:column="45"/></operator> <literal type="number" pos:line="14" pos:column="46">10<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="50">"%s:%d"<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">host<pos:position pos:line="14" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="65">(<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="66">int<pos:position pos:line="14" pos:column="69"/></name><operator pos:line="14" pos:column="69">)<pos:position pos:line="14" pos:column="70"/></operator> <name pos:line="14" pos:column="71">port<pos:position pos:line="14" pos:column="75"/></name></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">48<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="15">6<pos:position pos:line="16" pos:column="16"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="17">"PconnPool::key("<pos:position pos:line="16" pos:column="34"/></literal> <operator pos:line="16" pos:column="35">&lt;&lt;<pos:position pos:line="16" pos:column="43"/></operator> <operator pos:line="16" pos:column="38">(<pos:position pos:line="16" pos:column="39"/></operator><ternary><condition><expr><name pos:line="16" pos:column="39">host<pos:position pos:line="16" pos:column="43"/></name></expr>?<pos:position pos:line="16" pos:column="44"/></condition><then><expr><name pos:line="16" pos:column="44">host<pos:position pos:line="16" pos:column="48"/></name></expr></then><else pos:line="16" pos:column="48">:<expr><literal type="string" pos:line="16" pos:column="49">"(no host!)"<pos:position pos:line="16" pos:column="61"/></literal></expr></else></ternary><operator pos:line="16" pos:column="61">)<pos:position pos:line="16" pos:column="62"/></operator> <operator pos:line="16" pos:column="63">&lt;&lt;<pos:position pos:line="16" pos:column="71"/></operator> <literal type="string" pos:line="16" pos:column="66">","<pos:position pos:line="16" pos:column="69"/></literal> <operator pos:line="16" pos:column="70">&lt;&lt;<pos:position pos:line="16" pos:column="78"/></operator> <name pos:line="16" pos:column="73">port<pos:position pos:line="16" pos:column="77"/></name> <operator pos:line="16" pos:column="78">&lt;&lt;<pos:position pos:line="16" pos:column="86"/></operator> <literal type="string" pos:line="16" pos:column="81">","<pos:position pos:line="16" pos:column="84"/></literal> <operator pos:line="16" pos:column="85">&lt;&lt;<pos:position pos:line="16" pos:column="93"/></operator> <operator pos:line="16" pos:column="88">(<pos:position pos:line="16" pos:column="89"/></operator><ternary><condition><expr><name pos:line="16" pos:column="89">domain<pos:position pos:line="16" pos:column="95"/></name></expr>?<pos:position pos:line="16" pos:column="96"/></condition><then><expr><name pos:line="16" pos:column="96">domain<pos:position pos:line="16" pos:column="102"/></name></expr></then><else pos:line="16" pos:column="102">:<expr><literal type="string" pos:line="16" pos:column="103">"(no domain)"<pos:position pos:line="16" pos:column="116"/></literal></expr></else></ternary><operator pos:line="16" pos:column="116">)<pos:position pos:line="16" pos:column="117"/></operator> <operator pos:line="16" pos:column="118">&lt;&lt;<pos:position pos:line="16" pos:column="126"/></operator> <literal type="string" pos:line="16" pos:column="121">","<pos:position pos:line="16" pos:column="124"/></literal> <operator pos:line="16" pos:column="125">&lt;&lt;<pos:position pos:line="16" pos:column="133"/></operator> <name pos:line="16" pos:column="128">client_address<pos:position pos:line="16" pos:column="142"/></name> <operator pos:line="16" pos:column="143">&lt;&lt;<pos:position pos:line="16" pos:column="151"/></operator> <literal type="string" pos:line="16" pos:column="146">"is {"<pos:position pos:line="16" pos:column="152"/></literal> <operator pos:line="16" pos:column="153">&lt;&lt;<pos:position pos:line="16" pos:column="161"/></operator> <name pos:line="16" pos:column="156">buf<pos:position pos:line="16" pos:column="159"/></name> <operator pos:line="16" pos:column="160">&lt;&lt;<pos:position pos:line="16" pos:column="168"/></operator> <literal type="string" pos:line="16" pos:column="163">"}"<pos:position pos:line="16" pos:column="166"/></literal></expr></argument> )<pos:position pos:line="16" pos:column="168"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="169"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">buf<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6990_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ipc<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">TypedMsgHdr<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">sync<pos:position pos:line="1" pos:column="28"/></name></name><parameter_list pos:line="1" pos:column="28">()<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">msg_name<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18"> <block pos:line="3" pos:column="19">{ <comment type="line" pos:line="3" pos:column="21">// we have a name</comment>
        <expr_stmt><expr><name pos:line="4" pos:column="9">msg_name<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">=<pos:position pos:line="4" pos:column="19"/></operator> <operator pos:line="4" pos:column="20">&amp;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="21">name<pos:position pos:line="4" pos:column="25"/></name></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="5" pos:column="6"/></block></then> <else pos:line="5" pos:column="7">else <block pos:line="5" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">Must<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><operator pos:line="6" pos:column="14">!<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">msg_namelen<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&amp;&amp;<pos:position pos:line="6" pos:column="37"/></operator> <operator pos:line="6" pos:column="30">!<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">msg_name<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></else></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">msg_iov<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17"> <block pos:line="9" pos:column="18">{ <comment type="line" pos:line="9" pos:column="20">// we have a data component</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">Must<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">msg_iovlen<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">1<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">msg_iov<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">ios<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">ios<pos:position pos:line="12" pos:column="12"/></name><index pos:line="12" pos:column="12">[<expr><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>]<pos:position pos:line="12" pos:column="15"/></index></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">iov_base<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="28">data<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">Must<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name><name pos:line="13" pos:column="14">ios<pos:position pos:line="13" pos:column="17"/></name><index pos:line="13" pos:column="17">[<expr><literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>]<pos:position pos:line="13" pos:column="20"/></index></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">iov_len<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <sizeof pos:line="13" pos:column="32">sizeof<argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">data<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">Must<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><operator pos:line="15" pos:column="14">!<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">msg_iovlen<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">&amp;&amp;<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="29">!<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">msg_iov<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">msg_control<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{ <comment type="line" pos:line="18" pos:column="24">// we have a control component</comment>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">Must<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">msg_controllen<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">&gt;<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="31">0<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">msg_control<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <operator pos:line="20" pos:column="23">&amp;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="24">ctrl<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">Must<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><operator pos:line="22" pos:column="14">!<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">msg_controllen<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&amp;&amp;<pos:position pos:line="22" pos:column="40"/></operator> <operator pos:line="22" pos:column="33">!<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">msg_control<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="24" pos:column="5">offset<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1600_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">BodyProducerDialer<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">canDial<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">AsyncCall<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">call<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">Parent<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">::<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">canDial<pos:position pos:line="4" pos:column="25"/></name></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name pos:line="4" pos:column="26">call<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name><name pos:line="7" pos:column="11">BodyProducer<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">::<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">Pointer<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">&amp;<pos:position pos:line="7" pos:column="38"/></modifier></type><name pos:line="7" pos:column="34">producer<pos:position pos:line="7" pos:column="42"/></name> <init pos:line="7" pos:column="43">= <expr><name pos:line="7" pos:column="45">job<pos:position pos:line="7" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">BodyPipe<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">::<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">Pointer<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">aPipe<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">arg1<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name><name pos:line="9" pos:column="10">aPipe<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">stillProducing<pos:position pos:line="9" pos:column="31"/></name></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">producer<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42"> <block pos:line="9" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name><name pos:line="10" pos:column="16">call<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">debugSection<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="35">call<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">debugLevel<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">producer<pos:position pos:line="10" pos:column="60"/></name> <operator pos:line="10" pos:column="61">&lt;&lt;<pos:position pos:line="10" pos:column="69"/></operator> <literal type="string" pos:line="10" pos:column="64">" no longer producing for "<pos:position pos:line="10" pos:column="91"/></literal> <operator pos:line="10" pos:column="92">&lt;&lt;<pos:position pos:line="10" pos:column="100"/></operator> <call><name><name pos:line="10" pos:column="95">aPipe<pos:position pos:line="10" pos:column="100"/></name><operator pos:line="10" pos:column="100">-&gt;<pos:position pos:line="10" pos:column="105"/></operator><name pos:line="10" pos:column="102">status<pos:position pos:line="10" pos:column="108"/></name></name><argument_list pos:line="10" pos:column="108">()<pos:position pos:line="10" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="112"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><call><name><name pos:line="11" pos:column="16">call<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">.<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">cancel<pos:position pos:line="11" pos:column="27"/></name></name><argument_list pos:line="11" pos:column="27">(<argument><expr><literal type="string" pos:line="11" pos:column="28">"no longer producing"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><literal type="boolean" pos:line="14" pos:column="12">true<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

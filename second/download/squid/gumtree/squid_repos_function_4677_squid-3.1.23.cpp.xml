<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4677_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">UFSSwapDir<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">IsUFSDir<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">SwapDir<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">sd<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">UFSSwapDir<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">mySD<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><cast type="dynamic" pos:line="4" pos:column="24">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="36">&lt;<argument><expr><name pos:line="4" pos:column="37">UFSSwapDir<pos:position pos:line="4" pos:column="47"/></name> <operator pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="53"/></argument_list><argument_list pos:line="4" pos:column="50">(<argument><expr><name pos:line="4" pos:column="51">sd<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
    <return pos:line="5" pos:column="5">return <expr><ternary><condition><expr><name pos:line="5" pos:column="12">mySD<pos:position pos:line="5" pos:column="16"/></name></expr> ?<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <expr><literal type="number" pos:line="5" pos:column="19">1<pos:position pos:line="5" pos:column="20"/></literal></expr> <pos:position pos:line="5" pos:column="21"/></then><else pos:line="5" pos:column="21">: <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></else></ternary></expr> ;<pos:position pos:line="5" pos:column="26"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

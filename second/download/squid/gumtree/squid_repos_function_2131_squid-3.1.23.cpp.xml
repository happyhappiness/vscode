<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2131_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">purgeEntriesByHeader<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">HttpRequest<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">req<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">reqUrl<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">HttpMsg<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">rep<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">http_hdr_type<pos:position pos:line="2" pos:column="87"/></name></type> <name pos:line="2" pos:column="88">hdr<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="92"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">hdrUrl<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">absUrl<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">absUrl<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">hdrUrl<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name><name pos:line="7" pos:column="14">rep<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">header<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">getStr<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">hdr<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">hdrUrl<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/*
     * If the URL is relative, make it absolute so we can find it.
     * If it's absolute, make sure the host parts match to avoid DOS attacks
     * as per RFC 2616 13.10.
     */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">urlIsRelative<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">hdrUrl<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">absUrl<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">urlMakeAbsolute<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">req<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">hdrUrl<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">absUrl<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">!=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">NULL<pos:position pos:line="19" pos:column="27"/></name></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">hdrUrl<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">absUrl<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then> <elseif pos:line="22" pos:column="7">else <if pos:line="22" pos:column="12">if <condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">!<pos:position pos:line="22" pos:column="17"/></operator><call><name pos:line="22" pos:column="17">sameUrlHosts<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">reqUrl<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">hdrUrl<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46"> <block pos:line="22" pos:column="47">{
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">purgeEntriesByUrl<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">req<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">hdrUrl<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">absUrl<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">!=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">NULL<pos:position pos:line="28" pos:column="23"/></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24"> <block pos:line="28" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">safe_free<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">absUrl<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

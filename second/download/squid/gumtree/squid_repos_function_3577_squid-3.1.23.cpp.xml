<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3577_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">tlv<pos:position pos:line="1" pos:column="4"/></name> <modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type>
<name pos:line="2" pos:column="1">storeSwapMetaBuild<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">e<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">tlv<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">TLV<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>		<comment type="block" pos:line="4" pos:column="33">/* we'll return this */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">tlv<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier><modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">T<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><operator pos:line="5" pos:column="15">&amp;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="16">TLV<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">url<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">vary<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">e<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">mem_obj<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">!=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">e<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">swap_status<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">SWAPOUT_WRITING<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">url<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name><name pos:line="10" pos:column="11">e<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">url<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">20<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">3<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"storeSwapMetaBuild: "<pos:position pos:line="11" pos:column="41"/></literal> <operator pos:line="11" pos:column="42">&lt;&lt;<pos:position pos:line="11" pos:column="50"/></operator> <name pos:line="11" pos:column="45">url<pos:position pos:line="11" pos:column="48"/></name></expr></argument>  )<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">tlv<pos:position pos:line="12" pos:column="8"/></name> <modifier pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></modifier></type><name pos:line="12" pos:column="10">t<pos:position pos:line="12" pos:column="11"/></name> <init pos:line="12" pos:column="12">= <expr><call><name><name pos:line="12" pos:column="14">StoreMeta<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">::<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">Factory<pos:position pos:line="12" pos:column="32"/></name></name> <argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">STORE_META_KEY<pos:position pos:line="12" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="49">SQUID_MD5_DIGEST_LENGTH<pos:position pos:line="12" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="74">e<pos:position pos:line="12" pos:column="75"/></name><operator pos:line="12" pos:column="75">-&gt;<pos:position pos:line="12" pos:column="80"/></operator><name pos:line="12" pos:column="77">key<pos:position pos:line="12" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="82"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">t<pos:position pos:line="14" pos:column="11"/></name></expr>)<pos:position pos:line="14" pos:column="12"/></condition><then pos:line="14" pos:column="12"> <block pos:line="14" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">storeSwapTLVFree<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">TLV<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">T<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name><name pos:line="19" pos:column="9">StoreMeta<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">::<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">Add<pos:position pos:line="19" pos:column="23"/></name></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">T<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="27">t<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">t<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name><name pos:line="20" pos:column="9">StoreMeta<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">::<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">Factory<pos:position pos:line="20" pos:column="27"/></name></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">STORE_META_STD_LFS<pos:position pos:line="20" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="47">STORE_HDR_METASIZE<pos:position pos:line="20" pos:column="65"/></name></expr></argument>,<argument><expr><operator pos:line="20" pos:column="66">&amp;<pos:position pos:line="20" pos:column="71"/></operator><name><name pos:line="20" pos:column="67">e<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">-&gt;<pos:position pos:line="20" pos:column="73"/></operator><name pos:line="20" pos:column="70">timestamp<pos:position pos:line="20" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">t<pos:position pos:line="22" pos:column="11"/></name></expr>)<pos:position pos:line="22" pos:column="12"/></condition><then pos:line="22" pos:column="12"> <block pos:line="22" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">storeSwapTLVFree<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">TLV<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">NULL<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">T<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name><name pos:line="27" pos:column="9">StoreMeta<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">::<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">Add<pos:position pos:line="27" pos:column="23"/></name></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">T<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">t<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">t<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name><name pos:line="28" pos:column="9">StoreMeta<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">::<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">Factory<pos:position pos:line="28" pos:column="27"/></name></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">STORE_META_URL<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="44">strlen<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">(<argument><expr><name pos:line="28" pos:column="51">url<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call> <operator pos:line="28" pos:column="56">+<pos:position pos:line="28" pos:column="57"/></operator> <literal type="number" pos:line="28" pos:column="58">1<pos:position pos:line="28" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="61">url<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">t<pos:position pos:line="30" pos:column="11"/></name></expr>)<pos:position pos:line="30" pos:column="12"/></condition><then pos:line="30" pos:column="12"> <block pos:line="30" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">storeSwapTLVFree<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">TLV<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">NULL<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">T<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <call><name><name pos:line="35" pos:column="9">StoreMeta<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">::<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">Add<pos:position pos:line="35" pos:column="23"/></name></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">T<pos:position pos:line="35" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="27">t<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">vary<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <name><name pos:line="36" pos:column="12">e<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">mem_obj<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">vary_headers<pos:position pos:line="36" pos:column="36"/></name></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">vary<pos:position pos:line="38" pos:column="13"/></name></expr>)<pos:position pos:line="38" pos:column="14"/></condition><then pos:line="38" pos:column="14"> <block pos:line="38" pos:column="15">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">t<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator><call><name><name pos:line="39" pos:column="12">StoreMeta<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">::<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">Factory<pos:position pos:line="39" pos:column="30"/></name></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">STORE_META_VARY_HEADERS<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="56">strlen<pos:position pos:line="39" pos:column="62"/></name><argument_list pos:line="39" pos:column="62">(<argument><expr><name pos:line="39" pos:column="63">vary<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call> <operator pos:line="39" pos:column="69">+<pos:position pos:line="39" pos:column="70"/></operator> <literal type="number" pos:line="39" pos:column="71">1<pos:position pos:line="39" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="74">vary<pos:position pos:line="39" pos:column="78"/></name></expr></argument>)<pos:position pos:line="39" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="80"/></expr_stmt>

        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">t<pos:position pos:line="41" pos:column="15"/></name></expr>)<pos:position pos:line="41" pos:column="16"/></condition><then pos:line="41" pos:column="16"> <block pos:line="41" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">storeSwapTLVFree<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">TLV<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
            <return pos:line="43" pos:column="13">return <expr><name pos:line="43" pos:column="20">NULL<pos:position pos:line="43" pos:column="24"/></name></expr>;<pos:position pos:line="43" pos:column="25"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="46" pos:column="9">StoreMeta<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">::<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">Add<pos:position pos:line="46" pos:column="23"/></name></name> <argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">T<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">t<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">TLV<pos:position pos:line="49" pos:column="15"/></name></expr>;<pos:position pos:line="49" pos:column="16"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1146.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">WIN32_sendSignal<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">WIN32_signal<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SERVICE_STATUS<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">ssStatus<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">DWORD<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">fdwAccess<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">fdwControl<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SC_HANDLE<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">schService<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SC_HANDLE<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">schSCManager<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">WIN32_Service_name<pos:position pos:line="9" pos:column="28"/></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">WIN32_Service_name<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">xstrdup<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">_WIN_SQUID_DEFAULT_SERVICE_NAME<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">schSCManager<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <call><name pos:line="12" pos:column="20">OpenSCManager<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">NULL<pos:position pos:line="12" pos:column="38"/></name></expr></argument>,	<comment type="block" pos:line="12" pos:column="41">/* machine (NULL == local)    */</comment>
                                 <argument><expr><name pos:line="13" pos:column="34">NULL<pos:position pos:line="13" pos:column="38"/></name></expr></argument>,			<comment type="block" pos:line="13" pos:column="57">/* database (NULL == default) */</comment>
                                 <argument><expr><name pos:line="14" pos:column="34">SC_MANAGER_ALL_ACCESS<pos:position pos:line="14" pos:column="55"/></name></expr></argument>	<comment type="block" pos:line="14" pos:column="57">/* access required            */</comment>
                                )<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">schSCManager<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">fprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">stderr<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"OpenSCManager failed\n"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">exit<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* The required service object access depends on the control. */</comment>
    <switch pos:line="23" pos:column="5">switch <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">WIN32_signal<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition> <block pos:line="23" pos:column="27">{

    <case pos:line="25" pos:column="5">case <expr><literal type="number" pos:line="25" pos:column="10">0<pos:position pos:line="25" pos:column="11"/></literal></expr>:<pos:position pos:line="25" pos:column="12"/></case>			<comment type="block" pos:line="25" pos:column="33">/* SIGNULL */</comment>
        <expr_stmt><expr><name pos:line="26" pos:column="9">fdwAccess<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">SERVICE_INTERROGATE<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">fdwControl<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">_WIN_SQUID_SERVICE_CONTROL_INTERROGATE<pos:position pos:line="27" pos:column="60"/></name></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
        <break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break>

    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">SIGUSR1<pos:position pos:line="30" pos:column="17"/></name></expr>:<pos:position pos:line="30" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="31" pos:column="9">fdwAccess<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">SERVICE_USER_DEFINED_CONTROL<pos:position pos:line="31" pos:column="49"/></name></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">fdwControl<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">_WIN_SQUID_SERVICE_CONTROL_ROTATE<pos:position pos:line="32" pos:column="55"/></name></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>
        <break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break>

    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">SIGUSR2<pos:position pos:line="35" pos:column="17"/></name></expr>:<pos:position pos:line="35" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="36" pos:column="9">fdwAccess<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">SERVICE_USER_DEFINED_CONTROL<pos:position pos:line="36" pos:column="49"/></name></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">fdwControl<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">_WIN_SQUID_SERVICE_CONTROL_DEBUG<pos:position pos:line="37" pos:column="54"/></name></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
        <break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>

    <case pos:line="40" pos:column="5">case <expr><name pos:line="40" pos:column="10">SIGHUP<pos:position pos:line="40" pos:column="16"/></name></expr>:<pos:position pos:line="40" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="41" pos:column="9">fdwAccess<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">SERVICE_USER_DEFINED_CONTROL<pos:position pos:line="41" pos:column="49"/></name></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">fdwControl<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">_WIN_SQUID_SERVICE_CONTROL_RECONFIGURE<pos:position pos:line="42" pos:column="60"/></name></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
        <break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break>

    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">SIGTERM<pos:position pos:line="45" pos:column="17"/></name></expr>:<pos:position pos:line="45" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="46" pos:column="9">fdwAccess<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name pos:line="46" pos:column="21">SERVICE_STOP<pos:position pos:line="46" pos:column="33"/></name></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">fdwControl<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">_WIN_SQUID_SERVICE_CONTROL_STOP<pos:position pos:line="47" pos:column="53"/></name></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
        <break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>

    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">SIGINT<pos:position pos:line="50" pos:column="16"/></name></expr>:<pos:position pos:line="50" pos:column="17"/></case>

    <case pos:line="52" pos:column="5">case <expr><name pos:line="52" pos:column="10">SIGKILL<pos:position pos:line="52" pos:column="17"/></name></expr>:<pos:position pos:line="52" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="53" pos:column="9">fdwAccess<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">SERVICE_USER_DEFINED_CONTROL<pos:position pos:line="53" pos:column="49"/></name></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">fdwControl<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">_WIN_SQUID_SERVICE_CONTROL_INTERRUPT<pos:position pos:line="54" pos:column="58"/></name></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
        <break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break>

    <default pos:line="57" pos:column="5">default:<pos:position pos:line="57" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">exit<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="number" pos:line="58" pos:column="14">1<pos:position pos:line="58" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></switch>

    <comment type="block" pos:line="61" pos:column="5">/* Open a handle to the service. */</comment>
    <expr_stmt><expr><name pos:line="62" pos:column="5">schService<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">OpenService<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">schSCManager<pos:position pos:line="62" pos:column="42"/></name></expr></argument>,	<comment type="block" pos:line="62" pos:column="49">/* SCManager database */</comment>
                             <argument><expr><name pos:line="63" pos:column="30">WIN32_Service_name<pos:position pos:line="63" pos:column="48"/></name></expr></argument>,	<comment type="block" pos:line="63" pos:column="57">/* name of service    */</comment>
                             <argument><expr><name pos:line="64" pos:column="30">fdwAccess<pos:position pos:line="64" pos:column="39"/></name></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>		<comment type="block" pos:line="64" pos:column="57">/* specify access     */</comment>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">schService<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">==<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="23">NULL<pos:position pos:line="66" pos:column="27"/></name></expr>)<pos:position pos:line="66" pos:column="28"/></condition><then pos:line="66" pos:column="28"> <block pos:line="66" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">fprintf<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name pos:line="67" pos:column="17">stderr<pos:position pos:line="67" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="25">"%s: ERROR: Could not open Service %s\n"<pos:position pos:line="67" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="67">APP_SHORTNAME<pos:position pos:line="67" pos:column="80"/></name></expr></argument>,
                <argument><expr><name pos:line="68" pos:column="17">WIN32_Service_name<pos:position pos:line="68" pos:column="35"/></name></expr></argument>)<pos:position pos:line="68" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">exit<pos:position pos:line="69" pos:column="13"/></name><argument_list pos:line="69" pos:column="13">(<argument><expr><literal type="number" pos:line="69" pos:column="14">1<pos:position pos:line="69" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then> <else pos:line="70" pos:column="7">else <block pos:line="70" pos:column="12">{
        <comment type="block" pos:line="71" pos:column="9">/* Send a control value to the service. */</comment>

        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><operator pos:line="73" pos:column="13">!<pos:position pos:line="73" pos:column="14"/></operator><call><name pos:line="73" pos:column="14">ControlService<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><name pos:line="73" pos:column="29">schService<pos:position pos:line="73" pos:column="39"/></name></expr></argument>,	<comment type="block" pos:line="73" pos:column="41">/* handle of service      */</comment>
                            <argument><expr><name pos:line="74" pos:column="29">fdwControl<pos:position pos:line="74" pos:column="39"/></name></expr></argument>,	<comment type="block" pos:line="74" pos:column="41">/* control value to send  */</comment>
                            <argument><expr><operator pos:line="75" pos:column="29">&amp;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="30">ssStatus<pos:position pos:line="75" pos:column="38"/></name></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="40"/></condition><then pos:line="75" pos:column="40"> <block pos:line="75" pos:column="41">{	<comment type="block" pos:line="75" pos:column="49">/* address of status info */</comment>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">fprintf<pos:position pos:line="76" pos:column="20"/></name><argument_list pos:line="76" pos:column="20">(<argument><expr><name pos:line="76" pos:column="21">stderr<pos:position pos:line="76" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="29">"%s: ERROR: Could not Control Service %s\n"<pos:position pos:line="76" pos:column="72"/></literal></expr></argument>,
                    <argument><expr><name pos:line="77" pos:column="21">APP_SHORTNAME<pos:position pos:line="77" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="36">WIN32_Service_name<pos:position pos:line="77" pos:column="54"/></name></expr></argument>)<pos:position pos:line="77" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">exit<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">(<argument><expr><literal type="number" pos:line="78" pos:column="18">1<pos:position pos:line="78" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then> <else pos:line="79" pos:column="11">else <block pos:line="79" pos:column="16">{
            <comment type="block" pos:line="80" pos:column="13">/* Print the service status. */</comment>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">printf<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><literal type="string" pos:line="81" pos:column="20">"\nStatus of %s Service:\n"<pos:position pos:line="81" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="49">WIN32_Service_name<pos:position pos:line="81" pos:column="67"/></name></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">printf<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><literal type="string" pos:line="82" pos:column="20">"  Service Type: 0x%lx\n"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="47">ssStatus<pos:position pos:line="82" pos:column="55"/></name><operator pos:line="82" pos:column="55">.<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="56">dwServiceType<pos:position pos:line="82" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">printf<pos:position pos:line="83" pos:column="19"/></name><argument_list pos:line="83" pos:column="19">(<argument><expr><literal type="string" pos:line="83" pos:column="20">"  Current State: 0x%lx\n"<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="48">ssStatus<pos:position pos:line="83" pos:column="56"/></name><operator pos:line="83" pos:column="56">.<pos:position pos:line="83" pos:column="57"/></operator><name pos:line="83" pos:column="57">dwCurrentState<pos:position pos:line="83" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">printf<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><literal type="string" pos:line="84" pos:column="20">"  Controls Accepted: 0x%lx\n"<pos:position pos:line="84" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="52">ssStatus<pos:position pos:line="84" pos:column="60"/></name><operator pos:line="84" pos:column="60">.<pos:position pos:line="84" pos:column="61"/></operator><name pos:line="84" pos:column="61">dwControlsAccepted<pos:position pos:line="84" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">printf<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><literal type="string" pos:line="85" pos:column="20">"  Exit Code: %ld\n"<pos:position pos:line="85" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="42">ssStatus<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">.<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="51">dwWin32ExitCode<pos:position pos:line="85" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">printf<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><literal type="string" pos:line="86" pos:column="20">"  Service Specific Exit Code: %ld\n"<pos:position pos:line="86" pos:column="57"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="87" pos:column="20">ssStatus<pos:position pos:line="87" pos:column="28"/></name><operator pos:line="87" pos:column="28">.<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="29">dwServiceSpecificExitCode<pos:position pos:line="87" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">printf<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><literal type="string" pos:line="88" pos:column="20">"  Check Point: %ld\n"<pos:position pos:line="88" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="44">ssStatus<pos:position pos:line="88" pos:column="52"/></name><operator pos:line="88" pos:column="52">.<pos:position pos:line="88" pos:column="53"/></operator><name pos:line="88" pos:column="53">dwCheckPoint<pos:position pos:line="88" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">printf<pos:position pos:line="89" pos:column="19"/></name><argument_list pos:line="89" pos:column="19">(<argument><expr><literal type="string" pos:line="89" pos:column="20">"  Wait Hint: %ld\n"<pos:position pos:line="89" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="42">ssStatus<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">.<pos:position pos:line="89" pos:column="51"/></operator><name pos:line="89" pos:column="51">dwWaitHint<pos:position pos:line="89" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="92" pos:column="9">CloseServiceHandle<pos:position pos:line="92" pos:column="27"/></name><argument_list pos:line="92" pos:column="27">(<argument><expr><name pos:line="92" pos:column="28">schService<pos:position pos:line="92" pos:column="38"/></name></expr></argument>)<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="95" pos:column="5">CloseServiceHandle<pos:position pos:line="95" pos:column="23"/></name><argument_list pos:line="95" pos:column="23">(<argument><expr><name pos:line="95" pos:column="24">schSCManager<pos:position pos:line="95" pos:column="36"/></name></expr></argument>)<pos:position pos:line="95" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4676_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLNoteData<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">matchNotes<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">NotePairs<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">note<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">note<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">28<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"Checking "<pos:position pos:line="7" pos:column="30"/></literal> <operator pos:line="7" pos:column="31">&lt;&lt;<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="34">name<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">values<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">empty<pos:position pos:line="9" pos:column="22"/></name></name><argument_list pos:line="9" pos:column="22">()<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><call><name><name pos:line="10" pos:column="17">note<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">findFirst<pos:position pos:line="10" pos:column="32"/></name></name><argument_list pos:line="10" pos:column="32">(<argument><expr><call><name><name pos:line="10" pos:column="33">name<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">.<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">termedBuf<pos:position pos:line="10" pos:column="47"/></name></name><argument_list pos:line="10" pos:column="47">()<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call> <operator pos:line="10" pos:column="51">!=<pos:position pos:line="10" pos:column="53"/></operator> <name pos:line="10" pos:column="54">NULL<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">)<pos:position pos:line="10" pos:column="59"/></operator></expr>;<pos:position pos:line="10" pos:column="60"/></return></block></then></if>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><decl><type><name><name pos:line="12" pos:column="10">std<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">::<pos:position pos:line="12" pos:column="15"/></operator><name><name pos:line="12" pos:column="15">vector<pos:position pos:line="12" pos:column="21"/></name><argument_list type="generic" pos:line="12" pos:column="21">&lt;<argument><expr><name><name pos:line="12" pos:column="22">NotePairs<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">::<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">Entry<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">*<pos:position pos:line="12" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="44"/></argument_list></name><operator pos:line="12" pos:column="41">::<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="43">iterator<pos:position pos:line="12" pos:column="51"/></name></name></type> <name pos:line="12" pos:column="52">i<pos:position pos:line="12" pos:column="53"/></name> <init pos:line="12" pos:column="54">= <expr><call><name><name pos:line="12" pos:column="56">note<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">entries<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">.<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="70">begin<pos:position pos:line="12" pos:column="75"/></name></name><argument_list pos:line="12" pos:column="75">()<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="78"/></init> <condition><expr><name pos:line="12" pos:column="79">i<pos:position pos:line="12" pos:column="80"/></name><operator pos:line="12" pos:column="80">!=<pos:position pos:line="12" pos:column="82"/></operator> <call><name><name pos:line="12" pos:column="83">note<pos:position pos:line="12" pos:column="87"/></name><operator pos:line="12" pos:column="87">-&gt;<pos:position pos:line="12" pos:column="92"/></operator><name pos:line="12" pos:column="89">entries<pos:position pos:line="12" pos:column="96"/></name><operator pos:line="12" pos:column="96">.<pos:position pos:line="12" pos:column="97"/></operator><name pos:line="12" pos:column="97">end<pos:position pos:line="12" pos:column="100"/></name></name><argument_list pos:line="12" pos:column="100">()<pos:position pos:line="12" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="103"/></condition> <incr><expr><operator pos:line="12" pos:column="104">++<pos:position pos:line="12" pos:column="106"/></operator><name pos:line="12" pos:column="106">i<pos:position pos:line="12" pos:column="107"/></name></expr></incr>)<pos:position pos:line="12" pos:column="108"/></control> <block pos:line="12" pos:column="109">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><operator pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">)<pos:position pos:line="13" pos:column="17"/></operator><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="19">name<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">cmp<pos:position pos:line="13" pos:column="27"/></name></name></name><argument_list pos:line="13" pos:column="27">(<argument><expr><call><name><name pos:line="13" pos:column="28">name<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">termedBuf<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">()<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call> <operator pos:line="13" pos:column="46">==<pos:position pos:line="13" pos:column="48"/></operator> <literal type="number" pos:line="13" pos:column="49">0<pos:position pos:line="13" pos:column="50"/></literal></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51"> <block pos:line="13" pos:column="52">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><call><name><name pos:line="14" pos:column="17">values<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">match<pos:position pos:line="14" pos:column="30"/></name></name><argument_list pos:line="14" pos:column="30">(<argument><expr><call><name><operator pos:line="14" pos:column="31">(<pos:position pos:line="14" pos:column="32"/></operator><operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name><name pos:line="14" pos:column="37">value<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">.<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">termedBuf<pos:position pos:line="14" pos:column="52"/></name></name></name><argument_list pos:line="14" pos:column="52">()<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
                <block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="boolean" pos:line="15" pos:column="24">true<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></then></if>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></for>
    <return pos:line="18" pos:column="5">return <expr><literal type="boolean" pos:line="18" pos:column="12">false<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

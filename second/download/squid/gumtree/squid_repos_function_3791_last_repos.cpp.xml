<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3791_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">asn1time_cmp<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">ASN1_TIME<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">asnTime1<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">ASN1_TIME<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">asnTime2<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">strTime1<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">64<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="24">strTime2<pos:position pos:line="3" pos:column="32"/></name><index pos:line="3" pos:column="32">[<expr><literal type="number" pos:line="3" pos:column="33">64<pos:position pos:line="3" pos:column="35"/></literal></expr>]<pos:position pos:line="3" pos:column="36"/></index></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">asn1timeToGeneralizedTimeStr<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">asnTime1<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">strTime1<pos:position pos:line="4" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="59">sizeof<argument_list pos:line="4" pos:column="65">(<argument><expr><name pos:line="4" pos:column="66">strTime1<pos:position pos:line="4" pos:column="74"/></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="77"/></condition><then pos:line="4" pos:column="77">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><operator pos:line="5" pos:column="16">-<pos:position pos:line="5" pos:column="17"/></operator><literal type="number" pos:line="5" pos:column="17">1<pos:position pos:line="5" pos:column="18"/></literal></expr>;<pos:position pos:line="5" pos:column="19"/></return></block></then></if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">asn1timeToGeneralizedTimeStr<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">asnTime2<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">strTime2<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="59">sizeof<argument_list pos:line="6" pos:column="65">(<argument><expr><name pos:line="6" pos:column="66">strTime2<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="77"/></condition><then pos:line="6" pos:column="77">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><operator pos:line="7" pos:column="16">-<pos:position pos:line="7" pos:column="17"/></operator><literal type="number" pos:line="7" pos:column="17">1<pos:position pos:line="7" pos:column="18"/></literal></expr>;<pos:position pos:line="7" pos:column="19"/></return></block></then></if>

    <return pos:line="9" pos:column="5">return <expr><call><name pos:line="9" pos:column="12">strcmp<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">strTime1<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">strTime2<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

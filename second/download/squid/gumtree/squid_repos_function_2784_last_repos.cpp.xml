<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2784_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">URL<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">host<pos:position pos:line="2" pos:column="10"/></name></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">src<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">hostAddr_<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">.<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">setEmpty<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">hostAddr_<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">src<pos:position pos:line="5" pos:column="20"/></name></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name><name pos:line="6" pos:column="9">hostAddr_<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">isAnyAddr<pos:position pos:line="6" pos:column="28"/></name></name><argument_list pos:line="6" pos:column="28">()<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31"> <block pos:line="6" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">xstrncpy<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">host_<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="25">src<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="30">sizeof<argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">host_<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">hostIsNumeric_<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="boolean" pos:line="8" pos:column="26">false<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">hostAddr_<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">toHostStr<pos:position pos:line="10" pos:column="28"/></name></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">host_<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="36">sizeof<argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">host_<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">23<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"given IP: "<pos:position pos:line="11" pos:column="35"/></literal> <operator pos:line="11" pos:column="36">&lt;&lt;<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="39">hostAddr_<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">hostIsNumeric_<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">touch<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">()<pos:position pos:line="14" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1221_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayPool<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">createPool<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">u_char<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">delay_class<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">pool<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">freeData<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">()<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="7" pos:column="5">pool<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name><name pos:line="7" pos:column="12">CommonPool<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">::<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">Factory<pos:position pos:line="7" pos:column="31"/></name></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">delay_class<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">theComposite_<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="60"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_960.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Config<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">dump<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">entry<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">name<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="57">Auth<pos:position pos:line="2" pos:column="61"/></name><operator pos:line="2" pos:column="61">::<pos:position pos:line="2" pos:column="63"/></operator><name pos:line="2" pos:column="63">Config<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">scheme<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list> <specifier pos:line="2" pos:column="79">const<pos:position pos:line="2" pos:column="84"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">authenticateProgram<pos:position pos:line="4" pos:column="29"/></name></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="5" pos:column="23">// not configured</comment>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">wordlist<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">list<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">authenticateProgram<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">storeAppendPrintf<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">entry<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"%s %s"<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">name<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="45">scheme<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">type<pos:position pos:line="8" pos:column="57"/></name></name><argument_list pos:line="8" pos:column="57">()<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">list<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">!=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition> <block pos:line="9" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">storeAppendPrintf<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">entry<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">" %s"<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="41">list<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">key<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">list<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">list<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">next<pos:position pos:line="11" pos:column="26"/></name></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">storeAppendPrintf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">entry<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"\n"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">storeAppendPrintf<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">entry<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="30">"%s %s realm "<pos:position pos:line="15" pos:column="44"/></literal> <name pos:line="15" pos:column="45">SQUIDSBUFPH<pos:position pos:line="15" pos:column="56"/></name> <literal type="string" pos:line="15" pos:column="57">"\n"<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">name<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="69">scheme<pos:position pos:line="15" pos:column="75"/></name><operator pos:line="15" pos:column="75">-&gt;<pos:position pos:line="15" pos:column="80"/></operator><name pos:line="15" pos:column="77">type<pos:position pos:line="15" pos:column="81"/></name></name><argument_list pos:line="15" pos:column="81">()<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="85">SQUIDSBUFPRINT<pos:position pos:line="15" pos:column="99"/></name><argument_list pos:line="15" pos:column="99">(<argument><expr><name pos:line="15" pos:column="100">realm<pos:position pos:line="15" pos:column="105"/></name></expr></argument>)<pos:position pos:line="15" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="108"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">storeAppendPrintf<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">entry<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"%s %s children %d startup=%d idle=%d concurrency=%d\n"<pos:position pos:line="17" pos:column="85"/></literal></expr></argument>,
                      <argument><expr><name pos:line="18" pos:column="23">name<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><call><name><name pos:line="18" pos:column="29">scheme<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">type<pos:position pos:line="18" pos:column="41"/></name></name><argument_list pos:line="18" pos:column="41">()<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr></argument>,
                      <argument><expr><name><name pos:line="19" pos:column="23">authenticateChildren<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">.<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">n_max<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="51">authenticateChildren<pos:position pos:line="19" pos:column="71"/></name><operator pos:line="19" pos:column="71">.<pos:position pos:line="19" pos:column="72"/></operator><name pos:line="19" pos:column="72">n_startup<pos:position pos:line="19" pos:column="81"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="20" pos:column="23">authenticateChildren<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">n_idle<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="52">authenticateChildren<pos:position pos:line="20" pos:column="72"/></name><operator pos:line="20" pos:column="72">.<pos:position pos:line="20" pos:column="73"/></operator><name pos:line="20" pos:column="73">concurrency<pos:position pos:line="20" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="86"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name><name pos:line="22" pos:column="9">keyExtrasLine<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">.<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">size<pos:position pos:line="22" pos:column="27"/></name></name><argument_list pos:line="22" pos:column="27">()<pos:position pos:line="22" pos:column="29"/></argument_list></call> <operator pos:line="22" pos:column="30">&gt;<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">storeAppendPrintf<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">entry<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"%s %s key_extras \"%s\"\n"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">name<pos:position pos:line="23" pos:column="67"/></name></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="69">scheme<pos:position pos:line="23" pos:column="75"/></name><operator pos:line="23" pos:column="75">-&gt;<pos:position pos:line="23" pos:column="80"/></operator><name pos:line="23" pos:column="77">type<pos:position pos:line="23" pos:column="81"/></name></name><argument_list pos:line="23" pos:column="81">()<pos:position pos:line="23" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="85">keyExtrasLine<pos:position pos:line="23" pos:column="98"/></name><operator pos:line="23" pos:column="98">.<pos:position pos:line="23" pos:column="99"/></operator><name pos:line="23" pos:column="99">termedBuf<pos:position pos:line="23" pos:column="108"/></name></name><argument_list pos:line="23" pos:column="108">()<pos:position pos:line="23" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="112"/></expr_stmt></block></then></if>

    <return pos:line="25" pos:column="5">return <expr><literal type="boolean" pos:line="25" pos:column="12">true<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

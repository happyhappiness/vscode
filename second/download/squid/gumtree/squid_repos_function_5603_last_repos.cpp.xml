<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5603_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">TcpAcceptor<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">status<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list> <specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">conn<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="string" pos:line="5" pos:column="16">"[nil connection]"<pos:position pos:line="5" pos:column="34"/></literal></expr>;<pos:position pos:line="5" pos:column="35"/></return></block></then></if>

    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">ipbuf<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><name pos:line="7" pos:column="23">MAX_IPSTRLEN<pos:position pos:line="7" pos:column="35"/></name></expr>]<pos:position pos:line="7" pos:column="36"/></index></name> <init pos:line="7" pos:column="37">= <expr><block pos:line="7" pos:column="39">{<expr><literal type="char" pos:line="7" pos:column="40">'\0'<pos:position pos:line="7" pos:column="44"/></literal></expr>}<pos:position pos:line="7" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">ipbuf<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr>]<pos:position pos:line="8" pos:column="17"/></index></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <literal type="char" pos:line="8" pos:column="21">'\0'<pos:position pos:line="8" pos:column="25"/></literal></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="9">conn<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">local<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">toHostStr<pos:position pos:line="9" pos:column="30"/></name></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">ipbuf<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="38">MAX_IPSTRLEN<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt></block></then></if>

    <decl_stmt><decl><specifier pos:line="11" pos:column="5">static<pos:position pos:line="11" pos:column="11"/></specifier> <type><name pos:line="11" pos:column="12">MemBuf<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">buf<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">buf<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">.<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">reset<pos:position pos:line="12" pos:column="14"/></name></name><argument_list pos:line="12" pos:column="14">()<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">buf<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">.<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">appendf<pos:position pos:line="13" pos:column="16"/></name></name><argument_list pos:line="13" pos:column="16">(<argument><expr><literal type="string" pos:line="13" pos:column="17">" FD %d, %s"<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>,<argument><expr><name><name pos:line="13" pos:column="30">conn<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">fd<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">ipbuf<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">jobStatus<pos:position pos:line="15" pos:column="26"/></name> <init pos:line="15" pos:column="27">= <expr><call><name><name pos:line="15" pos:column="29">AsyncJob<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">::<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">status<pos:position pos:line="15" pos:column="45"/></name></name><argument_list pos:line="15" pos:column="45">()<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">buf<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">.<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">append<pos:position pos:line="16" pos:column="15"/></name></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">jobStatus<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="27">strlen<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">jobStatus<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>

    <return pos:line="18" pos:column="5">return <expr><call><name><name pos:line="18" pos:column="12">buf<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">content<pos:position pos:line="18" pos:column="23"/></name></name><argument_list pos:line="18" pos:column="23">()<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

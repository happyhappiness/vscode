<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6098_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">stackmember<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">getsymbol<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">s<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">endptr<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">stackmember<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">rv<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">end<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <specifier pos:line="6" pos:column="10">const<pos:position pos:line="6" pos:column="15"/></specifier> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">origs<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">s<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* trim whitespace */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">s<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">trim<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">s<pos:position pos:line="8" pos:column="15"/></name></expr></argument>)<pos:position pos:line="8" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">rv<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">eval<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>		<comment type="block" pos:line="9" pos:column="33">/* A literal */</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">.<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">valuetype<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">ESI_EXPR_INVALID<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">valuestored<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">ESI_LITERAL_INVALID<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">rv<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">.<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">precedence<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="21">1<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt> <comment type="block" pos:line="12" pos:column="24">/* A literal */</comment>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><literal type="char" pos:line="14" pos:column="10">'0'<pos:position pos:line="14" pos:column="13"/></literal> <operator pos:line="14" pos:column="14">&lt;=<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">s<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&amp;&amp;<pos:position pos:line="14" pos:column="30"/></operator> <operator pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">s<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&lt;=<pos:position pos:line="14" pos:column="31"/></operator> <literal type="char" pos:line="14" pos:column="29">'9'<pos:position pos:line="14" pos:column="32"/></literal><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">||<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">s<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <literal type="char" pos:line="14" pos:column="43">'-'<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47"> <block pos:line="14" pos:column="48">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">size_t<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">length<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><call><name pos:line="15" pos:column="25">strspn<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">s<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"0123456789."<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <specifier pos:line="16" pos:column="14">const<pos:position pos:line="16" pos:column="19"/></specifier> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">point<pos:position pos:line="16" pos:column="26"/></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">point<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">strchr<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">s<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="32">'.'<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call><operator pos:line="18" pos:column="36">)<pos:position pos:line="18" pos:column="37"/></operator> <operator pos:line="18" pos:column="38">&amp;&amp;<pos:position pos:line="18" pos:column="48"/></operator> <name pos:line="18" pos:column="41">point<pos:position pos:line="18" pos:column="46"/></name> <operator pos:line="18" pos:column="47">-<pos:position pos:line="18" pos:column="48"/></operator> <name pos:line="18" pos:column="49">s<pos:position pos:line="18" pos:column="50"/></name> <operator pos:line="18" pos:column="51">&lt;<pos:position pos:line="18" pos:column="55"/></operator> <operator pos:line="18" pos:column="53">(<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="54">ssize_t<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">)<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="62">length<pos:position pos:line="18" pos:column="68"/></name></expr>)<pos:position pos:line="18" pos:column="69"/></condition><then pos:line="18" pos:column="69"> <block pos:line="18" pos:column="70">{
            <comment type="block" pos:line="19" pos:column="13">/* floating point */</comment>
            <expr_stmt><expr><name pos:line="20" pos:column="13">errno<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator><literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt> <comment type="block" pos:line="20" pos:column="22">/* reset errno */</comment>
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">rv<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">value<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">floating<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <call><name pos:line="21" pos:column="33">strtod<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name pos:line="21" pos:column="40">s<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="43">&amp;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="44">end<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>

            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">s<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">==<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">end<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">||<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="29">errno<pos:position pos:line="23" pos:column="34"/></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35"> <block pos:line="23" pos:column="36">{
                <comment type="block" pos:line="24" pos:column="17">/* Couldn't convert to float */</comment>
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">debugs<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="number" pos:line="25" pos:column="24">86<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">DBG_IMPORTANT<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="43">"failed to convert '"<pos:position pos:line="25" pos:column="64"/></literal> <operator pos:line="25" pos:column="65">&lt;&lt;<pos:position pos:line="25" pos:column="73"/></operator> <name pos:line="25" pos:column="68">s<pos:position pos:line="25" pos:column="69"/></name> <operator pos:line="25" pos:column="70">&lt;&lt;<pos:position pos:line="25" pos:column="78"/></operator> <literal type="string" pos:line="25" pos:column="73">"' to float "<pos:position pos:line="25" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="88"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">endptr<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">origs<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then> <else pos:line="27" pos:column="15">else <block pos:line="27" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">debugs<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="number" pos:line="28" pos:column="24">86<pos:position pos:line="28" pos:column="26"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="28" pos:column="27">6<pos:position pos:line="28" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"found "<pos:position pos:line="28" pos:column="38"/></literal> <operator pos:line="28" pos:column="39">&lt;&lt;<pos:position pos:line="28" pos:column="47"/></operator> <name><name pos:line="28" pos:column="42">rv<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">.<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">value<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">.<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="51">floating<pos:position pos:line="28" pos:column="59"/></name></name> <operator pos:line="28" pos:column="60">&lt;&lt;<pos:position pos:line="28" pos:column="68"/></operator> <literal type="string" pos:line="28" pos:column="63">" of length "<pos:position pos:line="28" pos:column="76"/></literal> <operator pos:line="28" pos:column="77">&lt;&lt;<pos:position pos:line="28" pos:column="85"/></operator> <name pos:line="28" pos:column="80">end<pos:position pos:line="28" pos:column="83"/></name> <operator pos:line="28" pos:column="84">-<pos:position pos:line="28" pos:column="85"/></operator> <name pos:line="28" pos:column="86">s<pos:position pos:line="28" pos:column="87"/></name></expr></argument>)<pos:position pos:line="28" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="89"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">endptr<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">end<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="30" pos:column="17">rv<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">eval<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">evalliteral<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="31" pos:column="17">rv<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">valuestored<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">ESI_LITERAL_FLOAT<pos:position pos:line="31" pos:column="51"/></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="32" pos:column="17">rv<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">valuetype<pos:position pos:line="32" pos:column="29"/></name></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">ESI_EXPR_LITERAL<pos:position pos:line="32" pos:column="48"/></name></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">rv<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">precedence<pos:position pos:line="33" pos:column="30"/></name></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <literal type="number" pos:line="33" pos:column="33">1<pos:position pos:line="33" pos:column="34"/></literal></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></else></if>
        }<pos:position pos:line="35" pos:column="10"/></block></then> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
            <comment type="block" pos:line="36" pos:column="13">/* INT */</comment>
            <expr_stmt><expr><name pos:line="37" pos:column="13">errno<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator><literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt> <comment type="block" pos:line="37" pos:column="22">/* reset errno */</comment>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">rv<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">value<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">integral<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <call><name pos:line="38" pos:column="33">strtol<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name pos:line="38" pos:column="40">s<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="43">&amp;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="44">end<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="49">0<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>

            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">s<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">==<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">end<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">||<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">errno<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35"> <block pos:line="40" pos:column="36">{
                <comment type="block" pos:line="41" pos:column="17">/* Couldn't convert to int */</comment>
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">debugs<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><literal type="number" pos:line="42" pos:column="24">86<pos:position pos:line="42" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="28">DBG_IMPORTANT<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="43">"failed to convert '"<pos:position pos:line="42" pos:column="64"/></literal> <operator pos:line="42" pos:column="65">&lt;&lt;<pos:position pos:line="42" pos:column="73"/></operator> <name pos:line="42" pos:column="68">s<pos:position pos:line="42" pos:column="69"/></name> <operator pos:line="42" pos:column="70">&lt;&lt;<pos:position pos:line="42" pos:column="78"/></operator> <literal type="string" pos:line="42" pos:column="73">"' to int "<pos:position pos:line="42" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="86"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">endptr<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <name pos:line="43" pos:column="27">origs<pos:position pos:line="43" pos:column="32"/></name></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></then> <else pos:line="44" pos:column="15">else <block pos:line="44" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">debugs<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><literal type="number" pos:line="45" pos:column="24">86<pos:position pos:line="45" pos:column="26"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="45" pos:column="27">6<pos:position pos:line="45" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="30">"found "<pos:position pos:line="45" pos:column="38"/></literal> <operator pos:line="45" pos:column="39">&lt;&lt;<pos:position pos:line="45" pos:column="47"/></operator> <name><name pos:line="45" pos:column="42">rv<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">value<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">.<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">integral<pos:position pos:line="45" pos:column="59"/></name></name> <operator pos:line="45" pos:column="60">&lt;&lt;<pos:position pos:line="45" pos:column="68"/></operator> <literal type="string" pos:line="45" pos:column="63">" of length "<pos:position pos:line="45" pos:column="76"/></literal> <operator pos:line="45" pos:column="77">&lt;&lt;<pos:position pos:line="45" pos:column="85"/></operator> <name pos:line="45" pos:column="80">end<pos:position pos:line="45" pos:column="83"/></name> <operator pos:line="45" pos:column="84">-<pos:position pos:line="45" pos:column="85"/></operator> <name pos:line="45" pos:column="86">s<pos:position pos:line="45" pos:column="87"/></name></expr></argument>)<pos:position pos:line="45" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="89"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="46" pos:column="17">*<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">endptr<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">end<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="47" pos:column="17">rv<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">eval<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="27">evalliteral<pos:position pos:line="47" pos:column="38"/></name></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="48" pos:column="17">rv<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">valuestored<pos:position pos:line="48" pos:column="31"/></name></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <name pos:line="48" pos:column="34">ESI_LITERAL_INT<pos:position pos:line="48" pos:column="49"/></name></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="49" pos:column="17">rv<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">.<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">valuetype<pos:position pos:line="49" pos:column="29"/></name></name> <operator pos:line="49" pos:column="30">=<pos:position pos:line="49" pos:column="31"/></operator> <name pos:line="49" pos:column="32">ESI_EXPR_LITERAL<pos:position pos:line="49" pos:column="48"/></name></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="50" pos:column="17">rv<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">.<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">precedence<pos:position pos:line="50" pos:column="30"/></name></name> <operator pos:line="50" pos:column="31">=<pos:position pos:line="50" pos:column="32"/></operator> <literal type="number" pos:line="50" pos:column="33">1<pos:position pos:line="50" pos:column="34"/></literal></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></else></if>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then> <elseif pos:line="53" pos:column="7">else <if pos:line="53" pos:column="12">if <condition pos:line="53" pos:column="15">(<expr><literal type="char" pos:line="53" pos:column="16">'!'<pos:position pos:line="53" pos:column="19"/></literal> <operator pos:line="53" pos:column="20">==<pos:position pos:line="53" pos:column="22"/></operator> <operator pos:line="53" pos:column="23">*<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="24">s<pos:position pos:line="53" pos:column="25"/></name></expr>)<pos:position pos:line="53" pos:column="26"/></condition><then pos:line="53" pos:column="26"> <block pos:line="53" pos:column="27">{
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><literal type="char" pos:line="54" pos:column="13">'='<pos:position pos:line="54" pos:column="16"/></literal> <operator pos:line="54" pos:column="17">==<pos:position pos:line="54" pos:column="19"/></operator> <operator pos:line="54" pos:column="20">*<pos:position pos:line="54" pos:column="21"/></operator><operator pos:line="54" pos:column="21">(<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">s<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">+<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal><operator pos:line="54" pos:column="27">)<pos:position pos:line="54" pos:column="28"/></operator></expr>)<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29"> <block pos:line="54" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">debugs<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="number" pos:line="55" pos:column="20">86<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="24">6<pos:position pos:line="55" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="27">"found !="<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="56" pos:column="13">*<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">endptr<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">s<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">+<pos:position pos:line="56" pos:column="26"/></operator> <literal type="number" pos:line="56" pos:column="27">2<pos:position pos:line="56" pos:column="28"/></literal></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">rv<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">.<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">eval<pos:position pos:line="57" pos:column="20"/></name></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">evalnotequals<pos:position pos:line="57" pos:column="36"/></name></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">rv<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">.<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">valuetype<pos:position pos:line="58" pos:column="25"/></name></name> <operator pos:line="58" pos:column="26">=<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="28">ESI_EXPR_NOTEQ<pos:position pos:line="58" pos:column="42"/></name></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">rv<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">.<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">precedence<pos:position pos:line="59" pos:column="26"/></name></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <literal type="number" pos:line="59" pos:column="29">5<pos:position pos:line="59" pos:column="30"/></literal></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then> <else pos:line="60" pos:column="11">else <block pos:line="60" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">debugs<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><literal type="number" pos:line="61" pos:column="20">86<pos:position pos:line="61" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="24">6<pos:position pos:line="61" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="27">"found !"<pos:position pos:line="61" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="62" pos:column="13">*<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">endptr<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">s<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">+<pos:position pos:line="62" pos:column="26"/></operator> <literal type="number" pos:line="62" pos:column="27">1<pos:position pos:line="62" pos:column="28"/></literal></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">rv<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">.<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="16">valuetype<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <name pos:line="63" pos:column="28">ESI_EXPR_NOT<pos:position pos:line="63" pos:column="40"/></name></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">rv<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">.<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">precedence<pos:position pos:line="64" pos:column="26"/></name></name> <operator pos:line="64" pos:column="27">=<pos:position pos:line="64" pos:column="28"/></operator> <literal type="number" pos:line="64" pos:column="29">4<pos:position pos:line="64" pos:column="30"/></literal></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">rv<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">.<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">eval<pos:position pos:line="65" pos:column="20"/></name></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">evalnegate<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></else></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif> <elseif pos:line="67" pos:column="7">else <if pos:line="67" pos:column="12">if <condition pos:line="67" pos:column="15">(<expr><literal type="char" pos:line="67" pos:column="16">'\''<pos:position pos:line="67" pos:column="20"/></literal> <operator pos:line="67" pos:column="21">==<pos:position pos:line="67" pos:column="23"/></operator> <operator pos:line="67" pos:column="24">*<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="25">s<pos:position pos:line="67" pos:column="26"/></name></expr>)<pos:position pos:line="67" pos:column="27"/></condition><then pos:line="67" pos:column="27"> <block pos:line="67" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">char<pos:position pos:line="68" pos:column="13"/></name> <specifier pos:line="68" pos:column="14">const<pos:position pos:line="68" pos:column="19"/></specifier> <modifier pos:line="68" pos:column="20">*<pos:position pos:line="68" pos:column="21"/></modifier></type><name pos:line="68" pos:column="21">t<pos:position pos:line="68" pos:column="22"/></name> <init pos:line="68" pos:column="23">= <expr><name pos:line="68" pos:column="25">s<pos:position pos:line="68" pos:column="26"/></name> <operator pos:line="68" pos:column="27">+<pos:position pos:line="68" pos:column="28"/></operator> <literal type="number" pos:line="68" pos:column="29">1<pos:position pos:line="68" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="68" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debugs<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="number" pos:line="69" pos:column="16">86<pos:position pos:line="69" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="20">6<pos:position pos:line="69" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="23">"found \'"<pos:position pos:line="69" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>

        <while pos:line="71" pos:column="9">while <condition pos:line="71" pos:column="15">(<expr><operator pos:line="71" pos:column="16">*<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">t<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">!=<pos:position pos:line="71" pos:column="21"/></operator> <literal type="char" pos:line="71" pos:column="22">'\''<pos:position pos:line="71" pos:column="26"/></literal> <operator pos:line="71" pos:column="27">&amp;&amp;<pos:position pos:line="71" pos:column="37"/></operator> <operator pos:line="71" pos:column="30">*<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="31">t<pos:position pos:line="71" pos:column="32"/></name></expr>)<pos:position pos:line="71" pos:column="33"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="72" pos:column="13">++<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">t<pos:position pos:line="72" pos:column="16"/></name></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt></block></while>

        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><operator pos:line="74" pos:column="14">*<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">t<pos:position pos:line="74" pos:column="16"/></name></expr>)<pos:position pos:line="74" pos:column="17"/></condition><then pos:line="74" pos:column="17"> <block pos:line="74" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">debugs<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><literal type="number" pos:line="75" pos:column="20">86<pos:position pos:line="75" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="24">DBG_IMPORTANT<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="39">"missing end \' in '"<pos:position pos:line="75" pos:column="60"/></literal> <operator pos:line="75" pos:column="61">&lt;&lt;<pos:position pos:line="75" pos:column="69"/></operator> <name pos:line="75" pos:column="64">s<pos:position pos:line="75" pos:column="65"/></name> <operator pos:line="75" pos:column="66">&lt;&lt;<pos:position pos:line="75" pos:column="74"/></operator> <literal type="string" pos:line="75" pos:column="69">"'"<pos:position pos:line="75" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="76" pos:column="13">*<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">endptr<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <name pos:line="76" pos:column="23">origs<pos:position pos:line="76" pos:column="28"/></name></expr>;<pos:position pos:line="76" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then> <else pos:line="77" pos:column="11">else <block pos:line="77" pos:column="16">{
            <expr_stmt><expr><operator pos:line="78" pos:column="13">*<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="14">endptr<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <name pos:line="78" pos:column="23">t<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">+<pos:position pos:line="78" pos:column="26"/></operator> <literal type="number" pos:line="78" pos:column="27">1<pos:position pos:line="78" pos:column="28"/></literal></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
            <comment type="block" pos:line="79" pos:column="13">/* Special case for zero length strings */</comment>

            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name pos:line="81" pos:column="17">t<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">-<pos:position pos:line="81" pos:column="20"/></operator> <name pos:line="81" pos:column="21">s<pos:position pos:line="81" pos:column="22"/></name> <operator pos:line="81" pos:column="23">-<pos:position pos:line="81" pos:column="24"/></operator> <literal type="number" pos:line="81" pos:column="25">1<pos:position pos:line="81" pos:column="26"/></literal></expr>)<pos:position pos:line="81" pos:column="27"/></condition><then pos:line="81" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="82" pos:column="17">rv<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">.<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">value<pos:position pos:line="82" pos:column="25"/></name><operator pos:line="82" pos:column="25">.<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="26">string<pos:position pos:line="82" pos:column="32"/></name></name> <operator pos:line="82" pos:column="33">=<pos:position pos:line="82" pos:column="34"/></operator> <call><name pos:line="82" pos:column="35">xstrndup<pos:position pos:line="82" pos:column="43"/></name><argument_list pos:line="82" pos:column="43">(<argument><expr><name pos:line="82" pos:column="44">s<pos:position pos:line="82" pos:column="45"/></name> <operator pos:line="82" pos:column="46">+<pos:position pos:line="82" pos:column="47"/></operator> <literal type="number" pos:line="82" pos:column="48">1<pos:position pos:line="82" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="51">t<pos:position pos:line="82" pos:column="52"/></name> <operator pos:line="82" pos:column="53">-<pos:position pos:line="82" pos:column="54"/></operator> <name pos:line="82" pos:column="55">s<pos:position pos:line="82" pos:column="56"/></name> <operator pos:line="82" pos:column="57">-<pos:position pos:line="82" pos:column="58"/></operator> <literal type="number" pos:line="82" pos:column="59">1<pos:position pos:line="82" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="62"/></expr_stmt></block></then>
            <else pos:line="83" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="17">rv<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">.<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="20">value<pos:position pos:line="84" pos:column="25"/></name><operator pos:line="84" pos:column="25">.<pos:position pos:line="84" pos:column="26"/></operator><name pos:line="84" pos:column="26">string<pos:position pos:line="84" pos:column="32"/></name></name> <operator pos:line="84" pos:column="33">=<pos:position pos:line="84" pos:column="34"/></operator> <cast type="static" pos:line="84" pos:column="35">static_cast<argument_list type="generic" pos:line="84" pos:column="46">&lt;<argument><expr><name pos:line="84" pos:column="47">char<pos:position pos:line="84" pos:column="51"/></name> <operator pos:line="84" pos:column="52">*<pos:position pos:line="84" pos:column="53"/></operator></expr></argument>&gt;<pos:position pos:line="84" pos:column="57"/></argument_list><argument_list pos:line="84" pos:column="54">(<argument><expr><call><name pos:line="84" pos:column="55">xcalloc<pos:position pos:line="84" pos:column="62"/></name><argument_list pos:line="84" pos:column="62">(<argument><expr><literal type="number" pos:line="84" pos:column="63">1<pos:position pos:line="84" pos:column="64"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="84" pos:column="65">1<pos:position pos:line="84" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="68"/></argument_list></cast></expr>;<pos:position pos:line="84" pos:column="69"/></expr_stmt></block></else></if>

            <expr_stmt><expr><name><name pos:line="86" pos:column="13">rv<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">.<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">eval<pos:position pos:line="86" pos:column="20"/></name></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <name pos:line="86" pos:column="23">evalliteral<pos:position pos:line="86" pos:column="34"/></name></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="88" pos:column="13">rv<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">.<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="16">valuestored<pos:position pos:line="88" pos:column="27"/></name></name> <operator pos:line="88" pos:column="28">=<pos:position pos:line="88" pos:column="29"/></operator> <name pos:line="88" pos:column="30">ESI_LITERAL_STRING<pos:position pos:line="88" pos:column="48"/></name></expr>;<pos:position pos:line="88" pos:column="49"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="90" pos:column="13">rv<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">.<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">valuetype<pos:position pos:line="90" pos:column="25"/></name></name> <operator pos:line="90" pos:column="26">=<pos:position pos:line="90" pos:column="27"/></operator> <name pos:line="90" pos:column="28">ESI_EXPR_LITERAL<pos:position pos:line="90" pos:column="44"/></name></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="92" pos:column="13">rv<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">.<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="16">precedence<pos:position pos:line="92" pos:column="26"/></name></name> <operator pos:line="92" pos:column="27">=<pos:position pos:line="92" pos:column="28"/></operator> <literal type="number" pos:line="92" pos:column="29">1<pos:position pos:line="92" pos:column="30"/></literal></expr>;<pos:position pos:line="92" pos:column="31"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="94" pos:column="13">debugs<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><literal type="number" pos:line="94" pos:column="20">86<pos:position pos:line="94" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="24">6<pos:position pos:line="94" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="27">"found  string '"<pos:position pos:line="94" pos:column="44"/></literal> <operator pos:line="94" pos:column="45">&lt;&lt;<pos:position pos:line="94" pos:column="53"/></operator> <name><name pos:line="94" pos:column="48">rv<pos:position pos:line="94" pos:column="50"/></name><operator pos:line="94" pos:column="50">.<pos:position pos:line="94" pos:column="51"/></operator><name pos:line="94" pos:column="51">value<pos:position pos:line="94" pos:column="56"/></name><operator pos:line="94" pos:column="56">.<pos:position pos:line="94" pos:column="57"/></operator><name pos:line="94" pos:column="57">string<pos:position pos:line="94" pos:column="63"/></name></name> <operator pos:line="94" pos:column="64">&lt;&lt;<pos:position pos:line="94" pos:column="72"/></operator> <literal type="string" pos:line="94" pos:column="67">"'"<pos:position pos:line="94" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></else></if>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if></elseif> <elseif pos:line="96" pos:column="7">else <if pos:line="96" pos:column="12">if <condition pos:line="96" pos:column="15">(<expr><literal type="char" pos:line="96" pos:column="16">'('<pos:position pos:line="96" pos:column="19"/></literal> <operator pos:line="96" pos:column="20">==<pos:position pos:line="96" pos:column="22"/></operator> <operator pos:line="96" pos:column="23">*<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="24">s<pos:position pos:line="96" pos:column="25"/></name></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26"> <block pos:line="96" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">debugs<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">(<argument><expr><literal type="number" pos:line="97" pos:column="16">86<pos:position pos:line="97" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="20">6<pos:position pos:line="97" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="23">"found subexpr start"<pos:position pos:line="97" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="98" pos:column="9">*<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">endptr<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <name pos:line="98" pos:column="19">s<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">+<pos:position pos:line="98" pos:column="22"/></operator> <literal type="number" pos:line="98" pos:column="23">1<pos:position pos:line="98" pos:column="24"/></literal></expr>;<pos:position pos:line="98" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">rv<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">.<pos:position pos:line="99" pos:column="12"/></operator><name pos:line="99" pos:column="12">valuetype<pos:position pos:line="99" pos:column="21"/></name></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <name pos:line="99" pos:column="24">ESI_EXPR_START<pos:position pos:line="99" pos:column="38"/></name></expr>;<pos:position pos:line="99" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="100" pos:column="9">rv<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">.<pos:position pos:line="100" pos:column="12"/></operator><name pos:line="100" pos:column="12">precedence<pos:position pos:line="100" pos:column="22"/></name></name> <operator pos:line="100" pos:column="23">=<pos:position pos:line="100" pos:column="24"/></operator> <literal type="number" pos:line="100" pos:column="25">5<pos:position pos:line="100" pos:column="26"/></literal></expr>;<pos:position pos:line="100" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="101" pos:column="9">rv<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">.<pos:position pos:line="101" pos:column="12"/></operator><name pos:line="101" pos:column="12">eval<pos:position pos:line="101" pos:column="16"/></name></name> <operator pos:line="101" pos:column="17">=<pos:position pos:line="101" pos:column="18"/></operator> <name pos:line="101" pos:column="19">evalstartexpr<pos:position pos:line="101" pos:column="32"/></name></expr>;<pos:position pos:line="101" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if></elseif> <elseif pos:line="102" pos:column="7">else <if pos:line="102" pos:column="12">if <condition pos:line="102" pos:column="15">(<expr><literal type="char" pos:line="102" pos:column="16">')'<pos:position pos:line="102" pos:column="19"/></literal> <operator pos:line="102" pos:column="20">==<pos:position pos:line="102" pos:column="22"/></operator> <operator pos:line="102" pos:column="23">*<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="24">s<pos:position pos:line="102" pos:column="25"/></name></expr>)<pos:position pos:line="102" pos:column="26"/></condition><then pos:line="102" pos:column="26"> <block pos:line="102" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">debugs<pos:position pos:line="103" pos:column="15"/></name><argument_list pos:line="103" pos:column="15">(<argument><expr><literal type="number" pos:line="103" pos:column="16">86<pos:position pos:line="103" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="20">6<pos:position pos:line="103" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="23">"found subexpr end"<pos:position pos:line="103" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="104" pos:column="9">*<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">endptr<pos:position pos:line="104" pos:column="16"/></name> <operator pos:line="104" pos:column="17">=<pos:position pos:line="104" pos:column="18"/></operator> <name pos:line="104" pos:column="19">s<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">+<pos:position pos:line="104" pos:column="22"/></operator> <literal type="number" pos:line="104" pos:column="23">1<pos:position pos:line="104" pos:column="24"/></literal></expr>;<pos:position pos:line="104" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">rv<pos:position pos:line="105" pos:column="11"/></name><operator pos:line="105" pos:column="11">.<pos:position pos:line="105" pos:column="12"/></operator><name pos:line="105" pos:column="12">valuetype<pos:position pos:line="105" pos:column="21"/></name></name> <operator pos:line="105" pos:column="22">=<pos:position pos:line="105" pos:column="23"/></operator> <name pos:line="105" pos:column="24">ESI_EXPR_END<pos:position pos:line="105" pos:column="36"/></name></expr>;<pos:position pos:line="105" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">rv<pos:position pos:line="106" pos:column="11"/></name><operator pos:line="106" pos:column="11">.<pos:position pos:line="106" pos:column="12"/></operator><name pos:line="106" pos:column="12">precedence<pos:position pos:line="106" pos:column="22"/></name></name> <operator pos:line="106" pos:column="23">=<pos:position pos:line="106" pos:column="24"/></operator> <literal type="number" pos:line="106" pos:column="25">0<pos:position pos:line="106" pos:column="26"/></literal></expr>;<pos:position pos:line="106" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="107" pos:column="9">rv<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">.<pos:position pos:line="107" pos:column="12"/></operator><name pos:line="107" pos:column="12">eval<pos:position pos:line="107" pos:column="16"/></name></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <name pos:line="107" pos:column="19">evalendexpr<pos:position pos:line="107" pos:column="30"/></name></expr>;<pos:position pos:line="107" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if></elseif> <elseif pos:line="108" pos:column="7">else <if pos:line="108" pos:column="12">if <condition pos:line="108" pos:column="15">(<expr><literal type="char" pos:line="108" pos:column="16">'&amp;'<pos:position pos:line="108" pos:column="23"/></literal> <operator pos:line="108" pos:column="20">==<pos:position pos:line="108" pos:column="22"/></operator> <operator pos:line="108" pos:column="23">*<pos:position pos:line="108" pos:column="24"/></operator><name pos:line="108" pos:column="24">s<pos:position pos:line="108" pos:column="25"/></name></expr>)<pos:position pos:line="108" pos:column="26"/></condition><then pos:line="108" pos:column="26"> <block pos:line="108" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">debugs<pos:position pos:line="109" pos:column="15"/></name><argument_list pos:line="109" pos:column="15">(<argument><expr><literal type="number" pos:line="109" pos:column="16">86<pos:position pos:line="109" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="20">6<pos:position pos:line="109" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="23">"found AND"<pos:position pos:line="109" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="110" pos:column="9">*<pos:position pos:line="110" pos:column="10"/></operator><name pos:line="110" pos:column="10">endptr<pos:position pos:line="110" pos:column="16"/></name> <operator pos:line="110" pos:column="17">=<pos:position pos:line="110" pos:column="18"/></operator> <name pos:line="110" pos:column="19">s<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">+<pos:position pos:line="110" pos:column="22"/></operator> <literal type="number" pos:line="110" pos:column="23">1<pos:position pos:line="110" pos:column="24"/></literal></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="111" pos:column="9">rv<pos:position pos:line="111" pos:column="11"/></name><operator pos:line="111" pos:column="11">.<pos:position pos:line="111" pos:column="12"/></operator><name pos:line="111" pos:column="12">valuetype<pos:position pos:line="111" pos:column="21"/></name></name> <operator pos:line="111" pos:column="22">=<pos:position pos:line="111" pos:column="23"/></operator> <name pos:line="111" pos:column="24">ESI_EXPR_AND<pos:position pos:line="111" pos:column="36"/></name></expr>;<pos:position pos:line="111" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">rv<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">.<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">precedence<pos:position pos:line="112" pos:column="22"/></name></name> <operator pos:line="112" pos:column="23">=<pos:position pos:line="112" pos:column="24"/></operator> <literal type="number" pos:line="112" pos:column="25">3<pos:position pos:line="112" pos:column="26"/></literal></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="113" pos:column="9">rv<pos:position pos:line="113" pos:column="11"/></name><operator pos:line="113" pos:column="11">.<pos:position pos:line="113" pos:column="12"/></operator><name pos:line="113" pos:column="12">eval<pos:position pos:line="113" pos:column="16"/></name></name> <operator pos:line="113" pos:column="17">=<pos:position pos:line="113" pos:column="18"/></operator> <name pos:line="113" pos:column="19">evaland<pos:position pos:line="113" pos:column="26"/></name></expr>;<pos:position pos:line="113" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if></elseif> <elseif pos:line="114" pos:column="7">else <if pos:line="114" pos:column="12">if <condition pos:line="114" pos:column="15">(<expr><literal type="char" pos:line="114" pos:column="16">'|'<pos:position pos:line="114" pos:column="19"/></literal> <operator pos:line="114" pos:column="20">==<pos:position pos:line="114" pos:column="22"/></operator> <operator pos:line="114" pos:column="23">*<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="24">s<pos:position pos:line="114" pos:column="25"/></name></expr>)<pos:position pos:line="114" pos:column="26"/></condition><then pos:line="114" pos:column="26"> <block pos:line="114" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">debugs<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">(<argument><expr><literal type="number" pos:line="115" pos:column="16">86<pos:position pos:line="115" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="20">6<pos:position pos:line="115" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="23">"found OR"<pos:position pos:line="115" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="116" pos:column="9">*<pos:position pos:line="116" pos:column="10"/></operator><name pos:line="116" pos:column="10">endptr<pos:position pos:line="116" pos:column="16"/></name> <operator pos:line="116" pos:column="17">=<pos:position pos:line="116" pos:column="18"/></operator> <name pos:line="116" pos:column="19">s<pos:position pos:line="116" pos:column="20"/></name> <operator pos:line="116" pos:column="21">+<pos:position pos:line="116" pos:column="22"/></operator> <literal type="number" pos:line="116" pos:column="23">1<pos:position pos:line="116" pos:column="24"/></literal></expr>;<pos:position pos:line="116" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="117" pos:column="9">rv<pos:position pos:line="117" pos:column="11"/></name><operator pos:line="117" pos:column="11">.<pos:position pos:line="117" pos:column="12"/></operator><name pos:line="117" pos:column="12">valuetype<pos:position pos:line="117" pos:column="21"/></name></name> <operator pos:line="117" pos:column="22">=<pos:position pos:line="117" pos:column="23"/></operator> <name pos:line="117" pos:column="24">ESI_EXPR_OR<pos:position pos:line="117" pos:column="35"/></name></expr>;<pos:position pos:line="117" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">rv<pos:position pos:line="118" pos:column="11"/></name><operator pos:line="118" pos:column="11">.<pos:position pos:line="118" pos:column="12"/></operator><name pos:line="118" pos:column="12">precedence<pos:position pos:line="118" pos:column="22"/></name></name> <operator pos:line="118" pos:column="23">=<pos:position pos:line="118" pos:column="24"/></operator> <literal type="number" pos:line="118" pos:column="25">2<pos:position pos:line="118" pos:column="26"/></literal></expr>;<pos:position pos:line="118" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="119" pos:column="9">rv<pos:position pos:line="119" pos:column="11"/></name><operator pos:line="119" pos:column="11">.<pos:position pos:line="119" pos:column="12"/></operator><name pos:line="119" pos:column="12">eval<pos:position pos:line="119" pos:column="16"/></name></name> <operator pos:line="119" pos:column="17">=<pos:position pos:line="119" pos:column="18"/></operator> <name pos:line="119" pos:column="19">evalor<pos:position pos:line="119" pos:column="25"/></name></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if></elseif> <elseif pos:line="120" pos:column="7">else <if pos:line="120" pos:column="12">if <condition pos:line="120" pos:column="15">(<expr><literal type="char" pos:line="120" pos:column="16">'='<pos:position pos:line="120" pos:column="19"/></literal> <operator pos:line="120" pos:column="20">==<pos:position pos:line="120" pos:column="22"/></operator> <operator pos:line="120" pos:column="23">*<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="24">s<pos:position pos:line="120" pos:column="25"/></name></expr>)<pos:position pos:line="120" pos:column="26"/></condition><then pos:line="120" pos:column="26"> <block pos:line="120" pos:column="27">{
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><literal type="char" pos:line="121" pos:column="13">'='<pos:position pos:line="121" pos:column="16"/></literal> <operator pos:line="121" pos:column="17">==<pos:position pos:line="121" pos:column="19"/></operator> <operator pos:line="121" pos:column="20">*<pos:position pos:line="121" pos:column="21"/></operator><operator pos:line="121" pos:column="21">(<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="22">s<pos:position pos:line="121" pos:column="23"/></name> <operator pos:line="121" pos:column="24">+<pos:position pos:line="121" pos:column="25"/></operator> <literal type="number" pos:line="121" pos:column="26">1<pos:position pos:line="121" pos:column="27"/></literal><operator pos:line="121" pos:column="27">)<pos:position pos:line="121" pos:column="28"/></operator></expr>)<pos:position pos:line="121" pos:column="29"/></condition><then pos:line="121" pos:column="29"> <block pos:line="121" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="122" pos:column="13">debugs<pos:position pos:line="122" pos:column="19"/></name><argument_list pos:line="122" pos:column="19">(<argument><expr><literal type="number" pos:line="122" pos:column="20">86<pos:position pos:line="122" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="24">6<pos:position pos:line="122" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="27">"found equals"<pos:position pos:line="122" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="123" pos:column="13">*<pos:position pos:line="123" pos:column="14"/></operator><name pos:line="123" pos:column="14">endptr<pos:position pos:line="123" pos:column="20"/></name> <operator pos:line="123" pos:column="21">=<pos:position pos:line="123" pos:column="22"/></operator> <name pos:line="123" pos:column="23">s<pos:position pos:line="123" pos:column="24"/></name> <operator pos:line="123" pos:column="25">+<pos:position pos:line="123" pos:column="26"/></operator> <literal type="number" pos:line="123" pos:column="27">2<pos:position pos:line="123" pos:column="28"/></literal></expr>;<pos:position pos:line="123" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="124" pos:column="13">rv<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">.<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">valuetype<pos:position pos:line="124" pos:column="25"/></name></name> <operator pos:line="124" pos:column="26">=<pos:position pos:line="124" pos:column="27"/></operator> <name pos:line="124" pos:column="28">ESI_EXPR_EQ<pos:position pos:line="124" pos:column="39"/></name></expr>;<pos:position pos:line="124" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="125" pos:column="13">rv<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">.<pos:position pos:line="125" pos:column="16"/></operator><name pos:line="125" pos:column="16">precedence<pos:position pos:line="125" pos:column="26"/></name></name> <operator pos:line="125" pos:column="27">=<pos:position pos:line="125" pos:column="28"/></operator> <literal type="number" pos:line="125" pos:column="29">5<pos:position pos:line="125" pos:column="30"/></literal></expr>;<pos:position pos:line="125" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">rv<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">.<pos:position pos:line="126" pos:column="16"/></operator><name pos:line="126" pos:column="16">eval<pos:position pos:line="126" pos:column="20"/></name></name> <operator pos:line="126" pos:column="21">=<pos:position pos:line="126" pos:column="22"/></operator> <name pos:line="126" pos:column="23">evalequals<pos:position pos:line="126" pos:column="33"/></name></expr>;<pos:position pos:line="126" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="127" pos:column="10"/></block></then> <else pos:line="127" pos:column="11">else <block pos:line="127" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="128" pos:column="13">debugs<pos:position pos:line="128" pos:column="19"/></name><argument_list pos:line="128" pos:column="19">(<argument><expr><literal type="number" pos:line="128" pos:column="20">86<pos:position pos:line="128" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="24">DBG_IMPORTANT<pos:position pos:line="128" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="39">"invalid expr '"<pos:position pos:line="128" pos:column="55"/></literal> <operator pos:line="128" pos:column="56">&lt;&lt;<pos:position pos:line="128" pos:column="64"/></operator> <name pos:line="128" pos:column="59">s<pos:position pos:line="128" pos:column="60"/></name> <operator pos:line="128" pos:column="61">&lt;&lt;<pos:position pos:line="128" pos:column="69"/></operator> <literal type="string" pos:line="128" pos:column="64">"'"<pos:position pos:line="128" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="129" pos:column="13">*<pos:position pos:line="129" pos:column="14"/></operator><name pos:line="129" pos:column="14">endptr<pos:position pos:line="129" pos:column="20"/></name> <operator pos:line="129" pos:column="21">=<pos:position pos:line="129" pos:column="22"/></operator> <name pos:line="129" pos:column="23">origs<pos:position pos:line="129" pos:column="28"/></name></expr>;<pos:position pos:line="129" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="130" pos:column="10"/></block></else></if>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if></elseif> <elseif pos:line="131" pos:column="7">else <if pos:line="131" pos:column="12">if <condition pos:line="131" pos:column="15">(<expr><literal type="char" pos:line="131" pos:column="16">'&lt;'<pos:position pos:line="131" pos:column="22"/></literal> <operator pos:line="131" pos:column="20">==<pos:position pos:line="131" pos:column="22"/></operator> <operator pos:line="131" pos:column="23">*<pos:position pos:line="131" pos:column="24"/></operator><name pos:line="131" pos:column="24">s<pos:position pos:line="131" pos:column="25"/></name></expr>)<pos:position pos:line="131" pos:column="26"/></condition><then pos:line="131" pos:column="26"> <block pos:line="131" pos:column="27">{
        <if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><literal type="char" pos:line="132" pos:column="13">'='<pos:position pos:line="132" pos:column="16"/></literal> <operator pos:line="132" pos:column="17">==<pos:position pos:line="132" pos:column="19"/></operator> <operator pos:line="132" pos:column="20">*<pos:position pos:line="132" pos:column="21"/></operator><operator pos:line="132" pos:column="21">(<pos:position pos:line="132" pos:column="22"/></operator><name pos:line="132" pos:column="22">s<pos:position pos:line="132" pos:column="23"/></name> <operator pos:line="132" pos:column="24">+<pos:position pos:line="132" pos:column="25"/></operator> <literal type="number" pos:line="132" pos:column="26">1<pos:position pos:line="132" pos:column="27"/></literal><operator pos:line="132" pos:column="27">)<pos:position pos:line="132" pos:column="28"/></operator></expr>)<pos:position pos:line="132" pos:column="29"/></condition><then pos:line="132" pos:column="29"> <block pos:line="132" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">debugs<pos:position pos:line="133" pos:column="19"/></name><argument_list pos:line="133" pos:column="19">(<argument><expr><literal type="number" pos:line="133" pos:column="20">86<pos:position pos:line="133" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="24">6<pos:position pos:line="133" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="27">"found less-equals"<pos:position pos:line="133" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="134" pos:column="13">*<pos:position pos:line="134" pos:column="14"/></operator><name pos:line="134" pos:column="14">endptr<pos:position pos:line="134" pos:column="20"/></name> <operator pos:line="134" pos:column="21">=<pos:position pos:line="134" pos:column="22"/></operator> <name pos:line="134" pos:column="23">s<pos:position pos:line="134" pos:column="24"/></name> <operator pos:line="134" pos:column="25">+<pos:position pos:line="134" pos:column="26"/></operator> <literal type="number" pos:line="134" pos:column="27">2<pos:position pos:line="134" pos:column="28"/></literal></expr>;<pos:position pos:line="134" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="135" pos:column="13">rv<pos:position pos:line="135" pos:column="15"/></name><operator pos:line="135" pos:column="15">.<pos:position pos:line="135" pos:column="16"/></operator><name pos:line="135" pos:column="16">valuetype<pos:position pos:line="135" pos:column="25"/></name></name> <operator pos:line="135" pos:column="26">=<pos:position pos:line="135" pos:column="27"/></operator> <name pos:line="135" pos:column="28">ESI_EXPR_LESSEQ<pos:position pos:line="135" pos:column="43"/></name></expr>;<pos:position pos:line="135" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="136" pos:column="13">rv<pos:position pos:line="136" pos:column="15"/></name><operator pos:line="136" pos:column="15">.<pos:position pos:line="136" pos:column="16"/></operator><name pos:line="136" pos:column="16">precedence<pos:position pos:line="136" pos:column="26"/></name></name> <operator pos:line="136" pos:column="27">=<pos:position pos:line="136" pos:column="28"/></operator> <literal type="number" pos:line="136" pos:column="29">5<pos:position pos:line="136" pos:column="30"/></literal></expr>;<pos:position pos:line="136" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="137" pos:column="13">rv<pos:position pos:line="137" pos:column="15"/></name><operator pos:line="137" pos:column="15">.<pos:position pos:line="137" pos:column="16"/></operator><name pos:line="137" pos:column="16">eval<pos:position pos:line="137" pos:column="20"/></name></name> <operator pos:line="137" pos:column="21">=<pos:position pos:line="137" pos:column="22"/></operator> <name pos:line="137" pos:column="23">evallesseq<pos:position pos:line="137" pos:column="33"/></name></expr>;<pos:position pos:line="137" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="138" pos:column="10"/></block></then> <else pos:line="138" pos:column="11">else <block pos:line="138" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="139" pos:column="13">debugs<pos:position pos:line="139" pos:column="19"/></name><argument_list pos:line="139" pos:column="19">(<argument><expr><literal type="number" pos:line="139" pos:column="20">86<pos:position pos:line="139" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="24">6<pos:position pos:line="139" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="27">"found less than"<pos:position pos:line="139" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="140" pos:column="13">*<pos:position pos:line="140" pos:column="14"/></operator><name pos:line="140" pos:column="14">endptr<pos:position pos:line="140" pos:column="20"/></name> <operator pos:line="140" pos:column="21">=<pos:position pos:line="140" pos:column="22"/></operator> <name pos:line="140" pos:column="23">s<pos:position pos:line="140" pos:column="24"/></name> <operator pos:line="140" pos:column="25">+<pos:position pos:line="140" pos:column="26"/></operator> <literal type="number" pos:line="140" pos:column="27">1<pos:position pos:line="140" pos:column="28"/></literal></expr>;<pos:position pos:line="140" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="141" pos:column="13">rv<pos:position pos:line="141" pos:column="15"/></name><operator pos:line="141" pos:column="15">.<pos:position pos:line="141" pos:column="16"/></operator><name pos:line="141" pos:column="16">valuetype<pos:position pos:line="141" pos:column="25"/></name></name> <operator pos:line="141" pos:column="26">=<pos:position pos:line="141" pos:column="27"/></operator> <name pos:line="141" pos:column="28">ESI_EXPR_LESS<pos:position pos:line="141" pos:column="41"/></name></expr>;<pos:position pos:line="141" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="142" pos:column="13">rv<pos:position pos:line="142" pos:column="15"/></name><operator pos:line="142" pos:column="15">.<pos:position pos:line="142" pos:column="16"/></operator><name pos:line="142" pos:column="16">precedence<pos:position pos:line="142" pos:column="26"/></name></name> <operator pos:line="142" pos:column="27">=<pos:position pos:line="142" pos:column="28"/></operator> <literal type="number" pos:line="142" pos:column="29">5<pos:position pos:line="142" pos:column="30"/></literal></expr>;<pos:position pos:line="142" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="143" pos:column="13">rv<pos:position pos:line="143" pos:column="15"/></name><operator pos:line="143" pos:column="15">.<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="16">eval<pos:position pos:line="143" pos:column="20"/></name></name> <operator pos:line="143" pos:column="21">=<pos:position pos:line="143" pos:column="22"/></operator> <name pos:line="143" pos:column="23">evallessthan<pos:position pos:line="143" pos:column="35"/></name></expr>;<pos:position pos:line="143" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="144" pos:column="10"/></block></else></if>
    }<pos:position pos:line="145" pos:column="6"/></block></then></if></elseif> <elseif pos:line="145" pos:column="7">else <if pos:line="145" pos:column="12">if <condition pos:line="145" pos:column="15">(<expr><literal type="char" pos:line="145" pos:column="16">'&gt;'<pos:position pos:line="145" pos:column="22"/></literal> <operator pos:line="145" pos:column="20">==<pos:position pos:line="145" pos:column="22"/></operator> <operator pos:line="145" pos:column="23">*<pos:position pos:line="145" pos:column="24"/></operator><name pos:line="145" pos:column="24">s<pos:position pos:line="145" pos:column="25"/></name></expr>)<pos:position pos:line="145" pos:column="26"/></condition><then pos:line="145" pos:column="26"> <block pos:line="145" pos:column="27">{
        <if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><literal type="char" pos:line="146" pos:column="13">'='<pos:position pos:line="146" pos:column="16"/></literal> <operator pos:line="146" pos:column="17">==<pos:position pos:line="146" pos:column="19"/></operator> <operator pos:line="146" pos:column="20">*<pos:position pos:line="146" pos:column="21"/></operator><operator pos:line="146" pos:column="21">(<pos:position pos:line="146" pos:column="22"/></operator><name pos:line="146" pos:column="22">s<pos:position pos:line="146" pos:column="23"/></name> <operator pos:line="146" pos:column="24">+<pos:position pos:line="146" pos:column="25"/></operator> <literal type="number" pos:line="146" pos:column="26">1<pos:position pos:line="146" pos:column="27"/></literal><operator pos:line="146" pos:column="27">)<pos:position pos:line="146" pos:column="28"/></operator></expr>)<pos:position pos:line="146" pos:column="29"/></condition><then pos:line="146" pos:column="29"> <block pos:line="146" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="147" pos:column="13">debugs<pos:position pos:line="147" pos:column="19"/></name><argument_list pos:line="147" pos:column="19">(<argument><expr><literal type="number" pos:line="147" pos:column="20">86<pos:position pos:line="147" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="24">6<pos:position pos:line="147" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="27">"found more-equals"<pos:position pos:line="147" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="148" pos:column="13">*<pos:position pos:line="148" pos:column="14"/></operator><name pos:line="148" pos:column="14">endptr<pos:position pos:line="148" pos:column="20"/></name> <operator pos:line="148" pos:column="21">=<pos:position pos:line="148" pos:column="22"/></operator> <name pos:line="148" pos:column="23">s<pos:position pos:line="148" pos:column="24"/></name> <operator pos:line="148" pos:column="25">+<pos:position pos:line="148" pos:column="26"/></operator> <literal type="number" pos:line="148" pos:column="27">2<pos:position pos:line="148" pos:column="28"/></literal></expr>;<pos:position pos:line="148" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="149" pos:column="13">rv<pos:position pos:line="149" pos:column="15"/></name><operator pos:line="149" pos:column="15">.<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="16">valuetype<pos:position pos:line="149" pos:column="25"/></name></name> <operator pos:line="149" pos:column="26">=<pos:position pos:line="149" pos:column="27"/></operator> <name pos:line="149" pos:column="28">ESI_EXPR_MOREEQ<pos:position pos:line="149" pos:column="43"/></name></expr>;<pos:position pos:line="149" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="150" pos:column="13">rv<pos:position pos:line="150" pos:column="15"/></name><operator pos:line="150" pos:column="15">.<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="16">precedence<pos:position pos:line="150" pos:column="26"/></name></name> <operator pos:line="150" pos:column="27">=<pos:position pos:line="150" pos:column="28"/></operator> <literal type="number" pos:line="150" pos:column="29">5<pos:position pos:line="150" pos:column="30"/></literal></expr>;<pos:position pos:line="150" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="151" pos:column="13">rv<pos:position pos:line="151" pos:column="15"/></name><operator pos:line="151" pos:column="15">.<pos:position pos:line="151" pos:column="16"/></operator><name pos:line="151" pos:column="16">eval<pos:position pos:line="151" pos:column="20"/></name></name> <operator pos:line="151" pos:column="21">=<pos:position pos:line="151" pos:column="22"/></operator> <name pos:line="151" pos:column="23">evalmoreeq<pos:position pos:line="151" pos:column="33"/></name></expr>;<pos:position pos:line="151" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="152" pos:column="10"/></block></then> <else pos:line="152" pos:column="11">else <block pos:line="152" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">debugs<pos:position pos:line="153" pos:column="19"/></name><argument_list pos:line="153" pos:column="19">(<argument><expr><literal type="number" pos:line="153" pos:column="20">86<pos:position pos:line="153" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="24">6<pos:position pos:line="153" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="27">"found more than"<pos:position pos:line="153" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="154" pos:column="13">*<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="14">endptr<pos:position pos:line="154" pos:column="20"/></name> <operator pos:line="154" pos:column="21">=<pos:position pos:line="154" pos:column="22"/></operator> <name pos:line="154" pos:column="23">s<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">+<pos:position pos:line="154" pos:column="26"/></operator> <literal type="number" pos:line="154" pos:column="27">1<pos:position pos:line="154" pos:column="28"/></literal></expr>;<pos:position pos:line="154" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="155" pos:column="13">rv<pos:position pos:line="155" pos:column="15"/></name><operator pos:line="155" pos:column="15">.<pos:position pos:line="155" pos:column="16"/></operator><name pos:line="155" pos:column="16">valuetype<pos:position pos:line="155" pos:column="25"/></name></name> <operator pos:line="155" pos:column="26">=<pos:position pos:line="155" pos:column="27"/></operator> <name pos:line="155" pos:column="28">ESI_EXPR_MORE<pos:position pos:line="155" pos:column="41"/></name></expr>;<pos:position pos:line="155" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="156" pos:column="13">rv<pos:position pos:line="156" pos:column="15"/></name><operator pos:line="156" pos:column="15">.<pos:position pos:line="156" pos:column="16"/></operator><name pos:line="156" pos:column="16">precedence<pos:position pos:line="156" pos:column="26"/></name></name> <operator pos:line="156" pos:column="27">=<pos:position pos:line="156" pos:column="28"/></operator> <literal type="number" pos:line="156" pos:column="29">5<pos:position pos:line="156" pos:column="30"/></literal></expr>;<pos:position pos:line="156" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="157" pos:column="13">rv<pos:position pos:line="157" pos:column="15"/></name><operator pos:line="157" pos:column="15">.<pos:position pos:line="157" pos:column="16"/></operator><name pos:line="157" pos:column="16">eval<pos:position pos:line="157" pos:column="20"/></name></name> <operator pos:line="157" pos:column="21">=<pos:position pos:line="157" pos:column="22"/></operator> <name pos:line="157" pos:column="23">evalmorethan<pos:position pos:line="157" pos:column="35"/></name></expr>;<pos:position pos:line="157" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="158" pos:column="10"/></block></else></if>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if></elseif> <elseif pos:line="159" pos:column="7">else <if pos:line="159" pos:column="12">if <condition pos:line="159" pos:column="15">(<expr><operator pos:line="159" pos:column="16">!<pos:position pos:line="159" pos:column="17"/></operator><call><name pos:line="159" pos:column="17">strncmp<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><name pos:line="159" pos:column="25">s<pos:position pos:line="159" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="28">"false"<pos:position pos:line="159" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="37">5<pos:position pos:line="159" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="40"/></condition><then pos:line="159" pos:column="40"> <block pos:line="159" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="160" pos:column="9">debugs<pos:position pos:line="160" pos:column="15"/></name><argument_list pos:line="160" pos:column="15">(<argument><expr><literal type="number" pos:line="160" pos:column="16">86<pos:position pos:line="160" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="20">5<pos:position pos:line="160" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="23">"getsymbol: found variable result 'false'"<pos:position pos:line="160" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="161" pos:column="9">*<pos:position pos:line="161" pos:column="10"/></operator><name pos:line="161" pos:column="10">endptr<pos:position pos:line="161" pos:column="16"/></name> <operator pos:line="161" pos:column="17">=<pos:position pos:line="161" pos:column="18"/></operator> <name pos:line="161" pos:column="19">s<pos:position pos:line="161" pos:column="20"/></name> <operator pos:line="161" pos:column="21">+<pos:position pos:line="161" pos:column="22"/></operator> <literal type="number" pos:line="161" pos:column="23">5<pos:position pos:line="161" pos:column="24"/></literal></expr>;<pos:position pos:line="161" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="162" pos:column="9">rv<pos:position pos:line="162" pos:column="11"/></name><operator pos:line="162" pos:column="11">.<pos:position pos:line="162" pos:column="12"/></operator><name pos:line="162" pos:column="12">valuetype<pos:position pos:line="162" pos:column="21"/></name></name> <operator pos:line="162" pos:column="22">=<pos:position pos:line="162" pos:column="23"/></operator> <name pos:line="162" pos:column="24">ESI_EXPR_EXPR<pos:position pos:line="162" pos:column="37"/></name></expr>;<pos:position pos:line="162" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="163" pos:column="9">rv<pos:position pos:line="163" pos:column="11"/></name><operator pos:line="163" pos:column="11">.<pos:position pos:line="163" pos:column="12"/></operator><name pos:line="163" pos:column="12">valuestored<pos:position pos:line="163" pos:column="23"/></name></name> <operator pos:line="163" pos:column="24">=<pos:position pos:line="163" pos:column="25"/></operator> <name pos:line="163" pos:column="26">ESI_LITERAL_BOOL<pos:position pos:line="163" pos:column="42"/></name></expr>;<pos:position pos:line="163" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="164" pos:column="9">rv<pos:position pos:line="164" pos:column="11"/></name><operator pos:line="164" pos:column="11">.<pos:position pos:line="164" pos:column="12"/></operator><name pos:line="164" pos:column="12">value<pos:position pos:line="164" pos:column="17"/></name><operator pos:line="164" pos:column="17">.<pos:position pos:line="164" pos:column="18"/></operator><name pos:line="164" pos:column="18">integral<pos:position pos:line="164" pos:column="26"/></name></name> <operator pos:line="164" pos:column="27">=<pos:position pos:line="164" pos:column="28"/></operator> <literal type="number" pos:line="164" pos:column="29">0<pos:position pos:line="164" pos:column="30"/></literal></expr>;<pos:position pos:line="164" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="165" pos:column="9">rv<pos:position pos:line="165" pos:column="11"/></name><operator pos:line="165" pos:column="11">.<pos:position pos:line="165" pos:column="12"/></operator><name pos:line="165" pos:column="12">precedence<pos:position pos:line="165" pos:column="22"/></name></name> <operator pos:line="165" pos:column="23">=<pos:position pos:line="165" pos:column="24"/></operator> <literal type="number" pos:line="165" pos:column="25">1<pos:position pos:line="165" pos:column="26"/></literal></expr>;<pos:position pos:line="165" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="166" pos:column="9">rv<pos:position pos:line="166" pos:column="11"/></name><operator pos:line="166" pos:column="11">.<pos:position pos:line="166" pos:column="12"/></operator><name pos:line="166" pos:column="12">eval<pos:position pos:line="166" pos:column="16"/></name></name> <operator pos:line="166" pos:column="17">=<pos:position pos:line="166" pos:column="18"/></operator> <name pos:line="166" pos:column="19">evalexpr<pos:position pos:line="166" pos:column="27"/></name></expr>;<pos:position pos:line="166" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block></then></if></elseif> <elseif pos:line="167" pos:column="7">else <if pos:line="167" pos:column="12">if <condition pos:line="167" pos:column="15">(<expr><operator pos:line="167" pos:column="16">!<pos:position pos:line="167" pos:column="17"/></operator><call><name pos:line="167" pos:column="17">strncmp<pos:position pos:line="167" pos:column="24"/></name><argument_list pos:line="167" pos:column="24">(<argument><expr><name pos:line="167" pos:column="25">s<pos:position pos:line="167" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="28">"true"<pos:position pos:line="167" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="36">4<pos:position pos:line="167" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="39"/></condition><then pos:line="167" pos:column="39"> <block pos:line="167" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">debugs<pos:position pos:line="168" pos:column="15"/></name><argument_list pos:line="168" pos:column="15">(<argument><expr><literal type="number" pos:line="168" pos:column="16">86<pos:position pos:line="168" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="20">5<pos:position pos:line="168" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="23">"getsymbol: found variable result 'true'"<pos:position pos:line="168" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="169" pos:column="9">*<pos:position pos:line="169" pos:column="10"/></operator><name pos:line="169" pos:column="10">endptr<pos:position pos:line="169" pos:column="16"/></name> <operator pos:line="169" pos:column="17">=<pos:position pos:line="169" pos:column="18"/></operator> <name pos:line="169" pos:column="19">s<pos:position pos:line="169" pos:column="20"/></name> <operator pos:line="169" pos:column="21">+<pos:position pos:line="169" pos:column="22"/></operator> <literal type="number" pos:line="169" pos:column="23">4<pos:position pos:line="169" pos:column="24"/></literal></expr>;<pos:position pos:line="169" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="170" pos:column="9">rv<pos:position pos:line="170" pos:column="11"/></name><operator pos:line="170" pos:column="11">.<pos:position pos:line="170" pos:column="12"/></operator><name pos:line="170" pos:column="12">valuetype<pos:position pos:line="170" pos:column="21"/></name></name> <operator pos:line="170" pos:column="22">=<pos:position pos:line="170" pos:column="23"/></operator> <name pos:line="170" pos:column="24">ESI_EXPR_EXPR<pos:position pos:line="170" pos:column="37"/></name></expr>;<pos:position pos:line="170" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="171" pos:column="9">rv<pos:position pos:line="171" pos:column="11"/></name><operator pos:line="171" pos:column="11">.<pos:position pos:line="171" pos:column="12"/></operator><name pos:line="171" pos:column="12">valuestored<pos:position pos:line="171" pos:column="23"/></name></name> <operator pos:line="171" pos:column="24">=<pos:position pos:line="171" pos:column="25"/></operator> <name pos:line="171" pos:column="26">ESI_LITERAL_BOOL<pos:position pos:line="171" pos:column="42"/></name></expr>;<pos:position pos:line="171" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="172" pos:column="9">rv<pos:position pos:line="172" pos:column="11"/></name><operator pos:line="172" pos:column="11">.<pos:position pos:line="172" pos:column="12"/></operator><name pos:line="172" pos:column="12">value<pos:position pos:line="172" pos:column="17"/></name><operator pos:line="172" pos:column="17">.<pos:position pos:line="172" pos:column="18"/></operator><name pos:line="172" pos:column="18">integral<pos:position pos:line="172" pos:column="26"/></name></name> <operator pos:line="172" pos:column="27">=<pos:position pos:line="172" pos:column="28"/></operator> <literal type="number" pos:line="172" pos:column="29">1<pos:position pos:line="172" pos:column="30"/></literal></expr>;<pos:position pos:line="172" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="173" pos:column="9">rv<pos:position pos:line="173" pos:column="11"/></name><operator pos:line="173" pos:column="11">.<pos:position pos:line="173" pos:column="12"/></operator><name pos:line="173" pos:column="12">precedence<pos:position pos:line="173" pos:column="22"/></name></name> <operator pos:line="173" pos:column="23">=<pos:position pos:line="173" pos:column="24"/></operator> <literal type="number" pos:line="173" pos:column="25">1<pos:position pos:line="173" pos:column="26"/></literal></expr>;<pos:position pos:line="173" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">rv<pos:position pos:line="174" pos:column="11"/></name><operator pos:line="174" pos:column="11">.<pos:position pos:line="174" pos:column="12"/></operator><name pos:line="174" pos:column="12">eval<pos:position pos:line="174" pos:column="16"/></name></name> <operator pos:line="174" pos:column="17">=<pos:position pos:line="174" pos:column="18"/></operator> <name pos:line="174" pos:column="19">evalexpr<pos:position pos:line="174" pos:column="27"/></name></expr>;<pos:position pos:line="174" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="175" pos:column="6"/></block></then></if></elseif> <else pos:line="175" pos:column="7">else <block pos:line="175" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">debugs<pos:position pos:line="176" pos:column="15"/></name><argument_list pos:line="176" pos:column="15">(<argument><expr><literal type="number" pos:line="176" pos:column="16">86<pos:position pos:line="176" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="20">DBG_IMPORTANT<pos:position pos:line="176" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="35">"invalid expr '"<pos:position pos:line="176" pos:column="51"/></literal> <operator pos:line="176" pos:column="52">&lt;&lt;<pos:position pos:line="176" pos:column="60"/></operator> <name pos:line="176" pos:column="55">s<pos:position pos:line="176" pos:column="56"/></name> <operator pos:line="176" pos:column="57">&lt;&lt;<pos:position pos:line="176" pos:column="65"/></operator> <literal type="string" pos:line="176" pos:column="60">"'"<pos:position pos:line="176" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="177" pos:column="9">*<pos:position pos:line="177" pos:column="10"/></operator><name pos:line="177" pos:column="10">endptr<pos:position pos:line="177" pos:column="16"/></name> <operator pos:line="177" pos:column="17">=<pos:position pos:line="177" pos:column="18"/></operator> <name pos:line="177" pos:column="19">origs<pos:position pos:line="177" pos:column="24"/></name></expr>;<pos:position pos:line="177" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="178" pos:column="6"/></block></else></if>

    <return pos:line="180" pos:column="5">return <expr><name pos:line="180" pos:column="12">rv<pos:position pos:line="180" pos:column="14"/></name></expr>;<pos:position pos:line="180" pos:column="15"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

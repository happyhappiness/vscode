<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6889_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">ESIElement<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Pointer<pos:position pos:line="1" pos:column="20"/></name></name></type>
<name><name pos:line="2" pos:column="1">esiSequence<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">makeUsable<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">esiTreeParentPtr<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">newParent<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">ESIVarState<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">&amp;<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="66">newVarState<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list> <specifier pos:line="2" pos:column="79">const<pos:position pos:line="2" pos:column="84"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">86<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"esiSequence::makeUsable: Creating usable Sequence"<pos:position pos:line="4" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">processedcount<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">==<pos:position pos:line="5" pos:column="30"/></operator> <literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">failed<pos:position pos:line="6" pos:column="20"/></name></expr></argument>)<pos:position pos:line="6" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">elements<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">size<pos:position pos:line="8" pos:column="22"/></name></name><argument_list pos:line="8" pos:column="22">()<pos:position pos:line="8" pos:column="24"/></argument_list></call> <operator pos:line="8" pos:column="25">==<pos:position pos:line="8" pos:column="27"/></operator> <literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <block pos:line="8" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">86<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">5<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"esiSequence::makeUsable: No elements in sequence "<pos:position pos:line="9" pos:column="74"/></literal> <operator pos:line="9" pos:column="75">&lt;&lt;<pos:position pos:line="9" pos:column="83"/></operator> <name pos:line="9" pos:column="78">this<pos:position pos:line="9" pos:column="82"/></name> <operator pos:line="9" pos:column="83">&lt;&lt;<pos:position pos:line="9" pos:column="91"/></operator> <literal type="string" pos:line="9" pos:column="86">", returning NULL"<pos:position pos:line="9" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="106"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">esiSequence<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type> <name pos:line="13" pos:column="19">resultS<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><operator pos:line="13" pos:column="29">new<pos:position pos:line="13" pos:column="32"/></operator> <call><name pos:line="13" pos:column="33">esiSequence<pos:position pos:line="13" pos:column="44"/></name> <argument_list pos:line="13" pos:column="45">(<argument><expr><operator pos:line="13" pos:column="46">*<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="47">this<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">ESIElement<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">::<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">Pointer<pos:position pos:line="14" pos:column="24"/></name></name></type> <name pos:line="14" pos:column="25">result<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><name pos:line="14" pos:column="34">resultS<pos:position pos:line="14" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">resultS<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">parent<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">newParent<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">resultS<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">makeUsableElements<pos:position pos:line="16" pos:column="32"/></name></name><argument_list pos:line="16" pos:column="32">(<argument><expr><operator pos:line="16" pos:column="33">*<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">this<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">newVarState<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">result<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

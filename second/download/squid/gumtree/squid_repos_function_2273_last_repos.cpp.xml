<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2273_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">hasNamed<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">name<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">namelen<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">String<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">result<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list> <specifier pos:line="2" pos:column="69">const<pos:position pos:line="2" pos:column="74"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Http<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">HdrType<pos:position pos:line="4" pos:column="18"/></name></name></type> <name pos:line="4" pos:column="19">id<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeaderPos<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">pos<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">HttpHeaderInitPos<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HttpHeaderEntry<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">e<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">name<pos:position pos:line="8" pos:column="16"/></name></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* First try the quick path */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">id<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name><name pos:line="11" pos:column="10">Http<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">::<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">HeaderLookupTable<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">lookup<pos:position pos:line="11" pos:column="40"/></name></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">name<pos:position pos:line="11" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="46">namelen<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call><operator pos:line="11" pos:column="54">.<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">id<pos:position pos:line="11" pos:column="57"/></name></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">id<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">!=<pos:position pos:line="13" pos:column="14"/></operator> <name><name pos:line="13" pos:column="15">Http<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">::<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">HdrType<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">::<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">BAD_HDR<pos:position pos:line="13" pos:column="37"/></name></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <block pos:line="13" pos:column="39">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">getByIdIfPresent<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">id<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">result<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><literal type="boolean" pos:line="15" pos:column="20">true<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* Sorry, an unknown header name. Do linear search */</comment>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">bool<pos:position pos:line="19" pos:column="9"/></name></type> <name pos:line="19" pos:column="10">found<pos:position pos:line="19" pos:column="15"/></name> <init pos:line="19" pos:column="16">= <expr><literal type="boolean" pos:line="19" pos:column="18">false<pos:position pos:line="19" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="24"/></decl_stmt>
    <while pos:line="20" pos:column="5">while <condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">e<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">getEntry<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="27">pos<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator></expr>)<pos:position pos:line="20" pos:column="33"/></condition> <block pos:line="20" pos:column="34">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">e<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">id<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <name><name pos:line="21" pos:column="22">Http<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">::<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">HdrType<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">::<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">OTHER<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">&amp;&amp;<pos:position pos:line="21" pos:column="53"/></operator> <call><name><name pos:line="21" pos:column="46">e<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">name<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">.<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">size<pos:position pos:line="21" pos:column="58"/></name></name><argument_list pos:line="21" pos:column="58">()<pos:position pos:line="21" pos:column="60"/></argument_list></call> <operator pos:line="21" pos:column="61">==<pos:position pos:line="21" pos:column="63"/></operator> <cast type="static" pos:line="21" pos:column="64">static_cast<argument_list type="generic" pos:line="21" pos:column="75">&lt;<argument><expr><name><name pos:line="21" pos:column="76">String<pos:position pos:line="21" pos:column="82"/></name><operator pos:line="21" pos:column="82">::<pos:position pos:line="21" pos:column="84"/></operator><name pos:line="21" pos:column="84">size_type<pos:position pos:line="21" pos:column="93"/></name></name></expr></argument>&gt;<pos:position pos:line="21" pos:column="97"/></argument_list><argument_list pos:line="21" pos:column="94">(<argument><expr><name pos:line="21" pos:column="95">namelen<pos:position pos:line="21" pos:column="102"/></name></expr></argument>)<pos:position pos:line="21" pos:column="103"/></argument_list></cast> <operator pos:line="21" pos:column="104">&amp;&amp;<pos:position pos:line="21" pos:column="114"/></operator> <call><name><name pos:line="21" pos:column="107">e<pos:position pos:line="21" pos:column="108"/></name><operator pos:line="21" pos:column="108">-&gt;<pos:position pos:line="21" pos:column="113"/></operator><name pos:line="21" pos:column="110">name<pos:position pos:line="21" pos:column="114"/></name><operator pos:line="21" pos:column="114">.<pos:position pos:line="21" pos:column="115"/></operator><name pos:line="21" pos:column="115">caseCmp<pos:position pos:line="21" pos:column="122"/></name></name><argument_list pos:line="21" pos:column="122">(<argument><expr><name pos:line="21" pos:column="123">name<pos:position pos:line="21" pos:column="127"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="129">namelen<pos:position pos:line="21" pos:column="136"/></name></expr></argument>)<pos:position pos:line="21" pos:column="137"/></argument_list></call> <operator pos:line="21" pos:column="138">==<pos:position pos:line="21" pos:column="140"/></operator> <literal type="number" pos:line="21" pos:column="141">0<pos:position pos:line="21" pos:column="142"/></literal></expr>)<pos:position pos:line="21" pos:column="143"/></condition><then pos:line="21" pos:column="143"> <block pos:line="21" pos:column="144">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">found<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="boolean" pos:line="22" pos:column="21">true<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><operator pos:line="23" pos:column="17">!<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">result<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
                <block type="pseudo"><break pos:line="24" pos:column="17">break;<pos:position pos:line="24" pos:column="23"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">strListAdd<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">result<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><call><name><name pos:line="25" pos:column="32">e<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">value<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">.<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">termedBuf<pos:position pos:line="25" pos:column="50"/></name></name><argument_list pos:line="25" pos:column="50">()<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="54">','<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></while>

    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">found<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5058_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">squidaio_shutdown<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">squidaio_initialised<pos:position pos:line="4" pos:column="30"/></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="7" pos:column="5">/* This is the same as in squidaio_sync */</comment>
    <do pos:line="8" pos:column="5">do <block pos:line="8" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">squidaio_poll_queues<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">()<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block> while <condition pos:line="10" pos:column="13">(<expr><name pos:line="10" pos:column="14">request_queue_len<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&gt;<pos:position pos:line="10" pos:column="36"/></operator> <literal type="number" pos:line="10" pos:column="34">0<pos:position pos:line="10" pos:column="35"/></literal></expr>)<pos:position pos:line="10" pos:column="36"/></condition>;<pos:position pos:line="10" pos:column="37"/></do>

    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">CommIO<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">::<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">NotifyIOClose<pos:position pos:line="12" pos:column="26"/></name></name><argument_list pos:line="12" pos:column="26">()<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">squidaio_initialised<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6297_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">diskerRead<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">IpcIoMsg<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">&amp;<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="22">ipcIo<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">Ipc<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">Mem<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">GetPage<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name><name pos:line="4" pos:column="28">Ipc<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">::<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">Mem<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">::<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">PageId<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">::<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="46">ioPage<pos:position pos:line="4" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="54">ipcIo<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">.<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="60">page<pos:position pos:line="4" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="66"/></condition><then pos:line="4" pos:column="66"> <block pos:line="4" pos:column="67">{
        <expr_stmt><expr><name><name pos:line="5" pos:column="9">ipcIo<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">.<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">len<pos:position pos:line="5" pos:column="18"/></name></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">47<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="19">2<pos:position pos:line="6" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="22">HERE<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&lt;&lt;<pos:position pos:line="6" pos:column="35"/></operator> <literal type="string" pos:line="6" pos:column="30">"run out of shared memory pages for IPC I/O"<pos:position pos:line="6" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="76"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier><specifier pos:line="10" pos:column="11">const<pos:position pos:line="10" pos:column="16"/></specifier></type> <name pos:line="10" pos:column="17">buf<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><call><name><name pos:line="10" pos:column="23">Ipc<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">::<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">Mem<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">::<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">PagePointer<pos:position pos:line="10" pos:column="44"/></name></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name><name pos:line="10" pos:column="45">ipcIo<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">page<pos:position pos:line="10" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">ssize_t<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">read<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><call><name pos:line="11" pos:column="26">pread<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">TheFile<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">buf<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="46">min<pos:position pos:line="11" pos:column="49"/></name><argument_list pos:line="11" pos:column="49">(<argument><expr><name><name pos:line="11" pos:column="50">ipcIo<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">.<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="56">len<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="11" pos:column="61">Ipc<pos:position pos:line="11" pos:column="64"/></name><operator pos:line="11" pos:column="64">::<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="66">Mem<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">::<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="71">PageSize<pos:position pos:line="11" pos:column="79"/></name></name><argument_list pos:line="11" pos:column="79">()<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="84">ipcIo<pos:position pos:line="11" pos:column="89"/></name><operator pos:line="11" pos:column="89">.<pos:position pos:line="11" pos:column="90"/></operator><name pos:line="11" pos:column="90">offset<pos:position pos:line="11" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="97"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="98"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="12" pos:column="5">++<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">statCounter<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">syscalls<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">disk<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">reads<pos:position pos:line="12" pos:column="38"/></name></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">fd_bytes<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">TheFile<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">read<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">FD_READ<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">read<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">&gt;=<pos:position pos:line="15" pos:column="19"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19"> <block pos:line="15" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">ipcIo<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">xerrno<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">size_t<pos:position pos:line="17" pos:column="21"/></name></type> <name pos:line="17" pos:column="22">len<pos:position pos:line="17" pos:column="25"/></name> <init pos:line="17" pos:column="26">= <expr><cast type="static" pos:line="17" pos:column="28">static_cast<argument_list type="generic" pos:line="17" pos:column="39">&lt;<argument><expr><name pos:line="17" pos:column="40">size_t<pos:position pos:line="17" pos:column="46"/></name></expr></argument>&gt;<pos:position pos:line="17" pos:column="50"/></argument_list><argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">read<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="17" pos:column="54"/></decl_stmt> <comment type="line" pos:line="17" pos:column="55">// safe because read &gt; 0</comment>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">47<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="18" pos:column="19">8<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">HERE<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;&lt;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="string" pos:line="18" pos:column="30">"disker"<pos:position pos:line="18" pos:column="38"/></literal> <operator pos:line="18" pos:column="39">&lt;&lt;<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="42">KidIdentifier<pos:position pos:line="18" pos:column="55"/></name> <operator pos:line="18" pos:column="56">&lt;&lt;<pos:position pos:line="18" pos:column="64"/></operator> <literal type="string" pos:line="18" pos:column="59">" read "<pos:position pos:line="18" pos:column="67"/></literal> <operator pos:line="18" pos:column="68">&lt;&lt;<pos:position pos:line="18" pos:column="76"/></operator>
               <operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><ternary><condition><expr><name pos:line="19" pos:column="17">len<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="24">ipcIo<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">len<pos:position pos:line="19" pos:column="33"/></name></name></expr> ?<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <expr><literal type="string" pos:line="19" pos:column="36">"all "<pos:position pos:line="19" pos:column="42"/></literal></expr> <pos:position pos:line="19" pos:column="43"/></then><else pos:line="19" pos:column="43">: <expr><literal type="string" pos:line="19" pos:column="45">"just "<pos:position pos:line="19" pos:column="52"/></literal></expr></else></ternary><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator> <operator pos:line="19" pos:column="54">&lt;&lt;<pos:position pos:line="19" pos:column="62"/></operator> <name pos:line="19" pos:column="57">read<pos:position pos:line="19" pos:column="61"/></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">ipcIo<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">len<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">len<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">ipcIo<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">xerrno<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">errno<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">ipcIo<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">len<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">47<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="24" pos:column="19">5<pos:position pos:line="24" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="22">HERE<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">&lt;&lt;<pos:position pos:line="24" pos:column="35"/></operator> <literal type="string" pos:line="24" pos:column="30">"disker"<pos:position pos:line="24" pos:column="38"/></literal> <operator pos:line="24" pos:column="39">&lt;&lt;<pos:position pos:line="24" pos:column="47"/></operator> <name pos:line="24" pos:column="42">KidIdentifier<pos:position pos:line="24" pos:column="55"/></name> <operator pos:line="24" pos:column="56">&lt;&lt;<pos:position pos:line="24" pos:column="64"/></operator> <literal type="string" pos:line="24" pos:column="59">" read error: "<pos:position pos:line="24" pos:column="74"/></literal> <operator pos:line="24" pos:column="75">&lt;&lt;<pos:position pos:line="24" pos:column="83"/></operator>
               <name><name pos:line="25" pos:column="16">ipcIo<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">xerrno<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

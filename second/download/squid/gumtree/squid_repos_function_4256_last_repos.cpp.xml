<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4256_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLSquidErrorData<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">match<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">err_type<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">err<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">CbDataListIterator<pos:position pos:line="4" pos:column="23"/></name><argument_list type="generic" pos:line="4" pos:column="23">&lt;<argument><expr><name pos:line="4" pos:column="24">err_type<pos:position pos:line="4" pos:column="32"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="36"/></argument_list></name></type> <name pos:line="4" pos:column="34">iter<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">errors<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><call><name><name pos:line="5" pos:column="13">iter<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">end<pos:position pos:line="5" pos:column="21"/></name></name><argument_list pos:line="5" pos:column="21">()<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="24"/></condition> <block pos:line="5" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">err_type<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">localErr<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name><name pos:line="6" pos:column="29">iter<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">.<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">next<pos:position pos:line="6" pos:column="38"/></name></name><argument_list pos:line="6" pos:column="38">()<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">28<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">4<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"check ("<pos:position pos:line="7" pos:column="32"/></literal> <operator pos:line="7" pos:column="33">&lt;&lt;<pos:position pos:line="7" pos:column="41"/></operator> <name pos:line="7" pos:column="36">err<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">&lt;&lt;<pos:position pos:line="7" pos:column="48"/></operator> <literal type="string" pos:line="7" pos:column="43">"):"<pos:position pos:line="7" pos:column="47"/></literal>  <operator pos:line="7" pos:column="49">&lt;&lt;<pos:position pos:line="7" pos:column="57"/></operator> <call><name pos:line="7" pos:column="52">errorTypeName<pos:position pos:line="7" pos:column="65"/></name><argument_list pos:line="7" pos:column="65">(<argument><expr><name pos:line="7" pos:column="66">err<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call> <operator pos:line="7" pos:column="71">&lt;&lt;<pos:position pos:line="7" pos:column="79"/></operator> <literal type="string" pos:line="7" pos:column="74">" against "<pos:position pos:line="7" pos:column="85"/></literal> <operator pos:line="7" pos:column="86">&lt;&lt;<pos:position pos:line="7" pos:column="94"/></operator>  <call><name pos:line="7" pos:column="90">errorTypeName<pos:position pos:line="7" pos:column="103"/></name><argument_list pos:line="7" pos:column="103">(<argument><expr><name pos:line="7" pos:column="104">localErr<pos:position pos:line="7" pos:column="112"/></name></expr></argument>)<pos:position pos:line="7" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="115"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">err<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">localErr<pos:position pos:line="8" pos:column="28"/></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
            <block type="pseudo"><return pos:line="9" pos:column="13">return <expr><literal type="boolean" pos:line="9" pos:column="20">true<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></while>

    <return pos:line="12" pos:column="5">return <expr><literal type="boolean" pos:line="12" pos:column="12">false<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

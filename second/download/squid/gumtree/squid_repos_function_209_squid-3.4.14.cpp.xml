<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_209_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">searchLDAP<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">LDAP<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type> <name pos:line="2" pos:column="19">ld<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">group<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">login<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">extension_dn<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">usersearchfilter<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">filter<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><literal type="number" pos:line="6" pos:column="21">8192<pos:position pos:line="6" pos:column="25"/></literal></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">searchbase<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><literal type="number" pos:line="7" pos:column="25">8192<pos:position pos:line="7" pos:column="29"/></literal></expr>]<pos:position pos:line="7" pos:column="30"/></index></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">escaped_login<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><literal type="number" pos:line="8" pos:column="28">1024<pos:position pos:line="8" pos:column="32"/></literal></expr>]<pos:position pos:line="8" pos:column="33"/></index></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">LDAPMessage<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">res<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">LDAPMessage<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">entry<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">rc<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">userdn<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name><name pos:line="13" pos:column="15">searchattr<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[]<pos:position pos:line="13" pos:column="27"/></index></name> <init pos:line="13" pos:column="28">= <expr><block pos:line="13" pos:column="30">{<expr><operator pos:line="13" pos:column="31">(<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">char<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">*<pos:position pos:line="13" pos:column="38"/></operator><operator pos:line="13" pos:column="38">)<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">LDAP_NO_ATTRS<pos:position pos:line="13" pos:column="53"/></name></expr>, <expr><name pos:line="13" pos:column="55">NULL<pos:position pos:line="13" pos:column="59"/></name></expr>}<pos:position pos:line="13" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="61"/></decl_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">extension_dn<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&amp;&amp;<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">extension_dn<pos:position pos:line="14" pos:column="42"/></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">snprintf<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">searchbase<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="34">sizeof<argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">searchbase<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="54">"%s,%s"<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">extension_dn<pos:position pos:line="15" pos:column="75"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="15" pos:column="77">userbasedn<pos:position pos:line="15" pos:column="87"/></name></expr> ?<pos:position pos:line="15" pos:column="89"/></condition><then pos:line="15" pos:column="89"> <expr><name pos:line="15" pos:column="90">userbasedn<pos:position pos:line="15" pos:column="100"/></name></expr> <pos:position pos:line="15" pos:column="101"/></then><else pos:line="15" pos:column="101">: <expr><name pos:line="15" pos:column="103">basedn<pos:position pos:line="15" pos:column="109"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="15" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="111"/></expr_stmt></block></then>
        <else pos:line="16" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">snprintf<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">searchbase<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="34">sizeof<argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">searchbase<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="54">"%s"<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="17" pos:column="60">userbasedn<pos:position pos:line="17" pos:column="70"/></name></expr> ?<pos:position pos:line="17" pos:column="72"/></condition><then pos:line="17" pos:column="72"> <expr><name pos:line="17" pos:column="73">userbasedn<pos:position pos:line="17" pos:column="83"/></name></expr> <pos:position pos:line="17" pos:column="84"/></then><else pos:line="17" pos:column="84">: <expr><name pos:line="17" pos:column="86">basedn<pos:position pos:line="17" pos:column="92"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="17" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="94"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ldap_escape_value<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">escaped_login<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="42">sizeof<argument_list pos:line="18" pos:column="48">(<argument><expr><name pos:line="18" pos:column="49">escaped_login<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="18" pos:column="65">login<pos:position pos:line="18" pos:column="70"/></name></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">snprintf<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">filter<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="26">sizeof<argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">filter<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">usersearchfilter<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="60">escaped_login<pos:position pos:line="19" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="75">escaped_login<pos:position pos:line="19" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="90">escaped_login<pos:position pos:line="19" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="105">escaped_login<pos:position pos:line="19" pos:column="118"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="120">escaped_login<pos:position pos:line="19" pos:column="133"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="135">escaped_login<pos:position pos:line="19" pos:column="148"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="150">escaped_login<pos:position pos:line="19" pos:column="163"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="165">escaped_login<pos:position pos:line="19" pos:column="178"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="180">escaped_login<pos:position pos:line="19" pos:column="193"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="195">escaped_login<pos:position pos:line="19" pos:column="208"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="210">escaped_login<pos:position pos:line="19" pos:column="223"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="225">escaped_login<pos:position pos:line="19" pos:column="238"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="240">escaped_login<pos:position pos:line="19" pos:column="253"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="255">escaped_login<pos:position pos:line="19" pos:column="268"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="270">escaped_login<pos:position pos:line="19" pos:column="283"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="285">escaped_login<pos:position pos:line="19" pos:column="298"/></name></expr></argument>)<pos:position pos:line="19" pos:column="299"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="300"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debug<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><literal type="string" pos:line="20" pos:column="15">"user filter '%s', searchbase '%s'\n"<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">filter<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">searchbase<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">rc<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">ldap_search_s<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">ld<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="32">searchbase<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">searchscope<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">filter<pos:position pos:line="21" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="65">searchattr<pos:position pos:line="21" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="77">1<pos:position pos:line="21" pos:column="78"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="80">&amp;<pos:position pos:line="21" pos:column="85"/></operator><name pos:line="21" pos:column="81">res<pos:position pos:line="21" pos:column="84"/></name></expr></argument>)<pos:position pos:line="21" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="86"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">rc<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">LDAP_SUCCESS<pos:position pos:line="22" pos:column="31"/></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32"> <block pos:line="22" pos:column="33">{
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">noreferrals<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">&amp;&amp;<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="32">rc<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">==<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">LDAP_PARTIAL_RESULTS<pos:position pos:line="23" pos:column="58"/></name></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59"> <block pos:line="23" pos:column="60">{
                <comment type="block" pos:line="24" pos:column="17">/* Everything is fine. This is expected when referrals
                 * are disabled.
                 */</comment>
            }<pos:position pos:line="27" pos:column="14"/></block></then> <else pos:line="27" pos:column="15">else <block pos:line="27" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">fprintf<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">stderr<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">PROGRAM_NAME<pos:position pos:line="28" pos:column="45"/></name> <literal type="string" pos:line="28" pos:column="46">": WARNING: LDAP search error '%s'\n"<pos:position pos:line="28" pos:column="83"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="85">ldap_err2string<pos:position pos:line="28" pos:column="100"/></name><argument_list pos:line="28" pos:column="100">(<argument><expr><name pos:line="28" pos:column="101">rc<pos:position pos:line="28" pos:column="103"/></name></expr></argument>)<pos:position pos:line="28" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="106"/></expr_stmt>
<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><call><name pos:line="29" pos:column="5">defined<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">NETSCAPE_SSL<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr></cpp:if>
                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">sslpath<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">&amp;&amp;<pos:position pos:line="30" pos:column="39"/></operator> <operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><operator pos:line="30" pos:column="33">(<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">rc<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">==<pos:position pos:line="30" pos:column="39"/></operator> <name pos:line="30" pos:column="40">LDAP_SERVER_DOWN<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">)<pos:position pos:line="30" pos:column="57"/></operator> <operator pos:line="30" pos:column="58">||<pos:position pos:line="30" pos:column="60"/></operator> <operator pos:line="30" pos:column="61">(<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="62">rc<pos:position pos:line="30" pos:column="64"/></name> <operator pos:line="30" pos:column="65">==<pos:position pos:line="30" pos:column="67"/></operator> <name pos:line="30" pos:column="68">LDAP_CONNECT_ERROR<pos:position pos:line="30" pos:column="86"/></name><operator pos:line="30" pos:column="86">)<pos:position pos:line="30" pos:column="87"/></operator><operator pos:line="30" pos:column="87">)<pos:position pos:line="30" pos:column="88"/></operator></expr>)<pos:position pos:line="30" pos:column="89"/></condition><then pos:line="30" pos:column="89"> <block pos:line="30" pos:column="90">{
                    <decl_stmt><decl><type><name pos:line="31" pos:column="21">int<pos:position pos:line="31" pos:column="24"/></name></type> <name pos:line="31" pos:column="25">sslerr<pos:position pos:line="31" pos:column="31"/></name> <init pos:line="31" pos:column="32">= <expr><call><name pos:line="31" pos:column="34">PORT_GetError<pos:position pos:line="31" pos:column="47"/></name><argument_list pos:line="31" pos:column="47">()<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="50"/></decl_stmt>
                    <expr_stmt><expr><call><name pos:line="32" pos:column="21">fprintf<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">stderr<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">PROGRAM_NAME<pos:position pos:line="32" pos:column="49"/></name> <literal type="string" pos:line="32" pos:column="50">": WARNING: SSL error %d (%s)\n"<pos:position pos:line="32" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="84">sslerr<pos:position pos:line="32" pos:column="90"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="92">ldapssl_err2string<pos:position pos:line="32" pos:column="110"/></name><argument_list pos:line="32" pos:column="110">(<argument><expr><name pos:line="32" pos:column="111">sslerr<pos:position pos:line="32" pos:column="117"/></name></expr></argument>)<pos:position pos:line="32" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="120"/></expr_stmt>
                }<pos:position pos:line="33" pos:column="18"/></block></then></if>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><call><name pos:line="35" pos:column="17">ldap_msgfree<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">res<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
                <return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
            }<pos:position pos:line="37" pos:column="14"/></block></else></if>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="39" pos:column="9">entry<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <call><name pos:line="39" pos:column="17">ldap_first_entry<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">ld<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">res<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">entry<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">fprintf<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">stderr<pos:position pos:line="41" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="29">PROGRAM_NAME<pos:position pos:line="41" pos:column="41"/></name> <literal type="string" pos:line="41" pos:column="42">": WARNING: User '%s' not found in '%s'\n"<pos:position pos:line="41" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="86">login<pos:position pos:line="41" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="93">searchbase<pos:position pos:line="41" pos:column="103"/></name></expr></argument>)<pos:position pos:line="41" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ldap_msgfree<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">res<pos:position pos:line="42" pos:column="29"/></name></expr></argument>)<pos:position pos:line="42" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
            <return pos:line="43" pos:column="13">return <expr><literal type="number" pos:line="43" pos:column="20">1<pos:position pos:line="43" pos:column="21"/></literal></expr>;<pos:position pos:line="43" pos:column="22"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="45" pos:column="9">userdn<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">ldap_get_dn<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">ld<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">entry<pos:position pos:line="45" pos:column="39"/></name></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">rc<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">searchLDAPGroup<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">ld<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">group<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">userdn<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="49">extension_dn<pos:position pos:line="46" pos:column="61"/></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">squid_ldap_memfree<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">userdn<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">ldap_msgfree<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">res<pos:position pos:line="48" pos:column="25"/></name></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">rc<pos:position pos:line="49" pos:column="18"/></name></expr>;<pos:position pos:line="49" pos:column="19"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then> <elseif pos:line="50" pos:column="7">else <if pos:line="50" pos:column="12">if <condition pos:line="50" pos:column="15">(<expr><name pos:line="50" pos:column="16">userdnattr<pos:position pos:line="50" pos:column="26"/></name></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27"> <block pos:line="50" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="51" pos:column="9">char<pos:position pos:line="51" pos:column="13"/></name></type> <name><name pos:line="51" pos:column="14">dn<pos:position pos:line="51" pos:column="16"/></name><index pos:line="51" pos:column="16">[<expr><literal type="number" pos:line="51" pos:column="17">8192<pos:position pos:line="51" pos:column="21"/></literal></expr>]<pos:position pos:line="51" pos:column="22"/></index></name></decl>;<pos:position pos:line="51" pos:column="23"/></decl_stmt>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">extension_dn<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">&amp;&amp;<pos:position pos:line="52" pos:column="36"/></operator> <operator pos:line="52" pos:column="29">*<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">extension_dn<pos:position pos:line="52" pos:column="42"/></name></expr>)<pos:position pos:line="52" pos:column="43"/></condition><then pos:line="52" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="13">snprintf<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">dn<pos:position pos:line="53" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="26">8192<pos:position pos:line="53" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="32">"%s=%s, %s, %s"<pos:position pos:line="53" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="49">userdnattr<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="61">login<pos:position pos:line="53" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="68">extension_dn<pos:position pos:line="53" pos:column="80"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="53" pos:column="82">userbasedn<pos:position pos:line="53" pos:column="92"/></name></expr> ?<pos:position pos:line="53" pos:column="94"/></condition><then pos:line="53" pos:column="94"> <expr><name pos:line="53" pos:column="95">userbasedn<pos:position pos:line="53" pos:column="105"/></name></expr> <pos:position pos:line="53" pos:column="106"/></then><else pos:line="53" pos:column="106">: <expr><name pos:line="53" pos:column="108">basedn<pos:position pos:line="53" pos:column="114"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="53" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="116"/></expr_stmt></block></then>
        <else pos:line="54" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="13">snprintf<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">dn<pos:position pos:line="55" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="26">8192<pos:position pos:line="55" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="32">"%s=%s, %s"<pos:position pos:line="55" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">userdnattr<pos:position pos:line="55" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">login<pos:position pos:line="55" pos:column="62"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="55" pos:column="64">userbasedn<pos:position pos:line="55" pos:column="74"/></name></expr> ?<pos:position pos:line="55" pos:column="76"/></condition><then pos:line="55" pos:column="76"> <expr><name pos:line="55" pos:column="77">userbasedn<pos:position pos:line="55" pos:column="87"/></name></expr> <pos:position pos:line="55" pos:column="88"/></then><else pos:line="55" pos:column="88">: <expr><name pos:line="55" pos:column="90">basedn<pos:position pos:line="55" pos:column="96"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="55" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="98"/></expr_stmt></block></else></if>
        <return pos:line="56" pos:column="9">return <expr><call><name pos:line="56" pos:column="16">searchLDAPGroup<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">ld<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="36">group<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">dn<pos:position pos:line="56" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="47">extension_dn<pos:position pos:line="56" pos:column="59"/></name></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="61"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif> <else pos:line="57" pos:column="7">else <block pos:line="57" pos:column="12">{
        <return pos:line="58" pos:column="9">return <expr><call><name pos:line="58" pos:column="16">searchLDAPGroup<pos:position pos:line="58" pos:column="31"/></name><argument_list pos:line="58" pos:column="31">(<argument><expr><name pos:line="58" pos:column="32">ld<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="36">group<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">login<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">extension_dn<pos:position pos:line="58" pos:column="62"/></name></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3776_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">mimicAuthorityKeyId<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name><name pos:line="2" pos:column="21">Security<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">CertPointer<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">&amp;<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="44">cert<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="50">Security<pos:position pos:line="2" pos:column="58"/></name><operator pos:line="2" pos:column="58">::<pos:position pos:line="2" pos:column="60"/></operator><name pos:line="2" pos:column="60">CertPointer<pos:position pos:line="2" pos:column="71"/></name></name> <specifier pos:line="2" pos:column="72">const<pos:position pos:line="2" pos:column="77"/></specifier> <modifier pos:line="2" pos:column="78">&amp;<pos:position pos:line="2" pos:column="83"/></modifier></type><name pos:line="2" pos:column="79">mimicCert<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="90">Security<pos:position pos:line="2" pos:column="98"/></name><operator pos:line="2" pos:column="98">::<pos:position pos:line="2" pos:column="100"/></operator><name pos:line="2" pos:column="100">CertPointer<pos:position pos:line="2" pos:column="111"/></name></name> <specifier pos:line="2" pos:column="112">const<pos:position pos:line="2" pos:column="117"/></specifier> <modifier pos:line="2" pos:column="118">&amp;<pos:position pos:line="2" pos:column="123"/></modifier></type><name pos:line="2" pos:column="119">issuerCert<pos:position pos:line="2" pos:column="129"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="130"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">mimicCert<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">.<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">get<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call> <operator pos:line="4" pos:column="26">||<pos:position pos:line="4" pos:column="28"/></operator> <operator pos:line="4" pos:column="29">!<pos:position pos:line="4" pos:column="30"/></operator><call><name><name pos:line="4" pos:column="30">issuerCert<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">.<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">get<pos:position pos:line="4" pos:column="44"/></name></name><argument_list pos:line="4" pos:column="44">()<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Ssl<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">AUTHORITY_KEYID_Pointer<pos:position pos:line="7" pos:column="33"/></name></name></type> <name pos:line="7" pos:column="34">akid<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><operator pos:line="7" pos:column="39">(<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">AUTHORITY_KEYID<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator><call><name pos:line="7" pos:column="58">X509_get_ext_d2i<pos:position pos:line="7" pos:column="74"/></name><argument_list pos:line="7" pos:column="74">(<argument><expr><call><name><name pos:line="7" pos:column="75">mimicCert<pos:position pos:line="7" pos:column="84"/></name><operator pos:line="7" pos:column="84">.<pos:position pos:line="7" pos:column="85"/></operator><name pos:line="7" pos:column="85">get<pos:position pos:line="7" pos:column="88"/></name></name><argument_list pos:line="7" pos:column="88">()<pos:position pos:line="7" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="92">NID_authority_key_identifier<pos:position pos:line="7" pos:column="120"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="7" pos:column="122">nullptr<pos:position pos:line="7" pos:column="129"/></literal></expr></argument>, <argument><expr><literal type="null" pos:line="7" pos:column="131">nullptr<pos:position pos:line="7" pos:column="138"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="139"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="140"/></argument_list></decl>;<pos:position pos:line="7" pos:column="141"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">bool<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">addKeyId<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><literal type="boolean" pos:line="9" pos:column="21">false<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="28">addIssuer<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><literal type="boolean" pos:line="9" pos:column="40">false<pos:position pos:line="9" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="46"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name><name pos:line="10" pos:column="9">akid<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">.<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">get<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="20"/></condition><then pos:line="10" pos:column="20"> <block pos:line="10" pos:column="21">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">addKeyId<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">(<pos:position pos:line="11" pos:column="21"/></operator><call><name><name pos:line="11" pos:column="21">akid<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">.<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">get<pos:position pos:line="11" pos:column="29"/></name></name><argument_list pos:line="11" pos:column="29">()<pos:position pos:line="11" pos:column="31"/></argument_list></call><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">keyid<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">!=<pos:position pos:line="11" pos:column="41"/></operator> <literal type="null" pos:line="11" pos:column="42">nullptr<pos:position pos:line="11" pos:column="49"/></literal><operator pos:line="11" pos:column="49">)<pos:position pos:line="11" pos:column="50"/></operator></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">addIssuer<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><call><name><name pos:line="12" pos:column="22">akid<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">.<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">get<pos:position pos:line="12" pos:column="30"/></name></name><argument_list pos:line="12" pos:column="30">()<pos:position pos:line="12" pos:column="32"/></argument_list></call><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">issuer<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">&amp;&amp;<pos:position pos:line="12" pos:column="51"/></operator> <call><name><name pos:line="12" pos:column="44">akid<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">.<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">get<pos:position pos:line="12" pos:column="52"/></name></name><argument_list pos:line="12" pos:column="52">()<pos:position pos:line="12" pos:column="54"/></argument_list></call><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">serial<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">)<pos:position pos:line="12" pos:column="63"/></operator></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">addKeyId<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&amp;&amp;<pos:position pos:line="15" pos:column="29"/></operator> <operator pos:line="15" pos:column="22">!<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">addIssuer<pos:position pos:line="15" pos:column="32"/></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><literal type="boolean" pos:line="16" pos:column="16">false<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="16" pos:column="23">// No need to add AuthorityKeyIdentifier</comment>

    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">Ssl<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">::<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">ASN1_OCTET_STRING_Pointer<pos:position pos:line="18" pos:column="35"/></name></name></type> <name pos:line="18" pos:column="36">issuerKeyId<pos:position pos:line="18" pos:column="47"/></name></decl>;<pos:position pos:line="18" pos:column="48"/></decl_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">addKeyId<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block pos:line="19" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">X509_EXTENSION<pos:position pos:line="20" pos:column="23"/></name> <modifier pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></modifier></type><name pos:line="20" pos:column="25">ext<pos:position pos:line="20" pos:column="28"/></name></decl>;<pos:position pos:line="20" pos:column="29"/></decl_stmt>
        <comment type="line" pos:line="21" pos:column="9">// Check if the issuer has the Subject Key Identifier extension</comment>
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">const<pos:position pos:line="22" pos:column="14"/></specifier> <name pos:line="22" pos:column="15">int<pos:position pos:line="22" pos:column="18"/></name></type> <name pos:line="22" pos:column="19">indx<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><call><name pos:line="22" pos:column="26">X509_get_ext_by_NID<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><call><name><name pos:line="22" pos:column="46">issuerCert<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">.<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="57">get<pos:position pos:line="22" pos:column="60"/></name></name><argument_list pos:line="22" pos:column="60">()<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="64">NID_subject_key_identifier<pos:position pos:line="22" pos:column="90"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="92">-<pos:position pos:line="22" pos:column="93"/></operator><literal type="number" pos:line="22" pos:column="93">1<pos:position pos:line="22" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="96"/></decl_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">indx<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&gt;=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal> <operator pos:line="23" pos:column="23">&amp;&amp;<pos:position pos:line="23" pos:column="33"/></operator> <operator pos:line="23" pos:column="26">(<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">ext<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="33">X509_get_ext<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><call><name><name pos:line="23" pos:column="46">issuerCert<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">get<pos:position pos:line="23" pos:column="60"/></name></name><argument_list pos:line="23" pos:column="60">()<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">indx<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call><operator pos:line="23" pos:column="69">)<pos:position pos:line="23" pos:column="70"/></operator></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71"> <block pos:line="23" pos:column="72">{
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">issuerKeyId<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">reset<pos:position pos:line="24" pos:column="30"/></name></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">(<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">ASN1_OCTET_STRING<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">*<pos:position pos:line="24" pos:column="51"/></operator><operator pos:line="24" pos:column="51">)<pos:position pos:line="24" pos:column="52"/></operator><call><name pos:line="24" pos:column="52">X509V3_EXT_d2i<pos:position pos:line="24" pos:column="66"/></name><argument_list pos:line="24" pos:column="66">(<argument><expr><name pos:line="24" pos:column="67">ext<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="28" pos:column="5">Ssl<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">::<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">X509_NAME_Pointer<pos:position pos:line="28" pos:column="27"/></name></name></type> <name pos:line="28" pos:column="28">issuerName<pos:position pos:line="28" pos:column="38"/></name></decl>;<pos:position pos:line="28" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">Ssl<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">::<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">ASN1_INT_Pointer<pos:position pos:line="29" pos:column="26"/></name></name></type> <name pos:line="29" pos:column="27">issuerSerial<pos:position pos:line="29" pos:column="39"/></name></decl>;<pos:position pos:line="29" pos:column="40"/></decl_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name><name pos:line="30" pos:column="9">issuerKeyId<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">get<pos:position pos:line="30" pos:column="24"/></name></name><argument_list pos:line="30" pos:column="24">()<pos:position pos:line="30" pos:column="26"/></argument_list></call> <operator pos:line="30" pos:column="27">==<pos:position pos:line="30" pos:column="29"/></operator> <literal type="null" pos:line="30" pos:column="30">nullptr<pos:position pos:line="30" pos:column="37"/></literal> <operator pos:line="30" pos:column="38">||<pos:position pos:line="30" pos:column="40"/></operator> <name pos:line="30" pos:column="41">addIssuer<pos:position pos:line="30" pos:column="50"/></name></expr>)<pos:position pos:line="30" pos:column="51"/></condition><then pos:line="30" pos:column="51"> <block pos:line="30" pos:column="52">{
        <expr_stmt><expr><call><name><name pos:line="31" pos:column="9">issuerName<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">reset<pos:position pos:line="31" pos:column="25"/></name></name><argument_list pos:line="31" pos:column="25">(<argument><expr><call><name pos:line="31" pos:column="26">X509_NAME_dup<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><call><name pos:line="31" pos:column="40">X509_get_issuer_name<pos:position pos:line="31" pos:column="60"/></name><argument_list pos:line="31" pos:column="60">(<argument><expr><call><name><name pos:line="31" pos:column="61">issuerCert<pos:position pos:line="31" pos:column="71"/></name><operator pos:line="31" pos:column="71">.<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="72">get<pos:position pos:line="31" pos:column="75"/></name></name><argument_list pos:line="31" pos:column="75">()<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">issuerSerial<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">.<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">reset<pos:position pos:line="32" pos:column="27"/></name></name><argument_list pos:line="32" pos:column="27">(<argument><expr><call><name pos:line="32" pos:column="28">ASN1_INTEGER_dup<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><call><name pos:line="32" pos:column="45">X509_get_serialNumber<pos:position pos:line="32" pos:column="66"/></name><argument_list pos:line="32" pos:column="66">(<argument><expr><call><name><name pos:line="32" pos:column="67">issuerCert<pos:position pos:line="32" pos:column="77"/></name><operator pos:line="32" pos:column="77">.<pos:position pos:line="32" pos:column="78"/></operator><name pos:line="32" pos:column="78">get<pos:position pos:line="32" pos:column="81"/></name></name><argument_list pos:line="32" pos:column="81">()<pos:position pos:line="32" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="87"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">Ssl<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">::<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">AUTHORITY_KEYID_Pointer<pos:position pos:line="35" pos:column="33"/></name></name></type> <name pos:line="35" pos:column="34">theAuthKeyId<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><call><name pos:line="35" pos:column="47">AUTHORITY_KEYID_new<pos:position pos:line="35" pos:column="66"/></name><argument_list pos:line="35" pos:column="66">()<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></decl>;<pos:position pos:line="35" pos:column="70"/></decl_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><call><name><name pos:line="36" pos:column="10">theAuthKeyId<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">get<pos:position pos:line="36" pos:column="26"/></name></name><argument_list pos:line="36" pos:column="26">()<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29">
        <block type="pseudo"><return pos:line="37" pos:column="9">return <expr><literal type="boolean" pos:line="37" pos:column="16">false<pos:position pos:line="37" pos:column="21"/></literal></expr>;<pos:position pos:line="37" pos:column="22"/></return></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">theAuthKeyId<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">.<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">get<pos:position pos:line="38" pos:column="21"/></name></name><argument_list pos:line="38" pos:column="21">()<pos:position pos:line="38" pos:column="23"/></argument_list></call><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">keyid<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <call><name><name pos:line="38" pos:column="33">issuerKeyId<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">.<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">release<pos:position pos:line="38" pos:column="52"/></name></name><argument_list pos:line="38" pos:column="52">()<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">issuerName<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">&amp;&amp;<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="23">issuerSerial<pos:position pos:line="39" pos:column="35"/></name></expr>)<pos:position pos:line="39" pos:column="36"/></condition><then pos:line="39" pos:column="36"> <block pos:line="39" pos:column="37">{
        <decl_stmt><decl><type><name><name pos:line="40" pos:column="9">Ssl<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">::<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">GENERAL_NAME_STACK_Pointer<pos:position pos:line="40" pos:column="40"/></name></name></type> <name pos:line="40" pos:column="41">genNames<pos:position pos:line="40" pos:column="49"/></name><argument_list pos:line="40" pos:column="49">(<argument><expr><call><name pos:line="40" pos:column="50">sk_GENERAL_NAME_new_null<pos:position pos:line="40" pos:column="74"/></name><argument_list pos:line="40" pos:column="74">()<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></decl>;<pos:position pos:line="40" pos:column="78"/></decl_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name><name pos:line="41" pos:column="13">genNames<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">.<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">get<pos:position pos:line="41" pos:column="25"/></name></name><argument_list pos:line="41" pos:column="25">()<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28"> <block pos:line="41" pos:column="29">{
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<decl><type><name pos:line="42" pos:column="17">GENERAL_NAME<pos:position pos:line="42" pos:column="29"/></name> <modifier pos:line="42" pos:column="30">*<pos:position pos:line="42" pos:column="31"/></modifier></type><name pos:line="42" pos:column="31">aname<pos:position pos:line="42" pos:column="36"/></name> <init pos:line="42" pos:column="37">= <expr><call><name pos:line="42" pos:column="39">GENERAL_NAME_new<pos:position pos:line="42" pos:column="55"/></name><argument_list pos:line="42" pos:column="55">()<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr></init></decl>)<pos:position pos:line="42" pos:column="58"/></condition><then pos:line="42" pos:column="58"> <block pos:line="42" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">sk_GENERAL_NAME_push<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><call><name><name pos:line="43" pos:column="38">genNames<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">.<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">get<pos:position pos:line="43" pos:column="50"/></name></name><argument_list pos:line="43" pos:column="50">()<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">aname<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="44" pos:column="17">aname<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">type<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <name pos:line="44" pos:column="31">GEN_DIRNAME<pos:position pos:line="44" pos:column="42"/></name></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="45" pos:column="17">aname<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">-&gt;<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="24">d<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">.<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">dirn<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <call><name><name pos:line="45" pos:column="33">issuerName<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">.<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="44">release<pos:position pos:line="45" pos:column="51"/></name></name><argument_list pos:line="45" pos:column="51">()<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="46" pos:column="17">theAuthKeyId<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">.<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">get<pos:position pos:line="46" pos:column="33"/></name></name><argument_list pos:line="46" pos:column="33">()<pos:position pos:line="46" pos:column="35"/></argument_list></call><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">issuer<pos:position pos:line="46" pos:column="43"/></name> <operator pos:line="46" pos:column="44">=<pos:position pos:line="46" pos:column="45"/></operator> <call><name><name pos:line="46" pos:column="46">genNames<pos:position pos:line="46" pos:column="54"/></name><operator pos:line="46" pos:column="54">.<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="55">release<pos:position pos:line="46" pos:column="62"/></name></name><argument_list pos:line="46" pos:column="62">()<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="47" pos:column="17">theAuthKeyId<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">.<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">get<pos:position pos:line="47" pos:column="33"/></name></name><argument_list pos:line="47" pos:column="33">()<pos:position pos:line="47" pos:column="35"/></argument_list></call><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">serial<pos:position pos:line="47" pos:column="43"/></name> <operator pos:line="47" pos:column="44">=<pos:position pos:line="47" pos:column="45"/></operator> <call><name><name pos:line="47" pos:column="46">issuerSerial<pos:position pos:line="47" pos:column="58"/></name><operator pos:line="47" pos:column="58">.<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="59">release<pos:position pos:line="47" pos:column="66"/></name></name><argument_list pos:line="47" pos:column="66">()<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="52" pos:column="5">// The Authority Key Identifier extension should include KeyId or/and both</comment>
    <comment type="line" format="doxygen" pos:line="53" pos:column="5">/// issuer name and issuer serial</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">!<pos:position pos:line="54" pos:column="10"/></operator><call><name><name pos:line="54" pos:column="10">theAuthKeyId<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">.<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">get<pos:position pos:line="54" pos:column="26"/></name></name><argument_list pos:line="54" pos:column="26">()<pos:position pos:line="54" pos:column="28"/></argument_list></call><operator pos:line="54" pos:column="28">-&gt;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="30">keyid<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">&amp;&amp;<pos:position pos:line="54" pos:column="46"/></operator> <operator pos:line="54" pos:column="39">(<pos:position pos:line="54" pos:column="40"/></operator><operator pos:line="54" pos:column="40">!<pos:position pos:line="54" pos:column="41"/></operator><call><name><name pos:line="54" pos:column="41">theAuthKeyId<pos:position pos:line="54" pos:column="53"/></name><operator pos:line="54" pos:column="53">.<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="54">get<pos:position pos:line="54" pos:column="57"/></name></name><argument_list pos:line="54" pos:column="57">()<pos:position pos:line="54" pos:column="59"/></argument_list></call><operator pos:line="54" pos:column="59">-&gt;<pos:position pos:line="54" pos:column="64"/></operator><name pos:line="54" pos:column="61">issuer<pos:position pos:line="54" pos:column="67"/></name> <operator pos:line="54" pos:column="68">||<pos:position pos:line="54" pos:column="70"/></operator> <operator pos:line="54" pos:column="71">!<pos:position pos:line="54" pos:column="72"/></operator><call><name><name pos:line="54" pos:column="72">theAuthKeyId<pos:position pos:line="54" pos:column="84"/></name><operator pos:line="54" pos:column="84">.<pos:position pos:line="54" pos:column="85"/></operator><name pos:line="54" pos:column="85">get<pos:position pos:line="54" pos:column="88"/></name></name><argument_list pos:line="54" pos:column="88">()<pos:position pos:line="54" pos:column="90"/></argument_list></call><operator pos:line="54" pos:column="90">-&gt;<pos:position pos:line="54" pos:column="95"/></operator><name pos:line="54" pos:column="92">serial<pos:position pos:line="54" pos:column="98"/></name><operator pos:line="54" pos:column="98">)<pos:position pos:line="54" pos:column="99"/></operator></expr>)<pos:position pos:line="54" pos:column="100"/></condition><then pos:line="54" pos:column="100">
        <block type="pseudo"><return pos:line="55" pos:column="9">return <expr><literal type="boolean" pos:line="55" pos:column="16">false<pos:position pos:line="55" pos:column="21"/></literal></expr>;<pos:position pos:line="55" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="57" pos:column="5">const<pos:position pos:line="57" pos:column="10"/></specifier> <name pos:line="57" pos:column="11">X509V3_EXT_METHOD<pos:position pos:line="57" pos:column="28"/></name> <modifier pos:line="57" pos:column="29">*<pos:position pos:line="57" pos:column="30"/></modifier></type><name pos:line="57" pos:column="30">method<pos:position pos:line="57" pos:column="36"/></name> <init pos:line="57" pos:column="37">= <expr><call><name pos:line="57" pos:column="39">X509V3_EXT_get_nid<pos:position pos:line="57" pos:column="57"/></name><argument_list pos:line="57" pos:column="57">(<argument><expr><name pos:line="57" pos:column="58">NID_authority_key_identifier<pos:position pos:line="57" pos:column="86"/></name></expr></argument>)<pos:position pos:line="57" pos:column="87"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="88"/></decl_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">method<pos:position pos:line="58" pos:column="16"/></name></expr>)<pos:position pos:line="58" pos:column="17"/></condition><then pos:line="58" pos:column="17">
        <block type="pseudo"><return pos:line="59" pos:column="9">return <expr><literal type="boolean" pos:line="59" pos:column="16">false<pos:position pos:line="59" pos:column="21"/></literal></expr>;<pos:position pos:line="59" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="61" pos:column="5">unsigned<pos:position pos:line="61" pos:column="13"/></name> <name pos:line="61" pos:column="14">char<pos:position pos:line="61" pos:column="18"/></name> <modifier pos:line="61" pos:column="19">*<pos:position pos:line="61" pos:column="20"/></modifier></type><name pos:line="61" pos:column="20">ext_der<pos:position pos:line="61" pos:column="27"/></name> <init pos:line="61" pos:column="28">= <expr><name pos:line="61" pos:column="30">NULL<pos:position pos:line="61" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="61" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">int<pos:position pos:line="62" pos:column="8"/></name></type> <name pos:line="62" pos:column="9">ext_len<pos:position pos:line="62" pos:column="16"/></name> <init pos:line="62" pos:column="17">= <expr><call><name pos:line="62" pos:column="19">ASN1_item_i2d<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><operator pos:line="62" pos:column="33">(<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="34">ASN1_VALUE<pos:position pos:line="62" pos:column="44"/></name> <operator pos:line="62" pos:column="45">*<pos:position pos:line="62" pos:column="46"/></operator><operator pos:line="62" pos:column="46">)<pos:position pos:line="62" pos:column="47"/></operator><call><name><name pos:line="62" pos:column="47">theAuthKeyId<pos:position pos:line="62" pos:column="59"/></name><operator pos:line="62" pos:column="59">.<pos:position pos:line="62" pos:column="60"/></operator><name pos:line="62" pos:column="60">get<pos:position pos:line="62" pos:column="63"/></name></name><argument_list pos:line="62" pos:column="63">()<pos:position pos:line="62" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="62" pos:column="67">&amp;<pos:position pos:line="62" pos:column="72"/></operator><name pos:line="62" pos:column="68">ext_der<pos:position pos:line="62" pos:column="75"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="77">ASN1_ITEM_ptr<pos:position pos:line="62" pos:column="90"/></name><argument_list pos:line="62" pos:column="90">(<argument><expr><name><name pos:line="62" pos:column="91">method<pos:position pos:line="62" pos:column="97"/></name><operator pos:line="62" pos:column="97">-&gt;<pos:position pos:line="62" pos:column="102"/></operator><name pos:line="62" pos:column="99">it<pos:position pos:line="62" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="103"/></argument_list></call></expr></init></decl>;<pos:position pos:line="62" pos:column="104"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="63" pos:column="5">Ssl<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">::<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">ASN1_OCTET_STRING_Pointer<pos:position pos:line="63" pos:column="35"/></name></name></type> <name pos:line="63" pos:column="36">extOct<pos:position pos:line="63" pos:column="42"/></name><argument_list pos:line="63" pos:column="42">(<argument><expr><call><name pos:line="63" pos:column="43">ASN1_OCTET_STRING_new<pos:position pos:line="63" pos:column="64"/></name><argument_list pos:line="63" pos:column="64">()<pos:position pos:line="63" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></decl>;<pos:position pos:line="63" pos:column="68"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="64" pos:column="5">extOct<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">.<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="12">get<pos:position pos:line="64" pos:column="15"/></name></name><argument_list pos:line="64" pos:column="15">()<pos:position pos:line="64" pos:column="17"/></argument_list></call><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">data<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">ext_der<pos:position pos:line="64" pos:column="33"/></name></expr>;<pos:position pos:line="64" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="65" pos:column="5">extOct<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">.<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">get<pos:position pos:line="65" pos:column="15"/></name></name><argument_list pos:line="65" pos:column="15">()<pos:position pos:line="65" pos:column="17"/></argument_list></call><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">length<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">=<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">ext_len<pos:position pos:line="65" pos:column="35"/></name></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="66" pos:column="5">Ssl<pos:position pos:line="66" pos:column="8"/></name><operator pos:line="66" pos:column="8">::<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">X509_EXTENSION_Pointer<pos:position pos:line="66" pos:column="32"/></name></name></type> <name pos:line="66" pos:column="33">extAuthKeyId<pos:position pos:line="66" pos:column="45"/></name><argument_list pos:line="66" pos:column="45">(<argument><expr><call><name pos:line="66" pos:column="46">X509_EXTENSION_create_by_NID<pos:position pos:line="66" pos:column="74"/></name><argument_list pos:line="66" pos:column="74">(<argument><expr><name pos:line="66" pos:column="75">NULL<pos:position pos:line="66" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="81">NID_authority_key_identifier<pos:position pos:line="66" pos:column="109"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="111">0<pos:position pos:line="66" pos:column="112"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="66" pos:column="114">extOct<pos:position pos:line="66" pos:column="120"/></name><operator pos:line="66" pos:column="120">.<pos:position pos:line="66" pos:column="121"/></operator><name pos:line="66" pos:column="121">get<pos:position pos:line="66" pos:column="124"/></name></name><argument_list pos:line="66" pos:column="124">()<pos:position pos:line="66" pos:column="126"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="127"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="128"/></argument_list></decl>;<pos:position pos:line="66" pos:column="129"/></decl_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><operator pos:line="67" pos:column="9">!<pos:position pos:line="67" pos:column="10"/></operator><call><name><name pos:line="67" pos:column="10">extAuthKeyId<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">.<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">get<pos:position pos:line="67" pos:column="26"/></name></name><argument_list pos:line="67" pos:column="26">()<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29">
        <block type="pseudo"><return pos:line="68" pos:column="9">return <expr><literal type="boolean" pos:line="68" pos:column="16">false<pos:position pos:line="68" pos:column="21"/></literal></expr>;<pos:position pos:line="68" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="70" pos:column="5">extOct<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">.<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">release<pos:position pos:line="70" pos:column="19"/></name></name><argument_list pos:line="70" pos:column="19">()<pos:position pos:line="70" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><operator pos:line="71" pos:column="9">!<pos:position pos:line="71" pos:column="10"/></operator><call><name pos:line="71" pos:column="10">X509_add_ext<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><call><name><name pos:line="71" pos:column="23">cert<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">.<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">get<pos:position pos:line="71" pos:column="31"/></name></name><argument_list pos:line="71" pos:column="31">()<pos:position pos:line="71" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="71" pos:column="35">extAuthKeyId<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">.<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="48">get<pos:position pos:line="71" pos:column="51"/></name></name><argument_list pos:line="71" pos:column="51">()<pos:position pos:line="71" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="71" pos:column="55">-<pos:position pos:line="71" pos:column="56"/></operator><literal type="number" pos:line="71" pos:column="56">1<pos:position pos:line="71" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="59"/></condition><then pos:line="71" pos:column="59">
        <block type="pseudo"><return pos:line="72" pos:column="9">return <expr><literal type="boolean" pos:line="72" pos:column="16">false<pos:position pos:line="72" pos:column="21"/></literal></expr>;<pos:position pos:line="72" pos:column="22"/></return></block></then></if>

    <return pos:line="74" pos:column="5">return <expr><literal type="boolean" pos:line="74" pos:column="12">true<pos:position pos:line="74" pos:column="16"/></literal></expr>;<pos:position pos:line="74" pos:column="17"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

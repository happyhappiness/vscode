<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6252_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Format<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">Format<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">assemble<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">MemBuf<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="34">mb<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name><name pos:line="2" pos:column="44">AccessLogEntry<pos:position pos:line="2" pos:column="58"/></name><operator pos:line="2" pos:column="58">::<pos:position pos:line="2" pos:column="60"/></operator><name pos:line="2" pos:column="60">Pointer<pos:position pos:line="2" pos:column="67"/></name></name> <modifier pos:line="2" pos:column="68">&amp;<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="69">al<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">int<pos:position pos:line="2" pos:column="76"/></name></type> <name pos:line="2" pos:column="77">logSequenceNumber<pos:position pos:line="2" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="95"/></parameter_list> <specifier pos:line="2" pos:column="96">const<pos:position pos:line="2" pos:column="101"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">tmp<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">1024<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">String<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">sb<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">Token<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">fmt<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">format<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></init> <condition><expr><name pos:line="7" pos:column="31">fmt<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">!=<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name></expr>;<pos:position pos:line="7" pos:column="43"/></condition> <incr><expr><name pos:line="7" pos:column="44">fmt<pos:position pos:line="7" pos:column="47"/></name> <operator pos:line="7" pos:column="48">=<pos:position pos:line="7" pos:column="49"/></operator> <name><name pos:line="7" pos:column="50">fmt<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">next<pos:position pos:line="7" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="60"/></control> <block pos:line="7" pos:column="61">{	<comment type="block" pos:line="7" pos:column="65">/* for each token */</comment>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">out<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">quote<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">long<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">outint<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">doint<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">dofree<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">int64_t<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">outoff<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">dooff<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>

        <switch pos:line="16" pos:column="9">switch <condition pos:line="16" pos:column="16">(<expr><name><name pos:line="16" pos:column="17">fmt<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">type<pos:position pos:line="16" pos:column="26"/></name></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition> <block pos:line="16" pos:column="28">{

        <case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">LFT_NONE<pos:position pos:line="18" pos:column="22"/></name></expr>:<pos:position pos:line="18" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="19" pos:column="13">out<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <literal type="string" pos:line="19" pos:column="19">""<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>

        <case pos:line="22" pos:column="9">case <expr><name pos:line="22" pos:column="14">LFT_STRING<pos:position pos:line="22" pos:column="24"/></name></expr>:<pos:position pos:line="22" pos:column="25"/></case>
            <expr_stmt><expr><name pos:line="23" pos:column="13">out<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name><name pos:line="23" pos:column="19">fmt<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">data<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">.<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">string<pos:position pos:line="23" pos:column="35"/></name></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
            <break pos:line="24" pos:column="13">break;<pos:position pos:line="24" pos:column="19"/></break>

        <case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">LFT_CLIENT_IP_ADDRESS<pos:position pos:line="26" pos:column="35"/></name></expr>:<pos:position pos:line="26" pos:column="36"/></case>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">al<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">getLogClientIp<pos:position pos:line="27" pos:column="31"/></name></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">tmp<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="37">sizeof<argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">tmp<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">out<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">tmp<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>

        <case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">LFT_CLIENT_FQDN<pos:position pos:line="31" pos:column="29"/></name></expr>:<pos:position pos:line="31" pos:column="30"/></case>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><call><name><name pos:line="32" pos:column="17">al<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">cache<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">.<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">caddr<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">isAnyAddr<pos:position pos:line="32" pos:column="42"/></name></name><argument_list pos:line="32" pos:column="42">()<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45"> <comment type="line" pos:line="32" pos:column="46">// e.g., ICAP OPTIONS lack client</comment>
                <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">out<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="string" pos:line="33" pos:column="23">"-"<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt></block></then>
            <else pos:line="34" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">out<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">fqdncache_gethostbyaddr<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name><name pos:line="35" pos:column="47">al<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">cache<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">.<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="57">caddr<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">FQDN_LOOKUP_IF_MISS<pos:position pos:line="35" pos:column="83"/></name></expr></argument>)<pos:position pos:line="35" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="85"/></expr_stmt></block></else></if>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><operator pos:line="36" pos:column="17">!<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">out<pos:position pos:line="36" pos:column="21"/></name></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">out<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name><name pos:line="37" pos:column="23">al<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">cache<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">.<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">caddr<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">.<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">toStr<pos:position pos:line="37" pos:column="44"/></name></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">tmp<pos:position pos:line="37" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="37" pos:column="49">1024<pos:position pos:line="37" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></then></if>

            <break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break>

        <case pos:line="42" pos:column="9">case <expr><name pos:line="42" pos:column="14">LFT_CLIENT_PORT<pos:position pos:line="42" pos:column="29"/></name></expr>:<pos:position pos:line="42" pos:column="30"/></case>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name><name pos:line="43" pos:column="17">al<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="21">request<pos:position pos:line="43" pos:column="28"/></name></name></expr>)<pos:position pos:line="43" pos:column="29"/></condition><then pos:line="43" pos:column="29"> <block pos:line="43" pos:column="30">{
                <expr_stmt><expr><name pos:line="44" pos:column="17">outint<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <call><name><name pos:line="44" pos:column="26">al<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">request<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">-&gt;<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="39">client_addr<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">.<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="51">port<pos:position pos:line="44" pos:column="55"/></name></name><argument_list pos:line="44" pos:column="55">()<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="45" pos:column="17">doint<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="25">1<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>
            <break pos:line="47" pos:column="13">break;<pos:position pos:line="47" pos:column="19"/></break>

        <case pos:line="49" pos:column="9">case <expr><name pos:line="49" pos:column="14">LFT_CLIENT_EUI<pos:position pos:line="49" pos:column="28"/></name></expr>:<pos:position pos:line="49" pos:column="29"/></case>
<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><name pos:line="50" pos:column="5">USE_SQUID_EUI<pos:position pos:line="50" pos:column="18"/></name></expr></cpp:if>
            <comment type="line" pos:line="51" pos:column="13">// TODO make the ACL checklist have a direct link to any TCP details.</comment>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name><name pos:line="52" pos:column="17">al<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">request<pos:position pos:line="52" pos:column="28"/></name></name> <operator pos:line="52" pos:column="29">&amp;&amp;<pos:position pos:line="52" pos:column="39"/></operator> <call><name><name pos:line="52" pos:column="32">al<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">request<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">clientConnectionManager<pos:position pos:line="52" pos:column="68"/></name><operator pos:line="52" pos:column="68">.<pos:position pos:line="52" pos:column="69"/></operator><name pos:line="52" pos:column="69">valid<pos:position pos:line="52" pos:column="74"/></name></name><argument_list pos:line="52" pos:column="74">()<pos:position pos:line="52" pos:column="76"/></argument_list></call> <operator pos:line="52" pos:column="77">&amp;&amp;<pos:position pos:line="52" pos:column="87"/></operator> <name><name pos:line="52" pos:column="80">al<pos:position pos:line="52" pos:column="82"/></name><operator pos:line="52" pos:column="82">-&gt;<pos:position pos:line="52" pos:column="87"/></operator><name pos:line="52" pos:column="84">request<pos:position pos:line="52" pos:column="91"/></name><operator pos:line="52" pos:column="91">-&gt;<pos:position pos:line="52" pos:column="96"/></operator><name pos:line="52" pos:column="93">clientConnectionManager<pos:position pos:line="52" pos:column="116"/></name><operator pos:line="52" pos:column="116">-&gt;<pos:position pos:line="52" pos:column="121"/></operator><name pos:line="52" pos:column="118">clientConnection<pos:position pos:line="52" pos:column="134"/></name></name> <operator pos:line="52" pos:column="135">!=<pos:position pos:line="52" pos:column="137"/></operator> <name pos:line="52" pos:column="138">NULL<pos:position pos:line="52" pos:column="142"/></name></expr>)<pos:position pos:line="52" pos:column="143"/></condition><then pos:line="52" pos:column="143"> <block pos:line="52" pos:column="144">{
                <if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name><name pos:line="53" pos:column="21">al<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">request<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">clientConnectionManager<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">-&gt;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="59">clientConnection<pos:position pos:line="53" pos:column="75"/></name><operator pos:line="53" pos:column="75">-&gt;<pos:position pos:line="53" pos:column="80"/></operator><name pos:line="53" pos:column="77">remote<pos:position pos:line="53" pos:column="83"/></name><operator pos:line="53" pos:column="83">.<pos:position pos:line="53" pos:column="84"/></operator><name pos:line="53" pos:column="84">isIPv4<pos:position pos:line="53" pos:column="90"/></name></name><argument_list pos:line="53" pos:column="90">()<pos:position pos:line="53" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="93"/></condition><then pos:line="53" pos:column="93">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="54" pos:column="21">al<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">request<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">clientConnectionManager<pos:position pos:line="54" pos:column="57"/></name><operator pos:line="54" pos:column="57">-&gt;<pos:position pos:line="54" pos:column="62"/></operator><name pos:line="54" pos:column="59">clientConnection<pos:position pos:line="54" pos:column="75"/></name><operator pos:line="54" pos:column="75">-&gt;<pos:position pos:line="54" pos:column="80"/></operator><name pos:line="54" pos:column="77">remoteEui48<pos:position pos:line="54" pos:column="88"/></name><operator pos:line="54" pos:column="88">.<pos:position pos:line="54" pos:column="89"/></operator><name pos:line="54" pos:column="89">encode<pos:position pos:line="54" pos:column="95"/></name></name><argument_list pos:line="54" pos:column="95">(<argument><expr><name pos:line="54" pos:column="96">tmp<pos:position pos:line="54" pos:column="99"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="101">1024<pos:position pos:line="54" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="107"/></expr_stmt></block></then>
                <else pos:line="55" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="56" pos:column="21">al<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">request<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">clientConnectionManager<pos:position pos:line="56" pos:column="57"/></name><operator pos:line="56" pos:column="57">-&gt;<pos:position pos:line="56" pos:column="62"/></operator><name pos:line="56" pos:column="59">clientConnection<pos:position pos:line="56" pos:column="75"/></name><operator pos:line="56" pos:column="75">-&gt;<pos:position pos:line="56" pos:column="80"/></operator><name pos:line="56" pos:column="77">remoteEui64<pos:position pos:line="56" pos:column="88"/></name><operator pos:line="56" pos:column="88">.<pos:position pos:line="56" pos:column="89"/></operator><name pos:line="56" pos:column="89">encode<pos:position pos:line="56" pos:column="95"/></name></name><argument_list pos:line="56" pos:column="95">(<argument><expr><name pos:line="56" pos:column="96">tmp<pos:position pos:line="56" pos:column="99"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="101">1024<pos:position pos:line="56" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="107"/></expr_stmt></block></else></if>
                <expr_stmt><expr><name pos:line="57" pos:column="17">out<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">tmp<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>
<cpp:else pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">else<pos:position pos:line="59" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><name pos:line="60" pos:column="13">out<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <literal type="string" pos:line="60" pos:column="19">"-"<pos:position pos:line="60" pos:column="22"/></literal></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="62" pos:column="13">break;<pos:position pos:line="62" pos:column="19"/></break>

        <case pos:line="64" pos:column="9">case <expr><name pos:line="64" pos:column="14">LFT_SERVER_IP_ADDRESS<pos:position pos:line="64" pos:column="35"/></name></expr>:<pos:position pos:line="64" pos:column="36"/></case>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name><name pos:line="65" pos:column="17">al<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">hier<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">.<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">tcpServer<pos:position pos:line="65" pos:column="35"/></name></name> <operator pos:line="65" pos:column="36">!=<pos:position pos:line="65" pos:column="38"/></operator> <name pos:line="65" pos:column="39">NULL<pos:position pos:line="65" pos:column="43"/></name></expr>)<pos:position pos:line="65" pos:column="44"/></condition><then pos:line="65" pos:column="44"> <block pos:line="65" pos:column="45">{
                <expr_stmt><expr><name pos:line="66" pos:column="17">out<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">=<pos:position pos:line="66" pos:column="22"/></operator> <call><name><name pos:line="66" pos:column="23">al<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">hier<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">.<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">tcpServer<pos:position pos:line="66" pos:column="41"/></name><operator pos:line="66" pos:column="41">-&gt;<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="43">remote<pos:position pos:line="66" pos:column="49"/></name><operator pos:line="66" pos:column="49">.<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="50">toStr<pos:position pos:line="66" pos:column="55"/></name></name><argument_list pos:line="66" pos:column="55">(<argument><expr><name pos:line="66" pos:column="56">tmp<pos:position pos:line="66" pos:column="59"/></name></expr></argument>,<argument><expr><sizeof pos:line="66" pos:column="60">sizeof<argument_list pos:line="66" pos:column="66">(<argument><expr><name pos:line="66" pos:column="67">tmp<pos:position pos:line="66" pos:column="70"/></name></expr></argument>)<pos:position pos:line="66" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="67" pos:column="14"/></block></then></if>
            <break pos:line="68" pos:column="13">break;<pos:position pos:line="68" pos:column="19"/></break>

        <case pos:line="70" pos:column="9">case <expr><name pos:line="70" pos:column="14">LFT_SERVER_FQDN_OR_PEER_NAME<pos:position pos:line="70" pos:column="42"/></name></expr>:<pos:position pos:line="70" pos:column="43"/></case>
            <expr_stmt><expr><name pos:line="71" pos:column="13">out<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <name><name pos:line="71" pos:column="19">al<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">hier<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">.<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">host<pos:position pos:line="71" pos:column="32"/></name></name></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>
            <break pos:line="72" pos:column="13">break;<pos:position pos:line="72" pos:column="19"/></break>

        <case pos:line="74" pos:column="9">case <expr><name pos:line="74" pos:column="14">LFT_SERVER_PORT<pos:position pos:line="74" pos:column="29"/></name></expr>:<pos:position pos:line="74" pos:column="30"/></case>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name><name pos:line="75" pos:column="17">al<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">-&gt;<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="21">hier<pos:position pos:line="75" pos:column="25"/></name><operator pos:line="75" pos:column="25">.<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">tcpServer<pos:position pos:line="75" pos:column="35"/></name></name> <operator pos:line="75" pos:column="36">!=<pos:position pos:line="75" pos:column="38"/></operator> <name pos:line="75" pos:column="39">NULL<pos:position pos:line="75" pos:column="43"/></name></expr>)<pos:position pos:line="75" pos:column="44"/></condition><then pos:line="75" pos:column="44"> <block pos:line="75" pos:column="45">{
                <expr_stmt><expr><name pos:line="76" pos:column="17">outint<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <call><name><name pos:line="76" pos:column="26">al<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">-&gt;<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="30">hier<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">.<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="35">tcpServer<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">remote<pos:position pos:line="76" pos:column="52"/></name><operator pos:line="76" pos:column="52">.<pos:position pos:line="76" pos:column="53"/></operator><name pos:line="76" pos:column="53">port<pos:position pos:line="76" pos:column="57"/></name></name><argument_list pos:line="76" pos:column="57">()<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><name pos:line="77" pos:column="17">doint<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <literal type="number" pos:line="77" pos:column="25">1<pos:position pos:line="77" pos:column="26"/></literal></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="78" pos:column="14"/></block></then></if>
            <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>

        <case pos:line="81" pos:column="9">case <expr><name pos:line="81" pos:column="14">LFT_LOCAL_LISTENING_IP<pos:position pos:line="81" pos:column="36"/></name></expr>:<pos:position pos:line="81" pos:column="37"/></case> <block pos:line="81" pos:column="38">{
            <comment type="line" pos:line="82" pos:column="13">// avoid logging a dash if we have reliable info</comment>
            <decl_stmt><decl><type><specifier pos:line="83" pos:column="13">const<pos:position pos:line="83" pos:column="18"/></specifier> <name pos:line="83" pos:column="19">bool<pos:position pos:line="83" pos:column="23"/></name></type> <name pos:line="83" pos:column="24">interceptedAtKnownPort<pos:position pos:line="83" pos:column="46"/></name> <init pos:line="83" pos:column="47">= <expr><ternary><condition><expr><name><name pos:line="83" pos:column="49">al<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">request<pos:position pos:line="83" pos:column="60"/></name></name></expr> ?<pos:position pos:line="83" pos:column="62"/></condition><then pos:line="83" pos:column="62">
                                                <expr><operator pos:line="84" pos:column="49">(<pos:position pos:line="84" pos:column="50"/></operator><name><name pos:line="84" pos:column="50">al<pos:position pos:line="84" pos:column="52"/></name><operator pos:line="84" pos:column="52">-&gt;<pos:position pos:line="84" pos:column="57"/></operator><name pos:line="84" pos:column="54">request<pos:position pos:line="84" pos:column="61"/></name><operator pos:line="84" pos:column="61">-&gt;<pos:position pos:line="84" pos:column="66"/></operator><name pos:line="84" pos:column="63">flags<pos:position pos:line="84" pos:column="68"/></name><operator pos:line="84" pos:column="68">.<pos:position pos:line="84" pos:column="69"/></operator><name pos:line="84" pos:column="69">interceptTproxy<pos:position pos:line="84" pos:column="84"/></name></name> <operator pos:line="84" pos:column="85">||<pos:position pos:line="84" pos:column="87"/></operator>
                                                 <name><name pos:line="85" pos:column="50">al<pos:position pos:line="85" pos:column="52"/></name><operator pos:line="85" pos:column="52">-&gt;<pos:position pos:line="85" pos:column="57"/></operator><name pos:line="85" pos:column="54">request<pos:position pos:line="85" pos:column="61"/></name><operator pos:line="85" pos:column="61">-&gt;<pos:position pos:line="85" pos:column="66"/></operator><name pos:line="85" pos:column="63">flags<pos:position pos:line="85" pos:column="68"/></name><operator pos:line="85" pos:column="68">.<pos:position pos:line="85" pos:column="69"/></operator><name pos:line="85" pos:column="69">intercepted<pos:position pos:line="85" pos:column="80"/></name></name><operator pos:line="85" pos:column="80">)<pos:position pos:line="85" pos:column="81"/></operator> <operator pos:line="85" pos:column="82">&amp;&amp;<pos:position pos:line="85" pos:column="92"/></operator> <name><name pos:line="85" pos:column="85">al<pos:position pos:line="85" pos:column="87"/></name><operator pos:line="85" pos:column="87">-&gt;<pos:position pos:line="85" pos:column="92"/></operator><name pos:line="85" pos:column="89">cache<pos:position pos:line="85" pos:column="94"/></name><operator pos:line="85" pos:column="94">.<pos:position pos:line="85" pos:column="95"/></operator><name pos:line="85" pos:column="95">port<pos:position pos:line="85" pos:column="99"/></name></name></expr> <pos:position pos:line="85" pos:column="100"/></then><else pos:line="85" pos:column="100">:
                                                <expr><literal type="boolean" pos:line="86" pos:column="49">false<pos:position pos:line="86" pos:column="54"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="86" pos:column="55"/></decl_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name pos:line="87" pos:column="17">interceptedAtKnownPort<pos:position pos:line="87" pos:column="39"/></name></expr>)<pos:position pos:line="87" pos:column="40"/></condition><then pos:line="87" pos:column="40"> <block pos:line="87" pos:column="41">{
                <decl_stmt><decl><type><specifier pos:line="88" pos:column="17">const<pos:position pos:line="88" pos:column="22"/></specifier> <name pos:line="88" pos:column="23">bool<pos:position pos:line="88" pos:column="27"/></name></type> <name pos:line="88" pos:column="28">portAddressConfigured<pos:position pos:line="88" pos:column="49"/></name> <init pos:line="88" pos:column="50">= <expr><operator pos:line="88" pos:column="52">!<pos:position pos:line="88" pos:column="53"/></operator><call><name><name pos:line="88" pos:column="53">al<pos:position pos:line="88" pos:column="55"/></name><operator pos:line="88" pos:column="55">-&gt;<pos:position pos:line="88" pos:column="60"/></operator><name pos:line="88" pos:column="57">cache<pos:position pos:line="88" pos:column="62"/></name><operator pos:line="88" pos:column="62">.<pos:position pos:line="88" pos:column="63"/></operator><name pos:line="88" pos:column="63">port<pos:position pos:line="88" pos:column="67"/></name><operator pos:line="88" pos:column="67">-&gt;<pos:position pos:line="88" pos:column="72"/></operator><name pos:line="88" pos:column="69">s<pos:position pos:line="88" pos:column="70"/></name><operator pos:line="88" pos:column="70">.<pos:position pos:line="88" pos:column="71"/></operator><name pos:line="88" pos:column="71">isAnyAddr<pos:position pos:line="88" pos:column="80"/></name></name><argument_list pos:line="88" pos:column="80">()<pos:position pos:line="88" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="88" pos:column="83"/></decl_stmt>
                <if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><name pos:line="89" pos:column="21">portAddressConfigured<pos:position pos:line="89" pos:column="42"/></name></expr>)<pos:position pos:line="89" pos:column="43"/></condition><then pos:line="89" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="21">out<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">=<pos:position pos:line="90" pos:column="26"/></operator> <call><name><name pos:line="90" pos:column="27">al<pos:position pos:line="90" pos:column="29"/></name><operator pos:line="90" pos:column="29">-&gt;<pos:position pos:line="90" pos:column="34"/></operator><name pos:line="90" pos:column="31">cache<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">.<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="37">port<pos:position pos:line="90" pos:column="41"/></name><operator pos:line="90" pos:column="41">-&gt;<pos:position pos:line="90" pos:column="46"/></operator><name pos:line="90" pos:column="43">s<pos:position pos:line="90" pos:column="44"/></name><operator pos:line="90" pos:column="44">.<pos:position pos:line="90" pos:column="45"/></operator><name pos:line="90" pos:column="45">toStr<pos:position pos:line="90" pos:column="50"/></name></name><argument_list pos:line="90" pos:column="50">(<argument><expr><name pos:line="90" pos:column="51">tmp<pos:position pos:line="90" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="56">sizeof<argument_list pos:line="90" pos:column="62">(<argument><expr><name pos:line="90" pos:column="63">tmp<pos:position pos:line="90" pos:column="66"/></name></expr></argument>)<pos:position pos:line="90" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="69"/></expr_stmt></block></then></if>
            }<pos:position pos:line="91" pos:column="14"/></block></then> <elseif pos:line="91" pos:column="15">else <if pos:line="91" pos:column="20">if <condition pos:line="91" pos:column="23">(<expr><name><name pos:line="91" pos:column="24">al<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">-&gt;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="28">tcpClient<pos:position pos:line="91" pos:column="37"/></name></name> <operator pos:line="91" pos:column="38">!=<pos:position pos:line="91" pos:column="40"/></operator> <name pos:line="91" pos:column="41">NULL<pos:position pos:line="91" pos:column="45"/></name></expr>)<pos:position pos:line="91" pos:column="46"/></condition><then pos:line="91" pos:column="46">
                <block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="17">out<pos:position pos:line="92" pos:column="20"/></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <call><name><name pos:line="92" pos:column="23">al<pos:position pos:line="92" pos:column="25"/></name><operator pos:line="92" pos:column="25">-&gt;<pos:position pos:line="92" pos:column="30"/></operator><name pos:line="92" pos:column="27">tcpClient<pos:position pos:line="92" pos:column="36"/></name><operator pos:line="92" pos:column="36">-&gt;<pos:position pos:line="92" pos:column="41"/></operator><name pos:line="92" pos:column="38">local<pos:position pos:line="92" pos:column="43"/></name><operator pos:line="92" pos:column="43">.<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="44">toStr<pos:position pos:line="92" pos:column="49"/></name></name><argument_list pos:line="92" pos:column="49">(<argument><expr><name pos:line="92" pos:column="50">tmp<pos:position pos:line="92" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="55">sizeof<argument_list pos:line="92" pos:column="61">(<argument><expr><name pos:line="92" pos:column="62">tmp<pos:position pos:line="92" pos:column="65"/></name></expr></argument>)<pos:position pos:line="92" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="92" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="68"/></expr_stmt></block></then></if></elseif></if>
        }<pos:position pos:line="93" pos:column="10"/></block>
        <break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>

        <case pos:line="96" pos:column="9">case <expr><name pos:line="96" pos:column="14">LFT_CLIENT_LOCAL_IP<pos:position pos:line="96" pos:column="33"/></name></expr>:<pos:position pos:line="96" pos:column="34"/></case>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><name><name pos:line="97" pos:column="17">al<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">-&gt;<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="21">tcpClient<pos:position pos:line="97" pos:column="30"/></name></name> <operator pos:line="97" pos:column="31">!=<pos:position pos:line="97" pos:column="33"/></operator> <name pos:line="97" pos:column="34">NULL<pos:position pos:line="97" pos:column="38"/></name></expr>)<pos:position pos:line="97" pos:column="39"/></condition><then pos:line="97" pos:column="39"> <block pos:line="97" pos:column="40">{
                <expr_stmt><expr><name pos:line="98" pos:column="17">out<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <call><name><name pos:line="98" pos:column="23">al<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">-&gt;<pos:position pos:line="98" pos:column="30"/></operator><name pos:line="98" pos:column="27">tcpClient<pos:position pos:line="98" pos:column="36"/></name><operator pos:line="98" pos:column="36">-&gt;<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="38">local<pos:position pos:line="98" pos:column="43"/></name><operator pos:line="98" pos:column="43">.<pos:position pos:line="98" pos:column="44"/></operator><name pos:line="98" pos:column="44">toStr<pos:position pos:line="98" pos:column="49"/></name></name><argument_list pos:line="98" pos:column="49">(<argument><expr><name pos:line="98" pos:column="50">tmp<pos:position pos:line="98" pos:column="53"/></name></expr></argument>,<argument><expr><sizeof pos:line="98" pos:column="54">sizeof<argument_list pos:line="98" pos:column="60">(<argument><expr><name pos:line="98" pos:column="61">tmp<pos:position pos:line="98" pos:column="64"/></name></expr></argument>)<pos:position pos:line="98" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="98" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="99" pos:column="14"/></block></then></if>
            <break pos:line="100" pos:column="13">break;<pos:position pos:line="100" pos:column="19"/></break>

        <case pos:line="102" pos:column="9">case <expr><name pos:line="102" pos:column="14">LFT_CLIENT_LOCAL_TOS<pos:position pos:line="102" pos:column="34"/></name></expr>:<pos:position pos:line="102" pos:column="35"/></case>
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name><name pos:line="103" pos:column="17">al<pos:position pos:line="103" pos:column="19"/></name><operator pos:line="103" pos:column="19">-&gt;<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="21">tcpClient<pos:position pos:line="103" pos:column="30"/></name></name> <operator pos:line="103" pos:column="31">!=<pos:position pos:line="103" pos:column="33"/></operator> <name pos:line="103" pos:column="34">NULL<pos:position pos:line="103" pos:column="38"/></name></expr>)<pos:position pos:line="103" pos:column="39"/></condition><then pos:line="103" pos:column="39"> <block pos:line="103" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="104" pos:column="17">snprintf<pos:position pos:line="104" pos:column="25"/></name><argument_list pos:line="104" pos:column="25">(<argument><expr><name pos:line="104" pos:column="26">tmp<pos:position pos:line="104" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="31">sizeof<argument_list pos:line="104" pos:column="37">(<argument><expr><name pos:line="104" pos:column="38">tmp<pos:position pos:line="104" pos:column="41"/></name></expr></argument>)<pos:position pos:line="104" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="44">"0x%x"<pos:position pos:line="104" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="52">(<pos:position pos:line="104" pos:column="53"/></operator><name pos:line="104" pos:column="53">uint32_t<pos:position pos:line="104" pos:column="61"/></name><operator pos:line="104" pos:column="61">)<pos:position pos:line="104" pos:column="62"/></operator><name><name pos:line="104" pos:column="62">al<pos:position pos:line="104" pos:column="64"/></name><operator pos:line="104" pos:column="64">-&gt;<pos:position pos:line="104" pos:column="69"/></operator><name pos:line="104" pos:column="66">tcpClient<pos:position pos:line="104" pos:column="75"/></name><operator pos:line="104" pos:column="75">-&gt;<pos:position pos:line="104" pos:column="80"/></operator><name pos:line="104" pos:column="77">tos<pos:position pos:line="104" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="82"/></expr_stmt>
                <expr_stmt><expr><name pos:line="105" pos:column="17">out<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">=<pos:position pos:line="105" pos:column="22"/></operator> <name pos:line="105" pos:column="23">tmp<pos:position pos:line="105" pos:column="26"/></name></expr>;<pos:position pos:line="105" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="106" pos:column="14"/></block></then></if>
            <break pos:line="107" pos:column="13">break;<pos:position pos:line="107" pos:column="19"/></break>

        <case pos:line="109" pos:column="9">case <expr><name pos:line="109" pos:column="14">LFT_CLIENT_LOCAL_NFMARK<pos:position pos:line="109" pos:column="37"/></name></expr>:<pos:position pos:line="109" pos:column="38"/></case>
            <if pos:line="110" pos:column="13">if <condition pos:line="110" pos:column="16">(<expr><name><name pos:line="110" pos:column="17">al<pos:position pos:line="110" pos:column="19"/></name><operator pos:line="110" pos:column="19">-&gt;<pos:position pos:line="110" pos:column="24"/></operator><name pos:line="110" pos:column="21">tcpClient<pos:position pos:line="110" pos:column="30"/></name></name> <operator pos:line="110" pos:column="31">!=<pos:position pos:line="110" pos:column="33"/></operator> <name pos:line="110" pos:column="34">NULL<pos:position pos:line="110" pos:column="38"/></name></expr>)<pos:position pos:line="110" pos:column="39"/></condition><then pos:line="110" pos:column="39"> <block pos:line="110" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="111" pos:column="17">snprintf<pos:position pos:line="111" pos:column="25"/></name><argument_list pos:line="111" pos:column="25">(<argument><expr><name pos:line="111" pos:column="26">tmp<pos:position pos:line="111" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="31">sizeof<argument_list pos:line="111" pos:column="37">(<argument><expr><name pos:line="111" pos:column="38">tmp<pos:position pos:line="111" pos:column="41"/></name></expr></argument>)<pos:position pos:line="111" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="44">"0x%x"<pos:position pos:line="111" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="52">al<pos:position pos:line="111" pos:column="54"/></name><operator pos:line="111" pos:column="54">-&gt;<pos:position pos:line="111" pos:column="59"/></operator><name pos:line="111" pos:column="56">tcpClient<pos:position pos:line="111" pos:column="65"/></name><operator pos:line="111" pos:column="65">-&gt;<pos:position pos:line="111" pos:column="70"/></operator><name pos:line="111" pos:column="67">nfmark<pos:position pos:line="111" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><name pos:line="112" pos:column="17">out<pos:position pos:line="112" pos:column="20"/></name> <operator pos:line="112" pos:column="21">=<pos:position pos:line="112" pos:column="22"/></operator> <name pos:line="112" pos:column="23">tmp<pos:position pos:line="112" pos:column="26"/></name></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="113" pos:column="14"/></block></then></if>
            <break pos:line="114" pos:column="13">break;<pos:position pos:line="114" pos:column="19"/></break>

        <case pos:line="116" pos:column="9">case <expr><name pos:line="116" pos:column="14">LFT_LOCAL_LISTENING_PORT<pos:position pos:line="116" pos:column="38"/></name></expr>:<pos:position pos:line="116" pos:column="39"/></case>
            <if pos:line="117" pos:column="13">if <condition pos:line="117" pos:column="16">(<expr><name><name pos:line="117" pos:column="17">al<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">-&gt;<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="21">cache<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">.<pos:position pos:line="117" pos:column="27"/></operator><name pos:line="117" pos:column="27">port<pos:position pos:line="117" pos:column="31"/></name></name></expr>)<pos:position pos:line="117" pos:column="32"/></condition><then pos:line="117" pos:column="32"> <block pos:line="117" pos:column="33">{
                <expr_stmt><expr><name pos:line="118" pos:column="17">outint<pos:position pos:line="118" pos:column="23"/></name> <operator pos:line="118" pos:column="24">=<pos:position pos:line="118" pos:column="25"/></operator> <call><name><name pos:line="118" pos:column="26">al<pos:position pos:line="118" pos:column="28"/></name><operator pos:line="118" pos:column="28">-&gt;<pos:position pos:line="118" pos:column="33"/></operator><name pos:line="118" pos:column="30">cache<pos:position pos:line="118" pos:column="35"/></name><operator pos:line="118" pos:column="35">.<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="36">port<pos:position pos:line="118" pos:column="40"/></name><operator pos:line="118" pos:column="40">-&gt;<pos:position pos:line="118" pos:column="45"/></operator><name pos:line="118" pos:column="42">s<pos:position pos:line="118" pos:column="43"/></name><operator pos:line="118" pos:column="43">.<pos:position pos:line="118" pos:column="44"/></operator><name pos:line="118" pos:column="44">port<pos:position pos:line="118" pos:column="48"/></name></name><argument_list pos:line="118" pos:column="48">()<pos:position pos:line="118" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="119" pos:column="17">doint<pos:position pos:line="119" pos:column="22"/></name> <operator pos:line="119" pos:column="23">=<pos:position pos:line="119" pos:column="24"/></operator> <literal type="number" pos:line="119" pos:column="25">1<pos:position pos:line="119" pos:column="26"/></literal></expr>;<pos:position pos:line="119" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="120" pos:column="14"/></block></then></if>
            <break pos:line="121" pos:column="13">break;<pos:position pos:line="121" pos:column="19"/></break>

        <case pos:line="123" pos:column="9">case <expr><name pos:line="123" pos:column="14">LFT_CLIENT_LOCAL_PORT<pos:position pos:line="123" pos:column="35"/></name></expr>:<pos:position pos:line="123" pos:column="36"/></case>
            <if pos:line="124" pos:column="13">if <condition pos:line="124" pos:column="16">(<expr><name><name pos:line="124" pos:column="17">al<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">-&gt;<pos:position pos:line="124" pos:column="24"/></operator><name pos:line="124" pos:column="21">tcpClient<pos:position pos:line="124" pos:column="30"/></name></name> <operator pos:line="124" pos:column="31">!=<pos:position pos:line="124" pos:column="33"/></operator> <name pos:line="124" pos:column="34">NULL<pos:position pos:line="124" pos:column="38"/></name></expr>)<pos:position pos:line="124" pos:column="39"/></condition><then pos:line="124" pos:column="39"> <block pos:line="124" pos:column="40">{
                <expr_stmt><expr><name pos:line="125" pos:column="17">outint<pos:position pos:line="125" pos:column="23"/></name> <operator pos:line="125" pos:column="24">=<pos:position pos:line="125" pos:column="25"/></operator> <call><name><name pos:line="125" pos:column="26">al<pos:position pos:line="125" pos:column="28"/></name><operator pos:line="125" pos:column="28">-&gt;<pos:position pos:line="125" pos:column="33"/></operator><name pos:line="125" pos:column="30">tcpClient<pos:position pos:line="125" pos:column="39"/></name><operator pos:line="125" pos:column="39">-&gt;<pos:position pos:line="125" pos:column="44"/></operator><name pos:line="125" pos:column="41">local<pos:position pos:line="125" pos:column="46"/></name><operator pos:line="125" pos:column="46">.<pos:position pos:line="125" pos:column="47"/></operator><name pos:line="125" pos:column="47">port<pos:position pos:line="125" pos:column="51"/></name></name><argument_list pos:line="125" pos:column="51">()<pos:position pos:line="125" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name pos:line="126" pos:column="17">doint<pos:position pos:line="126" pos:column="22"/></name> <operator pos:line="126" pos:column="23">=<pos:position pos:line="126" pos:column="24"/></operator> <literal type="number" pos:line="126" pos:column="25">1<pos:position pos:line="126" pos:column="26"/></literal></expr>;<pos:position pos:line="126" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="127" pos:column="14"/></block></then></if>
            <break pos:line="128" pos:column="13">break;<pos:position pos:line="128" pos:column="19"/></break>

        <case pos:line="130" pos:column="9">case <expr><name pos:line="130" pos:column="14">LFT_SERVER_LOCAL_IP_OLD_27<pos:position pos:line="130" pos:column="40"/></name></expr>:<pos:position pos:line="130" pos:column="41"/></case>
        <case pos:line="131" pos:column="9">case <expr><name pos:line="131" pos:column="14">LFT_SERVER_LOCAL_IP<pos:position pos:line="131" pos:column="33"/></name></expr>:<pos:position pos:line="131" pos:column="34"/></case>
            <if pos:line="132" pos:column="13">if <condition pos:line="132" pos:column="16">(<expr><name><name pos:line="132" pos:column="17">al<pos:position pos:line="132" pos:column="19"/></name><operator pos:line="132" pos:column="19">-&gt;<pos:position pos:line="132" pos:column="24"/></operator><name pos:line="132" pos:column="21">hier<pos:position pos:line="132" pos:column="25"/></name><operator pos:line="132" pos:column="25">.<pos:position pos:line="132" pos:column="26"/></operator><name pos:line="132" pos:column="26">tcpServer<pos:position pos:line="132" pos:column="35"/></name></name> <operator pos:line="132" pos:column="36">!=<pos:position pos:line="132" pos:column="38"/></operator> <name pos:line="132" pos:column="39">NULL<pos:position pos:line="132" pos:column="43"/></name></expr>)<pos:position pos:line="132" pos:column="44"/></condition><then pos:line="132" pos:column="44"> <block pos:line="132" pos:column="45">{
                <expr_stmt><expr><name pos:line="133" pos:column="17">out<pos:position pos:line="133" pos:column="20"/></name> <operator pos:line="133" pos:column="21">=<pos:position pos:line="133" pos:column="22"/></operator> <call><name><name pos:line="133" pos:column="23">al<pos:position pos:line="133" pos:column="25"/></name><operator pos:line="133" pos:column="25">-&gt;<pos:position pos:line="133" pos:column="30"/></operator><name pos:line="133" pos:column="27">hier<pos:position pos:line="133" pos:column="31"/></name><operator pos:line="133" pos:column="31">.<pos:position pos:line="133" pos:column="32"/></operator><name pos:line="133" pos:column="32">tcpServer<pos:position pos:line="133" pos:column="41"/></name><operator pos:line="133" pos:column="41">-&gt;<pos:position pos:line="133" pos:column="46"/></operator><name pos:line="133" pos:column="43">local<pos:position pos:line="133" pos:column="48"/></name><operator pos:line="133" pos:column="48">.<pos:position pos:line="133" pos:column="49"/></operator><name pos:line="133" pos:column="49">toStr<pos:position pos:line="133" pos:column="54"/></name></name><argument_list pos:line="133" pos:column="54">(<argument><expr><name pos:line="133" pos:column="55">tmp<pos:position pos:line="133" pos:column="58"/></name></expr></argument>,<argument><expr><sizeof pos:line="133" pos:column="59">sizeof<argument_list pos:line="133" pos:column="65">(<argument><expr><name pos:line="133" pos:column="66">tmp<pos:position pos:line="133" pos:column="69"/></name></expr></argument>)<pos:position pos:line="133" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="133" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="134" pos:column="14"/></block></then></if>
            <break pos:line="135" pos:column="13">break;<pos:position pos:line="135" pos:column="19"/></break>

        <case pos:line="137" pos:column="9">case <expr><name pos:line="137" pos:column="14">LFT_SERVER_LOCAL_PORT<pos:position pos:line="137" pos:column="35"/></name></expr>:<pos:position pos:line="137" pos:column="36"/></case>
            <if pos:line="138" pos:column="13">if <condition pos:line="138" pos:column="16">(<expr><name><name pos:line="138" pos:column="17">al<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">-&gt;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="21">hier<pos:position pos:line="138" pos:column="25"/></name><operator pos:line="138" pos:column="25">.<pos:position pos:line="138" pos:column="26"/></operator><name pos:line="138" pos:column="26">tcpServer<pos:position pos:line="138" pos:column="35"/></name></name> <operator pos:line="138" pos:column="36">!=<pos:position pos:line="138" pos:column="38"/></operator> <name pos:line="138" pos:column="39">NULL<pos:position pos:line="138" pos:column="43"/></name></expr>)<pos:position pos:line="138" pos:column="44"/></condition><then pos:line="138" pos:column="44"> <block pos:line="138" pos:column="45">{
                <expr_stmt><expr><name pos:line="139" pos:column="17">outint<pos:position pos:line="139" pos:column="23"/></name> <operator pos:line="139" pos:column="24">=<pos:position pos:line="139" pos:column="25"/></operator> <call><name><name pos:line="139" pos:column="26">al<pos:position pos:line="139" pos:column="28"/></name><operator pos:line="139" pos:column="28">-&gt;<pos:position pos:line="139" pos:column="33"/></operator><name pos:line="139" pos:column="30">hier<pos:position pos:line="139" pos:column="34"/></name><operator pos:line="139" pos:column="34">.<pos:position pos:line="139" pos:column="35"/></operator><name pos:line="139" pos:column="35">tcpServer<pos:position pos:line="139" pos:column="44"/></name><operator pos:line="139" pos:column="44">-&gt;<pos:position pos:line="139" pos:column="49"/></operator><name pos:line="139" pos:column="46">local<pos:position pos:line="139" pos:column="51"/></name><operator pos:line="139" pos:column="51">.<pos:position pos:line="139" pos:column="52"/></operator><name pos:line="139" pos:column="52">port<pos:position pos:line="139" pos:column="56"/></name></name><argument_list pos:line="139" pos:column="56">()<pos:position pos:line="139" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="140" pos:column="17">doint<pos:position pos:line="140" pos:column="22"/></name> <operator pos:line="140" pos:column="23">=<pos:position pos:line="140" pos:column="24"/></operator> <literal type="number" pos:line="140" pos:column="25">1<pos:position pos:line="140" pos:column="26"/></literal></expr>;<pos:position pos:line="140" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="141" pos:column="14"/></block></then></if>

            <break pos:line="143" pos:column="13">break;<pos:position pos:line="143" pos:column="19"/></break>

        <case pos:line="145" pos:column="9">case <expr><name pos:line="145" pos:column="14">LFT_SERVER_LOCAL_TOS<pos:position pos:line="145" pos:column="34"/></name></expr>:<pos:position pos:line="145" pos:column="35"/></case>
            <if pos:line="146" pos:column="13">if <condition pos:line="146" pos:column="16">(<expr><name><name pos:line="146" pos:column="17">al<pos:position pos:line="146" pos:column="19"/></name><operator pos:line="146" pos:column="19">-&gt;<pos:position pos:line="146" pos:column="24"/></operator><name pos:line="146" pos:column="21">hier<pos:position pos:line="146" pos:column="25"/></name><operator pos:line="146" pos:column="25">.<pos:position pos:line="146" pos:column="26"/></operator><name pos:line="146" pos:column="26">tcpServer<pos:position pos:line="146" pos:column="35"/></name></name> <operator pos:line="146" pos:column="36">!=<pos:position pos:line="146" pos:column="38"/></operator> <name pos:line="146" pos:column="39">NULL<pos:position pos:line="146" pos:column="43"/></name></expr>)<pos:position pos:line="146" pos:column="44"/></condition><then pos:line="146" pos:column="44"> <block pos:line="146" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="147" pos:column="17">snprintf<pos:position pos:line="147" pos:column="25"/></name><argument_list pos:line="147" pos:column="25">(<argument><expr><name pos:line="147" pos:column="26">tmp<pos:position pos:line="147" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="147" pos:column="31">sizeof<argument_list pos:line="147" pos:column="37">(<argument><expr><name pos:line="147" pos:column="38">tmp<pos:position pos:line="147" pos:column="41"/></name></expr></argument>)<pos:position pos:line="147" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="44">"0x%x"<pos:position pos:line="147" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="147" pos:column="52">(<pos:position pos:line="147" pos:column="53"/></operator><name pos:line="147" pos:column="53">uint32_t<pos:position pos:line="147" pos:column="61"/></name><operator pos:line="147" pos:column="61">)<pos:position pos:line="147" pos:column="62"/></operator><name><name pos:line="147" pos:column="62">al<pos:position pos:line="147" pos:column="64"/></name><operator pos:line="147" pos:column="64">-&gt;<pos:position pos:line="147" pos:column="69"/></operator><name pos:line="147" pos:column="66">hier<pos:position pos:line="147" pos:column="70"/></name><operator pos:line="147" pos:column="70">.<pos:position pos:line="147" pos:column="71"/></operator><name pos:line="147" pos:column="71">tcpServer<pos:position pos:line="147" pos:column="80"/></name><operator pos:line="147" pos:column="80">-&gt;<pos:position pos:line="147" pos:column="85"/></operator><name pos:line="147" pos:column="82">tos<pos:position pos:line="147" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="87"/></expr_stmt>
                <expr_stmt><expr><name pos:line="148" pos:column="17">out<pos:position pos:line="148" pos:column="20"/></name> <operator pos:line="148" pos:column="21">=<pos:position pos:line="148" pos:column="22"/></operator> <name pos:line="148" pos:column="23">tmp<pos:position pos:line="148" pos:column="26"/></name></expr>;<pos:position pos:line="148" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></then></if>
            <break pos:line="150" pos:column="13">break;<pos:position pos:line="150" pos:column="19"/></break>

        <case pos:line="152" pos:column="9">case <expr><name pos:line="152" pos:column="14">LFT_SERVER_LOCAL_NFMARK<pos:position pos:line="152" pos:column="37"/></name></expr>:<pos:position pos:line="152" pos:column="38"/></case>
            <if pos:line="153" pos:column="13">if <condition pos:line="153" pos:column="16">(<expr><name><name pos:line="153" pos:column="17">al<pos:position pos:line="153" pos:column="19"/></name><operator pos:line="153" pos:column="19">-&gt;<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="21">hier<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">.<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="26">tcpServer<pos:position pos:line="153" pos:column="35"/></name></name> <operator pos:line="153" pos:column="36">!=<pos:position pos:line="153" pos:column="38"/></operator> <name pos:line="153" pos:column="39">NULL<pos:position pos:line="153" pos:column="43"/></name></expr>)<pos:position pos:line="153" pos:column="44"/></condition><then pos:line="153" pos:column="44"> <block pos:line="153" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="154" pos:column="17">snprintf<pos:position pos:line="154" pos:column="25"/></name><argument_list pos:line="154" pos:column="25">(<argument><expr><name pos:line="154" pos:column="26">tmp<pos:position pos:line="154" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="154" pos:column="31">sizeof<argument_list pos:line="154" pos:column="37">(<argument><expr><name pos:line="154" pos:column="38">tmp<pos:position pos:line="154" pos:column="41"/></name></expr></argument>)<pos:position pos:line="154" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="44">"0x%x"<pos:position pos:line="154" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="52">al<pos:position pos:line="154" pos:column="54"/></name><operator pos:line="154" pos:column="54">-&gt;<pos:position pos:line="154" pos:column="59"/></operator><name pos:line="154" pos:column="56">hier<pos:position pos:line="154" pos:column="60"/></name><operator pos:line="154" pos:column="60">.<pos:position pos:line="154" pos:column="61"/></operator><name pos:line="154" pos:column="61">tcpServer<pos:position pos:line="154" pos:column="70"/></name><operator pos:line="154" pos:column="70">-&gt;<pos:position pos:line="154" pos:column="75"/></operator><name pos:line="154" pos:column="72">nfmark<pos:position pos:line="154" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><name pos:line="155" pos:column="17">out<pos:position pos:line="155" pos:column="20"/></name> <operator pos:line="155" pos:column="21">=<pos:position pos:line="155" pos:column="22"/></operator> <name pos:line="155" pos:column="23">tmp<pos:position pos:line="155" pos:column="26"/></name></expr>;<pos:position pos:line="155" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="156" pos:column="14"/></block></then></if>
            <break pos:line="157" pos:column="13">break;<pos:position pos:line="157" pos:column="19"/></break>

        <case pos:line="159" pos:column="9">case <expr><name pos:line="159" pos:column="14">LFT_TIME_SECONDS_SINCE_EPOCH<pos:position pos:line="159" pos:column="42"/></name></expr>:<pos:position pos:line="159" pos:column="43"/></case>
            <comment type="line" pos:line="160" pos:column="13">// some platforms store time in 32-bit, some 64-bit...</comment>
            <expr_stmt><expr><name pos:line="161" pos:column="13">outoff<pos:position pos:line="161" pos:column="19"/></name> <operator pos:line="161" pos:column="20">=<pos:position pos:line="161" pos:column="21"/></operator> <cast type="static" pos:line="161" pos:column="22">static_cast<argument_list type="generic" pos:line="161" pos:column="33">&lt;<argument><expr><name pos:line="161" pos:column="34">int64_t<pos:position pos:line="161" pos:column="41"/></name></expr></argument>&gt;<pos:position pos:line="161" pos:column="45"/></argument_list><argument_list pos:line="161" pos:column="42">(<argument><expr><name><name pos:line="161" pos:column="43">current_time<pos:position pos:line="161" pos:column="55"/></name><operator pos:line="161" pos:column="55">.<pos:position pos:line="161" pos:column="56"/></operator><name pos:line="161" pos:column="56">tv_sec<pos:position pos:line="161" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="63"/></argument_list></cast></expr>;<pos:position pos:line="161" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name pos:line="162" pos:column="13">dooff<pos:position pos:line="162" pos:column="18"/></name> <operator pos:line="162" pos:column="19">=<pos:position pos:line="162" pos:column="20"/></operator> <literal type="number" pos:line="162" pos:column="21">1<pos:position pos:line="162" pos:column="22"/></literal></expr>;<pos:position pos:line="162" pos:column="23"/></expr_stmt>
            <break pos:line="163" pos:column="13">break;<pos:position pos:line="163" pos:column="19"/></break>

        <case pos:line="165" pos:column="9">case <expr><name pos:line="165" pos:column="14">LFT_TIME_SUBSECOND<pos:position pos:line="165" pos:column="32"/></name></expr>:<pos:position pos:line="165" pos:column="33"/></case>
            <expr_stmt><expr><name pos:line="166" pos:column="13">outint<pos:position pos:line="166" pos:column="19"/></name> <operator pos:line="166" pos:column="20">=<pos:position pos:line="166" pos:column="21"/></operator> <name><name pos:line="166" pos:column="22">current_time<pos:position pos:line="166" pos:column="34"/></name><operator pos:line="166" pos:column="34">.<pos:position pos:line="166" pos:column="35"/></operator><name pos:line="166" pos:column="35">tv_usec<pos:position pos:line="166" pos:column="42"/></name></name> <operator pos:line="166" pos:column="43">/<pos:position pos:line="166" pos:column="44"/></operator> <name><name pos:line="166" pos:column="45">fmt<pos:position pos:line="166" pos:column="48"/></name><operator pos:line="166" pos:column="48">-&gt;<pos:position pos:line="166" pos:column="53"/></operator><name pos:line="166" pos:column="50">divisor<pos:position pos:line="166" pos:column="57"/></name></name></expr>;<pos:position pos:line="166" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="167" pos:column="13">doint<pos:position pos:line="167" pos:column="18"/></name> <operator pos:line="167" pos:column="19">=<pos:position pos:line="167" pos:column="20"/></operator> <literal type="number" pos:line="167" pos:column="21">1<pos:position pos:line="167" pos:column="22"/></literal></expr>;<pos:position pos:line="167" pos:column="23"/></expr_stmt>
            <break pos:line="168" pos:column="13">break;<pos:position pos:line="168" pos:column="19"/></break>

        <case pos:line="170" pos:column="9">case <expr><name pos:line="170" pos:column="14">LFT_TIME_LOCALTIME<pos:position pos:line="170" pos:column="32"/></name></expr>:<pos:position pos:line="170" pos:column="33"/></case>

        <case pos:line="172" pos:column="9">case <expr><name pos:line="172" pos:column="14">LFT_TIME_GMT<pos:position pos:line="172" pos:column="26"/></name></expr>:<pos:position pos:line="172" pos:column="27"/></case> <block pos:line="172" pos:column="28">{
            <decl_stmt><decl><type><specifier pos:line="173" pos:column="13">const<pos:position pos:line="173" pos:column="18"/></specifier> <name pos:line="173" pos:column="19">char<pos:position pos:line="173" pos:column="23"/></name> <modifier pos:line="173" pos:column="24">*<pos:position pos:line="173" pos:column="25"/></modifier></type><name pos:line="173" pos:column="25">spec<pos:position pos:line="173" pos:column="29"/></name></decl>;<pos:position pos:line="173" pos:column="30"/></decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="175" pos:column="13">struct<pos:position pos:line="175" pos:column="19"/></name> <name pos:line="175" pos:column="20">tm<pos:position pos:line="175" pos:column="22"/></name></name> <modifier pos:line="175" pos:column="23">*<pos:position pos:line="175" pos:column="24"/></modifier></type><name pos:line="175" pos:column="24">t<pos:position pos:line="175" pos:column="25"/></name></decl>;<pos:position pos:line="175" pos:column="26"/></decl_stmt>
            <expr_stmt><expr><name pos:line="176" pos:column="13">spec<pos:position pos:line="176" pos:column="17"/></name> <operator pos:line="176" pos:column="18">=<pos:position pos:line="176" pos:column="19"/></operator> <name><name pos:line="176" pos:column="20">fmt<pos:position pos:line="176" pos:column="23"/></name><operator pos:line="176" pos:column="23">-&gt;<pos:position pos:line="176" pos:column="28"/></operator><name pos:line="176" pos:column="25">data<pos:position pos:line="176" pos:column="29"/></name><operator pos:line="176" pos:column="29">.<pos:position pos:line="176" pos:column="30"/></operator><name pos:line="176" pos:column="30">string<pos:position pos:line="176" pos:column="36"/></name></name></expr>;<pos:position pos:line="176" pos:column="37"/></expr_stmt>

            <if pos:line="178" pos:column="13">if <condition pos:line="178" pos:column="16">(<expr><name><name pos:line="178" pos:column="17">fmt<pos:position pos:line="178" pos:column="20"/></name><operator pos:line="178" pos:column="20">-&gt;<pos:position pos:line="178" pos:column="25"/></operator><name pos:line="178" pos:column="22">type<pos:position pos:line="178" pos:column="26"/></name></name> <operator pos:line="178" pos:column="27">==<pos:position pos:line="178" pos:column="29"/></operator> <name pos:line="178" pos:column="30">LFT_TIME_LOCALTIME<pos:position pos:line="178" pos:column="48"/></name></expr>)<pos:position pos:line="178" pos:column="49"/></condition><then pos:line="178" pos:column="49"> <block pos:line="178" pos:column="50">{
                <if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><operator pos:line="179" pos:column="21">!<pos:position pos:line="179" pos:column="22"/></operator><name pos:line="179" pos:column="22">spec<pos:position pos:line="179" pos:column="26"/></name></expr>)<pos:position pos:line="179" pos:column="27"/></condition><then pos:line="179" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="180" pos:column="21">spec<pos:position pos:line="180" pos:column="25"/></name> <operator pos:line="180" pos:column="26">=<pos:position pos:line="180" pos:column="27"/></operator> <literal type="string" pos:line="180" pos:column="28">"%d/%b/%Y:%H:%M:%S %z"<pos:position pos:line="180" pos:column="50"/></literal></expr>;<pos:position pos:line="180" pos:column="51"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="181" pos:column="17">t<pos:position pos:line="181" pos:column="18"/></name> <operator pos:line="181" pos:column="19">=<pos:position pos:line="181" pos:column="20"/></operator> <call><name pos:line="181" pos:column="21">localtime<pos:position pos:line="181" pos:column="30"/></name><argument_list pos:line="181" pos:column="30">(<argument><expr><operator pos:line="181" pos:column="31">&amp;<pos:position pos:line="181" pos:column="36"/></operator><name pos:line="181" pos:column="32">squid_curtime<pos:position pos:line="181" pos:column="45"/></name></expr></argument>)<pos:position pos:line="181" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="182" pos:column="14"/></block></then> <else pos:line="182" pos:column="15">else <block pos:line="182" pos:column="20">{
                <if pos:line="183" pos:column="17">if <condition pos:line="183" pos:column="20">(<expr><operator pos:line="183" pos:column="21">!<pos:position pos:line="183" pos:column="22"/></operator><name pos:line="183" pos:column="22">spec<pos:position pos:line="183" pos:column="26"/></name></expr>)<pos:position pos:line="183" pos:column="27"/></condition><then pos:line="183" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="184" pos:column="21">spec<pos:position pos:line="184" pos:column="25"/></name> <operator pos:line="184" pos:column="26">=<pos:position pos:line="184" pos:column="27"/></operator> <literal type="string" pos:line="184" pos:column="28">"%d/%b/%Y:%H:%M:%S"<pos:position pos:line="184" pos:column="47"/></literal></expr>;<pos:position pos:line="184" pos:column="48"/></expr_stmt></block></then></if>

                <expr_stmt><expr><name pos:line="186" pos:column="17">t<pos:position pos:line="186" pos:column="18"/></name> <operator pos:line="186" pos:column="19">=<pos:position pos:line="186" pos:column="20"/></operator> <call><name pos:line="186" pos:column="21">gmtime<pos:position pos:line="186" pos:column="27"/></name><argument_list pos:line="186" pos:column="27">(<argument><expr><operator pos:line="186" pos:column="28">&amp;<pos:position pos:line="186" pos:column="33"/></operator><name pos:line="186" pos:column="29">squid_curtime<pos:position pos:line="186" pos:column="42"/></name></expr></argument>)<pos:position pos:line="186" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="187" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name pos:line="189" pos:column="13">strftime<pos:position pos:line="189" pos:column="21"/></name><argument_list pos:line="189" pos:column="21">(<argument><expr><name pos:line="189" pos:column="22">tmp<pos:position pos:line="189" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="189" pos:column="27">sizeof<argument_list pos:line="189" pos:column="33">(<argument><expr><name pos:line="189" pos:column="34">tmp<pos:position pos:line="189" pos:column="37"/></name></expr></argument>)<pos:position pos:line="189" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="189" pos:column="40">spec<pos:position pos:line="189" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="46">t<pos:position pos:line="189" pos:column="47"/></name></expr></argument>)<pos:position pos:line="189" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="49"/></expr_stmt>

            <expr_stmt><expr><name pos:line="191" pos:column="13">out<pos:position pos:line="191" pos:column="16"/></name> <operator pos:line="191" pos:column="17">=<pos:position pos:line="191" pos:column="18"/></operator> <name pos:line="191" pos:column="19">tmp<pos:position pos:line="191" pos:column="22"/></name></expr>;<pos:position pos:line="191" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="192" pos:column="10"/></block>

        <break pos:line="194" pos:column="9">break;<pos:position pos:line="194" pos:column="15"/></break>

        <case pos:line="196" pos:column="9">case <expr><name pos:line="196" pos:column="14">LFT_TIME_TO_HANDLE_REQUEST<pos:position pos:line="196" pos:column="40"/></name></expr>:<pos:position pos:line="196" pos:column="41"/></case>
            <expr_stmt><expr><name pos:line="197" pos:column="13">outint<pos:position pos:line="197" pos:column="19"/></name> <operator pos:line="197" pos:column="20">=<pos:position pos:line="197" pos:column="21"/></operator> <name><name pos:line="197" pos:column="22">al<pos:position pos:line="197" pos:column="24"/></name><operator pos:line="197" pos:column="24">-&gt;<pos:position pos:line="197" pos:column="29"/></operator><name pos:line="197" pos:column="26">cache<pos:position pos:line="197" pos:column="31"/></name><operator pos:line="197" pos:column="31">.<pos:position pos:line="197" pos:column="32"/></operator><name pos:line="197" pos:column="32">msec<pos:position pos:line="197" pos:column="36"/></name></name></expr>;<pos:position pos:line="197" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="198" pos:column="13">doint<pos:position pos:line="198" pos:column="18"/></name> <operator pos:line="198" pos:column="19">=<pos:position pos:line="198" pos:column="20"/></operator> <literal type="number" pos:line="198" pos:column="21">1<pos:position pos:line="198" pos:column="22"/></literal></expr>;<pos:position pos:line="198" pos:column="23"/></expr_stmt>
            <break pos:line="199" pos:column="13">break;<pos:position pos:line="199" pos:column="19"/></break>

        <case pos:line="201" pos:column="9">case <expr><name pos:line="201" pos:column="14">LFT_PEER_RESPONSE_TIME<pos:position pos:line="201" pos:column="36"/></name></expr>:<pos:position pos:line="201" pos:column="37"/></case>
            <if pos:line="202" pos:column="13">if <condition pos:line="202" pos:column="16">(<expr><name><name pos:line="202" pos:column="17">al<pos:position pos:line="202" pos:column="19"/></name><operator pos:line="202" pos:column="19">-&gt;<pos:position pos:line="202" pos:column="24"/></operator><name pos:line="202" pos:column="21">hier<pos:position pos:line="202" pos:column="25"/></name><operator pos:line="202" pos:column="25">.<pos:position pos:line="202" pos:column="26"/></operator><name pos:line="202" pos:column="26">peer_response_time<pos:position pos:line="202" pos:column="44"/></name></name> <operator pos:line="202" pos:column="45">&lt;<pos:position pos:line="202" pos:column="49"/></operator> <literal type="number" pos:line="202" pos:column="47">0<pos:position pos:line="202" pos:column="48"/></literal></expr>)<pos:position pos:line="202" pos:column="49"/></condition><then pos:line="202" pos:column="49"> <block pos:line="202" pos:column="50">{
                <expr_stmt><expr><name pos:line="203" pos:column="17">out<pos:position pos:line="203" pos:column="20"/></name> <operator pos:line="203" pos:column="21">=<pos:position pos:line="203" pos:column="22"/></operator> <literal type="string" pos:line="203" pos:column="23">"-"<pos:position pos:line="203" pos:column="26"/></literal></expr>;<pos:position pos:line="203" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="204" pos:column="14"/></block></then> <else pos:line="204" pos:column="15">else <block pos:line="204" pos:column="20">{
                <expr_stmt><expr><name pos:line="205" pos:column="17">outoff<pos:position pos:line="205" pos:column="23"/></name> <operator pos:line="205" pos:column="24">=<pos:position pos:line="205" pos:column="25"/></operator> <name><name pos:line="205" pos:column="26">al<pos:position pos:line="205" pos:column="28"/></name><operator pos:line="205" pos:column="28">-&gt;<pos:position pos:line="205" pos:column="33"/></operator><name pos:line="205" pos:column="30">hier<pos:position pos:line="205" pos:column="34"/></name><operator pos:line="205" pos:column="34">.<pos:position pos:line="205" pos:column="35"/></operator><name pos:line="205" pos:column="35">peer_response_time<pos:position pos:line="205" pos:column="53"/></name></name></expr>;<pos:position pos:line="205" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name pos:line="206" pos:column="17">dooff<pos:position pos:line="206" pos:column="22"/></name> <operator pos:line="206" pos:column="23">=<pos:position pos:line="206" pos:column="24"/></operator> <literal type="number" pos:line="206" pos:column="25">1<pos:position pos:line="206" pos:column="26"/></literal></expr>;<pos:position pos:line="206" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="207" pos:column="14"/></block></else></if>
            <break pos:line="208" pos:column="13">break;<pos:position pos:line="208" pos:column="19"/></break>

        <case pos:line="210" pos:column="9">case <expr><name pos:line="210" pos:column="14">LFT_TOTAL_SERVER_SIDE_RESPONSE_TIME<pos:position pos:line="210" pos:column="49"/></name></expr>:<pos:position pos:line="210" pos:column="50"/></case>
            <if pos:line="211" pos:column="13">if <condition pos:line="211" pos:column="16">(<expr><name><name pos:line="211" pos:column="17">al<pos:position pos:line="211" pos:column="19"/></name><operator pos:line="211" pos:column="19">-&gt;<pos:position pos:line="211" pos:column="24"/></operator><name pos:line="211" pos:column="21">hier<pos:position pos:line="211" pos:column="25"/></name><operator pos:line="211" pos:column="25">.<pos:position pos:line="211" pos:column="26"/></operator><name pos:line="211" pos:column="26">total_response_time<pos:position pos:line="211" pos:column="45"/></name></name> <operator pos:line="211" pos:column="46">&lt;<pos:position pos:line="211" pos:column="50"/></operator> <literal type="number" pos:line="211" pos:column="48">0<pos:position pos:line="211" pos:column="49"/></literal></expr>)<pos:position pos:line="211" pos:column="50"/></condition><then pos:line="211" pos:column="50"> <block pos:line="211" pos:column="51">{
                <expr_stmt><expr><name pos:line="212" pos:column="17">out<pos:position pos:line="212" pos:column="20"/></name> <operator pos:line="212" pos:column="21">=<pos:position pos:line="212" pos:column="22"/></operator> <literal type="string" pos:line="212" pos:column="23">"-"<pos:position pos:line="212" pos:column="26"/></literal></expr>;<pos:position pos:line="212" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="213" pos:column="14"/></block></then> <else pos:line="213" pos:column="15">else <block pos:line="213" pos:column="20">{
                <expr_stmt><expr><name pos:line="214" pos:column="17">outoff<pos:position pos:line="214" pos:column="23"/></name> <operator pos:line="214" pos:column="24">=<pos:position pos:line="214" pos:column="25"/></operator> <name><name pos:line="214" pos:column="26">al<pos:position pos:line="214" pos:column="28"/></name><operator pos:line="214" pos:column="28">-&gt;<pos:position pos:line="214" pos:column="33"/></operator><name pos:line="214" pos:column="30">hier<pos:position pos:line="214" pos:column="34"/></name><operator pos:line="214" pos:column="34">.<pos:position pos:line="214" pos:column="35"/></operator><name pos:line="214" pos:column="35">total_response_time<pos:position pos:line="214" pos:column="54"/></name></name></expr>;<pos:position pos:line="214" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="215" pos:column="17">dooff<pos:position pos:line="215" pos:column="22"/></name> <operator pos:line="215" pos:column="23">=<pos:position pos:line="215" pos:column="24"/></operator> <literal type="number" pos:line="215" pos:column="25">1<pos:position pos:line="215" pos:column="26"/></literal></expr>;<pos:position pos:line="215" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="216" pos:column="14"/></block></else></if>
            <break pos:line="217" pos:column="13">break;<pos:position pos:line="217" pos:column="19"/></break>

        <case pos:line="219" pos:column="9">case <expr><name pos:line="219" pos:column="14">LFT_DNS_WAIT_TIME<pos:position pos:line="219" pos:column="31"/></name></expr>:<pos:position pos:line="219" pos:column="32"/></case>
            <if pos:line="220" pos:column="13">if <condition pos:line="220" pos:column="16">(<expr><name><name pos:line="220" pos:column="17">al<pos:position pos:line="220" pos:column="19"/></name><operator pos:line="220" pos:column="19">-&gt;<pos:position pos:line="220" pos:column="24"/></operator><name pos:line="220" pos:column="21">request<pos:position pos:line="220" pos:column="28"/></name></name> <operator pos:line="220" pos:column="29">&amp;&amp;<pos:position pos:line="220" pos:column="39"/></operator> <name><name pos:line="220" pos:column="32">al<pos:position pos:line="220" pos:column="34"/></name><operator pos:line="220" pos:column="34">-&gt;<pos:position pos:line="220" pos:column="39"/></operator><name pos:line="220" pos:column="36">request<pos:position pos:line="220" pos:column="43"/></name><operator pos:line="220" pos:column="43">-&gt;<pos:position pos:line="220" pos:column="48"/></operator><name pos:line="220" pos:column="45">dnsWait<pos:position pos:line="220" pos:column="52"/></name></name> <operator pos:line="220" pos:column="53">&gt;=<pos:position pos:line="220" pos:column="58"/></operator> <literal type="number" pos:line="220" pos:column="56">0<pos:position pos:line="220" pos:column="57"/></literal></expr>)<pos:position pos:line="220" pos:column="58"/></condition><then pos:line="220" pos:column="58"> <block pos:line="220" pos:column="59">{
                <expr_stmt><expr><name pos:line="221" pos:column="17">outint<pos:position pos:line="221" pos:column="23"/></name> <operator pos:line="221" pos:column="24">=<pos:position pos:line="221" pos:column="25"/></operator> <name><name pos:line="221" pos:column="26">al<pos:position pos:line="221" pos:column="28"/></name><operator pos:line="221" pos:column="28">-&gt;<pos:position pos:line="221" pos:column="33"/></operator><name pos:line="221" pos:column="30">request<pos:position pos:line="221" pos:column="37"/></name><operator pos:line="221" pos:column="37">-&gt;<pos:position pos:line="221" pos:column="42"/></operator><name pos:line="221" pos:column="39">dnsWait<pos:position pos:line="221" pos:column="46"/></name></name></expr>;<pos:position pos:line="221" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="222" pos:column="17">doint<pos:position pos:line="222" pos:column="22"/></name> <operator pos:line="222" pos:column="23">=<pos:position pos:line="222" pos:column="24"/></operator> <literal type="number" pos:line="222" pos:column="25">1<pos:position pos:line="222" pos:column="26"/></literal></expr>;<pos:position pos:line="222" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="223" pos:column="14"/></block></then></if>
            <break pos:line="224" pos:column="13">break;<pos:position pos:line="224" pos:column="19"/></break>

        <case pos:line="226" pos:column="9">case <expr><name pos:line="226" pos:column="14">LFT_REQUEST_HEADER<pos:position pos:line="226" pos:column="32"/></name></expr>:<pos:position pos:line="226" pos:column="33"/></case>

            <if pos:line="228" pos:column="13">if <condition pos:line="228" pos:column="16">(<expr><name><name pos:line="228" pos:column="17">al<pos:position pos:line="228" pos:column="19"/></name><operator pos:line="228" pos:column="19">-&gt;<pos:position pos:line="228" pos:column="24"/></operator><name pos:line="228" pos:column="21">request<pos:position pos:line="228" pos:column="28"/></name></name></expr>)<pos:position pos:line="228" pos:column="29"/></condition><then pos:line="228" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="229" pos:column="17">sb<pos:position pos:line="229" pos:column="19"/></name> <operator pos:line="229" pos:column="20">=<pos:position pos:line="229" pos:column="21"/></operator> <call><name><name pos:line="229" pos:column="22">al<pos:position pos:line="229" pos:column="24"/></name><operator pos:line="229" pos:column="24">-&gt;<pos:position pos:line="229" pos:column="29"/></operator><name pos:line="229" pos:column="26">request<pos:position pos:line="229" pos:column="33"/></name><operator pos:line="229" pos:column="33">-&gt;<pos:position pos:line="229" pos:column="38"/></operator><name pos:line="229" pos:column="35">header<pos:position pos:line="229" pos:column="41"/></name><operator pos:line="229" pos:column="41">.<pos:position pos:line="229" pos:column="42"/></operator><name pos:line="229" pos:column="42">getByName<pos:position pos:line="229" pos:column="51"/></name></name><argument_list pos:line="229" pos:column="51">(<argument><expr><name><name pos:line="229" pos:column="52">fmt<pos:position pos:line="229" pos:column="55"/></name><operator pos:line="229" pos:column="55">-&gt;<pos:position pos:line="229" pos:column="60"/></operator><name pos:line="229" pos:column="57">data<pos:position pos:line="229" pos:column="61"/></name><operator pos:line="229" pos:column="61">.<pos:position pos:line="229" pos:column="62"/></operator><name pos:line="229" pos:column="62">header<pos:position pos:line="229" pos:column="68"/></name><operator pos:line="229" pos:column="68">.<pos:position pos:line="229" pos:column="69"/></operator><name pos:line="229" pos:column="69">header<pos:position pos:line="229" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="229" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="77"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="231" pos:column="13">out<pos:position pos:line="231" pos:column="16"/></name> <operator pos:line="231" pos:column="17">=<pos:position pos:line="231" pos:column="18"/></operator> <call><name><name pos:line="231" pos:column="19">sb<pos:position pos:line="231" pos:column="21"/></name><operator pos:line="231" pos:column="21">.<pos:position pos:line="231" pos:column="22"/></operator><name pos:line="231" pos:column="22">termedBuf<pos:position pos:line="231" pos:column="31"/></name></name><argument_list pos:line="231" pos:column="31">()<pos:position pos:line="231" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="233" pos:column="13">quote<pos:position pos:line="233" pos:column="18"/></name> <operator pos:line="233" pos:column="19">=<pos:position pos:line="233" pos:column="20"/></operator> <literal type="number" pos:line="233" pos:column="21">1<pos:position pos:line="233" pos:column="22"/></literal></expr>;<pos:position pos:line="233" pos:column="23"/></expr_stmt>

            <break pos:line="235" pos:column="13">break;<pos:position pos:line="235" pos:column="19"/></break>

        <case pos:line="237" pos:column="9">case <expr><name pos:line="237" pos:column="14">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="237" pos:column="40"/></name></expr>:<pos:position pos:line="237" pos:column="41"/></case>

            <if pos:line="239" pos:column="13">if <condition pos:line="239" pos:column="16">(<expr><name><name pos:line="239" pos:column="17">al<pos:position pos:line="239" pos:column="19"/></name><operator pos:line="239" pos:column="19">-&gt;<pos:position pos:line="239" pos:column="24"/></operator><name pos:line="239" pos:column="21">adapted_request<pos:position pos:line="239" pos:column="36"/></name></name></expr>)<pos:position pos:line="239" pos:column="37"/></condition><then pos:line="239" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="240" pos:column="17">sb<pos:position pos:line="240" pos:column="19"/></name> <operator pos:line="240" pos:column="20">=<pos:position pos:line="240" pos:column="21"/></operator> <call><name><name pos:line="240" pos:column="22">al<pos:position pos:line="240" pos:column="24"/></name><operator pos:line="240" pos:column="24">-&gt;<pos:position pos:line="240" pos:column="29"/></operator><name pos:line="240" pos:column="26">adapted_request<pos:position pos:line="240" pos:column="41"/></name><operator pos:line="240" pos:column="41">-&gt;<pos:position pos:line="240" pos:column="46"/></operator><name pos:line="240" pos:column="43">header<pos:position pos:line="240" pos:column="49"/></name><operator pos:line="240" pos:column="49">.<pos:position pos:line="240" pos:column="50"/></operator><name pos:line="240" pos:column="50">getByName<pos:position pos:line="240" pos:column="59"/></name></name><argument_list pos:line="240" pos:column="59">(<argument><expr><name><name pos:line="240" pos:column="60">fmt<pos:position pos:line="240" pos:column="63"/></name><operator pos:line="240" pos:column="63">-&gt;<pos:position pos:line="240" pos:column="68"/></operator><name pos:line="240" pos:column="65">data<pos:position pos:line="240" pos:column="69"/></name><operator pos:line="240" pos:column="69">.<pos:position pos:line="240" pos:column="70"/></operator><name pos:line="240" pos:column="70">header<pos:position pos:line="240" pos:column="76"/></name><operator pos:line="240" pos:column="76">.<pos:position pos:line="240" pos:column="77"/></operator><name pos:line="240" pos:column="77">header<pos:position pos:line="240" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="240" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="85"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="242" pos:column="13">out<pos:position pos:line="242" pos:column="16"/></name> <operator pos:line="242" pos:column="17">=<pos:position pos:line="242" pos:column="18"/></operator> <call><name><name pos:line="242" pos:column="19">sb<pos:position pos:line="242" pos:column="21"/></name><operator pos:line="242" pos:column="21">.<pos:position pos:line="242" pos:column="22"/></operator><name pos:line="242" pos:column="22">termedBuf<pos:position pos:line="242" pos:column="31"/></name></name><argument_list pos:line="242" pos:column="31">()<pos:position pos:line="242" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="244" pos:column="13">quote<pos:position pos:line="244" pos:column="18"/></name> <operator pos:line="244" pos:column="19">=<pos:position pos:line="244" pos:column="20"/></operator> <literal type="number" pos:line="244" pos:column="21">1<pos:position pos:line="244" pos:column="22"/></literal></expr>;<pos:position pos:line="244" pos:column="23"/></expr_stmt>

            <break pos:line="246" pos:column="13">break;<pos:position pos:line="246" pos:column="19"/></break>

        <case pos:line="248" pos:column="9">case <expr><name pos:line="248" pos:column="14">LFT_REPLY_HEADER<pos:position pos:line="248" pos:column="30"/></name></expr>:<pos:position pos:line="248" pos:column="31"/></case>
            <if pos:line="249" pos:column="13">if <condition pos:line="249" pos:column="16">(<expr><name><name pos:line="249" pos:column="17">al<pos:position pos:line="249" pos:column="19"/></name><operator pos:line="249" pos:column="19">-&gt;<pos:position pos:line="249" pos:column="24"/></operator><name pos:line="249" pos:column="21">reply<pos:position pos:line="249" pos:column="26"/></name></name></expr>)<pos:position pos:line="249" pos:column="27"/></condition><then pos:line="249" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="250" pos:column="17">sb<pos:position pos:line="250" pos:column="19"/></name> <operator pos:line="250" pos:column="20">=<pos:position pos:line="250" pos:column="21"/></operator> <call><name><name pos:line="250" pos:column="22">al<pos:position pos:line="250" pos:column="24"/></name><operator pos:line="250" pos:column="24">-&gt;<pos:position pos:line="250" pos:column="29"/></operator><name pos:line="250" pos:column="26">reply<pos:position pos:line="250" pos:column="31"/></name><operator pos:line="250" pos:column="31">-&gt;<pos:position pos:line="250" pos:column="36"/></operator><name pos:line="250" pos:column="33">header<pos:position pos:line="250" pos:column="39"/></name><operator pos:line="250" pos:column="39">.<pos:position pos:line="250" pos:column="40"/></operator><name pos:line="250" pos:column="40">getByName<pos:position pos:line="250" pos:column="49"/></name></name><argument_list pos:line="250" pos:column="49">(<argument><expr><name><name pos:line="250" pos:column="50">fmt<pos:position pos:line="250" pos:column="53"/></name><operator pos:line="250" pos:column="53">-&gt;<pos:position pos:line="250" pos:column="58"/></operator><name pos:line="250" pos:column="55">data<pos:position pos:line="250" pos:column="59"/></name><operator pos:line="250" pos:column="59">.<pos:position pos:line="250" pos:column="60"/></operator><name pos:line="250" pos:column="60">header<pos:position pos:line="250" pos:column="66"/></name><operator pos:line="250" pos:column="66">.<pos:position pos:line="250" pos:column="67"/></operator><name pos:line="250" pos:column="67">header<pos:position pos:line="250" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="250" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="75"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="252" pos:column="13">out<pos:position pos:line="252" pos:column="16"/></name> <operator pos:line="252" pos:column="17">=<pos:position pos:line="252" pos:column="18"/></operator> <call><name><name pos:line="252" pos:column="19">sb<pos:position pos:line="252" pos:column="21"/></name><operator pos:line="252" pos:column="21">.<pos:position pos:line="252" pos:column="22"/></operator><name pos:line="252" pos:column="22">termedBuf<pos:position pos:line="252" pos:column="31"/></name></name><argument_list pos:line="252" pos:column="31">()<pos:position pos:line="252" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="254" pos:column="13">quote<pos:position pos:line="254" pos:column="18"/></name> <operator pos:line="254" pos:column="19">=<pos:position pos:line="254" pos:column="20"/></operator> <literal type="number" pos:line="254" pos:column="21">1<pos:position pos:line="254" pos:column="22"/></literal></expr>;<pos:position pos:line="254" pos:column="23"/></expr_stmt>

            <break pos:line="256" pos:column="13">break;<pos:position pos:line="256" pos:column="19"/></break>

<cpp:if pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">if<pos:position pos:line="258" pos:column="4"/></cpp:directive> <expr><name pos:line="258" pos:column="5">USE_ADAPTATION<pos:position pos:line="258" pos:column="19"/></name></expr></cpp:if>
        <case pos:line="259" pos:column="9">case <expr><name pos:line="259" pos:column="14">LFT_ADAPTATION_SUM_XACT_TIMES<pos:position pos:line="259" pos:column="43"/></name></expr>:<pos:position pos:line="259" pos:column="44"/></case>
            <if pos:line="260" pos:column="13">if <condition pos:line="260" pos:column="16">(<expr><name><name pos:line="260" pos:column="17">al<pos:position pos:line="260" pos:column="19"/></name><operator pos:line="260" pos:column="19">-&gt;<pos:position pos:line="260" pos:column="24"/></operator><name pos:line="260" pos:column="21">request<pos:position pos:line="260" pos:column="28"/></name></name></expr>)<pos:position pos:line="260" pos:column="29"/></condition><then pos:line="260" pos:column="29"> <block pos:line="260" pos:column="30">{
                <decl_stmt><decl><type><name><name pos:line="261" pos:column="17">Adaptation<pos:position pos:line="261" pos:column="27"/></name><operator pos:line="261" pos:column="27">::<pos:position pos:line="261" pos:column="29"/></operator><name pos:line="261" pos:column="29">History<pos:position pos:line="261" pos:column="36"/></name><operator pos:line="261" pos:column="36">::<pos:position pos:line="261" pos:column="38"/></operator><name pos:line="261" pos:column="38">Pointer<pos:position pos:line="261" pos:column="45"/></name></name></type> <name pos:line="261" pos:column="46">ah<pos:position pos:line="261" pos:column="48"/></name> <init pos:line="261" pos:column="49">= <expr><call><name><name pos:line="261" pos:column="51">al<pos:position pos:line="261" pos:column="53"/></name><operator pos:line="261" pos:column="53">-&gt;<pos:position pos:line="261" pos:column="58"/></operator><name pos:line="261" pos:column="55">request<pos:position pos:line="261" pos:column="62"/></name><operator pos:line="261" pos:column="62">-&gt;<pos:position pos:line="261" pos:column="67"/></operator><name pos:line="261" pos:column="64">adaptHistory<pos:position pos:line="261" pos:column="76"/></name></name><argument_list pos:line="261" pos:column="76">()<pos:position pos:line="261" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="261" pos:column="79"/></decl_stmt>
                <if pos:line="262" pos:column="17">if <condition pos:line="262" pos:column="20">(<expr><name pos:line="262" pos:column="21">ah<pos:position pos:line="262" pos:column="23"/></name> <operator pos:line="262" pos:column="24">!=<pos:position pos:line="262" pos:column="26"/></operator> <name pos:line="262" pos:column="27">NULL<pos:position pos:line="262" pos:column="31"/></name></expr>)<pos:position pos:line="262" pos:column="32"/></condition><then pos:line="262" pos:column="32">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="263" pos:column="21">ah<pos:position pos:line="263" pos:column="23"/></name><operator pos:line="263" pos:column="23">-&gt;<pos:position pos:line="263" pos:column="28"/></operator><name pos:line="263" pos:column="25">sumLogString<pos:position pos:line="263" pos:column="37"/></name></name><argument_list pos:line="263" pos:column="37">(<argument><expr><name><name pos:line="263" pos:column="38">fmt<pos:position pos:line="263" pos:column="41"/></name><operator pos:line="263" pos:column="41">-&gt;<pos:position pos:line="263" pos:column="46"/></operator><name pos:line="263" pos:column="43">data<pos:position pos:line="263" pos:column="47"/></name><operator pos:line="263" pos:column="47">.<pos:position pos:line="263" pos:column="48"/></operator><name pos:line="263" pos:column="48">string<pos:position pos:line="263" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="56">sb<pos:position pos:line="263" pos:column="58"/></name></expr></argument>)<pos:position pos:line="263" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="60"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="264" pos:column="17">out<pos:position pos:line="264" pos:column="20"/></name> <operator pos:line="264" pos:column="21">=<pos:position pos:line="264" pos:column="22"/></operator> <call><name><name pos:line="264" pos:column="23">sb<pos:position pos:line="264" pos:column="25"/></name><operator pos:line="264" pos:column="25">.<pos:position pos:line="264" pos:column="26"/></operator><name pos:line="264" pos:column="26">termedBuf<pos:position pos:line="264" pos:column="35"/></name></name><argument_list pos:line="264" pos:column="35">()<pos:position pos:line="264" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="265" pos:column="14"/></block></then></if>
            <break pos:line="266" pos:column="13">break;<pos:position pos:line="266" pos:column="19"/></break>

        <case pos:line="268" pos:column="9">case <expr><name pos:line="268" pos:column="14">LFT_ADAPTATION_ALL_XACT_TIMES<pos:position pos:line="268" pos:column="43"/></name></expr>:<pos:position pos:line="268" pos:column="44"/></case>
            <if pos:line="269" pos:column="13">if <condition pos:line="269" pos:column="16">(<expr><name><name pos:line="269" pos:column="17">al<pos:position pos:line="269" pos:column="19"/></name><operator pos:line="269" pos:column="19">-&gt;<pos:position pos:line="269" pos:column="24"/></operator><name pos:line="269" pos:column="21">request<pos:position pos:line="269" pos:column="28"/></name></name></expr>)<pos:position pos:line="269" pos:column="29"/></condition><then pos:line="269" pos:column="29"> <block pos:line="269" pos:column="30">{
                <decl_stmt><decl><type><name><name pos:line="270" pos:column="17">Adaptation<pos:position pos:line="270" pos:column="27"/></name><operator pos:line="270" pos:column="27">::<pos:position pos:line="270" pos:column="29"/></operator><name pos:line="270" pos:column="29">History<pos:position pos:line="270" pos:column="36"/></name><operator pos:line="270" pos:column="36">::<pos:position pos:line="270" pos:column="38"/></operator><name pos:line="270" pos:column="38">Pointer<pos:position pos:line="270" pos:column="45"/></name></name></type> <name pos:line="270" pos:column="46">ah<pos:position pos:line="270" pos:column="48"/></name> <init pos:line="270" pos:column="49">= <expr><call><name><name pos:line="270" pos:column="51">al<pos:position pos:line="270" pos:column="53"/></name><operator pos:line="270" pos:column="53">-&gt;<pos:position pos:line="270" pos:column="58"/></operator><name pos:line="270" pos:column="55">request<pos:position pos:line="270" pos:column="62"/></name><operator pos:line="270" pos:column="62">-&gt;<pos:position pos:line="270" pos:column="67"/></operator><name pos:line="270" pos:column="64">adaptHistory<pos:position pos:line="270" pos:column="76"/></name></name><argument_list pos:line="270" pos:column="76">()<pos:position pos:line="270" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="270" pos:column="79"/></decl_stmt>
                <if pos:line="271" pos:column="17">if <condition pos:line="271" pos:column="20">(<expr><name pos:line="271" pos:column="21">ah<pos:position pos:line="271" pos:column="23"/></name> <operator pos:line="271" pos:column="24">!=<pos:position pos:line="271" pos:column="26"/></operator> <name pos:line="271" pos:column="27">NULL<pos:position pos:line="271" pos:column="31"/></name></expr>)<pos:position pos:line="271" pos:column="32"/></condition><then pos:line="271" pos:column="32">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="272" pos:column="21">ah<pos:position pos:line="272" pos:column="23"/></name><operator pos:line="272" pos:column="23">-&gt;<pos:position pos:line="272" pos:column="28"/></operator><name pos:line="272" pos:column="25">allLogString<pos:position pos:line="272" pos:column="37"/></name></name><argument_list pos:line="272" pos:column="37">(<argument><expr><name><name pos:line="272" pos:column="38">fmt<pos:position pos:line="272" pos:column="41"/></name><operator pos:line="272" pos:column="41">-&gt;<pos:position pos:line="272" pos:column="46"/></operator><name pos:line="272" pos:column="43">data<pos:position pos:line="272" pos:column="47"/></name><operator pos:line="272" pos:column="47">.<pos:position pos:line="272" pos:column="48"/></operator><name pos:line="272" pos:column="48">string<pos:position pos:line="272" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="56">sb<pos:position pos:line="272" pos:column="58"/></name></expr></argument>)<pos:position pos:line="272" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="60"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="273" pos:column="17">out<pos:position pos:line="273" pos:column="20"/></name> <operator pos:line="273" pos:column="21">=<pos:position pos:line="273" pos:column="22"/></operator> <call><name><name pos:line="273" pos:column="23">sb<pos:position pos:line="273" pos:column="25"/></name><operator pos:line="273" pos:column="25">.<pos:position pos:line="273" pos:column="26"/></operator><name pos:line="273" pos:column="26">termedBuf<pos:position pos:line="273" pos:column="35"/></name></name><argument_list pos:line="273" pos:column="35">()<pos:position pos:line="273" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="274" pos:column="14"/></block></then></if>
            <break pos:line="275" pos:column="13">break;<pos:position pos:line="275" pos:column="19"/></break>

        <case pos:line="277" pos:column="9">case <expr><name pos:line="277" pos:column="14">LFT_ADAPTATION_LAST_HEADER<pos:position pos:line="277" pos:column="40"/></name></expr>:<pos:position pos:line="277" pos:column="41"/></case>
            <if pos:line="278" pos:column="13">if <condition pos:line="278" pos:column="16">(<expr><name><name pos:line="278" pos:column="17">al<pos:position pos:line="278" pos:column="19"/></name><operator pos:line="278" pos:column="19">-&gt;<pos:position pos:line="278" pos:column="24"/></operator><name pos:line="278" pos:column="21">request<pos:position pos:line="278" pos:column="28"/></name></name></expr>)<pos:position pos:line="278" pos:column="29"/></condition><then pos:line="278" pos:column="29"> <block pos:line="278" pos:column="30">{
                <decl_stmt><decl><type><specifier pos:line="279" pos:column="17">const<pos:position pos:line="279" pos:column="22"/></specifier> <name><name pos:line="279" pos:column="23">Adaptation<pos:position pos:line="279" pos:column="33"/></name><operator pos:line="279" pos:column="33">::<pos:position pos:line="279" pos:column="35"/></operator><name pos:line="279" pos:column="35">History<pos:position pos:line="279" pos:column="42"/></name><operator pos:line="279" pos:column="42">::<pos:position pos:line="279" pos:column="44"/></operator><name pos:line="279" pos:column="44">Pointer<pos:position pos:line="279" pos:column="51"/></name></name></type> <name pos:line="279" pos:column="52">ah<pos:position pos:line="279" pos:column="54"/></name> <init pos:line="279" pos:column="55">= <expr><call><name><name pos:line="279" pos:column="57">al<pos:position pos:line="279" pos:column="59"/></name><operator pos:line="279" pos:column="59">-&gt;<pos:position pos:line="279" pos:column="64"/></operator><name pos:line="279" pos:column="61">request<pos:position pos:line="279" pos:column="68"/></name><operator pos:line="279" pos:column="68">-&gt;<pos:position pos:line="279" pos:column="73"/></operator><name pos:line="279" pos:column="70">adaptHistory<pos:position pos:line="279" pos:column="82"/></name></name><argument_list pos:line="279" pos:column="82">()<pos:position pos:line="279" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="279" pos:column="85"/></decl_stmt>
                <if pos:line="280" pos:column="17">if <condition pos:line="280" pos:column="20">(<expr><name pos:line="280" pos:column="21">ah<pos:position pos:line="280" pos:column="23"/></name> <operator pos:line="280" pos:column="24">!=<pos:position pos:line="280" pos:column="26"/></operator> <name pos:line="280" pos:column="27">NULL<pos:position pos:line="280" pos:column="31"/></name></expr>)<pos:position pos:line="280" pos:column="32"/></condition><then pos:line="280" pos:column="32"> <comment type="line" pos:line="280" pos:column="33">// XXX: add adapt::&lt;all_h but use lastMeta here</comment>
                    <block type="pseudo"><expr_stmt><expr><name pos:line="281" pos:column="21">sb<pos:position pos:line="281" pos:column="23"/></name> <operator pos:line="281" pos:column="24">=<pos:position pos:line="281" pos:column="25"/></operator> <call><name><name pos:line="281" pos:column="26">ah<pos:position pos:line="281" pos:column="28"/></name><operator pos:line="281" pos:column="28">-&gt;<pos:position pos:line="281" pos:column="33"/></operator><name pos:line="281" pos:column="30">allMeta<pos:position pos:line="281" pos:column="37"/></name><operator pos:line="281" pos:column="37">.<pos:position pos:line="281" pos:column="38"/></operator><name pos:line="281" pos:column="38">getByName<pos:position pos:line="281" pos:column="47"/></name></name><argument_list pos:line="281" pos:column="47">(<argument><expr><name><name pos:line="281" pos:column="48">fmt<pos:position pos:line="281" pos:column="51"/></name><operator pos:line="281" pos:column="51">-&gt;<pos:position pos:line="281" pos:column="56"/></operator><name pos:line="281" pos:column="53">data<pos:position pos:line="281" pos:column="57"/></name><operator pos:line="281" pos:column="57">.<pos:position pos:line="281" pos:column="58"/></operator><name pos:line="281" pos:column="58">header<pos:position pos:line="281" pos:column="64"/></name><operator pos:line="281" pos:column="64">.<pos:position pos:line="281" pos:column="65"/></operator><name pos:line="281" pos:column="65">header<pos:position pos:line="281" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="281" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="73"/></expr_stmt></block></then></if>
            }<pos:position pos:line="282" pos:column="14"/></block></then></if>

            <comment type="line" pos:line="284" pos:column="13">// XXX: here and elsewhere: move such code inside the if guard</comment>
            <expr_stmt><expr><name pos:line="285" pos:column="13">out<pos:position pos:line="285" pos:column="16"/></name> <operator pos:line="285" pos:column="17">=<pos:position pos:line="285" pos:column="18"/></operator> <call><name><name pos:line="285" pos:column="19">sb<pos:position pos:line="285" pos:column="21"/></name><operator pos:line="285" pos:column="21">.<pos:position pos:line="285" pos:column="22"/></operator><name pos:line="285" pos:column="22">termedBuf<pos:position pos:line="285" pos:column="31"/></name></name><argument_list pos:line="285" pos:column="31">()<pos:position pos:line="285" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="287" pos:column="13">quote<pos:position pos:line="287" pos:column="18"/></name> <operator pos:line="287" pos:column="19">=<pos:position pos:line="287" pos:column="20"/></operator> <literal type="number" pos:line="287" pos:column="21">1<pos:position pos:line="287" pos:column="22"/></literal></expr>;<pos:position pos:line="287" pos:column="23"/></expr_stmt>

            <break pos:line="289" pos:column="13">break;<pos:position pos:line="289" pos:column="19"/></break>

        <case pos:line="291" pos:column="9">case <expr><name pos:line="291" pos:column="14">LFT_ADAPTATION_LAST_HEADER_ELEM<pos:position pos:line="291" pos:column="45"/></name></expr>:<pos:position pos:line="291" pos:column="46"/></case>
            <if pos:line="292" pos:column="13">if <condition pos:line="292" pos:column="16">(<expr><name><name pos:line="292" pos:column="17">al<pos:position pos:line="292" pos:column="19"/></name><operator pos:line="292" pos:column="19">-&gt;<pos:position pos:line="292" pos:column="24"/></operator><name pos:line="292" pos:column="21">request<pos:position pos:line="292" pos:column="28"/></name></name></expr>)<pos:position pos:line="292" pos:column="29"/></condition><then pos:line="292" pos:column="29"> <block pos:line="292" pos:column="30">{
                <decl_stmt><decl><type><specifier pos:line="293" pos:column="17">const<pos:position pos:line="293" pos:column="22"/></specifier> <name><name pos:line="293" pos:column="23">Adaptation<pos:position pos:line="293" pos:column="33"/></name><operator pos:line="293" pos:column="33">::<pos:position pos:line="293" pos:column="35"/></operator><name pos:line="293" pos:column="35">History<pos:position pos:line="293" pos:column="42"/></name><operator pos:line="293" pos:column="42">::<pos:position pos:line="293" pos:column="44"/></operator><name pos:line="293" pos:column="44">Pointer<pos:position pos:line="293" pos:column="51"/></name></name></type> <name pos:line="293" pos:column="52">ah<pos:position pos:line="293" pos:column="54"/></name> <init pos:line="293" pos:column="55">= <expr><call><name><name pos:line="293" pos:column="57">al<pos:position pos:line="293" pos:column="59"/></name><operator pos:line="293" pos:column="59">-&gt;<pos:position pos:line="293" pos:column="64"/></operator><name pos:line="293" pos:column="61">request<pos:position pos:line="293" pos:column="68"/></name><operator pos:line="293" pos:column="68">-&gt;<pos:position pos:line="293" pos:column="73"/></operator><name pos:line="293" pos:column="70">adaptHistory<pos:position pos:line="293" pos:column="82"/></name></name><argument_list pos:line="293" pos:column="82">()<pos:position pos:line="293" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="293" pos:column="85"/></decl_stmt>
                <if pos:line="294" pos:column="17">if <condition pos:line="294" pos:column="20">(<expr><name pos:line="294" pos:column="21">ah<pos:position pos:line="294" pos:column="23"/></name> <operator pos:line="294" pos:column="24">!=<pos:position pos:line="294" pos:column="26"/></operator> <name pos:line="294" pos:column="27">NULL<pos:position pos:line="294" pos:column="31"/></name></expr>)<pos:position pos:line="294" pos:column="32"/></condition><then pos:line="294" pos:column="32"> <comment type="line" pos:line="294" pos:column="33">// XXX: add adapt::&lt;all_h but use lastMeta here</comment>
                    <block type="pseudo"><expr_stmt><expr><name pos:line="295" pos:column="21">sb<pos:position pos:line="295" pos:column="23"/></name> <operator pos:line="295" pos:column="24">=<pos:position pos:line="295" pos:column="25"/></operator> <call><name><name pos:line="295" pos:column="26">ah<pos:position pos:line="295" pos:column="28"/></name><operator pos:line="295" pos:column="28">-&gt;<pos:position pos:line="295" pos:column="33"/></operator><name pos:line="295" pos:column="30">allMeta<pos:position pos:line="295" pos:column="37"/></name><operator pos:line="295" pos:column="37">.<pos:position pos:line="295" pos:column="38"/></operator><name pos:line="295" pos:column="38">getByNameListMember<pos:position pos:line="295" pos:column="57"/></name></name><argument_list pos:line="295" pos:column="57">(<argument><expr><name><name pos:line="295" pos:column="58">fmt<pos:position pos:line="295" pos:column="61"/></name><operator pos:line="295" pos:column="61">-&gt;<pos:position pos:line="295" pos:column="66"/></operator><name pos:line="295" pos:column="63">data<pos:position pos:line="295" pos:column="67"/></name><operator pos:line="295" pos:column="67">.<pos:position pos:line="295" pos:column="68"/></operator><name pos:line="295" pos:column="68">header<pos:position pos:line="295" pos:column="74"/></name><operator pos:line="295" pos:column="74">.<pos:position pos:line="295" pos:column="75"/></operator><name pos:line="295" pos:column="75">header<pos:position pos:line="295" pos:column="81"/></name></name></expr></argument>, <argument><expr><name><name pos:line="295" pos:column="83">fmt<pos:position pos:line="295" pos:column="86"/></name><operator pos:line="295" pos:column="86">-&gt;<pos:position pos:line="295" pos:column="91"/></operator><name pos:line="295" pos:column="88">data<pos:position pos:line="295" pos:column="92"/></name><operator pos:line="295" pos:column="92">.<pos:position pos:line="295" pos:column="93"/></operator><name pos:line="295" pos:column="93">header<pos:position pos:line="295" pos:column="99"/></name><operator pos:line="295" pos:column="99">.<pos:position pos:line="295" pos:column="100"/></operator><name pos:line="295" pos:column="100">element<pos:position pos:line="295" pos:column="107"/></name></name></expr></argument>, <argument><expr><name><name pos:line="295" pos:column="109">fmt<pos:position pos:line="295" pos:column="112"/></name><operator pos:line="295" pos:column="112">-&gt;<pos:position pos:line="295" pos:column="117"/></operator><name pos:line="295" pos:column="114">data<pos:position pos:line="295" pos:column="118"/></name><operator pos:line="295" pos:column="118">.<pos:position pos:line="295" pos:column="119"/></operator><name pos:line="295" pos:column="119">header<pos:position pos:line="295" pos:column="125"/></name><operator pos:line="295" pos:column="125">.<pos:position pos:line="295" pos:column="126"/></operator><name pos:line="295" pos:column="126">separator<pos:position pos:line="295" pos:column="135"/></name></name></expr></argument>)<pos:position pos:line="295" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="137"/></expr_stmt></block></then></if>
            }<pos:position pos:line="296" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="298" pos:column="13">out<pos:position pos:line="298" pos:column="16"/></name> <operator pos:line="298" pos:column="17">=<pos:position pos:line="298" pos:column="18"/></operator> <call><name><name pos:line="298" pos:column="19">sb<pos:position pos:line="298" pos:column="21"/></name><operator pos:line="298" pos:column="21">.<pos:position pos:line="298" pos:column="22"/></operator><name pos:line="298" pos:column="22">termedBuf<pos:position pos:line="298" pos:column="31"/></name></name><argument_list pos:line="298" pos:column="31">()<pos:position pos:line="298" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="300" pos:column="13">quote<pos:position pos:line="300" pos:column="18"/></name> <operator pos:line="300" pos:column="19">=<pos:position pos:line="300" pos:column="20"/></operator> <literal type="number" pos:line="300" pos:column="21">1<pos:position pos:line="300" pos:column="22"/></literal></expr>;<pos:position pos:line="300" pos:column="23"/></expr_stmt>

            <break pos:line="302" pos:column="13">break;<pos:position pos:line="302" pos:column="19"/></break>

        <case pos:line="304" pos:column="9">case <expr><name pos:line="304" pos:column="14">LFT_ADAPTATION_LAST_ALL_HEADERS<pos:position pos:line="304" pos:column="45"/></name></expr>:<pos:position pos:line="304" pos:column="46"/></case>
            <expr_stmt><expr><name pos:line="305" pos:column="13">out<pos:position pos:line="305" pos:column="16"/></name> <operator pos:line="305" pos:column="17">=<pos:position pos:line="305" pos:column="18"/></operator> <name><name pos:line="305" pos:column="19">al<pos:position pos:line="305" pos:column="21"/></name><operator pos:line="305" pos:column="21">-&gt;<pos:position pos:line="305" pos:column="26"/></operator><name pos:line="305" pos:column="23">adapt<pos:position pos:line="305" pos:column="28"/></name><operator pos:line="305" pos:column="28">.<pos:position pos:line="305" pos:column="29"/></operator><name pos:line="305" pos:column="29">last_meta<pos:position pos:line="305" pos:column="38"/></name></name></expr>;<pos:position pos:line="305" pos:column="39"/></expr_stmt>

            <expr_stmt><expr><name pos:line="307" pos:column="13">quote<pos:position pos:line="307" pos:column="18"/></name> <operator pos:line="307" pos:column="19">=<pos:position pos:line="307" pos:column="20"/></operator> <literal type="number" pos:line="307" pos:column="21">1<pos:position pos:line="307" pos:column="22"/></literal></expr>;<pos:position pos:line="307" pos:column="23"/></expr_stmt>

            <break pos:line="309" pos:column="13">break;<pos:position pos:line="309" pos:column="19"/></break>
<cpp:endif pos:line="310" pos:column="1">#<cpp:directive pos:line="310" pos:column="2">endif<pos:position pos:line="310" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="312" pos:column="1">#<cpp:directive pos:line="312" pos:column="2">if<pos:position pos:line="312" pos:column="4"/></cpp:directive> <expr><name pos:line="312" pos:column="5">ICAP_CLIENT<pos:position pos:line="312" pos:column="16"/></name></expr></cpp:if>
        <case pos:line="313" pos:column="9">case <expr><name pos:line="313" pos:column="14">LFT_ICAP_ADDR<pos:position pos:line="313" pos:column="27"/></name></expr>:<pos:position pos:line="313" pos:column="28"/></case>
            <if pos:line="314" pos:column="13">if <condition pos:line="314" pos:column="16">(<expr><operator pos:line="314" pos:column="17">!<pos:position pos:line="314" pos:column="18"/></operator><name pos:line="314" pos:column="18">out<pos:position pos:line="314" pos:column="21"/></name></expr>)<pos:position pos:line="314" pos:column="22"/></condition><then pos:line="314" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="315" pos:column="17">out<pos:position pos:line="315" pos:column="20"/></name> <operator pos:line="315" pos:column="21">=<pos:position pos:line="315" pos:column="22"/></operator> <call><name><name pos:line="315" pos:column="23">al<pos:position pos:line="315" pos:column="25"/></name><operator pos:line="315" pos:column="25">-&gt;<pos:position pos:line="315" pos:column="30"/></operator><name pos:line="315" pos:column="27">icap<pos:position pos:line="315" pos:column="31"/></name><operator pos:line="315" pos:column="31">.<pos:position pos:line="315" pos:column="32"/></operator><name pos:line="315" pos:column="32">hostAddr<pos:position pos:line="315" pos:column="40"/></name><operator pos:line="315" pos:column="40">.<pos:position pos:line="315" pos:column="41"/></operator><name pos:line="315" pos:column="41">toStr<pos:position pos:line="315" pos:column="46"/></name></name><argument_list pos:line="315" pos:column="46">(<argument><expr><name pos:line="315" pos:column="47">tmp<pos:position pos:line="315" pos:column="50"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="315" pos:column="51">1024<pos:position pos:line="315" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="315" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="57"/></expr_stmt></block></then></if>
            <break pos:line="316" pos:column="13">break;<pos:position pos:line="316" pos:column="19"/></break>

        <case pos:line="318" pos:column="9">case <expr><name pos:line="318" pos:column="14">LFT_ICAP_SERV_NAME<pos:position pos:line="318" pos:column="32"/></name></expr>:<pos:position pos:line="318" pos:column="33"/></case>
            <expr_stmt><expr><name pos:line="319" pos:column="13">out<pos:position pos:line="319" pos:column="16"/></name> <operator pos:line="319" pos:column="17">=<pos:position pos:line="319" pos:column="18"/></operator> <call><name><name pos:line="319" pos:column="19">al<pos:position pos:line="319" pos:column="21"/></name><operator pos:line="319" pos:column="21">-&gt;<pos:position pos:line="319" pos:column="26"/></operator><name pos:line="319" pos:column="23">icap<pos:position pos:line="319" pos:column="27"/></name><operator pos:line="319" pos:column="27">.<pos:position pos:line="319" pos:column="28"/></operator><name pos:line="319" pos:column="28">serviceName<pos:position pos:line="319" pos:column="39"/></name><operator pos:line="319" pos:column="39">.<pos:position pos:line="319" pos:column="40"/></operator><name pos:line="319" pos:column="40">termedBuf<pos:position pos:line="319" pos:column="49"/></name></name><argument_list pos:line="319" pos:column="49">()<pos:position pos:line="319" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="52"/></expr_stmt>
            <break pos:line="320" pos:column="13">break;<pos:position pos:line="320" pos:column="19"/></break>

        <case pos:line="322" pos:column="9">case <expr><name pos:line="322" pos:column="14">LFT_ICAP_REQUEST_URI<pos:position pos:line="322" pos:column="34"/></name></expr>:<pos:position pos:line="322" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="323" pos:column="13">out<pos:position pos:line="323" pos:column="16"/></name> <operator pos:line="323" pos:column="17">=<pos:position pos:line="323" pos:column="18"/></operator> <call><name><name pos:line="323" pos:column="19">al<pos:position pos:line="323" pos:column="21"/></name><operator pos:line="323" pos:column="21">-&gt;<pos:position pos:line="323" pos:column="26"/></operator><name pos:line="323" pos:column="23">icap<pos:position pos:line="323" pos:column="27"/></name><operator pos:line="323" pos:column="27">.<pos:position pos:line="323" pos:column="28"/></operator><name pos:line="323" pos:column="28">reqUri<pos:position pos:line="323" pos:column="34"/></name><operator pos:line="323" pos:column="34">.<pos:position pos:line="323" pos:column="35"/></operator><name pos:line="323" pos:column="35">termedBuf<pos:position pos:line="323" pos:column="44"/></name></name><argument_list pos:line="323" pos:column="44">()<pos:position pos:line="323" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="47"/></expr_stmt>
            <break pos:line="324" pos:column="13">break;<pos:position pos:line="324" pos:column="19"/></break>

        <case pos:line="326" pos:column="9">case <expr><name pos:line="326" pos:column="14">LFT_ICAP_REQUEST_METHOD<pos:position pos:line="326" pos:column="37"/></name></expr>:<pos:position pos:line="326" pos:column="38"/></case>
            <expr_stmt><expr><name pos:line="327" pos:column="13">out<pos:position pos:line="327" pos:column="16"/></name> <operator pos:line="327" pos:column="17">=<pos:position pos:line="327" pos:column="18"/></operator> <call><name><name pos:line="327" pos:column="19">Adaptation<pos:position pos:line="327" pos:column="29"/></name><operator pos:line="327" pos:column="29">::<pos:position pos:line="327" pos:column="31"/></operator><name pos:line="327" pos:column="31">Icap<pos:position pos:line="327" pos:column="35"/></name><operator pos:line="327" pos:column="35">::<pos:position pos:line="327" pos:column="37"/></operator><name pos:line="327" pos:column="37">ICAP<pos:position pos:line="327" pos:column="41"/></name><operator pos:line="327" pos:column="41">::<pos:position pos:line="327" pos:column="43"/></operator><name pos:line="327" pos:column="43">methodStr<pos:position pos:line="327" pos:column="52"/></name></name><argument_list pos:line="327" pos:column="52">(<argument><expr><name><name pos:line="327" pos:column="53">al<pos:position pos:line="327" pos:column="55"/></name><operator pos:line="327" pos:column="55">-&gt;<pos:position pos:line="327" pos:column="60"/></operator><name pos:line="327" pos:column="57">icap<pos:position pos:line="327" pos:column="61"/></name><operator pos:line="327" pos:column="61">.<pos:position pos:line="327" pos:column="62"/></operator><name pos:line="327" pos:column="62">reqMethod<pos:position pos:line="327" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="327" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="73"/></expr_stmt>
            <break pos:line="328" pos:column="13">break;<pos:position pos:line="328" pos:column="19"/></break>

        <case pos:line="330" pos:column="9">case <expr><name pos:line="330" pos:column="14">LFT_ICAP_BYTES_SENT<pos:position pos:line="330" pos:column="33"/></name></expr>:<pos:position pos:line="330" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="331" pos:column="13">outoff<pos:position pos:line="331" pos:column="19"/></name> <operator pos:line="331" pos:column="20">=<pos:position pos:line="331" pos:column="21"/></operator> <name><name pos:line="331" pos:column="22">al<pos:position pos:line="331" pos:column="24"/></name><operator pos:line="331" pos:column="24">-&gt;<pos:position pos:line="331" pos:column="29"/></operator><name pos:line="331" pos:column="26">icap<pos:position pos:line="331" pos:column="30"/></name><operator pos:line="331" pos:column="30">.<pos:position pos:line="331" pos:column="31"/></operator><name pos:line="331" pos:column="31">bytesSent<pos:position pos:line="331" pos:column="40"/></name></name></expr>;<pos:position pos:line="331" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="332" pos:column="13">dooff<pos:position pos:line="332" pos:column="18"/></name> <operator pos:line="332" pos:column="19">=<pos:position pos:line="332" pos:column="20"/></operator> <literal type="number" pos:line="332" pos:column="21">1<pos:position pos:line="332" pos:column="22"/></literal></expr>;<pos:position pos:line="332" pos:column="23"/></expr_stmt>
            <break pos:line="333" pos:column="13">break;<pos:position pos:line="333" pos:column="19"/></break>

        <case pos:line="335" pos:column="9">case <expr><name pos:line="335" pos:column="14">LFT_ICAP_BYTES_READ<pos:position pos:line="335" pos:column="33"/></name></expr>:<pos:position pos:line="335" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="336" pos:column="13">outoff<pos:position pos:line="336" pos:column="19"/></name> <operator pos:line="336" pos:column="20">=<pos:position pos:line="336" pos:column="21"/></operator> <name><name pos:line="336" pos:column="22">al<pos:position pos:line="336" pos:column="24"/></name><operator pos:line="336" pos:column="24">-&gt;<pos:position pos:line="336" pos:column="29"/></operator><name pos:line="336" pos:column="26">icap<pos:position pos:line="336" pos:column="30"/></name><operator pos:line="336" pos:column="30">.<pos:position pos:line="336" pos:column="31"/></operator><name pos:line="336" pos:column="31">bytesRead<pos:position pos:line="336" pos:column="40"/></name></name></expr>;<pos:position pos:line="336" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="337" pos:column="13">dooff<pos:position pos:line="337" pos:column="18"/></name> <operator pos:line="337" pos:column="19">=<pos:position pos:line="337" pos:column="20"/></operator> <literal type="number" pos:line="337" pos:column="21">1<pos:position pos:line="337" pos:column="22"/></literal></expr>;<pos:position pos:line="337" pos:column="23"/></expr_stmt>
            <break pos:line="338" pos:column="13">break;<pos:position pos:line="338" pos:column="19"/></break>

        <case pos:line="340" pos:column="9">case <expr><name pos:line="340" pos:column="14">LFT_ICAP_BODY_BYTES_READ<pos:position pos:line="340" pos:column="38"/></name></expr>:<pos:position pos:line="340" pos:column="39"/></case>
            <if pos:line="341" pos:column="13">if <condition pos:line="341" pos:column="16">(<expr><name><name pos:line="341" pos:column="17">al<pos:position pos:line="341" pos:column="19"/></name><operator pos:line="341" pos:column="19">-&gt;<pos:position pos:line="341" pos:column="24"/></operator><name pos:line="341" pos:column="21">icap<pos:position pos:line="341" pos:column="25"/></name><operator pos:line="341" pos:column="25">.<pos:position pos:line="341" pos:column="26"/></operator><name pos:line="341" pos:column="26">bodyBytesRead<pos:position pos:line="341" pos:column="39"/></name></name> <operator pos:line="341" pos:column="40">&gt;=<pos:position pos:line="341" pos:column="45"/></operator> <literal type="number" pos:line="341" pos:column="43">0<pos:position pos:line="341" pos:column="44"/></literal></expr>)<pos:position pos:line="341" pos:column="45"/></condition><then pos:line="341" pos:column="45"> <block pos:line="341" pos:column="46">{
                <expr_stmt><expr><name pos:line="342" pos:column="17">outoff<pos:position pos:line="342" pos:column="23"/></name> <operator pos:line="342" pos:column="24">=<pos:position pos:line="342" pos:column="25"/></operator> <name><name pos:line="342" pos:column="26">al<pos:position pos:line="342" pos:column="28"/></name><operator pos:line="342" pos:column="28">-&gt;<pos:position pos:line="342" pos:column="33"/></operator><name pos:line="342" pos:column="30">icap<pos:position pos:line="342" pos:column="34"/></name><operator pos:line="342" pos:column="34">.<pos:position pos:line="342" pos:column="35"/></operator><name pos:line="342" pos:column="35">bodyBytesRead<pos:position pos:line="342" pos:column="48"/></name></name></expr>;<pos:position pos:line="342" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="343" pos:column="17">dooff<pos:position pos:line="343" pos:column="22"/></name> <operator pos:line="343" pos:column="23">=<pos:position pos:line="343" pos:column="24"/></operator> <literal type="number" pos:line="343" pos:column="25">1<pos:position pos:line="343" pos:column="26"/></literal></expr>;<pos:position pos:line="343" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="344" pos:column="14"/></block></then></if>
            <comment type="line" pos:line="345" pos:column="13">// else if icap.bodyBytesRead &lt; 0, we do not have any http data,</comment>
            <comment type="line" pos:line="346" pos:column="13">// so just print a "-" (204 responses etc)</comment>
            <break pos:line="347" pos:column="13">break;<pos:position pos:line="347" pos:column="19"/></break>

        <case pos:line="349" pos:column="9">case <expr><name pos:line="349" pos:column="14">LFT_ICAP_REQ_HEADER<pos:position pos:line="349" pos:column="33"/></name></expr>:<pos:position pos:line="349" pos:column="34"/></case>
            <if pos:line="350" pos:column="13">if <condition pos:line="350" pos:column="16">(<expr><name pos:line="350" pos:column="17">NULL<pos:position pos:line="350" pos:column="21"/></name> <operator pos:line="350" pos:column="22">!=<pos:position pos:line="350" pos:column="24"/></operator> <name><name pos:line="350" pos:column="25">al<pos:position pos:line="350" pos:column="27"/></name><operator pos:line="350" pos:column="27">-&gt;<pos:position pos:line="350" pos:column="32"/></operator><name pos:line="350" pos:column="29">icap<pos:position pos:line="350" pos:column="33"/></name><operator pos:line="350" pos:column="33">.<pos:position pos:line="350" pos:column="34"/></operator><name pos:line="350" pos:column="34">request<pos:position pos:line="350" pos:column="41"/></name></name></expr>)<pos:position pos:line="350" pos:column="42"/></condition><then pos:line="350" pos:column="42"> <block pos:line="350" pos:column="43">{
                <expr_stmt><expr><name pos:line="351" pos:column="17">sb<pos:position pos:line="351" pos:column="19"/></name> <operator pos:line="351" pos:column="20">=<pos:position pos:line="351" pos:column="21"/></operator> <call><name><name pos:line="351" pos:column="22">al<pos:position pos:line="351" pos:column="24"/></name><operator pos:line="351" pos:column="24">-&gt;<pos:position pos:line="351" pos:column="29"/></operator><name pos:line="351" pos:column="26">icap<pos:position pos:line="351" pos:column="30"/></name><operator pos:line="351" pos:column="30">.<pos:position pos:line="351" pos:column="31"/></operator><name pos:line="351" pos:column="31">request<pos:position pos:line="351" pos:column="38"/></name><operator pos:line="351" pos:column="38">-&gt;<pos:position pos:line="351" pos:column="43"/></operator><name pos:line="351" pos:column="40">header<pos:position pos:line="351" pos:column="46"/></name><operator pos:line="351" pos:column="46">.<pos:position pos:line="351" pos:column="47"/></operator><name pos:line="351" pos:column="47">getByName<pos:position pos:line="351" pos:column="56"/></name></name><argument_list pos:line="351" pos:column="56">(<argument><expr><name><name pos:line="351" pos:column="57">fmt<pos:position pos:line="351" pos:column="60"/></name><operator pos:line="351" pos:column="60">-&gt;<pos:position pos:line="351" pos:column="65"/></operator><name pos:line="351" pos:column="62">data<pos:position pos:line="351" pos:column="66"/></name><operator pos:line="351" pos:column="66">.<pos:position pos:line="351" pos:column="67"/></operator><name pos:line="351" pos:column="67">header<pos:position pos:line="351" pos:column="73"/></name><operator pos:line="351" pos:column="73">.<pos:position pos:line="351" pos:column="74"/></operator><name pos:line="351" pos:column="74">header<pos:position pos:line="351" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="351" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="82"/></expr_stmt>
                <expr_stmt><expr><name pos:line="352" pos:column="17">out<pos:position pos:line="352" pos:column="20"/></name> <operator pos:line="352" pos:column="21">=<pos:position pos:line="352" pos:column="22"/></operator> <call><name><name pos:line="352" pos:column="23">sb<pos:position pos:line="352" pos:column="25"/></name><operator pos:line="352" pos:column="25">.<pos:position pos:line="352" pos:column="26"/></operator><name pos:line="352" pos:column="26">termedBuf<pos:position pos:line="352" pos:column="35"/></name></name><argument_list pos:line="352" pos:column="35">()<pos:position pos:line="352" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="353" pos:column="17">quote<pos:position pos:line="353" pos:column="22"/></name> <operator pos:line="353" pos:column="23">=<pos:position pos:line="353" pos:column="24"/></operator> <literal type="number" pos:line="353" pos:column="25">1<pos:position pos:line="353" pos:column="26"/></literal></expr>;<pos:position pos:line="353" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="354" pos:column="14"/></block></then></if>
            <break pos:line="355" pos:column="13">break;<pos:position pos:line="355" pos:column="19"/></break>

        <case pos:line="357" pos:column="9">case <expr><name pos:line="357" pos:column="14">LFT_ICAP_REQ_HEADER_ELEM<pos:position pos:line="357" pos:column="38"/></name></expr>:<pos:position pos:line="357" pos:column="39"/></case>
            <if pos:line="358" pos:column="13">if <condition pos:line="358" pos:column="16">(<expr><name><name pos:line="358" pos:column="17">al<pos:position pos:line="358" pos:column="19"/></name><operator pos:line="358" pos:column="19">-&gt;<pos:position pos:line="358" pos:column="24"/></operator><name pos:line="358" pos:column="21">icap<pos:position pos:line="358" pos:column="25"/></name><operator pos:line="358" pos:column="25">.<pos:position pos:line="358" pos:column="26"/></operator><name pos:line="358" pos:column="26">request<pos:position pos:line="358" pos:column="33"/></name></name></expr>)<pos:position pos:line="358" pos:column="34"/></condition><then pos:line="358" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><name pos:line="359" pos:column="17">sb<pos:position pos:line="359" pos:column="19"/></name> <operator pos:line="359" pos:column="20">=<pos:position pos:line="359" pos:column="21"/></operator> <call><name><name pos:line="359" pos:column="22">al<pos:position pos:line="359" pos:column="24"/></name><operator pos:line="359" pos:column="24">-&gt;<pos:position pos:line="359" pos:column="29"/></operator><name pos:line="359" pos:column="26">icap<pos:position pos:line="359" pos:column="30"/></name><operator pos:line="359" pos:column="30">.<pos:position pos:line="359" pos:column="31"/></operator><name pos:line="359" pos:column="31">request<pos:position pos:line="359" pos:column="38"/></name><operator pos:line="359" pos:column="38">-&gt;<pos:position pos:line="359" pos:column="43"/></operator><name pos:line="359" pos:column="40">header<pos:position pos:line="359" pos:column="46"/></name><operator pos:line="359" pos:column="46">.<pos:position pos:line="359" pos:column="47"/></operator><name pos:line="359" pos:column="47">getByNameListMember<pos:position pos:line="359" pos:column="66"/></name></name><argument_list pos:line="359" pos:column="66">(<argument><expr><name><name pos:line="359" pos:column="67">fmt<pos:position pos:line="359" pos:column="70"/></name><operator pos:line="359" pos:column="70">-&gt;<pos:position pos:line="359" pos:column="75"/></operator><name pos:line="359" pos:column="72">data<pos:position pos:line="359" pos:column="76"/></name><operator pos:line="359" pos:column="76">.<pos:position pos:line="359" pos:column="77"/></operator><name pos:line="359" pos:column="77">header<pos:position pos:line="359" pos:column="83"/></name><operator pos:line="359" pos:column="83">.<pos:position pos:line="359" pos:column="84"/></operator><name pos:line="359" pos:column="84">header<pos:position pos:line="359" pos:column="90"/></name></name></expr></argument>, <argument><expr><name><name pos:line="359" pos:column="92">fmt<pos:position pos:line="359" pos:column="95"/></name><operator pos:line="359" pos:column="95">-&gt;<pos:position pos:line="359" pos:column="100"/></operator><name pos:line="359" pos:column="97">data<pos:position pos:line="359" pos:column="101"/></name><operator pos:line="359" pos:column="101">.<pos:position pos:line="359" pos:column="102"/></operator><name pos:line="359" pos:column="102">header<pos:position pos:line="359" pos:column="108"/></name><operator pos:line="359" pos:column="108">.<pos:position pos:line="359" pos:column="109"/></operator><name pos:line="359" pos:column="109">element<pos:position pos:line="359" pos:column="116"/></name></name></expr></argument>, <argument><expr><name><name pos:line="359" pos:column="118">fmt<pos:position pos:line="359" pos:column="121"/></name><operator pos:line="359" pos:column="121">-&gt;<pos:position pos:line="359" pos:column="126"/></operator><name pos:line="359" pos:column="123">data<pos:position pos:line="359" pos:column="127"/></name><operator pos:line="359" pos:column="127">.<pos:position pos:line="359" pos:column="128"/></operator><name pos:line="359" pos:column="128">header<pos:position pos:line="359" pos:column="134"/></name><operator pos:line="359" pos:column="134">.<pos:position pos:line="359" pos:column="135"/></operator><name pos:line="359" pos:column="135">separator<pos:position pos:line="359" pos:column="144"/></name></name></expr></argument>)<pos:position pos:line="359" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="146"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="361" pos:column="13">out<pos:position pos:line="361" pos:column="16"/></name> <operator pos:line="361" pos:column="17">=<pos:position pos:line="361" pos:column="18"/></operator> <call><name><name pos:line="361" pos:column="19">sb<pos:position pos:line="361" pos:column="21"/></name><operator pos:line="361" pos:column="21">.<pos:position pos:line="361" pos:column="22"/></operator><name pos:line="361" pos:column="22">termedBuf<pos:position pos:line="361" pos:column="31"/></name></name><argument_list pos:line="361" pos:column="31">()<pos:position pos:line="361" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="363" pos:column="13">quote<pos:position pos:line="363" pos:column="18"/></name> <operator pos:line="363" pos:column="19">=<pos:position pos:line="363" pos:column="20"/></operator> <literal type="number" pos:line="363" pos:column="21">1<pos:position pos:line="363" pos:column="22"/></literal></expr>;<pos:position pos:line="363" pos:column="23"/></expr_stmt>

            <break pos:line="365" pos:column="13">break;<pos:position pos:line="365" pos:column="19"/></break>

        <case pos:line="367" pos:column="9">case <expr><name pos:line="367" pos:column="14">LFT_ICAP_REQ_ALL_HEADERS<pos:position pos:line="367" pos:column="38"/></name></expr>:<pos:position pos:line="367" pos:column="39"/></case>
            <if pos:line="368" pos:column="13">if <condition pos:line="368" pos:column="16">(<expr><name><name pos:line="368" pos:column="17">al<pos:position pos:line="368" pos:column="19"/></name><operator pos:line="368" pos:column="19">-&gt;<pos:position pos:line="368" pos:column="24"/></operator><name pos:line="368" pos:column="21">icap<pos:position pos:line="368" pos:column="25"/></name><operator pos:line="368" pos:column="25">.<pos:position pos:line="368" pos:column="26"/></operator><name pos:line="368" pos:column="26">request<pos:position pos:line="368" pos:column="33"/></name></name></expr>)<pos:position pos:line="368" pos:column="34"/></condition><then pos:line="368" pos:column="34"> <block pos:line="368" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="369" pos:column="17">HttpHeaderPos<pos:position pos:line="369" pos:column="30"/></name></type> <name pos:line="369" pos:column="31">pos<pos:position pos:line="369" pos:column="34"/></name> <init pos:line="369" pos:column="35">= <expr><name pos:line="369" pos:column="37">HttpHeaderInitPos<pos:position pos:line="369" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="369" pos:column="55"/></decl_stmt>
                <while pos:line="370" pos:column="17">while <condition pos:line="370" pos:column="23">(<decl><type><specifier pos:line="370" pos:column="24">const<pos:position pos:line="370" pos:column="29"/></specifier> <name pos:line="370" pos:column="30">HttpHeaderEntry<pos:position pos:line="370" pos:column="45"/></name> <modifier pos:line="370" pos:column="46">*<pos:position pos:line="370" pos:column="47"/></modifier></type><name pos:line="370" pos:column="47">e<pos:position pos:line="370" pos:column="48"/></name> <init pos:line="370" pos:column="49">= <expr><call><name><name pos:line="370" pos:column="51">al<pos:position pos:line="370" pos:column="53"/></name><operator pos:line="370" pos:column="53">-&gt;<pos:position pos:line="370" pos:column="58"/></operator><name pos:line="370" pos:column="55">icap<pos:position pos:line="370" pos:column="59"/></name><operator pos:line="370" pos:column="59">.<pos:position pos:line="370" pos:column="60"/></operator><name pos:line="370" pos:column="60">request<pos:position pos:line="370" pos:column="67"/></name><operator pos:line="370" pos:column="67">-&gt;<pos:position pos:line="370" pos:column="72"/></operator><name pos:line="370" pos:column="69">header<pos:position pos:line="370" pos:column="75"/></name><operator pos:line="370" pos:column="75">.<pos:position pos:line="370" pos:column="76"/></operator><name pos:line="370" pos:column="76">getEntry<pos:position pos:line="370" pos:column="84"/></name></name><argument_list pos:line="370" pos:column="84">(<argument><expr><operator pos:line="370" pos:column="85">&amp;<pos:position pos:line="370" pos:column="90"/></operator><name pos:line="370" pos:column="86">pos<pos:position pos:line="370" pos:column="89"/></name></expr></argument>)<pos:position pos:line="370" pos:column="90"/></argument_list></call></expr></init></decl>)<pos:position pos:line="370" pos:column="91"/></condition> <block pos:line="370" pos:column="92">{
                    <expr_stmt><expr><call><name><name pos:line="371" pos:column="21">sb<pos:position pos:line="371" pos:column="23"/></name><operator pos:line="371" pos:column="23">.<pos:position pos:line="371" pos:column="24"/></operator><name pos:line="371" pos:column="24">append<pos:position pos:line="371" pos:column="30"/></name></name><argument_list pos:line="371" pos:column="30">(<argument><expr><name><name pos:line="371" pos:column="31">e<pos:position pos:line="371" pos:column="32"/></name><operator pos:line="371" pos:column="32">-&gt;<pos:position pos:line="371" pos:column="37"/></operator><name pos:line="371" pos:column="34">name<pos:position pos:line="371" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="371" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="372" pos:column="21">sb<pos:position pos:line="372" pos:column="23"/></name><operator pos:line="372" pos:column="23">.<pos:position pos:line="372" pos:column="24"/></operator><name pos:line="372" pos:column="24">append<pos:position pos:line="372" pos:column="30"/></name></name><argument_list pos:line="372" pos:column="30">(<argument><expr><literal type="string" pos:line="372" pos:column="31">": "<pos:position pos:line="372" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="372" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="373" pos:column="21">sb<pos:position pos:line="373" pos:column="23"/></name><operator pos:line="373" pos:column="23">.<pos:position pos:line="373" pos:column="24"/></operator><name pos:line="373" pos:column="24">append<pos:position pos:line="373" pos:column="30"/></name></name><argument_list pos:line="373" pos:column="30">(<argument><expr><name><name pos:line="373" pos:column="31">e<pos:position pos:line="373" pos:column="32"/></name><operator pos:line="373" pos:column="32">-&gt;<pos:position pos:line="373" pos:column="37"/></operator><name pos:line="373" pos:column="34">value<pos:position pos:line="373" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="373" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="374" pos:column="21">sb<pos:position pos:line="374" pos:column="23"/></name><operator pos:line="374" pos:column="23">.<pos:position pos:line="374" pos:column="24"/></operator><name pos:line="374" pos:column="24">append<pos:position pos:line="374" pos:column="30"/></name></name><argument_list pos:line="374" pos:column="30">(<argument><expr><literal type="string" pos:line="374" pos:column="31">"\r\n"<pos:position pos:line="374" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="374" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="375" pos:column="18"/></block></while>
                <expr_stmt><expr><name pos:line="376" pos:column="17">out<pos:position pos:line="376" pos:column="20"/></name> <operator pos:line="376" pos:column="21">=<pos:position pos:line="376" pos:column="22"/></operator> <call><name><name pos:line="376" pos:column="23">sb<pos:position pos:line="376" pos:column="25"/></name><operator pos:line="376" pos:column="25">.<pos:position pos:line="376" pos:column="26"/></operator><name pos:line="376" pos:column="26">termedBuf<pos:position pos:line="376" pos:column="35"/></name></name><argument_list pos:line="376" pos:column="35">()<pos:position pos:line="376" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="377" pos:column="17">quote<pos:position pos:line="377" pos:column="22"/></name> <operator pos:line="377" pos:column="23">=<pos:position pos:line="377" pos:column="24"/></operator> <literal type="number" pos:line="377" pos:column="25">1<pos:position pos:line="377" pos:column="26"/></literal></expr>;<pos:position pos:line="377" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="378" pos:column="14"/></block></then></if>
            <break pos:line="379" pos:column="13">break;<pos:position pos:line="379" pos:column="19"/></break>

        <case pos:line="381" pos:column="9">case <expr><name pos:line="381" pos:column="14">LFT_ICAP_REP_HEADER<pos:position pos:line="381" pos:column="33"/></name></expr>:<pos:position pos:line="381" pos:column="34"/></case>
            <if pos:line="382" pos:column="13">if <condition pos:line="382" pos:column="16">(<expr><name pos:line="382" pos:column="17">NULL<pos:position pos:line="382" pos:column="21"/></name> <operator pos:line="382" pos:column="22">!=<pos:position pos:line="382" pos:column="24"/></operator> <name><name pos:line="382" pos:column="25">al<pos:position pos:line="382" pos:column="27"/></name><operator pos:line="382" pos:column="27">-&gt;<pos:position pos:line="382" pos:column="32"/></operator><name pos:line="382" pos:column="29">icap<pos:position pos:line="382" pos:column="33"/></name><operator pos:line="382" pos:column="33">.<pos:position pos:line="382" pos:column="34"/></operator><name pos:line="382" pos:column="34">reply<pos:position pos:line="382" pos:column="39"/></name></name></expr>)<pos:position pos:line="382" pos:column="40"/></condition><then pos:line="382" pos:column="40"> <block pos:line="382" pos:column="41">{
                <expr_stmt><expr><name pos:line="383" pos:column="17">sb<pos:position pos:line="383" pos:column="19"/></name> <operator pos:line="383" pos:column="20">=<pos:position pos:line="383" pos:column="21"/></operator> <call><name><name pos:line="383" pos:column="22">al<pos:position pos:line="383" pos:column="24"/></name><operator pos:line="383" pos:column="24">-&gt;<pos:position pos:line="383" pos:column="29"/></operator><name pos:line="383" pos:column="26">icap<pos:position pos:line="383" pos:column="30"/></name><operator pos:line="383" pos:column="30">.<pos:position pos:line="383" pos:column="31"/></operator><name pos:line="383" pos:column="31">reply<pos:position pos:line="383" pos:column="36"/></name><operator pos:line="383" pos:column="36">-&gt;<pos:position pos:line="383" pos:column="41"/></operator><name pos:line="383" pos:column="38">header<pos:position pos:line="383" pos:column="44"/></name><operator pos:line="383" pos:column="44">.<pos:position pos:line="383" pos:column="45"/></operator><name pos:line="383" pos:column="45">getByName<pos:position pos:line="383" pos:column="54"/></name></name><argument_list pos:line="383" pos:column="54">(<argument><expr><name><name pos:line="383" pos:column="55">fmt<pos:position pos:line="383" pos:column="58"/></name><operator pos:line="383" pos:column="58">-&gt;<pos:position pos:line="383" pos:column="63"/></operator><name pos:line="383" pos:column="60">data<pos:position pos:line="383" pos:column="64"/></name><operator pos:line="383" pos:column="64">.<pos:position pos:line="383" pos:column="65"/></operator><name pos:line="383" pos:column="65">header<pos:position pos:line="383" pos:column="71"/></name><operator pos:line="383" pos:column="71">.<pos:position pos:line="383" pos:column="72"/></operator><name pos:line="383" pos:column="72">header<pos:position pos:line="383" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="383" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><name pos:line="384" pos:column="17">out<pos:position pos:line="384" pos:column="20"/></name> <operator pos:line="384" pos:column="21">=<pos:position pos:line="384" pos:column="22"/></operator> <call><name><name pos:line="384" pos:column="23">sb<pos:position pos:line="384" pos:column="25"/></name><operator pos:line="384" pos:column="25">.<pos:position pos:line="384" pos:column="26"/></operator><name pos:line="384" pos:column="26">termedBuf<pos:position pos:line="384" pos:column="35"/></name></name><argument_list pos:line="384" pos:column="35">()<pos:position pos:line="384" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="385" pos:column="17">quote<pos:position pos:line="385" pos:column="22"/></name> <operator pos:line="385" pos:column="23">=<pos:position pos:line="385" pos:column="24"/></operator> <literal type="number" pos:line="385" pos:column="25">1<pos:position pos:line="385" pos:column="26"/></literal></expr>;<pos:position pos:line="385" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="386" pos:column="14"/></block></then></if>
            <break pos:line="387" pos:column="13">break;<pos:position pos:line="387" pos:column="19"/></break>

        <case pos:line="389" pos:column="9">case <expr><name pos:line="389" pos:column="14">LFT_ICAP_REP_HEADER_ELEM<pos:position pos:line="389" pos:column="38"/></name></expr>:<pos:position pos:line="389" pos:column="39"/></case>
            <if pos:line="390" pos:column="13">if <condition pos:line="390" pos:column="16">(<expr><name pos:line="390" pos:column="17">NULL<pos:position pos:line="390" pos:column="21"/></name> <operator pos:line="390" pos:column="22">!=<pos:position pos:line="390" pos:column="24"/></operator> <name><name pos:line="390" pos:column="25">al<pos:position pos:line="390" pos:column="27"/></name><operator pos:line="390" pos:column="27">-&gt;<pos:position pos:line="390" pos:column="32"/></operator><name pos:line="390" pos:column="29">icap<pos:position pos:line="390" pos:column="33"/></name><operator pos:line="390" pos:column="33">.<pos:position pos:line="390" pos:column="34"/></operator><name pos:line="390" pos:column="34">reply<pos:position pos:line="390" pos:column="39"/></name></name></expr>)<pos:position pos:line="390" pos:column="40"/></condition><then pos:line="390" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><name pos:line="391" pos:column="17">sb<pos:position pos:line="391" pos:column="19"/></name> <operator pos:line="391" pos:column="20">=<pos:position pos:line="391" pos:column="21"/></operator> <call><name><name pos:line="391" pos:column="22">al<pos:position pos:line="391" pos:column="24"/></name><operator pos:line="391" pos:column="24">-&gt;<pos:position pos:line="391" pos:column="29"/></operator><name pos:line="391" pos:column="26">icap<pos:position pos:line="391" pos:column="30"/></name><operator pos:line="391" pos:column="30">.<pos:position pos:line="391" pos:column="31"/></operator><name pos:line="391" pos:column="31">reply<pos:position pos:line="391" pos:column="36"/></name><operator pos:line="391" pos:column="36">-&gt;<pos:position pos:line="391" pos:column="41"/></operator><name pos:line="391" pos:column="38">header<pos:position pos:line="391" pos:column="44"/></name><operator pos:line="391" pos:column="44">.<pos:position pos:line="391" pos:column="45"/></operator><name pos:line="391" pos:column="45">getByNameListMember<pos:position pos:line="391" pos:column="64"/></name></name><argument_list pos:line="391" pos:column="64">(<argument><expr><name><name pos:line="391" pos:column="65">fmt<pos:position pos:line="391" pos:column="68"/></name><operator pos:line="391" pos:column="68">-&gt;<pos:position pos:line="391" pos:column="73"/></operator><name pos:line="391" pos:column="70">data<pos:position pos:line="391" pos:column="74"/></name><operator pos:line="391" pos:column="74">.<pos:position pos:line="391" pos:column="75"/></operator><name pos:line="391" pos:column="75">header<pos:position pos:line="391" pos:column="81"/></name><operator pos:line="391" pos:column="81">.<pos:position pos:line="391" pos:column="82"/></operator><name pos:line="391" pos:column="82">header<pos:position pos:line="391" pos:column="88"/></name></name></expr></argument>, <argument><expr><name><name pos:line="391" pos:column="90">fmt<pos:position pos:line="391" pos:column="93"/></name><operator pos:line="391" pos:column="93">-&gt;<pos:position pos:line="391" pos:column="98"/></operator><name pos:line="391" pos:column="95">data<pos:position pos:line="391" pos:column="99"/></name><operator pos:line="391" pos:column="99">.<pos:position pos:line="391" pos:column="100"/></operator><name pos:line="391" pos:column="100">header<pos:position pos:line="391" pos:column="106"/></name><operator pos:line="391" pos:column="106">.<pos:position pos:line="391" pos:column="107"/></operator><name pos:line="391" pos:column="107">element<pos:position pos:line="391" pos:column="114"/></name></name></expr></argument>, <argument><expr><name><name pos:line="391" pos:column="116">fmt<pos:position pos:line="391" pos:column="119"/></name><operator pos:line="391" pos:column="119">-&gt;<pos:position pos:line="391" pos:column="124"/></operator><name pos:line="391" pos:column="121">data<pos:position pos:line="391" pos:column="125"/></name><operator pos:line="391" pos:column="125">.<pos:position pos:line="391" pos:column="126"/></operator><name pos:line="391" pos:column="126">header<pos:position pos:line="391" pos:column="132"/></name><operator pos:line="391" pos:column="132">.<pos:position pos:line="391" pos:column="133"/></operator><name pos:line="391" pos:column="133">separator<pos:position pos:line="391" pos:column="142"/></name></name></expr></argument>)<pos:position pos:line="391" pos:column="143"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="144"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="393" pos:column="13">out<pos:position pos:line="393" pos:column="16"/></name> <operator pos:line="393" pos:column="17">=<pos:position pos:line="393" pos:column="18"/></operator> <call><name><name pos:line="393" pos:column="19">sb<pos:position pos:line="393" pos:column="21"/></name><operator pos:line="393" pos:column="21">.<pos:position pos:line="393" pos:column="22"/></operator><name pos:line="393" pos:column="22">termedBuf<pos:position pos:line="393" pos:column="31"/></name></name><argument_list pos:line="393" pos:column="31">()<pos:position pos:line="393" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="395" pos:column="13">quote<pos:position pos:line="395" pos:column="18"/></name> <operator pos:line="395" pos:column="19">=<pos:position pos:line="395" pos:column="20"/></operator> <literal type="number" pos:line="395" pos:column="21">1<pos:position pos:line="395" pos:column="22"/></literal></expr>;<pos:position pos:line="395" pos:column="23"/></expr_stmt>

            <break pos:line="397" pos:column="13">break;<pos:position pos:line="397" pos:column="19"/></break>

        <case pos:line="399" pos:column="9">case <expr><name pos:line="399" pos:column="14">LFT_ICAP_REP_ALL_HEADERS<pos:position pos:line="399" pos:column="38"/></name></expr>:<pos:position pos:line="399" pos:column="39"/></case>
            <if pos:line="400" pos:column="13">if <condition pos:line="400" pos:column="16">(<expr><name><name pos:line="400" pos:column="17">al<pos:position pos:line="400" pos:column="19"/></name><operator pos:line="400" pos:column="19">-&gt;<pos:position pos:line="400" pos:column="24"/></operator><name pos:line="400" pos:column="21">icap<pos:position pos:line="400" pos:column="25"/></name><operator pos:line="400" pos:column="25">.<pos:position pos:line="400" pos:column="26"/></operator><name pos:line="400" pos:column="26">reply<pos:position pos:line="400" pos:column="31"/></name></name></expr>)<pos:position pos:line="400" pos:column="32"/></condition><then pos:line="400" pos:column="32"> <block pos:line="400" pos:column="33">{
                <decl_stmt><decl><type><name pos:line="401" pos:column="17">HttpHeaderPos<pos:position pos:line="401" pos:column="30"/></name></type> <name pos:line="401" pos:column="31">pos<pos:position pos:line="401" pos:column="34"/></name> <init pos:line="401" pos:column="35">= <expr><name pos:line="401" pos:column="37">HttpHeaderInitPos<pos:position pos:line="401" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="401" pos:column="55"/></decl_stmt>
                <while pos:line="402" pos:column="17">while <condition pos:line="402" pos:column="23">(<decl><type><specifier pos:line="402" pos:column="24">const<pos:position pos:line="402" pos:column="29"/></specifier> <name pos:line="402" pos:column="30">HttpHeaderEntry<pos:position pos:line="402" pos:column="45"/></name> <modifier pos:line="402" pos:column="46">*<pos:position pos:line="402" pos:column="47"/></modifier></type><name pos:line="402" pos:column="47">e<pos:position pos:line="402" pos:column="48"/></name> <init pos:line="402" pos:column="49">= <expr><call><name><name pos:line="402" pos:column="51">al<pos:position pos:line="402" pos:column="53"/></name><operator pos:line="402" pos:column="53">-&gt;<pos:position pos:line="402" pos:column="58"/></operator><name pos:line="402" pos:column="55">icap<pos:position pos:line="402" pos:column="59"/></name><operator pos:line="402" pos:column="59">.<pos:position pos:line="402" pos:column="60"/></operator><name pos:line="402" pos:column="60">reply<pos:position pos:line="402" pos:column="65"/></name><operator pos:line="402" pos:column="65">-&gt;<pos:position pos:line="402" pos:column="70"/></operator><name pos:line="402" pos:column="67">header<pos:position pos:line="402" pos:column="73"/></name><operator pos:line="402" pos:column="73">.<pos:position pos:line="402" pos:column="74"/></operator><name pos:line="402" pos:column="74">getEntry<pos:position pos:line="402" pos:column="82"/></name></name><argument_list pos:line="402" pos:column="82">(<argument><expr><operator pos:line="402" pos:column="83">&amp;<pos:position pos:line="402" pos:column="88"/></operator><name pos:line="402" pos:column="84">pos<pos:position pos:line="402" pos:column="87"/></name></expr></argument>)<pos:position pos:line="402" pos:column="88"/></argument_list></call></expr></init></decl>)<pos:position pos:line="402" pos:column="89"/></condition> <block pos:line="402" pos:column="90">{
                    <expr_stmt><expr><call><name><name pos:line="403" pos:column="21">sb<pos:position pos:line="403" pos:column="23"/></name><operator pos:line="403" pos:column="23">.<pos:position pos:line="403" pos:column="24"/></operator><name pos:line="403" pos:column="24">append<pos:position pos:line="403" pos:column="30"/></name></name><argument_list pos:line="403" pos:column="30">(<argument><expr><name><name pos:line="403" pos:column="31">e<pos:position pos:line="403" pos:column="32"/></name><operator pos:line="403" pos:column="32">-&gt;<pos:position pos:line="403" pos:column="37"/></operator><name pos:line="403" pos:column="34">name<pos:position pos:line="403" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="403" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="404" pos:column="21">sb<pos:position pos:line="404" pos:column="23"/></name><operator pos:line="404" pos:column="23">.<pos:position pos:line="404" pos:column="24"/></operator><name pos:line="404" pos:column="24">append<pos:position pos:line="404" pos:column="30"/></name></name><argument_list pos:line="404" pos:column="30">(<argument><expr><literal type="string" pos:line="404" pos:column="31">": "<pos:position pos:line="404" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="404" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="405" pos:column="21">sb<pos:position pos:line="405" pos:column="23"/></name><operator pos:line="405" pos:column="23">.<pos:position pos:line="405" pos:column="24"/></operator><name pos:line="405" pos:column="24">append<pos:position pos:line="405" pos:column="30"/></name></name><argument_list pos:line="405" pos:column="30">(<argument><expr><name><name pos:line="405" pos:column="31">e<pos:position pos:line="405" pos:column="32"/></name><operator pos:line="405" pos:column="32">-&gt;<pos:position pos:line="405" pos:column="37"/></operator><name pos:line="405" pos:column="34">value<pos:position pos:line="405" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="405" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="406" pos:column="21">sb<pos:position pos:line="406" pos:column="23"/></name><operator pos:line="406" pos:column="23">.<pos:position pos:line="406" pos:column="24"/></operator><name pos:line="406" pos:column="24">append<pos:position pos:line="406" pos:column="30"/></name></name><argument_list pos:line="406" pos:column="30">(<argument><expr><literal type="string" pos:line="406" pos:column="31">"\r\n"<pos:position pos:line="406" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="406" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="407" pos:column="18"/></block></while>
                <expr_stmt><expr><name pos:line="408" pos:column="17">out<pos:position pos:line="408" pos:column="20"/></name> <operator pos:line="408" pos:column="21">=<pos:position pos:line="408" pos:column="22"/></operator> <call><name><name pos:line="408" pos:column="23">sb<pos:position pos:line="408" pos:column="25"/></name><operator pos:line="408" pos:column="25">.<pos:position pos:line="408" pos:column="26"/></operator><name pos:line="408" pos:column="26">termedBuf<pos:position pos:line="408" pos:column="35"/></name></name><argument_list pos:line="408" pos:column="35">()<pos:position pos:line="408" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="409" pos:column="17">quote<pos:position pos:line="409" pos:column="22"/></name> <operator pos:line="409" pos:column="23">=<pos:position pos:line="409" pos:column="24"/></operator> <literal type="number" pos:line="409" pos:column="25">1<pos:position pos:line="409" pos:column="26"/></literal></expr>;<pos:position pos:line="409" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="410" pos:column="14"/></block></then></if>
            <break pos:line="411" pos:column="13">break;<pos:position pos:line="411" pos:column="19"/></break>

        <case pos:line="413" pos:column="9">case <expr><name pos:line="413" pos:column="14">LFT_ICAP_TR_RESPONSE_TIME<pos:position pos:line="413" pos:column="39"/></name></expr>:<pos:position pos:line="413" pos:column="40"/></case>
            <expr_stmt><expr><name pos:line="414" pos:column="13">outint<pos:position pos:line="414" pos:column="19"/></name> <operator pos:line="414" pos:column="20">=<pos:position pos:line="414" pos:column="21"/></operator> <name><name pos:line="414" pos:column="22">al<pos:position pos:line="414" pos:column="24"/></name><operator pos:line="414" pos:column="24">-&gt;<pos:position pos:line="414" pos:column="29"/></operator><name pos:line="414" pos:column="26">icap<pos:position pos:line="414" pos:column="30"/></name><operator pos:line="414" pos:column="30">.<pos:position pos:line="414" pos:column="31"/></operator><name pos:line="414" pos:column="31">trTime<pos:position pos:line="414" pos:column="37"/></name></name></expr>;<pos:position pos:line="414" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="415" pos:column="13">doint<pos:position pos:line="415" pos:column="18"/></name> <operator pos:line="415" pos:column="19">=<pos:position pos:line="415" pos:column="20"/></operator> <literal type="number" pos:line="415" pos:column="21">1<pos:position pos:line="415" pos:column="22"/></literal></expr>;<pos:position pos:line="415" pos:column="23"/></expr_stmt>
            <break pos:line="416" pos:column="13">break;<pos:position pos:line="416" pos:column="19"/></break>

        <case pos:line="418" pos:column="9">case <expr><name pos:line="418" pos:column="14">LFT_ICAP_IO_TIME<pos:position pos:line="418" pos:column="30"/></name></expr>:<pos:position pos:line="418" pos:column="31"/></case>
            <expr_stmt><expr><name pos:line="419" pos:column="13">outint<pos:position pos:line="419" pos:column="19"/></name> <operator pos:line="419" pos:column="20">=<pos:position pos:line="419" pos:column="21"/></operator> <name><name pos:line="419" pos:column="22">al<pos:position pos:line="419" pos:column="24"/></name><operator pos:line="419" pos:column="24">-&gt;<pos:position pos:line="419" pos:column="29"/></operator><name pos:line="419" pos:column="26">icap<pos:position pos:line="419" pos:column="30"/></name><operator pos:line="419" pos:column="30">.<pos:position pos:line="419" pos:column="31"/></operator><name pos:line="419" pos:column="31">ioTime<pos:position pos:line="419" pos:column="37"/></name></name></expr>;<pos:position pos:line="419" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="420" pos:column="13">doint<pos:position pos:line="420" pos:column="18"/></name> <operator pos:line="420" pos:column="19">=<pos:position pos:line="420" pos:column="20"/></operator> <literal type="number" pos:line="420" pos:column="21">1<pos:position pos:line="420" pos:column="22"/></literal></expr>;<pos:position pos:line="420" pos:column="23"/></expr_stmt>
            <break pos:line="421" pos:column="13">break;<pos:position pos:line="421" pos:column="19"/></break>

        <case pos:line="423" pos:column="9">case <expr><name pos:line="423" pos:column="14">LFT_ICAP_STATUS_CODE<pos:position pos:line="423" pos:column="34"/></name></expr>:<pos:position pos:line="423" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="424" pos:column="13">outint<pos:position pos:line="424" pos:column="19"/></name> <operator pos:line="424" pos:column="20">=<pos:position pos:line="424" pos:column="21"/></operator> <name><name pos:line="424" pos:column="22">al<pos:position pos:line="424" pos:column="24"/></name><operator pos:line="424" pos:column="24">-&gt;<pos:position pos:line="424" pos:column="29"/></operator><name pos:line="424" pos:column="26">icap<pos:position pos:line="424" pos:column="30"/></name><operator pos:line="424" pos:column="30">.<pos:position pos:line="424" pos:column="31"/></operator><name pos:line="424" pos:column="31">resStatus<pos:position pos:line="424" pos:column="40"/></name></name></expr>;<pos:position pos:line="424" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="425" pos:column="13">doint<pos:position pos:line="425" pos:column="18"/></name>  <operator pos:line="425" pos:column="20">=<pos:position pos:line="425" pos:column="21"/></operator> <literal type="number" pos:line="425" pos:column="22">1<pos:position pos:line="425" pos:column="23"/></literal></expr>;<pos:position pos:line="425" pos:column="24"/></expr_stmt>
            <break pos:line="426" pos:column="13">break;<pos:position pos:line="426" pos:column="19"/></break>

        <case pos:line="428" pos:column="9">case <expr><name pos:line="428" pos:column="14">LFT_ICAP_OUTCOME<pos:position pos:line="428" pos:column="30"/></name></expr>:<pos:position pos:line="428" pos:column="31"/></case>
            <expr_stmt><expr><name pos:line="429" pos:column="13">out<pos:position pos:line="429" pos:column="16"/></name> <operator pos:line="429" pos:column="17">=<pos:position pos:line="429" pos:column="18"/></operator> <name><name pos:line="429" pos:column="19">al<pos:position pos:line="429" pos:column="21"/></name><operator pos:line="429" pos:column="21">-&gt;<pos:position pos:line="429" pos:column="26"/></operator><name pos:line="429" pos:column="23">icap<pos:position pos:line="429" pos:column="27"/></name><operator pos:line="429" pos:column="27">.<pos:position pos:line="429" pos:column="28"/></operator><name pos:line="429" pos:column="28">outcome<pos:position pos:line="429" pos:column="35"/></name></name></expr>;<pos:position pos:line="429" pos:column="36"/></expr_stmt>
            <break pos:line="430" pos:column="13">break;<pos:position pos:line="430" pos:column="19"/></break>

        <case pos:line="432" pos:column="9">case <expr><name pos:line="432" pos:column="14">LFT_ICAP_TOTAL_TIME<pos:position pos:line="432" pos:column="33"/></name></expr>:<pos:position pos:line="432" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="433" pos:column="13">outint<pos:position pos:line="433" pos:column="19"/></name> <operator pos:line="433" pos:column="20">=<pos:position pos:line="433" pos:column="21"/></operator> <name><name pos:line="433" pos:column="22">al<pos:position pos:line="433" pos:column="24"/></name><operator pos:line="433" pos:column="24">-&gt;<pos:position pos:line="433" pos:column="29"/></operator><name pos:line="433" pos:column="26">icap<pos:position pos:line="433" pos:column="30"/></name><operator pos:line="433" pos:column="30">.<pos:position pos:line="433" pos:column="31"/></operator><name pos:line="433" pos:column="31">processingTime<pos:position pos:line="433" pos:column="45"/></name></name></expr>;<pos:position pos:line="433" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="434" pos:column="13">doint<pos:position pos:line="434" pos:column="18"/></name> <operator pos:line="434" pos:column="19">=<pos:position pos:line="434" pos:column="20"/></operator> <literal type="number" pos:line="434" pos:column="21">1<pos:position pos:line="434" pos:column="22"/></literal></expr>;<pos:position pos:line="434" pos:column="23"/></expr_stmt>
            <break pos:line="435" pos:column="13">break;<pos:position pos:line="435" pos:column="19"/></break>
<cpp:endif pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">endif<pos:position pos:line="436" pos:column="7"/></cpp:directive></cpp:endif>
        <case pos:line="437" pos:column="9">case <expr><name pos:line="437" pos:column="14">LFT_REQUEST_HEADER_ELEM<pos:position pos:line="437" pos:column="37"/></name></expr>:<pos:position pos:line="437" pos:column="38"/></case>
            <if pos:line="438" pos:column="13">if <condition pos:line="438" pos:column="16">(<expr><name><name pos:line="438" pos:column="17">al<pos:position pos:line="438" pos:column="19"/></name><operator pos:line="438" pos:column="19">-&gt;<pos:position pos:line="438" pos:column="24"/></operator><name pos:line="438" pos:column="21">request<pos:position pos:line="438" pos:column="28"/></name></name></expr>)<pos:position pos:line="438" pos:column="29"/></condition><then pos:line="438" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="439" pos:column="17">sb<pos:position pos:line="439" pos:column="19"/></name> <operator pos:line="439" pos:column="20">=<pos:position pos:line="439" pos:column="21"/></operator> <call><name><name pos:line="439" pos:column="22">al<pos:position pos:line="439" pos:column="24"/></name><operator pos:line="439" pos:column="24">-&gt;<pos:position pos:line="439" pos:column="29"/></operator><name pos:line="439" pos:column="26">request<pos:position pos:line="439" pos:column="33"/></name><operator pos:line="439" pos:column="33">-&gt;<pos:position pos:line="439" pos:column="38"/></operator><name pos:line="439" pos:column="35">header<pos:position pos:line="439" pos:column="41"/></name><operator pos:line="439" pos:column="41">.<pos:position pos:line="439" pos:column="42"/></operator><name pos:line="439" pos:column="42">getByNameListMember<pos:position pos:line="439" pos:column="61"/></name></name><argument_list pos:line="439" pos:column="61">(<argument><expr><name><name pos:line="439" pos:column="62">fmt<pos:position pos:line="439" pos:column="65"/></name><operator pos:line="439" pos:column="65">-&gt;<pos:position pos:line="439" pos:column="70"/></operator><name pos:line="439" pos:column="67">data<pos:position pos:line="439" pos:column="71"/></name><operator pos:line="439" pos:column="71">.<pos:position pos:line="439" pos:column="72"/></operator><name pos:line="439" pos:column="72">header<pos:position pos:line="439" pos:column="78"/></name><operator pos:line="439" pos:column="78">.<pos:position pos:line="439" pos:column="79"/></operator><name pos:line="439" pos:column="79">header<pos:position pos:line="439" pos:column="85"/></name></name></expr></argument>, <argument><expr><name><name pos:line="439" pos:column="87">fmt<pos:position pos:line="439" pos:column="90"/></name><operator pos:line="439" pos:column="90">-&gt;<pos:position pos:line="439" pos:column="95"/></operator><name pos:line="439" pos:column="92">data<pos:position pos:line="439" pos:column="96"/></name><operator pos:line="439" pos:column="96">.<pos:position pos:line="439" pos:column="97"/></operator><name pos:line="439" pos:column="97">header<pos:position pos:line="439" pos:column="103"/></name><operator pos:line="439" pos:column="103">.<pos:position pos:line="439" pos:column="104"/></operator><name pos:line="439" pos:column="104">element<pos:position pos:line="439" pos:column="111"/></name></name></expr></argument>, <argument><expr><name><name pos:line="439" pos:column="113">fmt<pos:position pos:line="439" pos:column="116"/></name><operator pos:line="439" pos:column="116">-&gt;<pos:position pos:line="439" pos:column="121"/></operator><name pos:line="439" pos:column="118">data<pos:position pos:line="439" pos:column="122"/></name><operator pos:line="439" pos:column="122">.<pos:position pos:line="439" pos:column="123"/></operator><name pos:line="439" pos:column="123">header<pos:position pos:line="439" pos:column="129"/></name><operator pos:line="439" pos:column="129">.<pos:position pos:line="439" pos:column="130"/></operator><name pos:line="439" pos:column="130">separator<pos:position pos:line="439" pos:column="139"/></name></name></expr></argument>)<pos:position pos:line="439" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="141"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="441" pos:column="13">out<pos:position pos:line="441" pos:column="16"/></name> <operator pos:line="441" pos:column="17">=<pos:position pos:line="441" pos:column="18"/></operator> <call><name><name pos:line="441" pos:column="19">sb<pos:position pos:line="441" pos:column="21"/></name><operator pos:line="441" pos:column="21">.<pos:position pos:line="441" pos:column="22"/></operator><name pos:line="441" pos:column="22">termedBuf<pos:position pos:line="441" pos:column="31"/></name></name><argument_list pos:line="441" pos:column="31">()<pos:position pos:line="441" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="443" pos:column="13">quote<pos:position pos:line="443" pos:column="18"/></name> <operator pos:line="443" pos:column="19">=<pos:position pos:line="443" pos:column="20"/></operator> <literal type="number" pos:line="443" pos:column="21">1<pos:position pos:line="443" pos:column="22"/></literal></expr>;<pos:position pos:line="443" pos:column="23"/></expr_stmt>

            <break pos:line="445" pos:column="13">break;<pos:position pos:line="445" pos:column="19"/></break>

        <case pos:line="447" pos:column="9">case <expr><name pos:line="447" pos:column="14">LFT_ADAPTED_REQUEST_HEADER_ELEM<pos:position pos:line="447" pos:column="45"/></name></expr>:<pos:position pos:line="447" pos:column="46"/></case>
            <if pos:line="448" pos:column="13">if <condition pos:line="448" pos:column="16">(<expr><name><name pos:line="448" pos:column="17">al<pos:position pos:line="448" pos:column="19"/></name><operator pos:line="448" pos:column="19">-&gt;<pos:position pos:line="448" pos:column="24"/></operator><name pos:line="448" pos:column="21">adapted_request<pos:position pos:line="448" pos:column="36"/></name></name></expr>)<pos:position pos:line="448" pos:column="37"/></condition><then pos:line="448" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="449" pos:column="17">sb<pos:position pos:line="449" pos:column="19"/></name> <operator pos:line="449" pos:column="20">=<pos:position pos:line="449" pos:column="21"/></operator> <call><name><name pos:line="449" pos:column="22">al<pos:position pos:line="449" pos:column="24"/></name><operator pos:line="449" pos:column="24">-&gt;<pos:position pos:line="449" pos:column="29"/></operator><name pos:line="449" pos:column="26">adapted_request<pos:position pos:line="449" pos:column="41"/></name><operator pos:line="449" pos:column="41">-&gt;<pos:position pos:line="449" pos:column="46"/></operator><name pos:line="449" pos:column="43">header<pos:position pos:line="449" pos:column="49"/></name><operator pos:line="449" pos:column="49">.<pos:position pos:line="449" pos:column="50"/></operator><name pos:line="449" pos:column="50">getByNameListMember<pos:position pos:line="449" pos:column="69"/></name></name><argument_list pos:line="449" pos:column="69">(<argument><expr><name><name pos:line="449" pos:column="70">fmt<pos:position pos:line="449" pos:column="73"/></name><operator pos:line="449" pos:column="73">-&gt;<pos:position pos:line="449" pos:column="78"/></operator><name pos:line="449" pos:column="75">data<pos:position pos:line="449" pos:column="79"/></name><operator pos:line="449" pos:column="79">.<pos:position pos:line="449" pos:column="80"/></operator><name pos:line="449" pos:column="80">header<pos:position pos:line="449" pos:column="86"/></name><operator pos:line="449" pos:column="86">.<pos:position pos:line="449" pos:column="87"/></operator><name pos:line="449" pos:column="87">header<pos:position pos:line="449" pos:column="93"/></name></name></expr></argument>, <argument><expr><name><name pos:line="449" pos:column="95">fmt<pos:position pos:line="449" pos:column="98"/></name><operator pos:line="449" pos:column="98">-&gt;<pos:position pos:line="449" pos:column="103"/></operator><name pos:line="449" pos:column="100">data<pos:position pos:line="449" pos:column="104"/></name><operator pos:line="449" pos:column="104">.<pos:position pos:line="449" pos:column="105"/></operator><name pos:line="449" pos:column="105">header<pos:position pos:line="449" pos:column="111"/></name><operator pos:line="449" pos:column="111">.<pos:position pos:line="449" pos:column="112"/></operator><name pos:line="449" pos:column="112">element<pos:position pos:line="449" pos:column="119"/></name></name></expr></argument>, <argument><expr><name><name pos:line="449" pos:column="121">fmt<pos:position pos:line="449" pos:column="124"/></name><operator pos:line="449" pos:column="124">-&gt;<pos:position pos:line="449" pos:column="129"/></operator><name pos:line="449" pos:column="126">data<pos:position pos:line="449" pos:column="130"/></name><operator pos:line="449" pos:column="130">.<pos:position pos:line="449" pos:column="131"/></operator><name pos:line="449" pos:column="131">header<pos:position pos:line="449" pos:column="137"/></name><operator pos:line="449" pos:column="137">.<pos:position pos:line="449" pos:column="138"/></operator><name pos:line="449" pos:column="138">separator<pos:position pos:line="449" pos:column="147"/></name></name></expr></argument>)<pos:position pos:line="449" pos:column="148"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="149"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="451" pos:column="13">out<pos:position pos:line="451" pos:column="16"/></name> <operator pos:line="451" pos:column="17">=<pos:position pos:line="451" pos:column="18"/></operator> <call><name><name pos:line="451" pos:column="19">sb<pos:position pos:line="451" pos:column="21"/></name><operator pos:line="451" pos:column="21">.<pos:position pos:line="451" pos:column="22"/></operator><name pos:line="451" pos:column="22">termedBuf<pos:position pos:line="451" pos:column="31"/></name></name><argument_list pos:line="451" pos:column="31">()<pos:position pos:line="451" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="453" pos:column="13">quote<pos:position pos:line="453" pos:column="18"/></name> <operator pos:line="453" pos:column="19">=<pos:position pos:line="453" pos:column="20"/></operator> <literal type="number" pos:line="453" pos:column="21">1<pos:position pos:line="453" pos:column="22"/></literal></expr>;<pos:position pos:line="453" pos:column="23"/></expr_stmt>

            <break pos:line="455" pos:column="13">break;<pos:position pos:line="455" pos:column="19"/></break>

        <case pos:line="457" pos:column="9">case <expr><name pos:line="457" pos:column="14">LFT_REPLY_HEADER_ELEM<pos:position pos:line="457" pos:column="35"/></name></expr>:<pos:position pos:line="457" pos:column="36"/></case>
            <if pos:line="458" pos:column="13">if <condition pos:line="458" pos:column="16">(<expr><name><name pos:line="458" pos:column="17">al<pos:position pos:line="458" pos:column="19"/></name><operator pos:line="458" pos:column="19">-&gt;<pos:position pos:line="458" pos:column="24"/></operator><name pos:line="458" pos:column="21">reply<pos:position pos:line="458" pos:column="26"/></name></name></expr>)<pos:position pos:line="458" pos:column="27"/></condition><then pos:line="458" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="459" pos:column="17">sb<pos:position pos:line="459" pos:column="19"/></name> <operator pos:line="459" pos:column="20">=<pos:position pos:line="459" pos:column="21"/></operator> <call><name><name pos:line="459" pos:column="22">al<pos:position pos:line="459" pos:column="24"/></name><operator pos:line="459" pos:column="24">-&gt;<pos:position pos:line="459" pos:column="29"/></operator><name pos:line="459" pos:column="26">reply<pos:position pos:line="459" pos:column="31"/></name><operator pos:line="459" pos:column="31">-&gt;<pos:position pos:line="459" pos:column="36"/></operator><name pos:line="459" pos:column="33">header<pos:position pos:line="459" pos:column="39"/></name><operator pos:line="459" pos:column="39">.<pos:position pos:line="459" pos:column="40"/></operator><name pos:line="459" pos:column="40">getByNameListMember<pos:position pos:line="459" pos:column="59"/></name></name><argument_list pos:line="459" pos:column="59">(<argument><expr><name><name pos:line="459" pos:column="60">fmt<pos:position pos:line="459" pos:column="63"/></name><operator pos:line="459" pos:column="63">-&gt;<pos:position pos:line="459" pos:column="68"/></operator><name pos:line="459" pos:column="65">data<pos:position pos:line="459" pos:column="69"/></name><operator pos:line="459" pos:column="69">.<pos:position pos:line="459" pos:column="70"/></operator><name pos:line="459" pos:column="70">header<pos:position pos:line="459" pos:column="76"/></name><operator pos:line="459" pos:column="76">.<pos:position pos:line="459" pos:column="77"/></operator><name pos:line="459" pos:column="77">header<pos:position pos:line="459" pos:column="83"/></name></name></expr></argument>, <argument><expr><name><name pos:line="459" pos:column="85">fmt<pos:position pos:line="459" pos:column="88"/></name><operator pos:line="459" pos:column="88">-&gt;<pos:position pos:line="459" pos:column="93"/></operator><name pos:line="459" pos:column="90">data<pos:position pos:line="459" pos:column="94"/></name><operator pos:line="459" pos:column="94">.<pos:position pos:line="459" pos:column="95"/></operator><name pos:line="459" pos:column="95">header<pos:position pos:line="459" pos:column="101"/></name><operator pos:line="459" pos:column="101">.<pos:position pos:line="459" pos:column="102"/></operator><name pos:line="459" pos:column="102">element<pos:position pos:line="459" pos:column="109"/></name></name></expr></argument>, <argument><expr><name><name pos:line="459" pos:column="111">fmt<pos:position pos:line="459" pos:column="114"/></name><operator pos:line="459" pos:column="114">-&gt;<pos:position pos:line="459" pos:column="119"/></operator><name pos:line="459" pos:column="116">data<pos:position pos:line="459" pos:column="120"/></name><operator pos:line="459" pos:column="120">.<pos:position pos:line="459" pos:column="121"/></operator><name pos:line="459" pos:column="121">header<pos:position pos:line="459" pos:column="127"/></name><operator pos:line="459" pos:column="127">.<pos:position pos:line="459" pos:column="128"/></operator><name pos:line="459" pos:column="128">separator<pos:position pos:line="459" pos:column="137"/></name></name></expr></argument>)<pos:position pos:line="459" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="139"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="461" pos:column="13">out<pos:position pos:line="461" pos:column="16"/></name> <operator pos:line="461" pos:column="17">=<pos:position pos:line="461" pos:column="18"/></operator> <call><name><name pos:line="461" pos:column="19">sb<pos:position pos:line="461" pos:column="21"/></name><operator pos:line="461" pos:column="21">.<pos:position pos:line="461" pos:column="22"/></operator><name pos:line="461" pos:column="22">termedBuf<pos:position pos:line="461" pos:column="31"/></name></name><argument_list pos:line="461" pos:column="31">()<pos:position pos:line="461" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="463" pos:column="13">quote<pos:position pos:line="463" pos:column="18"/></name> <operator pos:line="463" pos:column="19">=<pos:position pos:line="463" pos:column="20"/></operator> <literal type="number" pos:line="463" pos:column="21">1<pos:position pos:line="463" pos:column="22"/></literal></expr>;<pos:position pos:line="463" pos:column="23"/></expr_stmt>

            <break pos:line="465" pos:column="13">break;<pos:position pos:line="465" pos:column="19"/></break>

        <case pos:line="467" pos:column="9">case <expr><name pos:line="467" pos:column="14">LFT_REQUEST_ALL_HEADERS<pos:position pos:line="467" pos:column="37"/></name></expr>:<pos:position pos:line="467" pos:column="38"/></case>
            <expr_stmt><expr><name pos:line="468" pos:column="13">out<pos:position pos:line="468" pos:column="16"/></name> <operator pos:line="468" pos:column="17">=<pos:position pos:line="468" pos:column="18"/></operator> <name><name pos:line="468" pos:column="19">al<pos:position pos:line="468" pos:column="21"/></name><operator pos:line="468" pos:column="21">-&gt;<pos:position pos:line="468" pos:column="26"/></operator><name pos:line="468" pos:column="23">headers<pos:position pos:line="468" pos:column="30"/></name><operator pos:line="468" pos:column="30">.<pos:position pos:line="468" pos:column="31"/></operator><name pos:line="468" pos:column="31">request<pos:position pos:line="468" pos:column="38"/></name></name></expr>;<pos:position pos:line="468" pos:column="39"/></expr_stmt>

            <expr_stmt><expr><name pos:line="470" pos:column="13">quote<pos:position pos:line="470" pos:column="18"/></name> <operator pos:line="470" pos:column="19">=<pos:position pos:line="470" pos:column="20"/></operator> <literal type="number" pos:line="470" pos:column="21">1<pos:position pos:line="470" pos:column="22"/></literal></expr>;<pos:position pos:line="470" pos:column="23"/></expr_stmt>

            <break pos:line="472" pos:column="13">break;<pos:position pos:line="472" pos:column="19"/></break>

        <case pos:line="474" pos:column="9">case <expr><name pos:line="474" pos:column="14">LFT_ADAPTED_REQUEST_ALL_HEADERS<pos:position pos:line="474" pos:column="45"/></name></expr>:<pos:position pos:line="474" pos:column="46"/></case>
            <expr_stmt><expr><name pos:line="475" pos:column="13">out<pos:position pos:line="475" pos:column="16"/></name> <operator pos:line="475" pos:column="17">=<pos:position pos:line="475" pos:column="18"/></operator> <name><name pos:line="475" pos:column="19">al<pos:position pos:line="475" pos:column="21"/></name><operator pos:line="475" pos:column="21">-&gt;<pos:position pos:line="475" pos:column="26"/></operator><name pos:line="475" pos:column="23">headers<pos:position pos:line="475" pos:column="30"/></name><operator pos:line="475" pos:column="30">.<pos:position pos:line="475" pos:column="31"/></operator><name pos:line="475" pos:column="31">adapted_request<pos:position pos:line="475" pos:column="46"/></name></name></expr>;<pos:position pos:line="475" pos:column="47"/></expr_stmt>

            <expr_stmt><expr><name pos:line="477" pos:column="13">quote<pos:position pos:line="477" pos:column="18"/></name> <operator pos:line="477" pos:column="19">=<pos:position pos:line="477" pos:column="20"/></operator> <literal type="number" pos:line="477" pos:column="21">1<pos:position pos:line="477" pos:column="22"/></literal></expr>;<pos:position pos:line="477" pos:column="23"/></expr_stmt>

            <break pos:line="479" pos:column="13">break;<pos:position pos:line="479" pos:column="19"/></break>

        <case pos:line="481" pos:column="9">case <expr><name pos:line="481" pos:column="14">LFT_REPLY_ALL_HEADERS<pos:position pos:line="481" pos:column="35"/></name></expr>:<pos:position pos:line="481" pos:column="36"/></case>
            <expr_stmt><expr><name pos:line="482" pos:column="13">out<pos:position pos:line="482" pos:column="16"/></name> <operator pos:line="482" pos:column="17">=<pos:position pos:line="482" pos:column="18"/></operator> <name><name pos:line="482" pos:column="19">al<pos:position pos:line="482" pos:column="21"/></name><operator pos:line="482" pos:column="21">-&gt;<pos:position pos:line="482" pos:column="26"/></operator><name pos:line="482" pos:column="23">headers<pos:position pos:line="482" pos:column="30"/></name><operator pos:line="482" pos:column="30">.<pos:position pos:line="482" pos:column="31"/></operator><name pos:line="482" pos:column="31">reply<pos:position pos:line="482" pos:column="36"/></name></name></expr>;<pos:position pos:line="482" pos:column="37"/></expr_stmt>

            <expr_stmt><expr><name pos:line="484" pos:column="13">quote<pos:position pos:line="484" pos:column="18"/></name> <operator pos:line="484" pos:column="19">=<pos:position pos:line="484" pos:column="20"/></operator> <literal type="number" pos:line="484" pos:column="21">1<pos:position pos:line="484" pos:column="22"/></literal></expr>;<pos:position pos:line="484" pos:column="23"/></expr_stmt>

            <break pos:line="486" pos:column="13">break;<pos:position pos:line="486" pos:column="19"/></break>

        <case pos:line="488" pos:column="9">case <expr><name pos:line="488" pos:column="14">LFT_USER_NAME<pos:position pos:line="488" pos:column="27"/></name></expr>:<pos:position pos:line="488" pos:column="28"/></case>
<cpp:if pos:line="489" pos:column="1">#<cpp:directive pos:line="489" pos:column="2">if<pos:position pos:line="489" pos:column="4"/></cpp:directive> <expr><name pos:line="489" pos:column="5">USE_AUTH<pos:position pos:line="489" pos:column="13"/></name></expr></cpp:if>
            <if pos:line="490" pos:column="13">if <condition pos:line="490" pos:column="16">(<expr><name><name pos:line="490" pos:column="17">al<pos:position pos:line="490" pos:column="19"/></name><operator pos:line="490" pos:column="19">-&gt;<pos:position pos:line="490" pos:column="24"/></operator><name pos:line="490" pos:column="21">request<pos:position pos:line="490" pos:column="28"/></name></name> <operator pos:line="490" pos:column="29">&amp;&amp;<pos:position pos:line="490" pos:column="39"/></operator> <name><name pos:line="490" pos:column="32">al<pos:position pos:line="490" pos:column="34"/></name><operator pos:line="490" pos:column="34">-&gt;<pos:position pos:line="490" pos:column="39"/></operator><name pos:line="490" pos:column="36">request<pos:position pos:line="490" pos:column="43"/></name><operator pos:line="490" pos:column="43">-&gt;<pos:position pos:line="490" pos:column="48"/></operator><name pos:line="490" pos:column="45">auth_user_request<pos:position pos:line="490" pos:column="62"/></name></name> <operator pos:line="490" pos:column="63">!=<pos:position pos:line="490" pos:column="65"/></operator> <name pos:line="490" pos:column="66">NULL<pos:position pos:line="490" pos:column="70"/></name></expr>)<pos:position pos:line="490" pos:column="71"/></condition><then pos:line="490" pos:column="71">
                <block type="pseudo"><expr_stmt><expr><name pos:line="491" pos:column="17">out<pos:position pos:line="491" pos:column="20"/></name> <operator pos:line="491" pos:column="21">=<pos:position pos:line="491" pos:column="22"/></operator> <call><name pos:line="491" pos:column="23">strOrNull<pos:position pos:line="491" pos:column="32"/></name><argument_list pos:line="491" pos:column="32">(<argument><expr><call><name><name pos:line="491" pos:column="33">al<pos:position pos:line="491" pos:column="35"/></name><operator pos:line="491" pos:column="35">-&gt;<pos:position pos:line="491" pos:column="40"/></operator><name pos:line="491" pos:column="37">request<pos:position pos:line="491" pos:column="44"/></name><operator pos:line="491" pos:column="44">-&gt;<pos:position pos:line="491" pos:column="49"/></operator><name pos:line="491" pos:column="46">auth_user_request<pos:position pos:line="491" pos:column="63"/></name><operator pos:line="491" pos:column="63">-&gt;<pos:position pos:line="491" pos:column="68"/></operator><name pos:line="491" pos:column="65">username<pos:position pos:line="491" pos:column="73"/></name></name><argument_list pos:line="491" pos:column="73">()<pos:position pos:line="491" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="491" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="491" pos:column="77"/></expr_stmt></block></then></if>
<cpp:endif pos:line="492" pos:column="1">#<cpp:directive pos:line="492" pos:column="2">endif<pos:position pos:line="492" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="493" pos:column="13">if <condition pos:line="493" pos:column="16">(<expr><operator pos:line="493" pos:column="17">!<pos:position pos:line="493" pos:column="18"/></operator><name pos:line="493" pos:column="18">out<pos:position pos:line="493" pos:column="21"/></name></expr>)<pos:position pos:line="493" pos:column="22"/></condition><then pos:line="493" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="494" pos:column="17">out<pos:position pos:line="494" pos:column="20"/></name> <operator pos:line="494" pos:column="21">=<pos:position pos:line="494" pos:column="22"/></operator> <call><name pos:line="494" pos:column="23">strOrNull<pos:position pos:line="494" pos:column="32"/></name><argument_list pos:line="494" pos:column="32">(<argument><expr><name><name pos:line="494" pos:column="33">al<pos:position pos:line="494" pos:column="35"/></name><operator pos:line="494" pos:column="35">-&gt;<pos:position pos:line="494" pos:column="40"/></operator><name pos:line="494" pos:column="37">cache<pos:position pos:line="494" pos:column="42"/></name><operator pos:line="494" pos:column="42">.<pos:position pos:line="494" pos:column="43"/></operator><name pos:line="494" pos:column="43">extuser<pos:position pos:line="494" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="494" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="52"/></expr_stmt></block></then></if>
<cpp:if pos:line="495" pos:column="1">#<cpp:directive pos:line="495" pos:column="2">if<pos:position pos:line="495" pos:column="4"/></cpp:directive> <expr><name pos:line="495" pos:column="5">USE_SSL<pos:position pos:line="495" pos:column="12"/></name></expr></cpp:if>
            <if pos:line="496" pos:column="13">if <condition pos:line="496" pos:column="16">(<expr><operator pos:line="496" pos:column="17">!<pos:position pos:line="496" pos:column="18"/></operator><name pos:line="496" pos:column="18">out<pos:position pos:line="496" pos:column="21"/></name></expr>)<pos:position pos:line="496" pos:column="22"/></condition><then pos:line="496" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="497" pos:column="17">out<pos:position pos:line="497" pos:column="20"/></name> <operator pos:line="497" pos:column="21">=<pos:position pos:line="497" pos:column="22"/></operator> <call><name pos:line="497" pos:column="23">strOrNull<pos:position pos:line="497" pos:column="32"/></name><argument_list pos:line="497" pos:column="32">(<argument><expr><name><name pos:line="497" pos:column="33">al<pos:position pos:line="497" pos:column="35"/></name><operator pos:line="497" pos:column="35">-&gt;<pos:position pos:line="497" pos:column="40"/></operator><name pos:line="497" pos:column="37">cache<pos:position pos:line="497" pos:column="42"/></name><operator pos:line="497" pos:column="42">.<pos:position pos:line="497" pos:column="43"/></operator><name pos:line="497" pos:column="43">ssluser<pos:position pos:line="497" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="497" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="497" pos:column="52"/></expr_stmt></block></then></if>
<cpp:endif pos:line="498" pos:column="1">#<cpp:directive pos:line="498" pos:column="2">endif<pos:position pos:line="498" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="499" pos:column="13">if <condition pos:line="499" pos:column="16">(<expr><operator pos:line="499" pos:column="17">!<pos:position pos:line="499" pos:column="18"/></operator><name pos:line="499" pos:column="18">out<pos:position pos:line="499" pos:column="21"/></name></expr>)<pos:position pos:line="499" pos:column="22"/></condition><then pos:line="499" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="500" pos:column="17">out<pos:position pos:line="500" pos:column="20"/></name> <operator pos:line="500" pos:column="21">=<pos:position pos:line="500" pos:column="22"/></operator> <call><name pos:line="500" pos:column="23">strOrNull<pos:position pos:line="500" pos:column="32"/></name><argument_list pos:line="500" pos:column="32">(<argument><expr><name><name pos:line="500" pos:column="33">al<pos:position pos:line="500" pos:column="35"/></name><operator pos:line="500" pos:column="35">-&gt;<pos:position pos:line="500" pos:column="40"/></operator><name pos:line="500" pos:column="37">cache<pos:position pos:line="500" pos:column="42"/></name><operator pos:line="500" pos:column="42">.<pos:position pos:line="500" pos:column="43"/></operator><name pos:line="500" pos:column="43">rfc931<pos:position pos:line="500" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="500" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="500" pos:column="51"/></expr_stmt></block></then></if>
            <break pos:line="501" pos:column="13">break;<pos:position pos:line="501" pos:column="19"/></break>

        <case pos:line="503" pos:column="9">case <expr><name pos:line="503" pos:column="14">LFT_USER_LOGIN<pos:position pos:line="503" pos:column="28"/></name></expr>:<pos:position pos:line="503" pos:column="29"/></case>
<cpp:if pos:line="504" pos:column="1">#<cpp:directive pos:line="504" pos:column="2">if<pos:position pos:line="504" pos:column="4"/></cpp:directive> <expr><name pos:line="504" pos:column="5">USE_AUTH<pos:position pos:line="504" pos:column="13"/></name></expr></cpp:if>
            <if pos:line="505" pos:column="13">if <condition pos:line="505" pos:column="16">(<expr><name><name pos:line="505" pos:column="17">al<pos:position pos:line="505" pos:column="19"/></name><operator pos:line="505" pos:column="19">-&gt;<pos:position pos:line="505" pos:column="24"/></operator><name pos:line="505" pos:column="21">request<pos:position pos:line="505" pos:column="28"/></name></name> <operator pos:line="505" pos:column="29">&amp;&amp;<pos:position pos:line="505" pos:column="39"/></operator> <name><name pos:line="505" pos:column="32">al<pos:position pos:line="505" pos:column="34"/></name><operator pos:line="505" pos:column="34">-&gt;<pos:position pos:line="505" pos:column="39"/></operator><name pos:line="505" pos:column="36">request<pos:position pos:line="505" pos:column="43"/></name><operator pos:line="505" pos:column="43">-&gt;<pos:position pos:line="505" pos:column="48"/></operator><name pos:line="505" pos:column="45">auth_user_request<pos:position pos:line="505" pos:column="62"/></name></name> <operator pos:line="505" pos:column="63">!=<pos:position pos:line="505" pos:column="65"/></operator> <name pos:line="505" pos:column="66">NULL<pos:position pos:line="505" pos:column="70"/></name></expr>)<pos:position pos:line="505" pos:column="71"/></condition><then pos:line="505" pos:column="71">
                <block type="pseudo"><expr_stmt><expr><name pos:line="506" pos:column="17">out<pos:position pos:line="506" pos:column="20"/></name> <operator pos:line="506" pos:column="21">=<pos:position pos:line="506" pos:column="22"/></operator> <call><name pos:line="506" pos:column="23">strOrNull<pos:position pos:line="506" pos:column="32"/></name><argument_list pos:line="506" pos:column="32">(<argument><expr><call><name><name pos:line="506" pos:column="33">al<pos:position pos:line="506" pos:column="35"/></name><operator pos:line="506" pos:column="35">-&gt;<pos:position pos:line="506" pos:column="40"/></operator><name pos:line="506" pos:column="37">request<pos:position pos:line="506" pos:column="44"/></name><operator pos:line="506" pos:column="44">-&gt;<pos:position pos:line="506" pos:column="49"/></operator><name pos:line="506" pos:column="46">auth_user_request<pos:position pos:line="506" pos:column="63"/></name><operator pos:line="506" pos:column="63">-&gt;<pos:position pos:line="506" pos:column="68"/></operator><name pos:line="506" pos:column="65">username<pos:position pos:line="506" pos:column="73"/></name></name><argument_list pos:line="506" pos:column="73">()<pos:position pos:line="506" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="506" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="506" pos:column="77"/></expr_stmt></block></then></if>
<cpp:endif pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">endif<pos:position pos:line="507" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="508" pos:column="13">break;<pos:position pos:line="508" pos:column="19"/></break>

        <case pos:line="510" pos:column="9">case <expr><name pos:line="510" pos:column="14">LFT_USER_IDENT<pos:position pos:line="510" pos:column="28"/></name></expr>:<pos:position pos:line="510" pos:column="29"/></case>
            <expr_stmt><expr><name pos:line="511" pos:column="13">out<pos:position pos:line="511" pos:column="16"/></name> <operator pos:line="511" pos:column="17">=<pos:position pos:line="511" pos:column="18"/></operator> <call><name pos:line="511" pos:column="19">strOrNull<pos:position pos:line="511" pos:column="28"/></name><argument_list pos:line="511" pos:column="28">(<argument><expr><name><name pos:line="511" pos:column="29">al<pos:position pos:line="511" pos:column="31"/></name><operator pos:line="511" pos:column="31">-&gt;<pos:position pos:line="511" pos:column="36"/></operator><name pos:line="511" pos:column="33">cache<pos:position pos:line="511" pos:column="38"/></name><operator pos:line="511" pos:column="38">.<pos:position pos:line="511" pos:column="39"/></operator><name pos:line="511" pos:column="39">rfc931<pos:position pos:line="511" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="511" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="511" pos:column="47"/></expr_stmt>
            <break pos:line="512" pos:column="13">break;<pos:position pos:line="512" pos:column="19"/></break>

        <case pos:line="514" pos:column="9">case <expr><name pos:line="514" pos:column="14">LFT_USER_EXTERNAL<pos:position pos:line="514" pos:column="31"/></name></expr>:<pos:position pos:line="514" pos:column="32"/></case>
            <expr_stmt><expr><name pos:line="515" pos:column="13">out<pos:position pos:line="515" pos:column="16"/></name> <operator pos:line="515" pos:column="17">=<pos:position pos:line="515" pos:column="18"/></operator> <call><name pos:line="515" pos:column="19">strOrNull<pos:position pos:line="515" pos:column="28"/></name><argument_list pos:line="515" pos:column="28">(<argument><expr><name><name pos:line="515" pos:column="29">al<pos:position pos:line="515" pos:column="31"/></name><operator pos:line="515" pos:column="31">-&gt;<pos:position pos:line="515" pos:column="36"/></operator><name pos:line="515" pos:column="33">cache<pos:position pos:line="515" pos:column="38"/></name><operator pos:line="515" pos:column="38">.<pos:position pos:line="515" pos:column="39"/></operator><name pos:line="515" pos:column="39">extuser<pos:position pos:line="515" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="515" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="48"/></expr_stmt>
            <break pos:line="516" pos:column="13">break;<pos:position pos:line="516" pos:column="19"/></break>

            <comment type="block" pos:line="518" pos:column="13">/* case LFT_USER_REALM: */</comment>
            <comment type="block" pos:line="519" pos:column="13">/* case LFT_USER_SCHEME: */</comment>

            <comment type="line" pos:line="521" pos:column="13">// the fmt-&gt;type can not be LFT_HTTP_SENT_STATUS_CODE_OLD_30</comment>
            <comment type="line" pos:line="522" pos:column="13">// but compiler complains if ommited</comment>
        <case pos:line="523" pos:column="9">case <expr><name pos:line="523" pos:column="14">LFT_HTTP_SENT_STATUS_CODE_OLD_30<pos:position pos:line="523" pos:column="46"/></name></expr>:<pos:position pos:line="523" pos:column="47"/></case>
        <case pos:line="524" pos:column="9">case <expr><name pos:line="524" pos:column="14">LFT_HTTP_SENT_STATUS_CODE<pos:position pos:line="524" pos:column="39"/></name></expr>:<pos:position pos:line="524" pos:column="40"/></case>
            <expr_stmt><expr><name pos:line="525" pos:column="13">outint<pos:position pos:line="525" pos:column="19"/></name> <operator pos:line="525" pos:column="20">=<pos:position pos:line="525" pos:column="21"/></operator> <name><name pos:line="525" pos:column="22">al<pos:position pos:line="525" pos:column="24"/></name><operator pos:line="525" pos:column="24">-&gt;<pos:position pos:line="525" pos:column="29"/></operator><name pos:line="525" pos:column="26">http<pos:position pos:line="525" pos:column="30"/></name><operator pos:line="525" pos:column="30">.<pos:position pos:line="525" pos:column="31"/></operator><name pos:line="525" pos:column="31">code<pos:position pos:line="525" pos:column="35"/></name></name></expr>;<pos:position pos:line="525" pos:column="36"/></expr_stmt>

            <expr_stmt><expr><name pos:line="527" pos:column="13">doint<pos:position pos:line="527" pos:column="18"/></name> <operator pos:line="527" pos:column="19">=<pos:position pos:line="527" pos:column="20"/></operator> <literal type="number" pos:line="527" pos:column="21">1<pos:position pos:line="527" pos:column="22"/></literal></expr>;<pos:position pos:line="527" pos:column="23"/></expr_stmt>

            <break pos:line="529" pos:column="13">break;<pos:position pos:line="529" pos:column="19"/></break>

        <case pos:line="531" pos:column="9">case <expr><name pos:line="531" pos:column="14">LFT_HTTP_RECEIVED_STATUS_CODE<pos:position pos:line="531" pos:column="43"/></name></expr>:<pos:position pos:line="531" pos:column="44"/></case>
            <if pos:line="532" pos:column="13">if <condition pos:line="532" pos:column="16">(<expr><name><name pos:line="532" pos:column="17">al<pos:position pos:line="532" pos:column="19"/></name><operator pos:line="532" pos:column="19">-&gt;<pos:position pos:line="532" pos:column="24"/></operator><name pos:line="532" pos:column="21">hier<pos:position pos:line="532" pos:column="25"/></name><operator pos:line="532" pos:column="25">.<pos:position pos:line="532" pos:column="26"/></operator><name pos:line="532" pos:column="26">peer_reply_status<pos:position pos:line="532" pos:column="43"/></name></name> <operator pos:line="532" pos:column="44">==<pos:position pos:line="532" pos:column="46"/></operator> <name><name pos:line="532" pos:column="47">Http<pos:position pos:line="532" pos:column="51"/></name><operator pos:line="532" pos:column="51">::<pos:position pos:line="532" pos:column="53"/></operator><name pos:line="532" pos:column="53">scNone<pos:position pos:line="532" pos:column="59"/></name></name></expr>)<pos:position pos:line="532" pos:column="60"/></condition><then pos:line="532" pos:column="60"> <block pos:line="532" pos:column="61">{
                <expr_stmt><expr><name pos:line="533" pos:column="17">out<pos:position pos:line="533" pos:column="20"/></name> <operator pos:line="533" pos:column="21">=<pos:position pos:line="533" pos:column="22"/></operator> <literal type="string" pos:line="533" pos:column="23">"-"<pos:position pos:line="533" pos:column="26"/></literal></expr>;<pos:position pos:line="533" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="534" pos:column="14"/></block></then> <else pos:line="534" pos:column="15">else <block pos:line="534" pos:column="20">{
                <expr_stmt><expr><name pos:line="535" pos:column="17">outint<pos:position pos:line="535" pos:column="23"/></name> <operator pos:line="535" pos:column="24">=<pos:position pos:line="535" pos:column="25"/></operator> <name><name pos:line="535" pos:column="26">al<pos:position pos:line="535" pos:column="28"/></name><operator pos:line="535" pos:column="28">-&gt;<pos:position pos:line="535" pos:column="33"/></operator><name pos:line="535" pos:column="30">hier<pos:position pos:line="535" pos:column="34"/></name><operator pos:line="535" pos:column="34">.<pos:position pos:line="535" pos:column="35"/></operator><name pos:line="535" pos:column="35">peer_reply_status<pos:position pos:line="535" pos:column="52"/></name></name></expr>;<pos:position pos:line="535" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name pos:line="536" pos:column="17">doint<pos:position pos:line="536" pos:column="22"/></name> <operator pos:line="536" pos:column="23">=<pos:position pos:line="536" pos:column="24"/></operator> <literal type="number" pos:line="536" pos:column="25">1<pos:position pos:line="536" pos:column="26"/></literal></expr>;<pos:position pos:line="536" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="537" pos:column="14"/></block></else></if>
            <break pos:line="538" pos:column="13">break;<pos:position pos:line="538" pos:column="19"/></break>
            <comment type="block" pos:line="539" pos:column="13">/* case LFT_HTTP_STATUS:
             *           out = statusline-&gt;text;
             *     quote = 1;
             *     break;
             */</comment>
        <case pos:line="544" pos:column="9">case <expr><name pos:line="544" pos:column="14">LFT_HTTP_BODY_BYTES_READ<pos:position pos:line="544" pos:column="38"/></name></expr>:<pos:position pos:line="544" pos:column="39"/></case>
            <if pos:line="545" pos:column="13">if <condition pos:line="545" pos:column="16">(<expr><name><name pos:line="545" pos:column="17">al<pos:position pos:line="545" pos:column="19"/></name><operator pos:line="545" pos:column="19">-&gt;<pos:position pos:line="545" pos:column="24"/></operator><name pos:line="545" pos:column="21">hier<pos:position pos:line="545" pos:column="25"/></name><operator pos:line="545" pos:column="25">.<pos:position pos:line="545" pos:column="26"/></operator><name pos:line="545" pos:column="26">bodyBytesRead<pos:position pos:line="545" pos:column="39"/></name></name> <operator pos:line="545" pos:column="40">&gt;=<pos:position pos:line="545" pos:column="45"/></operator> <literal type="number" pos:line="545" pos:column="43">0<pos:position pos:line="545" pos:column="44"/></literal></expr>)<pos:position pos:line="545" pos:column="45"/></condition><then pos:line="545" pos:column="45"> <block pos:line="545" pos:column="46">{
                <expr_stmt><expr><name pos:line="546" pos:column="17">outoff<pos:position pos:line="546" pos:column="23"/></name> <operator pos:line="546" pos:column="24">=<pos:position pos:line="546" pos:column="25"/></operator> <name><name pos:line="546" pos:column="26">al<pos:position pos:line="546" pos:column="28"/></name><operator pos:line="546" pos:column="28">-&gt;<pos:position pos:line="546" pos:column="33"/></operator><name pos:line="546" pos:column="30">hier<pos:position pos:line="546" pos:column="34"/></name><operator pos:line="546" pos:column="34">.<pos:position pos:line="546" pos:column="35"/></operator><name pos:line="546" pos:column="35">bodyBytesRead<pos:position pos:line="546" pos:column="48"/></name></name></expr>;<pos:position pos:line="546" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="547" pos:column="17">dooff<pos:position pos:line="547" pos:column="22"/></name> <operator pos:line="547" pos:column="23">=<pos:position pos:line="547" pos:column="24"/></operator> <literal type="number" pos:line="547" pos:column="25">1<pos:position pos:line="547" pos:column="26"/></literal></expr>;<pos:position pos:line="547" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="548" pos:column="14"/></block></then></if>
            <comment type="line" pos:line="549" pos:column="13">// else if hier.bodyBytesRead &lt; 0 we did not have any data exchange with</comment>
            <comment type="line" pos:line="550" pos:column="13">// a peer server so just print a "-" (eg requests served from cache,</comment>
            <comment type="line" pos:line="551" pos:column="13">// or internal error messages).</comment>
            <break pos:line="552" pos:column="13">break;<pos:position pos:line="552" pos:column="19"/></break>

        <case pos:line="554" pos:column="9">case <expr><name pos:line="554" pos:column="14">LFT_SQUID_STATUS<pos:position pos:line="554" pos:column="30"/></name></expr>:<pos:position pos:line="554" pos:column="31"/></case>
            <if pos:line="555" pos:column="13">if <condition pos:line="555" pos:column="16">(<expr><name><name pos:line="555" pos:column="17">al<pos:position pos:line="555" pos:column="19"/></name><operator pos:line="555" pos:column="19">-&gt;<pos:position pos:line="555" pos:column="24"/></operator><name pos:line="555" pos:column="21">http<pos:position pos:line="555" pos:column="25"/></name><operator pos:line="555" pos:column="25">.<pos:position pos:line="555" pos:column="26"/></operator><name pos:line="555" pos:column="26">timedout<pos:position pos:line="555" pos:column="34"/></name></name> <operator pos:line="555" pos:column="35">||<pos:position pos:line="555" pos:column="37"/></operator> <name><name pos:line="555" pos:column="38">al<pos:position pos:line="555" pos:column="40"/></name><operator pos:line="555" pos:column="40">-&gt;<pos:position pos:line="555" pos:column="45"/></operator><name pos:line="555" pos:column="42">http<pos:position pos:line="555" pos:column="46"/></name><operator pos:line="555" pos:column="46">.<pos:position pos:line="555" pos:column="47"/></operator><name pos:line="555" pos:column="47">aborted<pos:position pos:line="555" pos:column="54"/></name></name></expr>)<pos:position pos:line="555" pos:column="55"/></condition><then pos:line="555" pos:column="55"> <block pos:line="555" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="556" pos:column="17">snprintf<pos:position pos:line="556" pos:column="25"/></name><argument_list pos:line="556" pos:column="25">(<argument><expr><name pos:line="556" pos:column="26">tmp<pos:position pos:line="556" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="556" pos:column="31">sizeof<argument_list pos:line="556" pos:column="37">(<argument><expr><name pos:line="556" pos:column="38">tmp<pos:position pos:line="556" pos:column="41"/></name></expr></argument>)<pos:position pos:line="556" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="556" pos:column="44">"%s%s"<pos:position pos:line="556" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="556" pos:column="52">LogTags_str<pos:position pos:line="556" pos:column="63"/></name><index pos:line="556" pos:column="63">[<expr><name><name pos:line="556" pos:column="64">al<pos:position pos:line="556" pos:column="66"/></name><operator pos:line="556" pos:column="66">-&gt;<pos:position pos:line="556" pos:column="71"/></operator><name pos:line="556" pos:column="68">cache<pos:position pos:line="556" pos:column="73"/></name><operator pos:line="556" pos:column="73">.<pos:position pos:line="556" pos:column="74"/></operator><name pos:line="556" pos:column="74">code<pos:position pos:line="556" pos:column="78"/></name></name></expr>]<pos:position pos:line="556" pos:column="79"/></index></name></expr></argument>,
                         <argument><expr><call><name><name pos:line="557" pos:column="26">al<pos:position pos:line="557" pos:column="28"/></name><operator pos:line="557" pos:column="28">-&gt;<pos:position pos:line="557" pos:column="33"/></operator><name pos:line="557" pos:column="30">http<pos:position pos:line="557" pos:column="34"/></name><operator pos:line="557" pos:column="34">.<pos:position pos:line="557" pos:column="35"/></operator><name pos:line="557" pos:column="35">statusSfx<pos:position pos:line="557" pos:column="44"/></name></name><argument_list pos:line="557" pos:column="44">()<pos:position pos:line="557" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="557" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="557" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="558" pos:column="17">out<pos:position pos:line="558" pos:column="20"/></name> <operator pos:line="558" pos:column="21">=<pos:position pos:line="558" pos:column="22"/></operator> <name pos:line="558" pos:column="23">tmp<pos:position pos:line="558" pos:column="26"/></name></expr>;<pos:position pos:line="558" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="559" pos:column="14"/></block></then> <else pos:line="559" pos:column="15">else <block pos:line="559" pos:column="20">{
                <expr_stmt><expr><name pos:line="560" pos:column="17">out<pos:position pos:line="560" pos:column="20"/></name> <operator pos:line="560" pos:column="21">=<pos:position pos:line="560" pos:column="22"/></operator> <name><name pos:line="560" pos:column="23">LogTags_str<pos:position pos:line="560" pos:column="34"/></name><index pos:line="560" pos:column="34">[<expr><name><name pos:line="560" pos:column="35">al<pos:position pos:line="560" pos:column="37"/></name><operator pos:line="560" pos:column="37">-&gt;<pos:position pos:line="560" pos:column="42"/></operator><name pos:line="560" pos:column="39">cache<pos:position pos:line="560" pos:column="44"/></name><operator pos:line="560" pos:column="44">.<pos:position pos:line="560" pos:column="45"/></operator><name pos:line="560" pos:column="45">code<pos:position pos:line="560" pos:column="49"/></name></name></expr>]<pos:position pos:line="560" pos:column="50"/></index></name></expr>;<pos:position pos:line="560" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="561" pos:column="14"/></block></else></if>

            <break pos:line="563" pos:column="13">break;<pos:position pos:line="563" pos:column="19"/></break>

        <case pos:line="565" pos:column="9">case <expr><name pos:line="565" pos:column="14">LFT_SQUID_ERROR<pos:position pos:line="565" pos:column="29"/></name></expr>:<pos:position pos:line="565" pos:column="30"/></case>
            <if pos:line="566" pos:column="13">if <condition pos:line="566" pos:column="16">(<expr><name><name pos:line="566" pos:column="17">al<pos:position pos:line="566" pos:column="19"/></name><operator pos:line="566" pos:column="19">-&gt;<pos:position pos:line="566" pos:column="24"/></operator><name pos:line="566" pos:column="21">request<pos:position pos:line="566" pos:column="28"/></name></name> <operator pos:line="566" pos:column="29">&amp;&amp;<pos:position pos:line="566" pos:column="39"/></operator> <name><name pos:line="566" pos:column="32">al<pos:position pos:line="566" pos:column="34"/></name><operator pos:line="566" pos:column="34">-&gt;<pos:position pos:line="566" pos:column="39"/></operator><name pos:line="566" pos:column="36">request<pos:position pos:line="566" pos:column="43"/></name><operator pos:line="566" pos:column="43">-&gt;<pos:position pos:line="566" pos:column="48"/></operator><name pos:line="566" pos:column="45">errType<pos:position pos:line="566" pos:column="52"/></name></name> <operator pos:line="566" pos:column="53">!=<pos:position pos:line="566" pos:column="55"/></operator> <name pos:line="566" pos:column="56">ERR_NONE<pos:position pos:line="566" pos:column="64"/></name></expr>)<pos:position pos:line="566" pos:column="65"/></condition><then pos:line="566" pos:column="65">
                <block type="pseudo"><expr_stmt><expr><name pos:line="567" pos:column="17">out<pos:position pos:line="567" pos:column="20"/></name> <operator pos:line="567" pos:column="21">=<pos:position pos:line="567" pos:column="22"/></operator> <call><name pos:line="567" pos:column="23">errorPageName<pos:position pos:line="567" pos:column="36"/></name><argument_list pos:line="567" pos:column="36">(<argument><expr><name><name pos:line="567" pos:column="37">al<pos:position pos:line="567" pos:column="39"/></name><operator pos:line="567" pos:column="39">-&gt;<pos:position pos:line="567" pos:column="44"/></operator><name pos:line="567" pos:column="41">request<pos:position pos:line="567" pos:column="48"/></name><operator pos:line="567" pos:column="48">-&gt;<pos:position pos:line="567" pos:column="53"/></operator><name pos:line="567" pos:column="50">errType<pos:position pos:line="567" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="567" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="567" pos:column="59"/></expr_stmt></block></then></if>
            <break pos:line="568" pos:column="13">break;<pos:position pos:line="568" pos:column="19"/></break>

        <case pos:line="570" pos:column="9">case <expr><name pos:line="570" pos:column="14">LFT_SQUID_ERROR_DETAIL<pos:position pos:line="570" pos:column="36"/></name></expr>:<pos:position pos:line="570" pos:column="37"/></case>
<cpp:if pos:line="571" pos:column="1">#<cpp:directive pos:line="571" pos:column="2">if<pos:position pos:line="571" pos:column="4"/></cpp:directive> <expr><name pos:line="571" pos:column="5">USE_SSL<pos:position pos:line="571" pos:column="12"/></name></expr></cpp:if>
            <if pos:line="572" pos:column="13">if <condition pos:line="572" pos:column="16">(<expr><name><name pos:line="572" pos:column="17">al<pos:position pos:line="572" pos:column="19"/></name><operator pos:line="572" pos:column="19">-&gt;<pos:position pos:line="572" pos:column="24"/></operator><name pos:line="572" pos:column="21">request<pos:position pos:line="572" pos:column="28"/></name></name> <operator pos:line="572" pos:column="29">&amp;&amp;<pos:position pos:line="572" pos:column="39"/></operator> <name><name pos:line="572" pos:column="32">al<pos:position pos:line="572" pos:column="34"/></name><operator pos:line="572" pos:column="34">-&gt;<pos:position pos:line="572" pos:column="39"/></operator><name pos:line="572" pos:column="36">request<pos:position pos:line="572" pos:column="43"/></name><operator pos:line="572" pos:column="43">-&gt;<pos:position pos:line="572" pos:column="48"/></operator><name pos:line="572" pos:column="45">errType<pos:position pos:line="572" pos:column="52"/></name></name> <operator pos:line="572" pos:column="53">==<pos:position pos:line="572" pos:column="55"/></operator> <name pos:line="572" pos:column="56">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="572" pos:column="79"/></name></expr>)<pos:position pos:line="572" pos:column="80"/></condition><then pos:line="572" pos:column="80"> <block pos:line="572" pos:column="81">{
                <if pos:line="573" pos:column="17">if <condition pos:line="573" pos:column="20">(<expr><operator pos:line="573" pos:column="21">!<pos:position pos:line="573" pos:column="22"/></operator> <operator pos:line="573" pos:column="23">(<pos:position pos:line="573" pos:column="24"/></operator><name pos:line="573" pos:column="24">out<pos:position pos:line="573" pos:column="27"/></name> <operator pos:line="573" pos:column="28">=<pos:position pos:line="573" pos:column="29"/></operator> <call><name><name pos:line="573" pos:column="30">Ssl<pos:position pos:line="573" pos:column="33"/></name><operator pos:line="573" pos:column="33">::<pos:position pos:line="573" pos:column="35"/></operator><name pos:line="573" pos:column="35">GetErrorName<pos:position pos:line="573" pos:column="47"/></name></name><argument_list pos:line="573" pos:column="47">(<argument><expr><name><name pos:line="573" pos:column="48">al<pos:position pos:line="573" pos:column="50"/></name><operator pos:line="573" pos:column="50">-&gt;<pos:position pos:line="573" pos:column="55"/></operator><name pos:line="573" pos:column="52">request<pos:position pos:line="573" pos:column="59"/></name><operator pos:line="573" pos:column="59">-&gt;<pos:position pos:line="573" pos:column="64"/></operator><name pos:line="573" pos:column="61">errDetail<pos:position pos:line="573" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="573" pos:column="71"/></argument_list></call><operator pos:line="573" pos:column="71">)<pos:position pos:line="573" pos:column="72"/></operator></expr>)<pos:position pos:line="573" pos:column="73"/></condition><then pos:line="573" pos:column="73"> <block pos:line="573" pos:column="74">{
                    <expr_stmt><expr><call><name pos:line="574" pos:column="21">snprintf<pos:position pos:line="574" pos:column="29"/></name><argument_list pos:line="574" pos:column="29">(<argument><expr><name pos:line="574" pos:column="30">tmp<pos:position pos:line="574" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="574" pos:column="35">sizeof<argument_list pos:line="574" pos:column="41">(<argument><expr><name pos:line="574" pos:column="42">tmp<pos:position pos:line="574" pos:column="45"/></name></expr></argument>)<pos:position pos:line="574" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="574" pos:column="48">"SSL_ERR=%d"<pos:position pos:line="574" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="574" pos:column="62">al<pos:position pos:line="574" pos:column="64"/></name><operator pos:line="574" pos:column="64">-&gt;<pos:position pos:line="574" pos:column="69"/></operator><name pos:line="574" pos:column="66">request<pos:position pos:line="574" pos:column="73"/></name><operator pos:line="574" pos:column="73">-&gt;<pos:position pos:line="574" pos:column="78"/></operator><name pos:line="574" pos:column="75">errDetail<pos:position pos:line="574" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="574" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="86"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="575" pos:column="21">out<pos:position pos:line="575" pos:column="24"/></name> <operator pos:line="575" pos:column="25">=<pos:position pos:line="575" pos:column="26"/></operator> <name pos:line="575" pos:column="27">tmp<pos:position pos:line="575" pos:column="30"/></name></expr>;<pos:position pos:line="575" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="576" pos:column="18"/></block></then></if>
            }<pos:position pos:line="577" pos:column="14"/></block></then> <elseif pos:line="577" pos:column="15">else
<cpp:endif pos:line="578" pos:column="1">#<cpp:directive pos:line="578" pos:column="2">endif<pos:position pos:line="578" pos:column="7"/></cpp:directive></cpp:endif>
                <if pos:line="579" pos:column="17">if <condition pos:line="579" pos:column="20">(<expr><name><name pos:line="579" pos:column="21">al<pos:position pos:line="579" pos:column="23"/></name><operator pos:line="579" pos:column="23">-&gt;<pos:position pos:line="579" pos:column="28"/></operator><name pos:line="579" pos:column="25">request<pos:position pos:line="579" pos:column="32"/></name></name> <operator pos:line="579" pos:column="33">&amp;&amp;<pos:position pos:line="579" pos:column="43"/></operator> <name><name pos:line="579" pos:column="36">al<pos:position pos:line="579" pos:column="38"/></name><operator pos:line="579" pos:column="38">-&gt;<pos:position pos:line="579" pos:column="43"/></operator><name pos:line="579" pos:column="40">request<pos:position pos:line="579" pos:column="47"/></name><operator pos:line="579" pos:column="47">-&gt;<pos:position pos:line="579" pos:column="52"/></operator><name pos:line="579" pos:column="49">errDetail<pos:position pos:line="579" pos:column="58"/></name></name> <operator pos:line="579" pos:column="59">!=<pos:position pos:line="579" pos:column="61"/></operator> <name pos:line="579" pos:column="62">ERR_DETAIL_NONE<pos:position pos:line="579" pos:column="77"/></name></expr>)<pos:position pos:line="579" pos:column="78"/></condition><then pos:line="579" pos:column="78"> <block pos:line="579" pos:column="79">{
                    <if pos:line="580" pos:column="21">if <condition pos:line="580" pos:column="24">(<expr><name><name pos:line="580" pos:column="25">al<pos:position pos:line="580" pos:column="27"/></name><operator pos:line="580" pos:column="27">-&gt;<pos:position pos:line="580" pos:column="32"/></operator><name pos:line="580" pos:column="29">request<pos:position pos:line="580" pos:column="36"/></name><operator pos:line="580" pos:column="36">-&gt;<pos:position pos:line="580" pos:column="41"/></operator><name pos:line="580" pos:column="38">errDetail<pos:position pos:line="580" pos:column="47"/></name></name> <operator pos:line="580" pos:column="48">&gt;<pos:position pos:line="580" pos:column="52"/></operator> <name pos:line="580" pos:column="50">ERR_DETAIL_START<pos:position pos:line="580" pos:column="66"/></name>  <operator pos:line="580" pos:column="68">&amp;&amp;<pos:position pos:line="580" pos:column="78"/></operator>
                            <name><name pos:line="581" pos:column="29">al<pos:position pos:line="581" pos:column="31"/></name><operator pos:line="581" pos:column="31">-&gt;<pos:position pos:line="581" pos:column="36"/></operator><name pos:line="581" pos:column="33">request<pos:position pos:line="581" pos:column="40"/></name><operator pos:line="581" pos:column="40">-&gt;<pos:position pos:line="581" pos:column="45"/></operator><name pos:line="581" pos:column="42">errDetail<pos:position pos:line="581" pos:column="51"/></name></name> <operator pos:line="581" pos:column="52">&lt;<pos:position pos:line="581" pos:column="56"/></operator> <name pos:line="581" pos:column="54">ERR_DETAIL_MAX<pos:position pos:line="581" pos:column="68"/></name></expr>)<pos:position pos:line="581" pos:column="69"/></condition><then pos:line="581" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="582" pos:column="25">out<pos:position pos:line="582" pos:column="28"/></name> <operator pos:line="582" pos:column="29">=<pos:position pos:line="582" pos:column="30"/></operator> <call><name pos:line="582" pos:column="31">errorDetailName<pos:position pos:line="582" pos:column="46"/></name><argument_list pos:line="582" pos:column="46">(<argument><expr><name><name pos:line="582" pos:column="47">al<pos:position pos:line="582" pos:column="49"/></name><operator pos:line="582" pos:column="49">-&gt;<pos:position pos:line="582" pos:column="54"/></operator><name pos:line="582" pos:column="51">request<pos:position pos:line="582" pos:column="58"/></name><operator pos:line="582" pos:column="58">-&gt;<pos:position pos:line="582" pos:column="63"/></operator><name pos:line="582" pos:column="60">errDetail<pos:position pos:line="582" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="582" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="582" pos:column="71"/></expr_stmt></block></then>
                    <else pos:line="583" pos:column="21">else <block pos:line="583" pos:column="26">{
                        <if pos:line="584" pos:column="25">if <condition pos:line="584" pos:column="28">(<expr><name><name pos:line="584" pos:column="29">al<pos:position pos:line="584" pos:column="31"/></name><operator pos:line="584" pos:column="31">-&gt;<pos:position pos:line="584" pos:column="36"/></operator><name pos:line="584" pos:column="33">request<pos:position pos:line="584" pos:column="40"/></name><operator pos:line="584" pos:column="40">-&gt;<pos:position pos:line="584" pos:column="45"/></operator><name pos:line="584" pos:column="42">errDetail<pos:position pos:line="584" pos:column="51"/></name></name> <operator pos:line="584" pos:column="52">&gt;=<pos:position pos:line="584" pos:column="57"/></operator> <name pos:line="584" pos:column="55">ERR_DETAIL_EXCEPTION_START<pos:position pos:line="584" pos:column="81"/></name></expr>)<pos:position pos:line="584" pos:column="82"/></condition><then pos:line="584" pos:column="82">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="585" pos:column="29">snprintf<pos:position pos:line="585" pos:column="37"/></name><argument_list pos:line="585" pos:column="37">(<argument><expr><name pos:line="585" pos:column="38">tmp<pos:position pos:line="585" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="585" pos:column="43">sizeof<argument_list pos:line="585" pos:column="49">(<argument><expr><name pos:line="585" pos:column="50">tmp<pos:position pos:line="585" pos:column="53"/></name></expr></argument>)<pos:position pos:line="585" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="585" pos:column="56">"%s=0x%X"<pos:position pos:line="585" pos:column="65"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="586" pos:column="38">errorDetailName<pos:position pos:line="586" pos:column="53"/></name><argument_list pos:line="586" pos:column="53">(<argument><expr><name><name pos:line="586" pos:column="54">al<pos:position pos:line="586" pos:column="56"/></name><operator pos:line="586" pos:column="56">-&gt;<pos:position pos:line="586" pos:column="61"/></operator><name pos:line="586" pos:column="58">request<pos:position pos:line="586" pos:column="65"/></name><operator pos:line="586" pos:column="65">-&gt;<pos:position pos:line="586" pos:column="70"/></operator><name pos:line="586" pos:column="67">errDetail<pos:position pos:line="586" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="586" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="586" pos:column="79">(<pos:position pos:line="586" pos:column="80"/></operator><name pos:line="586" pos:column="80">uint32_t<pos:position pos:line="586" pos:column="88"/></name><operator pos:line="586" pos:column="88">)<pos:position pos:line="586" pos:column="89"/></operator> <name><name pos:line="586" pos:column="90">al<pos:position pos:line="586" pos:column="92"/></name><operator pos:line="586" pos:column="92">-&gt;<pos:position pos:line="586" pos:column="97"/></operator><name pos:line="586" pos:column="94">request<pos:position pos:line="586" pos:column="101"/></name><operator pos:line="586" pos:column="101">-&gt;<pos:position pos:line="586" pos:column="106"/></operator><name pos:line="586" pos:column="103">errDetail<pos:position pos:line="586" pos:column="112"/></name></name></expr></argument>)<pos:position pos:line="586" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="586" pos:column="114"/></expr_stmt></block></then>
                        <else pos:line="587" pos:column="25">else
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="588" pos:column="29">snprintf<pos:position pos:line="588" pos:column="37"/></name><argument_list pos:line="588" pos:column="37">(<argument><expr><name pos:line="588" pos:column="38">tmp<pos:position pos:line="588" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="588" pos:column="43">sizeof<argument_list pos:line="588" pos:column="49">(<argument><expr><name pos:line="588" pos:column="50">tmp<pos:position pos:line="588" pos:column="53"/></name></expr></argument>)<pos:position pos:line="588" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="588" pos:column="56">"%s=%d"<pos:position pos:line="588" pos:column="63"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="589" pos:column="38">errorDetailName<pos:position pos:line="589" pos:column="53"/></name><argument_list pos:line="589" pos:column="53">(<argument><expr><name><name pos:line="589" pos:column="54">al<pos:position pos:line="589" pos:column="56"/></name><operator pos:line="589" pos:column="56">-&gt;<pos:position pos:line="589" pos:column="61"/></operator><name pos:line="589" pos:column="58">request<pos:position pos:line="589" pos:column="65"/></name><operator pos:line="589" pos:column="65">-&gt;<pos:position pos:line="589" pos:column="70"/></operator><name pos:line="589" pos:column="67">errDetail<pos:position pos:line="589" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="589" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="589" pos:column="79">al<pos:position pos:line="589" pos:column="81"/></name><operator pos:line="589" pos:column="81">-&gt;<pos:position pos:line="589" pos:column="86"/></operator><name pos:line="589" pos:column="83">request<pos:position pos:line="589" pos:column="90"/></name><operator pos:line="589" pos:column="90">-&gt;<pos:position pos:line="589" pos:column="95"/></operator><name pos:line="589" pos:column="92">errDetail<pos:position pos:line="589" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="589" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="103"/></expr_stmt></block></else></if>
                        <expr_stmt><expr><name pos:line="590" pos:column="25">out<pos:position pos:line="590" pos:column="28"/></name> <operator pos:line="590" pos:column="29">=<pos:position pos:line="590" pos:column="30"/></operator> <name pos:line="590" pos:column="31">tmp<pos:position pos:line="590" pos:column="34"/></name></expr>;<pos:position pos:line="590" pos:column="35"/></expr_stmt>
                    }<pos:position pos:line="591" pos:column="22"/></block></else></if>
                }<pos:position pos:line="592" pos:column="18"/></block></then></if></elseif></if>
            <break pos:line="593" pos:column="13">break;<pos:position pos:line="593" pos:column="19"/></break>

        <case pos:line="595" pos:column="9">case <expr><name pos:line="595" pos:column="14">LFT_SQUID_HIERARCHY<pos:position pos:line="595" pos:column="33"/></name></expr>:<pos:position pos:line="595" pos:column="34"/></case>
            <if pos:line="596" pos:column="13">if <condition pos:line="596" pos:column="16">(<expr><name><name pos:line="596" pos:column="17">al<pos:position pos:line="596" pos:column="19"/></name><operator pos:line="596" pos:column="19">-&gt;<pos:position pos:line="596" pos:column="24"/></operator><name pos:line="596" pos:column="21">hier<pos:position pos:line="596" pos:column="25"/></name><operator pos:line="596" pos:column="25">.<pos:position pos:line="596" pos:column="26"/></operator><name pos:line="596" pos:column="26">ping<pos:position pos:line="596" pos:column="30"/></name><operator pos:line="596" pos:column="30">.<pos:position pos:line="596" pos:column="31"/></operator><name pos:line="596" pos:column="31">timedout<pos:position pos:line="596" pos:column="39"/></name></name></expr>)<pos:position pos:line="596" pos:column="40"/></condition><then pos:line="596" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="597" pos:column="17">mb<pos:position pos:line="597" pos:column="19"/></name><operator pos:line="597" pos:column="19">.<pos:position pos:line="597" pos:column="20"/></operator><name pos:line="597" pos:column="20">append<pos:position pos:line="597" pos:column="26"/></name></name><argument_list pos:line="597" pos:column="26">(<argument><expr><literal type="string" pos:line="597" pos:column="27">"TIMEOUT_"<pos:position pos:line="597" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="597" pos:column="39">8<pos:position pos:line="597" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="597" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="597" pos:column="42"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="599" pos:column="13">out<pos:position pos:line="599" pos:column="16"/></name> <operator pos:line="599" pos:column="17">=<pos:position pos:line="599" pos:column="18"/></operator> <name><name pos:line="599" pos:column="19">hier_code_str<pos:position pos:line="599" pos:column="32"/></name><index pos:line="599" pos:column="32">[<expr><name><name pos:line="599" pos:column="33">al<pos:position pos:line="599" pos:column="35"/></name><operator pos:line="599" pos:column="35">-&gt;<pos:position pos:line="599" pos:column="40"/></operator><name pos:line="599" pos:column="37">hier<pos:position pos:line="599" pos:column="41"/></name><operator pos:line="599" pos:column="41">.<pos:position pos:line="599" pos:column="42"/></operator><name pos:line="599" pos:column="42">code<pos:position pos:line="599" pos:column="46"/></name></name></expr>]<pos:position pos:line="599" pos:column="47"/></index></name></expr>;<pos:position pos:line="599" pos:column="48"/></expr_stmt>

            <break pos:line="601" pos:column="13">break;<pos:position pos:line="601" pos:column="19"/></break>

        <case pos:line="603" pos:column="9">case <expr><name pos:line="603" pos:column="14">LFT_MIME_TYPE<pos:position pos:line="603" pos:column="27"/></name></expr>:<pos:position pos:line="603" pos:column="28"/></case>
            <expr_stmt><expr><name pos:line="604" pos:column="13">out<pos:position pos:line="604" pos:column="16"/></name> <operator pos:line="604" pos:column="17">=<pos:position pos:line="604" pos:column="18"/></operator> <name><name pos:line="604" pos:column="19">al<pos:position pos:line="604" pos:column="21"/></name><operator pos:line="604" pos:column="21">-&gt;<pos:position pos:line="604" pos:column="26"/></operator><name pos:line="604" pos:column="23">http<pos:position pos:line="604" pos:column="27"/></name><operator pos:line="604" pos:column="27">.<pos:position pos:line="604" pos:column="28"/></operator><name pos:line="604" pos:column="28">content_type<pos:position pos:line="604" pos:column="40"/></name></name></expr>;<pos:position pos:line="604" pos:column="41"/></expr_stmt>

            <break pos:line="606" pos:column="13">break;<pos:position pos:line="606" pos:column="19"/></break>

        <case pos:line="608" pos:column="9">case <expr><name pos:line="608" pos:column="14">LFT_CLIENT_REQ_METHOD<pos:position pos:line="608" pos:column="35"/></name></expr>:<pos:position pos:line="608" pos:column="36"/></case>
            <if pos:line="609" pos:column="13">if <condition pos:line="609" pos:column="16">(<expr><name><name pos:line="609" pos:column="17">al<pos:position pos:line="609" pos:column="19"/></name><operator pos:line="609" pos:column="19">-&gt;<pos:position pos:line="609" pos:column="24"/></operator><name pos:line="609" pos:column="21">request<pos:position pos:line="609" pos:column="28"/></name></name></expr>)<pos:position pos:line="609" pos:column="29"/></condition><then pos:line="609" pos:column="29"> <block pos:line="609" pos:column="30">{
                <expr_stmt><expr><name pos:line="610" pos:column="17">out<pos:position pos:line="610" pos:column="20"/></name> <operator pos:line="610" pos:column="21">=<pos:position pos:line="610" pos:column="22"/></operator> <call><name><name pos:line="610" pos:column="23">al<pos:position pos:line="610" pos:column="25"/></name><operator pos:line="610" pos:column="25">-&gt;<pos:position pos:line="610" pos:column="30"/></operator><name pos:line="610" pos:column="27">request<pos:position pos:line="610" pos:column="34"/></name><operator pos:line="610" pos:column="34">-&gt;<pos:position pos:line="610" pos:column="39"/></operator><name pos:line="610" pos:column="36">method<pos:position pos:line="610" pos:column="42"/></name><operator pos:line="610" pos:column="42">.<pos:position pos:line="610" pos:column="43"/></operator><name pos:line="610" pos:column="43">image<pos:position pos:line="610" pos:column="48"/></name></name><argument_list pos:line="610" pos:column="48">()<pos:position pos:line="610" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="610" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="611" pos:column="17">quote<pos:position pos:line="611" pos:column="22"/></name> <operator pos:line="611" pos:column="23">=<pos:position pos:line="611" pos:column="24"/></operator> <literal type="number" pos:line="611" pos:column="25">1<pos:position pos:line="611" pos:column="26"/></literal></expr>;<pos:position pos:line="611" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="612" pos:column="14"/></block></then></if>
            <break pos:line="613" pos:column="13">break;<pos:position pos:line="613" pos:column="19"/></break>

        <case pos:line="615" pos:column="9">case <expr><name pos:line="615" pos:column="14">LFT_CLIENT_REQ_URI<pos:position pos:line="615" pos:column="32"/></name></expr>:<pos:position pos:line="615" pos:column="33"/></case>
            <comment type="line" pos:line="616" pos:column="13">// original client URI</comment>
            <if pos:line="617" pos:column="13">if <condition pos:line="617" pos:column="16">(<expr><name><name pos:line="617" pos:column="17">al<pos:position pos:line="617" pos:column="19"/></name><operator pos:line="617" pos:column="19">-&gt;<pos:position pos:line="617" pos:column="24"/></operator><name pos:line="617" pos:column="21">request<pos:position pos:line="617" pos:column="28"/></name></name></expr>)<pos:position pos:line="617" pos:column="29"/></condition><then pos:line="617" pos:column="29"> <block pos:line="617" pos:column="30">{
                <expr_stmt><expr><name pos:line="618" pos:column="17">out<pos:position pos:line="618" pos:column="20"/></name> <operator pos:line="618" pos:column="21">=<pos:position pos:line="618" pos:column="22"/></operator> <call><name pos:line="618" pos:column="23">urlCanonical<pos:position pos:line="618" pos:column="35"/></name><argument_list pos:line="618" pos:column="35">(<argument><expr><name><name pos:line="618" pos:column="36">al<pos:position pos:line="618" pos:column="38"/></name><operator pos:line="618" pos:column="38">-&gt;<pos:position pos:line="618" pos:column="43"/></operator><name pos:line="618" pos:column="40">request<pos:position pos:line="618" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="618" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="619" pos:column="17">quote<pos:position pos:line="619" pos:column="22"/></name> <operator pos:line="619" pos:column="23">=<pos:position pos:line="619" pos:column="24"/></operator> <literal type="number" pos:line="619" pos:column="25">1<pos:position pos:line="619" pos:column="26"/></literal></expr>;<pos:position pos:line="619" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="620" pos:column="14"/></block></then></if>
            <break pos:line="621" pos:column="13">break;<pos:position pos:line="621" pos:column="19"/></break>

        <case pos:line="623" pos:column="9">case <expr><name pos:line="623" pos:column="14">LFT_REQUEST_URLPATH_OLD_31<pos:position pos:line="623" pos:column="40"/></name></expr>:<pos:position pos:line="623" pos:column="41"/></case>
        <case pos:line="624" pos:column="9">case <expr><name pos:line="624" pos:column="14">LFT_CLIENT_REQ_URLPATH<pos:position pos:line="624" pos:column="36"/></name></expr>:<pos:position pos:line="624" pos:column="37"/></case>
            <if pos:line="625" pos:column="13">if <condition pos:line="625" pos:column="16">(<expr><name><name pos:line="625" pos:column="17">al<pos:position pos:line="625" pos:column="19"/></name><operator pos:line="625" pos:column="19">-&gt;<pos:position pos:line="625" pos:column="24"/></operator><name pos:line="625" pos:column="21">request<pos:position pos:line="625" pos:column="28"/></name></name></expr>)<pos:position pos:line="625" pos:column="29"/></condition><then pos:line="625" pos:column="29"> <block pos:line="625" pos:column="30">{
                <expr_stmt><expr><name pos:line="626" pos:column="17">out<pos:position pos:line="626" pos:column="20"/></name> <operator pos:line="626" pos:column="21">=<pos:position pos:line="626" pos:column="22"/></operator> <call><name><name pos:line="626" pos:column="23">al<pos:position pos:line="626" pos:column="25"/></name><operator pos:line="626" pos:column="25">-&gt;<pos:position pos:line="626" pos:column="30"/></operator><name pos:line="626" pos:column="27">request<pos:position pos:line="626" pos:column="34"/></name><operator pos:line="626" pos:column="34">-&gt;<pos:position pos:line="626" pos:column="39"/></operator><name pos:line="626" pos:column="36">urlpath<pos:position pos:line="626" pos:column="43"/></name><operator pos:line="626" pos:column="43">.<pos:position pos:line="626" pos:column="44"/></operator><name pos:line="626" pos:column="44">termedBuf<pos:position pos:line="626" pos:column="53"/></name></name><argument_list pos:line="626" pos:column="53">()<pos:position pos:line="626" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="626" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><name pos:line="627" pos:column="17">quote<pos:position pos:line="627" pos:column="22"/></name> <operator pos:line="627" pos:column="23">=<pos:position pos:line="627" pos:column="24"/></operator> <literal type="number" pos:line="627" pos:column="25">1<pos:position pos:line="627" pos:column="26"/></literal></expr>;<pos:position pos:line="627" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="628" pos:column="14"/></block></then></if>
            <break pos:line="629" pos:column="13">break;<pos:position pos:line="629" pos:column="19"/></break>

        <case pos:line="631" pos:column="9">case <expr><name pos:line="631" pos:column="14">LFT_CLIENT_REQ_VERSION<pos:position pos:line="631" pos:column="36"/></name></expr>:<pos:position pos:line="631" pos:column="37"/></case>
            <if pos:line="632" pos:column="13">if <condition pos:line="632" pos:column="16">(<expr><name><name pos:line="632" pos:column="17">al<pos:position pos:line="632" pos:column="19"/></name><operator pos:line="632" pos:column="19">-&gt;<pos:position pos:line="632" pos:column="24"/></operator><name pos:line="632" pos:column="21">request<pos:position pos:line="632" pos:column="28"/></name></name></expr>)<pos:position pos:line="632" pos:column="29"/></condition><then pos:line="632" pos:column="29"> <block pos:line="632" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="633" pos:column="17">snprintf<pos:position pos:line="633" pos:column="25"/></name><argument_list pos:line="633" pos:column="25">(<argument><expr><name pos:line="633" pos:column="26">tmp<pos:position pos:line="633" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="633" pos:column="31">sizeof<argument_list pos:line="633" pos:column="37">(<argument><expr><name pos:line="633" pos:column="38">tmp<pos:position pos:line="633" pos:column="41"/></name></expr></argument>)<pos:position pos:line="633" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="633" pos:column="44">"%d.%d"<pos:position pos:line="633" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="633" pos:column="53">(<pos:position pos:line="633" pos:column="54"/></operator><name pos:line="633" pos:column="54">int<pos:position pos:line="633" pos:column="57"/></name><operator pos:line="633" pos:column="57">)<pos:position pos:line="633" pos:column="58"/></operator> <name><name pos:line="633" pos:column="59">al<pos:position pos:line="633" pos:column="61"/></name><operator pos:line="633" pos:column="61">-&gt;<pos:position pos:line="633" pos:column="66"/></operator><name pos:line="633" pos:column="63">request<pos:position pos:line="633" pos:column="70"/></name><operator pos:line="633" pos:column="70">-&gt;<pos:position pos:line="633" pos:column="75"/></operator><name pos:line="633" pos:column="72">http_ver<pos:position pos:line="633" pos:column="80"/></name><operator pos:line="633" pos:column="80">.<pos:position pos:line="633" pos:column="81"/></operator><name pos:line="633" pos:column="81">major<pos:position pos:line="633" pos:column="86"/></name></name></expr></argument>, <argument><expr><operator pos:line="633" pos:column="88">(<pos:position pos:line="633" pos:column="89"/></operator><name pos:line="633" pos:column="89">int<pos:position pos:line="633" pos:column="92"/></name><operator pos:line="633" pos:column="92">)<pos:position pos:line="633" pos:column="93"/></operator> <name><name pos:line="633" pos:column="94">al<pos:position pos:line="633" pos:column="96"/></name><operator pos:line="633" pos:column="96">-&gt;<pos:position pos:line="633" pos:column="101"/></operator><name pos:line="633" pos:column="98">request<pos:position pos:line="633" pos:column="105"/></name><operator pos:line="633" pos:column="105">-&gt;<pos:position pos:line="633" pos:column="110"/></operator><name pos:line="633" pos:column="107">http_ver<pos:position pos:line="633" pos:column="115"/></name><operator pos:line="633" pos:column="115">.<pos:position pos:line="633" pos:column="116"/></operator><name pos:line="633" pos:column="116">minor<pos:position pos:line="633" pos:column="121"/></name></name></expr></argument>)<pos:position pos:line="633" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="633" pos:column="123"/></expr_stmt>
                <expr_stmt><expr><name pos:line="634" pos:column="17">out<pos:position pos:line="634" pos:column="20"/></name> <operator pos:line="634" pos:column="21">=<pos:position pos:line="634" pos:column="22"/></operator> <name pos:line="634" pos:column="23">tmp<pos:position pos:line="634" pos:column="26"/></name></expr>;<pos:position pos:line="634" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="635" pos:column="14"/></block></then></if>
            <break pos:line="636" pos:column="13">break;<pos:position pos:line="636" pos:column="19"/></break>

        <case pos:line="638" pos:column="9">case <expr><name pos:line="638" pos:column="14">LFT_REQUEST_METHOD<pos:position pos:line="638" pos:column="32"/></name></expr>:<pos:position pos:line="638" pos:column="33"/></case>
            <expr_stmt><expr><name pos:line="639" pos:column="13">out<pos:position pos:line="639" pos:column="16"/></name> <operator pos:line="639" pos:column="17">=<pos:position pos:line="639" pos:column="18"/></operator> <name><name pos:line="639" pos:column="19">al<pos:position pos:line="639" pos:column="21"/></name><operator pos:line="639" pos:column="21">-&gt;<pos:position pos:line="639" pos:column="26"/></operator><name pos:line="639" pos:column="23">_private<pos:position pos:line="639" pos:column="31"/></name><operator pos:line="639" pos:column="31">.<pos:position pos:line="639" pos:column="32"/></operator><name pos:line="639" pos:column="32">method_str<pos:position pos:line="639" pos:column="42"/></name></name></expr>;<pos:position pos:line="639" pos:column="43"/></expr_stmt>
            <break pos:line="640" pos:column="13">break;<pos:position pos:line="640" pos:column="19"/></break>

        <case pos:line="642" pos:column="9">case <expr><name pos:line="642" pos:column="14">LFT_REQUEST_URI<pos:position pos:line="642" pos:column="29"/></name></expr>:<pos:position pos:line="642" pos:column="30"/></case>
            <expr_stmt><expr><name pos:line="643" pos:column="13">out<pos:position pos:line="643" pos:column="16"/></name> <operator pos:line="643" pos:column="17">=<pos:position pos:line="643" pos:column="18"/></operator> <name><name pos:line="643" pos:column="19">al<pos:position pos:line="643" pos:column="21"/></name><operator pos:line="643" pos:column="21">-&gt;<pos:position pos:line="643" pos:column="26"/></operator><name pos:line="643" pos:column="23">url<pos:position pos:line="643" pos:column="26"/></name></name></expr>;<pos:position pos:line="643" pos:column="27"/></expr_stmt>
            <break pos:line="644" pos:column="13">break;<pos:position pos:line="644" pos:column="19"/></break>

        <case pos:line="646" pos:column="9">case <expr><name pos:line="646" pos:column="14">LFT_REQUEST_VERSION_OLD_2X<pos:position pos:line="646" pos:column="40"/></name></expr>:<pos:position pos:line="646" pos:column="41"/></case>
        <case pos:line="647" pos:column="9">case <expr><name pos:line="647" pos:column="14">LFT_REQUEST_VERSION<pos:position pos:line="647" pos:column="33"/></name></expr>:<pos:position pos:line="647" pos:column="34"/></case>
            <expr_stmt><expr><call><name pos:line="648" pos:column="13">snprintf<pos:position pos:line="648" pos:column="21"/></name><argument_list pos:line="648" pos:column="21">(<argument><expr><name pos:line="648" pos:column="22">tmp<pos:position pos:line="648" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="648" pos:column="27">sizeof<argument_list pos:line="648" pos:column="33">(<argument><expr><name pos:line="648" pos:column="34">tmp<pos:position pos:line="648" pos:column="37"/></name></expr></argument>)<pos:position pos:line="648" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="648" pos:column="40">"%d.%d"<pos:position pos:line="648" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="648" pos:column="49">(<pos:position pos:line="648" pos:column="50"/></operator><name pos:line="648" pos:column="50">int<pos:position pos:line="648" pos:column="53"/></name><operator pos:line="648" pos:column="53">)<pos:position pos:line="648" pos:column="54"/></operator> <name><name pos:line="648" pos:column="55">al<pos:position pos:line="648" pos:column="57"/></name><operator pos:line="648" pos:column="57">-&gt;<pos:position pos:line="648" pos:column="62"/></operator><name pos:line="648" pos:column="59">http<pos:position pos:line="648" pos:column="63"/></name><operator pos:line="648" pos:column="63">.<pos:position pos:line="648" pos:column="64"/></operator><name pos:line="648" pos:column="64">version<pos:position pos:line="648" pos:column="71"/></name><operator pos:line="648" pos:column="71">.<pos:position pos:line="648" pos:column="72"/></operator><name pos:line="648" pos:column="72">major<pos:position pos:line="648" pos:column="77"/></name></name></expr></argument>, <argument><expr><operator pos:line="648" pos:column="79">(<pos:position pos:line="648" pos:column="80"/></operator><name pos:line="648" pos:column="80">int<pos:position pos:line="648" pos:column="83"/></name><operator pos:line="648" pos:column="83">)<pos:position pos:line="648" pos:column="84"/></operator> <name><name pos:line="648" pos:column="85">al<pos:position pos:line="648" pos:column="87"/></name><operator pos:line="648" pos:column="87">-&gt;<pos:position pos:line="648" pos:column="92"/></operator><name pos:line="648" pos:column="89">http<pos:position pos:line="648" pos:column="93"/></name><operator pos:line="648" pos:column="93">.<pos:position pos:line="648" pos:column="94"/></operator><name pos:line="648" pos:column="94">version<pos:position pos:line="648" pos:column="101"/></name><operator pos:line="648" pos:column="101">.<pos:position pos:line="648" pos:column="102"/></operator><name pos:line="648" pos:column="102">minor<pos:position pos:line="648" pos:column="107"/></name></name></expr></argument>)<pos:position pos:line="648" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="648" pos:column="109"/></expr_stmt>
            <expr_stmt><expr><name pos:line="649" pos:column="13">out<pos:position pos:line="649" pos:column="16"/></name> <operator pos:line="649" pos:column="17">=<pos:position pos:line="649" pos:column="18"/></operator> <name pos:line="649" pos:column="19">tmp<pos:position pos:line="649" pos:column="22"/></name></expr>;<pos:position pos:line="649" pos:column="23"/></expr_stmt>
            <break pos:line="650" pos:column="13">break;<pos:position pos:line="650" pos:column="19"/></break>

        <case pos:line="652" pos:column="9">case <expr><name pos:line="652" pos:column="14">LFT_SERVER_REQ_METHOD<pos:position pos:line="652" pos:column="35"/></name></expr>:<pos:position pos:line="652" pos:column="36"/></case>
            <if pos:line="653" pos:column="13">if <condition pos:line="653" pos:column="16">(<expr><name><name pos:line="653" pos:column="17">al<pos:position pos:line="653" pos:column="19"/></name><operator pos:line="653" pos:column="19">-&gt;<pos:position pos:line="653" pos:column="24"/></operator><name pos:line="653" pos:column="21">adapted_request<pos:position pos:line="653" pos:column="36"/></name></name></expr>)<pos:position pos:line="653" pos:column="37"/></condition><then pos:line="653" pos:column="37"> <block pos:line="653" pos:column="38">{
                <expr_stmt><expr><name pos:line="654" pos:column="17">out<pos:position pos:line="654" pos:column="20"/></name> <operator pos:line="654" pos:column="21">=<pos:position pos:line="654" pos:column="22"/></operator> <call><name><name pos:line="654" pos:column="23">al<pos:position pos:line="654" pos:column="25"/></name><operator pos:line="654" pos:column="25">-&gt;<pos:position pos:line="654" pos:column="30"/></operator><name pos:line="654" pos:column="27">adapted_request<pos:position pos:line="654" pos:column="42"/></name><operator pos:line="654" pos:column="42">-&gt;<pos:position pos:line="654" pos:column="47"/></operator><name pos:line="654" pos:column="44">method<pos:position pos:line="654" pos:column="50"/></name><operator pos:line="654" pos:column="50">.<pos:position pos:line="654" pos:column="51"/></operator><name pos:line="654" pos:column="51">image<pos:position pos:line="654" pos:column="56"/></name></name><argument_list pos:line="654" pos:column="56">()<pos:position pos:line="654" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="654" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="655" pos:column="17">quote<pos:position pos:line="655" pos:column="22"/></name> <operator pos:line="655" pos:column="23">=<pos:position pos:line="655" pos:column="24"/></operator> <literal type="number" pos:line="655" pos:column="25">1<pos:position pos:line="655" pos:column="26"/></literal></expr>;<pos:position pos:line="655" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="656" pos:column="14"/></block></then></if>
            <break pos:line="657" pos:column="13">break;<pos:position pos:line="657" pos:column="19"/></break>

        <case pos:line="659" pos:column="9">case <expr><name pos:line="659" pos:column="14">LFT_SERVER_REQ_URI<pos:position pos:line="659" pos:column="32"/></name></expr>:<pos:position pos:line="659" pos:column="33"/></case>
            <comment type="line" pos:line="660" pos:column="13">// adapted request URI sent to server/peer</comment>
            <if pos:line="661" pos:column="13">if <condition pos:line="661" pos:column="16">(<expr><name><name pos:line="661" pos:column="17">al<pos:position pos:line="661" pos:column="19"/></name><operator pos:line="661" pos:column="19">-&gt;<pos:position pos:line="661" pos:column="24"/></operator><name pos:line="661" pos:column="21">adapted_request<pos:position pos:line="661" pos:column="36"/></name></name></expr>)<pos:position pos:line="661" pos:column="37"/></condition><then pos:line="661" pos:column="37"> <block pos:line="661" pos:column="38">{
                <expr_stmt><expr><name pos:line="662" pos:column="17">out<pos:position pos:line="662" pos:column="20"/></name> <operator pos:line="662" pos:column="21">=<pos:position pos:line="662" pos:column="22"/></operator> <call><name pos:line="662" pos:column="23">urlCanonical<pos:position pos:line="662" pos:column="35"/></name><argument_list pos:line="662" pos:column="35">(<argument><expr><name><name pos:line="662" pos:column="36">al<pos:position pos:line="662" pos:column="38"/></name><operator pos:line="662" pos:column="38">-&gt;<pos:position pos:line="662" pos:column="43"/></operator><name pos:line="662" pos:column="40">adapted_request<pos:position pos:line="662" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="662" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="662" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><name pos:line="663" pos:column="17">quote<pos:position pos:line="663" pos:column="22"/></name> <operator pos:line="663" pos:column="23">=<pos:position pos:line="663" pos:column="24"/></operator> <literal type="number" pos:line="663" pos:column="25">1<pos:position pos:line="663" pos:column="26"/></literal></expr>;<pos:position pos:line="663" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="664" pos:column="14"/></block></then></if>
            <break pos:line="665" pos:column="13">break;<pos:position pos:line="665" pos:column="19"/></break>

        <case pos:line="667" pos:column="9">case <expr><name pos:line="667" pos:column="14">LFT_SERVER_REQ_URLPATH<pos:position pos:line="667" pos:column="36"/></name></expr>:<pos:position pos:line="667" pos:column="37"/></case>
            <if pos:line="668" pos:column="13">if <condition pos:line="668" pos:column="16">(<expr><name><name pos:line="668" pos:column="17">al<pos:position pos:line="668" pos:column="19"/></name><operator pos:line="668" pos:column="19">-&gt;<pos:position pos:line="668" pos:column="24"/></operator><name pos:line="668" pos:column="21">adapted_request<pos:position pos:line="668" pos:column="36"/></name></name></expr>)<pos:position pos:line="668" pos:column="37"/></condition><then pos:line="668" pos:column="37"> <block pos:line="668" pos:column="38">{
                <expr_stmt><expr><name pos:line="669" pos:column="17">out<pos:position pos:line="669" pos:column="20"/></name> <operator pos:line="669" pos:column="21">=<pos:position pos:line="669" pos:column="22"/></operator> <call><name><name pos:line="669" pos:column="23">al<pos:position pos:line="669" pos:column="25"/></name><operator pos:line="669" pos:column="25">-&gt;<pos:position pos:line="669" pos:column="30"/></operator><name pos:line="669" pos:column="27">adapted_request<pos:position pos:line="669" pos:column="42"/></name><operator pos:line="669" pos:column="42">-&gt;<pos:position pos:line="669" pos:column="47"/></operator><name pos:line="669" pos:column="44">urlpath<pos:position pos:line="669" pos:column="51"/></name><operator pos:line="669" pos:column="51">.<pos:position pos:line="669" pos:column="52"/></operator><name pos:line="669" pos:column="52">termedBuf<pos:position pos:line="669" pos:column="61"/></name></name><argument_list pos:line="669" pos:column="61">()<pos:position pos:line="669" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="669" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name pos:line="670" pos:column="17">quote<pos:position pos:line="670" pos:column="22"/></name> <operator pos:line="670" pos:column="23">=<pos:position pos:line="670" pos:column="24"/></operator> <literal type="number" pos:line="670" pos:column="25">1<pos:position pos:line="670" pos:column="26"/></literal></expr>;<pos:position pos:line="670" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="671" pos:column="14"/></block></then></if>
            <break pos:line="672" pos:column="13">break;<pos:position pos:line="672" pos:column="19"/></break>

        <case pos:line="674" pos:column="9">case <expr><name pos:line="674" pos:column="14">LFT_SERVER_REQ_VERSION<pos:position pos:line="674" pos:column="36"/></name></expr>:<pos:position pos:line="674" pos:column="37"/></case>
            <if pos:line="675" pos:column="13">if <condition pos:line="675" pos:column="16">(<expr><name><name pos:line="675" pos:column="17">al<pos:position pos:line="675" pos:column="19"/></name><operator pos:line="675" pos:column="19">-&gt;<pos:position pos:line="675" pos:column="24"/></operator><name pos:line="675" pos:column="21">adapted_request<pos:position pos:line="675" pos:column="36"/></name></name></expr>)<pos:position pos:line="675" pos:column="37"/></condition><then pos:line="675" pos:column="37"> <block pos:line="675" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="676" pos:column="17">snprintf<pos:position pos:line="676" pos:column="25"/></name><argument_list pos:line="676" pos:column="25">(<argument><expr><name pos:line="676" pos:column="26">tmp<pos:position pos:line="676" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="676" pos:column="31">sizeof<argument_list pos:line="676" pos:column="37">(<argument><expr><name pos:line="676" pos:column="38">tmp<pos:position pos:line="676" pos:column="41"/></name></expr></argument>)<pos:position pos:line="676" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="676" pos:column="44">"%d.%d"<pos:position pos:line="676" pos:column="51"/></literal></expr></argument>,
                         <argument><expr><operator pos:line="677" pos:column="26">(<pos:position pos:line="677" pos:column="27"/></operator><name pos:line="677" pos:column="27">int<pos:position pos:line="677" pos:column="30"/></name><operator pos:line="677" pos:column="30">)<pos:position pos:line="677" pos:column="31"/></operator> <name><name pos:line="677" pos:column="32">al<pos:position pos:line="677" pos:column="34"/></name><operator pos:line="677" pos:column="34">-&gt;<pos:position pos:line="677" pos:column="39"/></operator><name pos:line="677" pos:column="36">adapted_request<pos:position pos:line="677" pos:column="51"/></name><operator pos:line="677" pos:column="51">-&gt;<pos:position pos:line="677" pos:column="56"/></operator><name pos:line="677" pos:column="53">http_ver<pos:position pos:line="677" pos:column="61"/></name><operator pos:line="677" pos:column="61">.<pos:position pos:line="677" pos:column="62"/></operator><name pos:line="677" pos:column="62">major<pos:position pos:line="677" pos:column="67"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="678" pos:column="26">(<pos:position pos:line="678" pos:column="27"/></operator><name pos:line="678" pos:column="27">int<pos:position pos:line="678" pos:column="30"/></name><operator pos:line="678" pos:column="30">)<pos:position pos:line="678" pos:column="31"/></operator> <name><name pos:line="678" pos:column="32">al<pos:position pos:line="678" pos:column="34"/></name><operator pos:line="678" pos:column="34">-&gt;<pos:position pos:line="678" pos:column="39"/></operator><name pos:line="678" pos:column="36">adapted_request<pos:position pos:line="678" pos:column="51"/></name><operator pos:line="678" pos:column="51">-&gt;<pos:position pos:line="678" pos:column="56"/></operator><name pos:line="678" pos:column="53">http_ver<pos:position pos:line="678" pos:column="61"/></name><operator pos:line="678" pos:column="61">.<pos:position pos:line="678" pos:column="62"/></operator><name pos:line="678" pos:column="62">minor<pos:position pos:line="678" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="678" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="678" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name pos:line="679" pos:column="17">out<pos:position pos:line="679" pos:column="20"/></name> <operator pos:line="679" pos:column="21">=<pos:position pos:line="679" pos:column="22"/></operator> <name pos:line="679" pos:column="23">tmp<pos:position pos:line="679" pos:column="26"/></name></expr>;<pos:position pos:line="679" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="680" pos:column="14"/></block></then></if>
            <break pos:line="681" pos:column="13">break;<pos:position pos:line="681" pos:column="19"/></break>

        <case pos:line="683" pos:column="9">case <expr><name pos:line="683" pos:column="14">LFT_REQUEST_SIZE_TOTAL<pos:position pos:line="683" pos:column="36"/></name></expr>:<pos:position pos:line="683" pos:column="37"/></case>
            <expr_stmt><expr><name pos:line="684" pos:column="13">outoff<pos:position pos:line="684" pos:column="19"/></name> <operator pos:line="684" pos:column="20">=<pos:position pos:line="684" pos:column="21"/></operator> <name><name pos:line="684" pos:column="22">al<pos:position pos:line="684" pos:column="24"/></name><operator pos:line="684" pos:column="24">-&gt;<pos:position pos:line="684" pos:column="29"/></operator><name pos:line="684" pos:column="26">cache<pos:position pos:line="684" pos:column="31"/></name><operator pos:line="684" pos:column="31">.<pos:position pos:line="684" pos:column="32"/></operator><name pos:line="684" pos:column="32">requestSize<pos:position pos:line="684" pos:column="43"/></name></name></expr>;<pos:position pos:line="684" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="685" pos:column="13">dooff<pos:position pos:line="685" pos:column="18"/></name> <operator pos:line="685" pos:column="19">=<pos:position pos:line="685" pos:column="20"/></operator> <literal type="number" pos:line="685" pos:column="21">1<pos:position pos:line="685" pos:column="22"/></literal></expr>;<pos:position pos:line="685" pos:column="23"/></expr_stmt>
            <break pos:line="686" pos:column="13">break;<pos:position pos:line="686" pos:column="19"/></break>

            <comment type="block" pos:line="688" pos:column="13">/*case LFT_REQUEST_SIZE_LINE: */</comment>
        <case pos:line="689" pos:column="9">case <expr><name pos:line="689" pos:column="14">LFT_REQUEST_SIZE_HEADERS<pos:position pos:line="689" pos:column="38"/></name></expr>:<pos:position pos:line="689" pos:column="39"/></case>
            <expr_stmt><expr><name pos:line="690" pos:column="13">outoff<pos:position pos:line="690" pos:column="19"/></name> <operator pos:line="690" pos:column="20">=<pos:position pos:line="690" pos:column="21"/></operator> <name><name pos:line="690" pos:column="22">al<pos:position pos:line="690" pos:column="24"/></name><operator pos:line="690" pos:column="24">-&gt;<pos:position pos:line="690" pos:column="29"/></operator><name pos:line="690" pos:column="26">cache<pos:position pos:line="690" pos:column="31"/></name><operator pos:line="690" pos:column="31">.<pos:position pos:line="690" pos:column="32"/></operator><name pos:line="690" pos:column="32">requestHeadersSize<pos:position pos:line="690" pos:column="50"/></name></name></expr>;<pos:position pos:line="690" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="691" pos:column="13">dooff<pos:position pos:line="691" pos:column="18"/></name> <operator pos:line="691" pos:column="19">=<pos:position pos:line="691" pos:column="20"/></operator><literal type="number" pos:line="691" pos:column="20">1<pos:position pos:line="691" pos:column="21"/></literal></expr>;<pos:position pos:line="691" pos:column="22"/></expr_stmt>
            <break pos:line="692" pos:column="13">break;<pos:position pos:line="692" pos:column="19"/></break>
            <comment type="block" pos:line="693" pos:column="13">/*case LFT_REQUEST_SIZE_BODY: */</comment>
            <comment type="block" pos:line="694" pos:column="13">/*case LFT_REQUEST_SIZE_BODY_NO_TE: */</comment>

        <case pos:line="696" pos:column="9">case <expr><name pos:line="696" pos:column="14">LFT_REPLY_SIZE_TOTAL<pos:position pos:line="696" pos:column="34"/></name></expr>:<pos:position pos:line="696" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="697" pos:column="13">outoff<pos:position pos:line="697" pos:column="19"/></name> <operator pos:line="697" pos:column="20">=<pos:position pos:line="697" pos:column="21"/></operator> <name><name pos:line="697" pos:column="22">al<pos:position pos:line="697" pos:column="24"/></name><operator pos:line="697" pos:column="24">-&gt;<pos:position pos:line="697" pos:column="29"/></operator><name pos:line="697" pos:column="26">cache<pos:position pos:line="697" pos:column="31"/></name><operator pos:line="697" pos:column="31">.<pos:position pos:line="697" pos:column="32"/></operator><name pos:line="697" pos:column="32">replySize<pos:position pos:line="697" pos:column="41"/></name></name></expr>;<pos:position pos:line="697" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="698" pos:column="13">dooff<pos:position pos:line="698" pos:column="18"/></name> <operator pos:line="698" pos:column="19">=<pos:position pos:line="698" pos:column="20"/></operator> <literal type="number" pos:line="698" pos:column="21">1<pos:position pos:line="698" pos:column="22"/></literal></expr>;<pos:position pos:line="698" pos:column="23"/></expr_stmt>
            <break pos:line="699" pos:column="13">break;<pos:position pos:line="699" pos:column="19"/></break>

        <case pos:line="701" pos:column="9">case <expr><name pos:line="701" pos:column="14">LFT_REPLY_HIGHOFFSET<pos:position pos:line="701" pos:column="34"/></name></expr>:<pos:position pos:line="701" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="702" pos:column="13">outoff<pos:position pos:line="702" pos:column="19"/></name> <operator pos:line="702" pos:column="20">=<pos:position pos:line="702" pos:column="21"/></operator> <name><name pos:line="702" pos:column="22">al<pos:position pos:line="702" pos:column="24"/></name><operator pos:line="702" pos:column="24">-&gt;<pos:position pos:line="702" pos:column="29"/></operator><name pos:line="702" pos:column="26">cache<pos:position pos:line="702" pos:column="31"/></name><operator pos:line="702" pos:column="31">.<pos:position pos:line="702" pos:column="32"/></operator><name pos:line="702" pos:column="32">highOffset<pos:position pos:line="702" pos:column="42"/></name></name></expr>;<pos:position pos:line="702" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><name pos:line="704" pos:column="13">dooff<pos:position pos:line="704" pos:column="18"/></name> <operator pos:line="704" pos:column="19">=<pos:position pos:line="704" pos:column="20"/></operator> <literal type="number" pos:line="704" pos:column="21">1<pos:position pos:line="704" pos:column="22"/></literal></expr>;<pos:position pos:line="704" pos:column="23"/></expr_stmt>

            <break pos:line="706" pos:column="13">break;<pos:position pos:line="706" pos:column="19"/></break>

        <case pos:line="708" pos:column="9">case <expr><name pos:line="708" pos:column="14">LFT_REPLY_OBJECTSIZE<pos:position pos:line="708" pos:column="34"/></name></expr>:<pos:position pos:line="708" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="709" pos:column="13">outoff<pos:position pos:line="709" pos:column="19"/></name> <operator pos:line="709" pos:column="20">=<pos:position pos:line="709" pos:column="21"/></operator> <name><name pos:line="709" pos:column="22">al<pos:position pos:line="709" pos:column="24"/></name><operator pos:line="709" pos:column="24">-&gt;<pos:position pos:line="709" pos:column="29"/></operator><name pos:line="709" pos:column="26">cache<pos:position pos:line="709" pos:column="31"/></name><operator pos:line="709" pos:column="31">.<pos:position pos:line="709" pos:column="32"/></operator><name pos:line="709" pos:column="32">objectSize<pos:position pos:line="709" pos:column="42"/></name></name></expr>;<pos:position pos:line="709" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><name pos:line="711" pos:column="13">dooff<pos:position pos:line="711" pos:column="18"/></name> <operator pos:line="711" pos:column="19">=<pos:position pos:line="711" pos:column="20"/></operator> <literal type="number" pos:line="711" pos:column="21">1<pos:position pos:line="711" pos:column="22"/></literal></expr>;<pos:position pos:line="711" pos:column="23"/></expr_stmt>

            <break pos:line="713" pos:column="13">break;<pos:position pos:line="713" pos:column="19"/></break>

            <comment type="block" pos:line="715" pos:column="13">/*case LFT_REPLY_SIZE_LINE: */</comment>
        <case pos:line="716" pos:column="9">case <expr><name pos:line="716" pos:column="14">LFT_REPLY_SIZE_HEADERS<pos:position pos:line="716" pos:column="36"/></name></expr>:<pos:position pos:line="716" pos:column="37"/></case>
            <expr_stmt><expr><name pos:line="717" pos:column="13">outint<pos:position pos:line="717" pos:column="19"/></name> <operator pos:line="717" pos:column="20">=<pos:position pos:line="717" pos:column="21"/></operator> <name><name pos:line="717" pos:column="22">al<pos:position pos:line="717" pos:column="24"/></name><operator pos:line="717" pos:column="24">-&gt;<pos:position pos:line="717" pos:column="29"/></operator><name pos:line="717" pos:column="26">cache<pos:position pos:line="717" pos:column="31"/></name><operator pos:line="717" pos:column="31">.<pos:position pos:line="717" pos:column="32"/></operator><name pos:line="717" pos:column="32">replyHeadersSize<pos:position pos:line="717" pos:column="48"/></name></name></expr>;<pos:position pos:line="717" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="718" pos:column="13">doint<pos:position pos:line="718" pos:column="18"/></name> <operator pos:line="718" pos:column="19">=<pos:position pos:line="718" pos:column="20"/></operator> <literal type="number" pos:line="718" pos:column="21">1<pos:position pos:line="718" pos:column="22"/></literal></expr>;<pos:position pos:line="718" pos:column="23"/></expr_stmt>
            <break pos:line="719" pos:column="13">break;<pos:position pos:line="719" pos:column="19"/></break>
            <comment type="block" pos:line="720" pos:column="13">/*case LFT_REPLY_SIZE_BODY: */</comment>
            <comment type="block" pos:line="721" pos:column="13">/*case LFT_REPLY_SIZE_BODY_NO_TE: */</comment>

        <case pos:line="723" pos:column="9">case <expr><name pos:line="723" pos:column="14">LFT_TAG<pos:position pos:line="723" pos:column="21"/></name></expr>:<pos:position pos:line="723" pos:column="22"/></case>
            <if pos:line="724" pos:column="13">if <condition pos:line="724" pos:column="16">(<expr><name><name pos:line="724" pos:column="17">al<pos:position pos:line="724" pos:column="19"/></name><operator pos:line="724" pos:column="19">-&gt;<pos:position pos:line="724" pos:column="24"/></operator><name pos:line="724" pos:column="21">request<pos:position pos:line="724" pos:column="28"/></name></name></expr>)<pos:position pos:line="724" pos:column="29"/></condition><then pos:line="724" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="725" pos:column="17">out<pos:position pos:line="725" pos:column="20"/></name> <operator pos:line="725" pos:column="21">=<pos:position pos:line="725" pos:column="22"/></operator> <call><name><name pos:line="725" pos:column="23">al<pos:position pos:line="725" pos:column="25"/></name><operator pos:line="725" pos:column="25">-&gt;<pos:position pos:line="725" pos:column="30"/></operator><name pos:line="725" pos:column="27">request<pos:position pos:line="725" pos:column="34"/></name><operator pos:line="725" pos:column="34">-&gt;<pos:position pos:line="725" pos:column="39"/></operator><name pos:line="725" pos:column="36">tag<pos:position pos:line="725" pos:column="39"/></name><operator pos:line="725" pos:column="39">.<pos:position pos:line="725" pos:column="40"/></operator><name pos:line="725" pos:column="40">termedBuf<pos:position pos:line="725" pos:column="49"/></name></name><argument_list pos:line="725" pos:column="49">()<pos:position pos:line="725" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="725" pos:column="52"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="727" pos:column="13">quote<pos:position pos:line="727" pos:column="18"/></name> <operator pos:line="727" pos:column="19">=<pos:position pos:line="727" pos:column="20"/></operator> <literal type="number" pos:line="727" pos:column="21">1<pos:position pos:line="727" pos:column="22"/></literal></expr>;<pos:position pos:line="727" pos:column="23"/></expr_stmt>

            <break pos:line="729" pos:column="13">break;<pos:position pos:line="729" pos:column="19"/></break>

        <case pos:line="731" pos:column="9">case <expr><name pos:line="731" pos:column="14">LFT_IO_SIZE_TOTAL<pos:position pos:line="731" pos:column="31"/></name></expr>:<pos:position pos:line="731" pos:column="32"/></case>
            <expr_stmt><expr><name pos:line="732" pos:column="13">outint<pos:position pos:line="732" pos:column="19"/></name> <operator pos:line="732" pos:column="20">=<pos:position pos:line="732" pos:column="21"/></operator> <name><name pos:line="732" pos:column="22">al<pos:position pos:line="732" pos:column="24"/></name><operator pos:line="732" pos:column="24">-&gt;<pos:position pos:line="732" pos:column="29"/></operator><name pos:line="732" pos:column="26">cache<pos:position pos:line="732" pos:column="31"/></name><operator pos:line="732" pos:column="31">.<pos:position pos:line="732" pos:column="32"/></operator><name pos:line="732" pos:column="32">requestSize<pos:position pos:line="732" pos:column="43"/></name></name> <operator pos:line="732" pos:column="44">+<pos:position pos:line="732" pos:column="45"/></operator> <name><name pos:line="732" pos:column="46">al<pos:position pos:line="732" pos:column="48"/></name><operator pos:line="732" pos:column="48">-&gt;<pos:position pos:line="732" pos:column="53"/></operator><name pos:line="732" pos:column="50">cache<pos:position pos:line="732" pos:column="55"/></name><operator pos:line="732" pos:column="55">.<pos:position pos:line="732" pos:column="56"/></operator><name pos:line="732" pos:column="56">replySize<pos:position pos:line="732" pos:column="65"/></name></name></expr>;<pos:position pos:line="732" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name pos:line="733" pos:column="13">doint<pos:position pos:line="733" pos:column="18"/></name> <operator pos:line="733" pos:column="19">=<pos:position pos:line="733" pos:column="20"/></operator> <literal type="number" pos:line="733" pos:column="21">1<pos:position pos:line="733" pos:column="22"/></literal></expr>;<pos:position pos:line="733" pos:column="23"/></expr_stmt>
            <break pos:line="734" pos:column="13">break;<pos:position pos:line="734" pos:column="19"/></break>

        <case pos:line="736" pos:column="9">case <expr><name pos:line="736" pos:column="14">LFT_EXT_LOG<pos:position pos:line="736" pos:column="25"/></name></expr>:<pos:position pos:line="736" pos:column="26"/></case>
            <if pos:line="737" pos:column="13">if <condition pos:line="737" pos:column="16">(<expr><name><name pos:line="737" pos:column="17">al<pos:position pos:line="737" pos:column="19"/></name><operator pos:line="737" pos:column="19">-&gt;<pos:position pos:line="737" pos:column="24"/></operator><name pos:line="737" pos:column="21">request<pos:position pos:line="737" pos:column="28"/></name></name></expr>)<pos:position pos:line="737" pos:column="29"/></condition><then pos:line="737" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="738" pos:column="17">out<pos:position pos:line="738" pos:column="20"/></name> <operator pos:line="738" pos:column="21">=<pos:position pos:line="738" pos:column="22"/></operator> <call><name><name pos:line="738" pos:column="23">al<pos:position pos:line="738" pos:column="25"/></name><operator pos:line="738" pos:column="25">-&gt;<pos:position pos:line="738" pos:column="30"/></operator><name pos:line="738" pos:column="27">request<pos:position pos:line="738" pos:column="34"/></name><operator pos:line="738" pos:column="34">-&gt;<pos:position pos:line="738" pos:column="39"/></operator><name pos:line="738" pos:column="36">extacl_log<pos:position pos:line="738" pos:column="46"/></name><operator pos:line="738" pos:column="46">.<pos:position pos:line="738" pos:column="47"/></operator><name pos:line="738" pos:column="47">termedBuf<pos:position pos:line="738" pos:column="56"/></name></name><argument_list pos:line="738" pos:column="56">()<pos:position pos:line="738" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="738" pos:column="59"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="740" pos:column="13">quote<pos:position pos:line="740" pos:column="18"/></name> <operator pos:line="740" pos:column="19">=<pos:position pos:line="740" pos:column="20"/></operator> <literal type="number" pos:line="740" pos:column="21">1<pos:position pos:line="740" pos:column="22"/></literal></expr>;<pos:position pos:line="740" pos:column="23"/></expr_stmt>

            <break pos:line="742" pos:column="13">break;<pos:position pos:line="742" pos:column="19"/></break>

        <case pos:line="744" pos:column="9">case <expr><name pos:line="744" pos:column="14">LFT_SEQUENCE_NUMBER<pos:position pos:line="744" pos:column="33"/></name></expr>:<pos:position pos:line="744" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="745" pos:column="13">outoff<pos:position pos:line="745" pos:column="19"/></name> <operator pos:line="745" pos:column="20">=<pos:position pos:line="745" pos:column="21"/></operator> <name pos:line="745" pos:column="22">logSequenceNumber<pos:position pos:line="745" pos:column="39"/></name></expr>;<pos:position pos:line="745" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="746" pos:column="13">dooff<pos:position pos:line="746" pos:column="18"/></name> <operator pos:line="746" pos:column="19">=<pos:position pos:line="746" pos:column="20"/></operator> <literal type="number" pos:line="746" pos:column="21">1<pos:position pos:line="746" pos:column="22"/></literal></expr>;<pos:position pos:line="746" pos:column="23"/></expr_stmt>
            <break pos:line="747" pos:column="13">break;<pos:position pos:line="747" pos:column="19"/></break>

<cpp:if pos:line="749" pos:column="1">#<cpp:directive pos:line="749" pos:column="2">if<pos:position pos:line="749" pos:column="4"/></cpp:directive> <expr><name pos:line="749" pos:column="5">USE_SSL<pos:position pos:line="749" pos:column="12"/></name></expr></cpp:if>
        <case pos:line="750" pos:column="9">case <expr><name pos:line="750" pos:column="14">LFT_SSL_BUMP_MODE<pos:position pos:line="750" pos:column="31"/></name></expr>:<pos:position pos:line="750" pos:column="32"/></case> <block pos:line="750" pos:column="33">{
            <decl_stmt><decl><type><specifier pos:line="751" pos:column="13">const<pos:position pos:line="751" pos:column="18"/></specifier> <name><name pos:line="751" pos:column="19">Ssl<pos:position pos:line="751" pos:column="22"/></name><operator pos:line="751" pos:column="22">::<pos:position pos:line="751" pos:column="24"/></operator><name pos:line="751" pos:column="24">BumpMode<pos:position pos:line="751" pos:column="32"/></name></name></type> <name pos:line="751" pos:column="33">mode<pos:position pos:line="751" pos:column="37"/></name> <init pos:line="751" pos:column="38">= <expr><cast type="static" pos:line="751" pos:column="40">static_cast<argument_list type="generic" pos:line="751" pos:column="51">&lt;<argument><expr><name><name pos:line="751" pos:column="52">Ssl<pos:position pos:line="751" pos:column="55"/></name><operator pos:line="751" pos:column="55">::<pos:position pos:line="751" pos:column="57"/></operator><name pos:line="751" pos:column="57">BumpMode<pos:position pos:line="751" pos:column="65"/></name></name></expr></argument>&gt;<pos:position pos:line="751" pos:column="69"/></argument_list><argument_list pos:line="751" pos:column="66">(<argument><expr><name><name pos:line="751" pos:column="67">al<pos:position pos:line="751" pos:column="69"/></name><operator pos:line="751" pos:column="69">-&gt;<pos:position pos:line="751" pos:column="74"/></operator><name pos:line="751" pos:column="71">ssl<pos:position pos:line="751" pos:column="74"/></name><operator pos:line="751" pos:column="74">.<pos:position pos:line="751" pos:column="75"/></operator><name pos:line="751" pos:column="75">bumpMode<pos:position pos:line="751" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="751" pos:column="84"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="751" pos:column="85"/></decl_stmt>
            <comment type="line" pos:line="752" pos:column="13">// for Ssl::bumpEnd, Ssl::bumpMode() returns NULL and we log '-'</comment>
            <expr_stmt><expr><name pos:line="753" pos:column="13">out<pos:position pos:line="753" pos:column="16"/></name> <operator pos:line="753" pos:column="17">=<pos:position pos:line="753" pos:column="18"/></operator> <call><name><name pos:line="753" pos:column="19">Ssl<pos:position pos:line="753" pos:column="22"/></name><operator pos:line="753" pos:column="22">::<pos:position pos:line="753" pos:column="24"/></operator><name pos:line="753" pos:column="24">bumpMode<pos:position pos:line="753" pos:column="32"/></name></name><argument_list pos:line="753" pos:column="32">(<argument><expr><name pos:line="753" pos:column="33">mode<pos:position pos:line="753" pos:column="37"/></name></expr></argument>)<pos:position pos:line="753" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="753" pos:column="39"/></expr_stmt>
            <break pos:line="754" pos:column="13">break;<pos:position pos:line="754" pos:column="19"/></break>
        }<pos:position pos:line="755" pos:column="10"/></block>

        <case pos:line="757" pos:column="9">case <expr><name pos:line="757" pos:column="14">LFT_SSL_USER_CERT_SUBJECT<pos:position pos:line="757" pos:column="39"/></name></expr>:<pos:position pos:line="757" pos:column="40"/></case>
            <if pos:line="758" pos:column="13">if <condition pos:line="758" pos:column="16">(<decl><type><name pos:line="758" pos:column="17">X509<pos:position pos:line="758" pos:column="21"/></name> <modifier pos:line="758" pos:column="22">*<pos:position pos:line="758" pos:column="23"/></modifier></type><name pos:line="758" pos:column="23">cert<pos:position pos:line="758" pos:column="27"/></name> <init pos:line="758" pos:column="28">= <expr><call><name><name pos:line="758" pos:column="30">al<pos:position pos:line="758" pos:column="32"/></name><operator pos:line="758" pos:column="32">-&gt;<pos:position pos:line="758" pos:column="37"/></operator><name pos:line="758" pos:column="34">cache<pos:position pos:line="758" pos:column="39"/></name><operator pos:line="758" pos:column="39">.<pos:position pos:line="758" pos:column="40"/></operator><name pos:line="758" pos:column="40">sslClientCert<pos:position pos:line="758" pos:column="53"/></name><operator pos:line="758" pos:column="53">.<pos:position pos:line="758" pos:column="54"/></operator><name pos:line="758" pos:column="54">get<pos:position pos:line="758" pos:column="57"/></name></name><argument_list pos:line="758" pos:column="57">()<pos:position pos:line="758" pos:column="59"/></argument_list></call></expr></init></decl>)<pos:position pos:line="758" pos:column="60"/></condition><then pos:line="758" pos:column="60"> <block pos:line="758" pos:column="61">{
                <if pos:line="759" pos:column="17">if <condition pos:line="759" pos:column="20">(<decl><type><name pos:line="759" pos:column="21">X509_NAME<pos:position pos:line="759" pos:column="30"/></name> <modifier pos:line="759" pos:column="31">*<pos:position pos:line="759" pos:column="32"/></modifier></type><name pos:line="759" pos:column="32">subject<pos:position pos:line="759" pos:column="39"/></name> <init pos:line="759" pos:column="40">= <expr><call><name pos:line="759" pos:column="42">X509_get_subject_name<pos:position pos:line="759" pos:column="63"/></name><argument_list pos:line="759" pos:column="63">(<argument><expr><name pos:line="759" pos:column="64">cert<pos:position pos:line="759" pos:column="68"/></name></expr></argument>)<pos:position pos:line="759" pos:column="69"/></argument_list></call></expr></init></decl>)<pos:position pos:line="759" pos:column="70"/></condition><then pos:line="759" pos:column="70"> <block pos:line="759" pos:column="71">{
                    <expr_stmt><expr><call><name pos:line="760" pos:column="21">X509_NAME_oneline<pos:position pos:line="760" pos:column="38"/></name><argument_list pos:line="760" pos:column="38">(<argument><expr><name pos:line="760" pos:column="39">subject<pos:position pos:line="760" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="760" pos:column="48">tmp<pos:position pos:line="760" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="760" pos:column="53">sizeof<argument_list pos:line="760" pos:column="59">(<argument><expr><name pos:line="760" pos:column="60">tmp<pos:position pos:line="760" pos:column="63"/></name></expr></argument>)<pos:position pos:line="760" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="760" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="760" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="761" pos:column="21">out<pos:position pos:line="761" pos:column="24"/></name> <operator pos:line="761" pos:column="25">=<pos:position pos:line="761" pos:column="26"/></operator> <name pos:line="761" pos:column="27">tmp<pos:position pos:line="761" pos:column="30"/></name></expr>;<pos:position pos:line="761" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="762" pos:column="18"/></block></then></if>
            }<pos:position pos:line="763" pos:column="14"/></block></then></if>
            <break pos:line="764" pos:column="13">break;<pos:position pos:line="764" pos:column="19"/></break>

        <case pos:line="766" pos:column="9">case <expr><name pos:line="766" pos:column="14">LFT_SSL_USER_CERT_ISSUER<pos:position pos:line="766" pos:column="38"/></name></expr>:<pos:position pos:line="766" pos:column="39"/></case>
            <if pos:line="767" pos:column="13">if <condition pos:line="767" pos:column="16">(<decl><type><name pos:line="767" pos:column="17">X509<pos:position pos:line="767" pos:column="21"/></name> <modifier pos:line="767" pos:column="22">*<pos:position pos:line="767" pos:column="23"/></modifier></type><name pos:line="767" pos:column="23">cert<pos:position pos:line="767" pos:column="27"/></name> <init pos:line="767" pos:column="28">= <expr><call><name><name pos:line="767" pos:column="30">al<pos:position pos:line="767" pos:column="32"/></name><operator pos:line="767" pos:column="32">-&gt;<pos:position pos:line="767" pos:column="37"/></operator><name pos:line="767" pos:column="34">cache<pos:position pos:line="767" pos:column="39"/></name><operator pos:line="767" pos:column="39">.<pos:position pos:line="767" pos:column="40"/></operator><name pos:line="767" pos:column="40">sslClientCert<pos:position pos:line="767" pos:column="53"/></name><operator pos:line="767" pos:column="53">.<pos:position pos:line="767" pos:column="54"/></operator><name pos:line="767" pos:column="54">get<pos:position pos:line="767" pos:column="57"/></name></name><argument_list pos:line="767" pos:column="57">()<pos:position pos:line="767" pos:column="59"/></argument_list></call></expr></init></decl>)<pos:position pos:line="767" pos:column="60"/></condition><then pos:line="767" pos:column="60"> <block pos:line="767" pos:column="61">{
                <if pos:line="768" pos:column="17">if <condition pos:line="768" pos:column="20">(<decl><type><name pos:line="768" pos:column="21">X509_NAME<pos:position pos:line="768" pos:column="30"/></name> <modifier pos:line="768" pos:column="31">*<pos:position pos:line="768" pos:column="32"/></modifier></type><name pos:line="768" pos:column="32">issuer<pos:position pos:line="768" pos:column="38"/></name> <init pos:line="768" pos:column="39">= <expr><call><name pos:line="768" pos:column="41">X509_get_issuer_name<pos:position pos:line="768" pos:column="61"/></name><argument_list pos:line="768" pos:column="61">(<argument><expr><name pos:line="768" pos:column="62">cert<pos:position pos:line="768" pos:column="66"/></name></expr></argument>)<pos:position pos:line="768" pos:column="67"/></argument_list></call></expr></init></decl>)<pos:position pos:line="768" pos:column="68"/></condition><then pos:line="768" pos:column="68"> <block pos:line="768" pos:column="69">{
                    <expr_stmt><expr><call><name pos:line="769" pos:column="21">X509_NAME_oneline<pos:position pos:line="769" pos:column="38"/></name><argument_list pos:line="769" pos:column="38">(<argument><expr><name pos:line="769" pos:column="39">issuer<pos:position pos:line="769" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="769" pos:column="47">tmp<pos:position pos:line="769" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="769" pos:column="52">sizeof<argument_list pos:line="769" pos:column="58">(<argument><expr><name pos:line="769" pos:column="59">tmp<pos:position pos:line="769" pos:column="62"/></name></expr></argument>)<pos:position pos:line="769" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="769" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="769" pos:column="65"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="770" pos:column="21">out<pos:position pos:line="770" pos:column="24"/></name> <operator pos:line="770" pos:column="25">=<pos:position pos:line="770" pos:column="26"/></operator> <name pos:line="770" pos:column="27">tmp<pos:position pos:line="770" pos:column="30"/></name></expr>;<pos:position pos:line="770" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="771" pos:column="18"/></block></then></if>
            }<pos:position pos:line="772" pos:column="14"/></block></then></if>
            <break pos:line="773" pos:column="13">break;<pos:position pos:line="773" pos:column="19"/></break>
<cpp:endif pos:line="774" pos:column="1">#<cpp:directive pos:line="774" pos:column="2">endif<pos:position pos:line="774" pos:column="7"/></cpp:directive></cpp:endif>

        <case pos:line="776" pos:column="9">case <expr><name pos:line="776" pos:column="14">LFT_NOTE<pos:position pos:line="776" pos:column="22"/></name></expr>:<pos:position pos:line="776" pos:column="23"/></case>
            <expr_stmt><expr><name><name pos:line="777" pos:column="13">tmp<pos:position pos:line="777" pos:column="16"/></name><index pos:line="777" pos:column="16">[<expr><literal type="number" pos:line="777" pos:column="17">0<pos:position pos:line="777" pos:column="18"/></literal></expr>]<pos:position pos:line="777" pos:column="19"/></index></name> <operator pos:line="777" pos:column="20">=<pos:position pos:line="777" pos:column="21"/></operator> <name><name pos:line="777" pos:column="22">fmt<pos:position pos:line="777" pos:column="25"/></name><operator pos:line="777" pos:column="25">-&gt;<pos:position pos:line="777" pos:column="30"/></operator><name pos:line="777" pos:column="27">data<pos:position pos:line="777" pos:column="31"/></name><operator pos:line="777" pos:column="31">.<pos:position pos:line="777" pos:column="32"/></operator><name pos:line="777" pos:column="32">header<pos:position pos:line="777" pos:column="38"/></name><operator pos:line="777" pos:column="38">.<pos:position pos:line="777" pos:column="39"/></operator><name pos:line="777" pos:column="39">separator<pos:position pos:line="777" pos:column="48"/></name></name></expr>;<pos:position pos:line="777" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="778" pos:column="13">tmp<pos:position pos:line="778" pos:column="16"/></name><index pos:line="778" pos:column="16">[<expr><literal type="number" pos:line="778" pos:column="17">1<pos:position pos:line="778" pos:column="18"/></literal></expr>]<pos:position pos:line="778" pos:column="19"/></index></name> <operator pos:line="778" pos:column="20">=<pos:position pos:line="778" pos:column="21"/></operator> <literal type="char" pos:line="778" pos:column="22">'\0'<pos:position pos:line="778" pos:column="26"/></literal></expr>;<pos:position pos:line="778" pos:column="27"/></expr_stmt>
            <if pos:line="779" pos:column="13">if <condition pos:line="779" pos:column="16">(<expr><name><name pos:line="779" pos:column="17">fmt<pos:position pos:line="779" pos:column="20"/></name><operator pos:line="779" pos:column="20">-&gt;<pos:position pos:line="779" pos:column="25"/></operator><name pos:line="779" pos:column="22">data<pos:position pos:line="779" pos:column="26"/></name><operator pos:line="779" pos:column="26">.<pos:position pos:line="779" pos:column="27"/></operator><name pos:line="779" pos:column="27">header<pos:position pos:line="779" pos:column="33"/></name><operator pos:line="779" pos:column="33">.<pos:position pos:line="779" pos:column="34"/></operator><name pos:line="779" pos:column="34">header<pos:position pos:line="779" pos:column="40"/></name></name> <operator pos:line="779" pos:column="41">&amp;&amp;<pos:position pos:line="779" pos:column="51"/></operator> <operator pos:line="779" pos:column="44">*<pos:position pos:line="779" pos:column="45"/></operator><name><name pos:line="779" pos:column="45">fmt<pos:position pos:line="779" pos:column="48"/></name><operator pos:line="779" pos:column="48">-&gt;<pos:position pos:line="779" pos:column="53"/></operator><name pos:line="779" pos:column="50">data<pos:position pos:line="779" pos:column="54"/></name><operator pos:line="779" pos:column="54">.<pos:position pos:line="779" pos:column="55"/></operator><name pos:line="779" pos:column="55">header<pos:position pos:line="779" pos:column="61"/></name><operator pos:line="779" pos:column="61">.<pos:position pos:line="779" pos:column="62"/></operator><name pos:line="779" pos:column="62">header<pos:position pos:line="779" pos:column="68"/></name></name></expr>)<pos:position pos:line="779" pos:column="69"/></condition><then pos:line="779" pos:column="69"> <block pos:line="779" pos:column="70">{
                <decl_stmt><decl><type><specifier pos:line="780" pos:column="17">const<pos:position pos:line="780" pos:column="22"/></specifier> <name pos:line="780" pos:column="23">char<pos:position pos:line="780" pos:column="27"/></name> <modifier pos:line="780" pos:column="28">*<pos:position pos:line="780" pos:column="29"/></modifier></type><name pos:line="780" pos:column="29">separator<pos:position pos:line="780" pos:column="38"/></name> <init pos:line="780" pos:column="39">= <expr><name pos:line="780" pos:column="41">tmp<pos:position pos:line="780" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="780" pos:column="45"/></decl_stmt>
<cpp:if pos:line="781" pos:column="1">#<cpp:directive pos:line="781" pos:column="2">if<pos:position pos:line="781" pos:column="4"/></cpp:directive> <expr><name pos:line="781" pos:column="5">USE_ADAPTATION<pos:position pos:line="781" pos:column="19"/></name></expr></cpp:if>
                <decl_stmt><decl><type><name><name pos:line="782" pos:column="17">Adaptation<pos:position pos:line="782" pos:column="27"/></name><operator pos:line="782" pos:column="27">::<pos:position pos:line="782" pos:column="29"/></operator><name pos:line="782" pos:column="29">History<pos:position pos:line="782" pos:column="36"/></name><operator pos:line="782" pos:column="36">::<pos:position pos:line="782" pos:column="38"/></operator><name pos:line="782" pos:column="38">Pointer<pos:position pos:line="782" pos:column="45"/></name></name></type> <name pos:line="782" pos:column="46">ah<pos:position pos:line="782" pos:column="48"/></name> <init pos:line="782" pos:column="49">= <expr><ternary><condition><expr><name><name pos:line="782" pos:column="51">al<pos:position pos:line="782" pos:column="53"/></name><operator pos:line="782" pos:column="53">-&gt;<pos:position pos:line="782" pos:column="58"/></operator><name pos:line="782" pos:column="55">request<pos:position pos:line="782" pos:column="62"/></name></name></expr> ?<pos:position pos:line="782" pos:column="64"/></condition><then pos:line="782" pos:column="64"> <expr><call><name><name pos:line="782" pos:column="65">al<pos:position pos:line="782" pos:column="67"/></name><operator pos:line="782" pos:column="67">-&gt;<pos:position pos:line="782" pos:column="72"/></operator><name pos:line="782" pos:column="69">request<pos:position pos:line="782" pos:column="76"/></name><operator pos:line="782" pos:column="76">-&gt;<pos:position pos:line="782" pos:column="81"/></operator><name pos:line="782" pos:column="78">adaptHistory<pos:position pos:line="782" pos:column="90"/></name></name><argument_list pos:line="782" pos:column="90">()<pos:position pos:line="782" pos:column="92"/></argument_list></call></expr> <pos:position pos:line="782" pos:column="93"/></then><else pos:line="782" pos:column="93">: <expr><call><name><name pos:line="782" pos:column="95">Adaptation<pos:position pos:line="782" pos:column="105"/></name><operator pos:line="782" pos:column="105">::<pos:position pos:line="782" pos:column="107"/></operator><name pos:line="782" pos:column="107">History<pos:position pos:line="782" pos:column="114"/></name><operator pos:line="782" pos:column="114">::<pos:position pos:line="782" pos:column="116"/></operator><name pos:line="782" pos:column="116">Pointer<pos:position pos:line="782" pos:column="123"/></name></name><argument_list pos:line="782" pos:column="123">()<pos:position pos:line="782" pos:column="125"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="782" pos:column="126"/></decl_stmt>
                <if pos:line="783" pos:column="17">if <condition pos:line="783" pos:column="20">(<expr><name pos:line="783" pos:column="21">ah<pos:position pos:line="783" pos:column="23"/></name> <operator pos:line="783" pos:column="24">!=<pos:position pos:line="783" pos:column="26"/></operator> <name pos:line="783" pos:column="27">NULL<pos:position pos:line="783" pos:column="31"/></name> <operator pos:line="783" pos:column="32">&amp;&amp;<pos:position pos:line="783" pos:column="42"/></operator> <name><name pos:line="783" pos:column="35">ah<pos:position pos:line="783" pos:column="37"/></name><operator pos:line="783" pos:column="37">-&gt;<pos:position pos:line="783" pos:column="42"/></operator><name pos:line="783" pos:column="39">metaHeaders<pos:position pos:line="783" pos:column="50"/></name></name> <operator pos:line="783" pos:column="51">!=<pos:position pos:line="783" pos:column="53"/></operator> <name pos:line="783" pos:column="54">NULL<pos:position pos:line="783" pos:column="58"/></name></expr>)<pos:position pos:line="783" pos:column="59"/></condition><then pos:line="783" pos:column="59"> <block pos:line="783" pos:column="60">{
                    <if pos:line="784" pos:column="21">if <condition pos:line="784" pos:column="24">(<decl><type><specifier pos:line="784" pos:column="25">const<pos:position pos:line="784" pos:column="30"/></specifier> <name pos:line="784" pos:column="31">char<pos:position pos:line="784" pos:column="35"/></name> <modifier pos:line="784" pos:column="36">*<pos:position pos:line="784" pos:column="37"/></modifier></type><name pos:line="784" pos:column="37">meta<pos:position pos:line="784" pos:column="41"/></name> <init pos:line="784" pos:column="42">= <expr><call><name><name pos:line="784" pos:column="44">ah<pos:position pos:line="784" pos:column="46"/></name><operator pos:line="784" pos:column="46">-&gt;<pos:position pos:line="784" pos:column="51"/></operator><name pos:line="784" pos:column="48">metaHeaders<pos:position pos:line="784" pos:column="59"/></name><operator pos:line="784" pos:column="59">-&gt;<pos:position pos:line="784" pos:column="64"/></operator><name pos:line="784" pos:column="61">find<pos:position pos:line="784" pos:column="65"/></name></name><argument_list pos:line="784" pos:column="65">(<argument><expr><name><name pos:line="784" pos:column="66">fmt<pos:position pos:line="784" pos:column="69"/></name><operator pos:line="784" pos:column="69">-&gt;<pos:position pos:line="784" pos:column="74"/></operator><name pos:line="784" pos:column="71">data<pos:position pos:line="784" pos:column="75"/></name><operator pos:line="784" pos:column="75">.<pos:position pos:line="784" pos:column="76"/></operator><name pos:line="784" pos:column="76">header<pos:position pos:line="784" pos:column="82"/></name><operator pos:line="784" pos:column="82">.<pos:position pos:line="784" pos:column="83"/></operator><name pos:line="784" pos:column="83">header<pos:position pos:line="784" pos:column="89"/></name></name></expr></argument>, <argument><expr><name pos:line="784" pos:column="91">separator<pos:position pos:line="784" pos:column="100"/></name></expr></argument>)<pos:position pos:line="784" pos:column="101"/></argument_list></call></expr></init></decl>)<pos:position pos:line="784" pos:column="102"/></condition><then pos:line="784" pos:column="102">
                        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="785" pos:column="25">sb<pos:position pos:line="785" pos:column="27"/></name><operator pos:line="785" pos:column="27">.<pos:position pos:line="785" pos:column="28"/></operator><name pos:line="785" pos:column="28">append<pos:position pos:line="785" pos:column="34"/></name></name><argument_list pos:line="785" pos:column="34">(<argument><expr><name pos:line="785" pos:column="35">meta<pos:position pos:line="785" pos:column="39"/></name></expr></argument>)<pos:position pos:line="785" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="785" pos:column="41"/></expr_stmt></block></then></if>
                }<pos:position pos:line="786" pos:column="18"/></block></then></if>
<cpp:endif pos:line="787" pos:column="1">#<cpp:directive pos:line="787" pos:column="2">endif<pos:position pos:line="787" pos:column="7"/></cpp:directive></cpp:endif>
                <if pos:line="788" pos:column="17">if <condition pos:line="788" pos:column="20">(<expr><name><name pos:line="788" pos:column="21">al<pos:position pos:line="788" pos:column="23"/></name><operator pos:line="788" pos:column="23">-&gt;<pos:position pos:line="788" pos:column="28"/></operator><name pos:line="788" pos:column="25">notes<pos:position pos:line="788" pos:column="30"/></name></name> <operator pos:line="788" pos:column="31">!=<pos:position pos:line="788" pos:column="33"/></operator> <name pos:line="788" pos:column="34">NULL<pos:position pos:line="788" pos:column="38"/></name></expr>)<pos:position pos:line="788" pos:column="39"/></condition><then pos:line="788" pos:column="39"> <block pos:line="788" pos:column="40">{
                    <if pos:line="789" pos:column="21">if <condition pos:line="789" pos:column="24">(<decl><type><specifier pos:line="789" pos:column="25">const<pos:position pos:line="789" pos:column="30"/></specifier> <name pos:line="789" pos:column="31">char<pos:position pos:line="789" pos:column="35"/></name> <modifier pos:line="789" pos:column="36">*<pos:position pos:line="789" pos:column="37"/></modifier></type><name pos:line="789" pos:column="37">note<pos:position pos:line="789" pos:column="41"/></name> <init pos:line="789" pos:column="42">= <expr><call><name><name pos:line="789" pos:column="44">al<pos:position pos:line="789" pos:column="46"/></name><operator pos:line="789" pos:column="46">-&gt;<pos:position pos:line="789" pos:column="51"/></operator><name pos:line="789" pos:column="48">notes<pos:position pos:line="789" pos:column="53"/></name><operator pos:line="789" pos:column="53">-&gt;<pos:position pos:line="789" pos:column="58"/></operator><name pos:line="789" pos:column="55">find<pos:position pos:line="789" pos:column="59"/></name></name><argument_list pos:line="789" pos:column="59">(<argument><expr><name><name pos:line="789" pos:column="60">fmt<pos:position pos:line="789" pos:column="63"/></name><operator pos:line="789" pos:column="63">-&gt;<pos:position pos:line="789" pos:column="68"/></operator><name pos:line="789" pos:column="65">data<pos:position pos:line="789" pos:column="69"/></name><operator pos:line="789" pos:column="69">.<pos:position pos:line="789" pos:column="70"/></operator><name pos:line="789" pos:column="70">header<pos:position pos:line="789" pos:column="76"/></name><operator pos:line="789" pos:column="76">.<pos:position pos:line="789" pos:column="77"/></operator><name pos:line="789" pos:column="77">header<pos:position pos:line="789" pos:column="83"/></name></name></expr></argument>, <argument><expr><name pos:line="789" pos:column="85">separator<pos:position pos:line="789" pos:column="94"/></name></expr></argument>)<pos:position pos:line="789" pos:column="95"/></argument_list></call></expr></init></decl>)<pos:position pos:line="789" pos:column="96"/></condition><then pos:line="789" pos:column="96"> <block pos:line="789" pos:column="97">{
                        <if pos:line="790" pos:column="25">if <condition pos:line="790" pos:column="28">(<expr><call><name><name pos:line="790" pos:column="29">sb<pos:position pos:line="790" pos:column="31"/></name><operator pos:line="790" pos:column="31">.<pos:position pos:line="790" pos:column="32"/></operator><name pos:line="790" pos:column="32">size<pos:position pos:line="790" pos:column="36"/></name></name><argument_list pos:line="790" pos:column="36">()<pos:position pos:line="790" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="790" pos:column="39"/></condition><then pos:line="790" pos:column="39">
                            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="791" pos:column="29">sb<pos:position pos:line="791" pos:column="31"/></name><operator pos:line="791" pos:column="31">.<pos:position pos:line="791" pos:column="32"/></operator><name pos:line="791" pos:column="32">append<pos:position pos:line="791" pos:column="38"/></name></name><argument_list pos:line="791" pos:column="38">(<argument><expr><name pos:line="791" pos:column="39">separator<pos:position pos:line="791" pos:column="48"/></name></expr></argument>)<pos:position pos:line="791" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="791" pos:column="50"/></expr_stmt></block></then></if>
                        <expr_stmt><expr><call><name><name pos:line="792" pos:column="25">sb<pos:position pos:line="792" pos:column="27"/></name><operator pos:line="792" pos:column="27">.<pos:position pos:line="792" pos:column="28"/></operator><name pos:line="792" pos:column="28">append<pos:position pos:line="792" pos:column="34"/></name></name><argument_list pos:line="792" pos:column="34">(<argument><expr><name pos:line="792" pos:column="35">note<pos:position pos:line="792" pos:column="39"/></name></expr></argument>)<pos:position pos:line="792" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="792" pos:column="41"/></expr_stmt>
                    }<pos:position pos:line="793" pos:column="22"/></block></then></if>
                }<pos:position pos:line="794" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="795" pos:column="17">out<pos:position pos:line="795" pos:column="20"/></name> <operator pos:line="795" pos:column="21">=<pos:position pos:line="795" pos:column="22"/></operator> <call><name><name pos:line="795" pos:column="23">sb<pos:position pos:line="795" pos:column="25"/></name><operator pos:line="795" pos:column="25">.<pos:position pos:line="795" pos:column="26"/></operator><name pos:line="795" pos:column="26">termedBuf<pos:position pos:line="795" pos:column="35"/></name></name><argument_list pos:line="795" pos:column="35">()<pos:position pos:line="795" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="795" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="796" pos:column="17">quote<pos:position pos:line="796" pos:column="22"/></name> <operator pos:line="796" pos:column="23">=<pos:position pos:line="796" pos:column="24"/></operator> <literal type="number" pos:line="796" pos:column="25">1<pos:position pos:line="796" pos:column="26"/></literal></expr>;<pos:position pos:line="796" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="797" pos:column="14"/></block></then> <else pos:line="797" pos:column="15">else <block pos:line="797" pos:column="20">{
                <comment type="line" pos:line="798" pos:column="17">// if no argument given use default "\r\n" as notes separator</comment>
                <decl_stmt><decl><type><specifier pos:line="799" pos:column="17">const<pos:position pos:line="799" pos:column="22"/></specifier> <name pos:line="799" pos:column="23">char<pos:position pos:line="799" pos:column="27"/></name> <modifier pos:line="799" pos:column="28">*<pos:position pos:line="799" pos:column="29"/></modifier></type><name pos:line="799" pos:column="29">separator<pos:position pos:line="799" pos:column="38"/></name> <init pos:line="799" pos:column="39">= <expr><ternary><condition><expr><name><name pos:line="799" pos:column="41">fmt<pos:position pos:line="799" pos:column="44"/></name><operator pos:line="799" pos:column="44">-&gt;<pos:position pos:line="799" pos:column="49"/></operator><name pos:line="799" pos:column="46">data<pos:position pos:line="799" pos:column="50"/></name><operator pos:line="799" pos:column="50">.<pos:position pos:line="799" pos:column="51"/></operator><name pos:line="799" pos:column="51">string<pos:position pos:line="799" pos:column="57"/></name></name></expr> ?<pos:position pos:line="799" pos:column="59"/></condition><then pos:line="799" pos:column="59"> <expr><name pos:line="799" pos:column="60">tmp<pos:position pos:line="799" pos:column="63"/></name></expr> <pos:position pos:line="799" pos:column="64"/></then><else pos:line="799" pos:column="64">: <expr><literal type="string" pos:line="799" pos:column="66">"\r\n"<pos:position pos:line="799" pos:column="72"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="799" pos:column="73"/></decl_stmt>
<cpp:if pos:line="800" pos:column="1">#<cpp:directive pos:line="800" pos:column="2">if<pos:position pos:line="800" pos:column="4"/></cpp:directive> <expr><name pos:line="800" pos:column="5">USE_ADAPTATION<pos:position pos:line="800" pos:column="19"/></name></expr></cpp:if>
                <decl_stmt><decl><type><name><name pos:line="801" pos:column="17">Adaptation<pos:position pos:line="801" pos:column="27"/></name><operator pos:line="801" pos:column="27">::<pos:position pos:line="801" pos:column="29"/></operator><name pos:line="801" pos:column="29">History<pos:position pos:line="801" pos:column="36"/></name><operator pos:line="801" pos:column="36">::<pos:position pos:line="801" pos:column="38"/></operator><name pos:line="801" pos:column="38">Pointer<pos:position pos:line="801" pos:column="45"/></name></name></type> <name pos:line="801" pos:column="46">ah<pos:position pos:line="801" pos:column="48"/></name> <init pos:line="801" pos:column="49">= <expr><ternary><condition><expr><name><name pos:line="801" pos:column="51">al<pos:position pos:line="801" pos:column="53"/></name><operator pos:line="801" pos:column="53">-&gt;<pos:position pos:line="801" pos:column="58"/></operator><name pos:line="801" pos:column="55">request<pos:position pos:line="801" pos:column="62"/></name></name></expr> ?<pos:position pos:line="801" pos:column="64"/></condition><then pos:line="801" pos:column="64"> <expr><call><name><name pos:line="801" pos:column="65">al<pos:position pos:line="801" pos:column="67"/></name><operator pos:line="801" pos:column="67">-&gt;<pos:position pos:line="801" pos:column="72"/></operator><name pos:line="801" pos:column="69">request<pos:position pos:line="801" pos:column="76"/></name><operator pos:line="801" pos:column="76">-&gt;<pos:position pos:line="801" pos:column="81"/></operator><name pos:line="801" pos:column="78">adaptHistory<pos:position pos:line="801" pos:column="90"/></name></name><argument_list pos:line="801" pos:column="90">()<pos:position pos:line="801" pos:column="92"/></argument_list></call></expr> <pos:position pos:line="801" pos:column="93"/></then><else pos:line="801" pos:column="93">: <expr><call><name><name pos:line="801" pos:column="95">Adaptation<pos:position pos:line="801" pos:column="105"/></name><operator pos:line="801" pos:column="105">::<pos:position pos:line="801" pos:column="107"/></operator><name pos:line="801" pos:column="107">History<pos:position pos:line="801" pos:column="114"/></name><operator pos:line="801" pos:column="114">::<pos:position pos:line="801" pos:column="116"/></operator><name pos:line="801" pos:column="116">Pointer<pos:position pos:line="801" pos:column="123"/></name></name><argument_list pos:line="801" pos:column="123">()<pos:position pos:line="801" pos:column="125"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="801" pos:column="126"/></decl_stmt>
                <if pos:line="802" pos:column="17">if <condition pos:line="802" pos:column="20">(<expr><name pos:line="802" pos:column="21">ah<pos:position pos:line="802" pos:column="23"/></name> <operator pos:line="802" pos:column="24">!=<pos:position pos:line="802" pos:column="26"/></operator> <name pos:line="802" pos:column="27">NULL<pos:position pos:line="802" pos:column="31"/></name> <operator pos:line="802" pos:column="32">&amp;&amp;<pos:position pos:line="802" pos:column="42"/></operator> <name><name pos:line="802" pos:column="35">ah<pos:position pos:line="802" pos:column="37"/></name><operator pos:line="802" pos:column="37">-&gt;<pos:position pos:line="802" pos:column="42"/></operator><name pos:line="802" pos:column="39">metaHeaders<pos:position pos:line="802" pos:column="50"/></name></name> <operator pos:line="802" pos:column="51">!=<pos:position pos:line="802" pos:column="53"/></operator> <name pos:line="802" pos:column="54">NULL<pos:position pos:line="802" pos:column="58"/></name> <operator pos:line="802" pos:column="59">&amp;&amp;<pos:position pos:line="802" pos:column="69"/></operator> <operator pos:line="802" pos:column="62">!<pos:position pos:line="802" pos:column="63"/></operator><call><name><name pos:line="802" pos:column="63">ah<pos:position pos:line="802" pos:column="65"/></name><operator pos:line="802" pos:column="65">-&gt;<pos:position pos:line="802" pos:column="70"/></operator><name pos:line="802" pos:column="67">metaHeaders<pos:position pos:line="802" pos:column="78"/></name><operator pos:line="802" pos:column="78">-&gt;<pos:position pos:line="802" pos:column="83"/></operator><name pos:line="802" pos:column="80">empty<pos:position pos:line="802" pos:column="85"/></name></name><argument_list pos:line="802" pos:column="85">()<pos:position pos:line="802" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="802" pos:column="88"/></condition><then pos:line="802" pos:column="88">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="803" pos:column="21">sb<pos:position pos:line="803" pos:column="23"/></name><operator pos:line="803" pos:column="23">.<pos:position pos:line="803" pos:column="24"/></operator><name pos:line="803" pos:column="24">append<pos:position pos:line="803" pos:column="30"/></name></name><argument_list pos:line="803" pos:column="30">(<argument><expr><call><name><name pos:line="803" pos:column="31">ah<pos:position pos:line="803" pos:column="33"/></name><operator pos:line="803" pos:column="33">-&gt;<pos:position pos:line="803" pos:column="38"/></operator><name pos:line="803" pos:column="35">metaHeaders<pos:position pos:line="803" pos:column="46"/></name><operator pos:line="803" pos:column="46">-&gt;<pos:position pos:line="803" pos:column="51"/></operator><name pos:line="803" pos:column="48">toString<pos:position pos:line="803" pos:column="56"/></name></name><argument_list pos:line="803" pos:column="56">(<argument><expr><name pos:line="803" pos:column="57">separator<pos:position pos:line="803" pos:column="66"/></name></expr></argument>)<pos:position pos:line="803" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="803" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="803" pos:column="69"/></expr_stmt></block></then></if>
<cpp:endif pos:line="804" pos:column="1">#<cpp:directive pos:line="804" pos:column="2">endif<pos:position pos:line="804" pos:column="7"/></cpp:directive></cpp:endif>
                <if pos:line="805" pos:column="17">if <condition pos:line="805" pos:column="20">(<expr><name><name pos:line="805" pos:column="21">al<pos:position pos:line="805" pos:column="23"/></name><operator pos:line="805" pos:column="23">-&gt;<pos:position pos:line="805" pos:column="28"/></operator><name pos:line="805" pos:column="25">notes<pos:position pos:line="805" pos:column="30"/></name></name> <operator pos:line="805" pos:column="31">!=<pos:position pos:line="805" pos:column="33"/></operator> <name pos:line="805" pos:column="34">NULL<pos:position pos:line="805" pos:column="38"/></name> <operator pos:line="805" pos:column="39">&amp;&amp;<pos:position pos:line="805" pos:column="49"/></operator> <operator pos:line="805" pos:column="42">!<pos:position pos:line="805" pos:column="43"/></operator><call><name><name pos:line="805" pos:column="43">al<pos:position pos:line="805" pos:column="45"/></name><operator pos:line="805" pos:column="45">-&gt;<pos:position pos:line="805" pos:column="50"/></operator><name pos:line="805" pos:column="47">notes<pos:position pos:line="805" pos:column="52"/></name><operator pos:line="805" pos:column="52">-&gt;<pos:position pos:line="805" pos:column="57"/></operator><name pos:line="805" pos:column="54">empty<pos:position pos:line="805" pos:column="59"/></name></name><argument_list pos:line="805" pos:column="59">()<pos:position pos:line="805" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="805" pos:column="62"/></condition><then pos:line="805" pos:column="62">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="806" pos:column="21">sb<pos:position pos:line="806" pos:column="23"/></name><operator pos:line="806" pos:column="23">.<pos:position pos:line="806" pos:column="24"/></operator><name pos:line="806" pos:column="24">append<pos:position pos:line="806" pos:column="30"/></name></name><argument_list pos:line="806" pos:column="30">(<argument><expr><call><name><name pos:line="806" pos:column="31">al<pos:position pos:line="806" pos:column="33"/></name><operator pos:line="806" pos:column="33">-&gt;<pos:position pos:line="806" pos:column="38"/></operator><name pos:line="806" pos:column="35">notes<pos:position pos:line="806" pos:column="40"/></name><operator pos:line="806" pos:column="40">-&gt;<pos:position pos:line="806" pos:column="45"/></operator><name pos:line="806" pos:column="42">toString<pos:position pos:line="806" pos:column="50"/></name></name><argument_list pos:line="806" pos:column="50">(<argument><expr><name pos:line="806" pos:column="51">separator<pos:position pos:line="806" pos:column="60"/></name></expr></argument>)<pos:position pos:line="806" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="806" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="806" pos:column="63"/></expr_stmt></block></then></if>

                <expr_stmt><expr><name pos:line="808" pos:column="17">out<pos:position pos:line="808" pos:column="20"/></name> <operator pos:line="808" pos:column="21">=<pos:position pos:line="808" pos:column="22"/></operator> <call><name><name pos:line="808" pos:column="23">sb<pos:position pos:line="808" pos:column="25"/></name><operator pos:line="808" pos:column="25">.<pos:position pos:line="808" pos:column="26"/></operator><name pos:line="808" pos:column="26">termedBuf<pos:position pos:line="808" pos:column="35"/></name></name><argument_list pos:line="808" pos:column="35">()<pos:position pos:line="808" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="809" pos:column="17">quote<pos:position pos:line="809" pos:column="22"/></name> <operator pos:line="809" pos:column="23">=<pos:position pos:line="809" pos:column="24"/></operator> <literal type="number" pos:line="809" pos:column="25">1<pos:position pos:line="809" pos:column="26"/></literal></expr>;<pos:position pos:line="809" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="810" pos:column="14"/></block></else></if>
            <break pos:line="811" pos:column="13">break;<pos:position pos:line="811" pos:column="19"/></break>

        <case pos:line="813" pos:column="9">case <expr><name pos:line="813" pos:column="14">LFT_PERCENT<pos:position pos:line="813" pos:column="25"/></name></expr>:<pos:position pos:line="813" pos:column="26"/></case>
            <expr_stmt><expr><name pos:line="814" pos:column="13">out<pos:position pos:line="814" pos:column="16"/></name> <operator pos:line="814" pos:column="17">=<pos:position pos:line="814" pos:column="18"/></operator> <literal type="string" pos:line="814" pos:column="19">"%"<pos:position pos:line="814" pos:column="22"/></literal></expr>;<pos:position pos:line="814" pos:column="23"/></expr_stmt>

            <break pos:line="816" pos:column="13">break;<pos:position pos:line="816" pos:column="19"/></break>
        }<pos:position pos:line="817" pos:column="10"/></block></switch>

        <if pos:line="819" pos:column="9">if <condition pos:line="819" pos:column="12">(<expr><name pos:line="819" pos:column="13">dooff<pos:position pos:line="819" pos:column="18"/></name></expr>)<pos:position pos:line="819" pos:column="19"/></condition><then pos:line="819" pos:column="19"> <block pos:line="819" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="820" pos:column="13">snprintf<pos:position pos:line="820" pos:column="21"/></name><argument_list pos:line="820" pos:column="21">(<argument><expr><name pos:line="820" pos:column="22">tmp<pos:position pos:line="820" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="820" pos:column="27">sizeof<argument_list pos:line="820" pos:column="33">(<argument><expr><name pos:line="820" pos:column="34">tmp<pos:position pos:line="820" pos:column="37"/></name></expr></argument>)<pos:position pos:line="820" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="820" pos:column="40">"%0*"<pos:position pos:line="820" pos:column="45"/></literal> <name pos:line="820" pos:column="46">PRId64<pos:position pos:line="820" pos:column="52"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="820" pos:column="54">fmt<pos:position pos:line="820" pos:column="57"/></name><operator pos:line="820" pos:column="57">-&gt;<pos:position pos:line="820" pos:column="62"/></operator><name pos:line="820" pos:column="59">zero<pos:position pos:line="820" pos:column="63"/></name></name> <operator pos:line="820" pos:column="64">&amp;&amp;<pos:position pos:line="820" pos:column="74"/></operator> <name><name pos:line="820" pos:column="67">fmt<pos:position pos:line="820" pos:column="70"/></name><operator pos:line="820" pos:column="70">-&gt;<pos:position pos:line="820" pos:column="75"/></operator><name pos:line="820" pos:column="72">widthMin<pos:position pos:line="820" pos:column="80"/></name></name> <operator pos:line="820" pos:column="81">&gt;=<pos:position pos:line="820" pos:column="86"/></operator> <literal type="number" pos:line="820" pos:column="84">0<pos:position pos:line="820" pos:column="85"/></literal></expr> ?<pos:position pos:line="820" pos:column="87"/></condition><then pos:line="820" pos:column="87"> <expr><name><name pos:line="820" pos:column="88">fmt<pos:position pos:line="820" pos:column="91"/></name><operator pos:line="820" pos:column="91">-&gt;<pos:position pos:line="820" pos:column="96"/></operator><name pos:line="820" pos:column="93">widthMin<pos:position pos:line="820" pos:column="101"/></name></name></expr> <pos:position pos:line="820" pos:column="102"/></then><else pos:line="820" pos:column="102">: <expr><literal type="number" pos:line="820" pos:column="104">0<pos:position pos:line="820" pos:column="105"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="820" pos:column="107">outoff<pos:position pos:line="820" pos:column="113"/></name></expr></argument>)<pos:position pos:line="820" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="820" pos:column="115"/></expr_stmt>
            <expr_stmt><expr><name pos:line="821" pos:column="13">out<pos:position pos:line="821" pos:column="16"/></name> <operator pos:line="821" pos:column="17">=<pos:position pos:line="821" pos:column="18"/></operator> <name pos:line="821" pos:column="19">tmp<pos:position pos:line="821" pos:column="22"/></name></expr>;<pos:position pos:line="821" pos:column="23"/></expr_stmt>

        }<pos:position pos:line="823" pos:column="10"/></block></then> <elseif pos:line="823" pos:column="11">else <if pos:line="823" pos:column="16">if <condition pos:line="823" pos:column="19">(<expr><name pos:line="823" pos:column="20">doint<pos:position pos:line="823" pos:column="25"/></name></expr>)<pos:position pos:line="823" pos:column="26"/></condition><then pos:line="823" pos:column="26"> <block pos:line="823" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="824" pos:column="13">snprintf<pos:position pos:line="824" pos:column="21"/></name><argument_list pos:line="824" pos:column="21">(<argument><expr><name pos:line="824" pos:column="22">tmp<pos:position pos:line="824" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="824" pos:column="27">sizeof<argument_list pos:line="824" pos:column="33">(<argument><expr><name pos:line="824" pos:column="34">tmp<pos:position pos:line="824" pos:column="37"/></name></expr></argument>)<pos:position pos:line="824" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="824" pos:column="40">"%0*ld"<pos:position pos:line="824" pos:column="47"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="824" pos:column="49">fmt<pos:position pos:line="824" pos:column="52"/></name><operator pos:line="824" pos:column="52">-&gt;<pos:position pos:line="824" pos:column="57"/></operator><name pos:line="824" pos:column="54">zero<pos:position pos:line="824" pos:column="58"/></name></name> <operator pos:line="824" pos:column="59">&amp;&amp;<pos:position pos:line="824" pos:column="69"/></operator> <name><name pos:line="824" pos:column="62">fmt<pos:position pos:line="824" pos:column="65"/></name><operator pos:line="824" pos:column="65">-&gt;<pos:position pos:line="824" pos:column="70"/></operator><name pos:line="824" pos:column="67">widthMin<pos:position pos:line="824" pos:column="75"/></name></name> <operator pos:line="824" pos:column="76">&gt;=<pos:position pos:line="824" pos:column="81"/></operator> <literal type="number" pos:line="824" pos:column="79">0<pos:position pos:line="824" pos:column="80"/></literal></expr> ?<pos:position pos:line="824" pos:column="82"/></condition><then pos:line="824" pos:column="82"> <expr><name><name pos:line="824" pos:column="83">fmt<pos:position pos:line="824" pos:column="86"/></name><operator pos:line="824" pos:column="86">-&gt;<pos:position pos:line="824" pos:column="91"/></operator><name pos:line="824" pos:column="88">widthMin<pos:position pos:line="824" pos:column="96"/></name></name></expr> <pos:position pos:line="824" pos:column="97"/></then><else pos:line="824" pos:column="97">: <expr><literal type="number" pos:line="824" pos:column="99">0<pos:position pos:line="824" pos:column="100"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="824" pos:column="102">outint<pos:position pos:line="824" pos:column="108"/></name></expr></argument>)<pos:position pos:line="824" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="824" pos:column="110"/></expr_stmt>
            <expr_stmt><expr><name pos:line="825" pos:column="13">out<pos:position pos:line="825" pos:column="16"/></name> <operator pos:line="825" pos:column="17">=<pos:position pos:line="825" pos:column="18"/></operator> <name pos:line="825" pos:column="19">tmp<pos:position pos:line="825" pos:column="22"/></name></expr>;<pos:position pos:line="825" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="826" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="828" pos:column="9">if <condition pos:line="828" pos:column="12">(<expr><name pos:line="828" pos:column="13">out<pos:position pos:line="828" pos:column="16"/></name> <operator pos:line="828" pos:column="17">&amp;&amp;<pos:position pos:line="828" pos:column="27"/></operator> <operator pos:line="828" pos:column="20">*<pos:position pos:line="828" pos:column="21"/></operator><name pos:line="828" pos:column="21">out<pos:position pos:line="828" pos:column="24"/></name></expr>)<pos:position pos:line="828" pos:column="25"/></condition><then pos:line="828" pos:column="25"> <block pos:line="828" pos:column="26">{
            <if pos:line="829" pos:column="13">if <condition pos:line="829" pos:column="16">(<expr><name pos:line="829" pos:column="17">quote<pos:position pos:line="829" pos:column="22"/></name> <operator pos:line="829" pos:column="23">||<pos:position pos:line="829" pos:column="25"/></operator> <name><name pos:line="829" pos:column="26">fmt<pos:position pos:line="829" pos:column="29"/></name><operator pos:line="829" pos:column="29">-&gt;<pos:position pos:line="829" pos:column="34"/></operator><name pos:line="829" pos:column="31">quote<pos:position pos:line="829" pos:column="36"/></name></name> <operator pos:line="829" pos:column="37">!=<pos:position pos:line="829" pos:column="39"/></operator> <name pos:line="829" pos:column="40">LOG_QUOTE_NONE<pos:position pos:line="829" pos:column="54"/></name></expr>)<pos:position pos:line="829" pos:column="55"/></condition><then pos:line="829" pos:column="55"> <block pos:line="829" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="830" pos:column="17">char<pos:position pos:line="830" pos:column="21"/></name> <modifier pos:line="830" pos:column="22">*<pos:position pos:line="830" pos:column="23"/></modifier></type><name pos:line="830" pos:column="23">newout<pos:position pos:line="830" pos:column="29"/></name> <init pos:line="830" pos:column="30">= <expr><name pos:line="830" pos:column="32">NULL<pos:position pos:line="830" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="830" pos:column="37"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="831" pos:column="17">int<pos:position pos:line="831" pos:column="20"/></name></type> <name pos:line="831" pos:column="21">newfree<pos:position pos:line="831" pos:column="28"/></name> <init pos:line="831" pos:column="29">= <expr><literal type="number" pos:line="831" pos:column="31">0<pos:position pos:line="831" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="831" pos:column="33"/></decl_stmt>

                <switch pos:line="833" pos:column="17">switch <condition pos:line="833" pos:column="24">(<expr><name><name pos:line="833" pos:column="25">fmt<pos:position pos:line="833" pos:column="28"/></name><operator pos:line="833" pos:column="28">-&gt;<pos:position pos:line="833" pos:column="33"/></operator><name pos:line="833" pos:column="30">quote<pos:position pos:line="833" pos:column="35"/></name></name></expr>)<pos:position pos:line="833" pos:column="36"/></condition> <block pos:line="833" pos:column="37">{

                <case pos:line="835" pos:column="17">case <expr><name pos:line="835" pos:column="22">LOG_QUOTE_NONE<pos:position pos:line="835" pos:column="36"/></name></expr>:<pos:position pos:line="835" pos:column="37"/></case>
                    <expr_stmt><expr><name pos:line="836" pos:column="21">newout<pos:position pos:line="836" pos:column="27"/></name> <operator pos:line="836" pos:column="28">=<pos:position pos:line="836" pos:column="29"/></operator> <call><name pos:line="836" pos:column="30">rfc1738_escape_unescaped<pos:position pos:line="836" pos:column="54"/></name><argument_list pos:line="836" pos:column="54">(<argument><expr><name pos:line="836" pos:column="55">out<pos:position pos:line="836" pos:column="58"/></name></expr></argument>)<pos:position pos:line="836" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="836" pos:column="60"/></expr_stmt>
                    <break pos:line="837" pos:column="21">break;<pos:position pos:line="837" pos:column="27"/></break>

                <case pos:line="839" pos:column="17">case <expr><name pos:line="839" pos:column="22">LOG_QUOTE_QUOTES<pos:position pos:line="839" pos:column="38"/></name></expr>:<pos:position pos:line="839" pos:column="39"/></case> <block pos:line="839" pos:column="40">{
                    <decl_stmt><decl><type><name pos:line="840" pos:column="21">size_t<pos:position pos:line="840" pos:column="27"/></name></type> <name pos:line="840" pos:column="28">out_len<pos:position pos:line="840" pos:column="35"/></name> <init pos:line="840" pos:column="36">= <expr><cast type="static" pos:line="840" pos:column="38">static_cast<argument_list type="generic" pos:line="840" pos:column="49">&lt;<argument><expr><name pos:line="840" pos:column="50">size_t<pos:position pos:line="840" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="840" pos:column="60"/></argument_list><argument_list pos:line="840" pos:column="57">(<argument><expr><call><name pos:line="840" pos:column="58">strlen<pos:position pos:line="840" pos:column="64"/></name><argument_list pos:line="840" pos:column="64">(<argument><expr><name pos:line="840" pos:column="65">out<pos:position pos:line="840" pos:column="68"/></name></expr></argument>)<pos:position pos:line="840" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="840" pos:column="70"/></argument_list></cast> <operator pos:line="840" pos:column="71">*<pos:position pos:line="840" pos:column="72"/></operator> <literal type="number" pos:line="840" pos:column="73">2<pos:position pos:line="840" pos:column="74"/></literal> <operator pos:line="840" pos:column="75">+<pos:position pos:line="840" pos:column="76"/></operator> <literal type="number" pos:line="840" pos:column="77">1<pos:position pos:line="840" pos:column="78"/></literal></expr></init></decl>;<pos:position pos:line="840" pos:column="79"/></decl_stmt>
                    <if pos:line="841" pos:column="21">if <condition pos:line="841" pos:column="24">(<expr><name pos:line="841" pos:column="25">out_len<pos:position pos:line="841" pos:column="32"/></name> <operator pos:line="841" pos:column="33">&gt;=<pos:position pos:line="841" pos:column="38"/></operator> <sizeof pos:line="841" pos:column="36">sizeof<argument_list pos:line="841" pos:column="42">(<argument><expr><name pos:line="841" pos:column="43">tmp<pos:position pos:line="841" pos:column="46"/></name></expr></argument>)<pos:position pos:line="841" pos:column="47"/></argument_list></sizeof></expr>)<pos:position pos:line="841" pos:column="48"/></condition><then pos:line="841" pos:column="48"> <block pos:line="841" pos:column="49">{
                        <expr_stmt><expr><name pos:line="842" pos:column="25">newout<pos:position pos:line="842" pos:column="31"/></name> <operator pos:line="842" pos:column="32">=<pos:position pos:line="842" pos:column="33"/></operator> <operator pos:line="842" pos:column="34">(<pos:position pos:line="842" pos:column="35"/></operator><name pos:line="842" pos:column="35">char<pos:position pos:line="842" pos:column="39"/></name> <operator pos:line="842" pos:column="40">*<pos:position pos:line="842" pos:column="41"/></operator><operator pos:line="842" pos:column="41">)<pos:position pos:line="842" pos:column="42"/></operator><call><name pos:line="842" pos:column="42">xmalloc<pos:position pos:line="842" pos:column="49"/></name><argument_list pos:line="842" pos:column="49">(<argument><expr><name pos:line="842" pos:column="50">out_len<pos:position pos:line="842" pos:column="57"/></name></expr></argument>)<pos:position pos:line="842" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="842" pos:column="59"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="843" pos:column="25">newfree<pos:position pos:line="843" pos:column="32"/></name> <operator pos:line="843" pos:column="33">=<pos:position pos:line="843" pos:column="34"/></operator> <literal type="number" pos:line="843" pos:column="35">1<pos:position pos:line="843" pos:column="36"/></literal></expr>;<pos:position pos:line="843" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="844" pos:column="22"/></block></then> <else pos:line="844" pos:column="23">else
                        <block type="pseudo"><expr_stmt><expr><name pos:line="845" pos:column="25">newout<pos:position pos:line="845" pos:column="31"/></name> <operator pos:line="845" pos:column="32">=<pos:position pos:line="845" pos:column="33"/></operator> <name pos:line="845" pos:column="34">tmp<pos:position pos:line="845" pos:column="37"/></name></expr>;<pos:position pos:line="845" pos:column="38"/></expr_stmt></block></else></if>
                    <expr_stmt><expr><call><name pos:line="846" pos:column="21">log_quoted_string<pos:position pos:line="846" pos:column="38"/></name><argument_list pos:line="846" pos:column="38">(<argument><expr><name pos:line="846" pos:column="39">out<pos:position pos:line="846" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="846" pos:column="44">newout<pos:position pos:line="846" pos:column="50"/></name></expr></argument>)<pos:position pos:line="846" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="846" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="847" pos:column="18"/></block>
                <break pos:line="848" pos:column="17">break;<pos:position pos:line="848" pos:column="23"/></break>

                <case pos:line="850" pos:column="17">case <expr><name pos:line="850" pos:column="22">LOG_QUOTE_MIMEBLOB<pos:position pos:line="850" pos:column="40"/></name></expr>:<pos:position pos:line="850" pos:column="41"/></case>
                    <expr_stmt><expr><name pos:line="851" pos:column="21">newout<pos:position pos:line="851" pos:column="27"/></name> <operator pos:line="851" pos:column="28">=<pos:position pos:line="851" pos:column="29"/></operator> <call><name pos:line="851" pos:column="30">QuoteMimeBlob<pos:position pos:line="851" pos:column="43"/></name><argument_list pos:line="851" pos:column="43">(<argument><expr><name pos:line="851" pos:column="44">out<pos:position pos:line="851" pos:column="47"/></name></expr></argument>)<pos:position pos:line="851" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="851" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="852" pos:column="21">newfree<pos:position pos:line="852" pos:column="28"/></name> <operator pos:line="852" pos:column="29">=<pos:position pos:line="852" pos:column="30"/></operator> <literal type="number" pos:line="852" pos:column="31">1<pos:position pos:line="852" pos:column="32"/></literal></expr>;<pos:position pos:line="852" pos:column="33"/></expr_stmt>
                    <break pos:line="853" pos:column="21">break;<pos:position pos:line="853" pos:column="27"/></break>

                <case pos:line="855" pos:column="17">case <expr><name pos:line="855" pos:column="22">LOG_QUOTE_URL<pos:position pos:line="855" pos:column="35"/></name></expr>:<pos:position pos:line="855" pos:column="36"/></case>
                    <expr_stmt><expr><name pos:line="856" pos:column="21">newout<pos:position pos:line="856" pos:column="27"/></name> <operator pos:line="856" pos:column="28">=<pos:position pos:line="856" pos:column="29"/></operator> <call><name pos:line="856" pos:column="30">rfc1738_escape<pos:position pos:line="856" pos:column="44"/></name><argument_list pos:line="856" pos:column="44">(<argument><expr><name pos:line="856" pos:column="45">out<pos:position pos:line="856" pos:column="48"/></name></expr></argument>)<pos:position pos:line="856" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="856" pos:column="50"/></expr_stmt>
                    <break pos:line="857" pos:column="21">break;<pos:position pos:line="857" pos:column="27"/></break>

                <case pos:line="859" pos:column="17">case <expr><name pos:line="859" pos:column="22">LOG_QUOTE_RAW<pos:position pos:line="859" pos:column="35"/></name></expr>:<pos:position pos:line="859" pos:column="36"/></case>
                    <break pos:line="860" pos:column="21">break;<pos:position pos:line="860" pos:column="27"/></break>
                }<pos:position pos:line="861" pos:column="18"/></block></switch>

                <if pos:line="863" pos:column="17">if <condition pos:line="863" pos:column="20">(<expr><name pos:line="863" pos:column="21">newout<pos:position pos:line="863" pos:column="27"/></name></expr>)<pos:position pos:line="863" pos:column="28"/></condition><then pos:line="863" pos:column="28"> <block pos:line="863" pos:column="29">{
                    <if pos:line="864" pos:column="21">if <condition pos:line="864" pos:column="24">(<expr><name pos:line="864" pos:column="25">dofree<pos:position pos:line="864" pos:column="31"/></name></expr>)<pos:position pos:line="864" pos:column="32"/></condition><then pos:line="864" pos:column="32">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="865" pos:column="25">safe_free<pos:position pos:line="865" pos:column="34"/></name><argument_list pos:line="865" pos:column="34">(<argument><expr><name pos:line="865" pos:column="35">out<pos:position pos:line="865" pos:column="38"/></name></expr></argument>)<pos:position pos:line="865" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="865" pos:column="40"/></expr_stmt></block></then></if>

                    <expr_stmt><expr><name pos:line="867" pos:column="21">out<pos:position pos:line="867" pos:column="24"/></name> <operator pos:line="867" pos:column="25">=<pos:position pos:line="867" pos:column="26"/></operator> <name pos:line="867" pos:column="27">newout<pos:position pos:line="867" pos:column="33"/></name></expr>;<pos:position pos:line="867" pos:column="34"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="869" pos:column="21">dofree<pos:position pos:line="869" pos:column="27"/></name> <operator pos:line="869" pos:column="28">=<pos:position pos:line="869" pos:column="29"/></operator> <name pos:line="869" pos:column="30">newfree<pos:position pos:line="869" pos:column="37"/></name></expr>;<pos:position pos:line="869" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="870" pos:column="18"/></block></then></if>
            }<pos:position pos:line="871" pos:column="14"/></block></then></if>

            <comment type="line" pos:line="873" pos:column="13">// enforce width limits if configured</comment>
            <decl_stmt><decl><type><specifier pos:line="874" pos:column="13">const<pos:position pos:line="874" pos:column="18"/></specifier> <name pos:line="874" pos:column="19">bool<pos:position pos:line="874" pos:column="23"/></name></type> <name pos:line="874" pos:column="24">haveMaxWidth<pos:position pos:line="874" pos:column="36"/></name> <init pos:line="874" pos:column="37">= <expr><name><name pos:line="874" pos:column="39">fmt<pos:position pos:line="874" pos:column="42"/></name><operator pos:line="874" pos:column="42">-&gt;<pos:position pos:line="874" pos:column="47"/></operator><name pos:line="874" pos:column="44">widthMax<pos:position pos:line="874" pos:column="52"/></name></name> <operator pos:line="874" pos:column="53">&gt;=<pos:position pos:line="874" pos:column="58"/></operator><literal type="number" pos:line="874" pos:column="55">0<pos:position pos:line="874" pos:column="56"/></literal> <operator pos:line="874" pos:column="57">&amp;&amp;<pos:position pos:line="874" pos:column="67"/></operator> <operator pos:line="874" pos:column="60">!<pos:position pos:line="874" pos:column="61"/></operator><name pos:line="874" pos:column="61">doint<pos:position pos:line="874" pos:column="66"/></name> <operator pos:line="874" pos:column="67">&amp;&amp;<pos:position pos:line="874" pos:column="77"/></operator> <operator pos:line="874" pos:column="70">!<pos:position pos:line="874" pos:column="71"/></operator><name pos:line="874" pos:column="71">dooff<pos:position pos:line="874" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="874" pos:column="77"/></decl_stmt>
            <if pos:line="875" pos:column="13">if <condition pos:line="875" pos:column="16">(<expr><name pos:line="875" pos:column="17">haveMaxWidth<pos:position pos:line="875" pos:column="29"/></name> <operator pos:line="875" pos:column="30">||<pos:position pos:line="875" pos:column="32"/></operator> <name><name pos:line="875" pos:column="33">fmt<pos:position pos:line="875" pos:column="36"/></name><operator pos:line="875" pos:column="36">-&gt;<pos:position pos:line="875" pos:column="41"/></operator><name pos:line="875" pos:column="38">widthMin<pos:position pos:line="875" pos:column="46"/></name></name></expr>)<pos:position pos:line="875" pos:column="47"/></condition><then pos:line="875" pos:column="47"> <block pos:line="875" pos:column="48">{
                <decl_stmt><decl><type><specifier pos:line="876" pos:column="17">const<pos:position pos:line="876" pos:column="22"/></specifier> <name pos:line="876" pos:column="23">int<pos:position pos:line="876" pos:column="26"/></name></type> <name pos:line="876" pos:column="27">minWidth<pos:position pos:line="876" pos:column="35"/></name> <init pos:line="876" pos:column="36">= <expr><ternary><condition><expr><name><name pos:line="876" pos:column="38">fmt<pos:position pos:line="876" pos:column="41"/></name><operator pos:line="876" pos:column="41">-&gt;<pos:position pos:line="876" pos:column="46"/></operator><name pos:line="876" pos:column="43">widthMin<pos:position pos:line="876" pos:column="51"/></name></name> <operator pos:line="876" pos:column="52">&gt;=<pos:position pos:line="876" pos:column="57"/></operator> <literal type="number" pos:line="876" pos:column="55">0<pos:position pos:line="876" pos:column="56"/></literal></expr> ?<pos:position pos:line="876" pos:column="58"/></condition><then pos:line="876" pos:column="58">
                                     <expr><name><name pos:line="877" pos:column="38">fmt<pos:position pos:line="877" pos:column="41"/></name><operator pos:line="877" pos:column="41">-&gt;<pos:position pos:line="877" pos:column="46"/></operator><name pos:line="877" pos:column="43">widthMin<pos:position pos:line="877" pos:column="51"/></name></name></expr> <pos:position pos:line="877" pos:column="52"/></then><else pos:line="877" pos:column="52">:<expr><literal type="number" pos:line="877" pos:column="53">0<pos:position pos:line="877" pos:column="54"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="877" pos:column="55"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="878" pos:column="17">const<pos:position pos:line="878" pos:column="22"/></specifier> <name pos:line="878" pos:column="23">int<pos:position pos:line="878" pos:column="26"/></name></type> <name pos:line="878" pos:column="27">maxWidth<pos:position pos:line="878" pos:column="35"/></name> <init pos:line="878" pos:column="36">= <expr><ternary><condition><expr><name pos:line="878" pos:column="38">haveMaxWidth<pos:position pos:line="878" pos:column="50"/></name></expr> ?<pos:position pos:line="878" pos:column="52"/></condition><then pos:line="878" pos:column="52">
                                     <expr><name><name pos:line="879" pos:column="38">fmt<pos:position pos:line="879" pos:column="41"/></name><operator pos:line="879" pos:column="41">-&gt;<pos:position pos:line="879" pos:column="46"/></operator><name pos:line="879" pos:column="43">widthMax<pos:position pos:line="879" pos:column="51"/></name></name></expr> <pos:position pos:line="879" pos:column="52"/></then><else pos:line="879" pos:column="52">: <expr><call><name pos:line="879" pos:column="54">strlen<pos:position pos:line="879" pos:column="60"/></name><argument_list pos:line="879" pos:column="60">(<argument><expr><name pos:line="879" pos:column="61">out<pos:position pos:line="879" pos:column="64"/></name></expr></argument>)<pos:position pos:line="879" pos:column="65"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="879" pos:column="66"/></decl_stmt>

                <if pos:line="881" pos:column="17">if <condition pos:line="881" pos:column="20">(<expr><name><name pos:line="881" pos:column="21">fmt<pos:position pos:line="881" pos:column="24"/></name><operator pos:line="881" pos:column="24">-&gt;<pos:position pos:line="881" pos:column="29"/></operator><name pos:line="881" pos:column="26">left<pos:position pos:line="881" pos:column="30"/></name></name></expr>)<pos:position pos:line="881" pos:column="31"/></condition><then pos:line="881" pos:column="31">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="882" pos:column="21">mb<pos:position pos:line="882" pos:column="23"/></name><operator pos:line="882" pos:column="23">.<pos:position pos:line="882" pos:column="24"/></operator><name pos:line="882" pos:column="24">Printf<pos:position pos:line="882" pos:column="30"/></name></name><argument_list pos:line="882" pos:column="30">(<argument><expr><literal type="string" pos:line="882" pos:column="31">"%-*.*s"<pos:position pos:line="882" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="882" pos:column="41">minWidth<pos:position pos:line="882" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="882" pos:column="51">maxWidth<pos:position pos:line="882" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="882" pos:column="61">out<pos:position pos:line="882" pos:column="64"/></name></expr></argument>)<pos:position pos:line="882" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="882" pos:column="66"/></expr_stmt></block></then>
                <else pos:line="883" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="884" pos:column="21">mb<pos:position pos:line="884" pos:column="23"/></name><operator pos:line="884" pos:column="23">.<pos:position pos:line="884" pos:column="24"/></operator><name pos:line="884" pos:column="24">Printf<pos:position pos:line="884" pos:column="30"/></name></name><argument_list pos:line="884" pos:column="30">(<argument><expr><literal type="string" pos:line="884" pos:column="31">"%*.*s"<pos:position pos:line="884" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="884" pos:column="40">minWidth<pos:position pos:line="884" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="884" pos:column="50">maxWidth<pos:position pos:line="884" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="884" pos:column="60">out<pos:position pos:line="884" pos:column="63"/></name></expr></argument>)<pos:position pos:line="884" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="884" pos:column="65"/></expr_stmt></block></else></if>
            }<pos:position pos:line="885" pos:column="14"/></block></then> <else pos:line="885" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="886" pos:column="17">mb<pos:position pos:line="886" pos:column="19"/></name><operator pos:line="886" pos:column="19">.<pos:position pos:line="886" pos:column="20"/></operator><name pos:line="886" pos:column="20">append<pos:position pos:line="886" pos:column="26"/></name></name><argument_list pos:line="886" pos:column="26">(<argument><expr><name pos:line="886" pos:column="27">out<pos:position pos:line="886" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="886" pos:column="32">strlen<pos:position pos:line="886" pos:column="38"/></name><argument_list pos:line="886" pos:column="38">(<argument><expr><name pos:line="886" pos:column="39">out<pos:position pos:line="886" pos:column="42"/></name></expr></argument>)<pos:position pos:line="886" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="886" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="886" pos:column="45"/></expr_stmt></block></else></if>
        }<pos:position pos:line="887" pos:column="10"/></block></then> <else pos:line="887" pos:column="11">else <block pos:line="887" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="888" pos:column="13">mb<pos:position pos:line="888" pos:column="15"/></name><operator pos:line="888" pos:column="15">.<pos:position pos:line="888" pos:column="16"/></operator><name pos:line="888" pos:column="16">append<pos:position pos:line="888" pos:column="22"/></name></name><argument_list pos:line="888" pos:column="22">(<argument><expr><literal type="string" pos:line="888" pos:column="23">"-"<pos:position pos:line="888" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="888" pos:column="28">1<pos:position pos:line="888" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="888" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="888" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="889" pos:column="10"/></block></else></if>

        <if pos:line="891" pos:column="9">if <condition pos:line="891" pos:column="12">(<expr><name><name pos:line="891" pos:column="13">fmt<pos:position pos:line="891" pos:column="16"/></name><operator pos:line="891" pos:column="16">-&gt;<pos:position pos:line="891" pos:column="21"/></operator><name pos:line="891" pos:column="18">space<pos:position pos:line="891" pos:column="23"/></name></name></expr>)<pos:position pos:line="891" pos:column="24"/></condition><then pos:line="891" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="892" pos:column="13">mb<pos:position pos:line="892" pos:column="15"/></name><operator pos:line="892" pos:column="15">.<pos:position pos:line="892" pos:column="16"/></operator><name pos:line="892" pos:column="16">append<pos:position pos:line="892" pos:column="22"/></name></name><argument_list pos:line="892" pos:column="22">(<argument><expr><literal type="string" pos:line="892" pos:column="23">" "<pos:position pos:line="892" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="892" pos:column="28">1<pos:position pos:line="892" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="892" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="892" pos:column="31"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="894" pos:column="9">sb<pos:position pos:line="894" pos:column="11"/></name><operator pos:line="894" pos:column="11">.<pos:position pos:line="894" pos:column="12"/></operator><name pos:line="894" pos:column="12">clean<pos:position pos:line="894" pos:column="17"/></name></name><argument_list pos:line="894" pos:column="17">()<pos:position pos:line="894" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="894" pos:column="20"/></expr_stmt>

        <if pos:line="896" pos:column="9">if <condition pos:line="896" pos:column="12">(<expr><name pos:line="896" pos:column="13">dofree<pos:position pos:line="896" pos:column="19"/></name></expr>)<pos:position pos:line="896" pos:column="20"/></condition><then pos:line="896" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="897" pos:column="13">safe_free<pos:position pos:line="897" pos:column="22"/></name><argument_list pos:line="897" pos:column="22">(<argument><expr><name pos:line="897" pos:column="23">out<pos:position pos:line="897" pos:column="26"/></name></expr></argument>)<pos:position pos:line="897" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="897" pos:column="28"/></expr_stmt></block></then></if>
    }<pos:position pos:line="898" pos:column="6"/></block></for>
}<pos:position pos:line="899" pos:column="2"/></block></function></unit>

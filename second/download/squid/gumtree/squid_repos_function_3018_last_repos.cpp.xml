<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3018_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">prepareTransparentURL<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">ConnStateData<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">conn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">ClientHttpRequest<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">http<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="70">const<pos:position pos:line="2" pos:column="75"/></specifier> <name><name pos:line="2" pos:column="76">Http1<pos:position pos:line="2" pos:column="81"/></name><operator pos:line="2" pos:column="81">::<pos:position pos:line="2" pos:column="83"/></operator><name pos:line="2" pos:column="83">RequestParserPointer<pos:position pos:line="2" pos:column="103"/></name></name> <modifier pos:line="2" pos:column="104">&amp;<pos:position pos:line="2" pos:column="109"/></modifier></type><name pos:line="2" pos:column="105">hp<pos:position pos:line="2" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="108"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// TODO Must() on URI !empty when the parser supports throw. For now avoid assert().</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">hp<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">requestUri<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call><operator pos:line="5" pos:column="26">.<pos:position pos:line="5" pos:column="27"/></operator><call><name pos:line="5" pos:column="27">isEmpty<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">()<pos:position pos:line="5" pos:column="36"/></argument_list></call> <operator pos:line="5" pos:column="37">&amp;&amp;<pos:position pos:line="5" pos:column="47"/></operator> <call><name><name pos:line="5" pos:column="40">hp<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">requestUri<pos:position pos:line="5" pos:column="54"/></name></name><argument_list pos:line="5" pos:column="54">()<pos:position pos:line="5" pos:column="56"/></argument_list></call><index pos:line="5" pos:column="56">[<expr><literal type="number" pos:line="5" pos:column="57">0<pos:position pos:line="5" pos:column="58"/></literal></expr>]<pos:position pos:line="5" pos:column="59"/></index> <operator pos:line="5" pos:column="60">!=<pos:position pos:line="5" pos:column="62"/></operator> <literal type="char" pos:line="5" pos:column="63">'/'<pos:position pos:line="5" pos:column="66"/></literal></expr>)<pos:position pos:line="5" pos:column="67"/></condition><then pos:line="5" pos:column="67">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="6" pos:column="17">/* already in good shape */</comment>

    <comment type="block" pos:line="8" pos:column="5">/* BUG: Squid cannot deal with '*' URLs (RFC2616 5.1.2) */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">host<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><call><name><name pos:line="10" pos:column="28">hp<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">getHeaderField<pos:position pos:line="10" pos:column="46"/></name></name><argument_list pos:line="10" pos:column="46">(<argument><expr><literal type="string" pos:line="10" pos:column="47">"Host"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr></init></decl>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55"> <block pos:line="10" pos:column="56">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">int<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">url_sz<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><call><name><name pos:line="11" pos:column="28">hp<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">requestUri<pos:position pos:line="11" pos:column="42"/></name></name><argument_list pos:line="11" pos:column="42">()<pos:position pos:line="11" pos:column="44"/></argument_list></call><operator pos:line="11" pos:column="44">.<pos:position pos:line="11" pos:column="45"/></operator><call><name pos:line="11" pos:column="45">length<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">()<pos:position pos:line="11" pos:column="53"/></argument_list></call> <operator pos:line="11" pos:column="54">+<pos:position pos:line="11" pos:column="55"/></operator> <literal type="number" pos:line="11" pos:column="56">32<pos:position pos:line="11" pos:column="58"/></literal> <operator pos:line="11" pos:column="59">+<pos:position pos:line="11" pos:column="60"/></operator> <name><name pos:line="11" pos:column="61">Config<pos:position pos:line="11" pos:column="67"/></name><operator pos:line="11" pos:column="67">.<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="68">appendDomainLen<pos:position pos:line="11" pos:column="83"/></name></name> <operator pos:line="11" pos:column="84">+<pos:position pos:line="11" pos:column="85"/></operator>
                           <call><name pos:line="12" pos:column="28">strlen<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">host<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">http<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">uri<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">char<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></operator><operator pos:line="13" pos:column="28">)<pos:position pos:line="13" pos:column="29"/></operator><call><name pos:line="13" pos:column="29">xcalloc<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">url_sz<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="45">1<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">SBuf<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="21">scheme<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><call><name><name pos:line="14" pos:column="30">AnyP<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">::<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">UriScheme<pos:position pos:line="14" pos:column="45"/></name></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name><name pos:line="14" pos:column="46">conn<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">transferProtocol<pos:position pos:line="14" pos:column="68"/></name><operator pos:line="14" pos:column="68">.<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="69">protocol<pos:position pos:line="14" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call><operator pos:line="14" pos:column="78">.<pos:position pos:line="14" pos:column="79"/></operator><call><name pos:line="14" pos:column="79">image<pos:position pos:line="14" pos:column="84"/></name><argument_list pos:line="14" pos:column="84">()<pos:position pos:line="14" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="87"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">snprintf<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name><name pos:line="15" pos:column="18">http<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">uri<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">url_sz<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">SQUIDSBUFPH<pos:position pos:line="15" pos:column="48"/></name> <literal type="string" pos:line="15" pos:column="49">"://%s"<pos:position pos:line="15" pos:column="56"/></literal> <name pos:line="15" pos:column="57">SQUIDSBUFPH<pos:position pos:line="15" pos:column="68"/></name></expr></argument>,
                 <argument><expr><call><name pos:line="16" pos:column="18">SQUIDSBUFPRINT<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">scheme<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">host<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="48">SQUIDSBUFPRINT<pos:position pos:line="16" pos:column="62"/></name><argument_list pos:line="16" pos:column="62">(<argument><expr><call><name><name pos:line="16" pos:column="63">hp<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">-&gt;<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="67">requestUri<pos:position pos:line="16" pos:column="77"/></name></name><argument_list pos:line="16" pos:column="77">()<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">33<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">5<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"TRANSPARENT HOST REWRITE: "<pos:position pos:line="17" pos:column="51"/></literal> <operator pos:line="17" pos:column="52">&lt;&lt;<pos:position pos:line="17" pos:column="60"/></operator> <name><name pos:line="17" pos:column="55">http<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">uri<pos:position pos:line="17" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <else pos:line="18" pos:column="7">else <block pos:line="18" pos:column="12">{
        <comment type="block" pos:line="19" pos:column="9">/* Put the local socket IP address as the hostname.  */</comment>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">const<pos:position pos:line="20" pos:column="14"/></specifier> <name pos:line="20" pos:column="15">int<pos:position pos:line="20" pos:column="18"/></name></type> <name pos:line="20" pos:column="19">url_sz<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><call><name><name pos:line="20" pos:column="28">hp<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">requestUri<pos:position pos:line="20" pos:column="42"/></name></name><argument_list pos:line="20" pos:column="42">()<pos:position pos:line="20" pos:column="44"/></argument_list></call><operator pos:line="20" pos:column="44">.<pos:position pos:line="20" pos:column="45"/></operator><call><name pos:line="20" pos:column="45">length<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">()<pos:position pos:line="20" pos:column="53"/></argument_list></call> <operator pos:line="20" pos:column="54">+<pos:position pos:line="20" pos:column="55"/></operator> <literal type="number" pos:line="20" pos:column="56">32<pos:position pos:line="20" pos:column="58"/></literal> <operator pos:line="20" pos:column="59">+<pos:position pos:line="20" pos:column="60"/></operator> <name><name pos:line="20" pos:column="61">Config<pos:position pos:line="20" pos:column="67"/></name><operator pos:line="20" pos:column="67">.<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="68">appendDomainLen<pos:position pos:line="20" pos:column="83"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="84"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">http<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">uri<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">(<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">char<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">*<pos:position pos:line="21" pos:column="28"/></operator><operator pos:line="21" pos:column="28">)<pos:position pos:line="21" pos:column="29"/></operator><call><name pos:line="21" pos:column="29">xcalloc<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">url_sz<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="45">1<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
        <decl_stmt><decl><specifier pos:line="22" pos:column="9">static<pos:position pos:line="22" pos:column="15"/></specifier> <type><name pos:line="22" pos:column="16">char<pos:position pos:line="22" pos:column="20"/></name></type> <name><name pos:line="22" pos:column="21">ipbuf<pos:position pos:line="22" pos:column="26"/></name><index pos:line="22" pos:column="26">[<expr><name pos:line="22" pos:column="27">MAX_IPSTRLEN<pos:position pos:line="22" pos:column="39"/></name></expr>]<pos:position pos:line="22" pos:column="40"/></index></name></decl>;<pos:position pos:line="22" pos:column="41"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">http<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">getConn<pos:position pos:line="23" pos:column="22"/></name></name><argument_list pos:line="23" pos:column="22">()<pos:position pos:line="23" pos:column="24"/></argument_list></call><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><call><name><name pos:line="23" pos:column="26">clientConnection<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">local<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">.<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">toHostStr<pos:position pos:line="23" pos:column="59"/></name></name><argument_list pos:line="23" pos:column="59">(<argument><expr><name pos:line="23" pos:column="60">ipbuf<pos:position pos:line="23" pos:column="65"/></name></expr></argument>,<argument><expr><name pos:line="23" pos:column="66">MAX_IPSTRLEN<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">const<pos:position pos:line="24" pos:column="14"/></specifier> <name pos:line="24" pos:column="15">SBuf<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">&amp;<pos:position pos:line="24" pos:column="25"/></modifier></type><name pos:line="24" pos:column="21">scheme<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><call><name><name pos:line="24" pos:column="30">AnyP<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">::<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">UriScheme<pos:position pos:line="24" pos:column="45"/></name></name><argument_list pos:line="24" pos:column="45">(<argument><expr><call><name><name pos:line="24" pos:column="46">http<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">getConn<pos:position pos:line="24" pos:column="59"/></name></name><argument_list pos:line="24" pos:column="59">()<pos:position pos:line="24" pos:column="61"/></argument_list></call><operator pos:line="24" pos:column="61">-&gt;<pos:position pos:line="24" pos:column="66"/></operator><name><name pos:line="24" pos:column="63">transferProtocol<pos:position pos:line="24" pos:column="79"/></name><operator pos:line="24" pos:column="79">.<pos:position pos:line="24" pos:column="80"/></operator><name pos:line="24" pos:column="80">protocol<pos:position pos:line="24" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="89"/></argument_list></call><operator pos:line="24" pos:column="89">.<pos:position pos:line="24" pos:column="90"/></operator><call><name pos:line="24" pos:column="90">image<pos:position pos:line="24" pos:column="95"/></name><argument_list pos:line="24" pos:column="95">()<pos:position pos:line="24" pos:column="97"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">snprintf<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">http<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">uri<pos:position pos:line="25" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">url_sz<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">SQUIDSBUFPH<pos:position pos:line="25" pos:column="48"/></name> <literal type="string" pos:line="25" pos:column="49">"://%s:%d"<pos:position pos:line="25" pos:column="59"/></literal> <name pos:line="25" pos:column="60">SQUIDSBUFPH<pos:position pos:line="25" pos:column="71"/></name></expr></argument>,
                 <argument><expr><call><name pos:line="26" pos:column="18">SQUIDSBUFPRINT<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">scheme<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr></argument>,
                 <argument><expr><name pos:line="27" pos:column="18">ipbuf<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><call><name><name pos:line="27" pos:column="25">http<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">getConn<pos:position pos:line="27" pos:column="38"/></name></name><argument_list pos:line="27" pos:column="38">()<pos:position pos:line="27" pos:column="40"/></argument_list></call><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><call><name><name pos:line="27" pos:column="42">clientConnection<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">local<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">.<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="66">port<pos:position pos:line="27" pos:column="70"/></name></name><argument_list pos:line="27" pos:column="70">()<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="74">SQUIDSBUFPRINT<pos:position pos:line="27" pos:column="88"/></name><argument_list pos:line="27" pos:column="88">(<argument><expr><call><name><name pos:line="27" pos:column="89">hp<pos:position pos:line="27" pos:column="91"/></name><operator pos:line="27" pos:column="91">-&gt;<pos:position pos:line="27" pos:column="96"/></operator><name pos:line="27" pos:column="93">requestUri<pos:position pos:line="27" pos:column="103"/></name></name><argument_list pos:line="27" pos:column="103">()<pos:position pos:line="27" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="108"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">33<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">5<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"TRANSPARENT REWRITE: "<pos:position pos:line="28" pos:column="46"/></literal> <operator pos:line="28" pos:column="47">&lt;&lt;<pos:position pos:line="28" pos:column="55"/></operator> <name><name pos:line="28" pos:column="50">http<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">-&gt;<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="56">uri<pos:position pos:line="28" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1436_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">__stdcall<pos:position pos:line="1" pos:column="30"/></name></type>
<name pos:line="2" pos:column="1">ipc_thread_1<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">void<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">in_params<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">t1<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">t2<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">t3<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">retval<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">-<pos:position pos:line="4" pos:column="31"/></operator><literal type="number" pos:line="4" pos:column="31">1<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name><name pos:line="5" pos:column="9">p2c<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><literal type="number" pos:line="5" pos:column="13">2<pos:position pos:line="5" pos:column="14"/></literal></expr>]<pos:position pos:line="5" pos:column="15"/></index></name> <init pos:line="5" pos:column="16">= <expr><block pos:line="5" pos:column="18">{<expr><operator pos:line="5" pos:column="19">-<pos:position pos:line="5" pos:column="20"/></operator><literal type="number" pos:line="5" pos:column="20">1<pos:position pos:line="5" pos:column="21"/></literal></expr>, <expr><operator pos:line="5" pos:column="23">-<pos:position pos:line="5" pos:column="24"/></operator><literal type="number" pos:line="5" pos:column="24">1<pos:position pos:line="5" pos:column="25"/></literal></expr>}<pos:position pos:line="5" pos:column="26"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name><name pos:line="6" pos:column="9">c2p<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><literal type="number" pos:line="6" pos:column="13">2<pos:position pos:line="6" pos:column="14"/></literal></expr>]<pos:position pos:line="6" pos:column="15"/></index></name> <init pos:line="6" pos:column="16">= <expr><block pos:line="6" pos:column="18">{<expr><operator pos:line="6" pos:column="19">-<pos:position pos:line="6" pos:column="20"/></operator><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal></expr>, <expr><operator pos:line="6" pos:column="23">-<pos:position pos:line="6" pos:column="24"/></operator><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>}<pos:position pos:line="6" pos:column="26"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HANDLE<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">hProcess<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="29">thread<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">pid_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">pid<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><operator pos:line="8" pos:column="17">-<pos:position pos:line="8" pos:column="18"/></operator><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">thread_params<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">thread_params<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">ssize_t<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">x<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">fd<pos:position pos:line="12" pos:column="11"/></name> <init pos:line="12" pos:column="12">= <expr><operator pos:line="12" pos:column="14">-<pos:position pos:line="12" pos:column="15"/></operator><literal type="number" pos:line="12" pos:column="15">1<pos:position pos:line="12" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">str<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">STARTUPINFO<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">si<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">PROCESS_INFORMATION<pos:position pos:line="15" pos:column="24"/></name></type> <name pos:line="15" pos:column="25">pi<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">long<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">F<pos:position pos:line="16" pos:column="11"/></name></decl>;<pos:position pos:line="16" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">prfd_ipc<pos:position pos:line="17" pos:column="17"/></name> <init pos:line="17" pos:column="18">= <expr><operator pos:line="17" pos:column="20">-<pos:position pos:line="17" pos:column="21"/></operator><literal type="number" pos:line="17" pos:column="21">1<pos:position pos:line="17" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="24">pwfd_ipc<pos:position pos:line="17" pos:column="32"/></name> <init pos:line="17" pos:column="33">= <expr><operator pos:line="17" pos:column="35">-<pos:position pos:line="17" pos:column="36"/></operator><literal type="number" pos:line="17" pos:column="36">1<pos:position pos:line="17" pos:column="37"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="39">crfd_ipc<pos:position pos:line="17" pos:column="47"/></name> <init pos:line="17" pos:column="48">= <expr><operator pos:line="17" pos:column="50">-<pos:position pos:line="17" pos:column="51"/></operator><literal type="number" pos:line="17" pos:column="51">1<pos:position pos:line="17" pos:column="52"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="54">cwfd_ipc<pos:position pos:line="17" pos:column="62"/></name> <init pos:line="17" pos:column="63">= <expr><operator pos:line="17" pos:column="65">-<pos:position pos:line="17" pos:column="66"/></operator><literal type="number" pos:line="17" pos:column="66">1<pos:position pos:line="17" pos:column="67"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">prog<pos:position pos:line="18" pos:column="15"/></name> <init pos:line="18" pos:column="16">= <expr><name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="25">buf1<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><name pos:line="18" pos:column="32">NULL<pos:position pos:line="18" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="37"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">Ip<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">::<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">Address<pos:position pos:line="20" pos:column="16"/></name></name></type> <name pos:line="20" pos:column="17">PS_ipc<pos:position pos:line="20" pos:column="23"/></name></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">Ip<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">::<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">Address<pos:position pos:line="21" pos:column="16"/></name></name></type> <name pos:line="21" pos:column="17">CS_ipc<pos:position pos:line="21" pos:column="23"/></name></decl>;<pos:position pos:line="21" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="22" pos:column="5">struct<pos:position pos:line="22" pos:column="11"/></name> <name pos:line="22" pos:column="12">addrinfo<pos:position pos:line="22" pos:column="20"/></name></name> <modifier pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></modifier></type><name pos:line="22" pos:column="22">aiPS_ipc<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">= <expr><name pos:line="22" pos:column="33">NULL<pos:position pos:line="22" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="23" pos:column="5">struct<pos:position pos:line="23" pos:column="11"/></name> <name pos:line="23" pos:column="12">addrinfo<pos:position pos:line="23" pos:column="20"/></name></name> <modifier pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></modifier></type><name pos:line="23" pos:column="22">aiCS_ipc<pos:position pos:line="23" pos:column="30"/></name> <init pos:line="23" pos:column="31">= <expr><name pos:line="23" pos:column="33">NULL<pos:position pos:line="23" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="25" pos:column="5">struct<pos:position pos:line="25" pos:column="11"/></name> <name pos:line="25" pos:column="12">ipc_params<pos:position pos:line="25" pos:column="22"/></name></name> <modifier pos:line="25" pos:column="23">*<pos:position pos:line="25" pos:column="24"/></modifier></type><name pos:line="25" pos:column="24">params<pos:position pos:line="25" pos:column="30"/></name> <init pos:line="25" pos:column="31">= <expr><operator pos:line="25" pos:column="33">(<pos:position pos:line="25" pos:column="34"/></operator>struct <name pos:line="25" pos:column="41">ipc_params<pos:position pos:line="25" pos:column="51"/></name> <operator pos:line="25" pos:column="52">*<pos:position pos:line="25" pos:column="53"/></operator><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator> <name pos:line="25" pos:column="55">in_params<pos:position pos:line="25" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">type<pos:position pos:line="26" pos:column="13"/></name> <init pos:line="26" pos:column="14">= <expr><name><name pos:line="26" pos:column="16">params<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">type<pos:position pos:line="26" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">crfd<pos:position pos:line="27" pos:column="13"/></name> <init pos:line="27" pos:column="14">= <expr><name><name pos:line="27" pos:column="16">params<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">crfd<pos:position pos:line="27" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">int<pos:position pos:line="28" pos:column="8"/></name></type> <name pos:line="28" pos:column="9">cwfd<pos:position pos:line="28" pos:column="13"/></name> <init pos:line="28" pos:column="14">= <expr><name><name pos:line="28" pos:column="16">params<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">cwfd<pos:position pos:line="28" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="28" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name> <modifier pos:line="29" pos:column="10">*<pos:position pos:line="29" pos:column="11"/></modifier><modifier pos:line="29" pos:column="11">*<pos:position pos:line="29" pos:column="12"/></modifier></type><name pos:line="29" pos:column="12">args<pos:position pos:line="29" pos:column="16"/></name> <init pos:line="29" pos:column="17">= <expr><name><name pos:line="29" pos:column="19">params<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">args<pos:position pos:line="29" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="32"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">Ip<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">::<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">Address<pos:position pos:line="31" pos:column="16"/></name></name></type> <name pos:line="31" pos:column="17">PS<pos:position pos:line="31" pos:column="19"/></name> <init pos:line="31" pos:column="20">= <expr><name><name pos:line="31" pos:column="22">params<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">PS<pos:position pos:line="31" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="32" pos:column="5">Ip<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">::<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="9">Address<pos:position pos:line="32" pos:column="16"/></name></name></type> <name pos:line="32" pos:column="17">local_addr<pos:position pos:line="32" pos:column="27"/></name> <init pos:line="32" pos:column="28">= <expr><name><name pos:line="32" pos:column="30">params<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">local_addr<pos:position pos:line="32" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="49"/></decl_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">buf1<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">char<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">*<pos:position pos:line="34" pos:column="19"/></operator><operator pos:line="34" pos:column="19">)<pos:position pos:line="34" pos:column="20"/></operator><call><name pos:line="34" pos:column="20">xcalloc<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><literal type="number" pos:line="34" pos:column="28">1<pos:position pos:line="34" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="31">8192<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">strcpy<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name pos:line="35" pos:column="12">buf1<pos:position pos:line="35" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="18">params<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">prog<pos:position pos:line="35" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">prog<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">strtok<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">buf1<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="25">w_space<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">str<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">strrchr<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">prog<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="30">'/'<pos:position pos:line="38" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call><operator pos:line="38" pos:column="34">)<pos:position pos:line="38" pos:column="35"/></operator></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="9">prog<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <operator pos:line="39" pos:column="16">++<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">str<pos:position pos:line="39" pos:column="21"/></name></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">str<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">strrchr<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">prog<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="30">'\\'<pos:position pos:line="41" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call><operator pos:line="41" pos:column="35">)<pos:position pos:line="41" pos:column="36"/></operator></expr>)<pos:position pos:line="41" pos:column="37"/></condition><then pos:line="41" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">prog<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <operator pos:line="42" pos:column="16">++<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">str<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">prog<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <call><name pos:line="44" pos:column="12">xstrdup<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">prog<pos:position pos:line="44" pos:column="24"/></name></expr></argument>)<pos:position pos:line="44" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">type<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">==<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">IPC_TCP_SOCKET<pos:position pos:line="46" pos:column="31"/></name></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32"> <block pos:line="46" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">debugs<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><literal type="number" pos:line="47" pos:column="16">54<pos:position pos:line="47" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="20">3<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"ipcCreate: calling accept on FD "<pos:position pos:line="47" pos:column="57"/></literal> <operator pos:line="47" pos:column="58">&lt;&lt;<pos:position pos:line="47" pos:column="66"/></operator> <name pos:line="47" pos:column="61">crfd<pos:position pos:line="47" pos:column="65"/></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">fd<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <call><name pos:line="49" pos:column="19">accept<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">crfd<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="32">NULL<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">NULL<pos:position pos:line="49" pos:column="42"/></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call><operator pos:line="49" pos:column="43">)<pos:position pos:line="49" pos:column="44"/></operator> <operator pos:line="49" pos:column="45">&lt;<pos:position pos:line="49" pos:column="49"/></operator> <literal type="number" pos:line="49" pos:column="47">0<pos:position pos:line="49" pos:column="48"/></literal></expr>)<pos:position pos:line="49" pos:column="49"/></condition><then pos:line="49" pos:column="49"> <block pos:line="49" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">debugs<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><literal type="number" pos:line="50" pos:column="20">54<pos:position pos:line="50" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="24">DBG_CRITICAL<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="38">"ipcCreate: FD "<pos:position pos:line="50" pos:column="54"/></literal> <operator pos:line="50" pos:column="55">&lt;&lt;<pos:position pos:line="50" pos:column="63"/></operator> <name pos:line="50" pos:column="58">crfd<pos:position pos:line="50" pos:column="62"/></name> <operator pos:line="50" pos:column="63">&lt;&lt;<pos:position pos:line="50" pos:column="71"/></operator> <literal type="string" pos:line="50" pos:column="66">" accept: "<pos:position pos:line="50" pos:column="77"/></literal> <operator pos:line="50" pos:column="78">&lt;&lt;<pos:position pos:line="50" pos:column="86"/></operator> <call><name pos:line="50" pos:column="81">xstrerror<pos:position pos:line="50" pos:column="90"/></name><argument_list pos:line="50" pos:column="90">()<pos:position pos:line="50" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="94"/></expr_stmt>
            <goto pos:line="51" pos:column="13">goto <name pos:line="51" pos:column="18">cleanup<pos:position pos:line="51" pos:column="25"/></name>;<pos:position pos:line="51" pos:column="26"/></goto>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">54<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="20">3<pos:position pos:line="54" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"ipcCreate: CHILD accepted new FD "<pos:position pos:line="54" pos:column="58"/></literal> <operator pos:line="54" pos:column="59">&lt;&lt;<pos:position pos:line="54" pos:column="67"/></operator> <name pos:line="54" pos:column="62">fd<pos:position pos:line="54" pos:column="64"/></name></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">comm_close<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">crfd<pos:position pos:line="55" pos:column="24"/></name></expr></argument>)<pos:position pos:line="55" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">snprintf<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">buf1<pos:position pos:line="56" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="24">8191<pos:position pos:line="56" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="30">"%s CHILD socket"<pos:position pos:line="56" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="49">prog<pos:position pos:line="56" pos:column="53"/></name></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">fd_open<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">fd<pos:position pos:line="57" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="21">FD_SOCKET<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="32">buf1<pos:position pos:line="57" pos:column="36"/></name></expr></argument>)<pos:position pos:line="57" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">fd_table<pos:position pos:line="58" pos:column="17"/></name><index pos:line="58" pos:column="17">[<expr><name pos:line="58" pos:column="18">fd<pos:position pos:line="58" pos:column="20"/></name></expr>]<pos:position pos:line="58" pos:column="21"/></index></name><operator pos:line="58" pos:column="21">.<pos:position pos:line="58" pos:column="22"/></operator><name><name pos:line="58" pos:column="22">flags<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">.<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">ipc<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <literal type="number" pos:line="58" pos:column="34">1<pos:position pos:line="58" pos:column="35"/></literal></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">cwfd<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <name pos:line="59" pos:column="16">crfd<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <name pos:line="59" pos:column="23">fd<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then> <elseif pos:line="60" pos:column="7">else <if pos:line="60" pos:column="12">if <condition pos:line="60" pos:column="15">(<expr><name pos:line="60" pos:column="16">type<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">==<pos:position pos:line="60" pos:column="23"/></operator> <name pos:line="60" pos:column="24">IPC_UDP_SOCKET<pos:position pos:line="60" pos:column="38"/></name></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39"> <block pos:line="60" pos:column="40">{
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">comm_connect_addr<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">crfd<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="37">params<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">PS<pos:position pos:line="61" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call> <operator pos:line="61" pos:column="49">==<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="52">COMM_ERROR<pos:position pos:line="61" pos:column="62"/></name></expr>)<pos:position pos:line="61" pos:column="63"/></condition><then pos:line="61" pos:column="63">
            <block type="pseudo"><goto pos:line="62" pos:column="13">goto <name pos:line="62" pos:column="18">cleanup<pos:position pos:line="62" pos:column="25"/></name>;<pos:position pos:line="62" pos:column="26"/></goto></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="65" pos:column="5">x<pos:position pos:line="65" pos:column="6"/></name> <operator pos:line="65" pos:column="7">=<pos:position pos:line="65" pos:column="8"/></operator> <call><name pos:line="65" pos:column="9">send<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">cwfd<pos:position pos:line="65" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="20">(<pos:position pos:line="65" pos:column="21"/></operator><specifier pos:line="65" pos:column="21">const<pos:position pos:line="65" pos:column="26"/></specifier> <name pos:line="65" pos:column="27">void<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">*<pos:position pos:line="65" pos:column="33"/></operator><operator pos:line="65" pos:column="33">)<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">hello_string<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="48">strlen<pos:position pos:line="65" pos:column="54"/></name><argument_list pos:line="65" pos:column="54">(<argument><expr><name pos:line="65" pos:column="55">hello_string<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call> <operator pos:line="65" pos:column="69">+<pos:position pos:line="65" pos:column="70"/></operator> <literal type="number" pos:line="65" pos:column="71">1<pos:position pos:line="65" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="74">0<pos:position pos:line="65" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></expr_stmt>

    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">x<pos:position pos:line="67" pos:column="10"/></name> <operator pos:line="67" pos:column="11">&lt;<pos:position pos:line="67" pos:column="15"/></operator> <literal type="number" pos:line="67" pos:column="13">0<pos:position pos:line="67" pos:column="14"/></literal></expr>)<pos:position pos:line="67" pos:column="15"/></condition><then pos:line="67" pos:column="15"> <block pos:line="67" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">debugs<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><literal type="number" pos:line="68" pos:column="16">54<pos:position pos:line="68" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="20">DBG_CRITICAL<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="34">"sendto FD "<pos:position pos:line="68" pos:column="46"/></literal> <operator pos:line="68" pos:column="47">&lt;&lt;<pos:position pos:line="68" pos:column="55"/></operator> <name pos:line="68" pos:column="50">cwfd<pos:position pos:line="68" pos:column="54"/></name> <operator pos:line="68" pos:column="55">&lt;&lt;<pos:position pos:line="68" pos:column="63"/></operator> <literal type="string" pos:line="68" pos:column="58">": "<pos:position pos:line="68" pos:column="62"/></literal> <operator pos:line="68" pos:column="63">&lt;&lt;<pos:position pos:line="68" pos:column="71"/></operator> <call><name pos:line="68" pos:column="66">xstrerror<pos:position pos:line="68" pos:column="75"/></name><argument_list pos:line="68" pos:column="75">()<pos:position pos:line="68" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debugs<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="number" pos:line="69" pos:column="16">54<pos:position pos:line="69" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="20">DBG_CRITICAL<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="34">"ipcCreate: CHILD: hello write test failed"<pos:position pos:line="69" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="79"/></expr_stmt>
        <goto pos:line="70" pos:column="9">goto <name pos:line="70" pos:column="14">cleanup<pos:position pos:line="70" pos:column="21"/></name>;<pos:position pos:line="70" pos:column="22"/></goto>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">PutEnvironment<pos:position pos:line="73" pos:column="19"/></name><argument_list pos:line="73" pos:column="19">()<pos:position pos:line="73" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">memset<pos:position pos:line="74" pos:column="11"/></name><argument_list pos:line="74" pos:column="11">(<argument><expr><name pos:line="74" pos:column="12">buf1<pos:position pos:line="74" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="18">'\0'<pos:position pos:line="74" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="24">sizeof<argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">buf1<pos:position pos:line="74" pos:column="35"/></name></expr></argument>)<pos:position pos:line="74" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="75" pos:column="5">x<pos:position pos:line="75" pos:column="6"/></name> <operator pos:line="75" pos:column="7">=<pos:position pos:line="75" pos:column="8"/></operator> <call><name pos:line="75" pos:column="9">recv<pos:position pos:line="75" pos:column="13"/></name><argument_list pos:line="75" pos:column="13">(<argument><expr><name pos:line="75" pos:column="14">crfd<pos:position pos:line="75" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="20">(<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="21">void<pos:position pos:line="75" pos:column="25"/></name> <operator pos:line="75" pos:column="26">*<pos:position pos:line="75" pos:column="27"/></operator><operator pos:line="75" pos:column="27">)<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">buf1<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="34">8191<pos:position pos:line="75" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="40">0<pos:position pos:line="75" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>

    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">x<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">&lt;<pos:position pos:line="77" pos:column="15"/></operator> <literal type="number" pos:line="77" pos:column="13">0<pos:position pos:line="77" pos:column="14"/></literal></expr>)<pos:position pos:line="77" pos:column="15"/></condition><then pos:line="77" pos:column="15"> <block pos:line="77" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">debugs<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><literal type="number" pos:line="78" pos:column="16">54<pos:position pos:line="78" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="20">DBG_CRITICAL<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="34">"ipcCreate: CHILD: OK read test failed"<pos:position pos:line="78" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">debugs<pos:position pos:line="79" pos:column="15"/></name><argument_list pos:line="79" pos:column="15">(<argument><expr><literal type="number" pos:line="79" pos:column="16">54<pos:position pos:line="79" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="20">DBG_CRITICAL<pos:position pos:line="79" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="34">"--&gt; read: "<pos:position pos:line="79" pos:column="49"/></literal> <operator pos:line="79" pos:column="47">&lt;&lt;<pos:position pos:line="79" pos:column="55"/></operator> <call><name pos:line="79" pos:column="50">xstrerror<pos:position pos:line="79" pos:column="59"/></name><argument_list pos:line="79" pos:column="59">()<pos:position pos:line="79" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="63"/></expr_stmt>
        <goto pos:line="80" pos:column="9">goto <name pos:line="80" pos:column="14">cleanup<pos:position pos:line="80" pos:column="21"/></name>;<pos:position pos:line="80" pos:column="22"/></goto>
    }<pos:position pos:line="81" pos:column="6"/></block></then> <elseif pos:line="81" pos:column="7">else <if pos:line="81" pos:column="12">if <condition pos:line="81" pos:column="15">(<expr><call><name pos:line="81" pos:column="16">strcmp<pos:position pos:line="81" pos:column="22"/></name><argument_list pos:line="81" pos:column="22">(<argument><expr><name pos:line="81" pos:column="23">buf1<pos:position pos:line="81" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="29">ok_string<pos:position pos:line="81" pos:column="38"/></name></expr></argument>)<pos:position pos:line="81" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="40"/></condition><then pos:line="81" pos:column="40"> <block pos:line="81" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">debugs<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><literal type="number" pos:line="82" pos:column="16">54<pos:position pos:line="82" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="20">DBG_CRITICAL<pos:position pos:line="82" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="34">"ipcCreate: CHILD: OK read test failed"<pos:position pos:line="82" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">debugs<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><literal type="number" pos:line="83" pos:column="16">54<pos:position pos:line="83" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="20">DBG_CRITICAL<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="34">"--&gt; read returned "<pos:position pos:line="83" pos:column="57"/></literal> <operator pos:line="83" pos:column="55">&lt;&lt;<pos:position pos:line="83" pos:column="63"/></operator> <name pos:line="83" pos:column="58">x<pos:position pos:line="83" pos:column="59"/></name></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">debugs<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><literal type="number" pos:line="84" pos:column="16">54<pos:position pos:line="84" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="20">DBG_CRITICAL<pos:position pos:line="84" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="34">"--&gt; got '"<pos:position pos:line="84" pos:column="48"/></literal> <operator pos:line="84" pos:column="46">&lt;&lt;<pos:position pos:line="84" pos:column="54"/></operator> <call><name pos:line="84" pos:column="49">rfc1738_escape<pos:position pos:line="84" pos:column="63"/></name><argument_list pos:line="84" pos:column="63">(<argument><expr><name pos:line="84" pos:column="64">hello_buf<pos:position pos:line="84" pos:column="73"/></name></expr></argument>)<pos:position pos:line="84" pos:column="74"/></argument_list></call> <operator pos:line="84" pos:column="75">&lt;&lt;<pos:position pos:line="84" pos:column="83"/></operator> <literal type="string" pos:line="84" pos:column="78">"'"<pos:position pos:line="84" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="83"/></expr_stmt>
        <goto pos:line="85" pos:column="9">goto <name pos:line="85" pos:column="14">cleanup<pos:position pos:line="85" pos:column="21"/></name>;<pos:position pos:line="85" pos:column="22"/></goto>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="88" pos:column="5">/* assign file descriptors to child process */</comment>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><call><name pos:line="89" pos:column="9">_pipe<pos:position pos:line="89" pos:column="14"/></name><argument_list pos:line="89" pos:column="14">(<argument><expr><name pos:line="89" pos:column="15">p2c<pos:position pos:line="89" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="20">1024<pos:position pos:line="89" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="26">_O_BINARY<pos:position pos:line="89" pos:column="35"/></name> <operator pos:line="89" pos:column="36">|<pos:position pos:line="89" pos:column="37"/></operator> <name pos:line="89" pos:column="38">_O_NOINHERIT<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></call> <operator pos:line="89" pos:column="52">&lt;<pos:position pos:line="89" pos:column="56"/></operator> <literal type="number" pos:line="89" pos:column="54">0<pos:position pos:line="89" pos:column="55"/></literal></expr>)<pos:position pos:line="89" pos:column="56"/></condition><then pos:line="89" pos:column="56"> <block pos:line="89" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">debugs<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><literal type="number" pos:line="90" pos:column="16">54<pos:position pos:line="90" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="20">DBG_CRITICAL<pos:position pos:line="90" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="34">"ipcCreate: CHILD: pipe: "<pos:position pos:line="90" pos:column="60"/></literal> <operator pos:line="90" pos:column="61">&lt;&lt;<pos:position pos:line="90" pos:column="69"/></operator> <call><name pos:line="90" pos:column="64">xstrerror<pos:position pos:line="90" pos:column="73"/></name><argument_list pos:line="90" pos:column="73">()<pos:position pos:line="90" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">ipcSend<pos:position pos:line="91" pos:column="16"/></name><argument_list pos:line="91" pos:column="16">(<argument><expr><name pos:line="91" pos:column="17">cwfd<pos:position pos:line="91" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="23">err_string<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="35">strlen<pos:position pos:line="91" pos:column="41"/></name><argument_list pos:line="91" pos:column="41">(<argument><expr><name pos:line="91" pos:column="42">err_string<pos:position pos:line="91" pos:column="52"/></name></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
        <goto pos:line="92" pos:column="9">goto <name pos:line="92" pos:column="14">cleanup<pos:position pos:line="92" pos:column="21"/></name>;<pos:position pos:line="92" pos:column="22"/></goto>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><call><name pos:line="95" pos:column="9">_pipe<pos:position pos:line="95" pos:column="14"/></name><argument_list pos:line="95" pos:column="14">(<argument><expr><name pos:line="95" pos:column="15">c2p<pos:position pos:line="95" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="20">1024<pos:position pos:line="95" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="26">_O_BINARY<pos:position pos:line="95" pos:column="35"/></name> <operator pos:line="95" pos:column="36">|<pos:position pos:line="95" pos:column="37"/></operator> <name pos:line="95" pos:column="38">_O_NOINHERIT<pos:position pos:line="95" pos:column="50"/></name></expr></argument>)<pos:position pos:line="95" pos:column="51"/></argument_list></call> <operator pos:line="95" pos:column="52">&lt;<pos:position pos:line="95" pos:column="56"/></operator> <literal type="number" pos:line="95" pos:column="54">0<pos:position pos:line="95" pos:column="55"/></literal></expr>)<pos:position pos:line="95" pos:column="56"/></condition><then pos:line="95" pos:column="56"> <block pos:line="95" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">debugs<pos:position pos:line="96" pos:column="15"/></name><argument_list pos:line="96" pos:column="15">(<argument><expr><literal type="number" pos:line="96" pos:column="16">54<pos:position pos:line="96" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="20">DBG_CRITICAL<pos:position pos:line="96" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="34">"ipcCreate: CHILD: pipe: "<pos:position pos:line="96" pos:column="60"/></literal> <operator pos:line="96" pos:column="61">&lt;&lt;<pos:position pos:line="96" pos:column="69"/></operator> <call><name pos:line="96" pos:column="64">xstrerror<pos:position pos:line="96" pos:column="73"/></name><argument_list pos:line="96" pos:column="73">()<pos:position pos:line="96" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">ipcSend<pos:position pos:line="97" pos:column="16"/></name><argument_list pos:line="97" pos:column="16">(<argument><expr><name pos:line="97" pos:column="17">cwfd<pos:position pos:line="97" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="23">err_string<pos:position pos:line="97" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="35">strlen<pos:position pos:line="97" pos:column="41"/></name><argument_list pos:line="97" pos:column="41">(<argument><expr><name pos:line="97" pos:column="42">err_string<pos:position pos:line="97" pos:column="52"/></name></expr></argument>)<pos:position pos:line="97" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="55"/></expr_stmt>
        <goto pos:line="98" pos:column="9">goto <name pos:line="98" pos:column="14">cleanup<pos:position pos:line="98" pos:column="21"/></name>;<pos:position pos:line="98" pos:column="22"/></goto>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><name pos:line="101" pos:column="9">type<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">==<pos:position pos:line="101" pos:column="16"/></operator> <name pos:line="101" pos:column="17">IPC_UDP_SOCKET<pos:position pos:line="101" pos:column="31"/></name></expr>)<pos:position pos:line="101" pos:column="32"/></condition><then pos:line="101" pos:column="32"> <block pos:line="101" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="102" pos:column="9">snprintf<pos:position pos:line="102" pos:column="17"/></name><argument_list pos:line="102" pos:column="17">(<argument><expr><name pos:line="102" pos:column="18">buf1<pos:position pos:line="102" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="24">8192<pos:position pos:line="102" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="30">"%s(%ld) &lt;-&gt; ipc CHILD socket"<pos:position pos:line="102" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="62">prog<pos:position pos:line="102" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="68">-<pos:position pos:line="102" pos:column="69"/></operator><literal type="number" pos:line="102" pos:column="69">1L<pos:position pos:line="102" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="103" pos:column="9">crfd_ipc<pos:position pos:line="103" pos:column="17"/></name> <operator pos:line="103" pos:column="18">=<pos:position pos:line="103" pos:column="19"/></operator> <name pos:line="103" pos:column="20">cwfd_ipc<pos:position pos:line="103" pos:column="28"/></name> <operator pos:line="103" pos:column="29">=<pos:position pos:line="103" pos:column="30"/></operator> <call><name pos:line="103" pos:column="31">comm_open<pos:position pos:line="103" pos:column="40"/></name><argument_list pos:line="103" pos:column="40">(<argument><expr><name pos:line="103" pos:column="41">SOCK_DGRAM<pos:position pos:line="103" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="53">IPPROTO_UDP<pos:position pos:line="103" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="66">local_addr<pos:position pos:line="103" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="78">0<pos:position pos:line="103" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="81">buf1<pos:position pos:line="103" pos:column="85"/></name></expr></argument>)<pos:position pos:line="103" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="87"/></expr_stmt>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">crfd_ipc<pos:position pos:line="105" pos:column="21"/></name> <operator pos:line="105" pos:column="22">&lt;<pos:position pos:line="105" pos:column="26"/></operator> <literal type="number" pos:line="105" pos:column="24">0<pos:position pos:line="105" pos:column="25"/></literal></expr>)<pos:position pos:line="105" pos:column="26"/></condition><then pos:line="105" pos:column="26"> <block pos:line="105" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">debugs<pos:position pos:line="106" pos:column="19"/></name><argument_list pos:line="106" pos:column="19">(<argument><expr><literal type="number" pos:line="106" pos:column="20">54<pos:position pos:line="106" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="24">DBG_CRITICAL<pos:position pos:line="106" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="38">"ipcCreate: CHILD: Failed to create child FD for "<pos:position pos:line="106" pos:column="88"/></literal> <operator pos:line="106" pos:column="89">&lt;&lt;<pos:position pos:line="106" pos:column="97"/></operator> <name pos:line="106" pos:column="92">prog<pos:position pos:line="106" pos:column="96"/></name> <operator pos:line="106" pos:column="97">&lt;&lt;<pos:position pos:line="106" pos:column="105"/></operator> <literal type="string" pos:line="106" pos:column="100">"."<pos:position pos:line="106" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">ipcSend<pos:position pos:line="107" pos:column="20"/></name><argument_list pos:line="107" pos:column="20">(<argument><expr><name pos:line="107" pos:column="21">cwfd<pos:position pos:line="107" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="27">err_string<pos:position pos:line="107" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="39">strlen<pos:position pos:line="107" pos:column="45"/></name><argument_list pos:line="107" pos:column="45">(<argument><expr><name pos:line="107" pos:column="46">err_string<pos:position pos:line="107" pos:column="56"/></name></expr></argument>)<pos:position pos:line="107" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="59"/></expr_stmt>
            <goto pos:line="108" pos:column="13">goto <name pos:line="108" pos:column="18">cleanup<pos:position pos:line="108" pos:column="25"/></name>;<pos:position pos:line="108" pos:column="26"/></goto>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="111" pos:column="9">snprintf<pos:position pos:line="111" pos:column="17"/></name><argument_list pos:line="111" pos:column="17">(<argument><expr><name pos:line="111" pos:column="18">buf1<pos:position pos:line="111" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="24">8192<pos:position pos:line="111" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="30">"%s(%ld) &lt;-&gt; ipc PARENT socket"<pos:position pos:line="111" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="63">prog<pos:position pos:line="111" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="69">-<pos:position pos:line="111" pos:column="70"/></operator><literal type="number" pos:line="111" pos:column="70">1L<pos:position pos:line="111" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="112" pos:column="9">prfd_ipc<pos:position pos:line="112" pos:column="17"/></name> <operator pos:line="112" pos:column="18">=<pos:position pos:line="112" pos:column="19"/></operator> <name pos:line="112" pos:column="20">pwfd_ipc<pos:position pos:line="112" pos:column="28"/></name> <operator pos:line="112" pos:column="29">=<pos:position pos:line="112" pos:column="30"/></operator> <call><name pos:line="112" pos:column="31">comm_open<pos:position pos:line="112" pos:column="40"/></name><argument_list pos:line="112" pos:column="40">(<argument><expr><name pos:line="112" pos:column="41">SOCK_DGRAM<pos:position pos:line="112" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="53">IPPROTO_UDP<pos:position pos:line="112" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="66">local_addr<pos:position pos:line="112" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="78">0<pos:position pos:line="112" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="81">buf1<pos:position pos:line="112" pos:column="85"/></name></expr></argument>)<pos:position pos:line="112" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="87"/></expr_stmt>

        <if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name pos:line="114" pos:column="13">pwfd_ipc<pos:position pos:line="114" pos:column="21"/></name> <operator pos:line="114" pos:column="22">&lt;<pos:position pos:line="114" pos:column="26"/></operator> <literal type="number" pos:line="114" pos:column="24">0<pos:position pos:line="114" pos:column="25"/></literal></expr>)<pos:position pos:line="114" pos:column="26"/></condition><then pos:line="114" pos:column="26"> <block pos:line="114" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">debugs<pos:position pos:line="115" pos:column="19"/></name><argument_list pos:line="115" pos:column="19">(<argument><expr><literal type="number" pos:line="115" pos:column="20">54<pos:position pos:line="115" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="24">DBG_CRITICAL<pos:position pos:line="115" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="38">"ipcCreate: CHILD: Failed to create server FD for "<pos:position pos:line="115" pos:column="89"/></literal> <operator pos:line="115" pos:column="90">&lt;&lt;<pos:position pos:line="115" pos:column="98"/></operator> <name pos:line="115" pos:column="93">prog<pos:position pos:line="115" pos:column="97"/></name> <operator pos:line="115" pos:column="98">&lt;&lt;<pos:position pos:line="115" pos:column="106"/></operator> <literal type="string" pos:line="115" pos:column="101">"."<pos:position pos:line="115" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="106"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">ipcSend<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><name pos:line="116" pos:column="21">cwfd<pos:position pos:line="116" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="27">err_string<pos:position pos:line="116" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="116" pos:column="39">strlen<pos:position pos:line="116" pos:column="45"/></name><argument_list pos:line="116" pos:column="45">(<argument><expr><name pos:line="116" pos:column="46">err_string<pos:position pos:line="116" pos:column="56"/></name></expr></argument>)<pos:position pos:line="116" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="59"/></expr_stmt>
            <goto pos:line="117" pos:column="13">goto <name pos:line="117" pos:column="18">cleanup<pos:position pos:line="117" pos:column="25"/></name>;<pos:position pos:line="117" pos:column="26"/></goto>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="120" pos:column="9">Ip<pos:position pos:line="120" pos:column="11"/></name><operator pos:line="120" pos:column="11">::<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="13">Address<pos:position pos:line="120" pos:column="20"/></name><operator pos:line="120" pos:column="20">::<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="22">InitAddrInfo<pos:position pos:line="120" pos:column="34"/></name></name><argument_list pos:line="120" pos:column="34">(<argument><expr><name pos:line="120" pos:column="35">aiPS_ipc<pos:position pos:line="120" pos:column="43"/></name></expr></argument>)<pos:position pos:line="120" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="45"/></expr_stmt>

        <if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><call><name pos:line="122" pos:column="13">getsockname<pos:position pos:line="122" pos:column="24"/></name><argument_list pos:line="122" pos:column="24">(<argument><expr><name pos:line="122" pos:column="25">pwfd_ipc<pos:position pos:line="122" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="35">aiPS_ipc<pos:position pos:line="122" pos:column="43"/></name><operator pos:line="122" pos:column="43">-&gt;<pos:position pos:line="122" pos:column="48"/></operator><name pos:line="122" pos:column="45">ai_addr<pos:position pos:line="122" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="54">&amp;<pos:position pos:line="122" pos:column="59"/></operator><operator pos:line="122" pos:column="55">(<pos:position pos:line="122" pos:column="56"/></operator><name><name pos:line="122" pos:column="56">aiPS_ipc<pos:position pos:line="122" pos:column="64"/></name><operator pos:line="122" pos:column="64">-&gt;<pos:position pos:line="122" pos:column="69"/></operator><name pos:line="122" pos:column="66">ai_addrlen<pos:position pos:line="122" pos:column="76"/></name></name><operator pos:line="122" pos:column="76">)<pos:position pos:line="122" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="122" pos:column="78"/></argument_list></call> <operator pos:line="122" pos:column="79">&lt;<pos:position pos:line="122" pos:column="83"/></operator> <literal type="number" pos:line="122" pos:column="81">0<pos:position pos:line="122" pos:column="82"/></literal></expr>)<pos:position pos:line="122" pos:column="83"/></condition><then pos:line="122" pos:column="83"> <block pos:line="122" pos:column="84">{
            <expr_stmt><expr><call><name pos:line="123" pos:column="13">debugs<pos:position pos:line="123" pos:column="19"/></name><argument_list pos:line="123" pos:column="19">(<argument><expr><literal type="number" pos:line="123" pos:column="20">54<pos:position pos:line="123" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="24">DBG_CRITICAL<pos:position pos:line="123" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="38">"ipcCreate: getsockname: "<pos:position pos:line="123" pos:column="64"/></literal> <operator pos:line="123" pos:column="65">&lt;&lt;<pos:position pos:line="123" pos:column="73"/></operator> <call><name pos:line="123" pos:column="68">xstrerror<pos:position pos:line="123" pos:column="77"/></name><argument_list pos:line="123" pos:column="77">()<pos:position pos:line="123" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="124" pos:column="13">ipcSend<pos:position pos:line="124" pos:column="20"/></name><argument_list pos:line="124" pos:column="20">(<argument><expr><name pos:line="124" pos:column="21">cwfd<pos:position pos:line="124" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="27">err_string<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="124" pos:column="39">strlen<pos:position pos:line="124" pos:column="45"/></name><argument_list pos:line="124" pos:column="45">(<argument><expr><name pos:line="124" pos:column="46">err_string<pos:position pos:line="124" pos:column="56"/></name></expr></argument>)<pos:position pos:line="124" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="125" pos:column="13">Ip<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">::<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="17">Address<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">::<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="26">FreeAddrInfo<pos:position pos:line="125" pos:column="38"/></name></name><argument_list pos:line="125" pos:column="38">(<argument><expr><name pos:line="125" pos:column="39">aiPS_ipc<pos:position pos:line="125" pos:column="47"/></name></expr></argument>)<pos:position pos:line="125" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="49"/></expr_stmt>
            <goto pos:line="126" pos:column="13">goto <name pos:line="126" pos:column="18">cleanup<pos:position pos:line="126" pos:column="25"/></name>;<pos:position pos:line="126" pos:column="26"/></goto>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="129" pos:column="9">PS_ipc<pos:position pos:line="129" pos:column="15"/></name> <operator pos:line="129" pos:column="16">=<pos:position pos:line="129" pos:column="17"/></operator> <operator pos:line="129" pos:column="18">*<pos:position pos:line="129" pos:column="19"/></operator><name pos:line="129" pos:column="19">aiPS_ipc<pos:position pos:line="129" pos:column="27"/></name></expr>;<pos:position pos:line="129" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="130" pos:column="9">Ip<pos:position pos:line="130" pos:column="11"/></name><operator pos:line="130" pos:column="11">::<pos:position pos:line="130" pos:column="13"/></operator><name pos:line="130" pos:column="13">Address<pos:position pos:line="130" pos:column="20"/></name><operator pos:line="130" pos:column="20">::<pos:position pos:line="130" pos:column="22"/></operator><name pos:line="130" pos:column="22">FreeAddrInfo<pos:position pos:line="130" pos:column="34"/></name></name><argument_list pos:line="130" pos:column="34">(<argument><expr><name pos:line="130" pos:column="35">aiPS_ipc<pos:position pos:line="130" pos:column="43"/></name></expr></argument>)<pos:position pos:line="130" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="132" pos:column="9">debugs<pos:position pos:line="132" pos:column="15"/></name><argument_list pos:line="132" pos:column="15">(<argument><expr><literal type="number" pos:line="132" pos:column="16">54<pos:position pos:line="132" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="20">3<pos:position pos:line="132" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="23">"ipcCreate: FD "<pos:position pos:line="132" pos:column="39"/></literal> <operator pos:line="132" pos:column="40">&lt;&lt;<pos:position pos:line="132" pos:column="48"/></operator> <name pos:line="132" pos:column="43">pwfd_ipc<pos:position pos:line="132" pos:column="51"/></name> <operator pos:line="132" pos:column="52">&lt;&lt;<pos:position pos:line="132" pos:column="60"/></operator> <literal type="string" pos:line="132" pos:column="55">" sockaddr "<pos:position pos:line="132" pos:column="67"/></literal> <operator pos:line="132" pos:column="68">&lt;&lt;<pos:position pos:line="132" pos:column="76"/></operator> <name pos:line="132" pos:column="71">PS_ipc<pos:position pos:line="132" pos:column="77"/></name></expr></argument>)<pos:position pos:line="132" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="79"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="134" pos:column="9">Ip<pos:position pos:line="134" pos:column="11"/></name><operator pos:line="134" pos:column="11">::<pos:position pos:line="134" pos:column="13"/></operator><name pos:line="134" pos:column="13">Address<pos:position pos:line="134" pos:column="20"/></name><operator pos:line="134" pos:column="20">::<pos:position pos:line="134" pos:column="22"/></operator><name pos:line="134" pos:column="22">InitAddrInfo<pos:position pos:line="134" pos:column="34"/></name></name><argument_list pos:line="134" pos:column="34">(<argument><expr><name pos:line="134" pos:column="35">aiCS_ipc<pos:position pos:line="134" pos:column="43"/></name></expr></argument>)<pos:position pos:line="134" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="45"/></expr_stmt>

        <if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><call><name pos:line="136" pos:column="13">getsockname<pos:position pos:line="136" pos:column="24"/></name><argument_list pos:line="136" pos:column="24">(<argument><expr><name pos:line="136" pos:column="25">crfd_ipc<pos:position pos:line="136" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="35">aiCS_ipc<pos:position pos:line="136" pos:column="43"/></name><operator pos:line="136" pos:column="43">-&gt;<pos:position pos:line="136" pos:column="48"/></operator><name pos:line="136" pos:column="45">ai_addr<pos:position pos:line="136" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="54">&amp;<pos:position pos:line="136" pos:column="59"/></operator><operator pos:line="136" pos:column="55">(<pos:position pos:line="136" pos:column="56"/></operator><name><name pos:line="136" pos:column="56">aiCS_ipc<pos:position pos:line="136" pos:column="64"/></name><operator pos:line="136" pos:column="64">-&gt;<pos:position pos:line="136" pos:column="69"/></operator><name pos:line="136" pos:column="66">ai_addrlen<pos:position pos:line="136" pos:column="76"/></name></name><operator pos:line="136" pos:column="76">)<pos:position pos:line="136" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="136" pos:column="78"/></argument_list></call> <operator pos:line="136" pos:column="79">&lt;<pos:position pos:line="136" pos:column="83"/></operator> <literal type="number" pos:line="136" pos:column="81">0<pos:position pos:line="136" pos:column="82"/></literal></expr>)<pos:position pos:line="136" pos:column="83"/></condition><then pos:line="136" pos:column="83"> <block pos:line="136" pos:column="84">{
            <expr_stmt><expr><call><name pos:line="137" pos:column="13">debugs<pos:position pos:line="137" pos:column="19"/></name><argument_list pos:line="137" pos:column="19">(<argument><expr><literal type="number" pos:line="137" pos:column="20">54<pos:position pos:line="137" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="24">DBG_CRITICAL<pos:position pos:line="137" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="38">"ipcCreate: getsockname: "<pos:position pos:line="137" pos:column="64"/></literal> <operator pos:line="137" pos:column="65">&lt;&lt;<pos:position pos:line="137" pos:column="73"/></operator> <call><name pos:line="137" pos:column="68">xstrerror<pos:position pos:line="137" pos:column="77"/></name><argument_list pos:line="137" pos:column="77">()<pos:position pos:line="137" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="138" pos:column="13">ipcSend<pos:position pos:line="138" pos:column="20"/></name><argument_list pos:line="138" pos:column="20">(<argument><expr><name pos:line="138" pos:column="21">cwfd<pos:position pos:line="138" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="27">err_string<pos:position pos:line="138" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="138" pos:column="39">strlen<pos:position pos:line="138" pos:column="45"/></name><argument_list pos:line="138" pos:column="45">(<argument><expr><name pos:line="138" pos:column="46">err_string<pos:position pos:line="138" pos:column="56"/></name></expr></argument>)<pos:position pos:line="138" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="139" pos:column="13">Ip<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">::<pos:position pos:line="139" pos:column="17"/></operator><name pos:line="139" pos:column="17">Address<pos:position pos:line="139" pos:column="24"/></name><operator pos:line="139" pos:column="24">::<pos:position pos:line="139" pos:column="26"/></operator><name pos:line="139" pos:column="26">FreeAddrInfo<pos:position pos:line="139" pos:column="38"/></name></name><argument_list pos:line="139" pos:column="38">(<argument><expr><name pos:line="139" pos:column="39">aiCS_ipc<pos:position pos:line="139" pos:column="47"/></name></expr></argument>)<pos:position pos:line="139" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="49"/></expr_stmt>
            <goto pos:line="140" pos:column="13">goto <name pos:line="140" pos:column="18">cleanup<pos:position pos:line="140" pos:column="25"/></name>;<pos:position pos:line="140" pos:column="26"/></goto>
        }<pos:position pos:line="141" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="143" pos:column="9">CS_ipc<pos:position pos:line="143" pos:column="15"/></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <operator pos:line="143" pos:column="18">*<pos:position pos:line="143" pos:column="19"/></operator><name pos:line="143" pos:column="19">aiCS_ipc<pos:position pos:line="143" pos:column="27"/></name></expr>;<pos:position pos:line="143" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="144" pos:column="9">Ip<pos:position pos:line="144" pos:column="11"/></name><operator pos:line="144" pos:column="11">::<pos:position pos:line="144" pos:column="13"/></operator><name pos:line="144" pos:column="13">Address<pos:position pos:line="144" pos:column="20"/></name><operator pos:line="144" pos:column="20">::<pos:position pos:line="144" pos:column="22"/></operator><name pos:line="144" pos:column="22">FreeAddrInfo<pos:position pos:line="144" pos:column="34"/></name></name><argument_list pos:line="144" pos:column="34">(<argument><expr><name pos:line="144" pos:column="35">aiCS_ipc<pos:position pos:line="144" pos:column="43"/></name></expr></argument>)<pos:position pos:line="144" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="146" pos:column="9">debugs<pos:position pos:line="146" pos:column="15"/></name><argument_list pos:line="146" pos:column="15">(<argument><expr><literal type="number" pos:line="146" pos:column="16">54<pos:position pos:line="146" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="20">3<pos:position pos:line="146" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="23">"ipcCreate: FD "<pos:position pos:line="146" pos:column="39"/></literal> <operator pos:line="146" pos:column="40">&lt;&lt;<pos:position pos:line="146" pos:column="48"/></operator> <name pos:line="146" pos:column="43">crfd_ipc<pos:position pos:line="146" pos:column="51"/></name> <operator pos:line="146" pos:column="52">&lt;&lt;<pos:position pos:line="146" pos:column="60"/></operator> <literal type="string" pos:line="146" pos:column="55">" sockaddr "<pos:position pos:line="146" pos:column="67"/></literal> <operator pos:line="146" pos:column="68">&lt;&lt;<pos:position pos:line="146" pos:column="76"/></operator> <name pos:line="146" pos:column="71">CS_ipc<pos:position pos:line="146" pos:column="77"/></name></expr></argument>)<pos:position pos:line="146" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="79"/></expr_stmt>

        <if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><call><name pos:line="148" pos:column="13">comm_connect_addr<pos:position pos:line="148" pos:column="30"/></name><argument_list pos:line="148" pos:column="30">(<argument><expr><name pos:line="148" pos:column="31">pwfd_ipc<pos:position pos:line="148" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="41">CS_ipc<pos:position pos:line="148" pos:column="47"/></name></expr></argument>)<pos:position pos:line="148" pos:column="48"/></argument_list></call> <operator pos:line="148" pos:column="49">==<pos:position pos:line="148" pos:column="51"/></operator> <name pos:line="148" pos:column="52">COMM_ERROR<pos:position pos:line="148" pos:column="62"/></name></expr>)<pos:position pos:line="148" pos:column="63"/></condition><then pos:line="148" pos:column="63"> <block pos:line="148" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">ipcSend<pos:position pos:line="149" pos:column="20"/></name><argument_list pos:line="149" pos:column="20">(<argument><expr><name pos:line="149" pos:column="21">cwfd<pos:position pos:line="149" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="27">err_string<pos:position pos:line="149" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="149" pos:column="39">strlen<pos:position pos:line="149" pos:column="45"/></name><argument_list pos:line="149" pos:column="45">(<argument><expr><name pos:line="149" pos:column="46">err_string<pos:position pos:line="149" pos:column="56"/></name></expr></argument>)<pos:position pos:line="149" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="59"/></expr_stmt>
            <goto pos:line="150" pos:column="13">goto <name pos:line="150" pos:column="18">cleanup<pos:position pos:line="150" pos:column="25"/></name>;<pos:position pos:line="150" pos:column="26"/></goto>
        }<pos:position pos:line="151" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="153" pos:column="9">fd<pos:position pos:line="153" pos:column="11"/></name> <operator pos:line="153" pos:column="12">=<pos:position pos:line="153" pos:column="13"/></operator> <name pos:line="153" pos:column="14">crfd<pos:position pos:line="153" pos:column="18"/></name></expr>;<pos:position pos:line="153" pos:column="19"/></expr_stmt>

        <if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><call><name pos:line="155" pos:column="13">comm_connect_addr<pos:position pos:line="155" pos:column="30"/></name><argument_list pos:line="155" pos:column="30">(<argument><expr><name pos:line="155" pos:column="31">crfd_ipc<pos:position pos:line="155" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="41">PS_ipc<pos:position pos:line="155" pos:column="47"/></name></expr></argument>)<pos:position pos:line="155" pos:column="48"/></argument_list></call> <operator pos:line="155" pos:column="49">==<pos:position pos:line="155" pos:column="51"/></operator> <name pos:line="155" pos:column="52">COMM_ERROR<pos:position pos:line="155" pos:column="62"/></name></expr>)<pos:position pos:line="155" pos:column="63"/></condition><then pos:line="155" pos:column="63"> <block pos:line="155" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="156" pos:column="13">ipcSend<pos:position pos:line="156" pos:column="20"/></name><argument_list pos:line="156" pos:column="20">(<argument><expr><name pos:line="156" pos:column="21">cwfd<pos:position pos:line="156" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="27">err_string<pos:position pos:line="156" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="156" pos:column="39">strlen<pos:position pos:line="156" pos:column="45"/></name><argument_list pos:line="156" pos:column="45">(<argument><expr><name pos:line="156" pos:column="46">err_string<pos:position pos:line="156" pos:column="56"/></name></expr></argument>)<pos:position pos:line="156" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="59"/></expr_stmt>
            <goto pos:line="157" pos:column="13">goto <name pos:line="157" pos:column="18">cleanup<pos:position pos:line="157" pos:column="25"/></name>;<pos:position pos:line="157" pos:column="26"/></goto>
        }<pos:position pos:line="158" pos:column="10"/></block></then></if>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if>				<comment type="block" pos:line="159" pos:column="33">/* IPC_UDP_SOCKET */</comment>

    <expr_stmt><expr><name pos:line="161" pos:column="5">t1<pos:position pos:line="161" pos:column="7"/></name> <operator pos:line="161" pos:column="8">=<pos:position pos:line="161" pos:column="9"/></operator> <call><name pos:line="161" pos:column="10">dup<pos:position pos:line="161" pos:column="13"/></name><argument_list pos:line="161" pos:column="13">(<argument><expr><literal type="number" pos:line="161" pos:column="14">0<pos:position pos:line="161" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="163" pos:column="5">t2<pos:position pos:line="163" pos:column="7"/></name> <operator pos:line="163" pos:column="8">=<pos:position pos:line="163" pos:column="9"/></operator> <call><name pos:line="163" pos:column="10">dup<pos:position pos:line="163" pos:column="13"/></name><argument_list pos:line="163" pos:column="13">(<argument><expr><literal type="number" pos:line="163" pos:column="14">1<pos:position pos:line="163" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="165" pos:column="5">t3<pos:position pos:line="165" pos:column="7"/></name> <operator pos:line="165" pos:column="8">=<pos:position pos:line="165" pos:column="9"/></operator> <call><name pos:line="165" pos:column="10">dup<pos:position pos:line="165" pos:column="13"/></name><argument_list pos:line="165" pos:column="13">(<argument><expr><literal type="number" pos:line="165" pos:column="14">2<pos:position pos:line="165" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="167" pos:column="5">dup2<pos:position pos:line="167" pos:column="9"/></name><argument_list pos:line="167" pos:column="9">(<argument><expr><name><name pos:line="167" pos:column="10">c2p<pos:position pos:line="167" pos:column="13"/></name><index pos:line="167" pos:column="13">[<expr><literal type="number" pos:line="167" pos:column="14">0<pos:position pos:line="167" pos:column="15"/></literal></expr>]<pos:position pos:line="167" pos:column="16"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="18">0<pos:position pos:line="167" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="169" pos:column="5">dup2<pos:position pos:line="169" pos:column="9"/></name><argument_list pos:line="169" pos:column="9">(<argument><expr><name><name pos:line="169" pos:column="10">p2c<pos:position pos:line="169" pos:column="13"/></name><index pos:line="169" pos:column="13">[<expr><literal type="number" pos:line="169" pos:column="14">1<pos:position pos:line="169" pos:column="15"/></literal></expr>]<pos:position pos:line="169" pos:column="16"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="18">1<pos:position pos:line="169" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="171" pos:column="5">dup2<pos:position pos:line="171" pos:column="9"/></name><argument_list pos:line="171" pos:column="9">(<argument><expr><call><name pos:line="171" pos:column="10">fileno<pos:position pos:line="171" pos:column="16"/></name><argument_list pos:line="171" pos:column="16">(<argument><expr><name pos:line="171" pos:column="17">debug_log<pos:position pos:line="171" pos:column="26"/></name></expr></argument>)<pos:position pos:line="171" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="171" pos:column="29">2<pos:position pos:line="171" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="173" pos:column="5">close<pos:position pos:line="173" pos:column="10"/></name><argument_list pos:line="173" pos:column="10">(<argument><expr><name><name pos:line="173" pos:column="11">c2p<pos:position pos:line="173" pos:column="14"/></name><index pos:line="173" pos:column="14">[<expr><literal type="number" pos:line="173" pos:column="15">0<pos:position pos:line="173" pos:column="16"/></literal></expr>]<pos:position pos:line="173" pos:column="17"/></index></name></expr></argument>)<pos:position pos:line="173" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="175" pos:column="5">close<pos:position pos:line="175" pos:column="10"/></name><argument_list pos:line="175" pos:column="10">(<argument><expr><name><name pos:line="175" pos:column="11">p2c<pos:position pos:line="175" pos:column="14"/></name><index pos:line="175" pos:column="14">[<expr><literal type="number" pos:line="175" pos:column="15">1<pos:position pos:line="175" pos:column="16"/></literal></expr>]<pos:position pos:line="175" pos:column="17"/></index></name></expr></argument>)<pos:position pos:line="175" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="177" pos:column="5">commUnsetNonBlocking<pos:position pos:line="177" pos:column="25"/></name><argument_list pos:line="177" pos:column="25">(<argument><expr><name pos:line="177" pos:column="26">fd<pos:position pos:line="177" pos:column="28"/></name></expr></argument>)<pos:position pos:line="177" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="179" pos:column="5">memset<pos:position pos:line="179" pos:column="11"/></name><argument_list pos:line="179" pos:column="11">(<argument><expr><operator pos:line="179" pos:column="12">&amp;<pos:position pos:line="179" pos:column="17"/></operator><name pos:line="179" pos:column="13">si<pos:position pos:line="179" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="17">0<pos:position pos:line="179" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="179" pos:column="20">sizeof<argument_list pos:line="179" pos:column="26">(<argument><expr><name pos:line="179" pos:column="27">STARTUPINFO<pos:position pos:line="179" pos:column="38"/></name></expr></argument>)<pos:position pos:line="179" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="179" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="181" pos:column="5">si<pos:position pos:line="181" pos:column="7"/></name><operator pos:line="181" pos:column="7">.<pos:position pos:line="181" pos:column="8"/></operator><name pos:line="181" pos:column="8">cb<pos:position pos:line="181" pos:column="10"/></name></name> <operator pos:line="181" pos:column="11">=<pos:position pos:line="181" pos:column="12"/></operator> <sizeof pos:line="181" pos:column="13">sizeof<argument_list pos:line="181" pos:column="19">(<argument><expr><name pos:line="181" pos:column="20">STARTUPINFO<pos:position pos:line="181" pos:column="31"/></name></expr></argument>)<pos:position pos:line="181" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="181" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="183" pos:column="5">si<pos:position pos:line="183" pos:column="7"/></name><operator pos:line="183" pos:column="7">.<pos:position pos:line="183" pos:column="8"/></operator><name pos:line="183" pos:column="8">hStdInput<pos:position pos:line="183" pos:column="17"/></name></name> <operator pos:line="183" pos:column="18">=<pos:position pos:line="183" pos:column="19"/></operator> <operator pos:line="183" pos:column="20">(<pos:position pos:line="183" pos:column="21"/></operator><name pos:line="183" pos:column="21">HANDLE<pos:position pos:line="183" pos:column="27"/></name><operator pos:line="183" pos:column="27">)<pos:position pos:line="183" pos:column="28"/></operator> <call><name pos:line="183" pos:column="29">_get_osfhandle<pos:position pos:line="183" pos:column="43"/></name><argument_list pos:line="183" pos:column="43">(<argument><expr><literal type="number" pos:line="183" pos:column="44">0<pos:position pos:line="183" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="185" pos:column="5">si<pos:position pos:line="185" pos:column="7"/></name><operator pos:line="185" pos:column="7">.<pos:position pos:line="185" pos:column="8"/></operator><name pos:line="185" pos:column="8">hStdOutput<pos:position pos:line="185" pos:column="18"/></name></name> <operator pos:line="185" pos:column="19">=<pos:position pos:line="185" pos:column="20"/></operator> <operator pos:line="185" pos:column="21">(<pos:position pos:line="185" pos:column="22"/></operator><name pos:line="185" pos:column="22">HANDLE<pos:position pos:line="185" pos:column="28"/></name><operator pos:line="185" pos:column="28">)<pos:position pos:line="185" pos:column="29"/></operator> <call><name pos:line="185" pos:column="30">_get_osfhandle<pos:position pos:line="185" pos:column="44"/></name><argument_list pos:line="185" pos:column="44">(<argument><expr><literal type="number" pos:line="185" pos:column="45">1<pos:position pos:line="185" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="187" pos:column="5">si<pos:position pos:line="187" pos:column="7"/></name><operator pos:line="187" pos:column="7">.<pos:position pos:line="187" pos:column="8"/></operator><name pos:line="187" pos:column="8">hStdError<pos:position pos:line="187" pos:column="17"/></name></name> <operator pos:line="187" pos:column="18">=<pos:position pos:line="187" pos:column="19"/></operator> <operator pos:line="187" pos:column="20">(<pos:position pos:line="187" pos:column="21"/></operator><name pos:line="187" pos:column="21">HANDLE<pos:position pos:line="187" pos:column="27"/></name><operator pos:line="187" pos:column="27">)<pos:position pos:line="187" pos:column="28"/></operator> <call><name pos:line="187" pos:column="29">_get_osfhandle<pos:position pos:line="187" pos:column="43"/></name><argument_list pos:line="187" pos:column="43">(<argument><expr><literal type="number" pos:line="187" pos:column="44">2<pos:position pos:line="187" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="189" pos:column="5">si<pos:position pos:line="189" pos:column="7"/></name><operator pos:line="189" pos:column="7">.<pos:position pos:line="189" pos:column="8"/></operator><name pos:line="189" pos:column="8">dwFlags<pos:position pos:line="189" pos:column="15"/></name></name> <operator pos:line="189" pos:column="16">=<pos:position pos:line="189" pos:column="17"/></operator> <name pos:line="189" pos:column="18">STARTF_USESTDHANDLES<pos:position pos:line="189" pos:column="38"/></name></expr>;<pos:position pos:line="189" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="191" pos:column="5">/* Make sure all other valid handles are not inerithable */</comment>
    <for pos:line="192" pos:column="5">for <control pos:line="192" pos:column="9">(<init><expr><name pos:line="192" pos:column="10">x<pos:position pos:line="192" pos:column="11"/></name> <operator pos:line="192" pos:column="12">=<pos:position pos:line="192" pos:column="13"/></operator> <literal type="number" pos:line="192" pos:column="14">3<pos:position pos:line="192" pos:column="15"/></literal></expr>;<pos:position pos:line="192" pos:column="16"/></init> <condition><expr><name pos:line="192" pos:column="17">x<pos:position pos:line="192" pos:column="18"/></name> <operator pos:line="192" pos:column="19">&lt;<pos:position pos:line="192" pos:column="23"/></operator> <name pos:line="192" pos:column="21">Squid_MaxFD<pos:position pos:line="192" pos:column="32"/></name></expr>;<pos:position pos:line="192" pos:column="33"/></condition> <incr><expr><operator pos:line="192" pos:column="34">++<pos:position pos:line="192" pos:column="36"/></operator><name pos:line="192" pos:column="36">x<pos:position pos:line="192" pos:column="37"/></name></expr></incr>)<pos:position pos:line="192" pos:column="38"/></control> <block pos:line="192" pos:column="39">{
        <if pos:line="193" pos:column="9">if <condition pos:line="193" pos:column="12">(<expr><operator pos:line="193" pos:column="13">(<pos:position pos:line="193" pos:column="14"/></operator><name pos:line="193" pos:column="14">F<pos:position pos:line="193" pos:column="15"/></name> <operator pos:line="193" pos:column="16">=<pos:position pos:line="193" pos:column="17"/></operator> <call><name pos:line="193" pos:column="18">_get_osfhandle<pos:position pos:line="193" pos:column="32"/></name><argument_list pos:line="193" pos:column="32">(<argument><expr><name pos:line="193" pos:column="33">x<pos:position pos:line="193" pos:column="34"/></name></expr></argument>)<pos:position pos:line="193" pos:column="35"/></argument_list></call><operator pos:line="193" pos:column="35">)<pos:position pos:line="193" pos:column="36"/></operator> <operator pos:line="193" pos:column="37">==<pos:position pos:line="193" pos:column="39"/></operator> <operator pos:line="193" pos:column="40">-<pos:position pos:line="193" pos:column="41"/></operator><literal type="number" pos:line="193" pos:column="41">1<pos:position pos:line="193" pos:column="42"/></literal></expr>)<pos:position pos:line="193" pos:column="43"/></condition><then pos:line="193" pos:column="43">
            <block type="pseudo"><continue pos:line="194" pos:column="13">continue;<pos:position pos:line="194" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="196" pos:column="9">SetHandleInformation<pos:position pos:line="196" pos:column="29"/></name><argument_list pos:line="196" pos:column="29">(<argument><expr><operator pos:line="196" pos:column="30">(<pos:position pos:line="196" pos:column="31"/></operator><name pos:line="196" pos:column="31">HANDLE<pos:position pos:line="196" pos:column="37"/></name><operator pos:line="196" pos:column="37">)<pos:position pos:line="196" pos:column="38"/></operator> <name pos:line="196" pos:column="39">F<pos:position pos:line="196" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="42">HANDLE_FLAG_INHERIT<pos:position pos:line="196" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="196" pos:column="63">0<pos:position pos:line="196" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="197" pos:column="6"/></block></for>

    <expr_stmt><expr><operator pos:line="199" pos:column="5">*<pos:position pos:line="199" pos:column="6"/></operator><name pos:line="199" pos:column="6">buf1<pos:position pos:line="199" pos:column="10"/></name> <operator pos:line="199" pos:column="11">=<pos:position pos:line="199" pos:column="12"/></operator> <literal type="char" pos:line="199" pos:column="13">'\0'<pos:position pos:line="199" pos:column="17"/></literal></expr>;<pos:position pos:line="199" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="200" pos:column="5">strcpy<pos:position pos:line="200" pos:column="11"/></name><argument_list pos:line="200" pos:column="11">(<argument><expr><name pos:line="200" pos:column="12">buf1<pos:position pos:line="200" pos:column="16"/></name> <operator pos:line="200" pos:column="17">+<pos:position pos:line="200" pos:column="18"/></operator> <literal type="number" pos:line="200" pos:column="19">4096<pos:position pos:line="200" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="25">params<pos:position pos:line="200" pos:column="31"/></name><operator pos:line="200" pos:column="31">-&gt;<pos:position pos:line="200" pos:column="36"/></operator><name pos:line="200" pos:column="33">prog<pos:position pos:line="200" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="201" pos:column="5">str<pos:position pos:line="201" pos:column="8"/></name> <operator pos:line="201" pos:column="9">=<pos:position pos:line="201" pos:column="10"/></operator> <call><name pos:line="201" pos:column="11">strtok<pos:position pos:line="201" pos:column="17"/></name><argument_list pos:line="201" pos:column="17">(<argument><expr><name pos:line="201" pos:column="18">buf1<pos:position pos:line="201" pos:column="22"/></name> <operator pos:line="201" pos:column="23">+<pos:position pos:line="201" pos:column="24"/></operator> <literal type="number" pos:line="201" pos:column="25">4096<pos:position pos:line="201" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="201" pos:column="31">w_space<pos:position pos:line="201" pos:column="38"/></name></expr></argument>)<pos:position pos:line="201" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="40"/></expr_stmt>

    <do pos:line="203" pos:column="5">do <block pos:line="203" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="204" pos:column="9">strcat<pos:position pos:line="204" pos:column="15"/></name><argument_list pos:line="204" pos:column="15">(<argument><expr><name pos:line="204" pos:column="16">buf1<pos:position pos:line="204" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="22">str<pos:position pos:line="204" pos:column="25"/></name></expr></argument>)<pos:position pos:line="204" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="205" pos:column="9">strcat<pos:position pos:line="205" pos:column="15"/></name><argument_list pos:line="205" pos:column="15">(<argument><expr><name pos:line="205" pos:column="16">buf1<pos:position pos:line="205" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="22">" "<pos:position pos:line="205" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="206" pos:column="6"/></block> while <condition pos:line="206" pos:column="13">(<expr><operator pos:line="206" pos:column="14">(<pos:position pos:line="206" pos:column="15"/></operator><name pos:line="206" pos:column="15">str<pos:position pos:line="206" pos:column="18"/></name> <operator pos:line="206" pos:column="19">=<pos:position pos:line="206" pos:column="20"/></operator> <call><name pos:line="206" pos:column="21">strtok<pos:position pos:line="206" pos:column="27"/></name><argument_list pos:line="206" pos:column="27">(<argument><expr><name pos:line="206" pos:column="28">NULL<pos:position pos:line="206" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="34">w_space<pos:position pos:line="206" pos:column="41"/></name></expr></argument>)<pos:position pos:line="206" pos:column="42"/></argument_list></call><operator pos:line="206" pos:column="42">)<pos:position pos:line="206" pos:column="43"/></operator></expr>)<pos:position pos:line="206" pos:column="44"/></condition>;<pos:position pos:line="206" pos:column="45"/></do>

    <expr_stmt><expr><name pos:line="208" pos:column="5">x<pos:position pos:line="208" pos:column="6"/></name> <operator pos:line="208" pos:column="7">=<pos:position pos:line="208" pos:column="8"/></operator> <literal type="number" pos:line="208" pos:column="9">1<pos:position pos:line="208" pos:column="10"/></literal></expr>;<pos:position pos:line="208" pos:column="11"/></expr_stmt>

    <while pos:line="210" pos:column="5">while <condition pos:line="210" pos:column="11">(<expr><name><name pos:line="210" pos:column="12">args<pos:position pos:line="210" pos:column="16"/></name><index pos:line="210" pos:column="16">[<expr><name pos:line="210" pos:column="17">x<pos:position pos:line="210" pos:column="18"/></name></expr>]<pos:position pos:line="210" pos:column="19"/></index></name></expr>)<pos:position pos:line="210" pos:column="20"/></condition> <block pos:line="210" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="211" pos:column="9">strcat<pos:position pos:line="211" pos:column="15"/></name><argument_list pos:line="211" pos:column="15">(<argument><expr><name pos:line="211" pos:column="16">buf1<pos:position pos:line="211" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="211" pos:column="22">args<pos:position pos:line="211" pos:column="26"/></name><index pos:line="211" pos:column="26">[<expr><name pos:line="211" pos:column="27">x<pos:position pos:line="211" pos:column="28"/></name></expr>]<pos:position pos:line="211" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="211" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="212" pos:column="9">++<pos:position pos:line="212" pos:column="11"/></operator><name pos:line="212" pos:column="11">x<pos:position pos:line="212" pos:column="12"/></name></expr>;<pos:position pos:line="212" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="213" pos:column="9">strcat<pos:position pos:line="213" pos:column="15"/></name><argument_list pos:line="213" pos:column="15">(<argument><expr><name pos:line="213" pos:column="16">buf1<pos:position pos:line="213" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="22">" "<pos:position pos:line="213" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="214" pos:column="6"/></block></while>

    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><call><name pos:line="216" pos:column="9">CreateProcess<pos:position pos:line="216" pos:column="22"/></name><argument_list pos:line="216" pos:column="22">(<argument><expr><name pos:line="216" pos:column="23">buf1<pos:position pos:line="216" pos:column="27"/></name> <operator pos:line="216" pos:column="28">+<pos:position pos:line="216" pos:column="29"/></operator> <literal type="number" pos:line="216" pos:column="30">4096<pos:position pos:line="216" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="36">buf1<pos:position pos:line="216" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="42">NULL<pos:position pos:line="216" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="48">NULL<pos:position pos:line="216" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="54">TRUE<pos:position pos:line="216" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="60">CREATE_NO_WINDOW<pos:position pos:line="216" pos:column="76"/></name></expr></argument>,
                      <argument><expr><name pos:line="217" pos:column="23">NULL<pos:position pos:line="217" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="29">NULL<pos:position pos:line="217" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="217" pos:column="35">&amp;<pos:position pos:line="217" pos:column="40"/></operator><name pos:line="217" pos:column="36">si<pos:position pos:line="217" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="217" pos:column="40">&amp;<pos:position pos:line="217" pos:column="45"/></operator><name pos:line="217" pos:column="41">pi<pos:position pos:line="217" pos:column="43"/></name></expr></argument>)<pos:position pos:line="217" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="217" pos:column="45"/></condition><then pos:line="217" pos:column="45"> <block pos:line="217" pos:column="46">{
        <expr_stmt><expr><name pos:line="218" pos:column="9">pid<pos:position pos:line="218" pos:column="12"/></name> <operator pos:line="218" pos:column="13">=<pos:position pos:line="218" pos:column="14"/></operator> <name><name pos:line="218" pos:column="15">pi<pos:position pos:line="218" pos:column="17"/></name><operator pos:line="218" pos:column="17">.<pos:position pos:line="218" pos:column="18"/></operator><name pos:line="218" pos:column="18">dwProcessId<pos:position pos:line="218" pos:column="29"/></name></name></expr>;<pos:position pos:line="218" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="219" pos:column="9">hProcess<pos:position pos:line="219" pos:column="17"/></name> <operator pos:line="219" pos:column="18">=<pos:position pos:line="219" pos:column="19"/></operator> <name><name pos:line="219" pos:column="20">pi<pos:position pos:line="219" pos:column="22"/></name><operator pos:line="219" pos:column="22">.<pos:position pos:line="219" pos:column="23"/></operator><name pos:line="219" pos:column="23">hProcess<pos:position pos:line="219" pos:column="31"/></name></name></expr>;<pos:position pos:line="219" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="220" pos:column="6"/></block></then> <else pos:line="220" pos:column="7">else <block pos:line="220" pos:column="12">{
        <expr_stmt><expr><name pos:line="221" pos:column="9">pid<pos:position pos:line="221" pos:column="12"/></name> <operator pos:line="221" pos:column="13">=<pos:position pos:line="221" pos:column="14"/></operator> <operator pos:line="221" pos:column="15">-<pos:position pos:line="221" pos:column="16"/></operator><literal type="number" pos:line="221" pos:column="16">1<pos:position pos:line="221" pos:column="17"/></literal></expr>;<pos:position pos:line="221" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="222" pos:column="9">x<pos:position pos:line="222" pos:column="10"/></name> <operator pos:line="222" pos:column="11">=<pos:position pos:line="222" pos:column="12"/></operator> <call><name pos:line="222" pos:column="13">GetLastError<pos:position pos:line="222" pos:column="25"/></name><argument_list pos:line="222" pos:column="25">()<pos:position pos:line="222" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="223" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="225" pos:column="5">dup2<pos:position pos:line="225" pos:column="9"/></name><argument_list pos:line="225" pos:column="9">(<argument><expr><name pos:line="225" pos:column="10">t1<pos:position pos:line="225" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="225" pos:column="14">0<pos:position pos:line="225" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="226" pos:column="5">dup2<pos:position pos:line="226" pos:column="9"/></name><argument_list pos:line="226" pos:column="9">(<argument><expr><name pos:line="226" pos:column="10">t2<pos:position pos:line="226" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="226" pos:column="14">1<pos:position pos:line="226" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="226" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="227" pos:column="5">dup2<pos:position pos:line="227" pos:column="9"/></name><argument_list pos:line="227" pos:column="9">(<argument><expr><name pos:line="227" pos:column="10">t3<pos:position pos:line="227" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="227" pos:column="14">2<pos:position pos:line="227" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="228" pos:column="5">close<pos:position pos:line="228" pos:column="10"/></name><argument_list pos:line="228" pos:column="10">(<argument><expr><name pos:line="228" pos:column="11">t1<pos:position pos:line="228" pos:column="13"/></name></expr></argument>)<pos:position pos:line="228" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="229" pos:column="5">close<pos:position pos:line="229" pos:column="10"/></name><argument_list pos:line="229" pos:column="10">(<argument><expr><name pos:line="229" pos:column="11">t2<pos:position pos:line="229" pos:column="13"/></name></expr></argument>)<pos:position pos:line="229" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="230" pos:column="5">close<pos:position pos:line="230" pos:column="10"/></name><argument_list pos:line="230" pos:column="10">(<argument><expr><name pos:line="230" pos:column="11">t3<pos:position pos:line="230" pos:column="13"/></name></expr></argument>)<pos:position pos:line="230" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="15"/></expr_stmt>

    <if pos:line="232" pos:column="5">if <condition pos:line="232" pos:column="8">(<expr><name pos:line="232" pos:column="9">pid<pos:position pos:line="232" pos:column="12"/></name> <operator pos:line="232" pos:column="13">==<pos:position pos:line="232" pos:column="15"/></operator> <operator pos:line="232" pos:column="16">-<pos:position pos:line="232" pos:column="17"/></operator><literal type="number" pos:line="232" pos:column="17">1<pos:position pos:line="232" pos:column="18"/></literal></expr>)<pos:position pos:line="232" pos:column="19"/></condition><then pos:line="232" pos:column="19"> <block pos:line="232" pos:column="20">{
        <expr_stmt><expr><name pos:line="233" pos:column="9">errno<pos:position pos:line="233" pos:column="14"/></name> <operator pos:line="233" pos:column="15">=<pos:position pos:line="233" pos:column="16"/></operator> <name pos:line="233" pos:column="17">x<pos:position pos:line="233" pos:column="18"/></name></expr>;<pos:position pos:line="233" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="234" pos:column="9">debugs<pos:position pos:line="234" pos:column="15"/></name><argument_list pos:line="234" pos:column="15">(<argument><expr><literal type="number" pos:line="234" pos:column="16">54<pos:position pos:line="234" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="234" pos:column="20">DBG_CRITICAL<pos:position pos:line="234" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="34">"ipcCreate: CHILD: "<pos:position pos:line="234" pos:column="54"/></literal> <operator pos:line="234" pos:column="55">&lt;&lt;<pos:position pos:line="234" pos:column="63"/></operator> <name><name pos:line="234" pos:column="58">params<pos:position pos:line="234" pos:column="64"/></name><operator pos:line="234" pos:column="64">-&gt;<pos:position pos:line="234" pos:column="69"/></operator><name pos:line="234" pos:column="66">prog<pos:position pos:line="234" pos:column="70"/></name></name> <operator pos:line="234" pos:column="71">&lt;&lt;<pos:position pos:line="234" pos:column="79"/></operator> <literal type="string" pos:line="234" pos:column="74">": "<pos:position pos:line="234" pos:column="78"/></literal> <operator pos:line="234" pos:column="79">&lt;&lt;<pos:position pos:line="234" pos:column="87"/></operator> <call><name pos:line="234" pos:column="82">xstrerror<pos:position pos:line="234" pos:column="91"/></name><argument_list pos:line="234" pos:column="91">()<pos:position pos:line="234" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="234" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="95"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="236" pos:column="9">ipcSend<pos:position pos:line="236" pos:column="16"/></name><argument_list pos:line="236" pos:column="16">(<argument><expr><name pos:line="236" pos:column="17">cwfd<pos:position pos:line="236" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="23">err_string<pos:position pos:line="236" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="236" pos:column="35">strlen<pos:position pos:line="236" pos:column="41"/></name><argument_list pos:line="236" pos:column="41">(<argument><expr><name pos:line="236" pos:column="42">err_string<pos:position pos:line="236" pos:column="52"/></name></expr></argument>)<pos:position pos:line="236" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="236" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="55"/></expr_stmt>
        <goto pos:line="237" pos:column="9">goto <name pos:line="237" pos:column="14">cleanup<pos:position pos:line="237" pos:column="21"/></name>;<pos:position pos:line="237" pos:column="22"/></goto>
    }<pos:position pos:line="238" pos:column="6"/></block></then></if>

    <if pos:line="240" pos:column="5">if <condition pos:line="240" pos:column="8">(<expr><name pos:line="240" pos:column="9">type<pos:position pos:line="240" pos:column="13"/></name> <operator pos:line="240" pos:column="14">==<pos:position pos:line="240" pos:column="16"/></operator> <name pos:line="240" pos:column="17">IPC_UDP_SOCKET<pos:position pos:line="240" pos:column="31"/></name></expr>)<pos:position pos:line="240" pos:column="32"/></condition><then pos:line="240" pos:column="32"> <block pos:line="240" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="241" pos:column="9">WSAPROTOCOL_INFO<pos:position pos:line="241" pos:column="25"/></name></type> <name pos:line="241" pos:column="26">wpi<pos:position pos:line="241" pos:column="29"/></name></decl>;<pos:position pos:line="241" pos:column="30"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="243" pos:column="9">memset<pos:position pos:line="243" pos:column="15"/></name><argument_list pos:line="243" pos:column="15">(<argument><expr><operator pos:line="243" pos:column="16">&amp;<pos:position pos:line="243" pos:column="21"/></operator><name pos:line="243" pos:column="17">wpi<pos:position pos:line="243" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="243" pos:column="22">0<pos:position pos:line="243" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="243" pos:column="25">sizeof<argument_list pos:line="243" pos:column="31">(<argument><expr><name pos:line="243" pos:column="32">wpi<pos:position pos:line="243" pos:column="35"/></name></expr></argument>)<pos:position pos:line="243" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="243" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="38"/></expr_stmt>

        <if pos:line="245" pos:column="9">if <condition pos:line="245" pos:column="12">(<expr><name pos:line="245" pos:column="13">SOCKET_ERROR<pos:position pos:line="245" pos:column="25"/></name> <operator pos:line="245" pos:column="26">==<pos:position pos:line="245" pos:column="28"/></operator> <call><name pos:line="245" pos:column="29">WSADuplicateSocket<pos:position pos:line="245" pos:column="47"/></name><argument_list pos:line="245" pos:column="47">(<argument><expr><name pos:line="245" pos:column="48">crfd_ipc<pos:position pos:line="245" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="58">pid<pos:position pos:line="245" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="245" pos:column="63">&amp;<pos:position pos:line="245" pos:column="68"/></operator><name pos:line="245" pos:column="64">wpi<pos:position pos:line="245" pos:column="67"/></name></expr></argument>)<pos:position pos:line="245" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="245" pos:column="69"/></condition><then pos:line="245" pos:column="69"> <block pos:line="245" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="246" pos:column="13">debugs<pos:position pos:line="246" pos:column="19"/></name><argument_list pos:line="246" pos:column="19">(<argument><expr><literal type="number" pos:line="246" pos:column="20">54<pos:position pos:line="246" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="24">DBG_CRITICAL<pos:position pos:line="246" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="38">"ipcCreate: CHILD: WSADuplicateSocket: "<pos:position pos:line="246" pos:column="78"/></literal> <operator pos:line="246" pos:column="79">&lt;&lt;<pos:position pos:line="246" pos:column="87"/></operator> <call><name pos:line="246" pos:column="82">xstrerror<pos:position pos:line="246" pos:column="91"/></name><argument_list pos:line="246" pos:column="91">()<pos:position pos:line="246" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="246" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="95"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="248" pos:column="13">ipcSend<pos:position pos:line="248" pos:column="20"/></name><argument_list pos:line="248" pos:column="20">(<argument><expr><name pos:line="248" pos:column="21">cwfd<pos:position pos:line="248" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="27">err_string<pos:position pos:line="248" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="248" pos:column="39">strlen<pos:position pos:line="248" pos:column="45"/></name><argument_list pos:line="248" pos:column="45">(<argument><expr><name pos:line="248" pos:column="46">err_string<pos:position pos:line="248" pos:column="56"/></name></expr></argument>)<pos:position pos:line="248" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="248" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="59"/></expr_stmt>
            <goto pos:line="249" pos:column="13">goto <name pos:line="249" pos:column="18">cleanup<pos:position pos:line="249" pos:column="25"/></name>;<pos:position pos:line="249" pos:column="26"/></goto>
        }<pos:position pos:line="250" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="252" pos:column="9">x<pos:position pos:line="252" pos:column="10"/></name> <operator pos:line="252" pos:column="11">=<pos:position pos:line="252" pos:column="12"/></operator> <call><name pos:line="252" pos:column="13">write<pos:position pos:line="252" pos:column="18"/></name><argument_list pos:line="252" pos:column="18">(<argument><expr><name><name pos:line="252" pos:column="19">c2p<pos:position pos:line="252" pos:column="22"/></name><index pos:line="252" pos:column="22">[<expr><literal type="number" pos:line="252" pos:column="23">1<pos:position pos:line="252" pos:column="24"/></literal></expr>]<pos:position pos:line="252" pos:column="25"/></index></name></expr></argument>, <argument><expr><operator pos:line="252" pos:column="27">(<pos:position pos:line="252" pos:column="28"/></operator><specifier pos:line="252" pos:column="28">const<pos:position pos:line="252" pos:column="33"/></specifier> <name pos:line="252" pos:column="34">char<pos:position pos:line="252" pos:column="38"/></name> <operator pos:line="252" pos:column="39">*<pos:position pos:line="252" pos:column="40"/></operator><operator pos:line="252" pos:column="40">)<pos:position pos:line="252" pos:column="41"/></operator> <operator pos:line="252" pos:column="42">&amp;<pos:position pos:line="252" pos:column="47"/></operator><name pos:line="252" pos:column="43">wpi<pos:position pos:line="252" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="252" pos:column="48">sizeof<argument_list pos:line="252" pos:column="54">(<argument><expr><name pos:line="252" pos:column="55">wpi<pos:position pos:line="252" pos:column="58"/></name></expr></argument>)<pos:position pos:line="252" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="252" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="61"/></expr_stmt>

        <if pos:line="254" pos:column="9">if <condition pos:line="254" pos:column="12">(<expr><name pos:line="254" pos:column="13">x<pos:position pos:line="254" pos:column="14"/></name> <operator pos:line="254" pos:column="15">&lt;<pos:position pos:line="254" pos:column="19"/></operator> <operator pos:line="254" pos:column="17">(<pos:position pos:line="254" pos:column="18"/></operator><name pos:line="254" pos:column="18">ssize_t<pos:position pos:line="254" pos:column="25"/></name><operator pos:line="254" pos:column="25">)<pos:position pos:line="254" pos:column="26"/></operator><sizeof pos:line="254" pos:column="26">sizeof<argument_list pos:line="254" pos:column="32">(<argument><expr><name pos:line="254" pos:column="33">wpi<pos:position pos:line="254" pos:column="36"/></name></expr></argument>)<pos:position pos:line="254" pos:column="37"/></argument_list></sizeof></expr>)<pos:position pos:line="254" pos:column="38"/></condition><then pos:line="254" pos:column="38"> <block pos:line="254" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="255" pos:column="13">debugs<pos:position pos:line="255" pos:column="19"/></name><argument_list pos:line="255" pos:column="19">(<argument><expr><literal type="number" pos:line="255" pos:column="20">54<pos:position pos:line="255" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="255" pos:column="24">DBG_CRITICAL<pos:position pos:line="255" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="38">"ipcCreate: CHILD: write FD "<pos:position pos:line="255" pos:column="67"/></literal> <operator pos:line="255" pos:column="68">&lt;&lt;<pos:position pos:line="255" pos:column="76"/></operator> <name><name pos:line="255" pos:column="71">c2p<pos:position pos:line="255" pos:column="74"/></name><index pos:line="255" pos:column="74">[<expr><literal type="number" pos:line="255" pos:column="75">1<pos:position pos:line="255" pos:column="76"/></literal></expr>]<pos:position pos:line="255" pos:column="77"/></index></name> <operator pos:line="255" pos:column="78">&lt;&lt;<pos:position pos:line="255" pos:column="86"/></operator> <literal type="string" pos:line="255" pos:column="81">": "<pos:position pos:line="255" pos:column="85"/></literal> <operator pos:line="255" pos:column="86">&lt;&lt;<pos:position pos:line="255" pos:column="94"/></operator> <call><name pos:line="255" pos:column="89">xstrerror<pos:position pos:line="255" pos:column="98"/></name><argument_list pos:line="255" pos:column="98">()<pos:position pos:line="255" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="255" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="102"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="256" pos:column="13">debugs<pos:position pos:line="256" pos:column="19"/></name><argument_list pos:line="256" pos:column="19">(<argument><expr><literal type="number" pos:line="256" pos:column="20">54<pos:position pos:line="256" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="256" pos:column="24">DBG_CRITICAL<pos:position pos:line="256" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="38">"ipcCreate: CHILD: "<pos:position pos:line="256" pos:column="58"/></literal> <operator pos:line="256" pos:column="59">&lt;&lt;<pos:position pos:line="256" pos:column="67"/></operator> <name pos:line="256" pos:column="62">prog<pos:position pos:line="256" pos:column="66"/></name> <operator pos:line="256" pos:column="67">&lt;&lt;<pos:position pos:line="256" pos:column="75"/></operator> <literal type="string" pos:line="256" pos:column="70">": socket exchange failed"<pos:position pos:line="256" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="98"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="258" pos:column="13">ipcSend<pos:position pos:line="258" pos:column="20"/></name><argument_list pos:line="258" pos:column="20">(<argument><expr><name pos:line="258" pos:column="21">cwfd<pos:position pos:line="258" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="27">err_string<pos:position pos:line="258" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="258" pos:column="39">strlen<pos:position pos:line="258" pos:column="45"/></name><argument_list pos:line="258" pos:column="45">(<argument><expr><name pos:line="258" pos:column="46">err_string<pos:position pos:line="258" pos:column="56"/></name></expr></argument>)<pos:position pos:line="258" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="258" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="59"/></expr_stmt>
            <goto pos:line="259" pos:column="13">goto <name pos:line="259" pos:column="18">cleanup<pos:position pos:line="259" pos:column="25"/></name>;<pos:position pos:line="259" pos:column="26"/></goto>
        }<pos:position pos:line="260" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="262" pos:column="9">x<pos:position pos:line="262" pos:column="10"/></name> <operator pos:line="262" pos:column="11">=<pos:position pos:line="262" pos:column="12"/></operator> <call><name pos:line="262" pos:column="13">read<pos:position pos:line="262" pos:column="17"/></name><argument_list pos:line="262" pos:column="17">(<argument><expr><name><name pos:line="262" pos:column="18">p2c<pos:position pos:line="262" pos:column="21"/></name><index pos:line="262" pos:column="21">[<expr><literal type="number" pos:line="262" pos:column="22">0<pos:position pos:line="262" pos:column="23"/></literal></expr>]<pos:position pos:line="262" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="26">buf1<pos:position pos:line="262" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="262" pos:column="32">8192<pos:position pos:line="262" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="262" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="38"/></expr_stmt>

        <if pos:line="264" pos:column="9">if <condition pos:line="264" pos:column="12">(<expr><name pos:line="264" pos:column="13">x<pos:position pos:line="264" pos:column="14"/></name> <operator pos:line="264" pos:column="15">&lt;<pos:position pos:line="264" pos:column="19"/></operator> <literal type="number" pos:line="264" pos:column="17">0<pos:position pos:line="264" pos:column="18"/></literal></expr>)<pos:position pos:line="264" pos:column="19"/></condition><then pos:line="264" pos:column="19"> <block pos:line="264" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="265" pos:column="13">debugs<pos:position pos:line="265" pos:column="19"/></name><argument_list pos:line="265" pos:column="19">(<argument><expr><literal type="number" pos:line="265" pos:column="20">54<pos:position pos:line="265" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="265" pos:column="24">DBG_CRITICAL<pos:position pos:line="265" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="38">"ipcCreate: CHILD: read FD "<pos:position pos:line="265" pos:column="66"/></literal> <operator pos:line="265" pos:column="67">&lt;&lt;<pos:position pos:line="265" pos:column="75"/></operator> <name><name pos:line="265" pos:column="70">p2c<pos:position pos:line="265" pos:column="73"/></name><index pos:line="265" pos:column="73">[<expr><literal type="number" pos:line="265" pos:column="74">0<pos:position pos:line="265" pos:column="75"/></literal></expr>]<pos:position pos:line="265" pos:column="76"/></index></name> <operator pos:line="265" pos:column="77">&lt;&lt;<pos:position pos:line="265" pos:column="85"/></operator> <literal type="string" pos:line="265" pos:column="80">": "<pos:position pos:line="265" pos:column="84"/></literal> <operator pos:line="265" pos:column="85">&lt;&lt;<pos:position pos:line="265" pos:column="93"/></operator> <call><name pos:line="265" pos:column="88">xstrerror<pos:position pos:line="265" pos:column="97"/></name><argument_list pos:line="265" pos:column="97">()<pos:position pos:line="265" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="265" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="101"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="266" pos:column="13">debugs<pos:position pos:line="266" pos:column="19"/></name><argument_list pos:line="266" pos:column="19">(<argument><expr><literal type="number" pos:line="266" pos:column="20">54<pos:position pos:line="266" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="266" pos:column="24">DBG_CRITICAL<pos:position pos:line="266" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="266" pos:column="38">"ipcCreate: CHILD: "<pos:position pos:line="266" pos:column="58"/></literal> <operator pos:line="266" pos:column="59">&lt;&lt;<pos:position pos:line="266" pos:column="67"/></operator> <name pos:line="266" pos:column="62">prog<pos:position pos:line="266" pos:column="66"/></name> <operator pos:line="266" pos:column="67">&lt;&lt;<pos:position pos:line="266" pos:column="75"/></operator> <literal type="string" pos:line="266" pos:column="70">": socket exchange failed"<pos:position pos:line="266" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="266" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="98"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="268" pos:column="13">ipcSend<pos:position pos:line="268" pos:column="20"/></name><argument_list pos:line="268" pos:column="20">(<argument><expr><name pos:line="268" pos:column="21">cwfd<pos:position pos:line="268" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="27">err_string<pos:position pos:line="268" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="268" pos:column="39">strlen<pos:position pos:line="268" pos:column="45"/></name><argument_list pos:line="268" pos:column="45">(<argument><expr><name pos:line="268" pos:column="46">err_string<pos:position pos:line="268" pos:column="56"/></name></expr></argument>)<pos:position pos:line="268" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="268" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="59"/></expr_stmt>
            <goto pos:line="269" pos:column="13">goto <name pos:line="269" pos:column="18">cleanup<pos:position pos:line="269" pos:column="25"/></name>;<pos:position pos:line="269" pos:column="26"/></goto>
        }<pos:position pos:line="270" pos:column="10"/></block></then> <elseif pos:line="270" pos:column="11">else <if pos:line="270" pos:column="16">if <condition pos:line="270" pos:column="19">(<expr><call><name pos:line="270" pos:column="20">strncmp<pos:position pos:line="270" pos:column="27"/></name><argument_list pos:line="270" pos:column="27">(<argument><expr><name pos:line="270" pos:column="28">buf1<pos:position pos:line="270" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="34">ok_string<pos:position pos:line="270" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="270" pos:column="45">strlen<pos:position pos:line="270" pos:column="51"/></name><argument_list pos:line="270" pos:column="51">(<argument><expr><name pos:line="270" pos:column="52">ok_string<pos:position pos:line="270" pos:column="61"/></name></expr></argument>)<pos:position pos:line="270" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="270" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="270" pos:column="64"/></condition><then pos:line="270" pos:column="64"> <block pos:line="270" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="271" pos:column="13">debugs<pos:position pos:line="271" pos:column="19"/></name><argument_list pos:line="271" pos:column="19">(<argument><expr><literal type="number" pos:line="271" pos:column="20">54<pos:position pos:line="271" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="271" pos:column="24">DBG_CRITICAL<pos:position pos:line="271" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="38">"ipcCreate: CHILD: "<pos:position pos:line="271" pos:column="58"/></literal> <operator pos:line="271" pos:column="59">&lt;&lt;<pos:position pos:line="271" pos:column="67"/></operator> <name pos:line="271" pos:column="62">prog<pos:position pos:line="271" pos:column="66"/></name> <operator pos:line="271" pos:column="67">&lt;&lt;<pos:position pos:line="271" pos:column="75"/></operator> <literal type="string" pos:line="271" pos:column="70">": socket exchange failed"<pos:position pos:line="271" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="272" pos:column="13">debugs<pos:position pos:line="272" pos:column="19"/></name><argument_list pos:line="272" pos:column="19">(<argument><expr><literal type="number" pos:line="272" pos:column="20">54<pos:position pos:line="272" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="272" pos:column="24">DBG_CRITICAL<pos:position pos:line="272" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="38">"--&gt; read returned "<pos:position pos:line="272" pos:column="61"/></literal> <operator pos:line="272" pos:column="59">&lt;&lt;<pos:position pos:line="272" pos:column="67"/></operator> <name pos:line="272" pos:column="62">x<pos:position pos:line="272" pos:column="63"/></name></expr></argument>)<pos:position pos:line="272" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="273" pos:column="13">buf1<pos:position pos:line="273" pos:column="17"/></name><index pos:line="273" pos:column="17">[<expr><name pos:line="273" pos:column="18">x<pos:position pos:line="273" pos:column="19"/></name></expr>]<pos:position pos:line="273" pos:column="20"/></index></name> <operator pos:line="273" pos:column="21">=<pos:position pos:line="273" pos:column="22"/></operator> <literal type="char" pos:line="273" pos:column="23">'\0'<pos:position pos:line="273" pos:column="27"/></literal></expr>;<pos:position pos:line="273" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="274" pos:column="13">debugs<pos:position pos:line="274" pos:column="19"/></name><argument_list pos:line="274" pos:column="19">(<argument><expr><literal type="number" pos:line="274" pos:column="20">54<pos:position pos:line="274" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="274" pos:column="24">DBG_CRITICAL<pos:position pos:line="274" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="38">"--&gt; got '"<pos:position pos:line="274" pos:column="52"/></literal> <operator pos:line="274" pos:column="50">&lt;&lt;<pos:position pos:line="274" pos:column="58"/></operator> <call><name pos:line="274" pos:column="53">rfc1738_escape<pos:position pos:line="274" pos:column="67"/></name><argument_list pos:line="274" pos:column="67">(<argument><expr><name pos:line="274" pos:column="68">buf1<pos:position pos:line="274" pos:column="72"/></name></expr></argument>)<pos:position pos:line="274" pos:column="73"/></argument_list></call> <operator pos:line="274" pos:column="74">&lt;&lt;<pos:position pos:line="274" pos:column="82"/></operator> <literal type="string" pos:line="274" pos:column="77">"'"<pos:position pos:line="274" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="275" pos:column="13">ipcSend<pos:position pos:line="275" pos:column="20"/></name><argument_list pos:line="275" pos:column="20">(<argument><expr><name pos:line="275" pos:column="21">cwfd<pos:position pos:line="275" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="27">err_string<pos:position pos:line="275" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="275" pos:column="39">strlen<pos:position pos:line="275" pos:column="45"/></name><argument_list pos:line="275" pos:column="45">(<argument><expr><name pos:line="275" pos:column="46">err_string<pos:position pos:line="275" pos:column="56"/></name></expr></argument>)<pos:position pos:line="275" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="275" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="59"/></expr_stmt>
            <goto pos:line="276" pos:column="13">goto <name pos:line="276" pos:column="18">cleanup<pos:position pos:line="276" pos:column="25"/></name>;<pos:position pos:line="276" pos:column="26"/></goto>
        }<pos:position pos:line="277" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><name pos:line="279" pos:column="9">x<pos:position pos:line="279" pos:column="10"/></name> <operator pos:line="279" pos:column="11">=<pos:position pos:line="279" pos:column="12"/></operator> <call><name pos:line="279" pos:column="13">write<pos:position pos:line="279" pos:column="18"/></name><argument_list pos:line="279" pos:column="18">(<argument><expr><name><name pos:line="279" pos:column="19">c2p<pos:position pos:line="279" pos:column="22"/></name><index pos:line="279" pos:column="22">[<expr><literal type="number" pos:line="279" pos:column="23">1<pos:position pos:line="279" pos:column="24"/></literal></expr>]<pos:position pos:line="279" pos:column="25"/></index></name></expr></argument>, <argument><expr><operator pos:line="279" pos:column="27">(<pos:position pos:line="279" pos:column="28"/></operator><specifier pos:line="279" pos:column="28">const<pos:position pos:line="279" pos:column="33"/></specifier> <name pos:line="279" pos:column="34">char<pos:position pos:line="279" pos:column="38"/></name> <operator pos:line="279" pos:column="39">*<pos:position pos:line="279" pos:column="40"/></operator><operator pos:line="279" pos:column="40">)<pos:position pos:line="279" pos:column="41"/></operator> <operator pos:line="279" pos:column="42">&amp;<pos:position pos:line="279" pos:column="47"/></operator><name pos:line="279" pos:column="43">PS_ipc<pos:position pos:line="279" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="279" pos:column="51">sizeof<argument_list pos:line="279" pos:column="57">(<argument><expr><name pos:line="279" pos:column="58">PS_ipc<pos:position pos:line="279" pos:column="64"/></name></expr></argument>)<pos:position pos:line="279" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="279" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="67"/></expr_stmt>

        <if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><name pos:line="281" pos:column="13">x<pos:position pos:line="281" pos:column="14"/></name> <operator pos:line="281" pos:column="15">&lt;<pos:position pos:line="281" pos:column="19"/></operator> <operator pos:line="281" pos:column="17">(<pos:position pos:line="281" pos:column="18"/></operator><name pos:line="281" pos:column="18">ssize_t<pos:position pos:line="281" pos:column="25"/></name><operator pos:line="281" pos:column="25">)<pos:position pos:line="281" pos:column="26"/></operator><sizeof pos:line="281" pos:column="26">sizeof<argument_list pos:line="281" pos:column="32">(<argument><expr><name pos:line="281" pos:column="33">PS_ipc<pos:position pos:line="281" pos:column="39"/></name></expr></argument>)<pos:position pos:line="281" pos:column="40"/></argument_list></sizeof></expr>)<pos:position pos:line="281" pos:column="41"/></condition><then pos:line="281" pos:column="41"> <block pos:line="281" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="282" pos:column="13">debugs<pos:position pos:line="282" pos:column="19"/></name><argument_list pos:line="282" pos:column="19">(<argument><expr><literal type="number" pos:line="282" pos:column="20">54<pos:position pos:line="282" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="282" pos:column="24">DBG_CRITICAL<pos:position pos:line="282" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="38">"ipcCreate: CHILD: write FD "<pos:position pos:line="282" pos:column="67"/></literal> <operator pos:line="282" pos:column="68">&lt;&lt;<pos:position pos:line="282" pos:column="76"/></operator> <name><name pos:line="282" pos:column="71">c2p<pos:position pos:line="282" pos:column="74"/></name><index pos:line="282" pos:column="74">[<expr><literal type="number" pos:line="282" pos:column="75">1<pos:position pos:line="282" pos:column="76"/></literal></expr>]<pos:position pos:line="282" pos:column="77"/></index></name> <operator pos:line="282" pos:column="78">&lt;&lt;<pos:position pos:line="282" pos:column="86"/></operator> <literal type="string" pos:line="282" pos:column="81">": "<pos:position pos:line="282" pos:column="85"/></literal> <operator pos:line="282" pos:column="86">&lt;&lt;<pos:position pos:line="282" pos:column="94"/></operator> <call><name pos:line="282" pos:column="89">xstrerror<pos:position pos:line="282" pos:column="98"/></name><argument_list pos:line="282" pos:column="98">()<pos:position pos:line="282" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="282" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="102"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="283" pos:column="13">debugs<pos:position pos:line="283" pos:column="19"/></name><argument_list pos:line="283" pos:column="19">(<argument><expr><literal type="number" pos:line="283" pos:column="20">54<pos:position pos:line="283" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="283" pos:column="24">DBG_CRITICAL<pos:position pos:line="283" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="38">"ipcCreate: CHILD: "<pos:position pos:line="283" pos:column="58"/></literal> <operator pos:line="283" pos:column="59">&lt;&lt;<pos:position pos:line="283" pos:column="67"/></operator> <name pos:line="283" pos:column="62">prog<pos:position pos:line="283" pos:column="66"/></name> <operator pos:line="283" pos:column="67">&lt;&lt;<pos:position pos:line="283" pos:column="75"/></operator> <literal type="string" pos:line="283" pos:column="70">": socket exchange failed"<pos:position pos:line="283" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="98"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="285" pos:column="13">ipcSend<pos:position pos:line="285" pos:column="20"/></name><argument_list pos:line="285" pos:column="20">(<argument><expr><name pos:line="285" pos:column="21">cwfd<pos:position pos:line="285" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="27">err_string<pos:position pos:line="285" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="285" pos:column="39">strlen<pos:position pos:line="285" pos:column="45"/></name><argument_list pos:line="285" pos:column="45">(<argument><expr><name pos:line="285" pos:column="46">err_string<pos:position pos:line="285" pos:column="56"/></name></expr></argument>)<pos:position pos:line="285" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="285" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="59"/></expr_stmt>
            <goto pos:line="286" pos:column="13">goto <name pos:line="286" pos:column="18">cleanup<pos:position pos:line="286" pos:column="25"/></name>;<pos:position pos:line="286" pos:column="26"/></goto>
        }<pos:position pos:line="287" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="289" pos:column="9">x<pos:position pos:line="289" pos:column="10"/></name> <operator pos:line="289" pos:column="11">=<pos:position pos:line="289" pos:column="12"/></operator> <call><name pos:line="289" pos:column="13">read<pos:position pos:line="289" pos:column="17"/></name><argument_list pos:line="289" pos:column="17">(<argument><expr><name><name pos:line="289" pos:column="18">p2c<pos:position pos:line="289" pos:column="21"/></name><index pos:line="289" pos:column="21">[<expr><literal type="number" pos:line="289" pos:column="22">0<pos:position pos:line="289" pos:column="23"/></literal></expr>]<pos:position pos:line="289" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="26">buf1<pos:position pos:line="289" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="289" pos:column="32">8192<pos:position pos:line="289" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="38"/></expr_stmt>

        <if pos:line="291" pos:column="9">if <condition pos:line="291" pos:column="12">(<expr><name pos:line="291" pos:column="13">x<pos:position pos:line="291" pos:column="14"/></name> <operator pos:line="291" pos:column="15">&lt;<pos:position pos:line="291" pos:column="19"/></operator> <literal type="number" pos:line="291" pos:column="17">0<pos:position pos:line="291" pos:column="18"/></literal></expr>)<pos:position pos:line="291" pos:column="19"/></condition><then pos:line="291" pos:column="19"> <block pos:line="291" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="292" pos:column="13">debugs<pos:position pos:line="292" pos:column="19"/></name><argument_list pos:line="292" pos:column="19">(<argument><expr><literal type="number" pos:line="292" pos:column="20">54<pos:position pos:line="292" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="292" pos:column="24">DBG_CRITICAL<pos:position pos:line="292" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="38">"ipcCreate: CHILD: read FD "<pos:position pos:line="292" pos:column="66"/></literal> <operator pos:line="292" pos:column="67">&lt;&lt;<pos:position pos:line="292" pos:column="75"/></operator> <name><name pos:line="292" pos:column="70">p2c<pos:position pos:line="292" pos:column="73"/></name><index pos:line="292" pos:column="73">[<expr><literal type="number" pos:line="292" pos:column="74">0<pos:position pos:line="292" pos:column="75"/></literal></expr>]<pos:position pos:line="292" pos:column="76"/></index></name> <operator pos:line="292" pos:column="77">&lt;&lt;<pos:position pos:line="292" pos:column="85"/></operator> <literal type="string" pos:line="292" pos:column="80">": "<pos:position pos:line="292" pos:column="84"/></literal> <operator pos:line="292" pos:column="85">&lt;&lt;<pos:position pos:line="292" pos:column="93"/></operator> <call><name pos:line="292" pos:column="88">xstrerror<pos:position pos:line="292" pos:column="97"/></name><argument_list pos:line="292" pos:column="97">()<pos:position pos:line="292" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="292" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="101"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="293" pos:column="13">debugs<pos:position pos:line="293" pos:column="19"/></name><argument_list pos:line="293" pos:column="19">(<argument><expr><literal type="number" pos:line="293" pos:column="20">54<pos:position pos:line="293" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="293" pos:column="24">DBG_CRITICAL<pos:position pos:line="293" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="293" pos:column="38">"ipcCreate: CHILD: "<pos:position pos:line="293" pos:column="58"/></literal> <operator pos:line="293" pos:column="59">&lt;&lt;<pos:position pos:line="293" pos:column="67"/></operator> <name pos:line="293" pos:column="62">prog<pos:position pos:line="293" pos:column="66"/></name> <operator pos:line="293" pos:column="67">&lt;&lt;<pos:position pos:line="293" pos:column="75"/></operator> <literal type="string" pos:line="293" pos:column="70">": socket exchange failed"<pos:position pos:line="293" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="293" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="98"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="295" pos:column="13">ipcSend<pos:position pos:line="295" pos:column="20"/></name><argument_list pos:line="295" pos:column="20">(<argument><expr><name pos:line="295" pos:column="21">cwfd<pos:position pos:line="295" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="27">err_string<pos:position pos:line="295" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="295" pos:column="39">strlen<pos:position pos:line="295" pos:column="45"/></name><argument_list pos:line="295" pos:column="45">(<argument><expr><name pos:line="295" pos:column="46">err_string<pos:position pos:line="295" pos:column="56"/></name></expr></argument>)<pos:position pos:line="295" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="295" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="59"/></expr_stmt>
            <goto pos:line="296" pos:column="13">goto <name pos:line="296" pos:column="18">cleanup<pos:position pos:line="296" pos:column="25"/></name>;<pos:position pos:line="296" pos:column="26"/></goto>
        }<pos:position pos:line="297" pos:column="10"/></block></then> <elseif pos:line="297" pos:column="11">else <if pos:line="297" pos:column="16">if <condition pos:line="297" pos:column="19">(<expr><call><name pos:line="297" pos:column="20">strncmp<pos:position pos:line="297" pos:column="27"/></name><argument_list pos:line="297" pos:column="27">(<argument><expr><name pos:line="297" pos:column="28">buf1<pos:position pos:line="297" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="34">ok_string<pos:position pos:line="297" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="297" pos:column="45">strlen<pos:position pos:line="297" pos:column="51"/></name><argument_list pos:line="297" pos:column="51">(<argument><expr><name pos:line="297" pos:column="52">ok_string<pos:position pos:line="297" pos:column="61"/></name></expr></argument>)<pos:position pos:line="297" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="297" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="297" pos:column="64"/></condition><then pos:line="297" pos:column="64"> <block pos:line="297" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="298" pos:column="13">debugs<pos:position pos:line="298" pos:column="19"/></name><argument_list pos:line="298" pos:column="19">(<argument><expr><literal type="number" pos:line="298" pos:column="20">54<pos:position pos:line="298" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="298" pos:column="24">DBG_CRITICAL<pos:position pos:line="298" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="38">"ipcCreate: CHILD: "<pos:position pos:line="298" pos:column="58"/></literal> <operator pos:line="298" pos:column="59">&lt;&lt;<pos:position pos:line="298" pos:column="67"/></operator> <name pos:line="298" pos:column="62">prog<pos:position pos:line="298" pos:column="66"/></name> <operator pos:line="298" pos:column="67">&lt;&lt;<pos:position pos:line="298" pos:column="75"/></operator> <literal type="string" pos:line="298" pos:column="70">": socket exchange failed"<pos:position pos:line="298" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="298" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="299" pos:column="13">debugs<pos:position pos:line="299" pos:column="19"/></name><argument_list pos:line="299" pos:column="19">(<argument><expr><literal type="number" pos:line="299" pos:column="20">54<pos:position pos:line="299" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="299" pos:column="24">DBG_CRITICAL<pos:position pos:line="299" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="299" pos:column="38">"--&gt; read returned "<pos:position pos:line="299" pos:column="61"/></literal> <operator pos:line="299" pos:column="59">&lt;&lt;<pos:position pos:line="299" pos:column="67"/></operator> <name pos:line="299" pos:column="62">x<pos:position pos:line="299" pos:column="63"/></name></expr></argument>)<pos:position pos:line="299" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="300" pos:column="13">buf1<pos:position pos:line="300" pos:column="17"/></name><index pos:line="300" pos:column="17">[<expr><name pos:line="300" pos:column="18">x<pos:position pos:line="300" pos:column="19"/></name></expr>]<pos:position pos:line="300" pos:column="20"/></index></name> <operator pos:line="300" pos:column="21">=<pos:position pos:line="300" pos:column="22"/></operator> <literal type="char" pos:line="300" pos:column="23">'\0'<pos:position pos:line="300" pos:column="27"/></literal></expr>;<pos:position pos:line="300" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="301" pos:column="13">debugs<pos:position pos:line="301" pos:column="19"/></name><argument_list pos:line="301" pos:column="19">(<argument><expr><literal type="number" pos:line="301" pos:column="20">54<pos:position pos:line="301" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="301" pos:column="24">DBG_CRITICAL<pos:position pos:line="301" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="301" pos:column="38">"--&gt; got '"<pos:position pos:line="301" pos:column="52"/></literal> <operator pos:line="301" pos:column="50">&lt;&lt;<pos:position pos:line="301" pos:column="58"/></operator> <call><name pos:line="301" pos:column="53">rfc1738_escape<pos:position pos:line="301" pos:column="67"/></name><argument_list pos:line="301" pos:column="67">(<argument><expr><name pos:line="301" pos:column="68">buf1<pos:position pos:line="301" pos:column="72"/></name></expr></argument>)<pos:position pos:line="301" pos:column="73"/></argument_list></call> <operator pos:line="301" pos:column="74">&lt;&lt;<pos:position pos:line="301" pos:column="82"/></operator> <literal type="string" pos:line="301" pos:column="77">"'"<pos:position pos:line="301" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="301" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="302" pos:column="13">ipcSend<pos:position pos:line="302" pos:column="20"/></name><argument_list pos:line="302" pos:column="20">(<argument><expr><name pos:line="302" pos:column="21">cwfd<pos:position pos:line="302" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="27">err_string<pos:position pos:line="302" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="302" pos:column="39">strlen<pos:position pos:line="302" pos:column="45"/></name><argument_list pos:line="302" pos:column="45">(<argument><expr><name pos:line="302" pos:column="46">err_string<pos:position pos:line="302" pos:column="56"/></name></expr></argument>)<pos:position pos:line="302" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="302" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="59"/></expr_stmt>
            <goto pos:line="303" pos:column="13">goto <name pos:line="303" pos:column="18">cleanup<pos:position pos:line="303" pos:column="25"/></name>;<pos:position pos:line="303" pos:column="26"/></goto>
        }<pos:position pos:line="304" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><name pos:line="306" pos:column="9">x<pos:position pos:line="306" pos:column="10"/></name> <operator pos:line="306" pos:column="11">=<pos:position pos:line="306" pos:column="12"/></operator> <call><name pos:line="306" pos:column="13">send<pos:position pos:line="306" pos:column="17"/></name><argument_list pos:line="306" pos:column="17">(<argument><expr><name pos:line="306" pos:column="18">pwfd_ipc<pos:position pos:line="306" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="306" pos:column="28">(<pos:position pos:line="306" pos:column="29"/></operator><specifier pos:line="306" pos:column="29">const<pos:position pos:line="306" pos:column="34"/></specifier> <name pos:line="306" pos:column="35">void<pos:position pos:line="306" pos:column="39"/></name> <operator pos:line="306" pos:column="40">*<pos:position pos:line="306" pos:column="41"/></operator><operator pos:line="306" pos:column="41">)<pos:position pos:line="306" pos:column="42"/></operator><name pos:line="306" pos:column="42">ok_string<pos:position pos:line="306" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="306" pos:column="53">strlen<pos:position pos:line="306" pos:column="59"/></name><argument_list pos:line="306" pos:column="59">(<argument><expr><name pos:line="306" pos:column="60">ok_string<pos:position pos:line="306" pos:column="69"/></name></expr></argument>)<pos:position pos:line="306" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="306" pos:column="72">0<pos:position pos:line="306" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="307" pos:column="9">x<pos:position pos:line="307" pos:column="10"/></name> <operator pos:line="307" pos:column="11">=<pos:position pos:line="307" pos:column="12"/></operator> <call><name pos:line="307" pos:column="13">recv<pos:position pos:line="307" pos:column="17"/></name><argument_list pos:line="307" pos:column="17">(<argument><expr><name pos:line="307" pos:column="18">prfd_ipc<pos:position pos:line="307" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="307" pos:column="28">(<pos:position pos:line="307" pos:column="29"/></operator><name pos:line="307" pos:column="29">void<pos:position pos:line="307" pos:column="33"/></name> <operator pos:line="307" pos:column="34">*<pos:position pos:line="307" pos:column="35"/></operator><operator pos:line="307" pos:column="35">)<pos:position pos:line="307" pos:column="36"/></operator><operator pos:line="307" pos:column="36">(<pos:position pos:line="307" pos:column="37"/></operator><name pos:line="307" pos:column="37">buf1<pos:position pos:line="307" pos:column="41"/></name> <operator pos:line="307" pos:column="42">+<pos:position pos:line="307" pos:column="43"/></operator> <literal type="number" pos:line="307" pos:column="44">200<pos:position pos:line="307" pos:column="47"/></literal><operator pos:line="307" pos:column="47">)<pos:position pos:line="307" pos:column="48"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="307" pos:column="50">8191<pos:position pos:line="307" pos:column="54"/></literal> <operator pos:line="307" pos:column="55">-<pos:position pos:line="307" pos:column="56"/></operator> <literal type="number" pos:line="307" pos:column="57">200<pos:position pos:line="307" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="307" pos:column="62">0<pos:position pos:line="307" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="307" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="308" pos:column="9">assert<pos:position pos:line="308" pos:column="15"/></name><argument_list pos:line="308" pos:column="15">(<argument><expr><operator pos:line="308" pos:column="16">(<pos:position pos:line="308" pos:column="17"/></operator><name pos:line="308" pos:column="17">size_t<pos:position pos:line="308" pos:column="23"/></name><operator pos:line="308" pos:column="23">)<pos:position pos:line="308" pos:column="24"/></operator> <name pos:line="308" pos:column="25">x<pos:position pos:line="308" pos:column="26"/></name> <operator pos:line="308" pos:column="27">==<pos:position pos:line="308" pos:column="29"/></operator> <call><name pos:line="308" pos:column="30">strlen<pos:position pos:line="308" pos:column="36"/></name><argument_list pos:line="308" pos:column="36">(<argument><expr><name pos:line="308" pos:column="37">ok_string<pos:position pos:line="308" pos:column="46"/></name></expr></argument>)<pos:position pos:line="308" pos:column="47"/></argument_list></call>
               <operator pos:line="309" pos:column="16">&amp;&amp;<pos:position pos:line="309" pos:column="26"/></operator> <operator pos:line="309" pos:column="19">!<pos:position pos:line="309" pos:column="20"/></operator><call><name pos:line="309" pos:column="20">strncmp<pos:position pos:line="309" pos:column="27"/></name><argument_list pos:line="309" pos:column="27">(<argument><expr><name pos:line="309" pos:column="28">ok_string<pos:position pos:line="309" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="39">buf1<pos:position pos:line="309" pos:column="43"/></name> <operator pos:line="309" pos:column="44">+<pos:position pos:line="309" pos:column="45"/></operator> <literal type="number" pos:line="309" pos:column="46">200<pos:position pos:line="309" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="309" pos:column="51">strlen<pos:position pos:line="309" pos:column="57"/></name><argument_list pos:line="309" pos:column="57">(<argument><expr><name pos:line="309" pos:column="58">ok_string<pos:position pos:line="309" pos:column="67"/></name></expr></argument>)<pos:position pos:line="309" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="309" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="309" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="310" pos:column="6"/></block></then></if>				<comment type="block" pos:line="310" pos:column="33">/* IPC_UDP_SOCKET */</comment>

    <expr_stmt><expr><call><name pos:line="312" pos:column="5">snprintf<pos:position pos:line="312" pos:column="13"/></name><argument_list pos:line="312" pos:column="13">(<argument><expr><name pos:line="312" pos:column="14">buf1<pos:position pos:line="312" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="312" pos:column="20">8191<pos:position pos:line="312" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="26">"%s(%ld) CHILD socket"<pos:position pos:line="312" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="312" pos:column="50">prog<pos:position pos:line="312" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="312" pos:column="56">(<pos:position pos:line="312" pos:column="57"/></operator><name pos:line="312" pos:column="57">long<pos:position pos:line="312" pos:column="61"/></name> <name pos:line="312" pos:column="62">int<pos:position pos:line="312" pos:column="65"/></name><operator pos:line="312" pos:column="65">)<pos:position pos:line="312" pos:column="66"/></operator> <name pos:line="312" pos:column="67">pid<pos:position pos:line="312" pos:column="70"/></name></expr></argument>)<pos:position pos:line="312" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="72"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="314" pos:column="5">fd_note<pos:position pos:line="314" pos:column="12"/></name><argument_list pos:line="314" pos:column="12">(<argument><expr><name pos:line="314" pos:column="13">fd<pos:position pos:line="314" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="17">buf1<pos:position pos:line="314" pos:column="21"/></name></expr></argument>)<pos:position pos:line="314" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="23"/></expr_stmt>

    <if pos:line="316" pos:column="5">if <condition pos:line="316" pos:column="8">(<expr><name pos:line="316" pos:column="9">prfd_ipc<pos:position pos:line="316" pos:column="17"/></name> <operator pos:line="316" pos:column="18">!=<pos:position pos:line="316" pos:column="20"/></operator> <operator pos:line="316" pos:column="21">-<pos:position pos:line="316" pos:column="22"/></operator><literal type="number" pos:line="316" pos:column="22">1<pos:position pos:line="316" pos:column="23"/></literal></expr>)<pos:position pos:line="316" pos:column="24"/></condition><then pos:line="316" pos:column="24"> <block pos:line="316" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="317" pos:column="9">snprintf<pos:position pos:line="317" pos:column="17"/></name><argument_list pos:line="317" pos:column="17">(<argument><expr><name pos:line="317" pos:column="18">buf1<pos:position pos:line="317" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="317" pos:column="24">8191<pos:position pos:line="317" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="317" pos:column="30">"%s(%ld) &lt;-&gt; ipc CHILD socket"<pos:position pos:line="317" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="317" pos:column="62">prog<pos:position pos:line="317" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="317" pos:column="68">(<pos:position pos:line="317" pos:column="69"/></operator><name pos:line="317" pos:column="69">long<pos:position pos:line="317" pos:column="73"/></name> <name pos:line="317" pos:column="74">int<pos:position pos:line="317" pos:column="77"/></name><operator pos:line="317" pos:column="77">)<pos:position pos:line="317" pos:column="78"/></operator> <name pos:line="317" pos:column="79">pid<pos:position pos:line="317" pos:column="82"/></name></expr></argument>)<pos:position pos:line="317" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="318" pos:column="9">fd_note<pos:position pos:line="318" pos:column="16"/></name><argument_list pos:line="318" pos:column="16">(<argument><expr><name pos:line="318" pos:column="17">crfd_ipc<pos:position pos:line="318" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="318" pos:column="27">buf1<pos:position pos:line="318" pos:column="31"/></name></expr></argument>)<pos:position pos:line="318" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="319" pos:column="9">snprintf<pos:position pos:line="319" pos:column="17"/></name><argument_list pos:line="319" pos:column="17">(<argument><expr><name pos:line="319" pos:column="18">buf1<pos:position pos:line="319" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="319" pos:column="24">8191<pos:position pos:line="319" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="319" pos:column="30">"%s(%ld) &lt;-&gt; ipc PARENT socket"<pos:position pos:line="319" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="319" pos:column="63">prog<pos:position pos:line="319" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="319" pos:column="69">(<pos:position pos:line="319" pos:column="70"/></operator><name pos:line="319" pos:column="70">long<pos:position pos:line="319" pos:column="74"/></name> <name pos:line="319" pos:column="75">int<pos:position pos:line="319" pos:column="78"/></name><operator pos:line="319" pos:column="78">)<pos:position pos:line="319" pos:column="79"/></operator> <name pos:line="319" pos:column="80">pid<pos:position pos:line="319" pos:column="83"/></name></expr></argument>)<pos:position pos:line="319" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="320" pos:column="9">fd_note<pos:position pos:line="320" pos:column="16"/></name><argument_list pos:line="320" pos:column="16">(<argument><expr><name pos:line="320" pos:column="17">prfd_ipc<pos:position pos:line="320" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="27">buf1<pos:position pos:line="320" pos:column="31"/></name></expr></argument>)<pos:position pos:line="320" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="321" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="323" pos:column="5">/* else {                       IPC_TCP_SOCKET */</comment>
    <comment type="block" pos:line="324" pos:column="5">/*     commSetNoLinger(fd); */</comment>
    <comment type="block" pos:line="325" pos:column="5">/*  } */</comment>
    <expr_stmt><expr><name><name pos:line="326" pos:column="5">thread_params<pos:position pos:line="326" pos:column="18"/></name><operator pos:line="326" pos:column="18">.<pos:position pos:line="326" pos:column="19"/></operator><name pos:line="326" pos:column="19">prog<pos:position pos:line="326" pos:column="23"/></name></name> <operator pos:line="326" pos:column="24">=<pos:position pos:line="326" pos:column="25"/></operator> <name pos:line="326" pos:column="26">prog<pos:position pos:line="326" pos:column="30"/></name></expr>;<pos:position pos:line="326" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="328" pos:column="5">thread_params<pos:position pos:line="328" pos:column="18"/></name><operator pos:line="328" pos:column="18">.<pos:position pos:line="328" pos:column="19"/></operator><name pos:line="328" pos:column="19">send_fd<pos:position pos:line="328" pos:column="26"/></name></name> <operator pos:line="328" pos:column="27">=<pos:position pos:line="328" pos:column="28"/></operator> <name pos:line="328" pos:column="29">cwfd<pos:position pos:line="328" pos:column="33"/></name></expr>;<pos:position pos:line="328" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="330" pos:column="5">thread_params<pos:position pos:line="330" pos:column="18"/></name><operator pos:line="330" pos:column="18">.<pos:position pos:line="330" pos:column="19"/></operator><name pos:line="330" pos:column="19">pid<pos:position pos:line="330" pos:column="22"/></name></name> <operator pos:line="330" pos:column="23">=<pos:position pos:line="330" pos:column="24"/></operator> <name pos:line="330" pos:column="25">pid<pos:position pos:line="330" pos:column="28"/></name></expr>;<pos:position pos:line="330" pos:column="29"/></expr_stmt>

    <if pos:line="332" pos:column="5">if <condition pos:line="332" pos:column="8">(<expr><operator pos:line="332" pos:column="9">(<pos:position pos:line="332" pos:column="10"/></operator><name><name pos:line="332" pos:column="10">thread_params<pos:position pos:line="332" pos:column="23"/></name><operator pos:line="332" pos:column="23">.<pos:position pos:line="332" pos:column="24"/></operator><name pos:line="332" pos:column="24">type<pos:position pos:line="332" pos:column="28"/></name></name> <operator pos:line="332" pos:column="29">=<pos:position pos:line="332" pos:column="30"/></operator> <name pos:line="332" pos:column="31">type<pos:position pos:line="332" pos:column="35"/></name><operator pos:line="332" pos:column="35">)<pos:position pos:line="332" pos:column="36"/></operator> <operator pos:line="332" pos:column="37">==<pos:position pos:line="332" pos:column="39"/></operator> <name pos:line="332" pos:column="40">IPC_TCP_SOCKET<pos:position pos:line="332" pos:column="54"/></name></expr>)<pos:position pos:line="332" pos:column="55"/></condition><then pos:line="332" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="333" pos:column="9">thread_params<pos:position pos:line="333" pos:column="22"/></name><operator pos:line="333" pos:column="22">.<pos:position pos:line="333" pos:column="23"/></operator><name pos:line="333" pos:column="23">rfd<pos:position pos:line="333" pos:column="26"/></name></name> <operator pos:line="333" pos:column="27">=<pos:position pos:line="333" pos:column="28"/></operator> <name><name pos:line="333" pos:column="29">p2c<pos:position pos:line="333" pos:column="32"/></name><index pos:line="333" pos:column="32">[<expr><literal type="number" pos:line="333" pos:column="33">0<pos:position pos:line="333" pos:column="34"/></literal></expr>]<pos:position pos:line="333" pos:column="35"/></index></name></expr>;<pos:position pos:line="333" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="334" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="335" pos:column="9">thread_params<pos:position pos:line="335" pos:column="22"/></name><operator pos:line="335" pos:column="22">.<pos:position pos:line="335" pos:column="23"/></operator><name pos:line="335" pos:column="23">rfd<pos:position pos:line="335" pos:column="26"/></name></name> <operator pos:line="335" pos:column="27">=<pos:position pos:line="335" pos:column="28"/></operator> <name pos:line="335" pos:column="29">prfd_ipc<pos:position pos:line="335" pos:column="37"/></name></expr>;<pos:position pos:line="335" pos:column="38"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="337" pos:column="5">thread<pos:position pos:line="337" pos:column="11"/></name> <operator pos:line="337" pos:column="12">=<pos:position pos:line="337" pos:column="13"/></operator> <operator pos:line="337" pos:column="14">(<pos:position pos:line="337" pos:column="15"/></operator><name pos:line="337" pos:column="15">HANDLE<pos:position pos:line="337" pos:column="21"/></name><operator pos:line="337" pos:column="21">)<pos:position pos:line="337" pos:column="22"/></operator><call><name pos:line="337" pos:column="22">_beginthreadex<pos:position pos:line="337" pos:column="36"/></name><argument_list pos:line="337" pos:column="36">(<argument><expr><name pos:line="337" pos:column="37">NULL<pos:position pos:line="337" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="337" pos:column="43">0<pos:position pos:line="337" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="337" pos:column="46">ipc_thread_2<pos:position pos:line="337" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="337" pos:column="60">&amp;<pos:position pos:line="337" pos:column="65"/></operator><name pos:line="337" pos:column="61">thread_params<pos:position pos:line="337" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="337" pos:column="76">0<pos:position pos:line="337" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="337" pos:column="79">NULL<pos:position pos:line="337" pos:column="83"/></name></expr></argument>)<pos:position pos:line="337" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="85"/></expr_stmt>

    <if pos:line="339" pos:column="5">if <condition pos:line="339" pos:column="8">(<expr><operator pos:line="339" pos:column="9">!<pos:position pos:line="339" pos:column="10"/></operator><name pos:line="339" pos:column="10">thread<pos:position pos:line="339" pos:column="16"/></name></expr>)<pos:position pos:line="339" pos:column="17"/></condition><then pos:line="339" pos:column="17"> <block pos:line="339" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="340" pos:column="9">debugs<pos:position pos:line="340" pos:column="15"/></name><argument_list pos:line="340" pos:column="15">(<argument><expr><literal type="number" pos:line="340" pos:column="16">54<pos:position pos:line="340" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="340" pos:column="20">DBG_CRITICAL<pos:position pos:line="340" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="34">"ipcCreate: CHILD: _beginthreadex: "<pos:position pos:line="340" pos:column="70"/></literal> <operator pos:line="340" pos:column="71">&lt;&lt;<pos:position pos:line="340" pos:column="79"/></operator> <call><name pos:line="340" pos:column="74">xstrerror<pos:position pos:line="340" pos:column="83"/></name><argument_list pos:line="340" pos:column="83">()<pos:position pos:line="340" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="340" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="341" pos:column="9">ipcSend<pos:position pos:line="341" pos:column="16"/></name><argument_list pos:line="341" pos:column="16">(<argument><expr><name pos:line="341" pos:column="17">cwfd<pos:position pos:line="341" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="23">err_string<pos:position pos:line="341" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="341" pos:column="35">strlen<pos:position pos:line="341" pos:column="41"/></name><argument_list pos:line="341" pos:column="41">(<argument><expr><name pos:line="341" pos:column="42">err_string<pos:position pos:line="341" pos:column="52"/></name></expr></argument>)<pos:position pos:line="341" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="341" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="55"/></expr_stmt>
        <goto pos:line="342" pos:column="9">goto <name pos:line="342" pos:column="14">cleanup<pos:position pos:line="342" pos:column="21"/></name>;<pos:position pos:line="342" pos:column="22"/></goto>
    }<pos:position pos:line="343" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="345" pos:column="5">snprintf<pos:position pos:line="345" pos:column="13"/></name><argument_list pos:line="345" pos:column="13">(<argument><expr><name pos:line="345" pos:column="14">buf1<pos:position pos:line="345" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="345" pos:column="20">8191<pos:position pos:line="345" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="26">"%ld\n"<pos:position pos:line="345" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="345" pos:column="35">(<pos:position pos:line="345" pos:column="36"/></operator><name pos:line="345" pos:column="36">long<pos:position pos:line="345" pos:column="40"/></name> <name pos:line="345" pos:column="41">int<pos:position pos:line="345" pos:column="44"/></name><operator pos:line="345" pos:column="44">)<pos:position pos:line="345" pos:column="45"/></operator> <name pos:line="345" pos:column="46">pid<pos:position pos:line="345" pos:column="49"/></name></expr></argument>)<pos:position pos:line="345" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="51"/></expr_stmt>

    <if pos:line="347" pos:column="5">if <condition pos:line="347" pos:column="8">(<expr><operator pos:line="347" pos:column="9">-<pos:position pos:line="347" pos:column="10"/></operator><literal type="number" pos:line="347" pos:column="10">1<pos:position pos:line="347" pos:column="11"/></literal> <operator pos:line="347" pos:column="12">==<pos:position pos:line="347" pos:column="14"/></operator> <call><name pos:line="347" pos:column="15">ipcSend<pos:position pos:line="347" pos:column="22"/></name><argument_list pos:line="347" pos:column="22">(<argument><expr><name pos:line="347" pos:column="23">cwfd<pos:position pos:line="347" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="29">buf1<pos:position pos:line="347" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="347" pos:column="35">strlen<pos:position pos:line="347" pos:column="41"/></name><argument_list pos:line="347" pos:column="41">(<argument><expr><name pos:line="347" pos:column="42">buf1<pos:position pos:line="347" pos:column="46"/></name></expr></argument>)<pos:position pos:line="347" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="347" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="347" pos:column="49"/></condition><then pos:line="347" pos:column="49">
        <block type="pseudo"><goto pos:line="348" pos:column="9">goto <name pos:line="348" pos:column="14">cleanup<pos:position pos:line="348" pos:column="21"/></name>;<pos:position pos:line="348" pos:column="22"/></goto></block></then></if>

    <expr_stmt><expr><call><name pos:line="350" pos:column="5">debugs<pos:position pos:line="350" pos:column="11"/></name><argument_list pos:line="350" pos:column="11">(<argument><expr><literal type="number" pos:line="350" pos:column="12">54<pos:position pos:line="350" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="350" pos:column="16">2<pos:position pos:line="350" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="350" pos:column="19">"ipc("<pos:position pos:line="350" pos:column="25"/></literal> <operator pos:line="350" pos:column="26">&lt;&lt;<pos:position pos:line="350" pos:column="34"/></operator> <name pos:line="350" pos:column="29">prog<pos:position pos:line="350" pos:column="33"/></name> <operator pos:line="350" pos:column="34">&lt;&lt;<pos:position pos:line="350" pos:column="42"/></operator> <literal type="string" pos:line="350" pos:column="37">","<pos:position pos:line="350" pos:column="40"/></literal> <operator pos:line="350" pos:column="41">&lt;&lt;<pos:position pos:line="350" pos:column="49"/></operator> <name pos:line="350" pos:column="44">pid<pos:position pos:line="350" pos:column="47"/></name> <operator pos:line="350" pos:column="48">&lt;&lt;<pos:position pos:line="350" pos:column="56"/></operator> <literal type="string" pos:line="350" pos:column="51">"): started successfully"<pos:position pos:line="350" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="350" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="78"/></expr_stmt>

    <comment type="block" pos:line="352" pos:column="5">/* cycle */</comment>
    <for pos:line="353" pos:column="5">for <control pos:line="353" pos:column="9">(<init pos:line="353" pos:column="10">;<pos:position pos:line="353" pos:column="11"/></init><condition pos:line="353" pos:column="11">;<pos:position pos:line="353" pos:column="12"/></condition><incr/>)<pos:position pos:line="353" pos:column="13"/></control> <block pos:line="353" pos:column="14">{
        <expr_stmt><expr><name pos:line="354" pos:column="9">x<pos:position pos:line="354" pos:column="10"/></name> <operator pos:line="354" pos:column="11">=<pos:position pos:line="354" pos:column="12"/></operator> <call><name pos:line="354" pos:column="13">recv<pos:position pos:line="354" pos:column="17"/></name><argument_list pos:line="354" pos:column="17">(<argument><expr><name pos:line="354" pos:column="18">crfd<pos:position pos:line="354" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="354" pos:column="24">(<pos:position pos:line="354" pos:column="25"/></operator><name pos:line="354" pos:column="25">void<pos:position pos:line="354" pos:column="29"/></name> <operator pos:line="354" pos:column="30">*<pos:position pos:line="354" pos:column="31"/></operator><operator pos:line="354" pos:column="31">)<pos:position pos:line="354" pos:column="32"/></operator><name pos:line="354" pos:column="32">buf1<pos:position pos:line="354" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="354" pos:column="38">8192<pos:position pos:line="354" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="354" pos:column="44">0<pos:position pos:line="354" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="47"/></expr_stmt>

        <if pos:line="356" pos:column="9">if <condition pos:line="356" pos:column="12">(<expr><name pos:line="356" pos:column="13">x<pos:position pos:line="356" pos:column="14"/></name> <operator pos:line="356" pos:column="15">&lt;=<pos:position pos:line="356" pos:column="20"/></operator> <literal type="number" pos:line="356" pos:column="18">0<pos:position pos:line="356" pos:column="19"/></literal></expr>)<pos:position pos:line="356" pos:column="20"/></condition><then pos:line="356" pos:column="20"> <block pos:line="356" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="357" pos:column="13">debugs<pos:position pos:line="357" pos:column="19"/></name><argument_list pos:line="357" pos:column="19">(<argument><expr><literal type="number" pos:line="357" pos:column="20">54<pos:position pos:line="357" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="357" pos:column="24">3<pos:position pos:line="357" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="357" pos:column="27">"ipc("<pos:position pos:line="357" pos:column="33"/></literal> <operator pos:line="357" pos:column="34">&lt;&lt;<pos:position pos:line="357" pos:column="42"/></operator> <name pos:line="357" pos:column="37">prog<pos:position pos:line="357" pos:column="41"/></name> <operator pos:line="357" pos:column="42">&lt;&lt;<pos:position pos:line="357" pos:column="50"/></operator> <literal type="string" pos:line="357" pos:column="45">","<pos:position pos:line="357" pos:column="48"/></literal> <operator pos:line="357" pos:column="49">&lt;&lt;<pos:position pos:line="357" pos:column="57"/></operator> <name pos:line="357" pos:column="52">pid<pos:position pos:line="357" pos:column="55"/></name> <operator pos:line="357" pos:column="56">&lt;&lt;<pos:position pos:line="357" pos:column="64"/></operator> <literal type="string" pos:line="357" pos:column="59">"): "<pos:position pos:line="357" pos:column="64"/></literal> <operator pos:line="357" pos:column="65">&lt;&lt;<pos:position pos:line="357" pos:column="73"/></operator> <name pos:line="357" pos:column="68">x<pos:position pos:line="357" pos:column="69"/></name> <operator pos:line="357" pos:column="70">&lt;&lt;<pos:position pos:line="357" pos:column="78"/></operator> <literal type="string" pos:line="357" pos:column="73">" bytes received from parent. Exiting..."<pos:position pos:line="357" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="357" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="116"/></expr_stmt>
            <break pos:line="358" pos:column="13">break;<pos:position pos:line="358" pos:column="19"/></break>
        }<pos:position pos:line="359" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="361" pos:column="9">buf1<pos:position pos:line="361" pos:column="13"/></name><index pos:line="361" pos:column="13">[<expr><name pos:line="361" pos:column="14">x<pos:position pos:line="361" pos:column="15"/></name></expr>]<pos:position pos:line="361" pos:column="16"/></index></name> <operator pos:line="361" pos:column="17">=<pos:position pos:line="361" pos:column="18"/></operator> <literal type="char" pos:line="361" pos:column="19">'\0'<pos:position pos:line="361" pos:column="23"/></literal></expr>;<pos:position pos:line="361" pos:column="24"/></expr_stmt>

        <if pos:line="363" pos:column="9">if <condition pos:line="363" pos:column="12">(<expr><name pos:line="363" pos:column="13">type<pos:position pos:line="363" pos:column="17"/></name> <operator pos:line="363" pos:column="18">==<pos:position pos:line="363" pos:column="20"/></operator> <name pos:line="363" pos:column="21">IPC_UDP_SOCKET<pos:position pos:line="363" pos:column="35"/></name> <operator pos:line="363" pos:column="36">&amp;&amp;<pos:position pos:line="363" pos:column="46"/></operator> <operator pos:line="363" pos:column="39">!<pos:position pos:line="363" pos:column="40"/></operator><call><name pos:line="363" pos:column="40">strcmp<pos:position pos:line="363" pos:column="46"/></name><argument_list pos:line="363" pos:column="46">(<argument><expr><name pos:line="363" pos:column="47">buf1<pos:position pos:line="363" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="53">shutdown_string<pos:position pos:line="363" pos:column="68"/></name></expr></argument>)<pos:position pos:line="363" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="363" pos:column="70"/></condition><then pos:line="363" pos:column="70"> <block pos:line="363" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="364" pos:column="13">debugs<pos:position pos:line="364" pos:column="19"/></name><argument_list pos:line="364" pos:column="19">(<argument><expr><literal type="number" pos:line="364" pos:column="20">54<pos:position pos:line="364" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="364" pos:column="24">3<pos:position pos:line="364" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="364" pos:column="27">"ipc("<pos:position pos:line="364" pos:column="33"/></literal> <operator pos:line="364" pos:column="34">&lt;&lt;<pos:position pos:line="364" pos:column="42"/></operator> <name pos:line="364" pos:column="37">prog<pos:position pos:line="364" pos:column="41"/></name> <operator pos:line="364" pos:column="42">&lt;&lt;<pos:position pos:line="364" pos:column="50"/></operator> <literal type="string" pos:line="364" pos:column="45">","<pos:position pos:line="364" pos:column="48"/></literal> <operator pos:line="364" pos:column="49">&lt;&lt;<pos:position pos:line="364" pos:column="57"/></operator> <name pos:line="364" pos:column="52">pid<pos:position pos:line="364" pos:column="55"/></name> <operator pos:line="364" pos:column="56">&lt;&lt;<pos:position pos:line="364" pos:column="64"/></operator> <literal type="string" pos:line="364" pos:column="59">"): request for shutdown received from parent. Exiting..."<pos:position pos:line="364" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="119"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="366" pos:column="13">TerminateProcess<pos:position pos:line="366" pos:column="29"/></name><argument_list pos:line="366" pos:column="29">(<argument><expr><name pos:line="366" pos:column="30">hProcess<pos:position pos:line="366" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="366" pos:column="40">0<pos:position pos:line="366" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="366" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="43"/></expr_stmt>
            <break pos:line="367" pos:column="13">break;<pos:position pos:line="367" pos:column="19"/></break>
        }<pos:position pos:line="368" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="370" pos:column="9">debugs<pos:position pos:line="370" pos:column="15"/></name><argument_list pos:line="370" pos:column="15">(<argument><expr><literal type="number" pos:line="370" pos:column="16">54<pos:position pos:line="370" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="370" pos:column="20">5<pos:position pos:line="370" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="370" pos:column="23">"ipc("<pos:position pos:line="370" pos:column="29"/></literal> <operator pos:line="370" pos:column="30">&lt;&lt;<pos:position pos:line="370" pos:column="38"/></operator> <name pos:line="370" pos:column="33">prog<pos:position pos:line="370" pos:column="37"/></name> <operator pos:line="370" pos:column="38">&lt;&lt;<pos:position pos:line="370" pos:column="46"/></operator> <literal type="string" pos:line="370" pos:column="41">","<pos:position pos:line="370" pos:column="44"/></literal> <operator pos:line="370" pos:column="45">&lt;&lt;<pos:position pos:line="370" pos:column="53"/></operator> <name pos:line="370" pos:column="48">pid<pos:position pos:line="370" pos:column="51"/></name> <operator pos:line="370" pos:column="52">&lt;&lt;<pos:position pos:line="370" pos:column="60"/></operator> <literal type="string" pos:line="370" pos:column="55">"): received from parent: "<pos:position pos:line="370" pos:column="82"/></literal> <operator pos:line="370" pos:column="83">&lt;&lt;<pos:position pos:line="370" pos:column="91"/></operator> <call><name pos:line="370" pos:column="86">rfc1738_escape_unescaped<pos:position pos:line="370" pos:column="110"/></name><argument_list pos:line="370" pos:column="110">(<argument><expr><name pos:line="370" pos:column="111">buf1<pos:position pos:line="370" pos:column="115"/></name></expr></argument>)<pos:position pos:line="370" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="370" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="118"/></expr_stmt>

        <if pos:line="372" pos:column="9">if <condition pos:line="372" pos:column="12">(<expr><name pos:line="372" pos:column="13">type<pos:position pos:line="372" pos:column="17"/></name> <operator pos:line="372" pos:column="18">==<pos:position pos:line="372" pos:column="20"/></operator> <name pos:line="372" pos:column="21">IPC_TCP_SOCKET<pos:position pos:line="372" pos:column="35"/></name></expr>)<pos:position pos:line="372" pos:column="36"/></condition><then pos:line="372" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><name pos:line="373" pos:column="13">x<pos:position pos:line="373" pos:column="14"/></name> <operator pos:line="373" pos:column="15">=<pos:position pos:line="373" pos:column="16"/></operator> <call><name pos:line="373" pos:column="17">write<pos:position pos:line="373" pos:column="22"/></name><argument_list pos:line="373" pos:column="22">(<argument><expr><name><name pos:line="373" pos:column="23">c2p<pos:position pos:line="373" pos:column="26"/></name><index pos:line="373" pos:column="26">[<expr><literal type="number" pos:line="373" pos:column="27">1<pos:position pos:line="373" pos:column="28"/></literal></expr>]<pos:position pos:line="373" pos:column="29"/></index></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="31">buf1<pos:position pos:line="373" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="37">x<pos:position pos:line="373" pos:column="38"/></name></expr></argument>)<pos:position pos:line="373" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="40"/></expr_stmt></block></then>
        <else pos:line="374" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="375" pos:column="13">x<pos:position pos:line="375" pos:column="14"/></name> <operator pos:line="375" pos:column="15">=<pos:position pos:line="375" pos:column="16"/></operator> <call><name pos:line="375" pos:column="17">send<pos:position pos:line="375" pos:column="21"/></name><argument_list pos:line="375" pos:column="21">(<argument><expr><name pos:line="375" pos:column="22">pwfd_ipc<pos:position pos:line="375" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="375" pos:column="32">(<pos:position pos:line="375" pos:column="33"/></operator><specifier pos:line="375" pos:column="33">const<pos:position pos:line="375" pos:column="38"/></specifier> <name pos:line="375" pos:column="39">void<pos:position pos:line="375" pos:column="43"/></name> <operator pos:line="375" pos:column="44">*<pos:position pos:line="375" pos:column="45"/></operator><operator pos:line="375" pos:column="45">)<pos:position pos:line="375" pos:column="46"/></operator><name pos:line="375" pos:column="46">buf1<pos:position pos:line="375" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="52">x<pos:position pos:line="375" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="375" pos:column="55">0<pos:position pos:line="375" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="375" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="58"/></expr_stmt></block></else></if>

        <if pos:line="377" pos:column="9">if <condition pos:line="377" pos:column="12">(<expr><name pos:line="377" pos:column="13">x<pos:position pos:line="377" pos:column="14"/></name> <operator pos:line="377" pos:column="15">&lt;=<pos:position pos:line="377" pos:column="20"/></operator> <literal type="number" pos:line="377" pos:column="18">0<pos:position pos:line="377" pos:column="19"/></literal></expr>)<pos:position pos:line="377" pos:column="20"/></condition><then pos:line="377" pos:column="20"> <block pos:line="377" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="378" pos:column="13">debugs<pos:position pos:line="378" pos:column="19"/></name><argument_list pos:line="378" pos:column="19">(<argument><expr><literal type="number" pos:line="378" pos:column="20">54<pos:position pos:line="378" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="378" pos:column="24">3<pos:position pos:line="378" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="378" pos:column="27">"ipc("<pos:position pos:line="378" pos:column="33"/></literal> <operator pos:line="378" pos:column="34">&lt;&lt;<pos:position pos:line="378" pos:column="42"/></operator> <name pos:line="378" pos:column="37">prog<pos:position pos:line="378" pos:column="41"/></name> <operator pos:line="378" pos:column="42">&lt;&lt;<pos:position pos:line="378" pos:column="50"/></operator> <literal type="string" pos:line="378" pos:column="45">","<pos:position pos:line="378" pos:column="48"/></literal> <operator pos:line="378" pos:column="49">&lt;&lt;<pos:position pos:line="378" pos:column="57"/></operator> <name pos:line="378" pos:column="52">pid<pos:position pos:line="378" pos:column="55"/></name> <operator pos:line="378" pos:column="56">&lt;&lt;<pos:position pos:line="378" pos:column="64"/></operator> <literal type="string" pos:line="378" pos:column="59">"): "<pos:position pos:line="378" pos:column="64"/></literal> <operator pos:line="378" pos:column="65">&lt;&lt;<pos:position pos:line="378" pos:column="73"/></operator> <name pos:line="378" pos:column="68">x<pos:position pos:line="378" pos:column="69"/></name> <operator pos:line="378" pos:column="70">&lt;&lt;<pos:position pos:line="378" pos:column="78"/></operator> <literal type="string" pos:line="378" pos:column="73">" bytes written to "<pos:position pos:line="378" pos:column="93"/></literal> <operator pos:line="378" pos:column="94">&lt;&lt;<pos:position pos:line="378" pos:column="102"/></operator> <name pos:line="378" pos:column="97">prog<pos:position pos:line="378" pos:column="101"/></name> <operator pos:line="378" pos:column="102">&lt;&lt;<pos:position pos:line="378" pos:column="110"/></operator> <literal type="string" pos:line="378" pos:column="105">". Exiting..."<pos:position pos:line="378" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="378" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="121"/></expr_stmt>

            <break pos:line="380" pos:column="13">break;<pos:position pos:line="380" pos:column="19"/></break>
        }<pos:position pos:line="381" pos:column="10"/></block></then></if>
    }<pos:position pos:line="382" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="384" pos:column="5">retval<pos:position pos:line="384" pos:column="11"/></name> <operator pos:line="384" pos:column="12">=<pos:position pos:line="384" pos:column="13"/></operator> <literal type="number" pos:line="384" pos:column="14">0<pos:position pos:line="384" pos:column="15"/></literal></expr>;<pos:position pos:line="384" pos:column="16"/></expr_stmt>

<label><name pos:line="386" pos:column="1">cleanup<pos:position pos:line="386" pos:column="8"/></name>:<pos:position pos:line="386" pos:column="9"/></label>

    <if pos:line="388" pos:column="5">if <condition pos:line="388" pos:column="8">(<expr><name><name pos:line="388" pos:column="9">c2p<pos:position pos:line="388" pos:column="12"/></name><index pos:line="388" pos:column="12">[<expr><literal type="number" pos:line="388" pos:column="13">1<pos:position pos:line="388" pos:column="14"/></literal></expr>]<pos:position pos:line="388" pos:column="15"/></index></name> <operator pos:line="388" pos:column="16">!=<pos:position pos:line="388" pos:column="18"/></operator> <operator pos:line="388" pos:column="19">-<pos:position pos:line="388" pos:column="20"/></operator><literal type="number" pos:line="388" pos:column="20">1<pos:position pos:line="388" pos:column="21"/></literal></expr>)<pos:position pos:line="388" pos:column="22"/></condition><then pos:line="388" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="389" pos:column="9">close<pos:position pos:line="389" pos:column="14"/></name><argument_list pos:line="389" pos:column="14">(<argument><expr><name><name pos:line="389" pos:column="15">c2p<pos:position pos:line="389" pos:column="18"/></name><index pos:line="389" pos:column="18">[<expr><literal type="number" pos:line="389" pos:column="19">1<pos:position pos:line="389" pos:column="20"/></literal></expr>]<pos:position pos:line="389" pos:column="21"/></index></name></expr></argument>)<pos:position pos:line="389" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="23"/></expr_stmt></block></then></if>

    <if pos:line="391" pos:column="5">if <condition pos:line="391" pos:column="8">(<expr><name><name pos:line="391" pos:column="9">fd_table<pos:position pos:line="391" pos:column="17"/></name><index pos:line="391" pos:column="17">[<expr><name pos:line="391" pos:column="18">crfd<pos:position pos:line="391" pos:column="22"/></name></expr>]<pos:position pos:line="391" pos:column="23"/></index></name><operator pos:line="391" pos:column="23">.<pos:position pos:line="391" pos:column="24"/></operator><name><name pos:line="391" pos:column="24">flags<pos:position pos:line="391" pos:column="29"/></name><operator pos:line="391" pos:column="29">.<pos:position pos:line="391" pos:column="30"/></operator><name pos:line="391" pos:column="30">open<pos:position pos:line="391" pos:column="34"/></name></name></expr>)<pos:position pos:line="391" pos:column="35"/></condition><then pos:line="391" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="392" pos:column="9">ipcCloseAllFD<pos:position pos:line="392" pos:column="22"/></name><argument_list pos:line="392" pos:column="22">(<argument><expr><operator pos:line="392" pos:column="23">-<pos:position pos:line="392" pos:column="24"/></operator><literal type="number" pos:line="392" pos:column="24">1<pos:position pos:line="392" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="392" pos:column="27">-<pos:position pos:line="392" pos:column="28"/></operator><literal type="number" pos:line="392" pos:column="28">1<pos:position pos:line="392" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="392" pos:column="31">crfd<pos:position pos:line="392" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="392" pos:column="37">cwfd<pos:position pos:line="392" pos:column="41"/></name></expr></argument>)<pos:position pos:line="392" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="43"/></expr_stmt></block></then></if>

    <if pos:line="394" pos:column="5">if <condition pos:line="394" pos:column="8">(<expr><name pos:line="394" pos:column="9">prfd_ipc<pos:position pos:line="394" pos:column="17"/></name> <operator pos:line="394" pos:column="18">!=<pos:position pos:line="394" pos:column="20"/></operator> <operator pos:line="394" pos:column="21">-<pos:position pos:line="394" pos:column="22"/></operator><literal type="number" pos:line="394" pos:column="22">1<pos:position pos:line="394" pos:column="23"/></literal></expr>)<pos:position pos:line="394" pos:column="24"/></condition><then pos:line="394" pos:column="24"> <block pos:line="394" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="395" pos:column="9">send<pos:position pos:line="395" pos:column="13"/></name><argument_list pos:line="395" pos:column="13">(<argument><expr><name pos:line="395" pos:column="14">crfd_ipc<pos:position pos:line="395" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="395" pos:column="24">(<pos:position pos:line="395" pos:column="25"/></operator><specifier pos:line="395" pos:column="25">const<pos:position pos:line="395" pos:column="30"/></specifier> <name pos:line="395" pos:column="31">void<pos:position pos:line="395" pos:column="35"/></name> <operator pos:line="395" pos:column="36">*<pos:position pos:line="395" pos:column="37"/></operator><operator pos:line="395" pos:column="37">)<pos:position pos:line="395" pos:column="38"/></operator><name pos:line="395" pos:column="38">shutdown_string<pos:position pos:line="395" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="395" pos:column="55">strlen<pos:position pos:line="395" pos:column="61"/></name><argument_list pos:line="395" pos:column="61">(<argument><expr><name pos:line="395" pos:column="62">shutdown_string<pos:position pos:line="395" pos:column="77"/></name></expr></argument>)<pos:position pos:line="395" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="395" pos:column="80">0<pos:position pos:line="395" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="395" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="396" pos:column="9">shutdown<pos:position pos:line="396" pos:column="17"/></name><argument_list pos:line="396" pos:column="17">(<argument><expr><name pos:line="396" pos:column="18">crfd_ipc<pos:position pos:line="396" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="28">SD_BOTH<pos:position pos:line="396" pos:column="35"/></name></expr></argument>)<pos:position pos:line="396" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="397" pos:column="9">shutdown<pos:position pos:line="397" pos:column="17"/></name><argument_list pos:line="397" pos:column="17">(<argument><expr><name pos:line="397" pos:column="18">prfd_ipc<pos:position pos:line="397" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="28">SD_BOTH<pos:position pos:line="397" pos:column="35"/></name></expr></argument>)<pos:position pos:line="397" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="398" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="400" pos:column="5">ipcCloseAllFD<pos:position pos:line="400" pos:column="18"/></name><argument_list pos:line="400" pos:column="18">(<argument><expr><name pos:line="400" pos:column="19">prfd_ipc<pos:position pos:line="400" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="29">pwfd_ipc<pos:position pos:line="400" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="39">crfd_ipc<pos:position pos:line="400" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="49">cwfd_ipc<pos:position pos:line="400" pos:column="57"/></name></expr></argument>)<pos:position pos:line="400" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="59"/></expr_stmt>

    <if pos:line="402" pos:column="5">if <condition pos:line="402" pos:column="8">(<expr><name pos:line="402" pos:column="9">hProcess<pos:position pos:line="402" pos:column="17"/></name> <operator pos:line="402" pos:column="18">&amp;&amp;<pos:position pos:line="402" pos:column="28"/></operator> <name pos:line="402" pos:column="21">WAIT_OBJECT_0<pos:position pos:line="402" pos:column="34"/></name> <operator pos:line="402" pos:column="35">!=<pos:position pos:line="402" pos:column="37"/></operator>
            <call><name pos:line="403" pos:column="13">WaitForSingleObject<pos:position pos:line="403" pos:column="32"/></name><argument_list pos:line="403" pos:column="32">(<argument><expr><name pos:line="403" pos:column="33">hProcess<pos:position pos:line="403" pos:column="41"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="403" pos:column="43">type<pos:position pos:line="403" pos:column="47"/></name> <operator pos:line="403" pos:column="48">==<pos:position pos:line="403" pos:column="50"/></operator> <name pos:line="403" pos:column="51">IPC_UDP_SOCKET<pos:position pos:line="403" pos:column="65"/></name></expr> ?<pos:position pos:line="403" pos:column="67"/></condition><then pos:line="403" pos:column="67"> <expr><literal type="number" pos:line="403" pos:column="68">12000<pos:position pos:line="403" pos:column="73"/></literal></expr> <pos:position pos:line="403" pos:column="74"/></then><else pos:line="403" pos:column="74">: <expr><literal type="number" pos:line="403" pos:column="76">5000<pos:position pos:line="403" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="403" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="403" pos:column="82"/></condition><then pos:line="403" pos:column="82"> <block pos:line="403" pos:column="83">{

        <expr_stmt><expr><call><name pos:line="405" pos:column="9">getCurrentTime<pos:position pos:line="405" pos:column="23"/></name><argument_list pos:line="405" pos:column="23">()<pos:position pos:line="405" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="406" pos:column="9">debugs<pos:position pos:line="406" pos:column="15"/></name><argument_list pos:line="406" pos:column="15">(<argument><expr><literal type="number" pos:line="406" pos:column="16">54<pos:position pos:line="406" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="406" pos:column="20">DBG_CRITICAL<pos:position pos:line="406" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="406" pos:column="34">"ipc("<pos:position pos:line="406" pos:column="40"/></literal> <operator pos:line="406" pos:column="41">&lt;&lt;<pos:position pos:line="406" pos:column="49"/></operator> <name pos:line="406" pos:column="44">prog<pos:position pos:line="406" pos:column="48"/></name> <operator pos:line="406" pos:column="49">&lt;&lt;<pos:position pos:line="406" pos:column="57"/></operator> <literal type="string" pos:line="406" pos:column="52">","<pos:position pos:line="406" pos:column="55"/></literal> <operator pos:line="406" pos:column="56">&lt;&lt;<pos:position pos:line="406" pos:column="64"/></operator> <name pos:line="406" pos:column="59">pid<pos:position pos:line="406" pos:column="62"/></name> <operator pos:line="406" pos:column="63">&lt;&lt;<pos:position pos:line="406" pos:column="71"/></operator> <literal type="string" pos:line="406" pos:column="66">"): WARNING: "<pos:position pos:line="406" pos:column="80"/></literal> <operator pos:line="406" pos:column="81">&lt;&lt;<pos:position pos:line="406" pos:column="89"/></operator> <name pos:line="406" pos:column="84">prog<pos:position pos:line="406" pos:column="88"/></name> <operator pos:line="406" pos:column="89">&lt;&lt;<pos:position pos:line="406" pos:column="97"/></operator>
               <literal type="string" pos:line="407" pos:column="16">" didn't exit in "<pos:position pos:line="407" pos:column="34"/></literal> <operator pos:line="407" pos:column="35">&lt;&lt;<pos:position pos:line="407" pos:column="43"/></operator> <operator pos:line="407" pos:column="38">(<pos:position pos:line="407" pos:column="39"/></operator><ternary><condition><expr><name pos:line="407" pos:column="39">type<pos:position pos:line="407" pos:column="43"/></name> <operator pos:line="407" pos:column="44">==<pos:position pos:line="407" pos:column="46"/></operator> <name pos:line="407" pos:column="47">IPC_UDP_SOCKET<pos:position pos:line="407" pos:column="61"/></name></expr> ?<pos:position pos:line="407" pos:column="63"/></condition><then pos:line="407" pos:column="63"> <expr><literal type="number" pos:line="407" pos:column="64">12<pos:position pos:line="407" pos:column="66"/></literal></expr> <pos:position pos:line="407" pos:column="67"/></then><else pos:line="407" pos:column="67">: <expr><literal type="number" pos:line="407" pos:column="69">5<pos:position pos:line="407" pos:column="70"/></literal></expr></else></ternary><operator pos:line="407" pos:column="70">)<pos:position pos:line="407" pos:column="71"/></operator> <operator pos:line="407" pos:column="72">&lt;&lt;<pos:position pos:line="407" pos:column="80"/></operator> <literal type="string" pos:line="407" pos:column="75">" seconds."<pos:position pos:line="407" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="407" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="88"/></expr_stmt>

    }<pos:position pos:line="409" pos:column="6"/></block></then></if>

    <if pos:line="411" pos:column="5">if <condition pos:line="411" pos:column="8">(<expr><name pos:line="411" pos:column="9">thread<pos:position pos:line="411" pos:column="15"/></name> <operator pos:line="411" pos:column="16">&amp;&amp;<pos:position pos:line="411" pos:column="26"/></operator> <name pos:line="411" pos:column="19">WAIT_OBJECT_0<pos:position pos:line="411" pos:column="32"/></name> <operator pos:line="411" pos:column="33">!=<pos:position pos:line="411" pos:column="35"/></operator> <call><name pos:line="411" pos:column="36">WaitForSingleObject<pos:position pos:line="411" pos:column="55"/></name><argument_list pos:line="411" pos:column="55">(<argument><expr><name pos:line="411" pos:column="56">thread<pos:position pos:line="411" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="411" pos:column="64">3000<pos:position pos:line="411" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="411" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="411" pos:column="70"/></condition><then pos:line="411" pos:column="70"> <block pos:line="411" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="412" pos:column="9">getCurrentTime<pos:position pos:line="412" pos:column="23"/></name><argument_list pos:line="412" pos:column="23">()<pos:position pos:line="412" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="413" pos:column="9">debugs<pos:position pos:line="413" pos:column="15"/></name><argument_list pos:line="413" pos:column="15">(<argument><expr><literal type="number" pos:line="413" pos:column="16">54<pos:position pos:line="413" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="413" pos:column="20">DBG_CRITICAL<pos:position pos:line="413" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="413" pos:column="34">"ipc("<pos:position pos:line="413" pos:column="40"/></literal> <operator pos:line="413" pos:column="41">&lt;&lt;<pos:position pos:line="413" pos:column="49"/></operator> <name pos:line="413" pos:column="44">prog<pos:position pos:line="413" pos:column="48"/></name> <operator pos:line="413" pos:column="49">&lt;&lt;<pos:position pos:line="413" pos:column="57"/></operator> <literal type="string" pos:line="413" pos:column="52">","<pos:position pos:line="413" pos:column="55"/></literal> <operator pos:line="413" pos:column="56">&lt;&lt;<pos:position pos:line="413" pos:column="64"/></operator> <name pos:line="413" pos:column="59">pid<pos:position pos:line="413" pos:column="62"/></name> <operator pos:line="413" pos:column="63">&lt;&lt;<pos:position pos:line="413" pos:column="71"/></operator> <literal type="string" pos:line="413" pos:column="66">"): WARNING: ipc_thread_2 didn't exit in 3 seconds."<pos:position pos:line="413" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="413" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="120"/></expr_stmt>

    }<pos:position pos:line="415" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="417" pos:column="5">getCurrentTime<pos:position pos:line="417" pos:column="19"/></name><argument_list pos:line="417" pos:column="19">()<pos:position pos:line="417" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="22"/></expr_stmt>

    <if pos:line="419" pos:column="5">if <condition pos:line="419" pos:column="8">(<expr><operator pos:line="419" pos:column="9">!<pos:position pos:line="419" pos:column="10"/></operator><name pos:line="419" pos:column="10">retval<pos:position pos:line="419" pos:column="16"/></name></expr>)<pos:position pos:line="419" pos:column="17"/></condition><then pos:line="419" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="420" pos:column="9">debugs<pos:position pos:line="420" pos:column="15"/></name><argument_list pos:line="420" pos:column="15">(<argument><expr><literal type="number" pos:line="420" pos:column="16">54<pos:position pos:line="420" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="420" pos:column="20">2<pos:position pos:line="420" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="420" pos:column="23">"ipc("<pos:position pos:line="420" pos:column="29"/></literal> <operator pos:line="420" pos:column="30">&lt;&lt;<pos:position pos:line="420" pos:column="38"/></operator> <name pos:line="420" pos:column="33">prog<pos:position pos:line="420" pos:column="37"/></name> <operator pos:line="420" pos:column="38">&lt;&lt;<pos:position pos:line="420" pos:column="46"/></operator> <literal type="string" pos:line="420" pos:column="41">","<pos:position pos:line="420" pos:column="44"/></literal> <operator pos:line="420" pos:column="45">&lt;&lt;<pos:position pos:line="420" pos:column="53"/></operator> <name pos:line="420" pos:column="48">pid<pos:position pos:line="420" pos:column="51"/></name> <operator pos:line="420" pos:column="52">&lt;&lt;<pos:position pos:line="420" pos:column="60"/></operator> <literal type="string" pos:line="420" pos:column="55">"): normal exit"<pos:position pos:line="420" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="420" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="73"/></expr_stmt></block></then></if>

    <if pos:line="422" pos:column="5">if <condition pos:line="422" pos:column="8">(<expr><name pos:line="422" pos:column="9">buf1<pos:position pos:line="422" pos:column="13"/></name></expr>)<pos:position pos:line="422" pos:column="14"/></condition><then pos:line="422" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="423" pos:column="9">xfree<pos:position pos:line="423" pos:column="14"/></name><argument_list pos:line="423" pos:column="14">(<argument><expr><name pos:line="423" pos:column="15">buf1<pos:position pos:line="423" pos:column="19"/></name></expr></argument>)<pos:position pos:line="423" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="21"/></expr_stmt></block></then></if>

    <if pos:line="425" pos:column="5">if <condition pos:line="425" pos:column="8">(<expr><name pos:line="425" pos:column="9">prog<pos:position pos:line="425" pos:column="13"/></name></expr>)<pos:position pos:line="425" pos:column="14"/></condition><then pos:line="425" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="426" pos:column="9">xfree<pos:position pos:line="426" pos:column="14"/></name><argument_list pos:line="426" pos:column="14">(<argument><expr><name pos:line="426" pos:column="15">prog<pos:position pos:line="426" pos:column="19"/></name></expr></argument>)<pos:position pos:line="426" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="21"/></expr_stmt></block></then></if>

    <if pos:line="428" pos:column="5">if <condition pos:line="428" pos:column="8">(<expr><name pos:line="428" pos:column="9">thread<pos:position pos:line="428" pos:column="15"/></name></expr>)<pos:position pos:line="428" pos:column="16"/></condition><then pos:line="428" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="429" pos:column="9">CloseHandle<pos:position pos:line="429" pos:column="20"/></name><argument_list pos:line="429" pos:column="20">(<argument><expr><name pos:line="429" pos:column="21">thread<pos:position pos:line="429" pos:column="27"/></name></expr></argument>)<pos:position pos:line="429" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="29"/></expr_stmt></block></then></if>

    <if pos:line="431" pos:column="5">if <condition pos:line="431" pos:column="8">(<expr><name pos:line="431" pos:column="9">hProcess<pos:position pos:line="431" pos:column="17"/></name></expr>)<pos:position pos:line="431" pos:column="18"/></condition><then pos:line="431" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="432" pos:column="9">CloseHandle<pos:position pos:line="432" pos:column="20"/></name><argument_list pos:line="432" pos:column="20">(<argument><expr><name pos:line="432" pos:column="21">hProcess<pos:position pos:line="432" pos:column="29"/></name></expr></argument>)<pos:position pos:line="432" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="31"/></expr_stmt></block></then></if>

    <if pos:line="434" pos:column="5">if <condition pos:line="434" pos:column="8">(<expr><name><name pos:line="434" pos:column="9">p2c<pos:position pos:line="434" pos:column="12"/></name><index pos:line="434" pos:column="12">[<expr><literal type="number" pos:line="434" pos:column="13">0<pos:position pos:line="434" pos:column="14"/></literal></expr>]<pos:position pos:line="434" pos:column="15"/></index></name> <operator pos:line="434" pos:column="16">!=<pos:position pos:line="434" pos:column="18"/></operator> <operator pos:line="434" pos:column="19">-<pos:position pos:line="434" pos:column="20"/></operator><literal type="number" pos:line="434" pos:column="20">1<pos:position pos:line="434" pos:column="21"/></literal></expr>)<pos:position pos:line="434" pos:column="22"/></condition><then pos:line="434" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="435" pos:column="9">close<pos:position pos:line="435" pos:column="14"/></name><argument_list pos:line="435" pos:column="14">(<argument><expr><name><name pos:line="435" pos:column="15">p2c<pos:position pos:line="435" pos:column="18"/></name><index pos:line="435" pos:column="18">[<expr><literal type="number" pos:line="435" pos:column="19">0<pos:position pos:line="435" pos:column="20"/></literal></expr>]<pos:position pos:line="435" pos:column="21"/></index></name></expr></argument>)<pos:position pos:line="435" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="23"/></expr_stmt></block></then></if>

    <return pos:line="437" pos:column="5">return <expr><name pos:line="437" pos:column="12">retval<pos:position pos:line="437" pos:column="18"/></name></expr>;<pos:position pos:line="437" pos:column="19"/></return>
}<pos:position pos:line="438" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_618_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">commCloseAllSockets<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">fd<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">fde<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">F<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">fd<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></init> <condition><expr><name pos:line="7" pos:column="18">fd<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;=<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="24">Biggest_FD<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></condition> <incr><expr><operator pos:line="7" pos:column="36">++<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">fd<pos:position pos:line="7" pos:column="40"/></name></expr></incr>)<pos:position pos:line="7" pos:column="41"/></control> <block pos:line="7" pos:column="42">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">F<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">&amp;<pos:position pos:line="8" pos:column="18"/></operator><name><name pos:line="8" pos:column="14">fd_table<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">fd<pos:position pos:line="8" pos:column="25"/></name></expr>]<pos:position pos:line="8" pos:column="26"/></index></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">F<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">flags<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">open<pos:position pos:line="10" pos:column="27"/></name></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
            <block type="pseudo"><continue pos:line="11" pos:column="13">continue;<pos:position pos:line="11" pos:column="22"/></continue></block></then></if>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">F<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">type<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">!=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">FD_SOCKET<pos:position pos:line="13" pos:column="33"/></name></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34">
            <block type="pseudo"><continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue></block></then></if>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">F<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">flags<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">ipc<pos:position pos:line="16" pos:column="25"/></name></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26">   <comment type="block" pos:line="16" pos:column="29">/* don't close inter-process sockets */</comment>
            <block type="pseudo"><continue pos:line="17" pos:column="13">continue;<pos:position pos:line="17" pos:column="22"/></continue></block></then></if>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">F<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">timeoutHandler<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">!=<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">NULL<pos:position pos:line="19" pos:column="38"/></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39"> <block pos:line="19" pos:column="40">{
            <decl_stmt><decl><type><name><name pos:line="20" pos:column="13">AsyncCall<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">::<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">Pointer<pos:position pos:line="20" pos:column="31"/></name></name></type> <name pos:line="20" pos:column="32">callback<pos:position pos:line="20" pos:column="40"/></name> <init pos:line="20" pos:column="41">= <expr><name><name pos:line="20" pos:column="43">F<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">timeoutHandler<pos:position pos:line="20" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="61"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">F<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">timeoutHandler<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">NULL<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">5<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="23">5<pos:position pos:line="22" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="26">"commCloseAllSockets: FD "<pos:position pos:line="22" pos:column="52"/></literal> <operator pos:line="22" pos:column="53">&lt;&lt;<pos:position pos:line="22" pos:column="61"/></operator> <name pos:line="22" pos:column="56">fd<pos:position pos:line="22" pos:column="58"/></name> <operator pos:line="22" pos:column="59">&lt;&lt;<pos:position pos:line="22" pos:column="67"/></operator> <literal type="string" pos:line="22" pos:column="62">": Calling timeout handler"<pos:position pos:line="22" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ScheduleCallHere<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">callback<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then> <else pos:line="24" pos:column="11">else <block pos:line="24" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">5<pos:position pos:line="25" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="23">5<pos:position pos:line="25" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="26">"commCloseAllSockets: FD "<pos:position pos:line="25" pos:column="52"/></literal> <operator pos:line="25" pos:column="53">&lt;&lt;<pos:position pos:line="25" pos:column="61"/></operator> <name pos:line="25" pos:column="56">fd<pos:position pos:line="25" pos:column="58"/></name> <operator pos:line="25" pos:column="59">&lt;&lt;<pos:position pos:line="25" pos:column="67"/></operator> <literal type="string" pos:line="25" pos:column="62">": calling comm_reset_close()"<pos:position pos:line="25" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">old_comm_reset_close<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">fd<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></else></if>
    }<pos:position pos:line="28" pos:column="6"/></block></for>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

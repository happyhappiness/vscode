<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2745_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">readConnectResponseDone<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">buf<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">size_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">len<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="65">Comm<pos:position pos:line="2" pos:column="69"/></name><operator pos:line="2" pos:column="69">::<pos:position pos:line="2" pos:column="71"/></operator><name pos:line="2" pos:column="71">Flag<pos:position pos:line="2" pos:column="75"/></name></name></type> <name pos:line="2" pos:column="76">errcode<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="85">int<pos:position pos:line="2" pos:column="88"/></name></type> <name pos:line="2" pos:column="89">xerrno<pos:position pos:line="2" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="96"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">26<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="19">server<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">.<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">conn<pos:position pos:line="4" pos:column="30"/></name></name> <operator pos:line="4" pos:column="31">&lt;&lt;<pos:position pos:line="4" pos:column="39"/></operator> <literal type="string" pos:line="4" pos:column="34">", read "<pos:position pos:line="4" pos:column="43"/></literal> <operator pos:line="4" pos:column="44">&lt;&lt;<pos:position pos:line="4" pos:column="52"/></operator> <name pos:line="4" pos:column="47">len<pos:position pos:line="4" pos:column="50"/></name> <operator pos:line="4" pos:column="51">&lt;&lt;<pos:position pos:line="4" pos:column="59"/></operator> <literal type="string" pos:line="4" pos:column="54">" bytes, err="<pos:position pos:line="4" pos:column="68"/></literal> <operator pos:line="4" pos:column="69">&lt;&lt;<pos:position pos:line="4" pos:column="77"/></operator> <name pos:line="4" pos:column="72">errcode<pos:position pos:line="4" pos:column="79"/></name></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><call><name pos:line="5" pos:column="12">waitingForConnectResponse<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">errcode<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name><name pos:line="7" pos:column="20">Comm<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">::<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">ERR_CLOSING<pos:position pos:line="7" pos:column="37"/></name></name></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&gt;<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17"> <block pos:line="10" pos:column="18">{
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">connectRespBuf<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">appended<pos:position pos:line="11" pos:column="33"/></name></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">len<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">server<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">bytesIn<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">len<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">kb_incr<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="19">statCounter<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">server<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">all<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">kbytes_in<pos:position pos:line="13" pos:column="51"/></name></name><operator pos:line="13" pos:column="51">)<pos:position pos:line="13" pos:column="52"/></operator></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">len<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">kb_incr<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><operator pos:line="14" pos:column="17">&amp;<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><name><name pos:line="14" pos:column="19">statCounter<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">.<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">server<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">other<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">kbytes_in<pos:position pos:line="14" pos:column="53"/></name></name><operator pos:line="14" pos:column="53">)<pos:position pos:line="14" pos:column="54"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">len<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">keepGoingAfterRead<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">len<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">errcode<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">xerrno<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">server<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">client<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="66"/></condition><then pos:line="17" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">handleConnectResponse<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">len<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

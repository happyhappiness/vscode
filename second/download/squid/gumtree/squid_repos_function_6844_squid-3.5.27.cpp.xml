<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6844_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Kids<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">init<pos:position pos:line="1" pos:column="16"/></name></name><parameter_list pos:line="1" pos:column="16">()<pos:position pos:line="1" pos:column="18"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">storage<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">.<pos:position pos:line="3" pos:column="13"/></operator><name pos:line="3" pos:column="13">clear<pos:position pos:line="3" pos:column="18"/></name></name><argument_list pos:line="3" pos:column="18">()<pos:position pos:line="3" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">storage<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">.<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">reserve<pos:position pos:line="5" pos:column="20"/></name></name><argument_list pos:line="5" pos:column="20">(<argument><expr><call><name pos:line="5" pos:column="21">NumberOfKids<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">()<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">kid_name<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><literal type="number" pos:line="7" pos:column="19">32<pos:position pos:line="7" pos:column="21"/></literal></expr>]<pos:position pos:line="7" pos:column="22"/></index></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

    <comment type="line" pos:line="9" pos:column="5">// add Kid records for all workers</comment>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><decl><type><name pos:line="10" pos:column="10">int<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <name><name pos:line="10" pos:column="25">Config<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">.<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">workers<pos:position pos:line="10" pos:column="39"/></name></name></expr>;<pos:position pos:line="10" pos:column="40"/></condition> <incr><expr><operator pos:line="10" pos:column="41">++<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">i<pos:position pos:line="10" pos:column="44"/></name></expr></incr>)<pos:position pos:line="10" pos:column="45"/></control> <block pos:line="10" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">snprintf<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">kid_name<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="28">sizeof<argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">kid_name<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="46">"(squid-%d)"<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>, <argument><expr><call pos:line="11" pos:column="60">(<name pos:line="11" pos:column="61">int<pos:position pos:line="11" pos:column="64"/></name>)<argument_list pos:line="11" pos:column="65">(<argument><expr><call><name><name pos:line="11" pos:column="66">storage<pos:position pos:line="11" pos:column="73"/></name><operator pos:line="11" pos:column="73">.<pos:position pos:line="11" pos:column="74"/></operator><name pos:line="11" pos:column="74">size<pos:position pos:line="11" pos:column="78"/></name></name><argument_list pos:line="11" pos:column="78">()<pos:position pos:line="11" pos:column="80"/></argument_list></call><operator pos:line="11" pos:column="80">+<pos:position pos:line="11" pos:column="81"/></operator><literal type="number" pos:line="11" pos:column="81">1<pos:position pos:line="11" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">storage<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">push_back<pos:position pos:line="12" pos:column="26"/></name></name><argument_list pos:line="12" pos:column="26">(<argument><expr><call><name pos:line="12" pos:column="27">Kid<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">kid_name<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <comment type="line" pos:line="15" pos:column="5">// add Kid records for all disk processes</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><decl><type><name pos:line="16" pos:column="10">int<pos:position pos:line="16" pos:column="13"/></name></type> <name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <init pos:line="16" pos:column="16">= <expr><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="25">Config<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">cacheSwap<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">.<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">n_strands<pos:position pos:line="16" pos:column="51"/></name></name></expr>;<pos:position pos:line="16" pos:column="52"/></condition> <incr><expr><operator pos:line="16" pos:column="53">++<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="55">i<pos:position pos:line="16" pos:column="56"/></name></expr></incr>)<pos:position pos:line="16" pos:column="57"/></control> <block pos:line="16" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">snprintf<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">kid_name<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="28">sizeof<argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">kid_name<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">"(squid-disk-%d)"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>, <argument><expr><call pos:line="17" pos:column="65">(<name pos:line="17" pos:column="66">int<pos:position pos:line="17" pos:column="69"/></name>)<argument_list pos:line="17" pos:column="70">(<argument><expr><call><name><name pos:line="17" pos:column="71">storage<pos:position pos:line="17" pos:column="78"/></name><operator pos:line="17" pos:column="78">.<pos:position pos:line="17" pos:column="79"/></operator><name pos:line="17" pos:column="79">size<pos:position pos:line="17" pos:column="83"/></name></name><argument_list pos:line="17" pos:column="83">()<pos:position pos:line="17" pos:column="85"/></argument_list></call><operator pos:line="17" pos:column="85">+<pos:position pos:line="17" pos:column="86"/></operator><literal type="number" pos:line="17" pos:column="86">1<pos:position pos:line="17" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">storage<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">push_back<pos:position pos:line="18" pos:column="26"/></name></name><argument_list pos:line="18" pos:column="26">(<argument><expr><call><name pos:line="18" pos:column="27">Kid<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">kid_name<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <comment type="line" pos:line="21" pos:column="5">// if coordination is needed, add a Kid record for Coordinator</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name><name pos:line="22" pos:column="9">storage<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">size<pos:position pos:line="22" pos:column="21"/></name></name><argument_list pos:line="22" pos:column="21">()<pos:position pos:line="22" pos:column="23"/></argument_list></call> <operator pos:line="22" pos:column="24">&gt;<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">snprintf<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">kid_name<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="28">sizeof<argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">kid_name<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="46">"(squid-coord-%d)"<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>, <argument><expr><call pos:line="23" pos:column="66">(<name pos:line="23" pos:column="67">int<pos:position pos:line="23" pos:column="70"/></name>)<argument_list pos:line="23" pos:column="71">(<argument><expr><call><name><name pos:line="23" pos:column="72">storage<pos:position pos:line="23" pos:column="79"/></name><operator pos:line="23" pos:column="79">.<pos:position pos:line="23" pos:column="80"/></operator><name pos:line="23" pos:column="80">size<pos:position pos:line="23" pos:column="84"/></name></name><argument_list pos:line="23" pos:column="84">()<pos:position pos:line="23" pos:column="86"/></argument_list></call><operator pos:line="23" pos:column="86">+<pos:position pos:line="23" pos:column="87"/></operator><literal type="number" pos:line="23" pos:column="87">1<pos:position pos:line="23" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">storage<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">.<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">push_back<pos:position pos:line="24" pos:column="26"/></name></name><argument_list pos:line="24" pos:column="26">(<argument><expr><call><name pos:line="24" pos:column="27">Kid<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">kid_name<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">Must<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><call><name><name pos:line="27" pos:column="10">storage<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">size<pos:position pos:line="27" pos:column="22"/></name></name><argument_list pos:line="27" pos:column="22">()<pos:position pos:line="27" pos:column="24"/></argument_list></call> <operator pos:line="27" pos:column="25">==<pos:position pos:line="27" pos:column="27"/></operator> <cast type="static" pos:line="27" pos:column="28">static_cast<argument_list type="generic" pos:line="27" pos:column="39">&lt;<argument><expr><name pos:line="27" pos:column="40">size_t<pos:position pos:line="27" pos:column="46"/></name></expr></argument>&gt;<pos:position pos:line="27" pos:column="50"/></argument_list><argument_list pos:line="27" pos:column="47">(<argument><expr><call><name pos:line="27" pos:column="48">NumberOfKids<pos:position pos:line="27" pos:column="60"/></name><argument_list pos:line="27" pos:column="60">()<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></cast></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2509_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">release<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">bool<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">shareable<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">PROF_start<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">storeRelease<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">20<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"releasing "<pos:position pos:line="5" pos:column="31"/></literal> <operator pos:line="5" pos:column="32">&lt;&lt;<pos:position pos:line="5" pos:column="40"/></operator> <operator pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">this<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">&lt;&lt;<pos:position pos:line="5" pos:column="49"/></operator> <literal type="char" pos:line="5" pos:column="44">' '<pos:position pos:line="5" pos:column="47"/></literal> <operator pos:line="5" pos:column="48">&lt;&lt;<pos:position pos:line="5" pos:column="56"/></operator> <call><name pos:line="5" pos:column="51">getMD5Text<pos:position pos:line="5" pos:column="61"/></name><argument_list pos:line="5" pos:column="61">()<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="65"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* If, for any reason we can't discard this object because of an
     * outstanding request, mark it for pending release */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">locked<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">()<pos:position pos:line="9" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">expireNow<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">()<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">20<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"storeRelease: Only setting RELEASE_REQUEST bit"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">releaseRequest<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">shareable<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">PROF_stop<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">storeRelease<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">Store<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">::<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">Controller<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">::<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">store_dirs_rebuilding<pos:position pos:line="17" pos:column="49"/></name></name> <operator pos:line="17" pos:column="50">&amp;&amp;<pos:position pos:line="17" pos:column="60"/></operator> <name pos:line="17" pos:column="53">swap_filen<pos:position pos:line="17" pos:column="63"/></name> <operator pos:line="17" pos:column="64">&gt;<pos:position pos:line="17" pos:column="68"/></operator> <operator pos:line="17" pos:column="66">-<pos:position pos:line="17" pos:column="67"/></operator><literal type="number" pos:line="17" pos:column="67">1<pos:position pos:line="17" pos:column="68"/></literal></expr>)<pos:position pos:line="17" pos:column="69"/></condition><then pos:line="17" pos:column="69"> <block pos:line="17" pos:column="70">{
        <comment type="block" pos:line="18" pos:column="9">/* TODO: Teach disk stores to handle releases during rebuild instead. */</comment>

        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">Store<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">::<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">Root<pos:position pos:line="20" pos:column="20"/></name></name><argument_list pos:line="20" pos:column="20">()<pos:position pos:line="20" pos:column="22"/></argument_list></call><operator pos:line="20" pos:column="22">.<pos:position pos:line="20" pos:column="23"/></operator><call><name pos:line="20" pos:column="23">memoryUnlink<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">*<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">this<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="22" pos:column="9">setPrivateKey<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">shareable<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>

        <comment type="line" pos:line="24" pos:column="9">// lock the entry until rebuilding is done</comment>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">lock<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="string" pos:line="25" pos:column="14">"storeLateRelease"<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">setReleaseFlag<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="27" pos:column="9">LateReleaseStack<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">push<pos:position pos:line="27" pos:column="30"/></name></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">this<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">storeLog<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">STORE_LOG_RELEASE<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">this<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">swap_filen<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">&gt;<pos:position pos:line="32" pos:column="24"/></operator> <operator pos:line="32" pos:column="22">-<pos:position pos:line="32" pos:column="23"/></operator><literal type="number" pos:line="32" pos:column="23">1<pos:position pos:line="32" pos:column="24"/></literal> <operator pos:line="32" pos:column="25">&amp;&amp;<pos:position pos:line="32" pos:column="35"/></operator> <operator pos:line="32" pos:column="28">!<pos:position pos:line="32" pos:column="29"/></operator><call><name pos:line="32" pos:column="29">EBIT_TEST<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">flags<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">KEY_PRIVATE<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="59"/></condition><then pos:line="32" pos:column="59"> <block pos:line="32" pos:column="60">{
        <comment type="line" pos:line="33" pos:column="9">// log before unlink() below clears swap_filen</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">storeDirSwapLog<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">this<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">SWAP_LOG_DEL<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">Store<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">::<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">Root<pos:position pos:line="37" pos:column="16"/></name></name><argument_list pos:line="37" pos:column="16">()<pos:position pos:line="37" pos:column="18"/></argument_list></call><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">unlink<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><operator pos:line="37" pos:column="26">*<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">this<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">destroyStoreEntry<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><cast type="static" pos:line="38" pos:column="23">static_cast<argument_list type="generic" pos:line="38" pos:column="34">&lt;<argument><expr><name pos:line="38" pos:column="35">hash_link<pos:position pos:line="38" pos:column="44"/></name> <operator pos:line="38" pos:column="45">*<pos:position pos:line="38" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="38" pos:column="50"/></argument_list><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">this<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></cast></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">PROF_stop<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">storeRelease<pos:position pos:line="39" pos:column="27"/></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5076_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSStoreState<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">read_<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">buf<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">size_t<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">size<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">off_t<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">aOffset<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">STRCB<pos:position pos:line="2" pos:column="75"/></name> <modifier pos:line="2" pos:column="76">*<pos:position pos:line="2" pos:column="77"/></modifier></type> <name pos:line="2" pos:column="78">aCallback<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="89">void<pos:position pos:line="2" pos:column="93"/></name> <modifier pos:line="2" pos:column="94">*<pos:position pos:line="2" pos:column="95"/></modifier></type><name pos:line="2" pos:column="95">aCallbackData<pos:position pos:line="2" pos:column="108"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="109"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name><name pos:line="4" pos:column="12">read<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">callback<pos:position pos:line="4" pos:column="25"/></name></name> <operator pos:line="4" pos:column="26">==<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name><name pos:line="5" pos:column="12">read<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">callback_data<pos:position pos:line="5" pos:column="30"/></name></name> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><operator pos:line="6" pos:column="12">!<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">reading<pos:position pos:line="6" pos:column="20"/></name></expr></argument>)<pos:position pos:line="6" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">closing<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">aCallback<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name><name pos:line="10" pos:column="10">theFile<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">canRead<pos:position pos:line="10" pos:column="26"/></name></name><argument_list pos:line="10" pos:column="26">()<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">79<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"queueing read because theFile can't read"<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">assert<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">opening<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">pending_reads<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">.<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">emplace<pos:position pos:line="13" pos:column="30"/></name></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">buf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">size<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">aOffset<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">aCallback<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="62">aCallbackData<pos:position pos:line="13" pos:column="75"/></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">read<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">.<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">callback<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">aCallback<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">read<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">.<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">callback_data<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">cbdataReference<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">aCallbackData<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">79<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">3<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"UFSStoreState::read_: dirno "<pos:position pos:line="19" pos:column="49"/></literal> <operator pos:line="19" pos:column="50">&lt;&lt;<pos:position pos:line="19" pos:column="58"/></operator> <name pos:line="19" pos:column="53">swap_dirn<pos:position pos:line="19" pos:column="62"/></name>  <operator pos:line="19" pos:column="64">&lt;&lt;<pos:position pos:line="19" pos:column="72"/></operator> <literal type="string" pos:line="19" pos:column="67">", fileno "<pos:position pos:line="19" pos:column="78"/></literal><operator pos:line="19" pos:column="78">&lt;&lt;<pos:position pos:line="19" pos:column="86"/></operator>
           <call><name><name pos:line="20" pos:column="12">std<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">::<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">setfill<pos:position pos:line="20" pos:column="24"/></name></name><argument_list pos:line="20" pos:column="24">(<argument><expr><literal type="char" pos:line="20" pos:column="25">'0'<pos:position pos:line="20" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call> <operator pos:line="20" pos:column="30">&lt;&lt;<pos:position pos:line="20" pos:column="38"/></operator> <name><name pos:line="20" pos:column="33">std<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">::<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">hex<pos:position pos:line="20" pos:column="41"/></name></name> <operator pos:line="20" pos:column="42">&lt;&lt;<pos:position pos:line="20" pos:column="50"/></operator> <name><name pos:line="20" pos:column="45">std<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">::<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">uppercase<pos:position pos:line="20" pos:column="59"/></name></name> <operator pos:line="20" pos:column="60">&lt;&lt;<pos:position pos:line="20" pos:column="68"/></operator> <call><name><name pos:line="20" pos:column="63">std<pos:position pos:line="20" pos:column="66"/></name><operator pos:line="20" pos:column="66">::<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="68">setw<pos:position pos:line="20" pos:column="72"/></name></name><argument_list pos:line="20" pos:column="72">(<argument><expr><literal type="number" pos:line="20" pos:column="73">8<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call> <operator pos:line="20" pos:column="76">&lt;&lt;<pos:position pos:line="20" pos:column="84"/></operator> <name pos:line="20" pos:column="79">swap_filen<pos:position pos:line="20" pos:column="89"/></name></expr></argument>)<pos:position pos:line="20" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="91"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">offset_<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">aOffset<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">read_buf<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">buf<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">reading<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="boolean" pos:line="23" pos:column="15">true<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">theFile<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">read<pos:position pos:line="24" pos:column="18"/></name></name><argument_list pos:line="24" pos:column="18">(<argument><expr><operator pos:line="24" pos:column="19">new<pos:position pos:line="24" pos:column="22"/></operator> <call><name pos:line="24" pos:column="23">ReadRequest<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">buf<pos:position pos:line="24" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="24" pos:column="39">aOffset<pos:position pos:line="24" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="24" pos:column="47">size<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7048_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Mem<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">Segment<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">create<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">off_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">aSize<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">aSize<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">&gt;<pos:position pos:line="4" pos:column="22"/></operator> <literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">theMem<pos:position pos:line="5" pos:column="19"/></name></expr></argument>)<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">checkSupport<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><literal type="string" pos:line="6" pos:column="18">"Fake segment creation"<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">bool<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">inserted<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><call><name><name pos:line="8" pos:column="27">Segments<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">insert<pos:position pos:line="8" pos:column="42"/></name></name><argument_list pos:line="8" pos:column="42">(<argument><expr><call><name><name pos:line="8" pos:column="43">std<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">::<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">make_pair<pos:position pos:line="8" pos:column="57"/></name></name><argument_list pos:line="8" pos:column="57">(<argument><expr><name pos:line="8" pos:column="58">theName<pos:position pos:line="8" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">this<pos:position pos:line="8" pos:column="71"/></name></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call><operator pos:line="8" pos:column="73">.<pos:position pos:line="8" pos:column="74"/></operator><name pos:line="8" pos:column="74">second<pos:position pos:line="8" pos:column="80"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="81"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">inserted<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">fatalf<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"Duplicate fake segment creation: %s"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="55">theName<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">.<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">termedBuf<pos:position pos:line="10" pos:column="72"/></name></name><argument_list pos:line="10" pos:column="72">()<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">theMem<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <operator pos:line="12" pos:column="14">new<pos:position pos:line="12" pos:column="17"/></operator> <name><name pos:line="12" pos:column="18">char<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><name pos:line="12" pos:column="23">aSize<pos:position pos:line="12" pos:column="28"/></name></expr>]<pos:position pos:line="12" pos:column="29"/></index></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">theSize<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">aSize<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">doUnlink<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="boolean" pos:line="14" pos:column="16">true<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">54<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="19">HERE<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&lt;&lt;<pos:position pos:line="16" pos:column="32"/></operator> <literal type="string" pos:line="16" pos:column="27">"created "<pos:position pos:line="16" pos:column="37"/></literal> <operator pos:line="16" pos:column="38">&lt;&lt;<pos:position pos:line="16" pos:column="46"/></operator> <name pos:line="16" pos:column="41">theName<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">&lt;&lt;<pos:position pos:line="16" pos:column="57"/></operator> <literal type="string" pos:line="16" pos:column="52">" fake segment: "<pos:position pos:line="16" pos:column="69"/></literal> <operator pos:line="16" pos:column="70">&lt;&lt;<pos:position pos:line="16" pos:column="78"/></operator> <name pos:line="16" pos:column="73">theSize<pos:position pos:line="16" pos:column="80"/></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

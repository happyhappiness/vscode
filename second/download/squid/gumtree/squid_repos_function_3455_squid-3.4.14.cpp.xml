<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3455_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">sendBodyTooLargeError<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">()<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">tmp_noaddr<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">tmp_noaddr<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">.<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">setNoAddr<pos:position pos:line="5" pos:column="25"/></name></name><argument_list pos:line="5" pos:column="25">()<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt> <comment type="line" pos:line="5" pos:column="29">// TODO: make a global const</comment>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">http<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">logType<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">LOG_TCP_DENIED_REPLY<pos:position pos:line="6" pos:column="41"/></name></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ErrorState<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">err<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><call><name pos:line="7" pos:column="23">clientBuildError<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">ERR_TOO_BIG<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="53">Http<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">::<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="59">scForbidden<pos:position pos:line="7" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="72">NULL<pos:position pos:line="7" pos:column="76"/></name></expr></argument>,
                                       <argument><expr><ternary><condition><expr><call><name><name pos:line="8" pos:column="40">http<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">getConn<pos:position pos:line="8" pos:column="53"/></name></name><argument_list pos:line="8" pos:column="53">()<pos:position pos:line="8" pos:column="55"/></argument_list></call> <operator pos:line="8" pos:column="56">!=<pos:position pos:line="8" pos:column="58"/></operator> <name pos:line="8" pos:column="59">NULL<pos:position pos:line="8" pos:column="63"/></name></expr> ?<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65"> <expr><call><name><name pos:line="8" pos:column="66">http<pos:position pos:line="8" pos:column="70"/></name><operator pos:line="8" pos:column="70">-&gt;<pos:position pos:line="8" pos:column="75"/></operator><name pos:line="8" pos:column="72">getConn<pos:position pos:line="8" pos:column="79"/></name></name><argument_list pos:line="8" pos:column="79">()<pos:position pos:line="8" pos:column="81"/></argument_list></call><operator pos:line="8" pos:column="81">-&gt;<pos:position pos:line="8" pos:column="86"/></operator><name><name pos:line="8" pos:column="83">clientConnection<pos:position pos:line="8" pos:column="99"/></name><operator pos:line="8" pos:column="99">-&gt;<pos:position pos:line="8" pos:column="104"/></operator><name pos:line="8" pos:column="101">remote<pos:position pos:line="8" pos:column="107"/></name></name></expr> <pos:position pos:line="8" pos:column="108"/></then><else pos:line="8" pos:column="108">: <expr><name pos:line="8" pos:column="110">tmp_noaddr<pos:position pos:line="8" pos:column="120"/></name></expr></else></ternary></expr></argument>,
                                       <argument><expr><name><name pos:line="9" pos:column="40">http<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">request<pos:position pos:line="9" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">removeClientStoreReference<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator><operator pos:line="10" pos:column="33">(<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">sc<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">)<pos:position pos:line="10" pos:column="37"/></operator></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">http<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">HTTPMSGUNLOCK<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">reply<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">startError<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">err<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>

}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1874_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">storeDirGetBlkSize<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">path<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">blksize<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">HAVE_STATVFS<pos:position pos:line="4" pos:column="17"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">statvfs<pos:position pos:line="6" pos:column="19"/></name></name></type> <name pos:line="6" pos:column="20">sfs<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">statvfs<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">path<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">sfs<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">50<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">""<pos:position pos:line="9" pos:column="25"/></literal> <operator pos:line="9" pos:column="26">&lt;&lt;<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="29">path<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">&lt;&lt;<pos:position pos:line="9" pos:column="42"/></operator> <literal type="string" pos:line="9" pos:column="37">": "<pos:position pos:line="9" pos:column="41"/></literal> <operator pos:line="9" pos:column="42">&lt;&lt;<pos:position pos:line="9" pos:column="50"/></operator> <call><name pos:line="9" pos:column="45">xstrerror<pos:position pos:line="9" pos:column="54"/></name><argument_list pos:line="9" pos:column="54">()<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">blksize<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">2048<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">blksize<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">sfs<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">f_frsize<pos:position pos:line="14" pos:column="34"/></name></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
<cpp:else pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">else<pos:position pos:line="15" pos:column="6"/></cpp:directive></cpp:else>

    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">struct<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">statfs<pos:position pos:line="17" pos:column="18"/></name></name></type> <name pos:line="17" pos:column="19">sfs<pos:position pos:line="17" pos:column="22"/></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">statfs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">path<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="22">&amp;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="23">sfs<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">50<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">""<pos:position pos:line="20" pos:column="25"/></literal> <operator pos:line="20" pos:column="26">&lt;&lt;<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="29">path<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">&lt;&lt;<pos:position pos:line="20" pos:column="42"/></operator> <literal type="string" pos:line="20" pos:column="37">": "<pos:position pos:line="20" pos:column="41"/></literal> <operator pos:line="20" pos:column="42">&lt;&lt;<pos:position pos:line="20" pos:column="50"/></operator> <call><name pos:line="20" pos:column="45">xstrerror<pos:position pos:line="20" pos:column="54"/></name><argument_list pos:line="20" pos:column="54">()<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">blksize<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">2048<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">blksize<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">)<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="22">sfs<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">f_bsize<pos:position pos:line="25" pos:column="33"/></name></name></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="27" pos:column="5">/*
     * Sanity check; make sure we have a meaningful value.
     */</comment>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">blksize<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&lt;<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="20">512<pos:position pos:line="31" pos:column="23"/></literal></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">blksize<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <literal type="number" pos:line="32" pos:column="20">2048<pos:position pos:line="32" pos:column="24"/></literal></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt></block></then></if>

    <return pos:line="34" pos:column="5">return <expr><literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

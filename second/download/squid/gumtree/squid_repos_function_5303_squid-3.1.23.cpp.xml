<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5303_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Icmp6<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Recv<pos:position pos:line="2" pos:column="12"/></name></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">n<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">addrinfo<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">from<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
<comment type="line" pos:line="6" pos:column="1">//    struct ip6_hdr *ip = NULL;</comment>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">pkt<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">icmp6_hdr<pos:position pos:line="8" pos:column="21"/></name></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">icmp6header<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><name pos:line="8" pos:column="37">NULL<pos:position pos:line="8" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">icmpEchoData<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">echo<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">timeval<pos:position pos:line="10" pos:column="19"/></name></name></type> <name pos:line="10" pos:column="20">now<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="11" pos:column="5">static<pos:position pos:line="11" pos:column="11"/></specifier> <type><name pos:line="11" pos:column="12">pingerReplyData<pos:position pos:line="11" pos:column="27"/></name></type> <name pos:line="11" pos:column="28">preply<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">icmp_sock<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&lt;<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block pos:line="13" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">42<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">HERE<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">&lt;&lt;<pos:position pos:line="14" pos:column="35"/></operator> <literal type="string" pos:line="14" pos:column="30">"dropping ICMPv6 read. No socket!?"<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">pkt<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">==<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">pkt<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">(<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">char<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><operator pos:line="19" pos:column="22">)<pos:position pos:line="19" pos:column="23"/></operator><call><name pos:line="19" pos:column="23">xmalloc<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">MAX_PKT6_SZ<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">preply<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">from<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">InitAddrInfo<pos:position pos:line="22" pos:column="29"/></name></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">from<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">n<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">recvfrom<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">icmp_sock<pos:position pos:line="24" pos:column="27"/></name></expr></argument>,
                 <argument><expr><operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">void<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></operator><operator pos:line="25" pos:column="25">)<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">pkt<pos:position pos:line="25" pos:column="29"/></name></expr></argument>,
                 <argument><expr><name pos:line="26" pos:column="18">MAX_PKT6_SZ<pos:position pos:line="26" pos:column="29"/></name></expr></argument>,
                 <argument><expr><literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="28" pos:column="18">from<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">ai_addr<pos:position pos:line="28" pos:column="31"/></name></name></expr></argument>,
                 <argument><expr><operator pos:line="29" pos:column="18">&amp;<pos:position pos:line="29" pos:column="23"/></operator><name><name pos:line="29" pos:column="19">from<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">ai_addrlen<pos:position pos:line="29" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">preply<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">from<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <operator pos:line="31" pos:column="19">*<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">from<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">GETTIMEOFDAY_NO_TZP<pos:position pos:line="33" pos:column="24"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">gettimeofday<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">now<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>

<cpp:else pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">else<pos:position pos:line="37" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">gettimeofday<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><operator pos:line="39" pos:column="18">&amp;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="19">now<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">NULL<pos:position pos:line="39" pos:column="28"/></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>

<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">debugs<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><literal type="number" pos:line="43" pos:column="12">42<pos:position pos:line="43" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="16">8<pos:position pos:line="43" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="19">HERE<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">&lt;&lt;<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="27">n<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">&lt;&lt;<pos:position pos:line="43" pos:column="37"/></operator> <literal type="string" pos:line="43" pos:column="32">" bytes from "<pos:position pos:line="43" pos:column="46"/></literal> <operator pos:line="43" pos:column="47">&lt;&lt;<pos:position pos:line="43" pos:column="55"/></operator> <name><name pos:line="43" pos:column="50">preply<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">.<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="57">from<pos:position pos:line="43" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>

<comment type="line" pos:line="45" pos:column="1">// FIXME INET6 : The IPv6 Header (ip6_hdr) is not availble directly &gt;:-(</comment>
<comment type="line" pos:line="46" pos:column="1">//</comment>
<comment type="line" pos:line="47" pos:column="1">// TTL still has to come from the IP header somewhere.</comment>
<comment type="line" pos:line="48" pos:column="1">//	still need to strip and process it properly.</comment>
<comment type="line" pos:line="49" pos:column="1">//	probably have to rely on RTT as given by timestamp in data sent and current.</comment>
    <comment type="block" pos:line="50" pos:column="5">/* IPv6 Header Structures (linux)
    struct ip6_hdr

    // fields (via simple define)
    #define ip6_vfc		// N.A
    #define ip6_flow	// N/A
    #define ip6_plen	// payload length.
    #define ip6_nxt		// expect to be type 0x3a - ICMPv6
    #define ip6_hlim	// MAX hops  (always 64, but no guarantee)
    #define ip6_hops	// HOPS!!!  (can it be true??)


        ip = (struct ip6_hdr *) pkt;
        pkt += sizeof(ip6_hdr);

    debugs(42,0, HERE &lt;&lt; "ip6_nxt=" &lt;&lt; ip-&gt;ip6_nxt &lt;&lt;
    		", ip6_plen=" &lt;&lt; ip-&gt;ip6_plen &lt;&lt;
    		", ip6_hlim=" &lt;&lt; ip-&gt;ip6_hlim &lt;&lt;
    		", ip6_hops=" &lt;&lt; ip-&gt;ip6_hops	&lt;&lt;
    		" ::: 40 == sizef(ip6_hdr) == " &lt;&lt; sizeof(ip6_hdr)
    );
    */</comment>

    <expr_stmt><expr><name pos:line="73" pos:column="5">icmp6header<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <operator pos:line="73" pos:column="19">(<pos:position pos:line="73" pos:column="20"/></operator>struct <name pos:line="73" pos:column="27">icmp6_hdr<pos:position pos:line="73" pos:column="36"/></name> <operator pos:line="73" pos:column="37">*<pos:position pos:line="73" pos:column="38"/></operator><operator pos:line="73" pos:column="38">)<pos:position pos:line="73" pos:column="39"/></operator> <name pos:line="73" pos:column="40">pkt<pos:position pos:line="73" pos:column="43"/></name></expr>;<pos:position pos:line="73" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="74" pos:column="5">pkt<pos:position pos:line="74" pos:column="8"/></name> <operator pos:line="74" pos:column="9">+=<pos:position pos:line="74" pos:column="11"/></operator> <sizeof pos:line="74" pos:column="12">sizeof<argument_list pos:line="74" pos:column="18">(<argument><expr><name pos:line="74" pos:column="19">icmp6_hdr<pos:position pos:line="74" pos:column="28"/></name></expr></argument>)<pos:position pos:line="74" pos:column="29"/></argument_list></sizeof></expr>;<pos:position pos:line="74" pos:column="30"/></expr_stmt>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">icmp6header<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">-&gt;<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="22">icmp6_type<pos:position pos:line="76" pos:column="32"/></name></name> <operator pos:line="76" pos:column="33">!=<pos:position pos:line="76" pos:column="35"/></operator> <name pos:line="76" pos:column="36">ICMP6_ECHO_REPLY<pos:position pos:line="76" pos:column="52"/></name></expr>)<pos:position pos:line="76" pos:column="53"/></condition><then pos:line="76" pos:column="53"> <block pos:line="76" pos:column="54">{

        <switch pos:line="78" pos:column="9">switch <condition pos:line="78" pos:column="16">(<expr><name><name pos:line="78" pos:column="17">icmp6header<pos:position pos:line="78" pos:column="28"/></name><operator pos:line="78" pos:column="28">-&gt;<pos:position pos:line="78" pos:column="33"/></operator><name pos:line="78" pos:column="30">icmp6_type<pos:position pos:line="78" pos:column="40"/></name></name></expr>)<pos:position pos:line="78" pos:column="41"/></condition> <block pos:line="78" pos:column="42">{
        <case pos:line="79" pos:column="9">case <expr><literal type="number" pos:line="79" pos:column="14">134<pos:position pos:line="79" pos:column="17"/></literal></expr>:<pos:position pos:line="79" pos:column="18"/></case>
        <case pos:line="80" pos:column="9">case <expr><literal type="number" pos:line="80" pos:column="14">135<pos:position pos:line="80" pos:column="17"/></literal></expr>:<pos:position pos:line="80" pos:column="18"/></case>
        <case pos:line="81" pos:column="9">case <expr><literal type="number" pos:line="81" pos:column="14">136<pos:position pos:line="81" pos:column="17"/></literal></expr>:<pos:position pos:line="81" pos:column="18"/></case>
            <comment type="block" pos:line="82" pos:column="13">/* ignore Router/Neighbour Advertisements */</comment>
            <break pos:line="83" pos:column="13">break;<pos:position pos:line="83" pos:column="19"/></break>

        <default pos:line="85" pos:column="9">default:<pos:position pos:line="85" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">debugs<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><literal type="number" pos:line="86" pos:column="20">42<pos:position pos:line="86" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="24">8<pos:position pos:line="86" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="27">HERE<pos:position pos:line="86" pos:column="31"/></name> <operator pos:line="86" pos:column="32">&lt;&lt;<pos:position pos:line="86" pos:column="40"/></operator> <name><name pos:line="86" pos:column="35">preply<pos:position pos:line="86" pos:column="41"/></name><operator pos:line="86" pos:column="41">.<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="42">from<pos:position pos:line="86" pos:column="46"/></name></name> <operator pos:line="86" pos:column="47">&lt;&lt;<pos:position pos:line="86" pos:column="55"/></operator> <literal type="string" pos:line="86" pos:column="50">" said: "<pos:position pos:line="86" pos:column="59"/></literal> <operator pos:line="86" pos:column="60">&lt;&lt;<pos:position pos:line="86" pos:column="68"/></operator> <name><name pos:line="86" pos:column="63">icmp6header<pos:position pos:line="86" pos:column="74"/></name><operator pos:line="86" pos:column="74">-&gt;<pos:position pos:line="86" pos:column="79"/></operator><name pos:line="86" pos:column="76">icmp6_type<pos:position pos:line="86" pos:column="86"/></name></name> <operator pos:line="86" pos:column="87">&lt;&lt;<pos:position pos:line="86" pos:column="95"/></operator> <literal type="string" pos:line="86" pos:column="90">"/"<pos:position pos:line="86" pos:column="93"/></literal> <operator pos:line="86" pos:column="94">&lt;&lt;<pos:position pos:line="86" pos:column="102"/></operator> <operator pos:line="86" pos:column="97">(<pos:position pos:line="86" pos:column="98"/></operator><name pos:line="86" pos:column="98">int<pos:position pos:line="86" pos:column="101"/></name><operator pos:line="86" pos:column="101">)<pos:position pos:line="86" pos:column="102"/></operator><name><name pos:line="86" pos:column="102">icmp6header<pos:position pos:line="86" pos:column="113"/></name><operator pos:line="86" pos:column="113">-&gt;<pos:position pos:line="86" pos:column="118"/></operator><name pos:line="86" pos:column="115">icmp6_code<pos:position pos:line="86" pos:column="125"/></name></name> <operator pos:line="86" pos:column="126">&lt;&lt;<pos:position pos:line="86" pos:column="134"/></operator> <literal type="string" pos:line="86" pos:column="129">" "<pos:position pos:line="86" pos:column="132"/></literal> <operator pos:line="86" pos:column="133">&lt;&lt;<pos:position pos:line="86" pos:column="141"/></operator>
                   <operator pos:line="87" pos:column="20">(<pos:position pos:line="87" pos:column="21"/></operator> <ternary><condition><expr><name><name pos:line="87" pos:column="22">icmp6header<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">-&gt;<pos:position pos:line="87" pos:column="38"/></operator><name pos:line="87" pos:column="35">icmp6_type<pos:position pos:line="87" pos:column="45"/></name></name><operator pos:line="87" pos:column="45">&amp;<pos:position pos:line="87" pos:column="50"/></operator><literal type="number" pos:line="87" pos:column="46">0x80<pos:position pos:line="87" pos:column="50"/></literal></expr> ?<pos:position pos:line="87" pos:column="52"/></condition><then pos:line="87" pos:column="52"> <expr><name><name pos:line="87" pos:column="53">icmp6HighPktStr<pos:position pos:line="87" pos:column="68"/></name><index pos:line="87" pos:column="68">[<expr><call pos:line="87" pos:column="69">(<name pos:line="87" pos:column="70">int<pos:position pos:line="87" pos:column="73"/></name>)<argument_list pos:line="87" pos:column="74">(<argument><expr><name><name pos:line="87" pos:column="75">icmp6header<pos:position pos:line="87" pos:column="86"/></name><operator pos:line="87" pos:column="86">-&gt;<pos:position pos:line="87" pos:column="91"/></operator><name pos:line="87" pos:column="88">icmp6_type<pos:position pos:line="87" pos:column="98"/></name></name><operator pos:line="87" pos:column="98">&amp;<pos:position pos:line="87" pos:column="103"/></operator><literal type="number" pos:line="87" pos:column="99">0x7f<pos:position pos:line="87" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="104"/></argument_list></call></expr>]<pos:position pos:line="87" pos:column="105"/></index></name></expr> <pos:position pos:line="87" pos:column="106"/></then><else pos:line="87" pos:column="106">: <expr><name><name pos:line="87" pos:column="108">icmp6LowPktStr<pos:position pos:line="87" pos:column="122"/></name><index pos:line="87" pos:column="122">[<expr><call pos:line="87" pos:column="123">(<name pos:line="87" pos:column="124">int<pos:position pos:line="87" pos:column="127"/></name>)<argument_list pos:line="87" pos:column="128">(<argument><expr><name><name pos:line="87" pos:column="129">icmp6header<pos:position pos:line="87" pos:column="140"/></name><operator pos:line="87" pos:column="140">-&gt;<pos:position pos:line="87" pos:column="145"/></operator><name pos:line="87" pos:column="142">icmp6_type<pos:position pos:line="87" pos:column="152"/></name></name><operator pos:line="87" pos:column="152">&amp;<pos:position pos:line="87" pos:column="157"/></operator><literal type="number" pos:line="87" pos:column="153">0x7f<pos:position pos:line="87" pos:column="157"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="158"/></argument_list></call></expr>]<pos:position pos:line="87" pos:column="159"/></index></name></expr></else></ternary> <operator pos:line="87" pos:column="160">)<pos:position pos:line="87" pos:column="161"/></operator></expr></argument>
                  )<pos:position pos:line="88" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></switch>
        <return pos:line="90" pos:column="9">return;<pos:position pos:line="90" pos:column="16"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name><name pos:line="93" pos:column="9">icmp6header<pos:position pos:line="93" pos:column="20"/></name><operator pos:line="93" pos:column="20">-&gt;<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="22">icmp6_id<pos:position pos:line="93" pos:column="30"/></name></name> <operator pos:line="93" pos:column="31">!=<pos:position pos:line="93" pos:column="33"/></operator> <name pos:line="93" pos:column="34">icmp_ident<pos:position pos:line="93" pos:column="44"/></name></expr>)<pos:position pos:line="93" pos:column="45"/></condition><then pos:line="93" pos:column="45"> <block pos:line="93" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">debugs<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><literal type="number" pos:line="94" pos:column="16">42<pos:position pos:line="94" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="20">8<pos:position pos:line="94" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="23">HERE<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">&lt;&lt;<pos:position pos:line="94" pos:column="36"/></operator> <literal type="string" pos:line="94" pos:column="31">"dropping Icmp6 read. IDENT check failed. ident=='"<pos:position pos:line="94" pos:column="82"/></literal> <operator pos:line="94" pos:column="83">&lt;&lt;<pos:position pos:line="94" pos:column="91"/></operator> <name pos:line="94" pos:column="86">icmp_ident<pos:position pos:line="94" pos:column="96"/></name> <operator pos:line="94" pos:column="97">&lt;&lt;<pos:position pos:line="94" pos:column="105"/></operator> <literal type="string" pos:line="94" pos:column="100">"'=='"<pos:position pos:line="94" pos:column="106"/></literal> <operator pos:line="94" pos:column="107">&lt;&lt;<pos:position pos:line="94" pos:column="115"/></operator> <name><name pos:line="94" pos:column="110">icmp6header<pos:position pos:line="94" pos:column="121"/></name><operator pos:line="94" pos:column="121">-&gt;<pos:position pos:line="94" pos:column="126"/></operator><name pos:line="94" pos:column="123">icmp6_id<pos:position pos:line="94" pos:column="131"/></name></name> <operator pos:line="94" pos:column="132">&lt;&lt;<pos:position pos:line="94" pos:column="140"/></operator> <literal type="string" pos:line="94" pos:column="135">"'"<pos:position pos:line="94" pos:column="138"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="140"/></expr_stmt>
        <return pos:line="95" pos:column="9">return;<pos:position pos:line="95" pos:column="16"/></return>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="98" pos:column="5">echo<pos:position pos:line="98" pos:column="9"/></name> <operator pos:line="98" pos:column="10">=<pos:position pos:line="98" pos:column="11"/></operator> <operator pos:line="98" pos:column="12">(<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="13">icmpEchoData<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">*<pos:position pos:line="98" pos:column="27"/></operator><operator pos:line="98" pos:column="27">)<pos:position pos:line="98" pos:column="28"/></operator> <name pos:line="98" pos:column="29">pkt<pos:position pos:line="98" pos:column="32"/></name></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="100" pos:column="5">preply<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">.<pos:position pos:line="100" pos:column="12"/></operator><name pos:line="100" pos:column="12">opcode<pos:position pos:line="100" pos:column="18"/></name></name> <operator pos:line="100" pos:column="19">=<pos:position pos:line="100" pos:column="20"/></operator> <name><name pos:line="100" pos:column="21">echo<pos:position pos:line="100" pos:column="25"/></name><operator pos:line="100" pos:column="25">-&gt;<pos:position pos:line="100" pos:column="30"/></operator><name pos:line="100" pos:column="27">opcode<pos:position pos:line="100" pos:column="33"/></name></name></expr>;<pos:position pos:line="100" pos:column="34"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="102" pos:column="5">struct<pos:position pos:line="102" pos:column="11"/></name> <name pos:line="102" pos:column="12">timeval<pos:position pos:line="102" pos:column="19"/></name></name></type> <name pos:line="102" pos:column="20">tv<pos:position pos:line="102" pos:column="22"/></name></decl>;<pos:position pos:line="102" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">memcpy<pos:position pos:line="103" pos:column="11"/></name><argument_list pos:line="103" pos:column="11">(<argument><expr><operator pos:line="103" pos:column="12">&amp;<pos:position pos:line="103" pos:column="17"/></operator><name pos:line="103" pos:column="13">tv<pos:position pos:line="103" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="17">&amp;<pos:position pos:line="103" pos:column="22"/></operator><name><name pos:line="103" pos:column="18">echo<pos:position pos:line="103" pos:column="22"/></name><operator pos:line="103" pos:column="22">-&gt;<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="24">tv<pos:position pos:line="103" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="28">sizeof<argument_list pos:line="103" pos:column="34">(<argument><expr pos:line="103" pos:column="35">struct <name pos:line="103" pos:column="42">timeval<pos:position pos:line="103" pos:column="49"/></name></expr></argument>)<pos:position pos:line="103" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">preply<pos:position pos:line="104" pos:column="11"/></name><operator pos:line="104" pos:column="11">.<pos:position pos:line="104" pos:column="12"/></operator><name pos:line="104" pos:column="12">rtt<pos:position pos:line="104" pos:column="15"/></name></name> <operator pos:line="104" pos:column="16">=<pos:position pos:line="104" pos:column="17"/></operator> <call><name pos:line="104" pos:column="18">tvSubMsec<pos:position pos:line="104" pos:column="27"/></name><argument_list pos:line="104" pos:column="27">(<argument><expr><name pos:line="104" pos:column="28">tv<pos:position pos:line="104" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="32">now<pos:position pos:line="104" pos:column="35"/></name></expr></argument>)<pos:position pos:line="104" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/*
     * FIXME INET6: Without access to the IPv6-Hops header we must rely on the total RTT
     *      and could caculate the hops from that, but it produces some weird value mappings using ipHops
     *	for now everything is 1 v6 hop away with variant RTT
     * WANT:    preply.hops = ip-&gt;ip6_hops; // ipHops(ip-&gt;ip_hops);
     */</comment>
    <expr_stmt><expr><name><name pos:line="112" pos:column="5">preply<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">.<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">hops<pos:position pos:line="112" pos:column="16"/></name></name> <operator pos:line="112" pos:column="17">=<pos:position pos:line="112" pos:column="18"/></operator> <literal type="number" pos:line="112" pos:column="19">1<pos:position pos:line="112" pos:column="20"/></literal></expr>;<pos:position pos:line="112" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="114" pos:column="5">preply<pos:position pos:line="114" pos:column="11"/></name><operator pos:line="114" pos:column="11">.<pos:position pos:line="114" pos:column="12"/></operator><name pos:line="114" pos:column="12">psize<pos:position pos:line="114" pos:column="17"/></name></name> <operator pos:line="114" pos:column="18">=<pos:position pos:line="114" pos:column="19"/></operator> <name pos:line="114" pos:column="20">n<pos:position pos:line="114" pos:column="21"/></name> <operator pos:line="114" pos:column="22">-<pos:position pos:line="114" pos:column="23"/></operator> <comment type="block" pos:line="114" pos:column="24">/* sizeof(ip6_hdr) - */</comment> <sizeof pos:line="114" pos:column="48">sizeof<argument_list pos:line="114" pos:column="54">(<argument><expr><name pos:line="114" pos:column="55">icmp6_hdr<pos:position pos:line="114" pos:column="64"/></name></expr></argument>)<pos:position pos:line="114" pos:column="65"/></argument_list></sizeof> <operator pos:line="114" pos:column="66">-<pos:position pos:line="114" pos:column="67"/></operator> <operator pos:line="114" pos:column="68">(<pos:position pos:line="114" pos:column="69"/></operator><sizeof pos:line="114" pos:column="69">sizeof<argument_list pos:line="114" pos:column="75">(<argument><expr><name pos:line="114" pos:column="76">icmpEchoData<pos:position pos:line="114" pos:column="88"/></name></expr></argument>)<pos:position pos:line="114" pos:column="89"/></argument_list></sizeof> <operator pos:line="114" pos:column="90">-<pos:position pos:line="114" pos:column="91"/></operator> <name pos:line="114" pos:column="92">MAX_PKT6_SZ<pos:position pos:line="114" pos:column="103"/></name><operator pos:line="114" pos:column="103">)<pos:position pos:line="114" pos:column="104"/></operator></expr>;<pos:position pos:line="114" pos:column="105"/></expr_stmt>

    <comment type="block" pos:line="116" pos:column="5">/* Ensure the response packet has safe payload size */</comment>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">( <expr><name><name pos:line="117" pos:column="10">preply<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">.<pos:position pos:line="117" pos:column="17"/></operator><name pos:line="117" pos:column="17">psize<pos:position pos:line="117" pos:column="22"/></name></name> <operator pos:line="117" pos:column="23">&gt;<pos:position pos:line="117" pos:column="27"/></operator> <operator pos:line="117" pos:column="25">(<pos:position pos:line="117" pos:column="26"/></operator><name pos:line="117" pos:column="26">unsigned<pos:position pos:line="117" pos:column="34"/></name> <name pos:line="117" pos:column="35">short<pos:position pos:line="117" pos:column="40"/></name><operator pos:line="117" pos:column="40">)<pos:position pos:line="117" pos:column="41"/></operator> <name pos:line="117" pos:column="42">MAX_PKT6_SZ<pos:position pos:line="117" pos:column="53"/></name></expr>)<pos:position pos:line="117" pos:column="54"/></condition><then pos:line="117" pos:column="54"> <block pos:line="117" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">preply<pos:position pos:line="118" pos:column="15"/></name><operator pos:line="118" pos:column="15">.<pos:position pos:line="118" pos:column="16"/></operator><name pos:line="118" pos:column="16">psize<pos:position pos:line="118" pos:column="21"/></name></name> <operator pos:line="118" pos:column="22">=<pos:position pos:line="118" pos:column="23"/></operator> <name pos:line="118" pos:column="24">MAX_PKT6_SZ<pos:position pos:line="118" pos:column="35"/></name></expr>;<pos:position pos:line="118" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></then> <elseif pos:line="119" pos:column="7">else <if pos:line="119" pos:column="12">if <condition pos:line="119" pos:column="15">( <expr><name><name pos:line="119" pos:column="17">preply<pos:position pos:line="119" pos:column="23"/></name><operator pos:line="119" pos:column="23">.<pos:position pos:line="119" pos:column="24"/></operator><name pos:line="119" pos:column="24">psize<pos:position pos:line="119" pos:column="29"/></name></name> <operator pos:line="119" pos:column="30">&lt;<pos:position pos:line="119" pos:column="34"/></operator> <operator pos:line="119" pos:column="32">(<pos:position pos:line="119" pos:column="33"/></operator><name pos:line="119" pos:column="33">unsigned<pos:position pos:line="119" pos:column="41"/></name> <name pos:line="119" pos:column="42">short<pos:position pos:line="119" pos:column="47"/></name><operator pos:line="119" pos:column="47">)<pos:position pos:line="119" pos:column="48"/></operator><literal type="number" pos:line="119" pos:column="48">0<pos:position pos:line="119" pos:column="49"/></literal></expr>)<pos:position pos:line="119" pos:column="50"/></condition><then pos:line="119" pos:column="50"> <block pos:line="119" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="120" pos:column="9">preply<pos:position pos:line="120" pos:column="15"/></name><operator pos:line="120" pos:column="15">.<pos:position pos:line="120" pos:column="16"/></operator><name pos:line="120" pos:column="16">psize<pos:position pos:line="120" pos:column="21"/></name></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <literal type="number" pos:line="120" pos:column="24">0<pos:position pos:line="120" pos:column="25"/></literal></expr>;<pos:position pos:line="120" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="123" pos:column="5">Log<pos:position pos:line="123" pos:column="8"/></name><argument_list pos:line="123" pos:column="8">(<argument><expr><name><name pos:line="123" pos:column="9">preply<pos:position pos:line="123" pos:column="15"/></name><operator pos:line="123" pos:column="15">.<pos:position pos:line="123" pos:column="16"/></operator><name pos:line="123" pos:column="16">from<pos:position pos:line="123" pos:column="20"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="124" pos:column="9">icmp6header<pos:position pos:line="124" pos:column="20"/></name><operator pos:line="124" pos:column="20">-&gt;<pos:position pos:line="124" pos:column="25"/></operator><name pos:line="124" pos:column="22">icmp6_type<pos:position pos:line="124" pos:column="32"/></name></name></expr></argument>,
        <argument><expr><operator pos:line="125" pos:column="9">(<pos:position pos:line="125" pos:column="10"/></operator> <ternary><condition><expr><name><name pos:line="125" pos:column="11">icmp6header<pos:position pos:line="125" pos:column="22"/></name><operator pos:line="125" pos:column="22">-&gt;<pos:position pos:line="125" pos:column="27"/></operator><name pos:line="125" pos:column="24">icmp6_type<pos:position pos:line="125" pos:column="34"/></name></name><operator pos:line="125" pos:column="34">&amp;<pos:position pos:line="125" pos:column="39"/></operator><literal type="number" pos:line="125" pos:column="35">0x80<pos:position pos:line="125" pos:column="39"/></literal></expr> ?<pos:position pos:line="125" pos:column="41"/></condition><then pos:line="125" pos:column="41"> <expr><name><name pos:line="125" pos:column="42">icmp6HighPktStr<pos:position pos:line="125" pos:column="57"/></name><index pos:line="125" pos:column="57">[<expr><call pos:line="125" pos:column="58">(<name pos:line="125" pos:column="59">int<pos:position pos:line="125" pos:column="62"/></name>)<argument_list pos:line="125" pos:column="63">(<argument><expr><name><name pos:line="125" pos:column="64">icmp6header<pos:position pos:line="125" pos:column="75"/></name><operator pos:line="125" pos:column="75">-&gt;<pos:position pos:line="125" pos:column="80"/></operator><name pos:line="125" pos:column="77">icmp6_type<pos:position pos:line="125" pos:column="87"/></name></name><operator pos:line="125" pos:column="87">&amp;<pos:position pos:line="125" pos:column="92"/></operator><literal type="number" pos:line="125" pos:column="88">0x7f<pos:position pos:line="125" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="93"/></argument_list></call></expr>]<pos:position pos:line="125" pos:column="94"/></index></name></expr> <pos:position pos:line="125" pos:column="95"/></then><else pos:line="125" pos:column="95">: <expr><name><name pos:line="125" pos:column="97">icmp6LowPktStr<pos:position pos:line="125" pos:column="111"/></name><index pos:line="125" pos:column="111">[<expr><call pos:line="125" pos:column="112">(<name pos:line="125" pos:column="113">int<pos:position pos:line="125" pos:column="116"/></name>)<argument_list pos:line="125" pos:column="117">(<argument><expr><name><name pos:line="125" pos:column="118">icmp6header<pos:position pos:line="125" pos:column="129"/></name><operator pos:line="125" pos:column="129">-&gt;<pos:position pos:line="125" pos:column="134"/></operator><name pos:line="125" pos:column="131">icmp6_type<pos:position pos:line="125" pos:column="141"/></name></name><operator pos:line="125" pos:column="141">&amp;<pos:position pos:line="125" pos:column="146"/></operator><literal type="number" pos:line="125" pos:column="142">0x7f<pos:position pos:line="125" pos:column="146"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="147"/></argument_list></call></expr>]<pos:position pos:line="125" pos:column="148"/></index></name></expr></else></ternary> <operator pos:line="125" pos:column="149">)<pos:position pos:line="125" pos:column="150"/></operator></expr></argument>,
        <argument><expr><name><name pos:line="126" pos:column="9">preply<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">.<pos:position pos:line="126" pos:column="16"/></operator><name pos:line="126" pos:column="16">rtt<pos:position pos:line="126" pos:column="19"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="127" pos:column="9">preply<pos:position pos:line="127" pos:column="15"/></name><operator pos:line="127" pos:column="15">.<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="16">hops<pos:position pos:line="127" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="129" pos:column="5">/* send results of the lookup back to squid.*/</comment>
    <expr_stmt><expr><call><name><name pos:line="130" pos:column="5">control<pos:position pos:line="130" pos:column="12"/></name><operator pos:line="130" pos:column="12">.<pos:position pos:line="130" pos:column="13"/></operator><name pos:line="130" pos:column="13">SendResult<pos:position pos:line="130" pos:column="23"/></name></name><argument_list pos:line="130" pos:column="23">(<argument><expr><name pos:line="130" pos:column="24">preply<pos:position pos:line="130" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="32">(<pos:position pos:line="130" pos:column="33"/></operator><sizeof pos:line="130" pos:column="33">sizeof<argument_list pos:line="130" pos:column="39">(<argument><expr><name pos:line="130" pos:column="40">pingerReplyData<pos:position pos:line="130" pos:column="55"/></name></expr></argument>)<pos:position pos:line="130" pos:column="56"/></argument_list></sizeof> <operator pos:line="130" pos:column="57">-<pos:position pos:line="130" pos:column="58"/></operator> <name pos:line="130" pos:column="59">PINGER_PAYLOAD_SZ<pos:position pos:line="130" pos:column="76"/></name> <operator pos:line="130" pos:column="77">+<pos:position pos:line="130" pos:column="78"/></operator> <name><name pos:line="130" pos:column="79">preply<pos:position pos:line="130" pos:column="85"/></name><operator pos:line="130" pos:column="85">.<pos:position pos:line="130" pos:column="86"/></operator><name pos:line="130" pos:column="86">psize<pos:position pos:line="130" pos:column="91"/></name></name><operator pos:line="130" pos:column="91">)<pos:position pos:line="130" pos:column="92"/></operator></expr></argument> )<pos:position pos:line="130" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="95"/></expr_stmt>
}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

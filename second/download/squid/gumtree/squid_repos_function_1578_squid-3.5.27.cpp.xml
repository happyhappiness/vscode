<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1578_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">usage<pos:position pos:line="2" pos:column="6"/></name><parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><name pos:line="2" pos:column="7">void<pos:position pos:line="2" pos:column="11"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="12"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">fprintf<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">stderr<pos:position pos:line="4" pos:column="19"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="5" pos:column="13">"Usage: %s [-cdhvzCFNRVYX] [-n name] [-s | -l facility] [-f config-file] [-[au] port] [-k signal]"<pos:position pos:line="5" pos:column="111"/></literal>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="6" pos:column="22"/></name></expr></cpp:if>
            <literal type="string" pos:line="7" pos:column="13">"[-ir] [-O CommandLine]"<pos:position pos:line="7" pos:column="37"/></literal>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
            <literal type="string" pos:line="9" pos:column="13">"\n"<pos:position pos:line="9" pos:column="17"/></literal>
            <literal type="string" pos:line="10" pos:column="13">"       -a port   Specify HTTP port number (default: %d).\n"<pos:position pos:line="10" pos:column="73"/></literal>
            <literal type="string" pos:line="11" pos:column="13">"       -d level  Write debugging to stderr also.\n"<pos:position pos:line="11" pos:column="65"/></literal>
            <literal type="string" pos:line="12" pos:column="13">"       -f file   Use given config-file instead of\n"<pos:position pos:line="12" pos:column="66"/></literal>
            <literal type="string" pos:line="13" pos:column="13">"                 %s\n"<pos:position pos:line="13" pos:column="36"/></literal>
            <literal type="string" pos:line="14" pos:column="13">"       -h        Print help message.\n"<pos:position pos:line="14" pos:column="53"/></literal>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="15" pos:column="22"/></name></expr></cpp:if>
            <literal type="string" pos:line="16" pos:column="13">"       -i        Installs as a Windows Service (see -n option).\n"<pos:position pos:line="16" pos:column="80"/></literal>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
            <literal type="string" pos:line="18" pos:column="13">"       -k reconfigure|rotate|shutdown|"<pos:position pos:line="18" pos:column="53"/></literal>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">SIGTTIN<pos:position pos:line="19" pos:column="15"/></name></cpp:ifdef>
            <literal type="string" pos:line="20" pos:column="13">"restart|"<pos:position pos:line="20" pos:column="23"/></literal>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
            <literal type="string" pos:line="22" pos:column="13">"interrupt|kill|debug|check|parse\n"<pos:position pos:line="22" pos:column="49"/></literal>
            <literal type="string" pos:line="23" pos:column="13">"                 Parse configuration file, then send signal to \n"<pos:position pos:line="23" pos:column="80"/></literal>
            <literal type="string" pos:line="24" pos:column="13">"                 running copy (except -k parse) and exit.\n"<pos:position pos:line="24" pos:column="74"/></literal>
            <literal type="string" pos:line="25" pos:column="13">"       -n name   Specify service name to use for service operations\n"<pos:position pos:line="25" pos:column="84"/></literal>
            <literal type="string" pos:line="26" pos:column="13">"                 default is: "<pos:position pos:line="26" pos:column="44"/></literal> <name pos:line="26" pos:column="45">APP_SHORTNAME<pos:position pos:line="26" pos:column="58"/></name> <literal type="string" pos:line="26" pos:column="59">".\n"<pos:position pos:line="26" pos:column="64"/></literal>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="27" pos:column="22"/></name></expr></cpp:if>
            <literal type="string" pos:line="28" pos:column="13">"       -r        Removes a Windows Service (see -n option).\n"<pos:position pos:line="28" pos:column="76"/></literal>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
            <literal type="string" pos:line="30" pos:column="13">"       -s | -l facility\n"<pos:position pos:line="30" pos:column="40"/></literal>
            <literal type="string" pos:line="31" pos:column="13">"                 Enable logging to syslog.\n"<pos:position pos:line="31" pos:column="59"/></literal>
            <literal type="string" pos:line="32" pos:column="13">"       -u port   Specify ICP port number (default: %d), disable with 0.\n"<pos:position pos:line="32" pos:column="88"/></literal>
            <literal type="string" pos:line="33" pos:column="13">"       -v        Print version.\n"<pos:position pos:line="33" pos:column="48"/></literal>
            <literal type="string" pos:line="34" pos:column="13">"       -z        Create missing swap directories and then exit.\n"<pos:position pos:line="34" pos:column="80"/></literal>
            <literal type="string" pos:line="35" pos:column="13">"       -C        Do not catch fatal signals.\n"<pos:position pos:line="35" pos:column="61"/></literal>
            <literal type="string" pos:line="36" pos:column="13">"       -D        OBSOLETE. Scheduled for removal.\n"<pos:position pos:line="36" pos:column="66"/></literal>
            <literal type="string" pos:line="37" pos:column="13">"       -F        Don't serve any requests until store is rebuilt.\n"<pos:position pos:line="37" pos:column="82"/></literal>
            <literal type="string" pos:line="38" pos:column="13">"       -N        No daemon mode.\n"<pos:position pos:line="38" pos:column="49"/></literal>
<cpp:if pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">if<pos:position pos:line="39" pos:column="4"/></cpp:directive> <expr><name pos:line="39" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="39" pos:column="22"/></name></expr></cpp:if>
            <literal type="string" pos:line="40" pos:column="13">"       -O options\n"<pos:position pos:line="40" pos:column="34"/></literal>
            <literal type="string" pos:line="41" pos:column="13">"                 Set Windows Service Command line options in Registry.\n"<pos:position pos:line="41" pos:column="87"/></literal>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
            <literal type="string" pos:line="43" pos:column="13">"       -R        Do not set REUSEADDR on port.\n"<pos:position pos:line="43" pos:column="63"/></literal>
            <literal type="string" pos:line="44" pos:column="13">"       -S        Double-check swap during rebuild.\n"<pos:position pos:line="44" pos:column="67"/></literal>
            <literal type="string" pos:line="45" pos:column="13">"       -X        Force full debugging.\n"<pos:position pos:line="45" pos:column="55"/></literal>
            <literal type="string" pos:line="46" pos:column="13">"       -Y        Only return UDP_HIT or UDP_MISS_NOFETCH during fast reload.\n"<pos:position pos:line="46" pos:column="93"/></literal></expr></argument>,
            <argument><expr><name pos:line="47" pos:column="13">APP_SHORTNAME<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="28">CACHE_HTTP_PORT<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">DefaultConfigFile<pos:position pos:line="47" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="64">CACHE_ICP_PORT<pos:position pos:line="47" pos:column="78"/></name></expr></argument>)<pos:position pos:line="47" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">exit<pos:position pos:line="48" pos:column="9"/></name><argument_list pos:line="48" pos:column="9">(<argument><expr><literal type="number" pos:line="48" pos:column="10">1<pos:position pos:line="48" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="13"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

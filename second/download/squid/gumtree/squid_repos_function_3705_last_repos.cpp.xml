<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3705_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Options<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">cfgMethod<pos:position pos:line="1" pos:column="42"/></name></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">ICAP<pos:position pos:line="1" pos:column="47"/></name><operator pos:line="1" pos:column="47">::<pos:position pos:line="1" pos:column="49"/></operator><name pos:line="1" pos:column="49">Method<pos:position pos:line="1" pos:column="55"/></name></name></type> <name pos:line="1" pos:column="56">m<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">m<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">!=<pos:position pos:line="3" pos:column="14"/></operator> <name><name pos:line="3" pos:column="15">ICAP<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">::<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">methodNone<pos:position pos:line="3" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">methods<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">.<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">push_back<pos:position pos:line="4" pos:column="22"/></name></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">m<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1531_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerAlive<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">CachePeer<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">p<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">stats<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">logged_state<pos:position pos:line="4" pos:column="30"/></name></name> <operator pos:line="4" pos:column="31">==<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">PEER_DEAD<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">&amp;&amp;<pos:position pos:line="4" pos:column="54"/></operator> <name><name pos:line="4" pos:column="47">p<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="50">tcp_up<pos:position pos:line="4" pos:column="56"/></name></name></expr>)<pos:position pos:line="4" pos:column="57"/></condition><then pos:line="4" pos:column="57"> <block pos:line="4" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">15<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">DBG_IMPORTANT<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="35">"Detected REVIVED "<pos:position pos:line="5" pos:column="54"/></literal> <operator pos:line="5" pos:column="55">&lt;&lt;<pos:position pos:line="5" pos:column="63"/></operator> <call><name pos:line="5" pos:column="58">neighborTypeStr<pos:position pos:line="5" pos:column="73"/></name><argument_list pos:line="5" pos:column="73">(<argument><expr><name pos:line="5" pos:column="74">p<pos:position pos:line="5" pos:column="75"/></name></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call> <operator pos:line="5" pos:column="77">&lt;&lt;<pos:position pos:line="5" pos:column="85"/></operator> <literal type="string" pos:line="5" pos:column="80">": "<pos:position pos:line="5" pos:column="84"/></literal> <operator pos:line="5" pos:column="85">&lt;&lt;<pos:position pos:line="5" pos:column="93"/></operator> <name><name pos:line="5" pos:column="88">p<pos:position pos:line="5" pos:column="89"/></name><operator pos:line="5" pos:column="89">-&gt;<pos:position pos:line="5" pos:column="94"/></operator><name pos:line="5" pos:column="91">name<pos:position pos:line="5" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">stats<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">.<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">logged_state<pos:position pos:line="6" pos:column="30"/></name></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">PEER_ALIVE<pos:position pos:line="6" pos:column="43"/></name></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">peerClearRR<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">()<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name><name pos:line="8" pos:column="13">p<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">standby<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">mgr<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">valid<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">()<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="13">PeerPoolMgr<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">::<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">Checkpoint<pos:position pos:line="9" pos:column="36"/></name></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name><name pos:line="9" pos:column="37">p<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">standby<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">.<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">mgr<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="53">"revived peer"<pos:position pos:line="9" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="12" pos:column="5">p<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">stats<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">last_reply<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">squid_curtime<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">p<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">stats<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">.<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">probe_start<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

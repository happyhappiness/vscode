<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3424_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">swanSong<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">33<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">2<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"ConnStateData::swanSong: FD "<pos:position pos:line="4" pos:column="49"/></literal> <operator pos:line="4" pos:column="50">&lt;&lt;<pos:position pos:line="4" pos:column="58"/></operator> <name pos:line="4" pos:column="53">fd<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">fd<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">=<pos:position pos:line="5" pos:column="9"/></operator> <operator pos:line="5" pos:column="10">-<pos:position pos:line="5" pos:column="11"/></operator><literal type="number" pos:line="5" pos:column="11">1<pos:position pos:line="5" pos:column="12"/></literal></expr>;<pos:position pos:line="5" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">flags<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">.<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">readMoreRequests<pos:position pos:line="6" pos:column="27"/></name></name> <operator pos:line="6" pos:column="28">=<pos:position pos:line="6" pos:column="29"/></operator> <literal type="boolean" pos:line="6" pos:column="30">false<pos:position pos:line="6" pos:column="35"/></literal></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">clientdbEstablished<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">peer<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="31">-<pos:position pos:line="7" pos:column="32"/></operator><literal type="number" pos:line="7" pos:column="32">1<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>	<comment type="block" pos:line="7" pos:column="41">/* decrement */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><call><name pos:line="8" pos:column="12">areAllContextsForThisConnection<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">()<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">freeAllContexts<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">()<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">auth_user_request<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35"> <block pos:line="11" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">33<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">4<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"ConnStateData::swanSong: freeing auth_user_request '"<pos:position pos:line="12" pos:column="77"/></literal> <operator pos:line="12" pos:column="78">&lt;&lt;<pos:position pos:line="12" pos:column="86"/></operator> <name pos:line="12" pos:column="81">auth_user_request<pos:position pos:line="12" pos:column="98"/></name> <operator pos:line="12" pos:column="99">&lt;&lt;<pos:position pos:line="12" pos:column="107"/></operator> <literal type="string" pos:line="12" pos:column="102">"' (this is '"<pos:position pos:line="12" pos:column="116"/></literal> <operator pos:line="12" pos:column="117">&lt;&lt;<pos:position pos:line="12" pos:column="125"/></operator> <name pos:line="12" pos:column="120">this<pos:position pos:line="12" pos:column="124"/></name> <operator pos:line="12" pos:column="125">&lt;&lt;<pos:position pos:line="12" pos:column="133"/></operator> <literal type="string" pos:line="12" pos:column="128">"')"<pos:position pos:line="12" pos:column="132"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="134"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">auth_user_request<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">onConnectionClose<pos:position pos:line="13" pos:column="45"/></name></name><argument_list pos:line="13" pos:column="45">(<argument><expr><name pos:line="13" pos:column="46">this<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">pinning<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">fd<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">&gt;=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">comm_close<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name><name pos:line="17" pos:column="20">pinning<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">.<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">fd<pos:position pos:line="17" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">BodyProducer<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">::<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">swanSong<pos:position pos:line="19" pos:column="27"/></name></name><argument_list pos:line="19" pos:column="27">()<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">flags<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">.<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">swanSang<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <literal type="boolean" pos:line="20" pos:column="22">true<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

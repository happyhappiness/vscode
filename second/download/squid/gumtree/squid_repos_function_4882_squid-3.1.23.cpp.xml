<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4882_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AuthBasicUserRequest<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">authenticate<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name pos:line="2" pos:column="36">HttpRequest<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">request<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">ConnStateData<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type> <name pos:line="2" pos:column="75">conn<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="81">http_hdr_type<pos:position pos:line="2" pos:column="94"/></name></type> <name pos:line="2" pos:column="95">type<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="100"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">user<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call> <operator pos:line="4" pos:column="19">!=<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">basic_data<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">basic_auth<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><cast type="dynamic" pos:line="6" pos:column="30">dynamic_cast<argument_list type="generic" pos:line="6" pos:column="42">&lt;<argument><expr><name pos:line="6" pos:column="43">BasicUser<pos:position pos:line="6" pos:column="52"/></name> <operator pos:line="6" pos:column="53">*<pos:position pos:line="6" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="58"/></argument_list><argument_list pos:line="6" pos:column="55">(<argument><expr><call><name pos:line="6" pos:column="56">user<pos:position pos:line="6" pos:column="60"/></name><argument_list pos:line="6" pos:column="60">()<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* if the password is not ok, do an identity */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">basic_auth<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">||<pos:position pos:line="10" pos:column="23"/></operator> <name><name pos:line="10" pos:column="24">basic_auth<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">flags<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">credentials_ok<pos:position pos:line="10" pos:column="56"/></name></name> <operator pos:line="10" pos:column="57">!=<pos:position pos:line="10" pos:column="59"/></operator> <literal type="number" pos:line="10" pos:column="60">1<pos:position pos:line="10" pos:column="61"/></literal></expr>)<pos:position pos:line="10" pos:column="62"/></condition><then pos:line="10" pos:column="62">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* are we about to recheck the credentials externally? */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">basic_auth<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">credentials_checkedtime<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">+<pos:position pos:line="14" pos:column="47"/></operator> <name><name pos:line="14" pos:column="48">basicConfig<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">.<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="60">credentialsTTL<pos:position pos:line="14" pos:column="74"/></name></name><operator pos:line="14" pos:column="74">)<pos:position pos:line="14" pos:column="75"/></operator> <operator pos:line="14" pos:column="76">&lt;=<pos:position pos:line="14" pos:column="81"/></operator> <name pos:line="14" pos:column="79">squid_curtime<pos:position pos:line="14" pos:column="92"/></name></expr>)<pos:position pos:line="14" pos:column="93"/></condition><then pos:line="14" pos:column="93"> <block pos:line="14" pos:column="94">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">29<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">4<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"authBasicAuthenticate: credentials expired - rechecking"<pos:position pos:line="15" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="82"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* we have been through the external helper, and the credentials haven't expired */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">29<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="16">9<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"authenticateBasicAuthenticateuser: user '"<pos:position pos:line="20" pos:column="62"/></literal> <operator pos:line="20" pos:column="63">&lt;&lt;<pos:position pos:line="20" pos:column="71"/></operator> <call><name><name pos:line="20" pos:column="66">basic_auth<pos:position pos:line="20" pos:column="76"/></name><operator pos:line="20" pos:column="76">-&gt;<pos:position pos:line="20" pos:column="81"/></operator><name pos:line="20" pos:column="78">username<pos:position pos:line="20" pos:column="86"/></name></name><argument_list pos:line="20" pos:column="86">()<pos:position pos:line="20" pos:column="88"/></argument_list></call> <operator pos:line="20" pos:column="89">&lt;&lt;<pos:position pos:line="20" pos:column="97"/></operator> <literal type="string" pos:line="20" pos:column="92">"' authenticated"<pos:position pos:line="20" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="111"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Decode now takes care of finding the AuthUser struct in the cache */</comment>
    <comment type="block" pos:line="23" pos:column="5">/* after external auth occurs anyway */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">basic_auth<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">expiretime<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <name><name pos:line="24" pos:column="30">current_time<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">.<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">tv_sec<pos:position pos:line="24" pos:column="49"/></name></name></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>

    <return pos:line="26" pos:column="5">return;<pos:position pos:line="26" pos:column="12"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

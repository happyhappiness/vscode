<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2923_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpRequest<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">ignoreRange<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">reason<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">range<pos:position pos:line="4" pos:column="14"/></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition><then pos:line="4" pos:column="15"> <block pos:line="4" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">73<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><cast type="static" pos:line="5" pos:column="23">static_cast<argument_list type="generic" pos:line="5" pos:column="34">&lt;<argument><expr><name pos:line="5" pos:column="35">void<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="44"/></argument_list><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">range<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></cast> <operator pos:line="5" pos:column="49">&lt;&lt;<pos:position pos:line="5" pos:column="57"/></operator> <literal type="string" pos:line="5" pos:column="52">" for "<pos:position pos:line="5" pos:column="59"/></literal> <operator pos:line="5" pos:column="60">&lt;&lt;<pos:position pos:line="5" pos:column="68"/></operator> <name pos:line="5" pos:column="63">reason<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="6" pos:column="9">delete<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">range<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">range<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <comment type="line" pos:line="9" pos:column="5">// Some callers also reset isRanged but it may not be safe for all callers:</comment>
    <comment type="line" pos:line="10" pos:column="5">// isRanged is used to determine whether a weak ETag comparison is allowed,</comment>
    <comment type="line" pos:line="11" pos:column="5">// and that check should not ignore the Range header if it was present.</comment>
    <comment type="line" pos:line="12" pos:column="5">// TODO: Some callers also delete HDR_RANGE, HDR_REQUEST_RANGE. Should we?</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

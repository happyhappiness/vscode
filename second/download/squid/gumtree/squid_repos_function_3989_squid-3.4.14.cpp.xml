<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3989_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">visitEachOption<pos:position pos:line="2" pos:column="46"/></name></name><parameter_list pos:line="2" pos:column="46">(<parameter><decl><type><name><name pos:line="2" pos:column="47">libecap<pos:position pos:line="2" pos:column="54"/></name><operator pos:line="2" pos:column="54">::<pos:position pos:line="2" pos:column="56"/></operator><name pos:line="2" pos:column="56">NamedValueVisitor<pos:position pos:line="2" pos:column="73"/></name></name> <modifier pos:line="2" pos:column="74">&amp;<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="75">visitor<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list> <specifier pos:line="2" pos:column="84">const<pos:position pos:line="2" pos:column="89"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">libecap<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">::<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">Area<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">value<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">clientIpValue<pos:position pos:line="4" pos:column="50"/></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>)<pos:position pos:line="4" pos:column="53"/></condition><then pos:line="4" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="5" pos:column="9">visitor<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">visit<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name><name pos:line="5" pos:column="23">libecap<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">::<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">metaClientIp<pos:position pos:line="5" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">value<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="53"/></expr_stmt></block></then></if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">libecap<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">::<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">Area<pos:position pos:line="6" pos:column="28"/></name></name></type> <name pos:line="6" pos:column="29">value<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call><name pos:line="6" pos:column="37">usernameValue<pos:position pos:line="6" pos:column="50"/></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></init></decl>)<pos:position pos:line="6" pos:column="53"/></condition><then pos:line="6" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="9">visitor<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">visit<pos:position pos:line="7" pos:column="22"/></name></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">libecap<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">::<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">metaUserName<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">value<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">Adaptation<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">::<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">Config<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">::<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">masterx_shared_name<pos:position pos:line="9" pos:column="48"/></name></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name><name pos:line="10" pos:column="15">libecap<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">::<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">Name<pos:position pos:line="10" pos:column="28"/></name></name></type> <name pos:line="10" pos:column="29">name<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name><name pos:line="10" pos:column="34">Adaptation<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">::<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="46">Config<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">::<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">masterx_shared_name<pos:position pos:line="10" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<decl><type><specifier pos:line="11" pos:column="13">const<pos:position pos:line="11" pos:column="18"/></specifier> <name><name pos:line="11" pos:column="19">libecap<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">::<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">Area<pos:position pos:line="11" pos:column="32"/></name></name></type> <name pos:line="11" pos:column="33">value<pos:position pos:line="11" pos:column="38"/></name> <init pos:line="11" pos:column="39">= <expr><call><name pos:line="11" pos:column="41">masterxSharedValue<pos:position pos:line="11" pos:column="59"/></name><argument_list pos:line="11" pos:column="59">(<argument><expr><name pos:line="11" pos:column="60">name<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr></init></decl>)<pos:position pos:line="11" pos:column="66"/></condition><then pos:line="11" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="13">visitor<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">visit<pos:position pos:line="12" pos:column="26"/></name></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">name<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">value<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">visitEachMetaHeader<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">visitor<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>

    <comment type="line" pos:line="17" pos:column="5">// TODO: metaServerIp, metaAuthenticatedUser, and metaAuthenticatedGroups</comment>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1271.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_HeaderWithAclList<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">StoreEntry<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type> <name pos:line="1" pos:column="49">entry<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">name<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">HeaderWithAclList<pos:position pos:line="1" pos:column="91"/></name> <modifier pos:line="1" pos:column="92">*<pos:position pos:line="1" pos:column="93"/></modifier></type><name pos:line="1" pos:column="93">headers<pos:position pos:line="1" pos:column="100"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="101"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">headers<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
        <block type="pseudo"><return pos:line="4" pos:column="9">return;<pos:position pos:line="4" pos:column="16"/></return></block></then></if>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name><name pos:line="6" pos:column="10">HeaderWithAclList<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">::<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">iterator<pos:position pos:line="6" pos:column="37"/></name></name></type> <name pos:line="6" pos:column="38">hwa<pos:position pos:line="6" pos:column="41"/></name> <init pos:line="6" pos:column="42">= <expr><call><name><name pos:line="6" pos:column="44">headers<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">begin<pos:position pos:line="6" pos:column="58"/></name></name><argument_list pos:line="6" pos:column="58">()<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></init> <condition><expr><name pos:line="6" pos:column="62">hwa<pos:position pos:line="6" pos:column="65"/></name> <operator pos:line="6" pos:column="66">!=<pos:position pos:line="6" pos:column="68"/></operator> <call><name><name pos:line="6" pos:column="69">headers<pos:position pos:line="6" pos:column="76"/></name><operator pos:line="6" pos:column="76">-&gt;<pos:position pos:line="6" pos:column="81"/></operator><name pos:line="6" pos:column="78">end<pos:position pos:line="6" pos:column="81"/></name></name><argument_list pos:line="6" pos:column="81">()<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="84"/></condition> <incr><expr><operator pos:line="6" pos:column="85">++<pos:position pos:line="6" pos:column="87"/></operator><name pos:line="6" pos:column="87">hwa<pos:position pos:line="6" pos:column="90"/></name></expr></incr>)<pos:position pos:line="6" pos:column="91"/></control> <block pos:line="6" pos:column="92">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">storeAppendPrintf<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">entry<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"%s "<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="41">hwa<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">fieldName<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">.<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">c_str<pos:position pos:line="7" pos:column="61"/></name></name><argument_list pos:line="7" pos:column="61">()<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">storeAppendPrintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">entry<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"%s "<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="41">hwa<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">fieldValue<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">.<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">c_str<pos:position pos:line="8" pos:column="62"/></name></name><argument_list pos:line="8" pos:column="62">()<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">hwa<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">aclList<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="13">dump_acl_list<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">entry<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="34">hwa<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">aclList<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">storeAppendPrintf<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">entry<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"\n"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></for>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

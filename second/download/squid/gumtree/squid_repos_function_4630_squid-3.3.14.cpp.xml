<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4630_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">wordlist<pos:position pos:line="1" pos:column="9"/></name> <modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type>
<name><name pos:line="2" pos:column="1">ACLRegexData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">dump<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">wordlist<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">W<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">RegexList<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">temp<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">data<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">flags<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">REG_EXTENDED<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">|<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="32">REG_NOSUB<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><name pos:line="8" pos:column="12">temp<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">!=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition> <block pos:line="8" pos:column="26">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">temp<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">flags<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">flags<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34"> <block pos:line="9" pos:column="35">{
            <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><name><name pos:line="10" pos:column="18">temp<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">flags<pos:position pos:line="10" pos:column="29"/></name></name><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="30">REG_ICASE<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator> <operator pos:line="10" pos:column="41">!=<pos:position pos:line="10" pos:column="43"/></operator> <literal type="number" pos:line="10" pos:column="44">0<pos:position pos:line="10" pos:column="45"/></literal></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46"> <block pos:line="10" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="11" pos:column="17">wordlistAdd<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><operator pos:line="11" pos:column="29">&amp;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="30">W<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="33">"-i"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="12" pos:column="14"/></block></then> <else pos:line="12" pos:column="15">else <block pos:line="12" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">wordlistAdd<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="30">W<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"+i"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="14" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="15" pos:column="13">flags<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name><name pos:line="15" pos:column="21">temp<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">flags<pos:position pos:line="15" pos:column="32"/></name></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="18" pos:column="9">wordlistAdd<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="22">W<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="25">temp<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">pattern<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">temp<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name><name pos:line="19" pos:column="16">temp<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">next<pos:position pos:line="19" pos:column="26"/></name></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></while>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">W<pos:position pos:line="22" pos:column="13"/></name></expr>;<pos:position pos:line="22" pos:column="14"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

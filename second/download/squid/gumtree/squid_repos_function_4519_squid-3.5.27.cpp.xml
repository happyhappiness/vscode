<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4519_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeerConnector<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">cbCheckForPeekAndSpliceDone<pos:position pos:line="2" pos:column="48"/></name></name><parameter_list pos:line="2" pos:column="48">(<parameter><decl><type><name pos:line="2" pos:column="49">allow_t<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">answer<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">void<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">data<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ssl<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">PeerConnector<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">peerConnect<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><operator pos:line="4" pos:column="39">(<pos:position pos:line="4" pos:column="40"/></operator><name><name pos:line="4" pos:column="40">Ssl<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">::<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">PeerConnector<pos:position pos:line="4" pos:column="58"/></name></name> <operator pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></operator><operator pos:line="4" pos:column="60">)<pos:position pos:line="4" pos:column="61"/></operator> <name pos:line="4" pos:column="62">data<pos:position pos:line="4" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>
    <comment type="line" pos:line="5" pos:column="5">// Use job calls to add done() checks and other job logic/protections.</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">CallJobHere1<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><literal type="number" pos:line="6" pos:column="18">83<pos:position pos:line="6" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="22">7<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="25">CbcPointer<pos:position pos:line="6" pos:column="35"/></name><argument_list type="generic" pos:line="6" pos:column="35">&lt;<argument><expr><name pos:line="6" pos:column="36">PeerConnector<pos:position pos:line="6" pos:column="49"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="53"/></argument_list></name><argument_list pos:line="6" pos:column="50">(<argument><expr><name pos:line="6" pos:column="51">peerConnect<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="65">Ssl<pos:position pos:line="6" pos:column="68"/></name><operator pos:line="6" pos:column="68">::<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="70">PeerConnector<pos:position pos:line="6" pos:column="83"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="85">checkForPeekAndSpliceDone<pos:position pos:line="6" pos:column="110"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="112">answer<pos:position pos:line="6" pos:column="118"/></name></expr></argument>)<pos:position pos:line="6" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="120"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

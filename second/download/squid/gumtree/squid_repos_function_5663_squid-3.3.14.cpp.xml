<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5663_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">open<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">flags<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">mode_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">mode<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="41">RefCount<pos:position pos:line="2" pos:column="49"/></name><argument_list type="generic" pos:line="2" pos:column="49">&lt;<argument><expr><name pos:line="2" pos:column="50">IORequestor<pos:position pos:line="2" pos:column="61"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="65"/></argument_list></name></type> <name pos:line="2" pos:column="63">callback<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">ioRequestor<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">callback<pos:position pos:line="4" pos:column="27"/></name></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">diskId<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&lt;<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt> <comment type="line" pos:line="5" pos:column="23">// we do not know our disker yet</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">queue<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">get<pos:position pos:line="7" pos:column="19"/></name></name><argument_list pos:line="7" pos:column="19">()<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">queue<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">reset<pos:position pos:line="8" pos:column="20"/></name></name><argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">new<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">Queue<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">ShmLabel<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="8" pos:column="41">IamWorkerProcess<pos:position pos:line="8" pos:column="57"/></name><argument_list pos:line="8" pos:column="57">()<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61"> <expr><name><name pos:line="8" pos:column="62">Queue<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">::<pos:position pos:line="8" pos:column="69"/></operator><name pos:line="8" pos:column="69">groupA<pos:position pos:line="8" pos:column="75"/></name></name></expr> <pos:position pos:line="8" pos:column="76"/></then><else pos:line="8" pos:column="76">: <expr><name><name pos:line="8" pos:column="78">Queue<pos:position pos:line="8" pos:column="83"/></name><operator pos:line="8" pos:column="83">::<pos:position pos:line="8" pos:column="85"/></operator><name pos:line="8" pos:column="85">groupB<pos:position pos:line="8" pos:column="91"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="8" pos:column="93">KidIdentifier<pos:position pos:line="8" pos:column="106"/></name></expr></argument>)<pos:position pos:line="8" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="109"/></expr_stmt></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">IamDiskProcess<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">()<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">error_<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">!<pos:position pos:line="11" pos:column="19"/></operator><call><name pos:line="11" pos:column="19">DiskerOpen<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">dbName<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">flags<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">mode<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">error_<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
            <block type="pseudo"><return pos:line="13" pos:column="13">return;<pos:position pos:line="13" pos:column="20"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="15" pos:column="9">diskId<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">KidIdentifier<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">bool<pos:position pos:line="16" pos:column="19"/></name></type> <name pos:line="16" pos:column="20">inserted<pos:position pos:line="16" pos:column="28"/></name> <init pos:line="16" pos:column="29">=
            <expr><call><name><name pos:line="17" pos:column="13">IpcIoFiles<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">insert<pos:position pos:line="17" pos:column="30"/></name></name><argument_list pos:line="17" pos:column="30">(<argument><expr><call><name><name pos:line="17" pos:column="31">std<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">::<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">make_pair<pos:position pos:line="17" pos:column="45"/></name></name><argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">diskId<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">this<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call><operator pos:line="17" pos:column="60">.<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="61">second<pos:position pos:line="17" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="68"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">Must<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">inserted<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">queue<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">localRateLimit<pos:position pos:line="20" pos:column="30"/></name></name><argument_list pos:line="20" pos:column="30">()<pos:position pos:line="20" pos:column="32"/></argument_list></call> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator>
            <cast type="static" pos:line="21" pos:column="13">static_cast<argument_list type="generic" pos:line="21" pos:column="24">&lt;<argument><expr><name><name pos:line="21" pos:column="25">Ipc<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">::<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">QueueReader<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">::<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">Rate<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">::<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">Value<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>&gt;<pos:position pos:line="21" pos:column="58"/></argument_list><argument_list pos:line="21" pos:column="55">(<argument><expr><name><name pos:line="21" pos:column="56">config<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">.<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="63">ioRate<pos:position pos:line="21" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></cast></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>

        <decl_stmt><decl><type><name><name pos:line="23" pos:column="9">Ipc<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">::<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">HereIamMessage<pos:position pos:line="23" pos:column="28"/></name></name></type> <name pos:line="23" pos:column="29">ann<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><call><name><name pos:line="23" pos:column="33">Ipc<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">::<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">StrandCoord<pos:position pos:line="23" pos:column="49"/></name></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">KidIdentifier<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="65">getpid<pos:position pos:line="23" pos:column="71"/></name><argument_list pos:line="23" pos:column="71">()<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></decl>;<pos:position pos:line="23" pos:column="76"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">ann<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">strand<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">tag<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">dbName<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="25" pos:column="9">Ipc<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">::<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">TypedMsgHdr<pos:position pos:line="25" pos:column="25"/></name></name></type> <name pos:line="25" pos:column="26">message<pos:position pos:line="25" pos:column="33"/></name></decl>;<pos:position pos:line="25" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">ann<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">pack<pos:position pos:line="26" pos:column="17"/></name></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">message<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">SendMessage<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name><name pos:line="27" pos:column="21">Ipc<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">::<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">coordinatorAddr<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">message<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="29" pos:column="9">ioRequestor<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">ioCompletedNotification<pos:position pos:line="29" pos:column="45"/></name></name><argument_list pos:line="29" pos:column="45">()<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="33" pos:column="5">Ipc<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">::<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">StrandSearchRequest<pos:position pos:line="33" pos:column="29"/></name></name></type> <name pos:line="33" pos:column="30">request<pos:position pos:line="33" pos:column="37"/></name></decl>;<pos:position pos:line="33" pos:column="38"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">request<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">requestorId<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">KidIdentifier<pos:position pos:line="34" pos:column="40"/></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">request<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">tag<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">dbName<pos:position pos:line="35" pos:column="25"/></name></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="37" pos:column="5">Ipc<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">::<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">TypedMsgHdr<pos:position pos:line="37" pos:column="21"/></name></name></type> <name pos:line="37" pos:column="22">msg<pos:position pos:line="37" pos:column="25"/></name></decl>;<pos:position pos:line="37" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">request<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">.<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">pack<pos:position pos:line="38" pos:column="17"/></name></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">msg<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">Ipc<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">::<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">SendMessage<pos:position pos:line="39" pos:column="21"/></name></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name><name pos:line="39" pos:column="22">Ipc<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">::<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">coordinatorAddr<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">msg<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">WaitingForOpen<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">push_back<pos:position pos:line="41" pos:column="29"/></name></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">this<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">eventAdd<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><literal type="string" pos:line="43" pos:column="14">"IpcIoFile::OpenTimeout"<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator><name><name pos:line="43" pos:column="41">IpcIoFile<pos:position pos:line="43" pos:column="50"/></name><operator pos:line="43" pos:column="50">::<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="52">OpenTimeout<pos:position pos:line="43" pos:column="63"/></name></name></expr></argument>,
             <argument><expr><name pos:line="44" pos:column="14">this<pos:position pos:line="44" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="20">Timeout<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="29">0<pos:position pos:line="44" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="44" pos:column="32">false<pos:position pos:line="44" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt> <comment type="line" pos:line="44" pos:column="40">// "this" pointer is used as id</comment>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

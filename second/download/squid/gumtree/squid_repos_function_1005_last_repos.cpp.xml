<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1005_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerSelectFoo<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">ps_state<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type> <name pos:line="2" pos:column="26">ps<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">cbdataReferenceValid<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">(<argument><expr><name><name pos:line="4" pos:column="31">ps<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">callback_data<pos:position pos:line="4" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="50"/></condition><then pos:line="4" pos:column="50"> <block pos:line="4" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">44<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"Aborting peer selection. Parent Job went away."<pos:position pos:line="5" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="6" pos:column="9">delete<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">ps<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">StoreEntry<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">entry<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name><name pos:line="10" pos:column="25">ps<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">entry<pos:position pos:line="10" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">HttpRequest<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">request<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name><name pos:line="11" pos:column="28">ps<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">request<pos:position pos:line="11" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">44<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="19">request<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">method<pos:position pos:line="12" pos:column="34"/></name></name> <operator pos:line="12" pos:column="35">&lt;&lt;<pos:position pos:line="12" pos:column="43"/></operator> <literal type="char" pos:line="12" pos:column="38">' '<pos:position pos:line="12" pos:column="41"/></literal> <operator pos:line="12" pos:column="42">&lt;&lt;<pos:position pos:line="12" pos:column="50"/></operator> <call><name><name pos:line="12" pos:column="45">request<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">url<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">.<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">host<pos:position pos:line="12" pos:column="62"/></name></name><argument_list pos:line="12" pos:column="62">()<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="14" pos:column="5">/** If we don't know whether DIRECT is permitted ... */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">ps<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">direct<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">==<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">DIRECT_UNKNOWN<pos:position pos:line="15" pos:column="37"/></name></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38"> <block pos:line="15" pos:column="39">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">ps<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">always_direct<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">==<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">ACCESS_DUNNO<pos:position pos:line="16" pos:column="46"/></name></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47"> <block pos:line="16" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">debugs<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="number" pos:line="17" pos:column="20">44<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">3<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="27">"peerSelectFoo: direct = "<pos:position pos:line="17" pos:column="53"/></literal> <operator pos:line="17" pos:column="54">&lt;&lt;<pos:position pos:line="17" pos:column="62"/></operator> <name><name pos:line="17" pos:column="57">DirectStr<pos:position pos:line="17" pos:column="66"/></name><index pos:line="17" pos:column="66">[<expr><name><name pos:line="17" pos:column="67">ps<pos:position pos:line="17" pos:column="69"/></name><operator pos:line="17" pos:column="69">-&gt;<pos:position pos:line="17" pos:column="74"/></operator><name pos:line="17" pos:column="71">direct<pos:position pos:line="17" pos:column="77"/></name></name></expr>]<pos:position pos:line="17" pos:column="78"/></index></name> <operator pos:line="17" pos:column="79">&lt;&lt;<pos:position pos:line="17" pos:column="87"/></operator> <literal type="string" pos:line="17" pos:column="82">" (always_direct to be checked)"<pos:position pos:line="17" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="116"/></expr_stmt>
            <comment type="block" format="doxygen" pos:line="18" pos:column="13">/** check always_direct; */</comment>
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">ACLFilledChecklist<pos:position pos:line="19" pos:column="31"/></name> <modifier pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></modifier></type><name pos:line="19" pos:column="33">ch<pos:position pos:line="19" pos:column="35"/></name> <init pos:line="19" pos:column="36">= <expr><operator pos:line="19" pos:column="38">new<pos:position pos:line="19" pos:column="41"/></operator> <call><name pos:line="19" pos:column="42">ACLFilledChecklist<pos:position pos:line="19" pos:column="60"/></name><argument_list pos:line="19" pos:column="60">(<argument><expr><name><name pos:line="19" pos:column="61">Config<pos:position pos:line="19" pos:column="67"/></name><operator pos:line="19" pos:column="67">.<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="68">accessList<pos:position pos:line="19" pos:column="78"/></name><operator pos:line="19" pos:column="78">.<pos:position pos:line="19" pos:column="79"/></operator><name pos:line="19" pos:column="79">AlwaysDirect<pos:position pos:line="19" pos:column="91"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="93">request<pos:position pos:line="19" pos:column="100"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="102">NULL<pos:position pos:line="19" pos:column="106"/></name></expr></argument>)<pos:position pos:line="19" pos:column="107"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="108"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">ch<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">al<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name><name pos:line="20" pos:column="22">ps<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">al<pos:position pos:line="20" pos:column="28"/></name></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">ps<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">acl_checklist<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">ch<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">ps<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">acl_checklist<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">nonBlockingCheck<pos:position pos:line="22" pos:column="48"/></name></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">peerCheckAlwaysDirectDone<pos:position pos:line="22" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="76">ps<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>
            <return pos:line="23" pos:column="13">return;<pos:position pos:line="23" pos:column="20"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then> <elseif pos:line="24" pos:column="11">else <if pos:line="24" pos:column="16">if <condition pos:line="24" pos:column="19">(<expr><name><name pos:line="24" pos:column="20">ps<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">never_direct<pos:position pos:line="24" pos:column="36"/></name></name> <operator pos:line="24" pos:column="37">==<pos:position pos:line="24" pos:column="39"/></operator> <name pos:line="24" pos:column="40">ACCESS_DUNNO<pos:position pos:line="24" pos:column="52"/></name></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">44<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="24">3<pos:position pos:line="25" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"peerSelectFoo: direct = "<pos:position pos:line="25" pos:column="53"/></literal> <operator pos:line="25" pos:column="54">&lt;&lt;<pos:position pos:line="25" pos:column="62"/></operator> <name><name pos:line="25" pos:column="57">DirectStr<pos:position pos:line="25" pos:column="66"/></name><index pos:line="25" pos:column="66">[<expr><name><name pos:line="25" pos:column="67">ps<pos:position pos:line="25" pos:column="69"/></name><operator pos:line="25" pos:column="69">-&gt;<pos:position pos:line="25" pos:column="74"/></operator><name pos:line="25" pos:column="71">direct<pos:position pos:line="25" pos:column="77"/></name></name></expr>]<pos:position pos:line="25" pos:column="78"/></index></name> <operator pos:line="25" pos:column="79">&lt;&lt;<pos:position pos:line="25" pos:column="87"/></operator> <literal type="string" pos:line="25" pos:column="82">" (never_direct to be checked)"<pos:position pos:line="25" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="115"/></expr_stmt>
            <comment type="block" format="doxygen" pos:line="26" pos:column="13">/** check never_direct; */</comment>
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">ACLFilledChecklist<pos:position pos:line="27" pos:column="31"/></name> <modifier pos:line="27" pos:column="32">*<pos:position pos:line="27" pos:column="33"/></modifier></type><name pos:line="27" pos:column="33">ch<pos:position pos:line="27" pos:column="35"/></name> <init pos:line="27" pos:column="36">= <expr><operator pos:line="27" pos:column="38">new<pos:position pos:line="27" pos:column="41"/></operator> <call><name pos:line="27" pos:column="42">ACLFilledChecklist<pos:position pos:line="27" pos:column="60"/></name><argument_list pos:line="27" pos:column="60">(<argument><expr><name><name pos:line="27" pos:column="61">Config<pos:position pos:line="27" pos:column="67"/></name><operator pos:line="27" pos:column="67">.<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="68">accessList<pos:position pos:line="27" pos:column="78"/></name><operator pos:line="27" pos:column="78">.<pos:position pos:line="27" pos:column="79"/></operator><name pos:line="27" pos:column="79">NeverDirect<pos:position pos:line="27" pos:column="90"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="92">request<pos:position pos:line="27" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="101">NULL<pos:position pos:line="27" pos:column="105"/></name></expr></argument>)<pos:position pos:line="27" pos:column="106"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="107"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">ch<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">al<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="22">ps<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">al<pos:position pos:line="28" pos:column="28"/></name></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">ps<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">acl_checklist<pos:position pos:line="29" pos:column="30"/></name></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">ch<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">ps<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">acl_checklist<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">nonBlockingCheck<pos:position pos:line="30" pos:column="48"/></name></name><argument_list pos:line="30" pos:column="48">(<argument><expr><name pos:line="30" pos:column="49">peerCheckNeverDirectDone<pos:position pos:line="30" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="75">ps<pos:position pos:line="30" pos:column="77"/></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt>
            <return pos:line="31" pos:column="13">return;<pos:position pos:line="31" pos:column="20"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif> <elseif pos:line="32" pos:column="11">else <if pos:line="32" pos:column="16">if <condition pos:line="32" pos:column="19">(<expr><name><name pos:line="32" pos:column="20">request<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">flags<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">.<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">noDirect<pos:position pos:line="32" pos:column="43"/></name></name></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
            <comment type="block" format="doxygen" pos:line="33" pos:column="13">/** if we are accelerating, direct is not an option. */</comment>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">ps<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">direct<pos:position pos:line="34" pos:column="23"/></name></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="26">DIRECT_NO<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">debugs<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="number" pos:line="35" pos:column="20">44<pos:position pos:line="35" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="24">3<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="27">"peerSelectFoo: direct = "<pos:position pos:line="35" pos:column="53"/></literal> <operator pos:line="35" pos:column="54">&lt;&lt;<pos:position pos:line="35" pos:column="62"/></operator> <name><name pos:line="35" pos:column="57">DirectStr<pos:position pos:line="35" pos:column="66"/></name><index pos:line="35" pos:column="66">[<expr><name><name pos:line="35" pos:column="67">ps<pos:position pos:line="35" pos:column="69"/></name><operator pos:line="35" pos:column="69">-&gt;<pos:position pos:line="35" pos:column="74"/></operator><name pos:line="35" pos:column="71">direct<pos:position pos:line="35" pos:column="77"/></name></name></expr>]<pos:position pos:line="35" pos:column="78"/></index></name> <operator pos:line="35" pos:column="79">&lt;&lt;<pos:position pos:line="35" pos:column="87"/></operator> <literal type="string" pos:line="35" pos:column="82">" (forced non-direct)"<pos:position pos:line="35" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="106"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><name><name pos:line="36" pos:column="20">request<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">flags<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">loopDetected<pos:position pos:line="36" pos:column="47"/></name></name></expr>)<pos:position pos:line="36" pos:column="48"/></condition><then pos:line="36" pos:column="48"> <block pos:line="36" pos:column="49">{
            <comment type="block" format="doxygen" pos:line="37" pos:column="13">/** if we are in a forwarding-loop, direct is not an option. */</comment>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">ps<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">direct<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">DIRECT_YES<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">debugs<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><literal type="number" pos:line="39" pos:column="20">44<pos:position pos:line="39" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="24">3<pos:position pos:line="39" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="27">"peerSelectFoo: direct = "<pos:position pos:line="39" pos:column="53"/></literal> <operator pos:line="39" pos:column="54">&lt;&lt;<pos:position pos:line="39" pos:column="62"/></operator> <name><name pos:line="39" pos:column="57">DirectStr<pos:position pos:line="39" pos:column="66"/></name><index pos:line="39" pos:column="66">[<expr><name><name pos:line="39" pos:column="67">ps<pos:position pos:line="39" pos:column="69"/></name><operator pos:line="39" pos:column="69">-&gt;<pos:position pos:line="39" pos:column="74"/></operator><name pos:line="39" pos:column="71">direct<pos:position pos:line="39" pos:column="77"/></name></name></expr>]<pos:position pos:line="39" pos:column="78"/></index></name> <operator pos:line="39" pos:column="79">&lt;&lt;<pos:position pos:line="39" pos:column="87"/></operator> <literal type="string" pos:line="39" pos:column="82">" (forwarding loop detected)"<pos:position pos:line="39" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="113"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if></elseif> <elseif pos:line="40" pos:column="11">else <if pos:line="40" pos:column="16">if <condition pos:line="40" pos:column="19">(<expr><call><name pos:line="40" pos:column="20">peerCheckNetdbDirect<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">ps<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45"> <block pos:line="40" pos:column="46">{
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">ps<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">direct<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">DIRECT_YES<pos:position pos:line="41" pos:column="36"/></name></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">debugs<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><literal type="number" pos:line="42" pos:column="20">44<pos:position pos:line="42" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="24">3<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="27">"peerSelectFoo: direct = "<pos:position pos:line="42" pos:column="53"/></literal> <operator pos:line="42" pos:column="54">&lt;&lt;<pos:position pos:line="42" pos:column="62"/></operator> <name><name pos:line="42" pos:column="57">DirectStr<pos:position pos:line="42" pos:column="66"/></name><index pos:line="42" pos:column="66">[<expr><name><name pos:line="42" pos:column="67">ps<pos:position pos:line="42" pos:column="69"/></name><operator pos:line="42" pos:column="69">-&gt;<pos:position pos:line="42" pos:column="74"/></operator><name pos:line="42" pos:column="71">direct<pos:position pos:line="42" pos:column="77"/></name></name></expr>]<pos:position pos:line="42" pos:column="78"/></index></name> <operator pos:line="42" pos:column="79">&lt;&lt;<pos:position pos:line="42" pos:column="87"/></operator> <literal type="string" pos:line="42" pos:column="82">" (checkNetdbDirect)"<pos:position pos:line="42" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="105"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif> <else pos:line="43" pos:column="11">else <block pos:line="43" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">ps<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">direct<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">DIRECT_MAYBE<pos:position pos:line="44" pos:column="38"/></name></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">debugs<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><literal type="number" pos:line="45" pos:column="20">44<pos:position pos:line="45" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="24">3<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"peerSelectFoo: direct = "<pos:position pos:line="45" pos:column="53"/></literal> <operator pos:line="45" pos:column="54">&lt;&lt;<pos:position pos:line="45" pos:column="62"/></operator> <name><name pos:line="45" pos:column="57">DirectStr<pos:position pos:line="45" pos:column="66"/></name><index pos:line="45" pos:column="66">[<expr><name><name pos:line="45" pos:column="67">ps<pos:position pos:line="45" pos:column="69"/></name><operator pos:line="45" pos:column="69">-&gt;<pos:position pos:line="45" pos:column="74"/></operator><name pos:line="45" pos:column="71">direct<pos:position pos:line="45" pos:column="77"/></name></name></expr>]<pos:position pos:line="45" pos:column="78"/></index></name> <operator pos:line="45" pos:column="79">&lt;&lt;<pos:position pos:line="45" pos:column="87"/></operator> <literal type="string" pos:line="45" pos:column="82">" (default)"<pos:position pos:line="45" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="96"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="48" pos:column="9">debugs<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="number" pos:line="48" pos:column="16">44<pos:position pos:line="48" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="20">3<pos:position pos:line="48" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="23">"peerSelectFoo: direct = "<pos:position pos:line="48" pos:column="49"/></literal> <operator pos:line="48" pos:column="50">&lt;&lt;<pos:position pos:line="48" pos:column="58"/></operator> <name><name pos:line="48" pos:column="53">DirectStr<pos:position pos:line="48" pos:column="62"/></name><index pos:line="48" pos:column="62">[<expr><name><name pos:line="48" pos:column="63">ps<pos:position pos:line="48" pos:column="65"/></name><operator pos:line="48" pos:column="65">-&gt;<pos:position pos:line="48" pos:column="70"/></operator><name pos:line="48" pos:column="67">direct<pos:position pos:line="48" pos:column="73"/></name></name></expr>]<pos:position pos:line="48" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">entry<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">||<pos:position pos:line="51" pos:column="18"/></operator> <name><name pos:line="51" pos:column="19">entry<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">ping_status<pos:position pos:line="51" pos:column="37"/></name></name> <operator pos:line="51" pos:column="38">==<pos:position pos:line="51" pos:column="40"/></operator> <name pos:line="51" pos:column="41">PING_NONE<pos:position pos:line="51" pos:column="50"/></name></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="9">peerSelectPinned<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">ps<pos:position pos:line="52" pos:column="28"/></name></expr></argument>)<pos:position pos:line="52" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt></block></then></if>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">entry<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">==<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">NULL<pos:position pos:line="53" pos:column="22"/></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23"> <block pos:line="53" pos:column="24">{
        <expr_stmt><expr><operator pos:line="54" pos:column="9">(<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">void<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">)<pos:position pos:line="54" pos:column="15"/></operator> <literal type="number" pos:line="54" pos:column="16">0<pos:position pos:line="54" pos:column="17"/></literal></expr>;<pos:position pos:line="54" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then> <elseif pos:line="55" pos:column="7">else <if pos:line="55" pos:column="12">if <condition pos:line="55" pos:column="15">(<expr><name><name pos:line="55" pos:column="16">entry<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">ping_status<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">==<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="38">PING_NONE<pos:position pos:line="55" pos:column="47"/></name></expr>)<pos:position pos:line="55" pos:column="48"/></condition><then pos:line="55" pos:column="48"> <block pos:line="55" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">peerGetSomeNeighbor<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">ps<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>

        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">entry<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">ping_status<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">==<pos:position pos:line="58" pos:column="34"/></operator> <name pos:line="58" pos:column="35">PING_WAITING<pos:position pos:line="58" pos:column="47"/></name></expr>)<pos:position pos:line="58" pos:column="48"/></condition><then pos:line="58" pos:column="48">
            <block type="pseudo"><return pos:line="59" pos:column="13">return;<pos:position pos:line="59" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif> <elseif pos:line="60" pos:column="7">else <if pos:line="60" pos:column="12">if <condition pos:line="60" pos:column="15">(<expr><name><name pos:line="60" pos:column="16">entry<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">ping_status<pos:position pos:line="60" pos:column="34"/></name></name> <operator pos:line="60" pos:column="35">==<pos:position pos:line="60" pos:column="37"/></operator> <name pos:line="60" pos:column="38">PING_WAITING<pos:position pos:line="60" pos:column="50"/></name></expr>)<pos:position pos:line="60" pos:column="51"/></condition><then pos:line="60" pos:column="51"> <block pos:line="60" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">peerGetSomeNeighborReplies<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">(<argument><expr><name pos:line="61" pos:column="36">ps<pos:position pos:line="61" pos:column="38"/></name></expr></argument>)<pos:position pos:line="61" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">entry<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">ping_status<pos:position pos:line="62" pos:column="27"/></name></name> <operator pos:line="62" pos:column="28">=<pos:position pos:line="62" pos:column="29"/></operator> <name pos:line="62" pos:column="30">PING_DONE<pos:position pos:line="62" pos:column="39"/></name></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif></if>

    <switch pos:line="65" pos:column="5">switch <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">ps<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">direct<pos:position pos:line="65" pos:column="23"/></name></name></expr>)<pos:position pos:line="65" pos:column="24"/></condition> <block pos:line="65" pos:column="25">{

    <case pos:line="67" pos:column="5">case <expr><name pos:line="67" pos:column="10">DIRECT_YES<pos:position pos:line="67" pos:column="20"/></name></expr>:<pos:position pos:line="67" pos:column="21"/></case>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">peerGetSomeDirect<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">ps<pos:position pos:line="68" pos:column="29"/></name></expr></argument>)<pos:position pos:line="68" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
        <break pos:line="69" pos:column="9">break;<pos:position pos:line="69" pos:column="15"/></break>

    <case pos:line="71" pos:column="5">case <expr><name pos:line="71" pos:column="10">DIRECT_NO<pos:position pos:line="71" pos:column="19"/></name></expr>:<pos:position pos:line="71" pos:column="20"/></case>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">peerGetSomeParent<pos:position pos:line="72" pos:column="26"/></name><argument_list pos:line="72" pos:column="26">(<argument><expr><name pos:line="72" pos:column="27">ps<pos:position pos:line="72" pos:column="29"/></name></expr></argument>)<pos:position pos:line="72" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">peerGetAllParents<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">ps<pos:position pos:line="73" pos:column="29"/></name></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>

    <default pos:line="76" pos:column="5">default:<pos:position pos:line="76" pos:column="13"/></default>

        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name><name pos:line="78" pos:column="13">Config<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">.<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="20">onoff<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">.<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="26">prefer_direct<pos:position pos:line="78" pos:column="39"/></name></name></expr>)<pos:position pos:line="78" pos:column="40"/></condition><then pos:line="78" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="13">peerGetSomeDirect<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><name pos:line="79" pos:column="31">ps<pos:position pos:line="79" pos:column="33"/></name></expr></argument>)<pos:position pos:line="79" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt></block></then></if>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name><name pos:line="81" pos:column="13">request<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">flags<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">.<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="28">hierarchical<pos:position pos:line="81" pos:column="40"/></name></name> <operator pos:line="81" pos:column="41">||<pos:position pos:line="81" pos:column="43"/></operator> <operator pos:line="81" pos:column="44">!<pos:position pos:line="81" pos:column="45"/></operator><name><name pos:line="81" pos:column="45">Config<pos:position pos:line="81" pos:column="51"/></name><operator pos:line="81" pos:column="51">.<pos:position pos:line="81" pos:column="52"/></operator><name pos:line="81" pos:column="52">onoff<pos:position pos:line="81" pos:column="57"/></name><operator pos:line="81" pos:column="57">.<pos:position pos:line="81" pos:column="58"/></operator><name pos:line="81" pos:column="58">nonhierarchical_direct<pos:position pos:line="81" pos:column="80"/></name></name></expr>)<pos:position pos:line="81" pos:column="81"/></condition><then pos:line="81" pos:column="81"> <block pos:line="81" pos:column="82">{
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">peerGetSomeParent<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">ps<pos:position pos:line="82" pos:column="33"/></name></expr></argument>)<pos:position pos:line="82" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">peerGetAllParents<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">ps<pos:position pos:line="83" pos:column="33"/></name></expr></argument>)<pos:position pos:line="83" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="84" pos:column="10"/></block></then></if>

        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">!<pos:position pos:line="86" pos:column="14"/></operator><name><name pos:line="86" pos:column="14">Config<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">.<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="21">onoff<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">.<pos:position pos:line="86" pos:column="27"/></operator><name pos:line="86" pos:column="27">prefer_direct<pos:position pos:line="86" pos:column="40"/></name></name></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="13">peerGetSomeDirect<pos:position pos:line="87" pos:column="30"/></name><argument_list pos:line="87" pos:column="30">(<argument><expr><name pos:line="87" pos:column="31">ps<pos:position pos:line="87" pos:column="33"/></name></expr></argument>)<pos:position pos:line="87" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt></block></then></if>

        <break pos:line="89" pos:column="9">break;<pos:position pos:line="89" pos:column="15"/></break>
    }<pos:position pos:line="90" pos:column="6"/></block></switch>

    <comment type="line" pos:line="92" pos:column="5">// resolve the possible peers</comment>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">peerSelectDnsPaths<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><name pos:line="93" pos:column="24">ps<pos:position pos:line="93" pos:column="26"/></name></expr></argument>)<pos:position pos:line="93" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="28"/></expr_stmt>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

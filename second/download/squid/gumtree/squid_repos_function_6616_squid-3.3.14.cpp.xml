<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6616_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">squid_radix_node<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type>
<name pos:line="2" pos:column="1">squid_rn_addroute<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">v_arg<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">void<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">n_arg<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="45">struct<pos:position pos:line="2" pos:column="51"/></name> <name pos:line="2" pos:column="52">squid_radix_node_head<pos:position pos:line="2" pos:column="73"/></name></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">head<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="81">struct<pos:position pos:line="2" pos:column="87"/></name> <name pos:line="2" pos:column="88">squid_radix_node<pos:position pos:line="2" pos:column="104"/></name></name></type> <name><name pos:line="2" pos:column="105">treenodes<pos:position pos:line="2" pos:column="114"/></name><index pos:line="2" pos:column="114">[<expr><literal type="number" pos:line="2" pos:column="115">2<pos:position pos:line="2" pos:column="116"/></literal></expr>]<pos:position pos:line="2" pos:column="117"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="118"/></parameter_list> <block pos:line="2" pos:column="119">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">caddr_t<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">v<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><operator pos:line="3" pos:column="17">(<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">caddr_t<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">)<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="27">v_arg<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="34">netmask<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><operator pos:line="3" pos:column="44">(<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">caddr_t<pos:position pos:line="3" pos:column="52"/></name><operator pos:line="3" pos:column="52">)<pos:position pos:line="3" pos:column="53"/></operator> <name pos:line="3" pos:column="54">n_arg<pos:position pos:line="3" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name><name pos:line="4" pos:column="14">struct<pos:position pos:line="4" pos:column="20"/></name> <name pos:line="4" pos:column="21">squid_radix_node<pos:position pos:line="4" pos:column="37"/></name></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">t<pos:position pos:line="4" pos:column="40"/></name></decl>, <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="43">x<pos:position pos:line="4" pos:column="44"/></name> <init pos:line="4" pos:column="45">= <expr><name pos:line="4" pos:column="47">NULL<pos:position pos:line="4" pos:column="51"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="54">tt<pos:position pos:line="4" pos:column="56"/></name></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">squid_radix_node<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">saved_tt<pos:position pos:line="5" pos:column="38"/></name></decl>, <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="41">top<pos:position pos:line="5" pos:column="44"/></name> <init pos:line="5" pos:column="45">= <expr><name><name pos:line="5" pos:column="47">head<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">-&gt;<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="53">rnh_treetop<pos:position pos:line="5" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">short<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">b<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">b_leaf<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">keyduplicated<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">caddr_t<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">mmask<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">squid_radix_mask<pos:position pos:line="9" pos:column="28"/></name></name> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier></type><name pos:line="9" pos:column="30">m<pos:position pos:line="9" pos:column="31"/></name></decl>, <modifier pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></modifier><modifier pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="35">mp<pos:position pos:line="9" pos:column="37"/></name></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/*
     * In dealing with non-contiguous masks, there may be
     * many different routes which have the same mask.
     * We will find it useful to have a unique pointer to
     * the mask to speed avoiding duplicate references at
     * nodes and possibly save time in calculating indices.
     */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">netmask<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block pos:line="18" pos:column="18">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">x<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">squid_rn_addmask<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">netmask<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="44">0<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="47">top<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">rn_off<pos:position pos:line="19" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator> <operator pos:line="19" pos:column="61">==<pos:position pos:line="19" pos:column="63"/></operator> <literal type="number" pos:line="19" pos:column="64">0<pos:position pos:line="19" pos:column="65"/></literal></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66">
            <block type="pseudo"><return pos:line="20" pos:column="13">return <expr><operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal><operator pos:line="20" pos:column="22">)<pos:position pos:line="20" pos:column="23"/></operator></expr>;<pos:position pos:line="20" pos:column="24"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="21" pos:column="9">b_leaf<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name><name pos:line="21" pos:column="18">x<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">rn_b<pos:position pos:line="21" pos:column="25"/></name></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">b<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal> <operator pos:line="22" pos:column="16">-<pos:position pos:line="22" pos:column="17"/></operator> <name><name pos:line="22" pos:column="18">x<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">rn_b<pos:position pos:line="22" pos:column="25"/></name></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">netmask<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name><name pos:line="23" pos:column="19">x<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">rn_key<pos:position pos:line="23" pos:column="28"/></name></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="25" pos:column="5">/*
     * Deal with duplicated keys: attach node to previous instance
     */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">saved_tt<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">tt<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <call><name pos:line="28" pos:column="21">squid_rn_insert<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">v<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">head<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="46">&amp;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="47">keyduplicated<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">treenodes<pos:position pos:line="28" pos:column="71"/></name></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">keyduplicated<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
        <for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">t<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">tt<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></init> <condition><expr><name pos:line="30" pos:column="22">tt<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></condition> <incr><expr><name pos:line="30" pos:column="26">t<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">tt<pos:position pos:line="30" pos:column="32"/></name></expr><operator pos:line="30" pos:column="32">,<pos:position pos:line="30" pos:column="33"/></operator> <expr><name pos:line="30" pos:column="34">tt<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <name><name pos:line="30" pos:column="39">tt<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">rn_dupedkey<pos:position pos:line="30" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="55"/></control> <block pos:line="30" pos:column="56">{
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name><name pos:line="31" pos:column="17">tt<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">rn_mask<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">==<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">netmask<pos:position pos:line="31" pos:column="39"/></name></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40">
                <block type="pseudo"><return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal><operator pos:line="32" pos:column="26">)<pos:position pos:line="32" pos:column="27"/></operator></expr>;<pos:position pos:line="32" pos:column="28"/></return></block></then></if>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">netmask<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">0<pos:position pos:line="33" pos:column="29"/></literal> <operator pos:line="33" pos:column="30">||<pos:position pos:line="33" pos:column="32"/></operator>
                    <operator pos:line="34" pos:column="21">(<pos:position pos:line="34" pos:column="22"/></operator><name><name pos:line="34" pos:column="22">tt<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">rn_mask<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">&amp;&amp;<pos:position pos:line="34" pos:column="44"/></operator>
                     <operator pos:line="35" pos:column="22">(<pos:position pos:line="35" pos:column="23"/></operator><operator pos:line="35" pos:column="23">(<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">b_leaf<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">&lt;<pos:position pos:line="35" pos:column="35"/></operator> <name><name pos:line="35" pos:column="33">tt<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">rn_b<pos:position pos:line="35" pos:column="41"/></name></name><operator pos:line="35" pos:column="41">)<pos:position pos:line="35" pos:column="42"/></operator> <operator pos:line="35" pos:column="43">||<pos:position pos:line="35" pos:column="45"/></operator>	<comment type="block" pos:line="35" pos:column="49">/* index(netmask) &gt; node */</comment>
                      <call><name pos:line="36" pos:column="23">squid_rn_refines<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">netmask<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="49">tt<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">rn_mask<pos:position pos:line="36" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call> <operator pos:line="36" pos:column="62">||<pos:position pos:line="36" pos:column="64"/></operator>
                      <call><name pos:line="37" pos:column="23">rn_lexobetter<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">netmask<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="46">tt<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">-&gt;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="50">rn_mask<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call><operator pos:line="37" pos:column="58">)<pos:position pos:line="37" pos:column="59"/></operator><operator pos:line="37" pos:column="59">)<pos:position pos:line="37" pos:column="60"/></operator></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61">
                <block type="pseudo"><break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break></block></then></if>
        }<pos:position pos:line="39" pos:column="10"/></block></for>
        <comment type="block" pos:line="40" pos:column="9">/*
         * If the mask is not duplicated, we wouldn't
         * find it among possible duplicate key entries
         * anyway, so the above test doesn't hurt.
         *
         * We sort the masks for a duplicated key the same way as
         * in a masklist -- most specific to least specific.
         * This may require the unfortunate nuisance of relocating
         * the head of the list.
         */</comment>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">tt<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">==<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">saved_tt<pos:position pos:line="50" pos:column="27"/></name></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <block pos:line="50" pos:column="29">{
            <decl_stmt><decl><type><name><name pos:line="51" pos:column="13">struct<pos:position pos:line="51" pos:column="19"/></name> <name pos:line="51" pos:column="20">squid_radix_node<pos:position pos:line="51" pos:column="36"/></name></name> <modifier pos:line="51" pos:column="37">*<pos:position pos:line="51" pos:column="38"/></modifier></type><name pos:line="51" pos:column="38">xx<pos:position pos:line="51" pos:column="40"/></name> <init pos:line="51" pos:column="41">= <expr><name pos:line="51" pos:column="43">x<pos:position pos:line="51" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="51" pos:column="45"/></decl_stmt>
            <comment type="block" pos:line="52" pos:column="13">/* link in at head of list */</comment>
            <expr_stmt><expr><name pos:line="53" pos:column="13">tt<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">treenodes<pos:position pos:line="53" pos:column="27"/></name></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">tt<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-&gt;<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="17">rn_dupedkey<pos:position pos:line="54" pos:column="28"/></name></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">t<pos:position pos:line="54" pos:column="32"/></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">tt<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">-&gt;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="17">rn_flags<pos:position pos:line="55" pos:column="25"/></name></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <name><name pos:line="55" pos:column="28">t<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">rn_flags<pos:position pos:line="55" pos:column="39"/></name></name></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">tt<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">rn_p<pos:position pos:line="56" pos:column="21"/></name></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <name pos:line="56" pos:column="24">x<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <name><name pos:line="56" pos:column="28">t<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">rn_p<pos:position pos:line="56" pos:column="35"/></name></name></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name><name pos:line="57" pos:column="17">x<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">rn_l<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">==<pos:position pos:line="57" pos:column="27"/></operator> <name pos:line="57" pos:column="28">t<pos:position pos:line="57" pos:column="29"/></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="17">x<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">rn_l<pos:position pos:line="58" pos:column="24"/></name></name> <operator pos:line="58" pos:column="25">=<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">tt<pos:position pos:line="58" pos:column="29"/></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt></block></then>
            <else pos:line="59" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="17">x<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">rn_r<pos:position pos:line="60" pos:column="24"/></name></name> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">tt<pos:position pos:line="60" pos:column="29"/></name></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt></block></else></if>
            <expr_stmt><expr><name pos:line="61" pos:column="13">saved_tt<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="24">tt<pos:position pos:line="61" pos:column="26"/></name></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="62" pos:column="13">x<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <name pos:line="62" pos:column="17">xx<pos:position pos:line="62" pos:column="19"/></name></expr>;<pos:position pos:line="62" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then> <else pos:line="63" pos:column="11">else <block pos:line="63" pos:column="16">{
            <expr_stmt><expr><name pos:line="64" pos:column="13">tt<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <name pos:line="64" pos:column="18">treenodes<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">tt<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">rn_dupedkey<pos:position pos:line="65" pos:column="28"/></name></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <name><name pos:line="65" pos:column="31">t<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">rn_dupedkey<pos:position pos:line="65" pos:column="45"/></name></name></expr>;<pos:position pos:line="65" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">t<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">rn_dupedkey<pos:position pos:line="66" pos:column="27"/></name></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">tt<pos:position pos:line="66" pos:column="32"/></name></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></else></if>
<cpp:ifdef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifdef<pos:position pos:line="68" pos:column="7"/></cpp:directive> <name pos:line="68" pos:column="8">RN_DEBUG<pos:position pos:line="68" pos:column="16"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="69" pos:column="9">t<pos:position pos:line="69" pos:column="10"/></name> <operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator> <name pos:line="69" pos:column="13">tt<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">+<pos:position pos:line="69" pos:column="17"/></operator> <literal type="number" pos:line="69" pos:column="18">1<pos:position pos:line="69" pos:column="19"/></literal></expr>;<pos:position pos:line="69" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">tt<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">rn_info<pos:position pos:line="70" pos:column="20"/></name></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <name pos:line="70" pos:column="23">rn_nodenum<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">++<pos:position pos:line="70" pos:column="35"/></operator></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">t<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">-&gt;<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="12">rn_info<pos:position pos:line="71" pos:column="19"/></name></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <name pos:line="71" pos:column="22">rn_nodenum<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">++<pos:position pos:line="71" pos:column="34"/></operator></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">tt<pos:position pos:line="72" pos:column="11"/></name><operator pos:line="72" pos:column="11">-&gt;<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="13">rn_twin<pos:position pos:line="72" pos:column="20"/></name></name> <operator pos:line="72" pos:column="21">=<pos:position pos:line="72" pos:column="22"/></operator> <name pos:line="72" pos:column="23">t<pos:position pos:line="72" pos:column="24"/></name></expr>;<pos:position pos:line="72" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">tt<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">-&gt;<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="13">rn_ybro<pos:position pos:line="73" pos:column="20"/></name></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="23">rn_clist<pos:position pos:line="73" pos:column="31"/></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">rn_clist<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <name pos:line="74" pos:column="20">tt<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">tt<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">rn_key<pos:position pos:line="76" pos:column="19"/></name></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <operator pos:line="76" pos:column="22">(<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">caddr_t<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">)<pos:position pos:line="76" pos:column="31"/></operator> <name pos:line="76" pos:column="32">v<pos:position pos:line="76" pos:column="33"/></name></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">tt<pos:position pos:line="77" pos:column="11"/></name><operator pos:line="77" pos:column="11">-&gt;<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="13">rn_b<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <operator pos:line="77" pos:column="20">-<pos:position pos:line="77" pos:column="21"/></operator><literal type="number" pos:line="77" pos:column="21">1<pos:position pos:line="77" pos:column="22"/></literal></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">tt<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">-&gt;<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="13">rn_flags<pos:position pos:line="78" pos:column="21"/></name></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <name pos:line="78" pos:column="24">RNF_ACTIVE<pos:position pos:line="78" pos:column="34"/></name></expr>;<pos:position pos:line="78" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="80" pos:column="5">/*
     * Put mask in tree.
     */</comment>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">netmask<pos:position pos:line="83" pos:column="16"/></name></expr>)<pos:position pos:line="83" pos:column="17"/></condition><then pos:line="83" pos:column="17"> <block pos:line="83" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="84" pos:column="9">tt<pos:position pos:line="84" pos:column="11"/></name><operator pos:line="84" pos:column="11">-&gt;<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="13">rn_mask<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <name pos:line="84" pos:column="23">netmask<pos:position pos:line="84" pos:column="30"/></name></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">tt<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">rn_b<pos:position pos:line="85" pos:column="17"/></name></name> <operator pos:line="85" pos:column="18">=<pos:position pos:line="85" pos:column="19"/></operator> <name><name pos:line="85" pos:column="20">x<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">rn_b<pos:position pos:line="85" pos:column="27"/></name></name></expr>;<pos:position pos:line="85" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">tt<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">rn_flags<pos:position pos:line="86" pos:column="21"/></name></name> <operator pos:line="86" pos:column="22">|=<pos:position pos:line="86" pos:column="24"/></operator> <name><name pos:line="86" pos:column="25">x<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">-&gt;<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="28">rn_flags<pos:position pos:line="86" pos:column="36"/></name></name> <operator pos:line="86" pos:column="37">&amp;<pos:position pos:line="86" pos:column="42"/></operator> <name pos:line="86" pos:column="39">RNF_NORMAL<pos:position pos:line="86" pos:column="49"/></name></expr>;<pos:position pos:line="86" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="88" pos:column="5">t<pos:position pos:line="88" pos:column="6"/></name> <operator pos:line="88" pos:column="7">=<pos:position pos:line="88" pos:column="8"/></operator> <name><name pos:line="88" pos:column="9">saved_tt<pos:position pos:line="88" pos:column="17"/></name><operator pos:line="88" pos:column="17">-&gt;<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="19">rn_p<pos:position pos:line="88" pos:column="23"/></name></name></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">keyduplicated<pos:position pos:line="89" pos:column="22"/></name></expr>)<pos:position pos:line="89" pos:column="23"/></condition><then pos:line="89" pos:column="23">
        <block type="pseudo"><goto pos:line="90" pos:column="9">goto <name pos:line="90" pos:column="14">on2<pos:position pos:line="90" pos:column="17"/></name>;<pos:position pos:line="90" pos:column="18"/></goto></block></then></if>
    <expr_stmt><expr><name pos:line="91" pos:column="5">b_leaf<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">=<pos:position pos:line="91" pos:column="13"/></operator> <operator pos:line="91" pos:column="14">-<pos:position pos:line="91" pos:column="15"/></operator><literal type="number" pos:line="91" pos:column="15">1<pos:position pos:line="91" pos:column="16"/></literal> <operator pos:line="91" pos:column="17">-<pos:position pos:line="91" pos:column="18"/></operator> <name><name pos:line="91" pos:column="19">t<pos:position pos:line="91" pos:column="20"/></name><operator pos:line="91" pos:column="20">-&gt;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="22">rn_b<pos:position pos:line="91" pos:column="26"/></name></name></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">t<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">rn_r<pos:position pos:line="92" pos:column="16"/></name></name> <operator pos:line="92" pos:column="17">==<pos:position pos:line="92" pos:column="19"/></operator> <name pos:line="92" pos:column="20">saved_tt<pos:position pos:line="92" pos:column="28"/></name></expr>)<pos:position pos:line="92" pos:column="29"/></condition><then pos:line="92" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="9">x<pos:position pos:line="93" pos:column="10"/></name> <operator pos:line="93" pos:column="11">=<pos:position pos:line="93" pos:column="12"/></operator> <name><name pos:line="93" pos:column="13">t<pos:position pos:line="93" pos:column="14"/></name><operator pos:line="93" pos:column="14">-&gt;<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="16">rn_l<pos:position pos:line="93" pos:column="20"/></name></name></expr>;<pos:position pos:line="93" pos:column="21"/></expr_stmt></block></then>
    <else pos:line="94" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="9">x<pos:position pos:line="95" pos:column="10"/></name> <operator pos:line="95" pos:column="11">=<pos:position pos:line="95" pos:column="12"/></operator> <name><name pos:line="95" pos:column="13">t<pos:position pos:line="95" pos:column="14"/></name><operator pos:line="95" pos:column="14">-&gt;<pos:position pos:line="95" pos:column="19"/></operator><name pos:line="95" pos:column="16">rn_r<pos:position pos:line="95" pos:column="20"/></name></name></expr>;<pos:position pos:line="95" pos:column="21"/></expr_stmt></block></else></if>
    <comment type="block" pos:line="96" pos:column="5">/* Promote general routes from below */</comment>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name><name pos:line="97" pos:column="9">x<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">rn_b<pos:position pos:line="97" pos:column="16"/></name></name> <operator pos:line="97" pos:column="17">&lt;<pos:position pos:line="97" pos:column="21"/></operator> <literal type="number" pos:line="97" pos:column="19">0<pos:position pos:line="97" pos:column="20"/></literal></expr>)<pos:position pos:line="97" pos:column="21"/></condition><then pos:line="97" pos:column="21"> <block pos:line="97" pos:column="22">{
        <for pos:line="98" pos:column="9">for <control pos:line="98" pos:column="13">(<init><expr><name pos:line="98" pos:column="14">mp<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <operator pos:line="98" pos:column="19">&amp;<pos:position pos:line="98" pos:column="24"/></operator><name><name pos:line="98" pos:column="20">t<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">-&gt;<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="23">rn_mklist<pos:position pos:line="98" pos:column="32"/></name></name></expr>;<pos:position pos:line="98" pos:column="33"/></init> <condition><expr><name pos:line="98" pos:column="34">x<pos:position pos:line="98" pos:column="35"/></name></expr>;<pos:position pos:line="98" pos:column="36"/></condition> <incr><expr><name pos:line="98" pos:column="37">x<pos:position pos:line="98" pos:column="38"/></name> <operator pos:line="98" pos:column="39">=<pos:position pos:line="98" pos:column="40"/></operator> <name><name pos:line="98" pos:column="41">x<pos:position pos:line="98" pos:column="42"/></name><operator pos:line="98" pos:column="42">-&gt;<pos:position pos:line="98" pos:column="47"/></operator><name pos:line="98" pos:column="44">rn_dupedkey<pos:position pos:line="98" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="98" pos:column="56"/></control>
            <block type="pseudo"><if pos:line="99" pos:column="13">if <condition pos:line="99" pos:column="16">(<expr><name><name pos:line="99" pos:column="17">x<pos:position pos:line="99" pos:column="18"/></name><operator pos:line="99" pos:column="18">-&gt;<pos:position pos:line="99" pos:column="23"/></operator><name pos:line="99" pos:column="20">rn_mask<pos:position pos:line="99" pos:column="27"/></name></name> <operator pos:line="99" pos:column="28">&amp;&amp;<pos:position pos:line="99" pos:column="38"/></operator> <operator pos:line="99" pos:column="31">(<pos:position pos:line="99" pos:column="32"/></operator><name><name pos:line="99" pos:column="32">x<pos:position pos:line="99" pos:column="33"/></name><operator pos:line="99" pos:column="33">-&gt;<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="35">rn_b<pos:position pos:line="99" pos:column="39"/></name></name> <operator pos:line="99" pos:column="40">&gt;=<pos:position pos:line="99" pos:column="45"/></operator> <name pos:line="99" pos:column="43">b_leaf<pos:position pos:line="99" pos:column="49"/></name><operator pos:line="99" pos:column="49">)<pos:position pos:line="99" pos:column="50"/></operator> <operator pos:line="99" pos:column="51">&amp;&amp;<pos:position pos:line="99" pos:column="61"/></operator> <name><name pos:line="99" pos:column="54">x<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">-&gt;<pos:position pos:line="99" pos:column="60"/></operator><name pos:line="99" pos:column="57">rn_mklist<pos:position pos:line="99" pos:column="66"/></name></name> <operator pos:line="99" pos:column="67">==<pos:position pos:line="99" pos:column="69"/></operator> <literal type="number" pos:line="99" pos:column="70">0<pos:position pos:line="99" pos:column="71"/></literal></expr>)<pos:position pos:line="99" pos:column="72"/></condition><then pos:line="99" pos:column="72"> <block pos:line="99" pos:column="73">{
                <if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><operator pos:line="100" pos:column="21">(<pos:position pos:line="100" pos:column="22"/></operator><operator pos:line="100" pos:column="22">*<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="23">mp<pos:position pos:line="100" pos:column="25"/></name> <operator pos:line="100" pos:column="26">=<pos:position pos:line="100" pos:column="27"/></operator> <name pos:line="100" pos:column="28">m<pos:position pos:line="100" pos:column="29"/></name> <operator pos:line="100" pos:column="30">=<pos:position pos:line="100" pos:column="31"/></operator> <call><name pos:line="100" pos:column="32">rn_new_radix_mask<pos:position pos:line="100" pos:column="49"/></name><argument_list pos:line="100" pos:column="49">(<argument><expr><name pos:line="100" pos:column="50">x<pos:position pos:line="100" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="53">0<pos:position pos:line="100" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="55"/></argument_list></call><operator pos:line="100" pos:column="55">)<pos:position pos:line="100" pos:column="56"/></operator></expr>)<pos:position pos:line="100" pos:column="57"/></condition><then pos:line="100" pos:column="57">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="21">mp<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <operator pos:line="101" pos:column="26">&amp;<pos:position pos:line="101" pos:column="31"/></operator><name><name pos:line="101" pos:column="27">m<pos:position pos:line="101" pos:column="28"/></name><operator pos:line="101" pos:column="28">-&gt;<pos:position pos:line="101" pos:column="33"/></operator><name pos:line="101" pos:column="30">rm_mklist<pos:position pos:line="101" pos:column="39"/></name></name></expr>;<pos:position pos:line="101" pos:column="40"/></expr_stmt></block></then></if>
            }<pos:position pos:line="102" pos:column="14"/></block></then></if></block></for>
    }<pos:position pos:line="103" pos:column="6"/></block></then> <elseif pos:line="103" pos:column="7">else <if pos:line="103" pos:column="12">if <condition pos:line="103" pos:column="15">(<expr><name><name pos:line="103" pos:column="16">x<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">rn_mklist<pos:position pos:line="103" pos:column="28"/></name></name></expr>)<pos:position pos:line="103" pos:column="29"/></condition><then pos:line="103" pos:column="29"> <block pos:line="103" pos:column="30">{
        <comment type="block" pos:line="104" pos:column="9">/*
         * Skip over masks whose index is &gt; that of new node
         */</comment>
        <for pos:line="107" pos:column="9">for <control pos:line="107" pos:column="13">(<init><expr><name pos:line="107" pos:column="14">mp<pos:position pos:line="107" pos:column="16"/></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <operator pos:line="107" pos:column="19">&amp;<pos:position pos:line="107" pos:column="24"/></operator><name><name pos:line="107" pos:column="20">x<pos:position pos:line="107" pos:column="21"/></name><operator pos:line="107" pos:column="21">-&gt;<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="23">rn_mklist<pos:position pos:line="107" pos:column="32"/></name></name></expr>;<pos:position pos:line="107" pos:column="33"/></init> <condition><expr><operator pos:line="107" pos:column="34">(<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="35">m<pos:position pos:line="107" pos:column="36"/></name> <operator pos:line="107" pos:column="37">=<pos:position pos:line="107" pos:column="38"/></operator> <operator pos:line="107" pos:column="39">*<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="40">mp<pos:position pos:line="107" pos:column="42"/></name><operator pos:line="107" pos:column="42">)<pos:position pos:line="107" pos:column="43"/></operator></expr>;<pos:position pos:line="107" pos:column="44"/></condition> <incr><expr><name pos:line="107" pos:column="45">mp<pos:position pos:line="107" pos:column="47"/></name> <operator pos:line="107" pos:column="48">=<pos:position pos:line="107" pos:column="49"/></operator> <operator pos:line="107" pos:column="50">&amp;<pos:position pos:line="107" pos:column="55"/></operator><name><name pos:line="107" pos:column="51">m<pos:position pos:line="107" pos:column="52"/></name><operator pos:line="107" pos:column="52">-&gt;<pos:position pos:line="107" pos:column="57"/></operator><name pos:line="107" pos:column="54">rm_mklist<pos:position pos:line="107" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="107" pos:column="64"/></control>
            <block type="pseudo"><if pos:line="108" pos:column="13">if <condition pos:line="108" pos:column="16">(<expr><name><name pos:line="108" pos:column="17">m<pos:position pos:line="108" pos:column="18"/></name><operator pos:line="108" pos:column="18">-&gt;<pos:position pos:line="108" pos:column="23"/></operator><name pos:line="108" pos:column="20">rm_b<pos:position pos:line="108" pos:column="24"/></name></name> <operator pos:line="108" pos:column="25">&gt;=<pos:position pos:line="108" pos:column="30"/></operator> <name pos:line="108" pos:column="28">b_leaf<pos:position pos:line="108" pos:column="34"/></name></expr>)<pos:position pos:line="108" pos:column="35"/></condition><then pos:line="108" pos:column="35">
                <block type="pseudo"><break pos:line="109" pos:column="17">break;<pos:position pos:line="109" pos:column="23"/></break></block></then></if></block></for>
        <expr_stmt><expr><name><name pos:line="110" pos:column="9">t<pos:position pos:line="110" pos:column="10"/></name><operator pos:line="110" pos:column="10">-&gt;<pos:position pos:line="110" pos:column="15"/></operator><name pos:line="110" pos:column="12">rn_mklist<pos:position pos:line="110" pos:column="21"/></name></name> <operator pos:line="110" pos:column="22">=<pos:position pos:line="110" pos:column="23"/></operator> <name pos:line="110" pos:column="24">m<pos:position pos:line="110" pos:column="25"/></name></expr>;<pos:position pos:line="110" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="111" pos:column="9">*<pos:position pos:line="111" pos:column="10"/></operator><name pos:line="111" pos:column="10">mp<pos:position pos:line="111" pos:column="12"/></name> <operator pos:line="111" pos:column="13">=<pos:position pos:line="111" pos:column="14"/></operator> <literal type="number" pos:line="111" pos:column="15">0<pos:position pos:line="111" pos:column="16"/></literal></expr>;<pos:position pos:line="111" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if></elseif></if>
<label><name pos:line="113" pos:column="1">on2<pos:position pos:line="113" pos:column="4"/></name>:<pos:position pos:line="113" pos:column="5"/></label>
    <comment type="block" pos:line="114" pos:column="5">/* Add new route to highest possible ancestor's list */</comment>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><operator pos:line="115" pos:column="9">(<pos:position pos:line="115" pos:column="10"/></operator><name pos:line="115" pos:column="10">netmask<pos:position pos:line="115" pos:column="17"/></name> <operator pos:line="115" pos:column="18">==<pos:position pos:line="115" pos:column="20"/></operator> <literal type="number" pos:line="115" pos:column="21">0<pos:position pos:line="115" pos:column="22"/></literal><operator pos:line="115" pos:column="22">)<pos:position pos:line="115" pos:column="23"/></operator> <operator pos:line="115" pos:column="24">||<pos:position pos:line="115" pos:column="26"/></operator> <operator pos:line="115" pos:column="27">(<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="28">b<pos:position pos:line="115" pos:column="29"/></name> <operator pos:line="115" pos:column="30">&gt;<pos:position pos:line="115" pos:column="34"/></operator> <name><name pos:line="115" pos:column="32">t<pos:position pos:line="115" pos:column="33"/></name><operator pos:line="115" pos:column="33">-&gt;<pos:position pos:line="115" pos:column="38"/></operator><name pos:line="115" pos:column="35">rn_b<pos:position pos:line="115" pos:column="39"/></name></name><operator pos:line="115" pos:column="39">)<pos:position pos:line="115" pos:column="40"/></operator></expr>)<pos:position pos:line="115" pos:column="41"/></condition><then pos:line="115" pos:column="41">
        <block type="pseudo"><return pos:line="116" pos:column="9">return <expr><name pos:line="116" pos:column="16">tt<pos:position pos:line="116" pos:column="18"/></name></expr>;<pos:position pos:line="116" pos:column="19"/></return></block></then></if>		<comment type="block" pos:line="116" pos:column="33">/* can't lift at all */</comment>
    <expr_stmt><expr><name pos:line="117" pos:column="5">b_leaf<pos:position pos:line="117" pos:column="11"/></name> <operator pos:line="117" pos:column="12">=<pos:position pos:line="117" pos:column="13"/></operator> <name><name pos:line="117" pos:column="14">tt<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">-&gt;<pos:position pos:line="117" pos:column="21"/></operator><name pos:line="117" pos:column="18">rn_b<pos:position pos:line="117" pos:column="22"/></name></name></expr>;<pos:position pos:line="117" pos:column="23"/></expr_stmt>
    <do pos:line="118" pos:column="5">do <block pos:line="118" pos:column="8">{
        <expr_stmt><expr><name pos:line="119" pos:column="9">x<pos:position pos:line="119" pos:column="10"/></name> <operator pos:line="119" pos:column="11">=<pos:position pos:line="119" pos:column="12"/></operator> <name pos:line="119" pos:column="13">t<pos:position pos:line="119" pos:column="14"/></name></expr>;<pos:position pos:line="119" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">t<pos:position pos:line="120" pos:column="10"/></name> <operator pos:line="120" pos:column="11">=<pos:position pos:line="120" pos:column="12"/></operator> <name><name pos:line="120" pos:column="13">t<pos:position pos:line="120" pos:column="14"/></name><operator pos:line="120" pos:column="14">-&gt;<pos:position pos:line="120" pos:column="19"/></operator><name pos:line="120" pos:column="16">rn_p<pos:position pos:line="120" pos:column="20"/></name></name></expr>;<pos:position pos:line="120" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="121" pos:column="6"/></block> while <condition pos:line="121" pos:column="13">(<expr><name pos:line="121" pos:column="14">b<pos:position pos:line="121" pos:column="15"/></name> <operator pos:line="121" pos:column="16">&lt;=<pos:position pos:line="121" pos:column="21"/></operator> <name><name pos:line="121" pos:column="19">t<pos:position pos:line="121" pos:column="20"/></name><operator pos:line="121" pos:column="20">-&gt;<pos:position pos:line="121" pos:column="25"/></operator><name pos:line="121" pos:column="22">rn_b<pos:position pos:line="121" pos:column="26"/></name></name> <operator pos:line="121" pos:column="27">&amp;&amp;<pos:position pos:line="121" pos:column="37"/></operator> <name pos:line="121" pos:column="30">x<pos:position pos:line="121" pos:column="31"/></name> <operator pos:line="121" pos:column="32">!=<pos:position pos:line="121" pos:column="34"/></operator> <name pos:line="121" pos:column="35">top<pos:position pos:line="121" pos:column="38"/></name></expr>)<pos:position pos:line="121" pos:column="39"/></condition>;<pos:position pos:line="121" pos:column="40"/></do>
    <comment type="block" pos:line="122" pos:column="5">/*
     * Search through routes associated with node to
     * insert new route according to index.
     * Need same criteria as when sorting dupedkeys to avoid
     * double loop on deletion.
     */</comment>
    <for pos:line="128" pos:column="5">for <control pos:line="128" pos:column="9">(<init><expr><name pos:line="128" pos:column="10">mp<pos:position pos:line="128" pos:column="12"/></name> <operator pos:line="128" pos:column="13">=<pos:position pos:line="128" pos:column="14"/></operator> <operator pos:line="128" pos:column="15">&amp;<pos:position pos:line="128" pos:column="20"/></operator><name><name pos:line="128" pos:column="16">x<pos:position pos:line="128" pos:column="17"/></name><operator pos:line="128" pos:column="17">-&gt;<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="19">rn_mklist<pos:position pos:line="128" pos:column="28"/></name></name></expr>;<pos:position pos:line="128" pos:column="29"/></init> <condition><expr><operator pos:line="128" pos:column="30">(<pos:position pos:line="128" pos:column="31"/></operator><name pos:line="128" pos:column="31">m<pos:position pos:line="128" pos:column="32"/></name> <operator pos:line="128" pos:column="33">=<pos:position pos:line="128" pos:column="34"/></operator> <operator pos:line="128" pos:column="35">*<pos:position pos:line="128" pos:column="36"/></operator><name pos:line="128" pos:column="36">mp<pos:position pos:line="128" pos:column="38"/></name><operator pos:line="128" pos:column="38">)<pos:position pos:line="128" pos:column="39"/></operator></expr>;<pos:position pos:line="128" pos:column="40"/></condition> <incr><expr><name pos:line="128" pos:column="41">mp<pos:position pos:line="128" pos:column="43"/></name> <operator pos:line="128" pos:column="44">=<pos:position pos:line="128" pos:column="45"/></operator> <operator pos:line="128" pos:column="46">&amp;<pos:position pos:line="128" pos:column="51"/></operator><name><name pos:line="128" pos:column="47">m<pos:position pos:line="128" pos:column="48"/></name><operator pos:line="128" pos:column="48">-&gt;<pos:position pos:line="128" pos:column="53"/></operator><name pos:line="128" pos:column="50">rm_mklist<pos:position pos:line="128" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="128" pos:column="60"/></control> <block pos:line="128" pos:column="61">{
        <if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name><name pos:line="129" pos:column="13">m<pos:position pos:line="129" pos:column="14"/></name><operator pos:line="129" pos:column="14">-&gt;<pos:position pos:line="129" pos:column="19"/></operator><name pos:line="129" pos:column="16">rm_b<pos:position pos:line="129" pos:column="20"/></name></name> <operator pos:line="129" pos:column="21">&lt;<pos:position pos:line="129" pos:column="25"/></operator> <name pos:line="129" pos:column="23">b_leaf<pos:position pos:line="129" pos:column="29"/></name></expr>)<pos:position pos:line="129" pos:column="30"/></condition><then pos:line="129" pos:column="30">
            <block type="pseudo"><continue pos:line="130" pos:column="13">continue;<pos:position pos:line="130" pos:column="22"/></continue></block></then></if>
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name><name pos:line="131" pos:column="13">m<pos:position pos:line="131" pos:column="14"/></name><operator pos:line="131" pos:column="14">-&gt;<pos:position pos:line="131" pos:column="19"/></operator><name pos:line="131" pos:column="16">rm_b<pos:position pos:line="131" pos:column="20"/></name></name> <operator pos:line="131" pos:column="21">&gt;<pos:position pos:line="131" pos:column="25"/></operator> <name pos:line="131" pos:column="23">b_leaf<pos:position pos:line="131" pos:column="29"/></name></expr>)<pos:position pos:line="131" pos:column="30"/></condition><then pos:line="131" pos:column="30">
            <block type="pseudo"><break pos:line="132" pos:column="13">break;<pos:position pos:line="132" pos:column="19"/></break></block></then></if>
        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name><name pos:line="133" pos:column="13">m<pos:position pos:line="133" pos:column="14"/></name><operator pos:line="133" pos:column="14">-&gt;<pos:position pos:line="133" pos:column="19"/></operator><name pos:line="133" pos:column="16">rm_flags<pos:position pos:line="133" pos:column="24"/></name></name> <operator pos:line="133" pos:column="25">&amp;<pos:position pos:line="133" pos:column="30"/></operator> <name pos:line="133" pos:column="27">RNF_NORMAL<pos:position pos:line="133" pos:column="37"/></name></expr>)<pos:position pos:line="133" pos:column="38"/></condition><then pos:line="133" pos:column="38"> <block pos:line="133" pos:column="39">{
            <expr_stmt><expr><name pos:line="134" pos:column="13">mmask<pos:position pos:line="134" pos:column="18"/></name> <operator pos:line="134" pos:column="19">=<pos:position pos:line="134" pos:column="20"/></operator> <name><name pos:line="134" pos:column="21">m<pos:position pos:line="134" pos:column="22"/></name><operator pos:line="134" pos:column="22">-&gt;<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="24">rm_leaf<pos:position pos:line="134" pos:column="31"/></name><operator pos:line="134" pos:column="31">-&gt;<pos:position pos:line="134" pos:column="36"/></operator><name pos:line="134" pos:column="33">rn_mask<pos:position pos:line="134" pos:column="40"/></name></name></expr>;<pos:position pos:line="134" pos:column="41"/></expr_stmt>
            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><name><name pos:line="135" pos:column="17">tt<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">-&gt;<pos:position pos:line="135" pos:column="24"/></operator><name pos:line="135" pos:column="21">rn_flags<pos:position pos:line="135" pos:column="29"/></name></name> <operator pos:line="135" pos:column="30">&amp;<pos:position pos:line="135" pos:column="35"/></operator> <name pos:line="135" pos:column="32">RNF_NORMAL<pos:position pos:line="135" pos:column="42"/></name></expr>)<pos:position pos:line="135" pos:column="43"/></condition><then pos:line="135" pos:column="43"> <block pos:line="135" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">fprintf<pos:position pos:line="136" pos:column="24"/></name><argument_list pos:line="136" pos:column="24">(<argument><expr><name pos:line="136" pos:column="25">stderr<pos:position pos:line="136" pos:column="31"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="137" pos:column="25">"Non-unique normal route, mask not entered"<pos:position pos:line="137" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="70"/></expr_stmt>
                <return pos:line="138" pos:column="17">return <expr><name pos:line="138" pos:column="24">tt<pos:position pos:line="138" pos:column="26"/></name></expr>;<pos:position pos:line="138" pos:column="27"/></return>
            }<pos:position pos:line="139" pos:column="14"/></block></then></if>
        }<pos:position pos:line="140" pos:column="10"/></block></then> <else pos:line="140" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="141" pos:column="13">mmask<pos:position pos:line="141" pos:column="18"/></name> <operator pos:line="141" pos:column="19">=<pos:position pos:line="141" pos:column="20"/></operator> <name><name pos:line="141" pos:column="21">m<pos:position pos:line="141" pos:column="22"/></name><operator pos:line="141" pos:column="22">-&gt;<pos:position pos:line="141" pos:column="27"/></operator><name pos:line="141" pos:column="24">rm_mask<pos:position pos:line="141" pos:column="31"/></name></name></expr>;<pos:position pos:line="141" pos:column="32"/></expr_stmt></block></else></if>
        <if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><name pos:line="142" pos:column="13">mmask<pos:position pos:line="142" pos:column="18"/></name> <operator pos:line="142" pos:column="19">==<pos:position pos:line="142" pos:column="21"/></operator> <name pos:line="142" pos:column="22">netmask<pos:position pos:line="142" pos:column="29"/></name></expr>)<pos:position pos:line="142" pos:column="30"/></condition><then pos:line="142" pos:column="30"> <block pos:line="142" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="143" pos:column="13">m<pos:position pos:line="143" pos:column="14"/></name><operator pos:line="143" pos:column="14">-&gt;<pos:position pos:line="143" pos:column="19"/></operator><name pos:line="143" pos:column="16">rm_refs<pos:position pos:line="143" pos:column="23"/></name></name><operator pos:line="143" pos:column="23">++<pos:position pos:line="143" pos:column="25"/></operator></expr>;<pos:position pos:line="143" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="144" pos:column="13">tt<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">-&gt;<pos:position pos:line="144" pos:column="20"/></operator><name pos:line="144" pos:column="17">rn_mklist<pos:position pos:line="144" pos:column="26"/></name></name> <operator pos:line="144" pos:column="27">=<pos:position pos:line="144" pos:column="28"/></operator> <name pos:line="144" pos:column="29">m<pos:position pos:line="144" pos:column="30"/></name></expr>;<pos:position pos:line="144" pos:column="31"/></expr_stmt>
            <return pos:line="145" pos:column="13">return <expr><name pos:line="145" pos:column="20">tt<pos:position pos:line="145" pos:column="22"/></name></expr>;<pos:position pos:line="145" pos:column="23"/></return>
        }<pos:position pos:line="146" pos:column="10"/></block></then></if>
        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><call><name pos:line="147" pos:column="13">squid_rn_refines<pos:position pos:line="147" pos:column="29"/></name><argument_list pos:line="147" pos:column="29">(<argument><expr><name pos:line="147" pos:column="30">netmask<pos:position pos:line="147" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="39">mmask<pos:position pos:line="147" pos:column="44"/></name></expr></argument>)<pos:position pos:line="147" pos:column="45"/></argument_list></call> <operator pos:line="147" pos:column="46">||<pos:position pos:line="147" pos:column="48"/></operator> <call><name pos:line="147" pos:column="49">rn_lexobetter<pos:position pos:line="147" pos:column="62"/></name><argument_list pos:line="147" pos:column="62">(<argument><expr><name pos:line="147" pos:column="63">netmask<pos:position pos:line="147" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="72">mmask<pos:position pos:line="147" pos:column="77"/></name></expr></argument>)<pos:position pos:line="147" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="79"/></condition><then pos:line="147" pos:column="79">
            <block type="pseudo"><break pos:line="148" pos:column="13">break;<pos:position pos:line="148" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="149" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="150" pos:column="5">*<pos:position pos:line="150" pos:column="6"/></operator><name pos:line="150" pos:column="6">mp<pos:position pos:line="150" pos:column="8"/></name> <operator pos:line="150" pos:column="9">=<pos:position pos:line="150" pos:column="10"/></operator> <call><name pos:line="150" pos:column="11">rn_new_radix_mask<pos:position pos:line="150" pos:column="28"/></name><argument_list pos:line="150" pos:column="28">(<argument><expr><name pos:line="150" pos:column="29">tt<pos:position pos:line="150" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="150" pos:column="33">*<pos:position pos:line="150" pos:column="34"/></operator><name pos:line="150" pos:column="34">mp<pos:position pos:line="150" pos:column="36"/></name></expr></argument>)<pos:position pos:line="150" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="38"/></expr_stmt>
    <return pos:line="151" pos:column="5">return <expr><name pos:line="151" pos:column="12">tt<pos:position pos:line="151" pos:column="14"/></name></expr>;<pos:position pos:line="151" pos:column="15"/></return>
}<pos:position pos:line="152" pos:column="2"/></block></function></unit>

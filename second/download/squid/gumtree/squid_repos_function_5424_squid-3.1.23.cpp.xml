<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5424_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">esi_endElementSAXFunc<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">ctx<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">xmlChar<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type> <name pos:line="1" pos:column="56">name<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ESILibxml2Parser<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">p<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">(<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">ESILibxml2Parser<pos:position pos:line="3" pos:column="44"/></name> <operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">ctx<pos:position pos:line="3" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">p<pos:position pos:line="4" pos:column="6"/></name><operator pos:line="4" pos:column="6">-&gt;<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="8">getClient<pos:position pos:line="4" pos:column="17"/></name></name><argument_list pos:line="4" pos:column="17">()<pos:position pos:line="4" pos:column="19"/></argument_list></call><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><call><name pos:line="4" pos:column="21">end<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><specifier pos:line="4" pos:column="26">const<pos:position pos:line="4" pos:column="31"/></specifier> <name pos:line="4" pos:column="32">char<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">name<pos:position pos:line="4" pos:column="43"/></name></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="45"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

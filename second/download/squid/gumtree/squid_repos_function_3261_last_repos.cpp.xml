<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3261_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Iterator<pos:position pos:line="1" pos:column="26"/></name><operator pos:line="1" pos:column="26">::<pos:position pos:line="1" pos:column="28"/></operator><name pos:line="1" pos:column="28">start<pos:position pos:line="1" pos:column="33"/></name></name><parameter_list pos:line="1" pos:column="33">()<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">Adaptation<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">::<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">Initiate<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">::<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">start<pos:position pos:line="3" pos:column="32"/></name></name><argument_list pos:line="3" pos:column="32">()<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">thePlan<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name pos:line="5" pos:column="15">ServicePlan<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">theGroup<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="37">filter<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>

    <comment type="line" pos:line="7" pos:column="5">// Add adaptation group name once and now, before</comment>
    <comment type="line" pos:line="8" pos:column="5">// dynamic groups change it at step() time.</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">Adaptation<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">::<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">Config<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">::<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">needHistory<pos:position pos:line="9" pos:column="40"/></name></name> <operator pos:line="9" pos:column="41">&amp;&amp;<pos:position pos:line="9" pos:column="51"/></operator> <operator pos:line="9" pos:column="44">!<pos:position pos:line="9" pos:column="45"/></operator><call><name><name pos:line="9" pos:column="45">thePlan<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">.<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="53">exhausted<pos:position pos:line="9" pos:column="62"/></name></name><argument_list pos:line="9" pos:column="62">()<pos:position pos:line="9" pos:column="64"/></argument_list></call> <operator pos:line="9" pos:column="65">&amp;&amp;<pos:position pos:line="9" pos:column="75"/></operator> <operator pos:line="9" pos:column="68">(<pos:position pos:line="9" pos:column="69"/></operator><cast type="dynamic" pos:line="9" pos:column="69">dynamic_cast<argument_list type="generic" pos:line="9" pos:column="81">&lt;<argument><expr><name pos:line="9" pos:column="82">ServiceSet<pos:position pos:line="9" pos:column="92"/></name> <operator pos:line="9" pos:column="93">*<pos:position pos:line="9" pos:column="94"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="98"/></argument_list><argument_list pos:line="9" pos:column="95">(<argument><expr><call><name><name pos:line="9" pos:column="96">theGroup<pos:position pos:line="9" pos:column="104"/></name><operator pos:line="9" pos:column="104">.<pos:position pos:line="9" pos:column="105"/></operator><name pos:line="9" pos:column="105">getRaw<pos:position pos:line="9" pos:column="111"/></name></name><argument_list pos:line="9" pos:column="111">()<pos:position pos:line="9" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="114"/></argument_list></cast> <operator pos:line="9" pos:column="115">||<pos:position pos:line="9" pos:column="117"/></operator> <cast type="dynamic" pos:line="9" pos:column="118">dynamic_cast<argument_list type="generic" pos:line="9" pos:column="130">&lt;<argument><expr><name pos:line="9" pos:column="131">ServiceChain<pos:position pos:line="9" pos:column="143"/></name> <operator pos:line="9" pos:column="144">*<pos:position pos:line="9" pos:column="145"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="149"/></argument_list><argument_list pos:line="9" pos:column="146">(<argument><expr><call><name><name pos:line="9" pos:column="147">theGroup<pos:position pos:line="9" pos:column="155"/></name><operator pos:line="9" pos:column="155">.<pos:position pos:line="9" pos:column="156"/></operator><name pos:line="9" pos:column="156">getRaw<pos:position pos:line="9" pos:column="162"/></name></name><argument_list pos:line="9" pos:column="162">()<pos:position pos:line="9" pos:column="164"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="165"/></argument_list></cast><operator pos:line="9" pos:column="165">)<pos:position pos:line="9" pos:column="166"/></operator></expr>)<pos:position pos:line="9" pos:column="167"/></condition><then pos:line="9" pos:column="167"> <block pos:line="9" pos:column="168">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">HttpRequest<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">request<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><cast type="dynamic" pos:line="10" pos:column="32">dynamic_cast<argument_list type="generic" pos:line="10" pos:column="44">&lt;<argument><expr><name pos:line="10" pos:column="45">HttpRequest<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">*<pos:position pos:line="10" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="61"/></argument_list><argument_list pos:line="10" pos:column="58">(<argument><expr><name pos:line="10" pos:column="59">theMsg<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="10" pos:column="67"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">request<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="13">request<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">theCause<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">Must<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">request<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="14" pos:column="9">Adaptation<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">::<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">History<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">::<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">Pointer<pos:position pos:line="14" pos:column="37"/></name></name></type> <name pos:line="14" pos:column="38">ah<pos:position pos:line="14" pos:column="40"/></name> <init pos:line="14" pos:column="41">= <expr><call><name><name pos:line="14" pos:column="43">request<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">adaptHistory<pos:position pos:line="14" pos:column="64"/></name></name><argument_list pos:line="14" pos:column="64">(<argument><expr><literal type="boolean" pos:line="14" pos:column="65">true<pos:position pos:line="14" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">auto<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">gid<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><call><name pos:line="15" pos:column="20">StringToSBuf<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name><name pos:line="15" pos:column="33">theGroup<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">id<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">ah<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">recordAdaptationService<pos:position pos:line="16" pos:column="36"/></name></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">gid<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">step<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">()<pos:position pos:line="19" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6880_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">esiSequence<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">addElement<pos:position pos:line="2" pos:column="24"/></name></name> <parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name><name pos:line="2" pos:column="26">ESIElement<pos:position pos:line="2" pos:column="36"/></name><operator pos:line="2" pos:column="36">::<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="38">Pointer<pos:position pos:line="2" pos:column="45"/></name></name></type> <name pos:line="2" pos:column="46">element<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* add an element to the output list */</comment>
    <comment type="block" pos:line="5" pos:column="5">/* Some elements require specific parents */</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><cast type="dynamic" pos:line="7" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="7" pos:column="21">&lt;<argument><expr><name pos:line="7" pos:column="22">esiAttempt<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="37"/></argument_list><argument_list pos:line="7" pos:column="34">(<argument><expr><call><name><name pos:line="7" pos:column="35">element<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">getRaw<pos:position pos:line="7" pos:column="49"/></name></name><argument_list pos:line="7" pos:column="49">()<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></cast> <operator pos:line="7" pos:column="53">||<pos:position pos:line="7" pos:column="55"/></operator>
            <cast type="dynamic" pos:line="8" pos:column="13">dynamic_cast<argument_list type="generic" pos:line="8" pos:column="25">&lt;<argument><expr><name pos:line="8" pos:column="26">esiExcept<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="40"/></argument_list><argument_list pos:line="8" pos:column="37">(<argument><expr><call><name><name pos:line="8" pos:column="38">element<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">getRaw<pos:position pos:line="8" pos:column="52"/></name></name><argument_list pos:line="8" pos:column="52">()<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></cast></expr>)<pos:position pos:line="8" pos:column="56"/></condition><then pos:line="8" pos:column="56"> <block pos:line="8" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">86<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">DBG_CRITICAL<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"esiSequenceAdd: misparented Attempt or Except element (section 3.4)"<pos:position pos:line="9" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="105"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* Tie literals together for efficiency */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name><name pos:line="14" pos:column="9">elements<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">size<pos:position pos:line="14" pos:column="22"/></name></name><argument_list pos:line="14" pos:column="22">()<pos:position pos:line="14" pos:column="24"/></argument_list></call> <operator pos:line="14" pos:column="25">&amp;&amp;<pos:position pos:line="14" pos:column="35"/></operator> <cast type="dynamic" pos:line="14" pos:column="28">dynamic_cast<argument_list type="generic" pos:line="14" pos:column="40">&lt;<argument><expr><name pos:line="14" pos:column="41">esiLiteral<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">*<pos:position pos:line="14" pos:column="52"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="56"/></argument_list><argument_list pos:line="14" pos:column="53">(<argument><expr><call><name><name pos:line="14" pos:column="54">element<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">.<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="62">getRaw<pos:position pos:line="14" pos:column="68"/></name></name><argument_list pos:line="14" pos:column="68">()<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></cast> <operator pos:line="14" pos:column="72">&amp;&amp;<pos:position pos:line="14" pos:column="82"/></operator>
            <cast type="dynamic" pos:line="15" pos:column="13">dynamic_cast<argument_list type="generic" pos:line="15" pos:column="25">&lt;<argument><expr><name pos:line="15" pos:column="26">esiLiteral<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="41"/></argument_list><argument_list pos:line="15" pos:column="38">(<argument><expr><name><name pos:line="15" pos:column="39">elements<pos:position pos:line="15" pos:column="47"/></name><index pos:line="15" pos:column="47">[<expr><call><name><name pos:line="15" pos:column="48">elements<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">.<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="57">size<pos:position pos:line="15" pos:column="61"/></name></name><argument_list pos:line="15" pos:column="61">()<pos:position pos:line="15" pos:column="63"/></argument_list></call> <operator pos:line="15" pos:column="64">-<pos:position pos:line="15" pos:column="65"/></operator> <literal type="number" pos:line="15" pos:column="66">1<pos:position pos:line="15" pos:column="67"/></literal></expr>]<pos:position pos:line="15" pos:column="68"/></index></name><operator pos:line="15" pos:column="68">.<pos:position pos:line="15" pos:column="69"/></operator><call><name pos:line="15" pos:column="69">getRaw<pos:position pos:line="15" pos:column="75"/></name><argument_list pos:line="15" pos:column="75">()<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></cast></expr>)<pos:position pos:line="15" pos:column="79"/></condition><then pos:line="15" pos:column="79"> <block pos:line="15" pos:column="80">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">86<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">5<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"esiSequenceAdd: tying Literals "<pos:position pos:line="16" pos:column="56"/></literal> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator>
               <name><name pos:line="17" pos:column="16">elements<pos:position pos:line="17" pos:column="24"/></name><index pos:line="17" pos:column="24">[<expr><call><name><name pos:line="17" pos:column="25">elements<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">.<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">size<pos:position pos:line="17" pos:column="38"/></name></name><argument_list pos:line="17" pos:column="38">()<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">-<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="43">1<pos:position pos:line="17" pos:column="44"/></literal></expr>]<pos:position pos:line="17" pos:column="45"/></index></name><operator pos:line="17" pos:column="45">.<pos:position pos:line="17" pos:column="46"/></operator><call><name pos:line="17" pos:column="46">getRaw<pos:position pos:line="17" pos:column="52"/></name><argument_list pos:line="17" pos:column="52">()<pos:position pos:line="17" pos:column="54"/></argument_list></call> <operator pos:line="17" pos:column="55">&lt;&lt;<pos:position pos:line="17" pos:column="63"/></operator> <literal type="string" pos:line="17" pos:column="58">" and "<pos:position pos:line="17" pos:column="65"/></literal> <operator pos:line="17" pos:column="66">&lt;&lt;<pos:position pos:line="17" pos:column="74"/></operator>
               <call><name><name pos:line="18" pos:column="16">element<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">getRaw<pos:position pos:line="18" pos:column="30"/></name></name><argument_list pos:line="18" pos:column="30">()<pos:position pos:line="18" pos:column="32"/></argument_list></call> <operator pos:line="18" pos:column="33">&lt;&lt;<pos:position pos:line="18" pos:column="41"/></operator> <literal type="string" pos:line="18" pos:column="36">" together"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">ESISegment<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">::<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">ListTransfer<pos:position pos:line="20" pos:column="33"/></name></name> <argument_list pos:line="20" pos:column="34">(<argument><expr><operator pos:line="20" pos:column="35">(<pos:position pos:line="20" pos:column="36"/></operator><operator pos:line="20" pos:column="36">(<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">esiLiteral<pos:position pos:line="20" pos:column="47"/></name> <operator pos:line="20" pos:column="48">*<pos:position pos:line="20" pos:column="49"/></operator><operator pos:line="20" pos:column="49">)<pos:position pos:line="20" pos:column="50"/></operator><call><name><name pos:line="20" pos:column="50">element<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">.<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="58">getRaw<pos:position pos:line="20" pos:column="64"/></name></name><argument_list pos:line="20" pos:column="64">()<pos:position pos:line="20" pos:column="66"/></argument_list></call><operator pos:line="20" pos:column="66">)<pos:position pos:line="20" pos:column="67"/></operator><operator pos:line="20" pos:column="67">-&gt;<pos:position pos:line="20" pos:column="72"/></operator><name pos:line="20" pos:column="69">buffer<pos:position pos:line="20" pos:column="75"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="21" pos:column="35">(<pos:position pos:line="21" pos:column="36"/></operator><operator pos:line="21" pos:column="36">(<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">esiLiteral<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">*<pos:position pos:line="21" pos:column="49"/></operator><operator pos:line="21" pos:column="49">)<pos:position pos:line="21" pos:column="50"/></operator><name><name pos:line="21" pos:column="50">elements<pos:position pos:line="21" pos:column="58"/></name><index pos:line="21" pos:column="58">[<expr><call><name><name pos:line="21" pos:column="59">elements<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">.<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="68">size<pos:position pos:line="21" pos:column="72"/></name></name><argument_list pos:line="21" pos:column="72">()<pos:position pos:line="21" pos:column="74"/></argument_list></call> <operator pos:line="21" pos:column="75">-<pos:position pos:line="21" pos:column="76"/></operator> <literal type="number" pos:line="21" pos:column="77">1<pos:position pos:line="21" pos:column="78"/></literal></expr>]<pos:position pos:line="21" pos:column="79"/></index></name><operator pos:line="21" pos:column="79">.<pos:position pos:line="21" pos:column="80"/></operator><call><name pos:line="21" pos:column="80">getRaw<pos:position pos:line="21" pos:column="86"/></name><argument_list pos:line="21" pos:column="86">()<pos:position pos:line="21" pos:column="88"/></argument_list></call><operator pos:line="21" pos:column="88">)<pos:position pos:line="21" pos:column="89"/></operator><operator pos:line="21" pos:column="89">-&gt;<pos:position pos:line="21" pos:column="94"/></operator><name pos:line="21" pos:column="91">buffer<pos:position pos:line="21" pos:column="97"/></name></expr></argument>)<pos:position pos:line="21" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="99"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><literal type="boolean" pos:line="22" pos:column="16">true<pos:position pos:line="22" pos:column="20"/></literal></expr>;<pos:position pos:line="22" pos:column="21"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">elements<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">push_back<pos:position pos:line="25" pos:column="23"/></name></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">element<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name> <argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="number" pos:line="26" pos:column="13">86<pos:position pos:line="26" pos:column="15"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="26" pos:column="16">3<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"esiSequenceAdd: Added a new element, elements = "<pos:position pos:line="26" pos:column="69"/></literal> <operator pos:line="26" pos:column="70">&lt;&lt;<pos:position pos:line="26" pos:column="78"/></operator> <call><name><name pos:line="26" pos:column="73">elements<pos:position pos:line="26" pos:column="81"/></name><operator pos:line="26" pos:column="81">.<pos:position pos:line="26" pos:column="82"/></operator><name pos:line="26" pos:column="82">size<pos:position pos:line="26" pos:column="86"/></name></name><argument_list pos:line="26" pos:column="86">()<pos:position pos:line="26" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="90"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><literal type="boolean" pos:line="27" pos:column="12">true<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

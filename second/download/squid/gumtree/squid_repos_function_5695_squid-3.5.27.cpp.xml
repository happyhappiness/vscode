<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5695_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">AcceptLimiter<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">defer<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name><name pos:line="2" pos:column="34">Comm<pos:position pos:line="2" pos:column="38"/></name><operator pos:line="2" pos:column="38">::<pos:position pos:line="2" pos:column="40"/></operator><name pos:line="2" pos:column="40">TcpAcceptor<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">::<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">Pointer<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">afd<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">++<pos:position pos:line="4" pos:column="7"/></operator> <operator pos:line="4" pos:column="8">(<pos:position pos:line="4" pos:column="9"/></operator><name><name pos:line="4" pos:column="9">afd<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">isLimited<pos:position pos:line="4" pos:column="23"/></name></name><operator pos:line="4" pos:column="23">)<pos:position pos:line="4" pos:column="24"/></operator></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">5<pos:position pos:line="5" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="15">5<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="18">afd<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">conn<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="31">" x"<pos:position pos:line="5" pos:column="35"/></literal> <operator pos:line="5" pos:column="36">&lt;&lt;<pos:position pos:line="5" pos:column="44"/></operator> <name><name pos:line="5" pos:column="39">afd<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">isLimited<pos:position pos:line="5" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">deferred_<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">push_back<pos:position pos:line="6" pos:column="24"/></name></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">afd<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

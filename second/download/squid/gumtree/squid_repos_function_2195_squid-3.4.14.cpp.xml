<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2195_squid-3.4.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">NotePairs<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">find<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">noteKey<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">sep<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">String<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">value<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">value<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">clean<pos:position pos:line="5" pos:column="16"/></name></name><argument_list pos:line="5" pos:column="16">()<pos:position pos:line="5" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name><name><name pos:line="6" pos:column="10">Vector<pos:position pos:line="6" pos:column="16"/></name><argument_list type="generic" pos:line="6" pos:column="16">&lt;<argument><expr><name><name pos:line="6" pos:column="17">NotePairs<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">::<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">Entry<pos:position pos:line="6" pos:column="33"/></name></name> <operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="39"/></argument_list></name><operator pos:line="6" pos:column="36">::<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">const_iterator<pos:position pos:line="6" pos:column="52"/></name></name></type>  <name pos:line="6" pos:column="54">i<pos:position pos:line="6" pos:column="55"/></name> <init pos:line="6" pos:column="56">= <expr><call><name><name pos:line="6" pos:column="58">entries<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">.<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="66">begin<pos:position pos:line="6" pos:column="71"/></name></name><argument_list pos:line="6" pos:column="71">()<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></init> <condition><expr><name pos:line="6" pos:column="75">i<pos:position pos:line="6" pos:column="76"/></name> <operator pos:line="6" pos:column="77">!=<pos:position pos:line="6" pos:column="79"/></operator> <call><name><name pos:line="6" pos:column="80">entries<pos:position pos:line="6" pos:column="87"/></name><operator pos:line="6" pos:column="87">.<pos:position pos:line="6" pos:column="88"/></operator><name pos:line="6" pos:column="88">end<pos:position pos:line="6" pos:column="91"/></name></name><argument_list pos:line="6" pos:column="91">()<pos:position pos:line="6" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="94"/></condition> <incr><expr><operator pos:line="6" pos:column="95">++<pos:position pos:line="6" pos:column="97"/></operator><name pos:line="6" pos:column="97">i<pos:position pos:line="6" pos:column="98"/></name></expr></incr>)<pos:position pos:line="6" pos:column="99"/></control> <block pos:line="6" pos:column="100">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">i<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">)<pos:position pos:line="7" pos:column="17"/></operator><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name><name pos:line="7" pos:column="19">name<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">cmp<pos:position pos:line="7" pos:column="27"/></name></name></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">noteKey<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call> <operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="40">0<pos:position pos:line="7" pos:column="41"/></literal></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42"> <block pos:line="7" pos:column="43">{
            <if pos:line="8" pos:column="13">if <condition pos:line="8" pos:column="16">(<expr><call><name><name pos:line="8" pos:column="17">value<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">size<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">()<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="17">value<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">append<pos:position pos:line="9" pos:column="29"/></name></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">sep<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">value<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">append<pos:position pos:line="10" pos:column="25"/></name></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name><operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><operator pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">i<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">value<pos:position pos:line="10" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></for>
    <return pos:line="13" pos:column="5">return <expr><ternary><condition><expr><call><name><name pos:line="13" pos:column="12">value<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">size<pos:position pos:line="13" pos:column="22"/></name></name><argument_list pos:line="13" pos:column="22">()<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr> ?<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <expr><call><name><name pos:line="13" pos:column="27">value<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">termedBuf<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">()<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="13" pos:column="45"/></then><else pos:line="13" pos:column="45">: <expr><name pos:line="13" pos:column="47">NULL<pos:position pos:line="13" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="52"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5746_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Negotiate<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">UserRequest<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">startHelperLookup<pos:position pos:line="2" pos:column="48"/></name></name><parameter_list pos:line="2" pos:column="48">(<parameter><decl><type><name pos:line="2" pos:column="49">HttpRequest<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="64">AccessLogEntry<pos:position pos:line="2" pos:column="78"/></name><operator pos:line="2" pos:column="78">::<pos:position pos:line="2" pos:column="80"/></operator><name pos:line="2" pos:column="80">Pointer<pos:position pos:line="2" pos:column="87"/></name></name> <modifier pos:line="2" pos:column="88">&amp;<pos:position pos:line="2" pos:column="93"/></modifier></type><name pos:line="2" pos:column="89">al<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="93">AUTHCB<pos:position pos:line="2" pos:column="99"/></name> <modifier pos:line="2" pos:column="100">*<pos:position pos:line="2" pos:column="101"/></modifier></type> <name pos:line="2" pos:column="102">handler<pos:position pos:line="2" pos:column="109"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="111">void<pos:position pos:line="2" pos:column="115"/></name> <modifier pos:line="2" pos:column="116">*<pos:position pos:line="2" pos:column="117"/></modifier></type><name pos:line="2" pos:column="117">data<pos:position pos:line="2" pos:column="121"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="122"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><name pos:line="4" pos:column="21">MAX_AUTHTOKEN_LEN<pos:position pos:line="4" pos:column="38"/></name></expr>]<pos:position pos:line="4" pos:column="39"/></index></name></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">data<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">handler<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><call><name pos:line="9" pos:column="12">user<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">()<pos:position pos:line="9" pos:column="18"/></argument_list></call> <operator pos:line="9" pos:column="19">!=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><call><name pos:line="10" pos:column="12">user<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">()<pos:position pos:line="10" pos:column="18"/></argument_list></call><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">auth_type<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">==<pos:position pos:line="10" pos:column="32"/></operator> <name><name pos:line="10" pos:column="33">Auth<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">::<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">AUTH_NEGOTIATE<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><cast type="static" pos:line="12" pos:column="9">static_cast<argument_list type="generic" pos:line="12" pos:column="20">&lt;<argument><expr><name><name pos:line="12" pos:column="21">Auth<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">::<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">Negotiate<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">::<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">Config<pos:position pos:line="12" pos:column="44"/></name></name><operator pos:line="12" pos:column="44">*<pos:position pos:line="12" pos:column="45"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="49"/></argument_list><argument_list pos:line="12" pos:column="46">(<argument><expr><call><name><name pos:line="12" pos:column="47">Auth<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">::<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">Config<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">::<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="61">Find<pos:position pos:line="12" pos:column="65"/></name></name><argument_list pos:line="12" pos:column="65">(<argument><expr><literal type="string" pos:line="12" pos:column="66">"negotiate"<pos:position pos:line="12" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></cast><operator pos:line="12" pos:column="79">-&gt;<pos:position pos:line="12" pos:column="84"/></operator><name pos:line="12" pos:column="81">authenticateProgram<pos:position pos:line="12" pos:column="100"/></name> <operator pos:line="12" pos:column="101">==<pos:position pos:line="12" pos:column="103"/></operator> <name pos:line="12" pos:column="104">NULL<pos:position pos:line="12" pos:column="108"/></name></expr>)<pos:position pos:line="12" pos:column="109"/></condition><then pos:line="12" pos:column="109"> <block pos:line="12" pos:column="110">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">29<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">DBG_CRITICAL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"ERROR: No Negotiate authentication program configured."<pos:position pos:line="13" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">handler<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">data<pos:position pos:line="14" pos:column="21"/></name></expr></argument>)<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">29<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">8<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="19">HERE<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">&lt;&lt;<pos:position pos:line="18" pos:column="32"/></operator> <literal type="string" pos:line="18" pos:column="27">"credentials state is '"<pos:position pos:line="18" pos:column="51"/></literal> <operator pos:line="18" pos:column="52">&lt;&lt;<pos:position pos:line="18" pos:column="60"/></operator> <call><name pos:line="18" pos:column="55">user<pos:position pos:line="18" pos:column="59"/></name><argument_list pos:line="18" pos:column="59">()<pos:position pos:line="18" pos:column="61"/></argument_list></call><operator pos:line="18" pos:column="61">-&gt;<pos:position pos:line="18" pos:column="66"/></operator><call><name pos:line="18" pos:column="63">credentials<pos:position pos:line="18" pos:column="74"/></name><argument_list pos:line="18" pos:column="74">()<pos:position pos:line="18" pos:column="76"/></argument_list></call> <operator pos:line="18" pos:column="77">&lt;&lt;<pos:position pos:line="18" pos:column="85"/></operator> <literal type="string" pos:line="18" pos:column="80">"'"<pos:position pos:line="18" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="85"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">char<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></modifier></type><name pos:line="20" pos:column="17">keyExtras<pos:position pos:line="20" pos:column="26"/></name> <init pos:line="20" pos:column="27">= <expr><call><name pos:line="20" pos:column="29">helperRequestKeyExtras<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name pos:line="20" pos:column="52">request<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">al<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">printResult<pos:position pos:line="21" pos:column="20"/></name> <init pos:line="21" pos:column="21">= <expr><literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">user<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">()<pos:position pos:line="22" pos:column="15"/></argument_list></call><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><call><name pos:line="22" pos:column="17">credentials<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">()<pos:position pos:line="22" pos:column="30"/></argument_list></call> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name><name pos:line="22" pos:column="34">Auth<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">::<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">Pending<pos:position pos:line="22" pos:column="47"/></name></name></expr>)<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48"> <block pos:line="22" pos:column="49">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">keyExtras<pos:position pos:line="23" pos:column="22"/></name></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="13">printResult<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">snprintf<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">buf<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="41">sizeof<argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">buf<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="54">"YR %s %s\n"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="68">client_blob<pos:position pos:line="24" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="81">keyExtras<pos:position pos:line="24" pos:column="90"/></name></expr></argument>)<pos:position pos:line="24" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="92"/></expr_stmt></block></then>
        <else pos:line="25" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="13">printResult<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <call><name pos:line="26" pos:column="27">snprintf<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">buf<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="41">sizeof<argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">buf<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="54">"YR %s\n"<pos:position pos:line="26" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="65">client_blob<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt></block></else></if> <comment type="line" pos:line="26" pos:column="79">//CHECKME: can ever client_blob be 0 here?</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">keyExtras<pos:position pos:line="28" pos:column="22"/></name></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">printResult<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <call><name pos:line="29" pos:column="27">snprintf<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">buf<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="41">sizeof<argument_list pos:line="29" pos:column="47">(<argument><expr><name pos:line="29" pos:column="48">buf<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="54">"KK %s %s\n"<pos:position pos:line="29" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="68">client_blob<pos:position pos:line="29" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="81">keyExtras<pos:position pos:line="29" pos:column="90"/></name></expr></argument>)<pos:position pos:line="29" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="92"/></expr_stmt></block></then>
        <else pos:line="30" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">printResult<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <call><name pos:line="31" pos:column="27">snprintf<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">buf<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="41">sizeof<argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">buf<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="54">"KK %s\n"<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="65">client_blob<pos:position pos:line="31" pos:column="76"/></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">printResult<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&lt;<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal> <operator pos:line="34" pos:column="25">||<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">printResult<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">&gt;=<pos:position pos:line="34" pos:column="45"/></operator> <operator pos:line="34" pos:column="43">(<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="44">int<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">)<pos:position pos:line="34" pos:column="48"/></operator><sizeof pos:line="34" pos:column="48">sizeof<argument_list pos:line="34" pos:column="54">(<argument><expr><name pos:line="34" pos:column="55">buf<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></sizeof></expr>)<pos:position pos:line="34" pos:column="60"/></condition><then pos:line="34" pos:column="60"> <block pos:line="34" pos:column="61">{
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">printResult<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">&lt;<pos:position pos:line="35" pos:column="29"/></operator> <literal type="number" pos:line="35" pos:column="27">0<pos:position pos:line="35" pos:column="28"/></literal></expr>)<pos:position pos:line="35" pos:column="29"/></condition><then pos:line="35" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="13">debugs<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="number" pos:line="36" pos:column="20">29<pos:position pos:line="36" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="24">DBG_CRITICAL<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"ERROR: Can not build negotiate authentication helper request"<pos:position pos:line="36" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="102"/></expr_stmt></block></then>
        <else pos:line="37" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">29<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="24">DBG_CRITICAL<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="38">"ERROR: Negotiate authentication helper request too big for the "<pos:position pos:line="38" pos:column="103"/></literal> <operator pos:line="38" pos:column="104">&lt;&lt;<pos:position pos:line="38" pos:column="112"/></operator> <sizeof pos:line="38" pos:column="107">sizeof<argument_list pos:line="38" pos:column="113">(<argument><expr><name pos:line="38" pos:column="114">buf<pos:position pos:line="38" pos:column="117"/></name></expr></argument>)<pos:position pos:line="38" pos:column="118"/></argument_list></sizeof> <operator pos:line="38" pos:column="119">&lt;&lt;<pos:position pos:line="38" pos:column="127"/></operator> <literal type="string" pos:line="38" pos:column="122">"-byte buffer"<pos:position pos:line="38" pos:column="136"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="138"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">handler<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">data<pos:position pos:line="39" pos:column="21"/></name></expr></argument>)<pos:position pos:line="39" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
        <return pos:line="40" pos:column="9">return;<pos:position pos:line="40" pos:column="16"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">waiting<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <literal type="number" pos:line="43" pos:column="15">1<pos:position pos:line="43" pos:column="16"/></literal></expr>;<pos:position pos:line="43" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">safe_free<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">client_blob<pos:position pos:line="45" pos:column="26"/></name></expr></argument>)<pos:position pos:line="45" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">helperStatefulSubmit<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">negotiateauthenticators<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">buf<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="56">Auth<pos:position pos:line="47" pos:column="60"/></name><operator pos:line="47" pos:column="60">::<pos:position pos:line="47" pos:column="62"/></operator><name pos:line="47" pos:column="62">Negotiate<pos:position pos:line="47" pos:column="71"/></name><operator pos:line="47" pos:column="71">::<pos:position pos:line="47" pos:column="73"/></operator><name pos:line="47" pos:column="73">UserRequest<pos:position pos:line="47" pos:column="84"/></name><operator pos:line="47" pos:column="84">::<pos:position pos:line="47" pos:column="86"/></operator><name pos:line="47" pos:column="86">HandleReply<pos:position pos:line="47" pos:column="97"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="48" pos:column="26">new<pos:position pos:line="48" pos:column="29"/></operator> <call><name><name pos:line="48" pos:column="30">Auth<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">::<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">StateData<pos:position pos:line="48" pos:column="45"/></name></name><argument_list pos:line="48" pos:column="45">(<argument><expr><name pos:line="48" pos:column="46">this<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">handler<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">data<pos:position pos:line="48" pos:column="65"/></name></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="68">authserver<pos:position pos:line="48" pos:column="78"/></name></expr></argument>)<pos:position pos:line="48" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="80"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

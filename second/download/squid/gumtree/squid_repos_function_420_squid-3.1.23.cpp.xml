<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_420_squid-3.1.23.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">_SQUID_SOLARIS_<pos:position pos:line="2" pos:column="20"/></name></expr></cpp:if>
<name pos:line="3" pos:column="1">password_conversation<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">int<pos:position pos:line="3" pos:column="26"/></name> <name pos:line="3" pos:column="27">num_msg<pos:position pos:line="3" pos:column="34"/></name></expr></argument>, <argument><expr pos:line="3" pos:column="36">struct <name pos:line="3" pos:column="43">pam_message<pos:position pos:line="3" pos:column="54"/></name> <operator pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></operator><operator pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="57">msg<pos:position pos:line="3" pos:column="60"/></name></expr></argument>, <argument><expr pos:line="3" pos:column="62">struct <name pos:line="3" pos:column="69">pam_response<pos:position pos:line="3" pos:column="81"/></name> <operator pos:line="3" pos:column="82">*<pos:position pos:line="3" pos:column="83"/></operator><operator pos:line="3" pos:column="83">*<pos:position pos:line="3" pos:column="84"/></operator><name pos:line="3" pos:column="84">resp<pos:position pos:line="3" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="90">void<pos:position pos:line="3" pos:column="94"/></name> <operator pos:line="3" pos:column="95">*<pos:position pos:line="3" pos:column="96"/></operator><name pos:line="3" pos:column="96">appdata_ptr<pos:position pos:line="3" pos:column="107"/></name></expr></argument>)<pos:position pos:line="3" pos:column="108"/></argument_list>
<cpp:else pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">else<pos:position pos:line="4" pos:column="6"/></cpp:directive></cpp:else>
<name pos:line="5" pos:column="1">password_conversation<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">int<pos:position pos:line="5" pos:column="26"/></name> <name pos:line="5" pos:column="27">num_msg<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><specifier pos:line="5" pos:column="36">const<pos:position pos:line="5" pos:column="41"/></specifier> struct <name pos:line="5" pos:column="49">pam_message<pos:position pos:line="5" pos:column="60"/></name> <operator pos:line="5" pos:column="61">*<pos:position pos:line="5" pos:column="62"/></operator><operator pos:line="5" pos:column="62">*<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="63">msg<pos:position pos:line="5" pos:column="66"/></name></expr></argument>, <argument><expr pos:line="5" pos:column="68">struct <name pos:line="5" pos:column="75">pam_response<pos:position pos:line="5" pos:column="87"/></name> <operator pos:line="5" pos:column="88">*<pos:position pos:line="5" pos:column="89"/></operator><operator pos:line="5" pos:column="89">*<pos:position pos:line="5" pos:column="90"/></operator><name pos:line="5" pos:column="90">resp<pos:position pos:line="5" pos:column="94"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="96">void<pos:position pos:line="5" pos:column="100"/></name> <operator pos:line="5" pos:column="101">*<pos:position pos:line="5" pos:column="102"/></operator><name pos:line="5" pos:column="102">appdata_ptr<pos:position pos:line="5" pos:column="113"/></name></expr></argument>)<pos:position pos:line="5" pos:column="114"/></argument_list>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
<argument_list pos:line="7" pos:column="1">{
    if <argument><expr><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">num_msg<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">!=<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="20">1<pos:position pos:line="8" pos:column="21"/></literal> <operator pos:line="8" pos:column="22">||<pos:position pos:line="8" pos:column="24"/></operator> <name><name pos:line="8" pos:column="25">msg<pos:position pos:line="8" pos:column="28"/></name><index pos:line="8" pos:column="28">[<expr><literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr>]<pos:position pos:line="8" pos:column="31"/></index></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">msg_style<pos:position pos:line="8" pos:column="42"/></name> <operator pos:line="8" pos:column="43">!=<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="46">PAM_PROMPT_ECHO_OFF<pos:position pos:line="8" pos:column="65"/></name><operator pos:line="8" pos:column="65">)<pos:position pos:line="8" pos:column="66"/></operator> <block pos:line="8" pos:column="67">{
        <expr><call><name pos:line="9" pos:column="9">fprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">stderr<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">"ERROR: Unexpected PAM converstaion '%d/%s'\n"<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="73">msg<pos:position pos:line="9" pos:column="76"/></name><index pos:line="9" pos:column="76">[<expr><literal type="number" pos:line="9" pos:column="77">0<pos:position pos:line="9" pos:column="78"/></literal></expr>]<pos:position pos:line="9" pos:column="79"/></index></name><operator pos:line="9" pos:column="79">-&gt;<pos:position pos:line="9" pos:column="84"/></operator><name pos:line="9" pos:column="81">msg_style<pos:position pos:line="9" pos:column="90"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="92">msg<pos:position pos:line="9" pos:column="95"/></name><index pos:line="9" pos:column="95">[<expr><literal type="number" pos:line="9" pos:column="96">0<pos:position pos:line="9" pos:column="97"/></literal></expr>]<pos:position pos:line="9" pos:column="98"/></index></name><operator pos:line="9" pos:column="98">-&gt;<pos:position pos:line="9" pos:column="103"/></operator><name pos:line="9" pos:column="100">msg<pos:position pos:line="9" pos:column="103"/></name></expr></argument>)<pos:position pos:line="9" pos:column="104"/></argument_list></call></expr>;
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">PAM_CONV_ERR<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></expr></argument>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">_SQUID_SOLARIS_<pos:position pos:line="12" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">appdata_ptr<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22"> <expr_stmt><expr><block pos:line="13" pos:column="23">{
        <comment type="block" pos:line="14" pos:column="9">/* Workaround for Solaris 2.6 where the PAM library is broken
         * and does not pass appdata_ptr to the conversation routine
         */</comment>
        <expr><name pos:line="17" pos:column="9">appdata_ptr<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">password<pos:position pos:line="17" pos:column="31"/></name></expr>;
    }<pos:position pos:line="18" pos:column="6"/></block></expr></expr_stmt></then></if></argument_list></decl></decl_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">appdata_ptr<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">fprintf<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">stderr<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="25">"ERROR: No password available to password_converstation!\n"<pos:position pos:line="21" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="86"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">PAM_CONV_ERR<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">resp<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator>struct <name pos:line="24" pos:column="21">pam_response<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></operator><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator><operator pos:line="24" pos:column="36">(<pos:position pos:line="24" pos:column="37"/></operator><call><name pos:line="24" pos:column="37">calloc<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">num_msg<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="53">sizeof<argument_list pos:line="24" pos:column="59">(<argument><expr pos:line="24" pos:column="60">struct <name pos:line="24" pos:column="67">pam_response<pos:position pos:line="24" pos:column="79"/></name></expr></argument>)<pos:position pos:line="24" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="81"/></argument_list></call><operator pos:line="24" pos:column="81">)<pos:position pos:line="24" pos:column="82"/></operator></expr>;<pos:position pos:line="24" pos:column="83"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">resp<pos:position pos:line="25" pos:column="15"/></name></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16"> <block pos:line="25" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">fprintf<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">stderr<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"ERROR: Out of memory!\n"<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">PAM_CONV_ERR<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="29" pos:column="5">(<pos:position pos:line="29" pos:column="6"/></operator><operator pos:line="29" pos:column="6">*<pos:position pos:line="29" pos:column="7"/></operator><name pos:line="29" pos:column="7">resp<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">)<pos:position pos:line="29" pos:column="12"/></operator><index pos:line="29" pos:column="12">[<expr><literal type="number" pos:line="29" pos:column="13">0<pos:position pos:line="29" pos:column="14"/></literal></expr>]<pos:position pos:line="29" pos:column="15"/></index><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">resp<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">strdup<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><operator pos:line="29" pos:column="30">(<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">char<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">*<pos:position pos:line="29" pos:column="37"/></operator><operator pos:line="29" pos:column="37">)<pos:position pos:line="29" pos:column="38"/></operator> <name pos:line="29" pos:column="39">appdata_ptr<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">(<pos:position pos:line="30" pos:column="6"/></operator><operator pos:line="30" pos:column="6">*<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">resp<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">)<pos:position pos:line="30" pos:column="12"/></operator><index pos:line="30" pos:column="12">[<expr><literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal></expr>]<pos:position pos:line="30" pos:column="15"/></index><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">resp_retcode<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="31">0<pos:position pos:line="30" pos:column="32"/></literal></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><ternary><condition><expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><operator pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">resp<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">)<pos:position pos:line="32" pos:column="20"/></operator><index pos:line="32" pos:column="20">[<expr><literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal></expr>]<pos:position pos:line="32" pos:column="23"/></index><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">resp<pos:position pos:line="32" pos:column="28"/></name></expr> ?<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30"> <expr><name pos:line="32" pos:column="31">PAM_SUCCESS<pos:position pos:line="32" pos:column="42"/></name></expr> <pos:position pos:line="32" pos:column="43"/></then><else pos:line="32" pos:column="43">: <expr><name pos:line="32" pos:column="45">PAM_CONV_ERR<pos:position pos:line="32" pos:column="57"/></name></expr></else></ternary><operator pos:line="32" pos:column="57">)<pos:position pos:line="32" pos:column="58"/></operator></expr>;<pos:position pos:line="32" pos:column="59"/></return>
}</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2707_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">init<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">()<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int64_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">entryLimit<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><call><name pos:line="4" pos:column="32">EntryLimit<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">entryLimit<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&lt;=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="6" pos:column="17">// no memory cache configured or a misconfiguration</comment>

    <comment type="line" pos:line="8" pos:column="5">// check compatibility with the disk cache, if any</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">Config<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">cacheSwap<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">.<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">n_configured<pos:position pos:line="9" pos:column="38"/></name></name> <operator pos:line="9" pos:column="39">&gt;<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="41">0<pos:position pos:line="9" pos:column="42"/></literal></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">int64_t<pos:position pos:line="10" pos:column="22"/></name></type> <name pos:line="10" pos:column="23">diskMaxSize<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><call><name><name pos:line="10" pos:column="37">Store<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">::<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">Root<pos:position pos:line="10" pos:column="48"/></name></name><argument_list pos:line="10" pos:column="48">()<pos:position pos:line="10" pos:column="50"/></argument_list></call><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><call><name pos:line="10" pos:column="51">maxObjectSize<pos:position pos:line="10" pos:column="64"/></name><argument_list pos:line="10" pos:column="64">()<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">int64_t<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">memMaxSize<pos:position pos:line="11" pos:column="33"/></name> <init pos:line="11" pos:column="34">= <expr><call><name pos:line="11" pos:column="36">maxObjectSize<pos:position pos:line="11" pos:column="49"/></name><argument_list pos:line="11" pos:column="49">()<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">diskMaxSize<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <operator pos:line="12" pos:column="28">-<pos:position pos:line="12" pos:column="29"/></operator><literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">20<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">DBG_IMPORTANT<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="39">"WARNING: disk-cache maximum object size "<pos:position pos:line="13" pos:column="81"/></literal>
                   <literal type="string" pos:line="14" pos:column="20">"is unlimited but mem-cache maximum object size is "<pos:position pos:line="14" pos:column="72"/></literal> <operator pos:line="14" pos:column="73">&lt;&lt;<pos:position pos:line="14" pos:column="81"/></operator>
                   <name pos:line="15" pos:column="20">memMaxSize<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">/<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">1024.0<pos:position pos:line="15" pos:column="39"/></literal> <operator pos:line="15" pos:column="40">&lt;&lt;<pos:position pos:line="15" pos:column="48"/></operator> <literal type="string" pos:line="15" pos:column="43">" KB"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><name pos:line="16" pos:column="20">diskMaxSize<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">&gt;<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="34">memMaxSize<pos:position pos:line="16" pos:column="44"/></name></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">debugs<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="number" pos:line="17" pos:column="20">20<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">DBG_IMPORTANT<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="39">"WARNING: disk-cache maximum object size "<pos:position pos:line="17" pos:column="81"/></literal>
                   <literal type="string" pos:line="18" pos:column="20">"is too large for mem-cache: "<pos:position pos:line="18" pos:column="50"/></literal> <operator pos:line="18" pos:column="51">&lt;&lt;<pos:position pos:line="18" pos:column="59"/></operator>
                   <name pos:line="19" pos:column="20">diskMaxSize<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">/<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="34">1024.0<pos:position pos:line="19" pos:column="40"/></literal> <operator pos:line="19" pos:column="41">&lt;&lt;<pos:position pos:line="19" pos:column="49"/></operator> <literal type="string" pos:line="19" pos:column="44">" KB &gt; "<pos:position pos:line="19" pos:column="55"/></literal> <operator pos:line="19" pos:column="53">&lt;&lt;<pos:position pos:line="19" pos:column="61"/></operator>
                   <name pos:line="20" pos:column="20">memMaxSize<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">/<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="33">1024.0<pos:position pos:line="20" pos:column="39"/></literal> <operator pos:line="20" pos:column="40">&lt;&lt;<pos:position pos:line="20" pos:column="48"/></operator> <literal type="string" pos:line="20" pos:column="43">" KB"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">freeSlots<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><call><name pos:line="24" pos:column="17">shm_old<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">Ipc<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">::<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">Mem<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">::<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">PageStack<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">SpaceLabel<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">extras<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><call><name pos:line="25" pos:column="14">shm_old<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">Extras<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">ExtrasLabel<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">Must<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><operator pos:line="27" pos:column="10">!<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">map<pos:position pos:line="27" pos:column="14"/></name></expr></argument>)<pos:position pos:line="27" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">map<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <operator pos:line="28" pos:column="11">new<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">MemStoreMap<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">MapLabel<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">map<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">-&gt;<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="10">cleaner<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">this<pos:position pos:line="29" pos:column="24"/></name></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

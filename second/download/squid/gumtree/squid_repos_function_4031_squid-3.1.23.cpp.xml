<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4031_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">noteAdaptationAnswer<pos:position pos:line="1" pos:column="56"/></name></name><parameter_list pos:line="1" pos:column="56">(<parameter><decl><type><name pos:line="1" pos:column="57">HttpMsg<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">msg<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name pos:line="3" pos:column="10">initiated<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">theOptionsFetcher<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">clearAdaptation<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">theOptionsFetcher<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">msg<pos:position pos:line="6" pos:column="13"/></name></expr></argument>)<pos:position pos:line="6" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">93<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="15">5<pos:position pos:line="8" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="18">HERE<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;&lt;<pos:position pos:line="8" pos:column="31"/></operator> <literal type="string" pos:line="8" pos:column="26">"is interpreting new options "<pos:position pos:line="8" pos:column="56"/></literal> <operator pos:line="8" pos:column="57">&lt;&lt;<pos:position pos:line="8" pos:column="65"/></operator> <call><name pos:line="8" pos:column="60">status<pos:position pos:line="8" pos:column="66"/></name><argument_list pos:line="8" pos:column="66">()<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Adaptation<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">::<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">Icap<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">::<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">Options<pos:position pos:line="10" pos:column="30"/></name></name> <modifier pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></modifier></type><name pos:line="10" pos:column="32">newOptions<pos:position pos:line="10" pos:column="42"/></name> <init pos:line="10" pos:column="43">= <expr><name pos:line="10" pos:column="45">NULL<pos:position pos:line="10" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<decl><type><name pos:line="11" pos:column="9">HttpReply<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">r<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><cast type="dynamic" pos:line="11" pos:column="24">dynamic_cast<argument_list type="generic" pos:line="11" pos:column="36">&lt;<argument><expr><name pos:line="11" pos:column="37">HttpReply<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">*<pos:position pos:line="11" pos:column="47"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="51"/></argument_list><argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">msg<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54"> <block pos:line="11" pos:column="55">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">newOptions<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">new<pos:position pos:line="12" pos:column="25"/></operator> <name><name pos:line="12" pos:column="26">Adaptation<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">::<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">Icap<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">::<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">Options<pos:position pos:line="12" pos:column="51"/></name></name></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">newOptions<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">configure<pos:position pos:line="13" pos:column="30"/></name></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">r<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">93<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="22">"ICAP service got wrong options message "<pos:position pos:line="15" pos:column="63"/></literal> <operator pos:line="15" pos:column="64">&lt;&lt;<pos:position pos:line="15" pos:column="72"/></operator> <call><name pos:line="15" pos:column="67">status<pos:position pos:line="15" pos:column="73"/></name><argument_list pos:line="15" pos:column="73">()<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">handleNewOptions<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">newOptions<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

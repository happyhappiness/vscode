<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_174_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Debug<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Finish<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">()<pos:position pos:line="2" pos:column="16"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">Current<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">_db_print<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><literal type="string" pos:line="5" pos:column="19">"%s\n"<pos:position pos:line="5" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="27">Current<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">buf<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">str<pos:position pos:line="5" pos:column="43"/></name></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><call><name pos:line="5" pos:column="46">c_str<pos:position pos:line="5" pos:column="51"/></name><argument_list pos:line="5" pos:column="51">()<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="6" pos:column="9">delete<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">Current<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">Current<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="null" pos:line="7" pos:column="19">nullptr<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

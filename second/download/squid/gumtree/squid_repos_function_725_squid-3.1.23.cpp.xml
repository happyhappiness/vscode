<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_725_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SERVICE_TABLE_ENTRY<pos:position pos:line="3" pos:column="24"/></name></type> <name><name pos:line="3" pos:column="25">DispatchTable<pos:position pos:line="3" pos:column="38"/></name><index pos:line="3" pos:column="38">[]<pos:position pos:line="3" pos:column="40"/></index></name> <init pos:line="3" pos:column="41">= <expr><block pos:line="3" pos:column="43">{
        <expr><block pos:line="4" pos:column="9">{<expr><name pos:line="4" pos:column="10">NULL<pos:position pos:line="4" pos:column="14"/></name></expr>, <expr><name pos:line="4" pos:column="16">SquidWinSvcMain<pos:position pos:line="4" pos:column="31"/></name></expr>}<pos:position pos:line="4" pos:column="32"/></block></expr>,
        <expr><block pos:line="5" pos:column="9">{<expr><name pos:line="5" pos:column="10">NULL<pos:position pos:line="5" pos:column="14"/></name></expr>, <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>}<pos:position pos:line="5" pos:column="21"/></block></expr>
    }<pos:position pos:line="6" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="7"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">c<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">stderr_path<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">256<pos:position pos:line="8" pos:column="25"/></literal></expr>]<pos:position pos:line="8" pos:column="26"/></index></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">argc<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">==<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">2<pos:position pos:line="10" pos:column="19"/></literal><operator pos:line="10" pos:column="19">)<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <call><name pos:line="10" pos:column="24">strstr<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name><name pos:line="10" pos:column="31">argv<pos:position pos:line="10" pos:column="35"/></name><index pos:line="10" pos:column="35">[<expr><literal type="number" pos:line="10" pos:column="36">1<pos:position pos:line="10" pos:column="37"/></literal></expr>]<pos:position pos:line="10" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">_WIN_SQUID_SERVICE_OPTION<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="67"/></condition><then pos:line="10" pos:column="67"> <block pos:line="10" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">strcpy<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">stderr_path<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="29">argv<pos:position pos:line="11" pos:column="33"/></name><index pos:line="11" pos:column="33">[<expr><literal type="number" pos:line="11" pos:column="34">0<pos:position pos:line="11" pos:column="35"/></literal></expr>]<pos:position pos:line="11" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">strcat<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">stderr_path<pos:position pos:line="12" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="28">".log"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">freopen<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">stderr_path<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"w"<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">stderr<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">setmode<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><call><name pos:line="14" pos:column="17">fileno<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">stderr<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">O_TEXT<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">WIN32_run_mode<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">_WIN_SQUID_RUN_MODE_SERVICE<pos:position pos:line="15" pos:column="53"/></name></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">c<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator><call><name pos:line="17" pos:column="17">strchr<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">argv<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><literal type="number" pos:line="17" pos:column="29">1<pos:position pos:line="17" pos:column="30"/></literal></expr>]<pos:position pos:line="17" pos:column="31"/></index></name></expr></argument>,<argument><expr><literal type="char" pos:line="17" pos:column="32">':'<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38"> <block pos:line="17" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">fprintf<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">stderr<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"Bad Service Parameter: %s\n"<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="60">argv<pos:position pos:line="18" pos:column="64"/></name><index pos:line="18" pos:column="64">[<expr><literal type="number" pos:line="18" pos:column="65">1<pos:position pos:line="18" pos:column="66"/></literal></expr>]<pos:position pos:line="18" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="22" pos:column="9">WIN32_Service_name<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">xstrdup<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">c<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">+<pos:position pos:line="22" pos:column="40"/></operator><literal type="number" pos:line="22" pos:column="40">1<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">DispatchTable<pos:position pos:line="23" pos:column="22"/></name><index pos:line="23" pos:column="22">[<expr><literal type="number" pos:line="23" pos:column="23">0<pos:position pos:line="23" pos:column="24"/></literal></expr>]<pos:position pos:line="23" pos:column="25"/></index></name><operator pos:line="23" pos:column="25">.<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">lpServiceName<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">WIN32_Service_name<pos:position pos:line="23" pos:column="58"/></name></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">strcat<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">REGKEY<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">WIN32_Service_name<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">keys<pos:position pos:line="25" pos:column="13"/></name><index pos:line="25" pos:column="13">[<expr><literal type="number" pos:line="25" pos:column="14">4<pos:position pos:line="25" pos:column="15"/></literal></expr>]<pos:position pos:line="25" pos:column="16"/></index></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">WIN32_Service_name<pos:position pos:line="25" pos:column="37"/></name></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">StartServiceCtrlDispatcher<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">DispatchTable<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="56"/></condition><then pos:line="27" pos:column="56"> <block pos:line="27" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">fprintf<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">stderr<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"StartServiceCtrlDispatcher error = %ld\n"<pos:position pos:line="28" pos:column="71"/></literal></expr></argument>,
                    <argument><expr><call><name pos:line="29" pos:column="21">GetLastError<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">()<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><literal type="number" pos:line="30" pos:column="20">1<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then> <else pos:line="32" pos:column="7">else <block pos:line="32" pos:column="12">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">WIN32_run_mode<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">_WIN_SQUID_RUN_MODE_INTERACTIVE<pos:position pos:line="33" pos:column="57"/></name></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">_SQUID_MSWIN_<pos:position pos:line="34" pos:column="21"/></name></cpp:ifdef>

        <expr_stmt><expr><name pos:line="36" pos:column="9">opt_no_daemon<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <literal type="number" pos:line="36" pos:column="25">1<pos:position pos:line="36" pos:column="26"/></literal></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>

        <return pos:line="40" pos:column="9">return <expr><call><name pos:line="40" pos:column="16">SquidMain<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">argc<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">argv<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>

    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">0<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

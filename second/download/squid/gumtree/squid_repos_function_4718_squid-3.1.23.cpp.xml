<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4718_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">StoreIOState<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">UFSStrategy<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">create<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">SwapDir<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">SD<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">StoreEntry<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">e<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="51">StoreIOState<pos:position pos:line="2" pos:column="63"/></name><operator pos:line="2" pos:column="63">::<pos:position pos:line="2" pos:column="65"/></operator><name pos:line="2" pos:column="65">STFNCB<pos:position pos:line="2" pos:column="71"/></name></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type> <name pos:line="2" pos:column="74">file_callback<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>,
                    <parameter><decl><type><name><name pos:line="3" pos:column="21">StoreIOState<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">::<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="35">STIOCB<pos:position pos:line="3" pos:column="41"/></name></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type> <name pos:line="3" pos:column="44">aCallback<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">void<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">callback_data<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="75"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><operator pos:line="5" pos:column="14">(<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">UFSSwapDir<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator><operator pos:line="5" pos:column="27">)<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">SD<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">)<pos:position pos:line="5" pos:column="31"/></operator><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">IO<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">==<pos:position pos:line="5" pos:column="38"/></operator> <name pos:line="5" pos:column="39">this<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* Allocate a number */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">sfileno<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">filn<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">UFSSwapDir<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">SD<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><call><name pos:line="7" pos:column="40">mapBitAllocate<pos:position pos:line="7" pos:column="54"/></name><argument_list pos:line="7" pos:column="54">()<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">79<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">3<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="19">"UFSStrategy::create: fileno "<pos:position pos:line="8" pos:column="49"/></literal><operator pos:line="8" pos:column="49">&lt;&lt;<pos:position pos:line="8" pos:column="57"/></operator> <call><name><name pos:line="8" pos:column="52">std<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">::<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">setfill<pos:position pos:line="8" pos:column="64"/></name></name><argument_list pos:line="8" pos:column="64">(<argument><expr><literal type="char" pos:line="8" pos:column="65">'0'<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call> <operator pos:line="8" pos:column="70">&lt;&lt;<pos:position pos:line="8" pos:column="78"/></operator> <name><name pos:line="8" pos:column="73">std<pos:position pos:line="8" pos:column="76"/></name><operator pos:line="8" pos:column="76">::<pos:position pos:line="8" pos:column="78"/></operator><name pos:line="8" pos:column="78">hex<pos:position pos:line="8" pos:column="81"/></name></name> <operator pos:line="8" pos:column="82">&lt;&lt;<pos:position pos:line="8" pos:column="90"/></operator> <name><name pos:line="8" pos:column="85">std<pos:position pos:line="8" pos:column="88"/></name><operator pos:line="8" pos:column="88">::<pos:position pos:line="8" pos:column="90"/></operator><name pos:line="8" pos:column="90">uppercase<pos:position pos:line="8" pos:column="99"/></name></name> <operator pos:line="8" pos:column="100">&lt;&lt;<pos:position pos:line="8" pos:column="108"/></operator> <call><name><name pos:line="8" pos:column="103">std<pos:position pos:line="8" pos:column="106"/></name><operator pos:line="8" pos:column="106">::<pos:position pos:line="8" pos:column="108"/></operator><name pos:line="8" pos:column="108">setw<pos:position pos:line="8" pos:column="112"/></name></name><argument_list pos:line="8" pos:column="112">(<argument><expr><literal type="number" pos:line="8" pos:column="113">8<pos:position pos:line="8" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="115"/></argument_list></call> <operator pos:line="8" pos:column="116">&lt;&lt;<pos:position pos:line="8" pos:column="124"/></operator> <name pos:line="8" pos:column="119">filn<pos:position pos:line="8" pos:column="123"/></name></expr></argument>)<pos:position pos:line="8" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="125"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Shouldn't we handle a 'bitmap full' error here? */</comment>

    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">StoreIOState<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">::<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">Pointer<pos:position pos:line="12" pos:column="26"/></name></name></type> <name pos:line="12" pos:column="27">sio<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><call><name pos:line="12" pos:column="33">createState<pos:position pos:line="12" pos:column="44"/></name> <argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">SD<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">e<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">aCallback<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="64">callback_data<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="79"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">sio<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">mode<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">|=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">O_WRONLY<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">|<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">O_CREAT<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">|<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="39">O_TRUNC<pos:position pos:line="14" pos:column="46"/></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">sio<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">swap_filen<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">filn<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">UFSStoreState<pos:position pos:line="18" pos:column="18"/></name> <modifier pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></modifier></type><name pos:line="18" pos:column="20">state<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><cast type="dynamic" pos:line="18" pos:column="28">dynamic_cast <argument_list type="generic" pos:line="18" pos:column="41">&lt;<argument><expr><name pos:line="18" pos:column="42">UFSStoreState<pos:position pos:line="18" pos:column="55"/></name> <operator pos:line="18" pos:column="56">*<pos:position pos:line="18" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="18" pos:column="61"/></argument_list><argument_list pos:line="18" pos:column="58">(<argument><expr><call><name><name pos:line="18" pos:column="59">sio<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">.<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="63">getRaw<pos:position pos:line="18" pos:column="69"/></name></name><argument_list pos:line="18" pos:column="69">()<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="18" pos:column="73"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">state<pos:position pos:line="20" pos:column="18"/></name></expr></argument>)<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier></type><name pos:line="22" pos:column="11">path<pos:position pos:line="22" pos:column="15"/></name> <init pos:line="22" pos:column="16">= <expr><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">UFSSwapDir<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></operator><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">SD<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><call><name pos:line="22" pos:column="38">fullPath<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">filn<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">NULL<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="59"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">DiskFile<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">::<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">Pointer<pos:position pos:line="24" pos:column="22"/></name></name></type> <name pos:line="24" pos:column="23">myFile<pos:position pos:line="24" pos:column="29"/></name> <init pos:line="24" pos:column="30">= <expr><call><name pos:line="24" pos:column="32">newFile<pos:position pos:line="24" pos:column="39"/></name> <argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">path<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="47"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name><name pos:line="26" pos:column="9">myFile<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">.<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">getRaw<pos:position pos:line="26" pos:column="22"/></name></name><argument_list pos:line="26" pos:column="22">()<pos:position pos:line="26" pos:column="24"/></argument_list></call> <operator pos:line="26" pos:column="25">==<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">NULL<pos:position pos:line="26" pos:column="32"/></name></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33"> <block pos:line="26" pos:column="34">{
        <expr_stmt><expr><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><operator pos:line="27" pos:column="10">(<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">UFSSwapDir<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></operator><operator pos:line="27" pos:column="23">)<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">SD<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><call><name pos:line="27" pos:column="29">mapBitReset<pos:position pos:line="27" pos:column="40"/></name> <argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">filn<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">NULL<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">state<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">theFile<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">myFile<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">state<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">creating<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="boolean" pos:line="33" pos:column="23">true<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">myFile<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">create<pos:position pos:line="35" pos:column="19"/></name></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">state<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">mode<pos:position pos:line="35" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="34">0644<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">state<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name><name pos:line="37" pos:column="9">myFile<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">error<pos:position pos:line="37" pos:column="22"/></name></name><argument_list pos:line="37" pos:column="22">()<pos:position pos:line="37" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25"> <block pos:line="37" pos:column="26">{
        <expr_stmt><expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">UFSSwapDir<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">*<pos:position pos:line="38" pos:column="23"/></operator><operator pos:line="38" pos:column="23">)<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">SD<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">)<pos:position pos:line="38" pos:column="27"/></operator><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><call><name pos:line="38" pos:column="29">mapBitReset<pos:position pos:line="38" pos:column="40"/></name> <argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">filn<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">NULL<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* now insert into the replacement policy */</comment>
    <expr_stmt><expr><operator pos:line="43" pos:column="5">(<pos:position pos:line="43" pos:column="6"/></operator><operator pos:line="43" pos:column="6">(<pos:position pos:line="43" pos:column="7"/></operator><name pos:line="43" pos:column="7">UFSSwapDir<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">*<pos:position pos:line="43" pos:column="19"/></operator><operator pos:line="43" pos:column="19">)<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">SD<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">)<pos:position pos:line="43" pos:column="23"/></operator><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><call><name pos:line="43" pos:column="25">replacementAdd<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><name pos:line="43" pos:column="40">e<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>

    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">sio<pos:position pos:line="45" pos:column="15"/></name></expr>;<pos:position pos:line="45" pos:column="16"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

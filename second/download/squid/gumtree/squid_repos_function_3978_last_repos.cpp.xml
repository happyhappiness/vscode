<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3978_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLDomainData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">match<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">host<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">host<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">28<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"aclMatchDomainList: checking '"<pos:position pos:line="7" pos:column="51"/></literal> <operator pos:line="7" pos:column="52">&lt;&lt;<pos:position pos:line="7" pos:column="60"/></operator> <name pos:line="7" pos:column="55">host<pos:position pos:line="7" pos:column="59"/></name> <operator pos:line="7" pos:column="60">&lt;&lt;<pos:position pos:line="7" pos:column="68"/></operator> <literal type="string" pos:line="7" pos:column="63">"'"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">h<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><cast type="const" pos:line="9" pos:column="15">const_cast<argument_list type="generic" pos:line="9" pos:column="25">&lt;<argument><expr><name pos:line="9" pos:column="26">char<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="36"/></argument_list><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">host<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <specifier pos:line="10" pos:column="10">const<pos:position pos:line="10" pos:column="15"/></specifier> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier> <specifier pos:line="10" pos:column="18">const<pos:position pos:line="10" pos:column="23"/></specifier> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type> <name pos:line="10" pos:column="26">result<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><call><name><name pos:line="10" pos:column="35">domains<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">find<pos:position pos:line="10" pos:column="48"/></name></name><argument_list pos:line="10" pos:column="48">(<argument><expr><name pos:line="10" pos:column="49">h<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">aclHostDomainCompare<pos:position pos:line="10" pos:column="72"/></name></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="74"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">28<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"aclMatchDomainList: '"<pos:position pos:line="12" pos:column="42"/></literal> <operator pos:line="12" pos:column="43">&lt;&lt;<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="46">host<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">&lt;&lt;<pos:position pos:line="12" pos:column="59"/></operator> <literal type="string" pos:line="12" pos:column="54">"' "<pos:position pos:line="12" pos:column="58"/></literal> <operator pos:line="12" pos:column="59">&lt;&lt;<pos:position pos:line="12" pos:column="67"/></operator> <operator pos:line="12" pos:column="62">(<pos:position pos:line="12" pos:column="63"/></operator><ternary><condition><expr><name pos:line="12" pos:column="63">result<pos:position pos:line="12" pos:column="69"/></name></expr> ?<pos:position pos:line="12" pos:column="71"/></condition><then pos:line="12" pos:column="71"> <expr><literal type="string" pos:line="12" pos:column="72">"found"<pos:position pos:line="12" pos:column="79"/></literal></expr> <pos:position pos:line="12" pos:column="80"/></then><else pos:line="12" pos:column="80">: <expr><literal type="string" pos:line="12" pos:column="82">"NOT found"<pos:position pos:line="12" pos:column="93"/></literal></expr></else></ternary><operator pos:line="12" pos:column="93">)<pos:position pos:line="12" pos:column="94"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="96"/></expr_stmt>

    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">result<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">!=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">NULL<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

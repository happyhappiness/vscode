<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1077_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">mcastSetTtl<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">fd<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">mcast_ttl<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">IP_MULTICAST_TTL<pos:position pos:line="4" pos:column="24"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ttl<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">)<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">mcast_ttl<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">setsockopt<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">fd<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">IPPROTO_IP<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">IP_MULTICAST_TTL<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="54">&amp;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="55">ttl<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="60">1<pos:position pos:line="7" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call> <operator pos:line="7" pos:column="63">&lt;<pos:position pos:line="7" pos:column="67"/></operator> <literal type="number" pos:line="7" pos:column="65">0<pos:position pos:line="7" pos:column="66"/></literal></expr>)<pos:position pos:line="7" pos:column="67"/></condition><then pos:line="7" pos:column="67"> <block pos:line="7" pos:column="68">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">xerrno<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name pos:line="8" pos:column="22">errno<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">50<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">DBG_IMPORTANT<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="35">"mcastSetTtl: FD "<pos:position pos:line="9" pos:column="53"/></literal> <operator pos:line="9" pos:column="54">&lt;&lt;<pos:position pos:line="9" pos:column="62"/></operator> <name pos:line="9" pos:column="57">fd<pos:position pos:line="9" pos:column="59"/></name> <operator pos:line="9" pos:column="60">&lt;&lt;<pos:position pos:line="9" pos:column="68"/></operator> <literal type="string" pos:line="9" pos:column="63">", TTL: "<pos:position pos:line="9" pos:column="72"/></literal> <operator pos:line="9" pos:column="73">&lt;&lt;<pos:position pos:line="9" pos:column="81"/></operator> <name pos:line="9" pos:column="76">mcast_ttl<pos:position pos:line="9" pos:column="85"/></name> <operator pos:line="9" pos:column="86">&lt;&lt;<pos:position pos:line="9" pos:column="94"/></operator> <literal type="string" pos:line="9" pos:column="89">": "<pos:position pos:line="9" pos:column="93"/></literal> <operator pos:line="9" pos:column="94">&lt;&lt;<pos:position pos:line="9" pos:column="102"/></operator> <call><name pos:line="9" pos:column="97">xstrerr<pos:position pos:line="9" pos:column="104"/></name><argument_list pos:line="9" pos:column="104">(<argument><expr><name pos:line="9" pos:column="105">xerrno<pos:position pos:line="9" pos:column="111"/></name></expr></argument>)<pos:position pos:line="9" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="114"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

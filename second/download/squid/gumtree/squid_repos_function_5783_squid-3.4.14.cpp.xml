<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5783_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoPendingRequest<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">completeIo<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">IpcIoMsg<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier></type> <name pos:line="2" pos:column="49">response<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">readRequest<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="5" pos:column="9">file<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">readCompleted<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">readRequest<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">response<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt></block></then>
    <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><name pos:line="6" pos:column="14">writeRequest<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="9">file<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">writeCompleted<pos:position pos:line="7" pos:column="29"/></name></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">writeRequest<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">response<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <else pos:line="8" pos:column="5">else <block pos:line="8" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">Must<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><operator pos:line="9" pos:column="14">!<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">response<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt> <comment type="line" pos:line="9" pos:column="26">// only timeouts are handled here</comment>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">file<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">openCompleted<pos:position pos:line="10" pos:column="28"/></name></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">NULL<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></else></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

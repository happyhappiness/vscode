<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7306_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">base64_decode_len<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">data<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">data<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">||<pos:position pos:line="4" pos:column="17"/></operator> <operator pos:line="4" pos:column="18">!<pos:position pos:line="4" pos:column="19"/></operator><operator pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">data<pos:position pos:line="4" pos:column="24"/></name></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">terminatorLen<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">dataLen<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><call><name pos:line="8" pos:column="19">strlen<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">data<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">dataLen<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></init> <condition><expr><name pos:line="11" pos:column="27">i<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&gt;=<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></condition> <incr><expr><name pos:line="11" pos:column="35">i<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">--<pos:position pos:line="11" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="39"/></control> <block pos:line="11" pos:column="40">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">data<pos:position pos:line="12" pos:column="17"/></name><index pos:line="12" pos:column="17">[<expr><name pos:line="12" pos:column="18">i<pos:position pos:line="12" pos:column="19"/></name></expr>]<pos:position pos:line="12" pos:column="20"/></index></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <literal type="char" pos:line="12" pos:column="24">'='<pos:position pos:line="12" pos:column="27"/></literal></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="13">terminatorLen<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">++<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt></block></then></if>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">data<pos:position pos:line="14" pos:column="17"/></name><index pos:line="14" pos:column="17">[<expr><name pos:line="14" pos:column="18">i<pos:position pos:line="14" pos:column="19"/></name></expr>]<pos:position pos:line="14" pos:column="20"/></index></name> <operator pos:line="14" pos:column="21">!=<pos:position pos:line="14" pos:column="23"/></operator> <literal type="char" pos:line="14" pos:column="24">'='<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
            <block type="pseudo"><break pos:line="15" pos:column="13">break;<pos:position pos:line="15" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">dataLen<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">/<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="22">4<pos:position pos:line="17" pos:column="23"/></literal> <operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator> <literal type="number" pos:line="17" pos:column="26">3<pos:position pos:line="17" pos:column="27"/></literal> <operator pos:line="17" pos:column="28">-<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">terminatorLen<pos:position pos:line="17" pos:column="43"/></name></expr>;<pos:position pos:line="17" pos:column="44"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

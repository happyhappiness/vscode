<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7444_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">HandshakeParser<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseMessages<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">()<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init pos:line="4" pos:column="10">;<pos:position pos:line="4" pos:column="11"/></init> <condition><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name><name pos:line="4" pos:column="13">tkMessages<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">atEnd<pos:position pos:line="4" pos:column="29"/></name></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="32"/></condition> <incr><expr><call><name><name pos:line="4" pos:column="33">tkMessages<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">.<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">commit<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></incr>)<pos:position pos:line="4" pos:column="53"/></control> <block pos:line="4" pos:column="54">{
        <switch pos:line="5" pos:column="9">switch <condition pos:line="5" pos:column="16">(<expr><name pos:line="5" pos:column="17">currentContentType<pos:position pos:line="5" pos:column="35"/></name></expr>)<pos:position pos:line="5" pos:column="36"/></condition> <block pos:line="5" pos:column="37">{
        <case pos:line="6" pos:column="9">case <expr><name><name pos:line="6" pos:column="14">ContentType<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">::<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">ctChangeCipherSpec<pos:position pos:line="6" pos:column="45"/></name></name></expr>:<pos:position pos:line="6" pos:column="46"/></case>
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">parseChangeCipherCpecMessage<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
            <continue pos:line="8" pos:column="13">continue;<pos:position pos:line="8" pos:column="22"/></continue>
        <case pos:line="9" pos:column="9">case <expr><name><name pos:line="9" pos:column="14">ContentType<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">::<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">ctAlert<pos:position pos:line="9" pos:column="34"/></name></name></expr>:<pos:position pos:line="9" pos:column="35"/></case>
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">parseAlertMessage<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">()<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
            <continue pos:line="11" pos:column="13">continue;<pos:position pos:line="11" pos:column="22"/></continue>
        <case pos:line="12" pos:column="9">case <expr><name><name pos:line="12" pos:column="14">ContentType<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">::<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">ctHandshake<pos:position pos:line="12" pos:column="38"/></name></name></expr>:<pos:position pos:line="12" pos:column="39"/></case>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">parseHandshakeMessage<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue>
        <case pos:line="15" pos:column="9">case <expr><name><name pos:line="15" pos:column="14">ContentType<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">::<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">ctApplicationData<pos:position pos:line="15" pos:column="44"/></name></name></expr>:<pos:position pos:line="15" pos:column="45"/></case>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">parseApplicationDataMessage<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">()<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
            <continue pos:line="17" pos:column="13">continue;<pos:position pos:line="17" pos:column="22"/></continue>
        }<pos:position pos:line="18" pos:column="10"/></block></switch>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">skipMessage<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><literal type="string" pos:line="19" pos:column="21">"unknown ContentType msg [fragment]"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></for>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

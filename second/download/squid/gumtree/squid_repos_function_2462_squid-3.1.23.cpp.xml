<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2462_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ssl_verify_cb<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">ok<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">X509_STORE_CTX<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">ctx<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buffer<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><literal type="number" pos:line="4" pos:column="17">256<pos:position pos:line="4" pos:column="20"/></literal></expr>]<pos:position pos:line="4" pos:column="21"/></index></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSL<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">ssl<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">SSL<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></operator><operator pos:line="5" pos:column="22">)<pos:position pos:line="5" pos:column="23"/></operator><call><name pos:line="5" pos:column="23">X509_STORE_CTX_get_ex_data<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><name pos:line="5" pos:column="50">ctx<pos:position pos:line="5" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="55">SSL_get_ex_data_X509_STORE_CTX_idx<pos:position pos:line="5" pos:column="89"/></name><argument_list pos:line="5" pos:column="89">()<pos:position pos:line="5" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="93"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL_CTX<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">sslctx<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">SSL_get_SSL_CTX<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">ssl<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">server<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><specifier pos:line="7" pos:column="27">const<pos:position pos:line="7" pos:column="32"/></specifier> <name pos:line="7" pos:column="33">char<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">*<pos:position pos:line="7" pos:column="39"/></operator><operator pos:line="7" pos:column="39">)<pos:position pos:line="7" pos:column="40"/></operator><call><name pos:line="7" pos:column="40">SSL_get_ex_data<pos:position pos:line="7" pos:column="55"/></name><argument_list pos:line="7" pos:column="55">(<argument><expr><name pos:line="7" pos:column="56">ssl<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="61">ssl_ex_index_server<pos:position pos:line="7" pos:column="80"/></name></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="82"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">dont_verify_domain<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><call><name pos:line="8" pos:column="32">SSL_CTX_get_ex_data<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">sslctx<pos:position pos:line="8" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="60">ssl_ctx_ex_index_dont_verify_domain<pos:position pos:line="8" pos:column="95"/></name></expr></argument>)<pos:position pos:line="8" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="97"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ACLChecklist<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">check<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><operator pos:line="9" pos:column="27">(<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">ACLChecklist<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">*<pos:position pos:line="9" pos:column="41"/></operator><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator><call><name pos:line="9" pos:column="42">SSL_get_ex_data<pos:position pos:line="9" pos:column="57"/></name><argument_list pos:line="9" pos:column="57">(<argument><expr><name pos:line="9" pos:column="58">ssl<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">ssl_ex_index_cert_error_check<pos:position pos:line="9" pos:column="92"/></name></expr></argument>)<pos:position pos:line="9" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="94"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">X509<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">peer_cert<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name><name pos:line="10" pos:column="23">ctx<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">cert<pos:position pos:line="10" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">Ssl<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">::<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">ssl_error_t<pos:position pos:line="11" pos:column="21"/></name></name></type> <name pos:line="11" pos:column="22">error_no<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><name pos:line="11" pos:column="33">SSL_ERROR_NONE<pos:position pos:line="11" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="48"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">X509_NAME_oneline<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><call><name pos:line="13" pos:column="23">X509_get_subject_name<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">peer_cert<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">buffer<pos:position pos:line="13" pos:column="63"/></name></expr></argument>,
                      <argument><expr><sizeof pos:line="14" pos:column="23">sizeof<argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">buffer<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">ok<pos:position pos:line="16" pos:column="11"/></name></expr>)<pos:position pos:line="16" pos:column="12"/></condition><then pos:line="16" pos:column="12"> <block pos:line="16" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">83<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">5<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"SSL Certificate signature OK: "<pos:position pos:line="17" pos:column="55"/></literal> <operator pos:line="17" pos:column="56">&lt;&lt;<pos:position pos:line="17" pos:column="64"/></operator> <name pos:line="17" pos:column="59">buffer<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">server<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">int<pos:position pos:line="20" pos:column="16"/></name></type> <name pos:line="20" pos:column="17">found<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><call><name><name pos:line="20" pos:column="25">Ssl<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">::<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">matchX509CommonNames<pos:position pos:line="20" pos:column="50"/></name></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">peer_cert<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="62">(<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="63">void<pos:position pos:line="20" pos:column="67"/></name> <operator pos:line="20" pos:column="68">*<pos:position pos:line="20" pos:column="69"/></operator><operator pos:line="20" pos:column="69">)<pos:position pos:line="20" pos:column="70"/></operator><name pos:line="20" pos:column="70">server<pos:position pos:line="20" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="78">check_domain<pos:position pos:line="20" pos:column="90"/></name></expr></argument>)<pos:position pos:line="20" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="92"/></decl_stmt>

            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">!<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">found<pos:position pos:line="22" pos:column="23"/></name></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <block pos:line="22" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">debugs<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="number" pos:line="23" pos:column="24">83<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="28">2<pos:position pos:line="23" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"SQUID_X509_V_ERR_DOMAIN_MISMATCH: Certificate "<pos:position pos:line="23" pos:column="79"/></literal> <operator pos:line="23" pos:column="80">&lt;&lt;<pos:position pos:line="23" pos:column="88"/></operator> <name pos:line="23" pos:column="83">buffer<pos:position pos:line="23" pos:column="89"/></name> <operator pos:line="23" pos:column="90">&lt;&lt;<pos:position pos:line="23" pos:column="98"/></operator> <literal type="string" pos:line="23" pos:column="93">" does not match domainname "<pos:position pos:line="23" pos:column="122"/></literal> <operator pos:line="23" pos:column="123">&lt;&lt;<pos:position pos:line="23" pos:column="131"/></operator> <name pos:line="23" pos:column="126">server<pos:position pos:line="23" pos:column="132"/></name></expr></argument>)<pos:position pos:line="23" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="134"/></expr_stmt>
                <expr_stmt><expr><name pos:line="24" pos:column="17">ok<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><name pos:line="25" pos:column="17">error_no<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">SQUID_X509_V_ERR_DOMAIN_MISMATCH<pos:position pos:line="25" pos:column="60"/></name></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>

                <if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">check<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="21">Filled<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">check<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">ssl_error<pos:position pos:line="28" pos:column="45"/></name> <operator pos:line="28" pos:column="46">=<pos:position pos:line="28" pos:column="47"/></operator> <name pos:line="28" pos:column="48">SQUID_X509_V_ERR_DOMAIN_MISMATCH<pos:position pos:line="28" pos:column="80"/></name></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt></block></then></if>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then> <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
        <expr_stmt><expr><name pos:line="32" pos:column="9">error_no<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name><name pos:line="32" pos:column="20">ctx<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">error<pos:position pos:line="32" pos:column="30"/></name></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
        <switch pos:line="33" pos:column="9">switch <condition pos:line="33" pos:column="16">(<expr><name><name pos:line="33" pos:column="17">ctx<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">error<pos:position pos:line="33" pos:column="27"/></name></name></expr>)<pos:position pos:line="33" pos:column="28"/></condition> <block pos:line="33" pos:column="29">{

        <case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY<pos:position pos:line="35" pos:column="58"/></name></expr>:<pos:position pos:line="35" pos:column="59"/></case>
        <case pos:line="36" pos:column="9">case <expr><name pos:line="36" pos:column="14">X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT<pos:position pos:line="36" pos:column="50"/></name></expr>:<pos:position pos:line="36" pos:column="51"/></case>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">debugs<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="number" pos:line="37" pos:column="20">83<pos:position pos:line="37" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="24">5<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="27">"SSL Certficate error: CA not known: "<pos:position pos:line="37" pos:column="65"/></literal> <operator pos:line="37" pos:column="66">&lt;&lt;<pos:position pos:line="37" pos:column="74"/></operator> <name pos:line="37" pos:column="69">buffer<pos:position pos:line="37" pos:column="75"/></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>

        <case pos:line="40" pos:column="9">case <expr><name pos:line="40" pos:column="14">X509_V_ERR_CERT_NOT_YET_VALID<pos:position pos:line="40" pos:column="43"/></name></expr>:<pos:position pos:line="40" pos:column="44"/></case>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">debugs<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><literal type="number" pos:line="41" pos:column="20">83<pos:position pos:line="41" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="24">5<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="27">"SSL Certficate not yet valid: "<pos:position pos:line="41" pos:column="59"/></literal> <operator pos:line="41" pos:column="60">&lt;&lt;<pos:position pos:line="41" pos:column="68"/></operator> <name pos:line="41" pos:column="63">buffer<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>
            <break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break>

        <case pos:line="44" pos:column="9">case <expr><name pos:line="44" pos:column="14">X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD<pos:position pos:line="44" pos:column="55"/></name></expr>:<pos:position pos:line="44" pos:column="56"/></case>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">debugs<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><literal type="number" pos:line="45" pos:column="20">83<pos:position pos:line="45" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="24">5<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"SSL Certificate has illegal \'not before\' field: "<pos:position pos:line="45" pos:column="79"/></literal> <operator pos:line="45" pos:column="80">&lt;&lt;<pos:position pos:line="45" pos:column="88"/></operator>
                   <name pos:line="46" pos:column="20">buffer<pos:position pos:line="46" pos:column="26"/></name></expr></argument>)<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>

            <break pos:line="48" pos:column="13">break;<pos:position pos:line="48" pos:column="19"/></break>

        <case pos:line="50" pos:column="9">case <expr><name pos:line="50" pos:column="14">X509_V_ERR_CERT_HAS_EXPIRED<pos:position pos:line="50" pos:column="41"/></name></expr>:<pos:position pos:line="50" pos:column="42"/></case>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">debugs<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="number" pos:line="51" pos:column="20">83<pos:position pos:line="51" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="24">5<pos:position pos:line="51" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="27">"SSL Certificate expired: "<pos:position pos:line="51" pos:column="54"/></literal> <operator pos:line="51" pos:column="55">&lt;&lt;<pos:position pos:line="51" pos:column="63"/></operator> <name pos:line="51" pos:column="58">buffer<pos:position pos:line="51" pos:column="64"/></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="66"/></expr_stmt>
            <break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break>

        <case pos:line="54" pos:column="9">case <expr><name pos:line="54" pos:column="14">X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD<pos:position pos:line="54" pos:column="54"/></name></expr>:<pos:position pos:line="54" pos:column="55"/></case>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">debugs<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="number" pos:line="55" pos:column="20">83<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="24">5<pos:position pos:line="55" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="27">"SSL Certificate has invalid \'not after\' field: "<pos:position pos:line="55" pos:column="78"/></literal> <operator pos:line="55" pos:column="79">&lt;&lt;<pos:position pos:line="55" pos:column="87"/></operator> <name pos:line="55" pos:column="82">buffer<pos:position pos:line="55" pos:column="88"/></name></expr></argument>)<pos:position pos:line="55" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="90"/></expr_stmt>
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>

        <case pos:line="58" pos:column="9">case <expr><name pos:line="58" pos:column="14">X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT<pos:position pos:line="58" pos:column="52"/></name></expr>:<pos:position pos:line="58" pos:column="53"/></case>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">debugs<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><literal type="number" pos:line="59" pos:column="20">83<pos:position pos:line="59" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="24">5<pos:position pos:line="59" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="27">"SSL Certificate is self signed: "<pos:position pos:line="59" pos:column="61"/></literal> <operator pos:line="59" pos:column="62">&lt;&lt;<pos:position pos:line="59" pos:column="70"/></operator> <name pos:line="59" pos:column="65">buffer<pos:position pos:line="59" pos:column="71"/></name></expr></argument>)<pos:position pos:line="59" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="73"/></expr_stmt>
            <break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break>

        <default pos:line="62" pos:column="9">default:<pos:position pos:line="62" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">debugs<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="number" pos:line="63" pos:column="20">83<pos:position pos:line="63" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="24">1<pos:position pos:line="63" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"SSL unknown certificate error "<pos:position pos:line="63" pos:column="59"/></literal> <operator pos:line="63" pos:column="60">&lt;&lt;<pos:position pos:line="63" pos:column="68"/></operator> <name><name pos:line="63" pos:column="63">ctx<pos:position pos:line="63" pos:column="66"/></name><operator pos:line="63" pos:column="66">-&gt;<pos:position pos:line="63" pos:column="71"/></operator><name pos:line="63" pos:column="68">error<pos:position pos:line="63" pos:column="73"/></name></name> <operator pos:line="63" pos:column="74">&lt;&lt;<pos:position pos:line="63" pos:column="82"/></operator> <literal type="string" pos:line="63" pos:column="77">" in "<pos:position pos:line="63" pos:column="83"/></literal> <operator pos:line="63" pos:column="84">&lt;&lt;<pos:position pos:line="63" pos:column="92"/></operator> <name pos:line="63" pos:column="87">buffer<pos:position pos:line="63" pos:column="93"/></name></expr></argument>)<pos:position pos:line="63" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="95"/></expr_stmt>
            <break pos:line="64" pos:column="13">break;<pos:position pos:line="64" pos:column="19"/></break>
        }<pos:position pos:line="65" pos:column="10"/></block></switch>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">check<pos:position pos:line="67" pos:column="18"/></name></expr>)<pos:position pos:line="67" pos:column="19"/></condition><then pos:line="67" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="13">Filled<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">check<pos:position pos:line="68" pos:column="25"/></name></expr></argument>)<pos:position pos:line="68" pos:column="26"/></argument_list></call><operator pos:line="68" pos:column="26">-&gt;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="28">ssl_error<pos:position pos:line="68" pos:column="37"/></name> <operator pos:line="68" pos:column="38">=<pos:position pos:line="68" pos:column="39"/></operator> <name><name pos:line="68" pos:column="40">ctx<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">error<pos:position pos:line="68" pos:column="50"/></name></name></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><operator pos:line="71" pos:column="9">!<pos:position pos:line="71" pos:column="10"/></operator><name pos:line="71" pos:column="10">ok<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">&amp;&amp;<pos:position pos:line="71" pos:column="23"/></operator> <name pos:line="71" pos:column="16">check<pos:position pos:line="71" pos:column="21"/></name></expr>)<pos:position pos:line="71" pos:column="22"/></condition><then pos:line="71" pos:column="22"> <block pos:line="71" pos:column="23">{
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name><name pos:line="72" pos:column="13">check<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">fastCheck<pos:position pos:line="72" pos:column="29"/></name></name><argument_list pos:line="72" pos:column="29">()<pos:position pos:line="72" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32"> <block pos:line="72" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">debugs<pos:position pos:line="73" pos:column="19"/></name><argument_list pos:line="73" pos:column="19">(<argument><expr><literal type="number" pos:line="73" pos:column="20">83<pos:position pos:line="73" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="24">3<pos:position pos:line="73" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="27">"bypassing SSL error "<pos:position pos:line="73" pos:column="49"/></literal> <operator pos:line="73" pos:column="50">&lt;&lt;<pos:position pos:line="73" pos:column="58"/></operator> <name><name pos:line="73" pos:column="53">ctx<pos:position pos:line="73" pos:column="56"/></name><operator pos:line="73" pos:column="56">-&gt;<pos:position pos:line="73" pos:column="61"/></operator><name pos:line="73" pos:column="58">error<pos:position pos:line="73" pos:column="63"/></name></name> <operator pos:line="73" pos:column="64">&lt;&lt;<pos:position pos:line="73" pos:column="72"/></operator> <literal type="string" pos:line="73" pos:column="67">" in "<pos:position pos:line="73" pos:column="73"/></literal> <operator pos:line="73" pos:column="74">&lt;&lt;<pos:position pos:line="73" pos:column="82"/></operator> <name pos:line="73" pos:column="77">buffer<pos:position pos:line="73" pos:column="83"/></name></expr></argument>)<pos:position pos:line="73" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><name pos:line="74" pos:column="13">ok<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <literal type="number" pos:line="74" pos:column="18">1<pos:position pos:line="74" pos:column="19"/></literal></expr>;<pos:position pos:line="74" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></then> <else pos:line="75" pos:column="11">else <block pos:line="75" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">debugs<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><literal type="number" pos:line="76" pos:column="20">83<pos:position pos:line="76" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="24">5<pos:position pos:line="76" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="27">"confirming SSL error "<pos:position pos:line="76" pos:column="50"/></literal> <operator pos:line="76" pos:column="51">&lt;&lt;<pos:position pos:line="76" pos:column="59"/></operator> <name><name pos:line="76" pos:column="54">ctx<pos:position pos:line="76" pos:column="57"/></name><operator pos:line="76" pos:column="57">-&gt;<pos:position pos:line="76" pos:column="62"/></operator><name pos:line="76" pos:column="59">error<pos:position pos:line="76" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">!<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">dont_verify_domain<pos:position pos:line="80" pos:column="28"/></name> <operator pos:line="80" pos:column="29">&amp;&amp;<pos:position pos:line="80" pos:column="39"/></operator> <name pos:line="80" pos:column="32">server<pos:position pos:line="80" pos:column="38"/></name></expr>)<pos:position pos:line="80" pos:column="39"/></condition><then pos:line="80" pos:column="39"> <block pos:line="80" pos:column="40">{}<pos:position pos:line="80" pos:column="42"/></block></then></if>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">error_no<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">!=<pos:position pos:line="82" pos:column="20"/></operator> <name pos:line="82" pos:column="21">SSL_ERROR_NONE<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">&amp;&amp;<pos:position pos:line="82" pos:column="46"/></operator> <operator pos:line="82" pos:column="39">!<pos:position pos:line="82" pos:column="40"/></operator><call><name pos:line="82" pos:column="40">SSL_get_ex_data<pos:position pos:line="82" pos:column="55"/></name><argument_list pos:line="82" pos:column="55">(<argument><expr><name pos:line="82" pos:column="56">ssl<pos:position pos:line="82" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="61">ssl_ex_index_ssl_error_detail<pos:position pos:line="82" pos:column="90"/></name></expr></argument>)<pos:position pos:line="82" pos:column="91"/></argument_list></call></expr> )<pos:position pos:line="82" pos:column="93"/></condition><then pos:line="82" pos:column="93"> <block pos:line="82" pos:column="94">{
        <decl_stmt><decl><type><name><name pos:line="83" pos:column="9">Ssl<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">::<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="14">ErrorDetail<pos:position pos:line="83" pos:column="25"/></name></name> <modifier pos:line="83" pos:column="26">*<pos:position pos:line="83" pos:column="27"/></modifier></type><name pos:line="83" pos:column="27">errDetail<pos:position pos:line="83" pos:column="36"/></name> <init pos:line="83" pos:column="37">= <expr><operator pos:line="83" pos:column="39">new<pos:position pos:line="83" pos:column="42"/></operator> <call><name><name pos:line="83" pos:column="43">Ssl<pos:position pos:line="83" pos:column="46"/></name><operator pos:line="83" pos:column="46">::<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="48">ErrorDetail<pos:position pos:line="83" pos:column="59"/></name></name><argument_list pos:line="83" pos:column="59">(<argument><expr><name pos:line="83" pos:column="60">error_no<pos:position pos:line="83" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="70">peer_cert<pos:position pos:line="83" pos:column="79"/></name></expr></argument>)<pos:position pos:line="83" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="83" pos:column="81"/></decl_stmt>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><call><name pos:line="84" pos:column="14">SSL_set_ex_data<pos:position pos:line="84" pos:column="29"/></name><argument_list pos:line="84" pos:column="29">(<argument><expr><name pos:line="84" pos:column="30">ssl<pos:position pos:line="84" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="35">ssl_ex_index_ssl_error_detail<pos:position pos:line="84" pos:column="64"/></name></expr></argument>,  <argument><expr><name pos:line="84" pos:column="67">errDetail<pos:position pos:line="84" pos:column="76"/></name></expr></argument>)<pos:position pos:line="84" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="78"/></condition><then pos:line="84" pos:column="78"> <block pos:line="84" pos:column="79">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">debugs<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><literal type="number" pos:line="85" pos:column="20">83<pos:position pos:line="85" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="24">2<pos:position pos:line="85" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="27">"Failed to set Ssl::ErrorDetail in ssl_verify_cb: Certificate "<pos:position pos:line="85" pos:column="90"/></literal> <operator pos:line="85" pos:column="91">&lt;&lt;<pos:position pos:line="85" pos:column="99"/></operator> <name pos:line="85" pos:column="94">buffer<pos:position pos:line="85" pos:column="100"/></name></expr></argument>)<pos:position pos:line="85" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="102"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="86" pos:column="13">delete<pos:position pos:line="86" pos:column="19"/></operator> <name pos:line="86" pos:column="20">errDetail<pos:position pos:line="86" pos:column="29"/></name></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <return pos:line="90" pos:column="5">return <expr><name pos:line="90" pos:column="12">ok<pos:position pos:line="90" pos:column="14"/></name></expr>;<pos:position pos:line="90" pos:column="15"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

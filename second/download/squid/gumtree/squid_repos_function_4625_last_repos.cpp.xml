<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4625_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">handlePasvReply<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">HttpReply<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">reply<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">StoreIOBuffer<pos:position pos:line="2" pos:column="67"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name><name pos:line="4" pos:column="11">Http<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">StreamPointer<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">context<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><call><name><name pos:line="4" pos:column="39">pipeline<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">.<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">front<pos:position pos:line="4" pos:column="53"/></name></name><argument_list pos:line="4" pos:column="53">()<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">context<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <literal type="null" pos:line="5" pos:column="23">nullptr<pos:position pos:line="5" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">context<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">http<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">request<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">errType<pos:position pos:line="7" pos:column="40"/></name></name> <operator pos:line="7" pos:column="41">!=<pos:position pos:line="7" pos:column="43"/></operator> <name pos:line="7" pos:column="44">ERR_NONE<pos:position pos:line="7" pos:column="52"/></name></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">writeCustomReply<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">502<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"Server does not support PASV"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="63">reply<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">unsigned<pos:position pos:line="12" pos:column="19"/></name> <name pos:line="12" pos:column="20">short<pos:position pos:line="12" pos:column="25"/></name></type> <name pos:line="12" pos:column="26">localPort<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><call><name pos:line="12" pos:column="38">listenForDataConnection<pos:position pos:line="12" pos:column="61"/></name><argument_list pos:line="12" pos:column="61">()<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="64"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">localPort<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">addr<pos:position pos:line="16" pos:column="14"/></name><index pos:line="16" pos:column="14">[<expr><name pos:line="16" pos:column="15">MAX_IPSTRLEN<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
    <comment type="line" pos:line="17" pos:column="5">// remote server in interception setups and local address otherwise</comment>
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name><name pos:line="18" pos:column="11">Ip<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">::<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">Address<pos:position pos:line="18" pos:column="22"/></name></name> <modifier pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></modifier></type><name pos:line="18" pos:column="24">server<pos:position pos:line="18" pos:column="30"/></name> <init pos:line="18" pos:column="31">= <expr><ternary><condition><expr><call><name pos:line="18" pos:column="33">transparent<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">()<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr> ?<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48">
                                <expr><name><name pos:line="19" pos:column="33">clientConnection<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">-&gt;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="51">local<pos:position pos:line="19" pos:column="56"/></name></name></expr> <pos:position pos:line="19" pos:column="57"/></then><else pos:line="19" pos:column="57">: <expr><name><name pos:line="19" pos:column="59">dataListenConn<pos:position pos:line="19" pos:column="73"/></name><operator pos:line="19" pos:column="73">-&gt;<pos:position pos:line="19" pos:column="78"/></operator><name pos:line="19" pos:column="75">local<pos:position pos:line="19" pos:column="80"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="19" pos:column="81"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">server<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">toStr<pos:position pos:line="20" pos:column="17"/></name></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">addr<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">MAX_IPSTRLEN<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">AF_INET<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">addr<pos:position pos:line="21" pos:column="9"/></name><index pos:line="21" pos:column="9">[<expr><name pos:line="21" pos:column="10">MAX_IPSTRLEN<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">-<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>]<pos:position pos:line="21" pos:column="27"/></index></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <literal type="char" pos:line="21" pos:column="30">'\0'<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><decl><type><name pos:line="22" pos:column="10">char<pos:position pos:line="22" pos:column="14"/></name> <modifier pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></modifier></type><name pos:line="22" pos:column="16">c<pos:position pos:line="22" pos:column="17"/></name> <init pos:line="22" pos:column="18">= <expr><name pos:line="22" pos:column="20">addr<pos:position pos:line="22" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="25"/></init> <condition><expr><operator pos:line="22" pos:column="26">*<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">c<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">!=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="char" pos:line="22" pos:column="32">'\0'<pos:position pos:line="22" pos:column="36"/></literal></expr>;<pos:position pos:line="22" pos:column="37"/></condition> <incr><expr><operator pos:line="22" pos:column="38">++<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">c<pos:position pos:line="22" pos:column="41"/></name></expr></incr>)<pos:position pos:line="22" pos:column="42"/></control> <block pos:line="22" pos:column="43">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">c<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">==<pos:position pos:line="23" pos:column="18"/></operator> <literal type="char" pos:line="23" pos:column="19">'.'<pos:position pos:line="23" pos:column="22"/></literal></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">c<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="char" pos:line="24" pos:column="18">','<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></for>

    <comment type="line" pos:line="27" pos:column="5">// In interception setups, we combine remote server address with a</comment>
    <comment type="line" pos:line="28" pos:column="5">// local port number and hope that traffic will be redirected to us.</comment>
    <comment type="line" pos:line="29" pos:column="5">// Do not use "227 =a,b,c,d,p1,p2" format or omit parens: some nf_ct_ftp</comment>
    <comment type="line" pos:line="30" pos:column="5">// versions block responses that use those alternative syntax rules!</comment>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">MemBuf<pos:position pos:line="31" pos:column="11"/></name></type> <name pos:line="31" pos:column="12">mb<pos:position pos:line="31" pos:column="14"/></name></decl>;<pos:position pos:line="31" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">mb<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">.<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">init<pos:position pos:line="32" pos:column="12"/></name></name><argument_list pos:line="32" pos:column="12">()<pos:position pos:line="32" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">mb<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">.<pos:position pos:line="33" pos:column="8"/></operator><name pos:line="33" pos:column="8">appendf<pos:position pos:line="33" pos:column="15"/></name></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="string" pos:line="33" pos:column="16">"227 Entering Passive Mode (%s,%i,%i).\r\n"<pos:position pos:line="33" pos:column="59"/></literal></expr></argument>,
               <argument><expr><name pos:line="34" pos:column="16">addr<pos:position pos:line="34" pos:column="20"/></name></expr></argument>,
               <argument><expr><cast type="static" pos:line="35" pos:column="16">static_cast<argument_list type="generic" pos:line="35" pos:column="27">&lt;<argument><expr><name pos:line="35" pos:column="28">int<pos:position pos:line="35" pos:column="31"/></name></expr></argument>&gt;<pos:position pos:line="35" pos:column="35"/></argument_list><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">localPort<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">/<pos:position pos:line="35" pos:column="44"/></operator> <literal type="number" pos:line="35" pos:column="45">256<pos:position pos:line="35" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></cast></expr></argument>,
               <argument><expr><cast type="static" pos:line="36" pos:column="16">static_cast<argument_list type="generic" pos:line="36" pos:column="27">&lt;<argument><expr><name pos:line="36" pos:column="28">int<pos:position pos:line="36" pos:column="31"/></name></expr></argument>&gt;<pos:position pos:line="36" pos:column="35"/></argument_list><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">localPort<pos:position pos:line="36" pos:column="42"/></name> <operator pos:line="36" pos:column="43">%<pos:position pos:line="36" pos:column="44"/></operator> <literal type="number" pos:line="36" pos:column="45">256<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></cast></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">9<pos:position pos:line="37" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="15">3<pos:position pos:line="37" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="18">Raw<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><literal type="string" pos:line="37" pos:column="22">"writing"<pos:position pos:line="37" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="33">mb<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">.<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">buf<pos:position pos:line="37" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="41">mb<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">.<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="44">size<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">writeReply<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">mb<pos:position pos:line="38" pos:column="18"/></name></expr></argument>)<pos:position pos:line="38" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

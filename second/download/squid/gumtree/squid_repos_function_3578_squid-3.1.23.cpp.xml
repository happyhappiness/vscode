<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3578_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">storeSwapMetaPack<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">tlv<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">tlv_list<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">length<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">buflen<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">tlv<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">t<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">j<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">buf<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">length<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">!=<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">NULL<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">buflen<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">++<pos:position pos:line="9" pos:column="13"/></operator></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>			<comment type="block" pos:line="9" pos:column="33">/* STORE_META_OK */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">buflen<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">+=<pos:position pos:line="10" pos:column="14"/></operator> <sizeof pos:line="10" pos:column="15">sizeof<argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">int<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></sizeof></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>	<comment type="block" pos:line="10" pos:column="33">/* size of header to follow */</comment>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">t<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">tlv_list<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></init> <condition><expr><name pos:line="12" pos:column="24">t<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></condition> <incr><expr><name pos:line="12" pos:column="27">t<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">=<pos:position pos:line="12" pos:column="30"/></operator> <name><name pos:line="12" pos:column="31">t<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">next<pos:position pos:line="12" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="39"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">buflen<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">+=<pos:position pos:line="13" pos:column="18"/></operator> <sizeof pos:line="13" pos:column="19">sizeof<argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">char<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></sizeof> <operator pos:line="13" pos:column="32">+<pos:position pos:line="13" pos:column="33"/></operator> <sizeof pos:line="13" pos:column="34">sizeof<argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">int<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></sizeof> <operator pos:line="13" pos:column="46">+<pos:position pos:line="13" pos:column="47"/></operator> <name><name pos:line="13" pos:column="48">t<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">length<pos:position pos:line="13" pos:column="57"/></name></name></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt></block></for>

    <expr_stmt><expr><name pos:line="15" pos:column="5">buf<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">char<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></operator><operator pos:line="15" pos:column="18">)<pos:position pos:line="15" pos:column="19"/></operator><call><name pos:line="15" pos:column="19">xmalloc<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">buflen<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">buf<pos:position pos:line="17" pos:column="8"/></name><index pos:line="17" pos:column="8">[<expr><name pos:line="17" pos:column="9">j<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">++<pos:position pos:line="17" pos:column="12"/></operator></expr>]<pos:position pos:line="17" pos:column="13"/></index></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">)<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">STORE_META_OK<pos:position pos:line="17" pos:column="36"/></name></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">xmemcpy<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><operator pos:line="19" pos:column="13">&amp;<pos:position pos:line="19" pos:column="18"/></operator><name><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><name pos:line="19" pos:column="18">j<pos:position pos:line="19" pos:column="19"/></name></expr>]<pos:position pos:line="19" pos:column="20"/></index></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="22">&amp;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="23">buflen<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="31">sizeof<argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">int<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">j<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">+=<pos:position pos:line="21" pos:column="9"/></operator> <sizeof pos:line="21" pos:column="10">sizeof<argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">int<pos:position pos:line="21" pos:column="20"/></name></expr></argument>)<pos:position pos:line="21" pos:column="21"/></argument_list></sizeof></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">t<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">tlv_list<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></init> <condition><expr><name pos:line="23" pos:column="24">t<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></condition> <incr><expr><name pos:line="23" pos:column="27">t<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name><name pos:line="23" pos:column="31">t<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">next<pos:position pos:line="23" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="39"/></control> <block pos:line="23" pos:column="40">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">buf<pos:position pos:line="24" pos:column="12"/></name><index pos:line="24" pos:column="12">[<expr><name pos:line="24" pos:column="13">j<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">++<pos:position pos:line="24" pos:column="16"/></operator></expr>]<pos:position pos:line="24" pos:column="17"/></index></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name><name pos:line="24" pos:column="20">t<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">getType<pos:position pos:line="24" pos:column="30"/></name></name><argument_list pos:line="24" pos:column="30">()<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">xmemcpy<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><operator pos:line="25" pos:column="17">&amp;<pos:position pos:line="25" pos:column="22"/></operator><name><name pos:line="25" pos:column="18">buf<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name pos:line="25" pos:column="22">j<pos:position pos:line="25" pos:column="23"/></name></expr>]<pos:position pos:line="25" pos:column="24"/></index></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator><name><name pos:line="25" pos:column="27">t<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">length<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="38">sizeof<argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">int<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">j<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">+=<pos:position pos:line="26" pos:column="13"/></operator> <sizeof pos:line="26" pos:column="14">sizeof<argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">int<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">xmemcpy<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><operator pos:line="27" pos:column="17">&amp;<pos:position pos:line="27" pos:column="22"/></operator><name><name pos:line="27" pos:column="18">buf<pos:position pos:line="27" pos:column="21"/></name><index pos:line="27" pos:column="21">[<expr><name pos:line="27" pos:column="22">j<pos:position pos:line="27" pos:column="23"/></name></expr>]<pos:position pos:line="27" pos:column="24"/></index></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="26">t<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">value<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">t<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">length<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">j<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">+=<pos:position pos:line="28" pos:column="13"/></operator> <name><name pos:line="28" pos:column="14">t<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">length<pos:position pos:line="28" pos:column="23"/></name></name></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">assert<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">int<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">)<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">j<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">buflen<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="32" pos:column="5">*<pos:position pos:line="32" pos:column="6"/></operator><name pos:line="32" pos:column="6">length<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">buflen<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">buf<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4613_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">listenForDataConnection<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">()<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">closeDataConnection<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Comm<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">::<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">ConnectionPointer<pos:position pos:line="6" pos:column="28"/></name></name></type> <name pos:line="6" pos:column="29">conn<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><operator pos:line="6" pos:column="36">new<pos:position pos:line="6" pos:column="39"/></operator> <name><name pos:line="6" pos:column="40">Comm<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">::<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">Connection<pos:position pos:line="6" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">conn<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">flags<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">COMM_NONBLOCKING<pos:position pos:line="7" pos:column="35"/></name></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">conn<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">local<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <ternary><condition><expr><call><name pos:line="8" pos:column="19">transparent<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">()<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <expr><name><name pos:line="8" pos:column="35">port<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">s<pos:position pos:line="8" pos:column="42"/></name></name></expr> <pos:position pos:line="8" pos:column="43"/></then><else pos:line="8" pos:column="43">: <expr><name><name pos:line="8" pos:column="45">clientConnection<pos:position pos:line="8" pos:column="61"/></name><operator pos:line="8" pos:column="61">-&gt;<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="63">local<pos:position pos:line="8" pos:column="68"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">conn<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">local<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">.<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">port<pos:position pos:line="9" pos:column="21"/></name></name><argument_list pos:line="9" pos:column="21">(<argument><expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier></type> <name pos:line="10" pos:column="23">note<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><call><name><name pos:line="10" pos:column="30">uri<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">.<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">c_str<pos:position pos:line="10" pos:column="39"/></name></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">comm_open_listener<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">SOCK_STREAM<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">IPPROTO_TCP<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">conn<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="56">note<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><call><name><name pos:line="12" pos:column="10">Comm<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">::<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">IsConnOpen<pos:position pos:line="12" pos:column="26"/></name></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">conn<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">5<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">DBG_CRITICAL<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"comm_open_listener failed for FTP data: "<pos:position pos:line="13" pos:column="75"/></literal> <operator pos:line="13" pos:column="76">&lt;&lt;<pos:position pos:line="13" pos:column="84"/></operator>
               <name><name pos:line="14" pos:column="16">conn<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">local<pos:position pos:line="14" pos:column="27"/></name></name> <operator pos:line="14" pos:column="28">&lt;&lt;<pos:position pos:line="14" pos:column="36"/></operator> <literal type="string" pos:line="14" pos:column="31">" error: "<pos:position pos:line="14" pos:column="41"/></literal> <operator pos:line="14" pos:column="42">&lt;&lt;<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="45">errno<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">writeCustomReply<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="number" pos:line="15" pos:column="26">451<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"Internal error"<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <typedef pos:line="19" pos:column="5">typedef <type><name><name pos:line="19" pos:column="13">CommCbMemFunT<pos:position pos:line="19" pos:column="26"/></name><argument_list type="generic" pos:line="19" pos:column="26">&lt;<argument><expr><name pos:line="19" pos:column="27">Server<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">CommAcceptCbParams<pos:position pos:line="19" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="19" pos:column="57"/></argument_list></name></type> <name pos:line="19" pos:column="55">AcceptDialer<pos:position pos:line="19" pos:column="67"/></name>;<pos:position pos:line="19" pos:column="68"/></typedef>
    <typedef pos:line="20" pos:column="5">typedef <type><name><name pos:line="20" pos:column="13">AsyncCallT<pos:position pos:line="20" pos:column="23"/></name><argument_list type="generic" pos:line="20" pos:column="23">&lt;<argument><expr><name pos:line="20" pos:column="24">AcceptDialer<pos:position pos:line="20" pos:column="36"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="40"/></argument_list></name></type> <name pos:line="20" pos:column="38">AcceptCall<pos:position pos:line="20" pos:column="48"/></name>;<pos:position pos:line="20" pos:column="49"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">RefCount<pos:position pos:line="21" pos:column="13"/></name><argument_list type="generic" pos:line="21" pos:column="13">&lt;<argument><expr><name pos:line="21" pos:column="14">AcceptCall<pos:position pos:line="21" pos:column="24"/></name></expr></argument>&gt;<pos:position pos:line="21" pos:column="28"/></argument_list></name></type> <name pos:line="21" pos:column="26">call<pos:position pos:line="21" pos:column="30"/></name> <init pos:line="21" pos:column="31">= <expr><cast type="static" pos:line="21" pos:column="33">static_cast<argument_list type="generic" pos:line="21" pos:column="44">&lt;<argument><expr><name pos:line="21" pos:column="45">AcceptCall<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">*<pos:position pos:line="21" pos:column="56"/></operator></expr></argument>&gt;<pos:position pos:line="21" pos:column="60"/></argument_list><argument_list pos:line="21" pos:column="57">(<argument><expr><call><name pos:line="21" pos:column="58">JobCallback<pos:position pos:line="21" pos:column="69"/></name><argument_list pos:line="21" pos:column="69">(<argument><expr><literal type="number" pos:line="21" pos:column="70">5<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="73">5<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="76">AcceptDialer<pos:position pos:line="21" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="90">this<pos:position pos:line="21" pos:column="94"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="96">Ftp<pos:position pos:line="21" pos:column="99"/></name><operator pos:line="21" pos:column="99">::<pos:position pos:line="21" pos:column="101"/></operator><name pos:line="21" pos:column="101">Server<pos:position pos:line="21" pos:column="107"/></name><operator pos:line="21" pos:column="107">::<pos:position pos:line="21" pos:column="109"/></operator><name pos:line="21" pos:column="109">acceptDataConnection<pos:position pos:line="21" pos:column="129"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="130"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="131"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="21" pos:column="132"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="22" pos:column="5">Subscription<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">::<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">Pointer<pos:position pos:line="22" pos:column="26"/></name></name></type> <name pos:line="22" pos:column="27">sub<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">= <expr><operator pos:line="22" pos:column="33">new<pos:position pos:line="22" pos:column="36"/></operator> <call><name><name pos:line="22" pos:column="37">CallSubscription<pos:position pos:line="22" pos:column="53"/></name><argument_list type="generic" pos:line="22" pos:column="53">&lt;<argument><expr><name pos:line="22" pos:column="54">AcceptCall<pos:position pos:line="22" pos:column="64"/></name></expr></argument>&gt;<pos:position pos:line="22" pos:column="68"/></argument_list></name><argument_list pos:line="22" pos:column="65">(<argument><expr><name pos:line="22" pos:column="66">call<pos:position pos:line="22" pos:column="70"/></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">listener<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name><name pos:line="23" pos:column="16">call<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">getRaw<pos:position pos:line="23" pos:column="27"/></name></name><argument_list pos:line="23" pos:column="27">()<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">dataListenConn<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">conn<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">AsyncJob<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">::<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">Start<pos:position pos:line="25" pos:column="20"/></name></name><argument_list pos:line="25" pos:column="20">(<argument><expr><operator pos:line="25" pos:column="21">new<pos:position pos:line="25" pos:column="24"/></operator> <call><name><name pos:line="25" pos:column="25">Comm<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">::<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="31">TcpAcceptor<pos:position pos:line="25" pos:column="42"/></name></name><argument_list pos:line="25" pos:column="42">(<argument><expr><name pos:line="25" pos:column="43">conn<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">note<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">sub<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">const<pos:position pos:line="27" pos:column="10"/></specifier> <name pos:line="27" pos:column="11">unsigned<pos:position pos:line="27" pos:column="19"/></name> <name pos:line="27" pos:column="20">int<pos:position pos:line="27" pos:column="23"/></name></type> <name pos:line="27" pos:column="24">listeningPort<pos:position pos:line="27" pos:column="37"/></name> <init pos:line="27" pos:column="38">= <expr><call><name pos:line="27" pos:column="40">comm_local_port<pos:position pos:line="27" pos:column="55"/></name><argument_list pos:line="27" pos:column="55">(<argument><expr><name><name pos:line="27" pos:column="56">conn<pos:position pos:line="27" pos:column="60"/></name><operator pos:line="27" pos:column="60">-&gt;<pos:position pos:line="27" pos:column="65"/></operator><name pos:line="27" pos:column="62">fd<pos:position pos:line="27" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">conn<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">local<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">port<pos:position pos:line="28" pos:column="21"/></name></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">listeningPort<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">listeningPort<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

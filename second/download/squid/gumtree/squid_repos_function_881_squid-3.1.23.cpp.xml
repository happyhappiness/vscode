<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_881_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">comm_old_accept<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">fd<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">ConnectionDetail<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">details<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">PROF_start<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">comm_accept<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">statCounter<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">syscalls<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">sock<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">accepts<pos:position pos:line="5" pos:column="38"/></name></name><operator pos:line="5" pos:column="38">++<pos:position pos:line="5" pos:column="40"/></operator></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">sock<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">addrinfo<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">gai<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">details<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">me<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">InitAddrInfo<pos:position pos:line="8" pos:column="28"/></name></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">gai<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">sock<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">accept<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">fd<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="28">gai<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">ai_addr<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name><name pos:line="10" pos:column="43">gai<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">ai_addrlen<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call><operator pos:line="10" pos:column="59">)<pos:position pos:line="10" pos:column="60"/></operator> <operator pos:line="10" pos:column="61">&lt;<pos:position pos:line="10" pos:column="65"/></operator> <literal type="number" pos:line="10" pos:column="63">0<pos:position pos:line="10" pos:column="64"/></literal></expr>)<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65"> <block pos:line="10" pos:column="66">{

        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">details<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">me<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">FreeAddrInfo<pos:position pos:line="12" pos:column="32"/></name></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">gai<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="14" pos:column="9">PROF_stop<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">comm_accept<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">ignoreErrno<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">errno<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">debugs<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="number" pos:line="17" pos:column="20">50<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">5<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="27">"comm_old_accept: FD "<pos:position pos:line="17" pos:column="49"/></literal> <operator pos:line="17" pos:column="50">&lt;&lt;<pos:position pos:line="17" pos:column="58"/></operator> <name pos:line="17" pos:column="53">fd<pos:position pos:line="17" pos:column="55"/></name> <operator pos:line="17" pos:column="56">&lt;&lt;<pos:position pos:line="17" pos:column="64"/></operator> <literal type="string" pos:line="17" pos:column="59">": "<pos:position pos:line="17" pos:column="63"/></literal> <operator pos:line="17" pos:column="64">&lt;&lt;<pos:position pos:line="17" pos:column="72"/></operator> <call><name pos:line="17" pos:column="67">xstrerror<pos:position pos:line="17" pos:column="76"/></name><argument_list pos:line="17" pos:column="76">()<pos:position pos:line="17" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">COMM_NOMESSAGE<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><name pos:line="19" pos:column="20">ENFILE<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">==<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">errno<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">||<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="39">EMFILE<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">==<pos:position pos:line="19" pos:column="48"/></operator> <name pos:line="19" pos:column="49">errno<pos:position pos:line="19" pos:column="54"/></name></expr>)<pos:position pos:line="19" pos:column="55"/></condition><then pos:line="19" pos:column="55"> <block pos:line="19" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">50<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="24">3<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"comm_old_accept: FD "<pos:position pos:line="20" pos:column="49"/></literal> <operator pos:line="20" pos:column="50">&lt;&lt;<pos:position pos:line="20" pos:column="58"/></operator> <name pos:line="20" pos:column="53">fd<pos:position pos:line="20" pos:column="55"/></name> <operator pos:line="20" pos:column="56">&lt;&lt;<pos:position pos:line="20" pos:column="64"/></operator> <literal type="string" pos:line="20" pos:column="59">": "<pos:position pos:line="20" pos:column="63"/></literal> <operator pos:line="20" pos:column="64">&lt;&lt;<pos:position pos:line="20" pos:column="72"/></operator> <call><name pos:line="20" pos:column="67">xstrerror<pos:position pos:line="20" pos:column="76"/></name><argument_list pos:line="20" pos:column="76">()<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">COMM_ERROR<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if></elseif> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">debugs<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="number" pos:line="23" pos:column="20">50<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="24">1<pos:position pos:line="23" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="27">"comm_old_accept: FD "<pos:position pos:line="23" pos:column="49"/></literal> <operator pos:line="23" pos:column="50">&lt;&lt;<pos:position pos:line="23" pos:column="58"/></operator> <name pos:line="23" pos:column="53">fd<pos:position pos:line="23" pos:column="55"/></name> <operator pos:line="23" pos:column="56">&lt;&lt;<pos:position pos:line="23" pos:column="64"/></operator> <literal type="string" pos:line="23" pos:column="59">": "<pos:position pos:line="23" pos:column="63"/></literal> <operator pos:line="23" pos:column="64">&lt;&lt;<pos:position pos:line="23" pos:column="72"/></operator> <call><name pos:line="23" pos:column="67">xstrerror<pos:position pos:line="23" pos:column="76"/></name><argument_list pos:line="23" pos:column="76">()<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>
            <return pos:line="24" pos:column="13">return <expr><name pos:line="24" pos:column="20">COMM_ERROR<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></else></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">details<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">peer<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">gai<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">( <expr><name><name pos:line="30" pos:column="10">Config<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">.<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">client_ip_max_connections<pos:position pos:line="30" pos:column="42"/></name></name> <operator pos:line="30" pos:column="43">&gt;=<pos:position pos:line="30" pos:column="48"/></operator> <literal type="number" pos:line="30" pos:column="46">0<pos:position pos:line="30" pos:column="47"/></literal></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48"> <block pos:line="30" pos:column="49">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">clientdbEstablished<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">details<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">.<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">peer<pos:position pos:line="31" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="47">0<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call> <operator pos:line="31" pos:column="50">&gt;<pos:position pos:line="31" pos:column="54"/></operator> <name><name pos:line="31" pos:column="52">Config<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">.<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">client_ip_max_connections<pos:position pos:line="31" pos:column="84"/></name></name></expr>)<pos:position pos:line="31" pos:column="85"/></condition><then pos:line="31" pos:column="85"> <block pos:line="31" pos:column="86">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">50<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">DBG_IMPORTANT<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">"WARNING: "<pos:position pos:line="32" pos:column="50"/></literal> <operator pos:line="32" pos:column="51">&lt;&lt;<pos:position pos:line="32" pos:column="59"/></operator> <name><name pos:line="32" pos:column="54">details<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">.<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="62">peer<pos:position pos:line="32" pos:column="66"/></name></name> <operator pos:line="32" pos:column="67">&lt;&lt;<pos:position pos:line="32" pos:column="75"/></operator> <literal type="string" pos:line="32" pos:column="70">" attempting more than "<pos:position pos:line="32" pos:column="94"/></literal> <operator pos:line="32" pos:column="95">&lt;&lt;<pos:position pos:line="32" pos:column="103"/></operator> <name><name pos:line="32" pos:column="98">Config<pos:position pos:line="32" pos:column="104"/></name><operator pos:line="32" pos:column="104">.<pos:position pos:line="32" pos:column="105"/></operator><name pos:line="32" pos:column="105">client_ip_max_connections<pos:position pos:line="32" pos:column="130"/></name></name> <operator pos:line="32" pos:column="131">&lt;&lt;<pos:position pos:line="32" pos:column="139"/></operator> <literal type="string" pos:line="32" pos:column="134">" connections."<pos:position pos:line="32" pos:column="149"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="150"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="151"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">details<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">me<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">FreeAddrInfo<pos:position pos:line="33" pos:column="36"/></name></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">gai<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
            <return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">COMM_ERROR<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">details<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">.<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">me<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">InitAddrInfo<pos:position pos:line="38" pos:column="28"/></name></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">gai<pos:position pos:line="38" pos:column="32"/></name></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="40" pos:column="5">details<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">.<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">me<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">.<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">SetEmpty<pos:position pos:line="40" pos:column="24"/></name></name><argument_list pos:line="40" pos:column="24">()<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">getsockname<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">sock<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="23">gai<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">ai_addr<pos:position pos:line="41" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name><name pos:line="41" pos:column="38">gai<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">ai_addrlen<pos:position pos:line="41" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">details<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">.<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">me<pos:position pos:line="42" pos:column="15"/></name></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <operator pos:line="42" pos:column="18">*<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">gai<pos:position pos:line="42" pos:column="22"/></name></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">commSetCloseOnExec<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">sock<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* fdstat update */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">fd_open<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><name pos:line="47" pos:column="13">sock<pos:position pos:line="47" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="19">FD_SOCKET<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="30">"HTTP Request"<pos:position pos:line="47" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">fdd_table<pos:position pos:line="48" pos:column="14"/></name><index pos:line="48" pos:column="14">[<expr><name pos:line="48" pos:column="15">sock<pos:position pos:line="48" pos:column="19"/></name></expr>]<pos:position pos:line="48" pos:column="20"/></index></name><operator pos:line="48" pos:column="20">.<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">close_file<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <name pos:line="48" pos:column="34">NULL<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">fdd_table<pos:position pos:line="49" pos:column="14"/></name><index pos:line="49" pos:column="14">[<expr><name pos:line="49" pos:column="15">sock<pos:position pos:line="49" pos:column="19"/></name></expr>]<pos:position pos:line="49" pos:column="20"/></index></name><operator pos:line="49" pos:column="20">.<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">close_line<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="34">0<pos:position pos:line="49" pos:column="35"/></literal></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">fde<pos:position pos:line="50" pos:column="8"/></name> <modifier pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></modifier></type><name pos:line="50" pos:column="10">F<pos:position pos:line="50" pos:column="11"/></name> <init pos:line="50" pos:column="12">= <expr><operator pos:line="50" pos:column="14">&amp;<pos:position pos:line="50" pos:column="19"/></operator><name><name pos:line="50" pos:column="15">fd_table<pos:position pos:line="50" pos:column="23"/></name><index pos:line="50" pos:column="23">[<expr><name pos:line="50" pos:column="24">sock<pos:position pos:line="50" pos:column="28"/></name></expr>]<pos:position pos:line="50" pos:column="29"/></index></name></expr></init></decl>;<pos:position pos:line="50" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="51" pos:column="5">details<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">.<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">peer<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">.<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">NtoA<pos:position pos:line="51" pos:column="22"/></name></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name><name pos:line="51" pos:column="23">F<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">ipaddr<pos:position pos:line="51" pos:column="32"/></name></name></expr></argument>,<argument><expr><name pos:line="51" pos:column="33">MAX_IPSTRLEN<pos:position pos:line="51" pos:column="45"/></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">F<pos:position pos:line="52" pos:column="6"/></name><operator pos:line="52" pos:column="6">-&gt;<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="8">remote_port<pos:position pos:line="52" pos:column="19"/></name></name> <operator pos:line="52" pos:column="20">=<pos:position pos:line="52" pos:column="21"/></operator> <call><name><name pos:line="52" pos:column="22">details<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">.<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">peer<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">.<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="35">GetPort<pos:position pos:line="52" pos:column="42"/></name></name><argument_list pos:line="52" pos:column="42">()<pos:position pos:line="52" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="53" pos:column="5">F<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">-&gt;<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="8">local_addr<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">.<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">SetPort<pos:position pos:line="53" pos:column="26"/></name></name><argument_list pos:line="53" pos:column="26">(<argument><expr><call><name><name pos:line="53" pos:column="27">details<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">.<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="35">me<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">.<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">GetPort<pos:position pos:line="53" pos:column="45"/></name></name><argument_list pos:line="53" pos:column="45">()<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">F<pos:position pos:line="54" pos:column="6"/></name><operator pos:line="54" pos:column="6">-&gt;<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="8">sock_family<pos:position pos:line="54" pos:column="19"/></name></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <ternary><condition><expr><call><name><name pos:line="54" pos:column="22">details<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">.<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">me<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">.<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="33">IsIPv6<pos:position pos:line="54" pos:column="39"/></name></name><argument_list pos:line="54" pos:column="39">()<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr>?<pos:position pos:line="54" pos:column="42"/></condition><then><expr><name pos:line="54" pos:column="42">AF_INET6<pos:position pos:line="54" pos:column="50"/></name></expr></then><else pos:line="54" pos:column="50">:<expr><name pos:line="54" pos:column="51">AF_INET<pos:position pos:line="54" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="55" pos:column="5">details<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">me<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">.<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">FreeAddrInfo<pos:position pos:line="55" pos:column="28"/></name></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name pos:line="55" pos:column="29">gai<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="57" pos:column="5">commSetNonBlocking<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">sock<pos:position pos:line="57" pos:column="28"/></name></expr></argument>)<pos:position pos:line="57" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/* IFF the socket is (tproxy) transparent, pass the flag down to allow spoofing */</comment>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">F<pos:position pos:line="60" pos:column="6"/></name><operator pos:line="60" pos:column="6">-&gt;<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="8">flags<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">.<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">transparent<pos:position pos:line="60" pos:column="25"/></name></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <name><name pos:line="60" pos:column="28">fd_table<pos:position pos:line="60" pos:column="36"/></name><index pos:line="60" pos:column="36">[<expr><name pos:line="60" pos:column="37">fd<pos:position pos:line="60" pos:column="39"/></name></expr>]<pos:position pos:line="60" pos:column="40"/></index></name><operator pos:line="60" pos:column="40">.<pos:position pos:line="60" pos:column="41"/></operator><name><name pos:line="60" pos:column="41">flags<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">.<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="47">transparent<pos:position pos:line="60" pos:column="58"/></name></name></expr>;<pos:position pos:line="60" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">PROF_stop<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">comm_accept<pos:position pos:line="62" pos:column="26"/></name></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">sock<pos:position pos:line="63" pos:column="16"/></name></expr>;<pos:position pos:line="63" pos:column="17"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2942_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">store_client_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">storeClientType<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list> <specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* The needed offset isn't in memory
     * XXX TODO: this is wrong for range requests
     * as the needed offset may *not* be 0, AND
     * offset 0 in the memory object is the HTTP headers.
     */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">mem_obj<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">inmem_lo<pos:position pos:line="10" pos:column="26"/></name></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">STORE_DISK_CLIENT<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">EBIT_TEST<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">flags<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">ENTRY_ABORTED<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <block pos:line="13" pos:column="42">{
        <comment type="block" pos:line="14" pos:column="9">/* I don't think we should be adding clients to aborted entries */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">20<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"storeClientType: adding to ENTRY_ABORTED entry"<pos:position pos:line="15" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">STORE_MEM_CLIENT<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">store_status<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">==<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">STORE_OK<pos:position pos:line="19" pos:column="33"/></name></expr>)<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <block pos:line="19" pos:column="35">{
        <comment type="block" pos:line="20" pos:column="9">/* the object has completed. */</comment>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">mem_obj<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">inmem_lo<pos:position pos:line="22" pos:column="30"/></name></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <literal type="number" pos:line="22" pos:column="34">0<pos:position pos:line="22" pos:column="35"/></literal> <operator pos:line="22" pos:column="36">&amp;&amp;<pos:position pos:line="22" pos:column="46"/></operator> <operator pos:line="22" pos:column="39">!<pos:position pos:line="22" pos:column="40"/></operator><call><name pos:line="22" pos:column="40">isEmpty<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">()<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50">
            <comment type="block" pos:line="23" pos:column="13">/* hot object */</comment>
            <block type="pseudo"><return pos:line="24" pos:column="13">return <expr><name pos:line="24" pos:column="20">STORE_MEM_CLIENT<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></return></block></then>
        <else pos:line="25" pos:column="9">else
            <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">STORE_DISK_CLIENT<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></return></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* here and past, entry is STORE_PENDING */</comment>
    <comment type="block" pos:line="30" pos:column="5">/*
     * If this is the first client, let it be the mem client
     */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">mem_obj<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">nclients<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">==<pos:position pos:line="33" pos:column="29"/></operator> <literal type="number" pos:line="33" pos:column="30">1<pos:position pos:line="33" pos:column="31"/></literal></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32">
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">STORE_MEM_CLIENT<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></return></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/*
     * If there is no disk file to open yet, we must make this a
     * mem client.  If we can't open the swapin file before writing
     * to the client, there is no guarantee that we will be able
     * to open it later when we really need it.
     */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">swap_status<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">==<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">SWAPOUT_NONE<pos:position pos:line="42" pos:column="36"/></name></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">STORE_MEM_CLIENT<pos:position pos:line="43" pos:column="32"/></name></expr>;<pos:position pos:line="43" pos:column="33"/></return></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/*
     * otherwise, make subsequent clients read from disk so they
     * can not delay the first, and vice-versa.
     */</comment>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">STORE_DISK_CLIENT<pos:position pos:line="49" pos:column="29"/></name></expr>;<pos:position pos:line="49" pos:column="30"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

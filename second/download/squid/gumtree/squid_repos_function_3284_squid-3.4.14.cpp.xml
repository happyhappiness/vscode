<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3284_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">mem_node<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">canAccept<pos:position pos:line="2" pos:column="20"/></name></name> <parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">int64_t<pos:position pos:line="2" pos:column="29"/></name> <specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">location<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list> <specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">location<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">==<pos:position pos:line="4" pos:column="20"/></operator> <call><name pos:line="4" pos:column="21">end<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call> <operator pos:line="4" pos:column="27">&amp;&amp;<pos:position pos:line="4" pos:column="37"/></operator> <call><name pos:line="4" pos:column="30">space<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call> <operator pos:line="4" pos:column="38">&gt;<pos:position pos:line="4" pos:column="42"/></operator> <literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr>)<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">true<pos:position pos:line="5" pos:column="20"/></literal></expr>;<pos:position pos:line="5" pos:column="21"/></return></block></then></if>

    <return pos:line="7" pos:column="5">return <expr><literal type="boolean" pos:line="7" pos:column="12">false<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

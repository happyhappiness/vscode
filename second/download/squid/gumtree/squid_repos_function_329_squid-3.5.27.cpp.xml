<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_329_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier></type> <name><name pos:line="2" pos:column="28">argv<pos:position pos:line="2" pos:column="32"/></name><index pos:line="2" pos:column="32">[]<pos:position pos:line="2" pos:column="34"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">6400<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">user<pos:position pos:line="5" pos:column="15"/></name></decl>, <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">domain<pos:position pos:line="5" pos:column="24"/></name></decl>, <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="27">group<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">up<pos:position pos:line="6" pos:column="13"/></name><init pos:line="6" pos:column="13">=<expr><name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="21">dp<pos:position pos:line="6" pos:column="23"/></name><init pos:line="6" pos:column="23">=<expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="31">np<pos:position pos:line="6" pos:column="33"/></name><init pos:line="6" pos:column="33">=<expr><name pos:line="6" pos:column="34">NULL<pos:position pos:line="6" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">nuser<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">nuser8<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="35">netbios<pos:position pos:line="7" pos:column="42"/></name></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">opt<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">main_args<pos:position pos:line="9" pos:column="21"/></name></name></type> <name pos:line="9" pos:column="22">margs<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">setbuf<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">stdout<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">setbuf<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">stdin<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">init_args<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><operator pos:line="14" pos:column="15">&amp;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="16">margs<pos:position pos:line="14" pos:column="21"/></name></expr></argument>)<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal> <operator pos:line="16" pos:column="15">!=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">opt<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">getopt<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">argc<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">argv<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="44">"diasg:D:N:S:u:U:t:T:p:l:b:m:h"<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call><operator pos:line="16" pos:column="76">)<pos:position pos:line="16" pos:column="77"/></operator></expr>)<pos:position pos:line="16" pos:column="78"/></condition> <block pos:line="16" pos:column="79">{
        <switch pos:line="17" pos:column="9">switch <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">opt<pos:position pos:line="17" pos:column="20"/></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition> <block pos:line="17" pos:column="22">{
        <case pos:line="18" pos:column="9">case <expr><literal type="char" pos:line="18" pos:column="14">'d'<pos:position pos:line="18" pos:column="17"/></literal></expr>:<pos:position pos:line="18" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="19" pos:column="13">debug_enabled<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">1<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>
        <case pos:line="21" pos:column="9">case <expr><literal type="char" pos:line="21" pos:column="14">'i'<pos:position pos:line="21" pos:column="17"/></literal></expr>:<pos:position pos:line="21" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="22" pos:column="13">log_enabled<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
            <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
        <case pos:line="24" pos:column="9">case <expr><literal type="char" pos:line="24" pos:column="14">'a'<pos:position pos:line="24" pos:column="17"/></literal></expr>:<pos:position pos:line="24" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">margs<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">rc_allow<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">1<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
            <break pos:line="26" pos:column="13">break;<pos:position pos:line="26" pos:column="19"/></break>
        <case pos:line="27" pos:column="9">case <expr><literal type="char" pos:line="27" pos:column="14">'s'<pos:position pos:line="27" pos:column="17"/></literal></expr>:<pos:position pos:line="27" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">margs<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">ssl<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">char<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">*<pos:position pos:line="28" pos:column="32"/></operator><operator pos:line="28" pos:column="32">)<pos:position pos:line="28" pos:column="33"/></operator> <literal type="string" pos:line="28" pos:column="34">"yes"<pos:position pos:line="28" pos:column="39"/></literal></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>
        <case pos:line="30" pos:column="9">case <expr><literal type="char" pos:line="30" pos:column="14">'g'<pos:position pos:line="30" pos:column="17"/></literal></expr>:<pos:position pos:line="30" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">margs<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">glist<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <call><name pos:line="31" pos:column="27">xstrdup<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">optarg<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>
        <case pos:line="33" pos:column="9">case <expr><literal type="char" pos:line="33" pos:column="14">'D'<pos:position pos:line="33" pos:column="17"/></literal></expr>:<pos:position pos:line="33" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">margs<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">.<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">ddomain<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <call><name pos:line="34" pos:column="29">xstrdup<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">optarg<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
            <break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break>
        <case pos:line="36" pos:column="9">case <expr><literal type="char" pos:line="36" pos:column="14">'N'<pos:position pos:line="36" pos:column="17"/></literal></expr>:<pos:position pos:line="36" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">margs<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">nlist<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">xstrdup<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">optarg<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>
        <case pos:line="39" pos:column="9">case <expr><literal type="char" pos:line="39" pos:column="14">'u'<pos:position pos:line="39" pos:column="17"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">margs<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">.<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">luser<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <call><name pos:line="40" pos:column="27">xstrdup<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">optarg<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
        <case pos:line="42" pos:column="9">case <expr><literal type="char" pos:line="42" pos:column="14">'U'<pos:position pos:line="42" pos:column="17"/></literal></expr>:<pos:position pos:line="42" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">margs<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">.<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">ulist<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <call><name pos:line="43" pos:column="27">xstrdup<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">optarg<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
            <break pos:line="44" pos:column="13">break;<pos:position pos:line="44" pos:column="19"/></break>
        <case pos:line="45" pos:column="9">case <expr><literal type="char" pos:line="45" pos:column="14">'t'<pos:position pos:line="45" pos:column="17"/></literal></expr>:<pos:position pos:line="45" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">margs<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">.<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">ulist<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <call><name pos:line="46" pos:column="27">xstrdup<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">optarg<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
            <break pos:line="47" pos:column="13">break;<pos:position pos:line="47" pos:column="19"/></break>
        <case pos:line="48" pos:column="9">case <expr><literal type="char" pos:line="48" pos:column="14">'T'<pos:position pos:line="48" pos:column="17"/></literal></expr>:<pos:position pos:line="48" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">margs<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">.<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">tlist<pos:position pos:line="49" pos:column="24"/></name></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <call><name pos:line="49" pos:column="27">xstrdup<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">optarg<pos:position pos:line="49" pos:column="41"/></name></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt>
            <break pos:line="50" pos:column="13">break;<pos:position pos:line="50" pos:column="19"/></break>
        <case pos:line="51" pos:column="9">case <expr><literal type="char" pos:line="51" pos:column="14">'p'<pos:position pos:line="51" pos:column="17"/></literal></expr>:<pos:position pos:line="51" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="52" pos:column="13">margs<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">.<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">lpass<pos:position pos:line="52" pos:column="24"/></name></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <call><name pos:line="52" pos:column="27">xstrdup<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">optarg<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
            <comment type="block" pos:line="53" pos:column="13">/* Hide Password */</comment>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">memset<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">optarg<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="28">'X'<pos:position pos:line="54" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="33">strlen<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name pos:line="54" pos:column="40">optarg<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
            <break pos:line="55" pos:column="13">break;<pos:position pos:line="55" pos:column="19"/></break>
        <case pos:line="56" pos:column="9">case <expr><literal type="char" pos:line="56" pos:column="14">'l'<pos:position pos:line="56" pos:column="17"/></literal></expr>:<pos:position pos:line="56" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">margs<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">lurl<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <call><name pos:line="57" pos:column="26">xstrdup<pos:position pos:line="57" pos:column="33"/></name><argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">optarg<pos:position pos:line="57" pos:column="40"/></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
            <break pos:line="58" pos:column="13">break;<pos:position pos:line="58" pos:column="19"/></break>
        <case pos:line="59" pos:column="9">case <expr><literal type="char" pos:line="59" pos:column="14">'b'<pos:position pos:line="59" pos:column="17"/></literal></expr>:<pos:position pos:line="59" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">margs<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">.<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="19">lbind<pos:position pos:line="60" pos:column="24"/></name></name> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <call><name pos:line="60" pos:column="27">xstrdup<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><name pos:line="60" pos:column="35">optarg<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>
            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>
        <case pos:line="62" pos:column="9">case <expr><literal type="char" pos:line="62" pos:column="14">'m'<pos:position pos:line="62" pos:column="17"/></literal></expr>:<pos:position pos:line="62" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">margs<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">.<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="19">mdepth<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <call><name pos:line="63" pos:column="28">atoi<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">optarg<pos:position pos:line="63" pos:column="39"/></name></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
            <break pos:line="64" pos:column="13">break;<pos:position pos:line="64" pos:column="19"/></break>
        <case pos:line="65" pos:column="9">case <expr><literal type="char" pos:line="65" pos:column="14">'S'<pos:position pos:line="65" pos:column="17"/></literal></expr>:<pos:position pos:line="65" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">margs<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">.<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="19">llist<pos:position pos:line="66" pos:column="24"/></name></name> <operator pos:line="66" pos:column="25">=<pos:position pos:line="66" pos:column="26"/></operator> <call><name pos:line="66" pos:column="27">xstrdup<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">optarg<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="43"/></expr_stmt>
            <break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break>
        <case pos:line="68" pos:column="9">case <expr><literal type="char" pos:line="68" pos:column="14">'h'<pos:position pos:line="68" pos:column="17"/></literal></expr>:<pos:position pos:line="68" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">fprintf<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">stderr<pos:position pos:line="69" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="29">"Usage: \n"<pos:position pos:line="69" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">fprintf<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><name pos:line="70" pos:column="21">stderr<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="29">"squid_kerb_ldap [-d] [-i] -g group list [-D domain] [-N netbios domain map] [-s] [-u ldap user] [-p ldap user password] [-l ldap url] [-b ldap bind path] [-a] [-m max depth] [-h]\n"<pos:position pos:line="70" pos:column="211"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="212"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="213"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">fprintf<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">stderr<pos:position pos:line="71" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="29">"-d full debug\n"<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">fprintf<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name pos:line="72" pos:column="21">stderr<pos:position pos:line="72" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="29">"-i informational messages\n"<pos:position pos:line="72" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">fprintf<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">stderr<pos:position pos:line="73" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="29">"-g group list\n"<pos:position pos:line="73" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">fprintf<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">stderr<pos:position pos:line="74" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="29">"-t group list (only group name hex UTF-8 format)\n"<pos:position pos:line="74" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">fprintf<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">stderr<pos:position pos:line="75" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="29">"-T group list (all in hex UTF-8 format - except seperator @)\n"<pos:position pos:line="75" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">fprintf<pos:position pos:line="76" pos:column="20"/></name><argument_list pos:line="76" pos:column="20">(<argument><expr><name pos:line="76" pos:column="21">stderr<pos:position pos:line="76" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="29">"-D default domain\n"<pos:position pos:line="76" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">fprintf<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">stderr<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="29">"-N netbios to dns domain map\n"<pos:position pos:line="77" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">fprintf<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><name pos:line="78" pos:column="21">stderr<pos:position pos:line="78" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="29">"-S ldap server to dns domain map\n"<pos:position pos:line="78" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">fprintf<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">stderr<pos:position pos:line="79" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="29">"-u ldap user\n"<pos:position pos:line="79" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">fprintf<pos:position pos:line="80" pos:column="20"/></name><argument_list pos:line="80" pos:column="20">(<argument><expr><name pos:line="80" pos:column="21">stderr<pos:position pos:line="80" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="29">"-p ldap user password\n"<pos:position pos:line="80" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">fprintf<pos:position pos:line="81" pos:column="20"/></name><argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">stderr<pos:position pos:line="81" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="29">"-l ldap url\n"<pos:position pos:line="81" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">fprintf<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><name pos:line="82" pos:column="21">stderr<pos:position pos:line="82" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="29">"-b ldap bind path\n"<pos:position pos:line="82" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">fprintf<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">stderr<pos:position pos:line="83" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="29">"-s use SSL encryption with Kerberos authentication\n"<pos:position pos:line="83" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">fprintf<pos:position pos:line="84" pos:column="20"/></name><argument_list pos:line="84" pos:column="20">(<argument><expr><name pos:line="84" pos:column="21">stderr<pos:position pos:line="84" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="29">"-a allow SSL without cert verification\n"<pos:position pos:line="84" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">fprintf<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">stderr<pos:position pos:line="85" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="29">"-m maximal depth for recursive searches\n"<pos:position pos:line="85" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">fprintf<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">stderr<pos:position pos:line="86" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="29">"-h help\n"<pos:position pos:line="86" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">fprintf<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name pos:line="87" pos:column="21">stderr<pos:position pos:line="87" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="29">"The ldap url, ldap user and ldap user password details are only used if the kerberised\n"<pos:position pos:line="87" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="121"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">fprintf<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">stderr<pos:position pos:line="88" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="29">"access fails(e.g. unknown domain) or if the username does not contain a domain part\n"<pos:position pos:line="88" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="118"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">fprintf<pos:position pos:line="89" pos:column="20"/></name><argument_list pos:line="89" pos:column="20">(<argument><expr><name pos:line="89" pos:column="21">stderr<pos:position pos:line="89" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="29">"and no default domain is provided.\n"<pos:position pos:line="89" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">fprintf<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">stderr<pos:position pos:line="90" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="29">"If the ldap url starts with ldaps:// it is either start_tls or simple SSL\n"<pos:position pos:line="90" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="108"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">fprintf<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name pos:line="91" pos:column="21">stderr<pos:position pos:line="91" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="29">"The group list can be:\n"<pos:position pos:line="91" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">fprintf<pos:position pos:line="92" pos:column="20"/></name><argument_list pos:line="92" pos:column="20">(<argument><expr><name pos:line="92" pos:column="21">stderr<pos:position pos:line="92" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="29">"group   - In this case group can be used for all keberised and non kerberised ldap servers\n"<pos:position pos:line="92" pos:column="123"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="125"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">fprintf<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">(<argument><expr><name pos:line="93" pos:column="21">stderr<pos:position pos:line="93" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="29">"group@  - In this case group can be used for all keberised ldap servers\n"<pos:position pos:line="93" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="106"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">fprintf<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">stderr<pos:position pos:line="94" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="29">"group@domain  - In this case group can be used for ldap servers of domain domain\n"<pos:position pos:line="94" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="115"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">fprintf<pos:position pos:line="95" pos:column="20"/></name><argument_list pos:line="95" pos:column="20">(<argument><expr><name pos:line="95" pos:column="21">stderr<pos:position pos:line="95" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="29">"group1@domain1:group2@domain2:group3@:group4  - A list is build with a colon as seperator\n"<pos:position pos:line="95" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="124"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">fprintf<pos:position pos:line="96" pos:column="20"/></name><argument_list pos:line="96" pos:column="20">(<argument><expr><name pos:line="96" pos:column="21">stderr<pos:position pos:line="96" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="29">"Group membership is determined with AD servers through the users memberof attribute which\n"<pos:position pos:line="96" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="124"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">fprintf<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">stderr<pos:position pos:line="97" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="29">"is followed to the top (e.g. if the group is a member of a group)\n"<pos:position pos:line="97" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="100"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">fprintf<pos:position pos:line="98" pos:column="20"/></name><argument_list pos:line="98" pos:column="20">(<argument><expr><name pos:line="98" pos:column="21">stderr<pos:position pos:line="98" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="29">"Group membership is determined with non AD servers through the users memberuid (assuming\n"<pos:position pos:line="98" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="123"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">fprintf<pos:position pos:line="99" pos:column="20"/></name><argument_list pos:line="99" pos:column="20">(<argument><expr><name pos:line="99" pos:column="21">stderr<pos:position pos:line="99" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="29">"PosixGroup) or primary group membership (assuming PosixAccount)\n"<pos:position pos:line="99" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">fprintf<pos:position pos:line="100" pos:column="20"/></name><argument_list pos:line="100" pos:column="20">(<argument><expr><name pos:line="100" pos:column="21">stderr<pos:position pos:line="100" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="29">"The ldap server list can be:\n"<pos:position pos:line="100" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">fprintf<pos:position pos:line="101" pos:column="20"/></name><argument_list pos:line="101" pos:column="20">(<argument><expr><name pos:line="101" pos:column="21">stderr<pos:position pos:line="101" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="29">"server - In this case server can be used for all Kerberos domains\n"<pos:position pos:line="101" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="100"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">fprintf<pos:position pos:line="102" pos:column="20"/></name><argument_list pos:line="102" pos:column="20">(<argument><expr><name pos:line="102" pos:column="21">stderr<pos:position pos:line="102" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="29">"server@  - In this case server can be used for all Kerberos domains\n"<pos:position pos:line="102" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="102"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">fprintf<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><name pos:line="103" pos:column="21">stderr<pos:position pos:line="103" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="29">"server@domain  - In this case server can be used for Kerberos domain domain\n"<pos:position pos:line="103" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="110"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">fprintf<pos:position pos:line="104" pos:column="20"/></name><argument_list pos:line="104" pos:column="20">(<argument><expr><name pos:line="104" pos:column="21">stderr<pos:position pos:line="104" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="29">"server1a@domain1:server1b@domain1:server2@domain2:server3@:server4 - A list is build with a colon as seperator\n"<pos:position pos:line="104" pos:column="143"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="144"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="145"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">clean_args<pos:position pos:line="105" pos:column="23"/></name><argument_list pos:line="105" pos:column="23">(<argument><expr><operator pos:line="105" pos:column="24">&amp;<pos:position pos:line="105" pos:column="29"/></operator><name pos:line="105" pos:column="25">margs<pos:position pos:line="105" pos:column="30"/></name></expr></argument>)<pos:position pos:line="105" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">exit<pos:position pos:line="106" pos:column="17"/></name><argument_list pos:line="106" pos:column="17">(<argument><expr><literal type="number" pos:line="106" pos:column="18">0<pos:position pos:line="106" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="21"/></expr_stmt>
        <default pos:line="107" pos:column="9">default:<pos:position pos:line="107" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">warn<pos:position pos:line="108" pos:column="17"/></name><argument_list pos:line="108" pos:column="17">(<argument><expr><operator pos:line="108" pos:column="18">(<pos:position pos:line="108" pos:column="19"/></operator><name pos:line="108" pos:column="19">char<pos:position pos:line="108" pos:column="23"/></name> <operator pos:line="108" pos:column="24">*<pos:position pos:line="108" pos:column="25"/></operator><operator pos:line="108" pos:column="25">)<pos:position pos:line="108" pos:column="26"/></operator> <literal type="string" pos:line="108" pos:column="27">"%s| %s: WARNING: unknown option: -%c.\n"<pos:position pos:line="108" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="108" pos:column="70">LogTime<pos:position pos:line="108" pos:column="77"/></name><argument_list pos:line="108" pos:column="77">()<pos:position pos:line="108" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="108" pos:column="81">PROGRAM<pos:position pos:line="108" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="90">opt<pos:position pos:line="108" pos:column="93"/></name></expr></argument>)<pos:position pos:line="108" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="95"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></switch>
    }<pos:position pos:line="110" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">debug<pos:position pos:line="112" pos:column="10"/></name><argument_list pos:line="112" pos:column="10">(<argument><expr><operator pos:line="112" pos:column="11">(<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">char<pos:position pos:line="112" pos:column="16"/></name> <operator pos:line="112" pos:column="17">*<pos:position pos:line="112" pos:column="18"/></operator><operator pos:line="112" pos:column="18">)<pos:position pos:line="112" pos:column="19"/></operator> <literal type="string" pos:line="112" pos:column="20">"%s| %s: INFO: Starting version %s\n"<pos:position pos:line="112" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="112" pos:column="59">LogTime<pos:position pos:line="112" pos:column="66"/></name><argument_list pos:line="112" pos:column="66">()<pos:position pos:line="112" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="112" pos:column="70">PROGRAM<pos:position pos:line="112" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="79">KERBEROS_LDAP_GROUP_VERSION<pos:position pos:line="112" pos:column="106"/></name></expr></argument>)<pos:position pos:line="112" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="108"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="113" pos:column="5">int<pos:position pos:line="113" pos:column="8"/></name></type> <name pos:line="113" pos:column="9">gopt<pos:position pos:line="113" pos:column="13"/></name> <init pos:line="113" pos:column="14">= <expr><literal type="number" pos:line="113" pos:column="16">0<pos:position pos:line="113" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="113" pos:column="18"/></decl_stmt>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><call><name pos:line="114" pos:column="9">create_gd<pos:position pos:line="114" pos:column="18"/></name><argument_list pos:line="114" pos:column="18">(<argument><expr><operator pos:line="114" pos:column="19">&amp;<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="20">margs<pos:position pos:line="114" pos:column="25"/></name></expr></argument>)<pos:position pos:line="114" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="27"/></condition><then pos:line="114" pos:column="27"> <block pos:line="114" pos:column="28">{
        <if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">( <expr><name><name pos:line="115" pos:column="14">margs<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">.<pos:position pos:line="115" pos:column="20"/></operator><name pos:line="115" pos:column="20">glist<pos:position pos:line="115" pos:column="25"/></name></name> <operator pos:line="115" pos:column="26">!=<pos:position pos:line="115" pos:column="28"/></operator> <name pos:line="115" pos:column="29">NULL<pos:position pos:line="115" pos:column="33"/></name></expr> )<pos:position pos:line="115" pos:column="35"/></condition><then pos:line="115" pos:column="35"> <block pos:line="115" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">debug<pos:position pos:line="116" pos:column="18"/></name><argument_list pos:line="116" pos:column="18">(<argument><expr><operator pos:line="116" pos:column="19">(<pos:position pos:line="116" pos:column="20"/></operator><name pos:line="116" pos:column="20">char<pos:position pos:line="116" pos:column="24"/></name> <operator pos:line="116" pos:column="25">*<pos:position pos:line="116" pos:column="26"/></operator><operator pos:line="116" pos:column="26">)<pos:position pos:line="116" pos:column="27"/></operator> <literal type="string" pos:line="116" pos:column="28">"%s| %s: FATAL: Error in group list: %s\n"<pos:position pos:line="116" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="116" pos:column="72">LogTime<pos:position pos:line="116" pos:column="79"/></name><argument_list pos:line="116" pos:column="79">()<pos:position pos:line="116" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="116" pos:column="83">PROGRAM<pos:position pos:line="116" pos:column="90"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="116" pos:column="92">margs<pos:position pos:line="116" pos:column="97"/></name><operator pos:line="116" pos:column="97">.<pos:position pos:line="116" pos:column="98"/></operator><name pos:line="116" pos:column="98">glist<pos:position pos:line="116" pos:column="103"/></name></name></expr> ?<pos:position pos:line="116" pos:column="105"/></condition><then pos:line="116" pos:column="105"> <expr><name><name pos:line="116" pos:column="106">margs<pos:position pos:line="116" pos:column="111"/></name><operator pos:line="116" pos:column="111">.<pos:position pos:line="116" pos:column="112"/></operator><name pos:line="116" pos:column="112">glist<pos:position pos:line="116" pos:column="117"/></name></name></expr> <pos:position pos:line="116" pos:column="118"/></then><else pos:line="116" pos:column="118">: <expr><literal type="string" pos:line="116" pos:column="120">"NULL"<pos:position pos:line="116" pos:column="126"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="116" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="128"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">SEND_ERR<pos:position pos:line="117" pos:column="21"/></name><argument_list pos:line="117" pos:column="21">(<argument><expr><literal type="string" pos:line="117" pos:column="22">""<pos:position pos:line="117" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="118" pos:column="13">clean_args<pos:position pos:line="118" pos:column="23"/></name><argument_list pos:line="118" pos:column="23">(<argument><expr><operator pos:line="118" pos:column="24">&amp;<pos:position pos:line="118" pos:column="29"/></operator><name pos:line="118" pos:column="25">margs<pos:position pos:line="118" pos:column="30"/></name></expr></argument>)<pos:position pos:line="118" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">exit<pos:position pos:line="119" pos:column="17"/></name><argument_list pos:line="119" pos:column="17">(<argument><expr><literal type="number" pos:line="119" pos:column="18">1<pos:position pos:line="119" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="120" pos:column="10"/></block></then> <else pos:line="120" pos:column="11">else <block pos:line="120" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="121" pos:column="13">debug<pos:position pos:line="121" pos:column="18"/></name><argument_list pos:line="121" pos:column="18">(<argument><expr><operator pos:line="121" pos:column="19">(<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="20">char<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">*<pos:position pos:line="121" pos:column="26"/></operator><operator pos:line="121" pos:column="26">)<pos:position pos:line="121" pos:column="27"/></operator> <literal type="string" pos:line="121" pos:column="28">"%s| %s: INFO: no group list given expect it from stdin\n"<pos:position pos:line="121" pos:column="86"/></literal></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="88">LogTime<pos:position pos:line="121" pos:column="95"/></name><argument_list pos:line="121" pos:column="95">()<pos:position pos:line="121" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="121" pos:column="99">PROGRAM<pos:position pos:line="121" pos:column="106"/></name></expr></argument>)<pos:position pos:line="121" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="108"/></expr_stmt>
            <expr_stmt><expr><name pos:line="122" pos:column="13">gopt<pos:position pos:line="122" pos:column="17"/></name> <operator pos:line="122" pos:column="18">=<pos:position pos:line="122" pos:column="19"/></operator> <literal type="number" pos:line="122" pos:column="20">1<pos:position pos:line="122" pos:column="21"/></literal></expr>;<pos:position pos:line="122" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="123" pos:column="10"/></block></else></if>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>
    <if pos:line="125" pos:column="5">if <condition pos:line="125" pos:column="8">(<expr><call><name pos:line="125" pos:column="9">create_nd<pos:position pos:line="125" pos:column="18"/></name><argument_list pos:line="125" pos:column="18">(<argument><expr><operator pos:line="125" pos:column="19">&amp;<pos:position pos:line="125" pos:column="24"/></operator><name pos:line="125" pos:column="20">margs<pos:position pos:line="125" pos:column="25"/></name></expr></argument>)<pos:position pos:line="125" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="27"/></condition><then pos:line="125" pos:column="27"> <block pos:line="125" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="126" pos:column="9">debug<pos:position pos:line="126" pos:column="14"/></name><argument_list pos:line="126" pos:column="14">(<argument><expr><operator pos:line="126" pos:column="15">(<pos:position pos:line="126" pos:column="16"/></operator><name pos:line="126" pos:column="16">char<pos:position pos:line="126" pos:column="20"/></name> <operator pos:line="126" pos:column="21">*<pos:position pos:line="126" pos:column="22"/></operator><operator pos:line="126" pos:column="22">)<pos:position pos:line="126" pos:column="23"/></operator> <literal type="string" pos:line="126" pos:column="24">"%s| %s: FATAL: Error in netbios list: %s\n"<pos:position pos:line="126" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="126" pos:column="70">LogTime<pos:position pos:line="126" pos:column="77"/></name><argument_list pos:line="126" pos:column="77">()<pos:position pos:line="126" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="126" pos:column="81">PROGRAM<pos:position pos:line="126" pos:column="88"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="126" pos:column="90">margs<pos:position pos:line="126" pos:column="95"/></name><operator pos:line="126" pos:column="95">.<pos:position pos:line="126" pos:column="96"/></operator><name pos:line="126" pos:column="96">nlist<pos:position pos:line="126" pos:column="101"/></name></name></expr> ?<pos:position pos:line="126" pos:column="103"/></condition><then pos:line="126" pos:column="103"> <expr><name><name pos:line="126" pos:column="104">margs<pos:position pos:line="126" pos:column="109"/></name><operator pos:line="126" pos:column="109">.<pos:position pos:line="126" pos:column="110"/></operator><name pos:line="126" pos:column="110">nlist<pos:position pos:line="126" pos:column="115"/></name></name></expr> <pos:position pos:line="126" pos:column="116"/></then><else pos:line="126" pos:column="116">: <expr><literal type="string" pos:line="126" pos:column="118">"NULL"<pos:position pos:line="126" pos:column="124"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="126" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="126"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">SEND_ERR<pos:position pos:line="127" pos:column="17"/></name><argument_list pos:line="127" pos:column="17">(<argument><expr><literal type="string" pos:line="127" pos:column="18">""<pos:position pos:line="127" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">clean_args<pos:position pos:line="128" pos:column="19"/></name><argument_list pos:line="128" pos:column="19">(<argument><expr><operator pos:line="128" pos:column="20">&amp;<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="21">margs<pos:position pos:line="128" pos:column="26"/></name></expr></argument>)<pos:position pos:line="128" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">exit<pos:position pos:line="129" pos:column="13"/></name><argument_list pos:line="129" pos:column="13">(<argument><expr><literal type="number" pos:line="129" pos:column="14">1<pos:position pos:line="129" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if>
    <if pos:line="131" pos:column="5">if <condition pos:line="131" pos:column="8">(<expr><call><name pos:line="131" pos:column="9">create_ls<pos:position pos:line="131" pos:column="18"/></name><argument_list pos:line="131" pos:column="18">(<argument><expr><operator pos:line="131" pos:column="19">&amp;<pos:position pos:line="131" pos:column="24"/></operator><name pos:line="131" pos:column="20">margs<pos:position pos:line="131" pos:column="25"/></name></expr></argument>)<pos:position pos:line="131" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="27"/></condition><then pos:line="131" pos:column="27"> <block pos:line="131" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">debug<pos:position pos:line="132" pos:column="14"/></name><argument_list pos:line="132" pos:column="14">(<argument><expr><operator pos:line="132" pos:column="15">(<pos:position pos:line="132" pos:column="16"/></operator><name pos:line="132" pos:column="16">char<pos:position pos:line="132" pos:column="20"/></name> <operator pos:line="132" pos:column="21">*<pos:position pos:line="132" pos:column="22"/></operator><operator pos:line="132" pos:column="22">)<pos:position pos:line="132" pos:column="23"/></operator> <literal type="string" pos:line="132" pos:column="24">"%s| %s: Error in ldap server list: %s\n"<pos:position pos:line="132" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="132" pos:column="67">LogTime<pos:position pos:line="132" pos:column="74"/></name><argument_list pos:line="132" pos:column="74">()<pos:position pos:line="132" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="132" pos:column="78">PROGRAM<pos:position pos:line="132" pos:column="85"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="132" pos:column="87">margs<pos:position pos:line="132" pos:column="92"/></name><operator pos:line="132" pos:column="92">.<pos:position pos:line="132" pos:column="93"/></operator><name pos:line="132" pos:column="93">llist<pos:position pos:line="132" pos:column="98"/></name></name></expr> ?<pos:position pos:line="132" pos:column="100"/></condition><then pos:line="132" pos:column="100"> <expr><name><name pos:line="132" pos:column="101">margs<pos:position pos:line="132" pos:column="106"/></name><operator pos:line="132" pos:column="106">.<pos:position pos:line="132" pos:column="107"/></operator><name pos:line="132" pos:column="107">llist<pos:position pos:line="132" pos:column="112"/></name></name></expr> <pos:position pos:line="132" pos:column="113"/></then><else pos:line="132" pos:column="113">: <expr><literal type="string" pos:line="132" pos:column="115">"NULL"<pos:position pos:line="132" pos:column="121"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="132" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="123"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="133" pos:column="9">SEND_ERR<pos:position pos:line="133" pos:column="17"/></name><argument_list pos:line="133" pos:column="17">(<argument><expr><literal type="string" pos:line="133" pos:column="18">""<pos:position pos:line="133" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="134" pos:column="9">clean_args<pos:position pos:line="134" pos:column="19"/></name><argument_list pos:line="134" pos:column="19">(<argument><expr><operator pos:line="134" pos:column="20">&amp;<pos:position pos:line="134" pos:column="25"/></operator><name pos:line="134" pos:column="21">margs<pos:position pos:line="134" pos:column="26"/></name></expr></argument>)<pos:position pos:line="134" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="135" pos:column="9">exit<pos:position pos:line="135" pos:column="13"/></name><argument_list pos:line="135" pos:column="13">(<argument><expr><literal type="number" pos:line="135" pos:column="14">1<pos:position pos:line="135" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if>
    <while pos:line="137" pos:column="5">while <condition pos:line="137" pos:column="11">(<expr><literal type="number" pos:line="137" pos:column="12">1<pos:position pos:line="137" pos:column="13"/></literal></expr>)<pos:position pos:line="137" pos:column="14"/></condition> <block pos:line="137" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="138" pos:column="9">char<pos:position pos:line="138" pos:column="13"/></name> <modifier pos:line="138" pos:column="14">*<pos:position pos:line="138" pos:column="15"/></modifier></type><name pos:line="138" pos:column="15">c<pos:position pos:line="138" pos:column="16"/></name></decl>;<pos:position pos:line="138" pos:column="17"/></decl_stmt>
        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><call><name pos:line="139" pos:column="13">fgets<pos:position pos:line="139" pos:column="18"/></name><argument_list pos:line="139" pos:column="18">(<argument><expr><name pos:line="139" pos:column="19">buf<pos:position pos:line="139" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="139" pos:column="24">sizeof<argument_list pos:line="139" pos:column="30">(<argument><expr><name pos:line="139" pos:column="31">buf<pos:position pos:line="139" pos:column="34"/></name></expr></argument>)<pos:position pos:line="139" pos:column="35"/></argument_list></sizeof> <operator pos:line="139" pos:column="36">-<pos:position pos:line="139" pos:column="37"/></operator> <literal type="number" pos:line="139" pos:column="38">1<pos:position pos:line="139" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="41">stdin<pos:position pos:line="139" pos:column="46"/></name></expr></argument>)<pos:position pos:line="139" pos:column="47"/></argument_list></call> <operator pos:line="139" pos:column="48">==<pos:position pos:line="139" pos:column="50"/></operator> <name pos:line="139" pos:column="51">NULL<pos:position pos:line="139" pos:column="55"/></name></expr>)<pos:position pos:line="139" pos:column="56"/></condition><then pos:line="139" pos:column="56"> <block pos:line="139" pos:column="57">{
            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><call><name pos:line="140" pos:column="17">ferror<pos:position pos:line="140" pos:column="23"/></name><argument_list pos:line="140" pos:column="23">(<argument><expr><name pos:line="140" pos:column="24">stdin<pos:position pos:line="140" pos:column="29"/></name></expr></argument>)<pos:position pos:line="140" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="31"/></condition><then pos:line="140" pos:column="31"> <block pos:line="140" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">debug<pos:position pos:line="141" pos:column="22"/></name><argument_list pos:line="141" pos:column="22">(<argument><expr><operator pos:line="141" pos:column="23">(<pos:position pos:line="141" pos:column="24"/></operator><name pos:line="141" pos:column="24">char<pos:position pos:line="141" pos:column="28"/></name> <operator pos:line="141" pos:column="29">*<pos:position pos:line="141" pos:column="30"/></operator><operator pos:line="141" pos:column="30">)<pos:position pos:line="141" pos:column="31"/></operator> <literal type="string" pos:line="141" pos:column="32">"%s| %s: FATAL: fgets() failed! dying..... errno=%d (%s)\n"<pos:position pos:line="141" pos:column="91"/></literal></expr></argument>, <argument><expr><call><name pos:line="141" pos:column="93">LogTime<pos:position pos:line="141" pos:column="100"/></name><argument_list pos:line="141" pos:column="100">()<pos:position pos:line="141" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="141" pos:column="104">PROGRAM<pos:position pos:line="141" pos:column="111"/></name></expr></argument>, <argument><expr><call><name pos:line="141" pos:column="113">ferror<pos:position pos:line="141" pos:column="119"/></name><argument_list pos:line="141" pos:column="119">(<argument><expr><name pos:line="141" pos:column="120">stdin<pos:position pos:line="141" pos:column="125"/></name></expr></argument>)<pos:position pos:line="141" pos:column="126"/></argument_list></call></expr></argument>,
                      <argument><expr><call><name pos:line="142" pos:column="23">strerror<pos:position pos:line="142" pos:column="31"/></name><argument_list pos:line="142" pos:column="31">(<argument><expr><call><name pos:line="142" pos:column="32">ferror<pos:position pos:line="142" pos:column="38"/></name><argument_list pos:line="142" pos:column="38">(<argument><expr><name pos:line="142" pos:column="39">stdin<pos:position pos:line="142" pos:column="44"/></name></expr></argument>)<pos:position pos:line="142" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="48"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="144" pos:column="17">SEND_ERR<pos:position pos:line="144" pos:column="25"/></name><argument_list pos:line="144" pos:column="25">(<argument><expr><literal type="string" pos:line="144" pos:column="26">""<pos:position pos:line="144" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="145" pos:column="17">clean_args<pos:position pos:line="145" pos:column="27"/></name><argument_list pos:line="145" pos:column="27">(<argument><expr><operator pos:line="145" pos:column="28">&amp;<pos:position pos:line="145" pos:column="33"/></operator><name pos:line="145" pos:column="29">margs<pos:position pos:line="145" pos:column="34"/></name></expr></argument>)<pos:position pos:line="145" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">exit<pos:position pos:line="146" pos:column="21"/></name><argument_list pos:line="146" pos:column="21">(<argument><expr><literal type="number" pos:line="146" pos:column="22">1<pos:position pos:line="146" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="25"/></expr_stmt>    <comment type="block" pos:line="146" pos:column="29">/* BIIG buffer */</comment>
            }<pos:position pos:line="147" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">SEND_ERR<pos:position pos:line="148" pos:column="21"/></name><argument_list pos:line="148" pos:column="21">(<argument><expr><literal type="string" pos:line="148" pos:column="22">""<pos:position pos:line="148" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">clean_args<pos:position pos:line="149" pos:column="23"/></name><argument_list pos:line="149" pos:column="23">(<argument><expr><operator pos:line="149" pos:column="24">&amp;<pos:position pos:line="149" pos:column="29"/></operator><name pos:line="149" pos:column="25">margs<pos:position pos:line="149" pos:column="30"/></name></expr></argument>)<pos:position pos:line="149" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="150" pos:column="13">exit<pos:position pos:line="150" pos:column="17"/></name><argument_list pos:line="150" pos:column="17">(<argument><expr><literal type="number" pos:line="150" pos:column="18">0<pos:position pos:line="150" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="151" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="152" pos:column="9">c<pos:position pos:line="152" pos:column="10"/></name> <operator pos:line="152" pos:column="11">=<pos:position pos:line="152" pos:column="12"/></operator> <operator pos:line="152" pos:column="13">(<pos:position pos:line="152" pos:column="14"/></operator><name pos:line="152" pos:column="14">char<pos:position pos:line="152" pos:column="18"/></name> <operator pos:line="152" pos:column="19">*<pos:position pos:line="152" pos:column="20"/></operator><operator pos:line="152" pos:column="20">)<pos:position pos:line="152" pos:column="21"/></operator> <call><name pos:line="152" pos:column="22">memchr<pos:position pos:line="152" pos:column="28"/></name><argument_list pos:line="152" pos:column="28">(<argument><expr><name pos:line="152" pos:column="29">buf<pos:position pos:line="152" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="152" pos:column="34">'\n'<pos:position pos:line="152" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="152" pos:column="40">sizeof<argument_list pos:line="152" pos:column="46">(<argument><expr><name pos:line="152" pos:column="47">buf<pos:position pos:line="152" pos:column="50"/></name></expr></argument>)<pos:position pos:line="152" pos:column="51"/></argument_list></sizeof> <operator pos:line="152" pos:column="52">-<pos:position pos:line="152" pos:column="53"/></operator> <literal type="number" pos:line="152" pos:column="54">1<pos:position pos:line="152" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="57"/></expr_stmt>
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name pos:line="153" pos:column="13">c<pos:position pos:line="153" pos:column="14"/></name></expr>)<pos:position pos:line="153" pos:column="15"/></condition><then pos:line="153" pos:column="15"> <block pos:line="153" pos:column="16">{
            <expr_stmt><expr><operator pos:line="154" pos:column="13">*<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="14">c<pos:position pos:line="154" pos:column="15"/></name> <operator pos:line="154" pos:column="16">=<pos:position pos:line="154" pos:column="17"/></operator> <literal type="char" pos:line="154" pos:column="18">'\0'<pos:position pos:line="154" pos:column="22"/></literal></expr>;<pos:position pos:line="154" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="155" pos:column="10"/></block></then> <else pos:line="155" pos:column="11">else <block pos:line="155" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="156" pos:column="13">SEND_ERR<pos:position pos:line="156" pos:column="21"/></name><argument_list pos:line="156" pos:column="21">(<argument><expr><literal type="string" pos:line="156" pos:column="22">"Invalid input. CR missing"<pos:position pos:line="156" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="157" pos:column="13">debug<pos:position pos:line="157" pos:column="18"/></name><argument_list pos:line="157" pos:column="18">(<argument><expr><operator pos:line="157" pos:column="19">(<pos:position pos:line="157" pos:column="20"/></operator><name pos:line="157" pos:column="20">char<pos:position pos:line="157" pos:column="24"/></name> <operator pos:line="157" pos:column="25">*<pos:position pos:line="157" pos:column="26"/></operator><operator pos:line="157" pos:column="26">)<pos:position pos:line="157" pos:column="27"/></operator> <literal type="string" pos:line="157" pos:column="28">"%s| %s: ERR\n"<pos:position pos:line="157" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="157" pos:column="45">LogTime<pos:position pos:line="157" pos:column="52"/></name><argument_list pos:line="157" pos:column="52">()<pos:position pos:line="157" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="157" pos:column="56">PROGRAM<pos:position pos:line="157" pos:column="63"/></name></expr></argument>)<pos:position pos:line="157" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="65"/></expr_stmt>
            <continue pos:line="158" pos:column="13">continue;<pos:position pos:line="158" pos:column="22"/></continue>
        }<pos:position pos:line="159" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="161" pos:column="9">user<pos:position pos:line="161" pos:column="13"/></name> <operator pos:line="161" pos:column="14">=<pos:position pos:line="161" pos:column="15"/></operator> <call><name pos:line="161" pos:column="16">strtok<pos:position pos:line="161" pos:column="22"/></name><argument_list pos:line="161" pos:column="22">(<argument><expr><name pos:line="161" pos:column="23">buf<pos:position pos:line="161" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="28">" \n"<pos:position pos:line="161" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="35"/></expr_stmt>
        <if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><operator pos:line="162" pos:column="13">!<pos:position pos:line="162" pos:column="14"/></operator><name pos:line="162" pos:column="14">user<pos:position pos:line="162" pos:column="18"/></name></expr>)<pos:position pos:line="162" pos:column="19"/></condition><then pos:line="162" pos:column="19"> <block pos:line="162" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="163" pos:column="13">debug<pos:position pos:line="163" pos:column="18"/></name><argument_list pos:line="163" pos:column="18">(<argument><expr><operator pos:line="163" pos:column="19">(<pos:position pos:line="163" pos:column="20"/></operator><name pos:line="163" pos:column="20">char<pos:position pos:line="163" pos:column="24"/></name> <operator pos:line="163" pos:column="25">*<pos:position pos:line="163" pos:column="26"/></operator><operator pos:line="163" pos:column="26">)<pos:position pos:line="163" pos:column="27"/></operator> <literal type="string" pos:line="163" pos:column="28">"%s| %s: INFO: No Username given\n"<pos:position pos:line="163" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="163" pos:column="65">LogTime<pos:position pos:line="163" pos:column="72"/></name><argument_list pos:line="163" pos:column="72">()<pos:position pos:line="163" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="163" pos:column="76">PROGRAM<pos:position pos:line="163" pos:column="83"/></name></expr></argument>)<pos:position pos:line="163" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="164" pos:column="13">SEND_ERR<pos:position pos:line="164" pos:column="21"/></name><argument_list pos:line="164" pos:column="21">(<argument><expr><literal type="string" pos:line="164" pos:column="22">"Invalid request. No Username"<pos:position pos:line="164" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="54"/></expr_stmt>
            <continue pos:line="165" pos:column="13">continue;<pos:position pos:line="165" pos:column="22"/></continue>
        }<pos:position pos:line="166" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="167" pos:column="9">rfc1738_unescape<pos:position pos:line="167" pos:column="25"/></name><argument_list pos:line="167" pos:column="25">(<argument><expr><name pos:line="167" pos:column="26">user<pos:position pos:line="167" pos:column="30"/></name></expr></argument>)<pos:position pos:line="167" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="168" pos:column="9">nuser<pos:position pos:line="168" pos:column="14"/></name> <operator pos:line="168" pos:column="15">=<pos:position pos:line="168" pos:column="16"/></operator> <call><name pos:line="168" pos:column="17">strchr<pos:position pos:line="168" pos:column="23"/></name><argument_list pos:line="168" pos:column="23">(<argument><expr><name pos:line="168" pos:column="24">user<pos:position pos:line="168" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="168" pos:column="30">'\\'<pos:position pos:line="168" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="36"/></expr_stmt>
        <if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><operator pos:line="169" pos:column="13">!<pos:position pos:line="169" pos:column="14"/></operator><name pos:line="169" pos:column="14">nuser<pos:position pos:line="169" pos:column="19"/></name></expr>)<pos:position pos:line="169" pos:column="20"/></condition><then pos:line="169" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><name pos:line="170" pos:column="13">nuser8<pos:position pos:line="170" pos:column="19"/></name> <operator pos:line="170" pos:column="20">=<pos:position pos:line="170" pos:column="21"/></operator> <call><name pos:line="170" pos:column="22">strstr<pos:position pos:line="170" pos:column="28"/></name><argument_list pos:line="170" pos:column="28">(<argument><expr><name pos:line="170" pos:column="29">user<pos:position pos:line="170" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="35">"%5C"<pos:position pos:line="170" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="42"/></expr_stmt></block></then></if>
        <if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><operator pos:line="171" pos:column="13">!<pos:position pos:line="171" pos:column="14"/></operator><name pos:line="171" pos:column="14">nuser<pos:position pos:line="171" pos:column="19"/></name> <operator pos:line="171" pos:column="20">&amp;&amp;<pos:position pos:line="171" pos:column="30"/></operator> <operator pos:line="171" pos:column="23">!<pos:position pos:line="171" pos:column="24"/></operator><name pos:line="171" pos:column="24">nuser8<pos:position pos:line="171" pos:column="30"/></name></expr>)<pos:position pos:line="171" pos:column="31"/></condition><then pos:line="171" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="13">nuser8<pos:position pos:line="172" pos:column="19"/></name> <operator pos:line="172" pos:column="20">=<pos:position pos:line="172" pos:column="21"/></operator> <call><name pos:line="172" pos:column="22">strstr<pos:position pos:line="172" pos:column="28"/></name><argument_list pos:line="172" pos:column="28">(<argument><expr><name pos:line="172" pos:column="29">user<pos:position pos:line="172" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="35">"%5c"<pos:position pos:line="172" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="42"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="173" pos:column="9">domain<pos:position pos:line="173" pos:column="15"/></name> <operator pos:line="173" pos:column="16">=<pos:position pos:line="173" pos:column="17"/></operator> <call><name pos:line="173" pos:column="18">strrchr<pos:position pos:line="173" pos:column="25"/></name><argument_list pos:line="173" pos:column="25">(<argument><expr><name pos:line="173" pos:column="26">user<pos:position pos:line="173" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="173" pos:column="32">'@'<pos:position pos:line="173" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="37"/></expr_stmt>
        <if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><name pos:line="174" pos:column="13">nuser<pos:position pos:line="174" pos:column="18"/></name> <operator pos:line="174" pos:column="19">||<pos:position pos:line="174" pos:column="21"/></operator> <name pos:line="174" pos:column="22">nuser8<pos:position pos:line="174" pos:column="28"/></name></expr>)<pos:position pos:line="174" pos:column="29"/></condition><then pos:line="174" pos:column="29"> <block pos:line="174" pos:column="30">{
            <if pos:line="175" pos:column="13">if <condition pos:line="175" pos:column="16">(<expr><name pos:line="175" pos:column="17">nuser<pos:position pos:line="175" pos:column="22"/></name></expr>)<pos:position pos:line="175" pos:column="23"/></condition><then pos:line="175" pos:column="23"> <block pos:line="175" pos:column="24">{
                <expr_stmt><expr><operator pos:line="176" pos:column="17">*<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="18">nuser<pos:position pos:line="176" pos:column="23"/></name> <operator pos:line="176" pos:column="24">=<pos:position pos:line="176" pos:column="25"/></operator> <literal type="char" pos:line="176" pos:column="26">'\0'<pos:position pos:line="176" pos:column="30"/></literal></expr>;<pos:position pos:line="176" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="177" pos:column="17">++<pos:position pos:line="177" pos:column="19"/></operator><name pos:line="177" pos:column="19">nuser<pos:position pos:line="177" pos:column="24"/></name></expr>;<pos:position pos:line="177" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="178" pos:column="14"/></block></then> <else pos:line="178" pos:column="15">else <block pos:line="178" pos:column="20">{
                <expr_stmt><expr><operator pos:line="179" pos:column="17">*<pos:position pos:line="179" pos:column="18"/></operator><name pos:line="179" pos:column="18">nuser8<pos:position pos:line="179" pos:column="24"/></name> <operator pos:line="179" pos:column="25">=<pos:position pos:line="179" pos:column="26"/></operator> <literal type="char" pos:line="179" pos:column="27">'\0'<pos:position pos:line="179" pos:column="31"/></literal></expr>;<pos:position pos:line="179" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><name pos:line="180" pos:column="17">nuser<pos:position pos:line="180" pos:column="22"/></name> <operator pos:line="180" pos:column="23">=<pos:position pos:line="180" pos:column="24"/></operator> <name pos:line="180" pos:column="25">nuser8<pos:position pos:line="180" pos:column="31"/></name> <operator pos:line="180" pos:column="32">+<pos:position pos:line="180" pos:column="33"/></operator> <literal type="number" pos:line="180" pos:column="34">3<pos:position pos:line="180" pos:column="35"/></literal></expr>;<pos:position pos:line="180" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="181" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="182" pos:column="13">netbios<pos:position pos:line="182" pos:column="20"/></name> <operator pos:line="182" pos:column="21">=<pos:position pos:line="182" pos:column="22"/></operator> <name pos:line="182" pos:column="23">user<pos:position pos:line="182" pos:column="27"/></name></expr>;<pos:position pos:line="182" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="183" pos:column="13">up<pos:position pos:line="183" pos:column="15"/></name> <operator pos:line="183" pos:column="16">=<pos:position pos:line="183" pos:column="17"/></operator> <call><name pos:line="183" pos:column="18">xstrdup<pos:position pos:line="183" pos:column="25"/></name><argument_list pos:line="183" pos:column="25">(<argument><expr><call><name pos:line="183" pos:column="26">rfc1738_escape<pos:position pos:line="183" pos:column="40"/></name><argument_list pos:line="183" pos:column="40">(<argument><expr><name pos:line="183" pos:column="41">nuser<pos:position pos:line="183" pos:column="46"/></name></expr></argument>)<pos:position pos:line="183" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="184" pos:column="13">np<pos:position pos:line="184" pos:column="15"/></name> <operator pos:line="184" pos:column="16">=<pos:position pos:line="184" pos:column="17"/></operator> <call><name pos:line="184" pos:column="18">xstrdup<pos:position pos:line="184" pos:column="25"/></name><argument_list pos:line="184" pos:column="25">(<argument><expr><call><name pos:line="184" pos:column="26">rfc1738_escape<pos:position pos:line="184" pos:column="40"/></name><argument_list pos:line="184" pos:column="40">(<argument><expr><name pos:line="184" pos:column="41">netbios<pos:position pos:line="184" pos:column="48"/></name></expr></argument>)<pos:position pos:line="184" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="184" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="51"/></expr_stmt>
            <if pos:line="185" pos:column="13">if <condition pos:line="185" pos:column="16">(<expr><name pos:line="185" pos:column="17">debug_enabled<pos:position pos:line="185" pos:column="30"/></name></expr>)<pos:position pos:line="185" pos:column="31"/></condition><then pos:line="185" pos:column="31">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="17">debug<pos:position pos:line="186" pos:column="22"/></name><argument_list pos:line="186" pos:column="22">(<argument><expr><operator pos:line="186" pos:column="23">(<pos:position pos:line="186" pos:column="24"/></operator><name pos:line="186" pos:column="24">char<pos:position pos:line="186" pos:column="28"/></name> <operator pos:line="186" pos:column="29">*<pos:position pos:line="186" pos:column="30"/></operator><operator pos:line="186" pos:column="30">)<pos:position pos:line="186" pos:column="31"/></operator> <literal type="string" pos:line="186" pos:column="32">"%s| %s: INFO: Got User: %s Netbios Name: %s\n"<pos:position pos:line="186" pos:column="79"/></literal></expr></argument>, <argument><expr><call><name pos:line="186" pos:column="81">LogTime<pos:position pos:line="186" pos:column="88"/></name><argument_list pos:line="186" pos:column="88">()<pos:position pos:line="186" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="186" pos:column="92">PROGRAM<pos:position pos:line="186" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="101">up<pos:position pos:line="186" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="105">np<pos:position pos:line="186" pos:column="107"/></name></expr></argument>)<pos:position pos:line="186" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="109"/></expr_stmt></block></then>
            <else pos:line="187" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="17">log<pos:position pos:line="188" pos:column="20"/></name><argument_list pos:line="188" pos:column="20">(<argument><expr><operator pos:line="188" pos:column="21">(<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="22">char<pos:position pos:line="188" pos:column="26"/></name> <operator pos:line="188" pos:column="27">*<pos:position pos:line="188" pos:column="28"/></operator><operator pos:line="188" pos:column="28">)<pos:position pos:line="188" pos:column="29"/></operator> <literal type="string" pos:line="188" pos:column="30">"%s| %s: INFO: Got User: %s Netbios Name: %s\n"<pos:position pos:line="188" pos:column="77"/></literal></expr></argument>, <argument><expr><call><name pos:line="188" pos:column="79">LogTime<pos:position pos:line="188" pos:column="86"/></name><argument_list pos:line="188" pos:column="86">()<pos:position pos:line="188" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="188" pos:column="90">PROGRAM<pos:position pos:line="188" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="99">up<pos:position pos:line="188" pos:column="101"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="103">np<pos:position pos:line="188" pos:column="105"/></name></expr></argument>)<pos:position pos:line="188" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="107"/></expr_stmt></block></else></if>
            <expr_stmt><expr><name pos:line="189" pos:column="13">domain<pos:position pos:line="189" pos:column="19"/></name> <operator pos:line="189" pos:column="20">=<pos:position pos:line="189" pos:column="21"/></operator> <call><name pos:line="189" pos:column="22">get_netbios_name<pos:position pos:line="189" pos:column="38"/></name><argument_list pos:line="189" pos:column="38">(<argument><expr><operator pos:line="189" pos:column="39">&amp;<pos:position pos:line="189" pos:column="44"/></operator><name pos:line="189" pos:column="40">margs<pos:position pos:line="189" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="47">netbios<pos:position pos:line="189" pos:column="54"/></name></expr></argument>)<pos:position pos:line="189" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="190" pos:column="13">user<pos:position pos:line="190" pos:column="17"/></name> <operator pos:line="190" pos:column="18">=<pos:position pos:line="190" pos:column="19"/></operator> <name pos:line="190" pos:column="20">nuser<pos:position pos:line="190" pos:column="25"/></name></expr>;<pos:position pos:line="190" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="191" pos:column="13">safe_free<pos:position pos:line="191" pos:column="22"/></name><argument_list pos:line="191" pos:column="22">(<argument><expr><name pos:line="191" pos:column="23">up<pos:position pos:line="191" pos:column="25"/></name></expr></argument>)<pos:position pos:line="191" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="192" pos:column="13">safe_free<pos:position pos:line="192" pos:column="22"/></name><argument_list pos:line="192" pos:column="22">(<argument><expr><name pos:line="192" pos:column="23">np<pos:position pos:line="192" pos:column="25"/></name></expr></argument>)<pos:position pos:line="192" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="193" pos:column="10"/></block></then> <elseif pos:line="193" pos:column="11">else <if pos:line="193" pos:column="16">if <condition pos:line="193" pos:column="19">(<expr><name pos:line="193" pos:column="20">domain<pos:position pos:line="193" pos:column="26"/></name></expr>)<pos:position pos:line="193" pos:column="27"/></condition><then pos:line="193" pos:column="27"> <block pos:line="193" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="194" pos:column="13">strup<pos:position pos:line="194" pos:column="18"/></name><argument_list pos:line="194" pos:column="18">(<argument><expr><name pos:line="194" pos:column="19">domain<pos:position pos:line="194" pos:column="25"/></name></expr></argument>)<pos:position pos:line="194" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="195" pos:column="13">*<pos:position pos:line="195" pos:column="14"/></operator><name pos:line="195" pos:column="14">domain<pos:position pos:line="195" pos:column="20"/></name> <operator pos:line="195" pos:column="21">=<pos:position pos:line="195" pos:column="22"/></operator> <literal type="char" pos:line="195" pos:column="23">'\0'<pos:position pos:line="195" pos:column="27"/></literal></expr>;<pos:position pos:line="195" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="196" pos:column="13">++<pos:position pos:line="196" pos:column="15"/></operator><name pos:line="196" pos:column="15">domain<pos:position pos:line="196" pos:column="21"/></name></expr>;<pos:position pos:line="196" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="197" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><name pos:line="198" pos:column="9">up<pos:position pos:line="198" pos:column="11"/></name> <operator pos:line="198" pos:column="12">=<pos:position pos:line="198" pos:column="13"/></operator> <call><name pos:line="198" pos:column="14">xstrdup<pos:position pos:line="198" pos:column="21"/></name><argument_list pos:line="198" pos:column="21">(<argument><expr><call><name pos:line="198" pos:column="22">rfc1738_escape<pos:position pos:line="198" pos:column="36"/></name><argument_list pos:line="198" pos:column="36">(<argument><expr><name pos:line="198" pos:column="37">user<pos:position pos:line="198" pos:column="41"/></name></expr></argument>)<pos:position pos:line="198" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="198" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="44"/></expr_stmt>
        <if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><name pos:line="199" pos:column="13">domain<pos:position pos:line="199" pos:column="19"/></name></expr>)<pos:position pos:line="199" pos:column="20"/></condition><then pos:line="199" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><name pos:line="200" pos:column="13">dp<pos:position pos:line="200" pos:column="15"/></name> <operator pos:line="200" pos:column="16">=<pos:position pos:line="200" pos:column="17"/></operator> <call><name pos:line="200" pos:column="18">xstrdup<pos:position pos:line="200" pos:column="25"/></name><argument_list pos:line="200" pos:column="25">(<argument><expr><call><name pos:line="200" pos:column="26">rfc1738_escape<pos:position pos:line="200" pos:column="40"/></name><argument_list pos:line="200" pos:column="40">(<argument><expr><name pos:line="200" pos:column="41">domain<pos:position pos:line="200" pos:column="47"/></name></expr></argument>)<pos:position pos:line="200" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="200" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="50"/></expr_stmt></block></then></if>
        <if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><operator pos:line="201" pos:column="13">!<pos:position pos:line="201" pos:column="14"/></operator><name pos:line="201" pos:column="14">domain<pos:position pos:line="201" pos:column="20"/></name> <operator pos:line="201" pos:column="21">&amp;&amp;<pos:position pos:line="201" pos:column="31"/></operator> <name><name pos:line="201" pos:column="24">margs<pos:position pos:line="201" pos:column="29"/></name><operator pos:line="201" pos:column="29">.<pos:position pos:line="201" pos:column="30"/></operator><name pos:line="201" pos:column="30">ddomain<pos:position pos:line="201" pos:column="37"/></name></name></expr>)<pos:position pos:line="201" pos:column="38"/></condition><then pos:line="201" pos:column="38"> <block pos:line="201" pos:column="39">{
            <expr_stmt><expr><name pos:line="202" pos:column="13">domain<pos:position pos:line="202" pos:column="19"/></name> <operator pos:line="202" pos:column="20">=<pos:position pos:line="202" pos:column="21"/></operator> <call><name pos:line="202" pos:column="22">xstrdup<pos:position pos:line="202" pos:column="29"/></name><argument_list pos:line="202" pos:column="29">(<argument><expr><name><name pos:line="202" pos:column="30">margs<pos:position pos:line="202" pos:column="35"/></name><operator pos:line="202" pos:column="35">.<pos:position pos:line="202" pos:column="36"/></operator><name pos:line="202" pos:column="36">ddomain<pos:position pos:line="202" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="203" pos:column="13">dp<pos:position pos:line="203" pos:column="15"/></name> <operator pos:line="203" pos:column="16">=<pos:position pos:line="203" pos:column="17"/></operator> <call><name pos:line="203" pos:column="18">xstrdup<pos:position pos:line="203" pos:column="25"/></name><argument_list pos:line="203" pos:column="25">(<argument><expr><call><name pos:line="203" pos:column="26">rfc1738_escape<pos:position pos:line="203" pos:column="40"/></name><argument_list pos:line="203" pos:column="40">(<argument><expr><name pos:line="203" pos:column="41">domain<pos:position pos:line="203" pos:column="47"/></name></expr></argument>)<pos:position pos:line="203" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="203" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="50"/></expr_stmt>
            <if pos:line="204" pos:column="13">if <condition pos:line="204" pos:column="16">(<expr><name pos:line="204" pos:column="17">debug_enabled<pos:position pos:line="204" pos:column="30"/></name></expr>)<pos:position pos:line="204" pos:column="31"/></condition><then pos:line="204" pos:column="31">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="205" pos:column="17">debug<pos:position pos:line="205" pos:column="22"/></name><argument_list pos:line="205" pos:column="22">(<argument><expr><operator pos:line="205" pos:column="23">(<pos:position pos:line="205" pos:column="24"/></operator><name pos:line="205" pos:column="24">char<pos:position pos:line="205" pos:column="28"/></name> <operator pos:line="205" pos:column="29">*<pos:position pos:line="205" pos:column="30"/></operator><operator pos:line="205" pos:column="30">)<pos:position pos:line="205" pos:column="31"/></operator> <literal type="string" pos:line="205" pos:column="32">"%s| %s: INFO: Got User: %s set default domain: %s\n"<pos:position pos:line="205" pos:column="85"/></literal></expr></argument>, <argument><expr><call><name pos:line="205" pos:column="87">LogTime<pos:position pos:line="205" pos:column="94"/></name><argument_list pos:line="205" pos:column="94">()<pos:position pos:line="205" pos:column="96"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="205" pos:column="98">PROGRAM<pos:position pos:line="205" pos:column="105"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="107">up<pos:position pos:line="205" pos:column="109"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="111">dp<pos:position pos:line="205" pos:column="113"/></name></expr></argument>)<pos:position pos:line="205" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="115"/></expr_stmt></block></then>
            <else pos:line="206" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="207" pos:column="17">log<pos:position pos:line="207" pos:column="20"/></name><argument_list pos:line="207" pos:column="20">(<argument><expr><operator pos:line="207" pos:column="21">(<pos:position pos:line="207" pos:column="22"/></operator><name pos:line="207" pos:column="22">char<pos:position pos:line="207" pos:column="26"/></name> <operator pos:line="207" pos:column="27">*<pos:position pos:line="207" pos:column="28"/></operator><operator pos:line="207" pos:column="28">)<pos:position pos:line="207" pos:column="29"/></operator> <literal type="string" pos:line="207" pos:column="30">"%s| %s: INFO: Got User: %s set default domain: %s\n"<pos:position pos:line="207" pos:column="83"/></literal></expr></argument>, <argument><expr><call><name pos:line="207" pos:column="85">LogTime<pos:position pos:line="207" pos:column="92"/></name><argument_list pos:line="207" pos:column="92">()<pos:position pos:line="207" pos:column="94"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="207" pos:column="96">PROGRAM<pos:position pos:line="207" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="105">up<pos:position pos:line="207" pos:column="107"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="109">dp<pos:position pos:line="207" pos:column="111"/></name></expr></argument>)<pos:position pos:line="207" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="113"/></expr_stmt></block></else></if>
        }<pos:position pos:line="208" pos:column="10"/></block></then></if>
        <if pos:line="209" pos:column="9">if <condition pos:line="209" pos:column="12">(<expr><name pos:line="209" pos:column="13">debug_enabled<pos:position pos:line="209" pos:column="26"/></name></expr>)<pos:position pos:line="209" pos:column="27"/></condition><then pos:line="209" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="210" pos:column="13">debug<pos:position pos:line="210" pos:column="18"/></name><argument_list pos:line="210" pos:column="18">(<argument><expr><operator pos:line="210" pos:column="19">(<pos:position pos:line="210" pos:column="20"/></operator><name pos:line="210" pos:column="20">char<pos:position pos:line="210" pos:column="24"/></name> <operator pos:line="210" pos:column="25">*<pos:position pos:line="210" pos:column="26"/></operator><operator pos:line="210" pos:column="26">)<pos:position pos:line="210" pos:column="27"/></operator> <literal type="string" pos:line="210" pos:column="28">"%s| %s: INFO: Got User: %s Domain: %s\n"<pos:position pos:line="210" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="210" pos:column="71">LogTime<pos:position pos:line="210" pos:column="78"/></name><argument_list pos:line="210" pos:column="78">()<pos:position pos:line="210" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="210" pos:column="82">PROGRAM<pos:position pos:line="210" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="91">up<pos:position pos:line="210" pos:column="93"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="210" pos:column="95">domain<pos:position pos:line="210" pos:column="101"/></name></expr> ?<pos:position pos:line="210" pos:column="103"/></condition><then pos:line="210" pos:column="103"> <expr><name pos:line="210" pos:column="104">dp<pos:position pos:line="210" pos:column="106"/></name></expr> <pos:position pos:line="210" pos:column="107"/></then><else pos:line="210" pos:column="107">: <expr><literal type="string" pos:line="210" pos:column="109">"NULL"<pos:position pos:line="210" pos:column="115"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="210" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="117"/></expr_stmt></block></then>
        <else pos:line="211" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="212" pos:column="13">log<pos:position pos:line="212" pos:column="16"/></name><argument_list pos:line="212" pos:column="16">(<argument><expr><operator pos:line="212" pos:column="17">(<pos:position pos:line="212" pos:column="18"/></operator><name pos:line="212" pos:column="18">char<pos:position pos:line="212" pos:column="22"/></name> <operator pos:line="212" pos:column="23">*<pos:position pos:line="212" pos:column="24"/></operator><operator pos:line="212" pos:column="24">)<pos:position pos:line="212" pos:column="25"/></operator> <literal type="string" pos:line="212" pos:column="26">"%s| %s: INFO: Got User: %s Domain: %s\n"<pos:position pos:line="212" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="212" pos:column="69">LogTime<pos:position pos:line="212" pos:column="76"/></name><argument_list pos:line="212" pos:column="76">()<pos:position pos:line="212" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="212" pos:column="80">PROGRAM<pos:position pos:line="212" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="89">up<pos:position pos:line="212" pos:column="91"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="212" pos:column="93">domain<pos:position pos:line="212" pos:column="99"/></name></expr> ?<pos:position pos:line="212" pos:column="101"/></condition><then pos:line="212" pos:column="101"> <expr><name pos:line="212" pos:column="102">dp<pos:position pos:line="212" pos:column="104"/></name></expr> <pos:position pos:line="212" pos:column="105"/></then><else pos:line="212" pos:column="105">: <expr><literal type="string" pos:line="212" pos:column="107">"NULL"<pos:position pos:line="212" pos:column="113"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="212" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="115"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="214" pos:column="9">safe_free<pos:position pos:line="214" pos:column="18"/></name><argument_list pos:line="214" pos:column="18">(<argument><expr><name pos:line="214" pos:column="19">up<pos:position pos:line="214" pos:column="21"/></name></expr></argument>)<pos:position pos:line="214" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="215" pos:column="9">safe_free<pos:position pos:line="215" pos:column="18"/></name><argument_list pos:line="215" pos:column="18">(<argument><expr><name pos:line="215" pos:column="19">dp<pos:position pos:line="215" pos:column="21"/></name></expr></argument>)<pos:position pos:line="215" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="23"/></expr_stmt>
        <if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><operator pos:line="216" pos:column="13">!<pos:position pos:line="216" pos:column="14"/></operator><call><name pos:line="216" pos:column="14">strcmp<pos:position pos:line="216" pos:column="20"/></name><argument_list pos:line="216" pos:column="20">(<argument><expr><name pos:line="216" pos:column="21">user<pos:position pos:line="216" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="27">"QQ"<pos:position pos:line="216" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="32"/></argument_list></call> <operator pos:line="216" pos:column="33">&amp;&amp;<pos:position pos:line="216" pos:column="43"/></operator> <name pos:line="216" pos:column="36">domain<pos:position pos:line="216" pos:column="42"/></name> <operator pos:line="216" pos:column="43">&amp;&amp;<pos:position pos:line="216" pos:column="53"/></operator> <operator pos:line="216" pos:column="46">!<pos:position pos:line="216" pos:column="47"/></operator><call><name pos:line="216" pos:column="47">strcmp<pos:position pos:line="216" pos:column="53"/></name><argument_list pos:line="216" pos:column="53">(<argument><expr><name pos:line="216" pos:column="54">domain<pos:position pos:line="216" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="62">"QQ"<pos:position pos:line="216" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="216" pos:column="68"/></condition><then pos:line="216" pos:column="68"> <block pos:line="216" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="217" pos:column="13">clean_args<pos:position pos:line="217" pos:column="23"/></name><argument_list pos:line="217" pos:column="23">(<argument><expr><operator pos:line="217" pos:column="24">&amp;<pos:position pos:line="217" pos:column="29"/></operator><name pos:line="217" pos:column="25">margs<pos:position pos:line="217" pos:column="30"/></name></expr></argument>)<pos:position pos:line="217" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="218" pos:column="13">exit<pos:position pos:line="218" pos:column="17"/></name><argument_list pos:line="218" pos:column="17">(<argument><expr><operator pos:line="218" pos:column="18">-<pos:position pos:line="218" pos:column="19"/></operator><literal type="number" pos:line="218" pos:column="19">1<pos:position pos:line="218" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="219" pos:column="10"/></block></then></if>
        <if pos:line="220" pos:column="9">if <condition pos:line="220" pos:column="12">(<expr><name pos:line="220" pos:column="13">gopt<pos:position pos:line="220" pos:column="17"/></name></expr>)<pos:position pos:line="220" pos:column="18"/></condition><then pos:line="220" pos:column="18"> <block pos:line="220" pos:column="19">{
            <if pos:line="221" pos:column="13">if <condition pos:line="221" pos:column="16">(<expr><operator pos:line="221" pos:column="17">(<pos:position pos:line="221" pos:column="18"/></operator><name pos:line="221" pos:column="18">group<pos:position pos:line="221" pos:column="23"/></name> <operator pos:line="221" pos:column="24">=<pos:position pos:line="221" pos:column="25"/></operator> <call><name pos:line="221" pos:column="26">strtok<pos:position pos:line="221" pos:column="32"/></name><argument_list pos:line="221" pos:column="32">(<argument><expr><name pos:line="221" pos:column="33">NULL<pos:position pos:line="221" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="39">" \n"<pos:position pos:line="221" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="45"/></argument_list></call><operator pos:line="221" pos:column="45">)<pos:position pos:line="221" pos:column="46"/></operator> <operator pos:line="221" pos:column="47">!=<pos:position pos:line="221" pos:column="49"/></operator> <name pos:line="221" pos:column="50">NULL<pos:position pos:line="221" pos:column="54"/></name></expr>)<pos:position pos:line="221" pos:column="55"/></condition><then pos:line="221" pos:column="55"> <block pos:line="221" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="222" pos:column="17">debug<pos:position pos:line="222" pos:column="22"/></name><argument_list pos:line="222" pos:column="22">(<argument><expr><operator pos:line="222" pos:column="23">(<pos:position pos:line="222" pos:column="24"/></operator><name pos:line="222" pos:column="24">char<pos:position pos:line="222" pos:column="28"/></name> <operator pos:line="222" pos:column="29">*<pos:position pos:line="222" pos:column="30"/></operator><operator pos:line="222" pos:column="30">)<pos:position pos:line="222" pos:column="31"/></operator> <literal type="string" pos:line="222" pos:column="32">"%s| %s: INFO: Read group list %s from stdin\n"<pos:position pos:line="222" pos:column="79"/></literal></expr></argument>, <argument><expr><call><name pos:line="222" pos:column="81">LogTime<pos:position pos:line="222" pos:column="88"/></name><argument_list pos:line="222" pos:column="88">()<pos:position pos:line="222" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="222" pos:column="92">PROGRAM<pos:position pos:line="222" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="101">group<pos:position pos:line="222" pos:column="106"/></name></expr></argument>)<pos:position pos:line="222" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="108"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="223" pos:column="17">rfc1738_unescape<pos:position pos:line="223" pos:column="33"/></name><argument_list pos:line="223" pos:column="33">(<argument><expr><name pos:line="223" pos:column="34">group<pos:position pos:line="223" pos:column="39"/></name></expr></argument>)<pos:position pos:line="223" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="41"/></expr_stmt>
                <if pos:line="224" pos:column="17">if <condition pos:line="224" pos:column="20">(<expr><name><name pos:line="224" pos:column="21">margs<pos:position pos:line="224" pos:column="26"/></name><operator pos:line="224" pos:column="26">.<pos:position pos:line="224" pos:column="27"/></operator><name pos:line="224" pos:column="27">groups<pos:position pos:line="224" pos:column="33"/></name></name></expr>)<pos:position pos:line="224" pos:column="34"/></condition><then pos:line="224" pos:column="34"> <block pos:line="224" pos:column="35">{
                    <expr_stmt><expr><call><name pos:line="225" pos:column="21">clean_gd<pos:position pos:line="225" pos:column="29"/></name><argument_list pos:line="225" pos:column="29">(<argument><expr><name><name pos:line="225" pos:column="30">margs<pos:position pos:line="225" pos:column="35"/></name><operator pos:line="225" pos:column="35">.<pos:position pos:line="225" pos:column="36"/></operator><name pos:line="225" pos:column="36">groups<pos:position pos:line="225" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="225" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="226" pos:column="21">margs<pos:position pos:line="226" pos:column="26"/></name><operator pos:line="226" pos:column="26">.<pos:position pos:line="226" pos:column="27"/></operator><name pos:line="226" pos:column="27">groups<pos:position pos:line="226" pos:column="33"/></name></name> <operator pos:line="226" pos:column="34">=<pos:position pos:line="226" pos:column="35"/></operator> <name pos:line="226" pos:column="36">NULL<pos:position pos:line="226" pos:column="40"/></name></expr>;<pos:position pos:line="226" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="227" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="228" pos:column="17">margs<pos:position pos:line="228" pos:column="22"/></name><operator pos:line="228" pos:column="22">.<pos:position pos:line="228" pos:column="23"/></operator><name pos:line="228" pos:column="23">glist<pos:position pos:line="228" pos:column="28"/></name></name> <operator pos:line="228" pos:column="29">=<pos:position pos:line="228" pos:column="30"/></operator> <call><name pos:line="228" pos:column="31">xstrdup<pos:position pos:line="228" pos:column="38"/></name><argument_list pos:line="228" pos:column="38">(<argument><expr><name pos:line="228" pos:column="39">group<pos:position pos:line="228" pos:column="44"/></name></expr></argument>)<pos:position pos:line="228" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="46"/></expr_stmt>
                <if pos:line="229" pos:column="17">if <condition pos:line="229" pos:column="20">(<expr><call><name pos:line="229" pos:column="21">create_gd<pos:position pos:line="229" pos:column="30"/></name><argument_list pos:line="229" pos:column="30">(<argument><expr><operator pos:line="229" pos:column="31">&amp;<pos:position pos:line="229" pos:column="36"/></operator><name pos:line="229" pos:column="32">margs<pos:position pos:line="229" pos:column="37"/></name></expr></argument>)<pos:position pos:line="229" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="229" pos:column="39"/></condition><then pos:line="229" pos:column="39"> <block pos:line="229" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="230" pos:column="21">SEND_ERR<pos:position pos:line="230" pos:column="29"/></name><argument_list pos:line="230" pos:column="29">(<argument><expr><literal type="string" pos:line="230" pos:column="30">"Error in group list"<pos:position pos:line="230" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="53"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="231" pos:column="21">debug<pos:position pos:line="231" pos:column="26"/></name><argument_list pos:line="231" pos:column="26">(<argument><expr><operator pos:line="231" pos:column="27">(<pos:position pos:line="231" pos:column="28"/></operator><name pos:line="231" pos:column="28">char<pos:position pos:line="231" pos:column="32"/></name> <operator pos:line="231" pos:column="33">*<pos:position pos:line="231" pos:column="34"/></operator><operator pos:line="231" pos:column="34">)<pos:position pos:line="231" pos:column="35"/></operator> <literal type="string" pos:line="231" pos:column="36">"%s| %s: FATAL: Error in group list: %s\n"<pos:position pos:line="231" pos:column="78"/></literal></expr></argument>, <argument><expr><call><name pos:line="231" pos:column="80">LogTime<pos:position pos:line="231" pos:column="87"/></name><argument_list pos:line="231" pos:column="87">()<pos:position pos:line="231" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="231" pos:column="91">PROGRAM<pos:position pos:line="231" pos:column="98"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="231" pos:column="100">margs<pos:position pos:line="231" pos:column="105"/></name><operator pos:line="231" pos:column="105">.<pos:position pos:line="231" pos:column="106"/></operator><name pos:line="231" pos:column="106">glist<pos:position pos:line="231" pos:column="111"/></name></name></expr> ?<pos:position pos:line="231" pos:column="113"/></condition><then pos:line="231" pos:column="113"> <expr><name><name pos:line="231" pos:column="114">margs<pos:position pos:line="231" pos:column="119"/></name><operator pos:line="231" pos:column="119">.<pos:position pos:line="231" pos:column="120"/></operator><name pos:line="231" pos:column="120">glist<pos:position pos:line="231" pos:column="125"/></name></name></expr> <pos:position pos:line="231" pos:column="126"/></then><else pos:line="231" pos:column="126">: <expr><literal type="string" pos:line="231" pos:column="128">"NULL"<pos:position pos:line="231" pos:column="134"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="231" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="136"/></expr_stmt>
                    <continue pos:line="232" pos:column="21">continue;<pos:position pos:line="232" pos:column="30"/></continue>
                }<pos:position pos:line="233" pos:column="18"/></block></then></if>
            }<pos:position pos:line="234" pos:column="14"/></block></then> <else pos:line="234" pos:column="15">else <block pos:line="234" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="235" pos:column="17">SEND_ERR<pos:position pos:line="235" pos:column="25"/></name><argument_list pos:line="235" pos:column="25">(<argument><expr><literal type="string" pos:line="235" pos:column="26">"No group list received on stdin"<pos:position pos:line="235" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="236" pos:column="17">debug<pos:position pos:line="236" pos:column="22"/></name><argument_list pos:line="236" pos:column="22">(<argument><expr><operator pos:line="236" pos:column="23">(<pos:position pos:line="236" pos:column="24"/></operator><name pos:line="236" pos:column="24">char<pos:position pos:line="236" pos:column="28"/></name> <operator pos:line="236" pos:column="29">*<pos:position pos:line="236" pos:column="30"/></operator><operator pos:line="236" pos:column="30">)<pos:position pos:line="236" pos:column="31"/></operator> <literal type="string" pos:line="236" pos:column="32">"%s| %s: FATAL: No group list received on stdin\n"<pos:position pos:line="236" pos:column="82"/></literal></expr></argument>, <argument><expr><call><name pos:line="236" pos:column="84">LogTime<pos:position pos:line="236" pos:column="91"/></name><argument_list pos:line="236" pos:column="91">()<pos:position pos:line="236" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="236" pos:column="95">PROGRAM<pos:position pos:line="236" pos:column="102"/></name></expr></argument>)<pos:position pos:line="236" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="104"/></expr_stmt>
                <continue pos:line="237" pos:column="17">continue;<pos:position pos:line="237" pos:column="26"/></continue>
            }<pos:position pos:line="238" pos:column="14"/></block></else></if>
        }<pos:position pos:line="239" pos:column="10"/></block></then></if>
        <if pos:line="240" pos:column="9">if <condition pos:line="240" pos:column="12">(<expr><call><name pos:line="240" pos:column="13">check_memberof<pos:position pos:line="240" pos:column="27"/></name><argument_list pos:line="240" pos:column="27">(<argument><expr><operator pos:line="240" pos:column="28">&amp;<pos:position pos:line="240" pos:column="33"/></operator><name pos:line="240" pos:column="29">margs<pos:position pos:line="240" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="36">user<pos:position pos:line="240" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="42">domain<pos:position pos:line="240" pos:column="48"/></name></expr></argument>)<pos:position pos:line="240" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="240" pos:column="50"/></condition><then pos:line="240" pos:column="50"> <block pos:line="240" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="241" pos:column="13">SEND_OK<pos:position pos:line="241" pos:column="20"/></name><argument_list pos:line="241" pos:column="20">(<argument><expr><literal type="string" pos:line="241" pos:column="21">""<pos:position pos:line="241" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="242" pos:column="13">debug<pos:position pos:line="242" pos:column="18"/></name><argument_list pos:line="242" pos:column="18">(<argument><expr><operator pos:line="242" pos:column="19">(<pos:position pos:line="242" pos:column="20"/></operator><name pos:line="242" pos:column="20">char<pos:position pos:line="242" pos:column="24"/></name> <operator pos:line="242" pos:column="25">*<pos:position pos:line="242" pos:column="26"/></operator><operator pos:line="242" pos:column="26">)<pos:position pos:line="242" pos:column="27"/></operator> <literal type="string" pos:line="242" pos:column="28">"%s| %s: DEBUG: OK\n"<pos:position pos:line="242" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="242" pos:column="51">LogTime<pos:position pos:line="242" pos:column="58"/></name><argument_list pos:line="242" pos:column="58">()<pos:position pos:line="242" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="242" pos:column="62">PROGRAM<pos:position pos:line="242" pos:column="69"/></name></expr></argument>)<pos:position pos:line="242" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="243" pos:column="10"/></block></then> <else pos:line="243" pos:column="11">else <block pos:line="243" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="244" pos:column="13">SEND_ERR<pos:position pos:line="244" pos:column="21"/></name><argument_list pos:line="244" pos:column="21">(<argument><expr><literal type="string" pos:line="244" pos:column="22">""<pos:position pos:line="244" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="244" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="245" pos:column="13">debug<pos:position pos:line="245" pos:column="18"/></name><argument_list pos:line="245" pos:column="18">(<argument><expr><operator pos:line="245" pos:column="19">(<pos:position pos:line="245" pos:column="20"/></operator><name pos:line="245" pos:column="20">char<pos:position pos:line="245" pos:column="24"/></name> <operator pos:line="245" pos:column="25">*<pos:position pos:line="245" pos:column="26"/></operator><operator pos:line="245" pos:column="26">)<pos:position pos:line="245" pos:column="27"/></operator> <literal type="string" pos:line="245" pos:column="28">"%s| %s: DEBUG: ERR\n"<pos:position pos:line="245" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="245" pos:column="52">LogTime<pos:position pos:line="245" pos:column="59"/></name><argument_list pos:line="245" pos:column="59">()<pos:position pos:line="245" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="245" pos:column="63">PROGRAM<pos:position pos:line="245" pos:column="70"/></name></expr></argument>)<pos:position pos:line="245" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="246" pos:column="10"/></block></else></if>
    }<pos:position pos:line="247" pos:column="6"/></block></while>

}<pos:position pos:line="249" pos:column="2"/></block></function></unit>

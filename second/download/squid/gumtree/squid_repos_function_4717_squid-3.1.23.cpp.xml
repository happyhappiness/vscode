<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4717_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">StoreIOState<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">UFSStrategy<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">open<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">SwapDir<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">SD<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">StoreEntry<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">e<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">StoreIOState<pos:position pos:line="2" pos:column="61"/></name><operator pos:line="2" pos:column="61">::<pos:position pos:line="2" pos:column="63"/></operator><name pos:line="2" pos:column="63">STFNCB<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type> <name pos:line="2" pos:column="72">file_callback<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>,
                  <parameter><decl><type><name><name pos:line="3" pos:column="19">StoreIOState<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">::<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">STIOCB<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type> <name pos:line="3" pos:column="42">aCallback<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="53">void<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">callback_data<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><operator pos:line="5" pos:column="14">(<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">UFSSwapDir<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator><operator pos:line="5" pos:column="27">)<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">SD<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">)<pos:position pos:line="5" pos:column="31"/></operator><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">IO<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">==<pos:position pos:line="5" pos:column="38"/></operator> <name pos:line="5" pos:column="39">this<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">79<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"UFSStrategy::open: fileno "<pos:position pos:line="6" pos:column="47"/></literal><operator pos:line="6" pos:column="47">&lt;&lt;<pos:position pos:line="6" pos:column="55"/></operator> <call><name><name pos:line="6" pos:column="50">std<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">::<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="55">setfill<pos:position pos:line="6" pos:column="62"/></name></name><argument_list pos:line="6" pos:column="62">(<argument><expr><literal type="char" pos:line="6" pos:column="63">'0'<pos:position pos:line="6" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call> <operator pos:line="6" pos:column="68">&lt;&lt;<pos:position pos:line="6" pos:column="76"/></operator> <name><name pos:line="6" pos:column="71">std<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">::<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="76">hex<pos:position pos:line="6" pos:column="79"/></name></name> <operator pos:line="6" pos:column="80">&lt;&lt;<pos:position pos:line="6" pos:column="88"/></operator> <name><name pos:line="6" pos:column="83">std<pos:position pos:line="6" pos:column="86"/></name><operator pos:line="6" pos:column="86">::<pos:position pos:line="6" pos:column="88"/></operator><name pos:line="6" pos:column="88">uppercase<pos:position pos:line="6" pos:column="97"/></name></name> <operator pos:line="6" pos:column="98">&lt;&lt;<pos:position pos:line="6" pos:column="106"/></operator> <call><name><name pos:line="6" pos:column="101">std<pos:position pos:line="6" pos:column="104"/></name><operator pos:line="6" pos:column="104">::<pos:position pos:line="6" pos:column="106"/></operator><name pos:line="6" pos:column="106">setw<pos:position pos:line="6" pos:column="110"/></name></name><argument_list pos:line="6" pos:column="110">(<argument><expr><literal type="number" pos:line="6" pos:column="111">8<pos:position pos:line="6" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="113"/></argument_list></call> <operator pos:line="6" pos:column="114">&lt;&lt;<pos:position pos:line="6" pos:column="122"/></operator> <name><name pos:line="6" pos:column="117">e<pos:position pos:line="6" pos:column="118"/></name><operator pos:line="6" pos:column="118">-&gt;<pos:position pos:line="6" pos:column="123"/></operator><name pos:line="6" pos:column="120">swap_filen<pos:position pos:line="6" pos:column="130"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="132"/></expr_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* to consider: make createstate a private UFSStrategy call */</comment>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">StoreIOState<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">::<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">Pointer<pos:position pos:line="9" pos:column="26"/></name></name></type> <name pos:line="9" pos:column="27">sio<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><call><name pos:line="9" pos:column="33">createState<pos:position pos:line="9" pos:column="44"/></name> <argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">SD<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">e<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">aCallback<pos:position pos:line="9" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="64">callback_data<pos:position pos:line="9" pos:column="77"/></name></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="79"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">sio<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">mode<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">|=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">O_RDONLY<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">UFSStoreState<pos:position pos:line="13" pos:column="18"/></name> <modifier pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></modifier></type><name pos:line="13" pos:column="20">state<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><cast type="dynamic" pos:line="13" pos:column="28">dynamic_cast <argument_list type="generic" pos:line="13" pos:column="41">&lt;<argument><expr><name pos:line="13" pos:column="42">UFSStoreState<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">*<pos:position pos:line="13" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="61"/></argument_list><argument_list pos:line="13" pos:column="58">(<argument><expr><call><name><name pos:line="13" pos:column="59">sio<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">.<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="63">getRaw<pos:position pos:line="13" pos:column="69"/></name></name><argument_list pos:line="13" pos:column="69">()<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="13" pos:column="73"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">state<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">path<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">UFSSwapDir<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">SD<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">)<pos:position pos:line="17" pos:column="36"/></operator><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><call><name pos:line="17" pos:column="38">fullPath<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name><name pos:line="17" pos:column="47">e<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">swap_filen<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">NULL<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="68"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">DiskFile<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">::<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">Pointer<pos:position pos:line="19" pos:column="22"/></name></name></type> <name pos:line="19" pos:column="23">myFile<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><call><name pos:line="19" pos:column="32">newFile<pos:position pos:line="19" pos:column="39"/></name> <argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">path<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="47"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name><name pos:line="21" pos:column="9">myFile<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">getRaw<pos:position pos:line="21" pos:column="22"/></name></name><argument_list pos:line="21" pos:column="22">()<pos:position pos:line="21" pos:column="24"/></argument_list></call> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">NULL<pos:position pos:line="21" pos:column="32"/></name></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">NULL<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">state<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">theFile<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">myFile<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">state<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">opening<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="boolean" pos:line="26" pos:column="22">true<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">myFile<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">open<pos:position pos:line="28" pos:column="17"/></name></name> <argument_list pos:line="28" pos:column="18">(<argument><expr><name><name pos:line="28" pos:column="19">sio<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">mode<pos:position pos:line="28" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="30">0644<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">state<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name><name pos:line="30" pos:column="9">myFile<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">error<pos:position pos:line="30" pos:column="22"/></name></name><argument_list pos:line="30" pos:column="22">()<pos:position pos:line="30" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">NULL<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return></block></then></if>

    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">sio<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

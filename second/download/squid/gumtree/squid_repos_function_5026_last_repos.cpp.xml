<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5026_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Rebuild<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">startNewEntry<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">sfileno<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">fileno<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">SlotId<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">slotId<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="73">const<pos:position pos:line="2" pos:column="78"/></specifier> <name pos:line="2" pos:column="79">DbCellHeader<pos:position pos:line="2" pos:column="91"/></name> <modifier pos:line="2" pos:column="92">&amp;<pos:position pos:line="2" pos:column="97"/></modifier></type><name pos:line="2" pos:column="93">header<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="100"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// A miss may have been stored at our fileno while we were loading other</comment>
    <comment type="line" pos:line="5" pos:column="5">// slots from disk. We ought to preserve that entry because it is fresher.</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">bool<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">overwriteExisting<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><literal type="boolean" pos:line="6" pos:column="36">false<pos:position pos:line="6" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<decl><type><name><name pos:line="7" pos:column="9">Ipc<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">::<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">StoreMap<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">::<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">Anchor<pos:position pos:line="7" pos:column="30"/></name></name> <modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier></type><name pos:line="7" pos:column="32">anchor<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><call><name><name pos:line="7" pos:column="41">sd<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">map<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">openForWritingAt<pos:position pos:line="7" pos:column="66"/></name></name><argument_list pos:line="7" pos:column="66">(<argument><expr><name pos:line="7" pos:column="67">fileno<pos:position pos:line="7" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="75">overwriteExisting<pos:position pos:line="7" pos:column="92"/></name></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr></init></decl>)<pos:position pos:line="7" pos:column="94"/></condition><then pos:line="7" pos:column="94"> <block pos:line="7" pos:column="95">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">primeNewEntry<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">anchor<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">fileno<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">header<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">addSlotToEntry<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">fileno<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">slotId<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">header<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt> <comment type="line" pos:line="9" pos:column="49">// may fail</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">assert<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name><name pos:line="10" pos:column="16">anchor<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">basics<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">swap_file_sz<pos:position pos:line="10" pos:column="43"/></name></name> <operator pos:line="10" pos:column="44">!=<pos:position pos:line="10" pos:column="46"/></operator> <cast type="static" pos:line="10" pos:column="47">static_cast<argument_list type="generic" pos:line="10" pos:column="58">&lt;<argument><expr><name pos:line="10" pos:column="59">uint64_t<pos:position pos:line="10" pos:column="67"/></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="71"/></argument_list><argument_list pos:line="10" pos:column="68">(<argument><expr><operator pos:line="10" pos:column="69">-<pos:position pos:line="10" pos:column="70"/></operator><literal type="number" pos:line="10" pos:column="70">1<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></cast></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else <block pos:line="11" pos:column="12">{
        <comment type="line" pos:line="12" pos:column="9">// A new from-network entry is occupying our map slot; let it be, but</comment>
        <comment type="line" pos:line="13" pos:column="9">// save us from the trouble of going through the above motions again.</comment>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">LoadingEntry<pos:position pos:line="14" pos:column="21"/></name></type> <name pos:line="14" pos:column="22">le<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><call><name pos:line="14" pos:column="27">loadingEntry<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">fileno<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="48"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">le<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">state<pos:position pos:line="15" pos:column="17"/></name></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name><name pos:line="15" pos:column="18">LoadingEntry<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">::<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">leIgnored<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">freeUnusedSlot<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">slotId<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="16" pos:column="32">false<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2717_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelConnectDone<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">Comm<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">ConnectionPointer<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">conn<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">comm_err_t<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">status<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">int<pos:position pos:line="2" pos:column="78"/></name></type> <name pos:line="2" pos:column="79">xerrno<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="87">void<pos:position pos:line="2" pos:column="91"/></name> <modifier pos:line="2" pos:column="92">*<pos:position pos:line="2" pos:column="93"/></modifier></type><name pos:line="2" pos:column="93">data<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="98"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">TunnelStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">COMM_OK<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">26<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">4<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">HERE<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="31">conn<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">&lt;&lt;<pos:position pos:line="7" pos:column="44"/></operator> <literal type="string" pos:line="7" pos:column="39">", comm failure recovery."<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
        <comment type="block" pos:line="8" pos:column="9">/* At this point only the TCP handshake has failed. no data has been passed.
         * we are allowed to re-try the TCP-level connection to alternate IPs for CONNECT.
         */</comment>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">tunnelState<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">serverDestinations<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">shift<pos:position pos:line="11" pos:column="46"/></name></name><argument_list pos:line="11" pos:column="46">()<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">status<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">!=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">COMM_TIMEOUT<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">&amp;&amp;<pos:position pos:line="12" pos:column="46"/></operator> <call><name><name pos:line="12" pos:column="39">tunnelState<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">serverDestinations<pos:position pos:line="12" pos:column="70"/></name><operator pos:line="12" pos:column="70">.<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="71">size<pos:position pos:line="12" pos:column="75"/></name></name><argument_list pos:line="12" pos:column="75">()<pos:position pos:line="12" pos:column="77"/></argument_list></call> <operator pos:line="12" pos:column="78">&gt;<pos:position pos:line="12" pos:column="82"/></operator> <literal type="number" pos:line="12" pos:column="80">0<pos:position pos:line="12" pos:column="81"/></literal></expr>)<pos:position pos:line="12" pos:column="82"/></condition><then pos:line="12" pos:column="82"> <block pos:line="12" pos:column="83">{
            <comment type="block" pos:line="13" pos:column="13">/* Try another IP of this destination host */</comment>

            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><call><name><name pos:line="15" pos:column="17">Ip<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">::<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">Qos<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">::<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">TheConfig<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">isAclTosActive<pos:position pos:line="15" pos:column="50"/></name></name><argument_list pos:line="15" pos:column="50">()<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53"> <block pos:line="15" pos:column="54">{
                <expr_stmt><expr><name><name pos:line="16" pos:column="17">tunnelState<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">serverDestinations<pos:position pos:line="16" pos:column="48"/></name><index pos:line="16" pos:column="48">[<expr><literal type="number" pos:line="16" pos:column="49">0<pos:position pos:line="16" pos:column="50"/></literal></expr>]<pos:position pos:line="16" pos:column="51"/></index></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">tos<pos:position pos:line="16" pos:column="56"/></name> <operator pos:line="16" pos:column="57">=<pos:position pos:line="16" pos:column="58"/></operator> <call><name pos:line="16" pos:column="59">GetTosToServer<pos:position pos:line="16" pos:column="73"/></name><argument_list pos:line="16" pos:column="73">(<argument><expr><name><name pos:line="16" pos:column="74">tunnelState<pos:position pos:line="16" pos:column="85"/></name><operator pos:line="16" pos:column="85">-&gt;<pos:position pos:line="16" pos:column="90"/></operator><name pos:line="16" pos:column="87">request<pos:position pos:line="16" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="96"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">SO_MARK<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">&amp;&amp;<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="16">USE_LIBCAP<pos:position pos:line="19" pos:column="26"/></name></expr></cpp:if>
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">tunnelState<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">serverDestinations<pos:position pos:line="20" pos:column="44"/></name><index pos:line="20" pos:column="44">[<expr><literal type="number" pos:line="20" pos:column="45">0<pos:position pos:line="20" pos:column="46"/></literal></expr>]<pos:position pos:line="20" pos:column="47"/></index></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">nfmark<pos:position pos:line="20" pos:column="55"/></name> <operator pos:line="20" pos:column="56">=<pos:position pos:line="20" pos:column="57"/></operator> <call><name pos:line="20" pos:column="58">GetNfmarkToServer<pos:position pos:line="20" pos:column="75"/></name><argument_list pos:line="20" pos:column="75">(<argument><expr><name><name pos:line="20" pos:column="76">tunnelState<pos:position pos:line="20" pos:column="87"/></name><operator pos:line="20" pos:column="87">-&gt;<pos:position pos:line="20" pos:column="92"/></operator><name pos:line="20" pos:column="89">request<pos:position pos:line="20" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="98"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

            <expr_stmt><expr><call><name pos:line="23" pos:column="13">debugs<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="number" pos:line="23" pos:column="20">26<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="24">4<pos:position pos:line="23" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">HERE<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&lt;&lt;<pos:position pos:line="23" pos:column="40"/></operator> <literal type="string" pos:line="23" pos:column="35">"retry with : "<pos:position pos:line="23" pos:column="50"/></literal> <operator pos:line="23" pos:column="51">&lt;&lt;<pos:position pos:line="23" pos:column="59"/></operator> <name><name pos:line="23" pos:column="54">tunnelState<pos:position pos:line="23" pos:column="65"/></name><operator pos:line="23" pos:column="65">-&gt;<pos:position pos:line="23" pos:column="70"/></operator><name pos:line="23" pos:column="67">serverDestinations<pos:position pos:line="23" pos:column="85"/></name><index pos:line="23" pos:column="85">[<expr><literal type="number" pos:line="23" pos:column="86">0<pos:position pos:line="23" pos:column="87"/></literal></expr>]<pos:position pos:line="23" pos:column="88"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="90"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="24" pos:column="13">AsyncCall<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">::<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">Pointer<pos:position pos:line="24" pos:column="31"/></name></name></type> <name pos:line="24" pos:column="32">call<pos:position pos:line="24" pos:column="36"/></name> <init pos:line="24" pos:column="37">= <expr><call><name pos:line="24" pos:column="39">commCbCall<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><literal type="number" pos:line="24" pos:column="50">26<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="24" pos:column="53">3<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="56">"tunnelConnectDone"<pos:position pos:line="24" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="77">CommConnectCbPtrFun<pos:position pos:line="24" pos:column="96"/></name><argument_list pos:line="24" pos:column="96">(<argument><expr><name pos:line="24" pos:column="97">tunnelConnectDone<pos:position pos:line="24" pos:column="114"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="116">tunnelState<pos:position pos:line="24" pos:column="127"/></name></expr></argument>)<pos:position pos:line="24" pos:column="128"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="129"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="130"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="25" pos:column="13">Comm<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">::<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">ConnOpener<pos:position pos:line="25" pos:column="29"/></name></name> <modifier pos:line="25" pos:column="30">*<pos:position pos:line="25" pos:column="31"/></modifier></type><name pos:line="25" pos:column="31">cs<pos:position pos:line="25" pos:column="33"/></name> <init pos:line="25" pos:column="34">= <expr><operator pos:line="25" pos:column="36">new<pos:position pos:line="25" pos:column="39"/></operator> <call><name><name pos:line="25" pos:column="40">Comm<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">::<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="46">ConnOpener<pos:position pos:line="25" pos:column="56"/></name></name><argument_list pos:line="25" pos:column="56">(<argument><expr><name><name pos:line="25" pos:column="57">tunnelState<pos:position pos:line="25" pos:column="68"/></name><operator pos:line="25" pos:column="68">-&gt;<pos:position pos:line="25" pos:column="73"/></operator><name pos:line="25" pos:column="70">serverDestinations<pos:position pos:line="25" pos:column="88"/></name><index pos:line="25" pos:column="88">[<expr><literal type="number" pos:line="25" pos:column="89">0<pos:position pos:line="25" pos:column="90"/></literal></expr>]<pos:position pos:line="25" pos:column="91"/></index></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="93">call<pos:position pos:line="25" pos:column="97"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="99">Config<pos:position pos:line="25" pos:column="105"/></name><operator pos:line="25" pos:column="105">.<pos:position pos:line="25" pos:column="106"/></operator><name pos:line="25" pos:column="106">Timeout<pos:position pos:line="25" pos:column="113"/></name><operator pos:line="25" pos:column="113">.<pos:position pos:line="25" pos:column="114"/></operator><name pos:line="25" pos:column="114">connect<pos:position pos:line="25" pos:column="121"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="122"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="123"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">cs<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">setHost<pos:position pos:line="26" pos:column="24"/></name></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name><name pos:line="26" pos:column="25">tunnelState<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">url<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">AsyncJob<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">::<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">Start<pos:position pos:line="27" pos:column="28"/></name></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">cs<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">26<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="24">4<pos:position pos:line="29" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">HERE<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">&lt;&lt;<pos:position pos:line="29" pos:column="40"/></operator> <literal type="string" pos:line="29" pos:column="35">"terminate with error."<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">ErrorState<pos:position pos:line="30" pos:column="23"/></name> <modifier pos:line="30" pos:column="24">*<pos:position pos:line="30" pos:column="25"/></modifier></type><name pos:line="30" pos:column="25">err<pos:position pos:line="30" pos:column="28"/></name> <init pos:line="30" pos:column="29">= <expr><operator pos:line="30" pos:column="31">new<pos:position pos:line="30" pos:column="34"/></operator> <call><name pos:line="30" pos:column="35">ErrorState<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">ERR_CONNECT_FAIL<pos:position pos:line="30" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="64">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="30" pos:column="88"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="90">tunnelState<pos:position pos:line="30" pos:column="101"/></name><operator pos:line="30" pos:column="101">-&gt;<pos:position pos:line="30" pos:column="106"/></operator><name pos:line="30" pos:column="103">request<pos:position pos:line="30" pos:column="110"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="111"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="112"/></decl_stmt>
            <expr_stmt><expr><operator pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">tunnelState<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">status_ptr<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">=<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="40">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="31" pos:column="64"/></name></expr>;<pos:position pos:line="31" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">err<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">xerrno<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">xerrno<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
            <comment type="line" pos:line="33" pos:column="13">// on timeout is this still:    err-&gt;xerrno = ETIMEDOUT;</comment>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">err<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">port<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <call><name><name pos:line="34" pos:column="25">conn<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">remote<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">GetPort<pos:position pos:line="34" pos:column="45"/></name></name><argument_list pos:line="34" pos:column="45">()<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">err<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">callback<pos:position pos:line="35" pos:column="26"/></name></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="29">tunnelErrorComplete<pos:position pos:line="35" pos:column="48"/></name></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">err<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">callback_data<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">tunnelState<pos:position pos:line="36" pos:column="45"/></name></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">errorSend<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name><name pos:line="37" pos:column="23">tunnelState<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">client<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">.<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">conn<pos:position pos:line="37" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="49">err<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></else></if>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><name pos:line="42" pos:column="5">USE_DELAY_POOLS<pos:position pos:line="42" pos:column="20"/></name></expr></cpp:if>
    <comment type="block" pos:line="43" pos:column="5">/* no point using the delayIsNoDelay stuff since tunnel is nice and simple */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name><name pos:line="44" pos:column="9">conn<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">getPeer<pos:position pos:line="44" pos:column="22"/></name></name><argument_list pos:line="44" pos:column="22">()<pos:position pos:line="44" pos:column="24"/></argument_list></call> <operator pos:line="44" pos:column="25">&amp;&amp;<pos:position pos:line="44" pos:column="35"/></operator> <call><name><name pos:line="44" pos:column="28">conn<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">getPeer<pos:position pos:line="44" pos:column="41"/></name></name><argument_list pos:line="44" pos:column="41">()<pos:position pos:line="44" pos:column="43"/></argument_list></call><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name><name pos:line="44" pos:column="45">options<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">.<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="53">no_delay<pos:position pos:line="44" pos:column="61"/></name></name></expr>)<pos:position pos:line="44" pos:column="62"/></condition><then pos:line="44" pos:column="62">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="45" pos:column="9">tunnelState<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">server<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">.<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="29">setDelayId<pos:position pos:line="45" pos:column="39"/></name></name><argument_list pos:line="45" pos:column="39">(<argument><expr><call><name pos:line="45" pos:column="40">DelayId<pos:position pos:line="45" pos:column="47"/></name><argument_list pos:line="45" pos:column="47">()<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="48" pos:column="5">tunnelState<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">request<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">hier<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">.<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">note<pos:position pos:line="48" pos:column="36"/></name></name><argument_list pos:line="48" pos:column="36">(<argument><expr><name pos:line="48" pos:column="37">conn<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><call><name><name pos:line="48" pos:column="43">tunnelState<pos:position pos:line="48" pos:column="54"/></name><operator pos:line="48" pos:column="54">-&gt;<pos:position pos:line="48" pos:column="59"/></operator><name pos:line="48" pos:column="56">getHost<pos:position pos:line="48" pos:column="63"/></name></name><argument_list pos:line="48" pos:column="63">()<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">tunnelState<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">server<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">.<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">conn<pos:position pos:line="50" pos:column="29"/></name></name> <operator pos:line="50" pos:column="30">=<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="32">conn<pos:position pos:line="50" pos:column="36"/></name></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">tunnelState<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">request<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">peer_host<pos:position pos:line="51" pos:column="36"/></name></name> <operator pos:line="51" pos:column="37">=<pos:position pos:line="51" pos:column="38"/></operator> <ternary><condition><expr><call><name><name pos:line="51" pos:column="39">conn<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">getPeer<pos:position pos:line="51" pos:column="52"/></name></name><argument_list pos:line="51" pos:column="52">()<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr> ?<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56"> <expr><call><name><name pos:line="51" pos:column="57">conn<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">-&gt;<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="63">getPeer<pos:position pos:line="51" pos:column="70"/></name></name><argument_list pos:line="51" pos:column="70">()<pos:position pos:line="51" pos:column="72"/></argument_list></call><operator pos:line="51" pos:column="72">-&gt;<pos:position pos:line="51" pos:column="77"/></operator><name pos:line="51" pos:column="74">host<pos:position pos:line="51" pos:column="78"/></name></expr> <pos:position pos:line="51" pos:column="79"/></then><else pos:line="51" pos:column="79">: <expr><name pos:line="51" pos:column="81">NULL<pos:position pos:line="51" pos:column="85"/></name></expr></else></ternary></expr>;<pos:position pos:line="51" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">comm_add_close_handler<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name><name pos:line="52" pos:column="28">conn<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">-&gt;<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="34">fd<pos:position pos:line="52" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="38">tunnelServerClosed<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">tunnelState<pos:position pos:line="52" pos:column="69"/></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">debugs<pos:position pos:line="54" pos:column="11"/></name><argument_list pos:line="54" pos:column="11">(<argument><expr><literal type="number" pos:line="54" pos:column="12">26<pos:position pos:line="54" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="16">4<pos:position pos:line="54" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="19">HERE<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">&lt;&lt;<pos:position pos:line="54" pos:column="32"/></operator> <literal type="string" pos:line="54" pos:column="27">"determine post-connect handling pathway."<pos:position pos:line="54" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="71"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><call><name><name pos:line="55" pos:column="9">conn<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">getPeer<pos:position pos:line="55" pos:column="22"/></name></name><argument_list pos:line="55" pos:column="22">()<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="25"/></condition><then pos:line="55" pos:column="25"> <block pos:line="55" pos:column="26">{
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">tunnelState<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">request<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">peer_login<pos:position pos:line="56" pos:column="41"/></name></name> <operator pos:line="56" pos:column="42">=<pos:position pos:line="56" pos:column="43"/></operator> <call><name><name pos:line="56" pos:column="44">conn<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">-&gt;<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="50">getPeer<pos:position pos:line="56" pos:column="57"/></name></name><argument_list pos:line="56" pos:column="57">()<pos:position pos:line="56" pos:column="59"/></argument_list></call><operator pos:line="56" pos:column="59">-&gt;<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="61">login<pos:position pos:line="56" pos:column="66"/></name></expr>;<pos:position pos:line="56" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">tunnelState<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">request<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">flags<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">.<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="37">proxying<pos:position pos:line="57" pos:column="45"/></name></name> <operator pos:line="57" pos:column="46">=<pos:position pos:line="57" pos:column="47"/></operator> <operator pos:line="57" pos:column="48">(<pos:position pos:line="57" pos:column="49"/></operator><ternary><condition><expr><call><name><name pos:line="57" pos:column="49">conn<pos:position pos:line="57" pos:column="53"/></name><operator pos:line="57" pos:column="53">-&gt;<pos:position pos:line="57" pos:column="58"/></operator><name pos:line="57" pos:column="55">getPeer<pos:position pos:line="57" pos:column="62"/></name></name><argument_list pos:line="57" pos:column="62">()<pos:position pos:line="57" pos:column="64"/></argument_list></call><operator pos:line="57" pos:column="64">-&gt;<pos:position pos:line="57" pos:column="69"/></operator><name><name pos:line="57" pos:column="66">options<pos:position pos:line="57" pos:column="73"/></name><operator pos:line="57" pos:column="73">.<pos:position pos:line="57" pos:column="74"/></operator><name pos:line="57" pos:column="74">originserver<pos:position pos:line="57" pos:column="86"/></name></name></expr>?<pos:position pos:line="57" pos:column="87"/></condition><then><expr><literal type="number" pos:line="57" pos:column="87">0<pos:position pos:line="57" pos:column="88"/></literal></expr></then><else pos:line="57" pos:column="88">:<expr><literal type="number" pos:line="57" pos:column="89">1<pos:position pos:line="57" pos:column="90"/></literal></expr></else></ternary><operator pos:line="57" pos:column="90">)<pos:position pos:line="57" pos:column="91"/></operator></expr>;<pos:position pos:line="57" pos:column="92"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then> <else pos:line="58" pos:column="7">else <block pos:line="58" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">tunnelState<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">request<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">-&gt;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="31">peer_login<pos:position pos:line="59" pos:column="41"/></name></name> <operator pos:line="59" pos:column="42">=<pos:position pos:line="59" pos:column="43"/></operator> <name pos:line="59" pos:column="44">NULL<pos:position pos:line="59" pos:column="48"/></name></expr>;<pos:position pos:line="59" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">tunnelState<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">request<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">flags<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">.<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="37">proxying<pos:position pos:line="60" pos:column="45"/></name></name> <operator pos:line="60" pos:column="46">=<pos:position pos:line="60" pos:column="47"/></operator> <literal type="number" pos:line="60" pos:column="48">0<pos:position pos:line="60" pos:column="49"/></literal></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name><name pos:line="63" pos:column="9">tunnelState<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">request<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">flags<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">.<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">proxying<pos:position pos:line="63" pos:column="45"/></name></name></expr>)<pos:position pos:line="63" pos:column="46"/></condition><then pos:line="63" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="9">tunnelRelayConnectRequest<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">conn<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">tunnelState<pos:position pos:line="64" pos:column="52"/></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt></block></then>
    <else pos:line="65" pos:column="5">else <block pos:line="65" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">tunnelConnected<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">conn<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">tunnelState<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>

    <decl_stmt><decl><type><name><name pos:line="69" pos:column="5">AsyncCall<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">::<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">Pointer<pos:position pos:line="69" pos:column="23"/></name></name></type> <name pos:line="69" pos:column="24">timeoutCall<pos:position pos:line="69" pos:column="35"/></name> <init pos:line="69" pos:column="36">= <expr><call><name pos:line="69" pos:column="38">commCbCall<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr><literal type="number" pos:line="69" pos:column="49">5<pos:position pos:line="69" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="52">4<pos:position pos:line="69" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="55">"tunnelTimeout"<pos:position pos:line="69" pos:column="70"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="70" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="70" pos:column="57"/></name><argument_list pos:line="70" pos:column="57">(<argument><expr><name pos:line="70" pos:column="58">tunnelTimeout<pos:position pos:line="70" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="73">tunnelState<pos:position pos:line="70" pos:column="84"/></name></expr></argument>)<pos:position pos:line="70" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="70" pos:column="87"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">commSetConnTimeout<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">conn<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="30">Config<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">.<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">Timeout<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">.<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="45">read<pos:position pos:line="71" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">timeoutCall<pos:position pos:line="71" pos:column="62"/></name></expr></argument>)<pos:position pos:line="71" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="64"/></expr_stmt>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

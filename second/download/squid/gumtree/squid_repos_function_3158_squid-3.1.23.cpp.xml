<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3158_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">gopherTimeout<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">fd<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">void<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">data<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">GopherStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">gopherState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">GopherStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">entry<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name><name pos:line="5" pos:column="25">gopherState<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">entry<pos:position pos:line="5" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">10<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">4<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"gopherTimeout: FD "<pos:position pos:line="6" pos:column="39"/></literal> <operator pos:line="6" pos:column="40">&lt;&lt;<pos:position pos:line="6" pos:column="48"/></operator> <name pos:line="6" pos:column="43">fd<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">&lt;&lt;<pos:position pos:line="6" pos:column="54"/></operator> <literal type="string" pos:line="6" pos:column="49">": '"<pos:position pos:line="6" pos:column="54"/></literal> <operator pos:line="6" pos:column="55">&lt;&lt;<pos:position pos:line="6" pos:column="63"/></operator> <call><name><name pos:line="6" pos:column="58">entry<pos:position pos:line="6" pos:column="63"/></name><operator pos:line="6" pos:column="63">-&gt;<pos:position pos:line="6" pos:column="68"/></operator><name pos:line="6" pos:column="65">url<pos:position pos:line="6" pos:column="68"/></name></name><argument_list pos:line="6" pos:column="68">()<pos:position pos:line="6" pos:column="70"/></argument_list></call> <operator pos:line="6" pos:column="71">&lt;&lt;<pos:position pos:line="6" pos:column="79"/></operator> <literal type="string" pos:line="6" pos:column="74">"'"<pos:position pos:line="6" pos:column="77"/></literal></expr></argument> )<pos:position pos:line="6" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">gopherState<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">fwd<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">fail<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><call><name pos:line="8" pos:column="28">errorCon<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">ERR_READ_TIMEOUT<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">HTTP_GATEWAY_TIMEOUT<pos:position pos:line="8" pos:column="75"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="77">gopherState<pos:position pos:line="8" pos:column="88"/></name><operator pos:line="8" pos:column="88">-&gt;<pos:position pos:line="8" pos:column="93"/></operator><name pos:line="8" pos:column="90">fwd<pos:position pos:line="8" pos:column="93"/></name><operator pos:line="8" pos:column="93">-&gt;<pos:position pos:line="8" pos:column="98"/></operator><name pos:line="8" pos:column="95">request<pos:position pos:line="8" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="105"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">comm_close<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">fd<pos:position pos:line="10" pos:column="18"/></name></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2652_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">HttpReply<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name><name pos:line="2" pos:column="1">ErrorState<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">BuildHttpReply<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpReply<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">rep<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">new<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">HttpReply<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">name<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">errorPageName<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">page_id<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* no LMT for error pages; error pages expire immediately */</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">name<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <literal type="char" pos:line="8" pos:column="20">'3'<pos:position pos:line="8" pos:column="23"/></literal> <operator pos:line="8" pos:column="24">||<pos:position pos:line="8" pos:column="26"/></operator> <operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><name><name pos:line="8" pos:column="28">name<pos:position pos:line="8" pos:column="32"/></name><index pos:line="8" pos:column="32">[<expr><literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>]<pos:position pos:line="8" pos:column="35"/></index></name> <operator pos:line="8" pos:column="36">!=<pos:position pos:line="8" pos:column="38"/></operator> <literal type="char" pos:line="8" pos:column="39">'2'<pos:position pos:line="8" pos:column="42"/></literal> <operator pos:line="8" pos:column="43">&amp;&amp;<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="46">name<pos:position pos:line="8" pos:column="50"/></name><index pos:line="8" pos:column="50">[<expr><literal type="number" pos:line="8" pos:column="51">0<pos:position pos:line="8" pos:column="52"/></literal></expr>]<pos:position pos:line="8" pos:column="53"/></index></name> <operator pos:line="8" pos:column="54">!=<pos:position pos:line="8" pos:column="56"/></operator> <literal type="char" pos:line="8" pos:column="57">'4'<pos:position pos:line="8" pos:column="60"/></literal> <operator pos:line="8" pos:column="61">&amp;&amp;<pos:position pos:line="8" pos:column="71"/></operator> <name><name pos:line="8" pos:column="64">name<pos:position pos:line="8" pos:column="68"/></name><index pos:line="8" pos:column="68">[<expr><literal type="number" pos:line="8" pos:column="69">0<pos:position pos:line="8" pos:column="70"/></literal></expr>]<pos:position pos:line="8" pos:column="71"/></index></name> <operator pos:line="8" pos:column="72">!=<pos:position pos:line="8" pos:column="74"/></operator> <literal type="char" pos:line="8" pos:column="75">'5'<pos:position pos:line="8" pos:column="78"/></literal> <operator pos:line="8" pos:column="79">&amp;&amp;<pos:position pos:line="8" pos:column="89"/></operator> <call><name pos:line="8" pos:column="82">strchr<pos:position pos:line="8" pos:column="88"/></name><argument_list pos:line="8" pos:column="88">(<argument><expr><name pos:line="8" pos:column="89">name<pos:position pos:line="8" pos:column="93"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="95">':'<pos:position pos:line="8" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="99"/></argument_list></call><operator pos:line="8" pos:column="99">)<pos:position pos:line="8" pos:column="100"/></operator></expr>)<pos:position pos:line="8" pos:column="101"/></condition><then pos:line="8" pos:column="101"> <block pos:line="8" pos:column="102">{
        <comment type="block" pos:line="9" pos:column="9">/* Redirection */</comment>
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">Http<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">::<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">StatusCode<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">status<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><name><name pos:line="10" pos:column="35">Http<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">::<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">scFound<pos:position pos:line="10" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>
        <comment type="line" pos:line="11" pos:column="9">// Use configured 3xx reply status if set.</comment>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">name<pos:position pos:line="12" pos:column="17"/></name><index pos:line="12" pos:column="17">[<expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>]<pos:position pos:line="12" pos:column="20"/></index></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <literal type="char" pos:line="12" pos:column="24">'3'<pos:position pos:line="12" pos:column="27"/></literal></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="13">status<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">httpStatus<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt></block></then>
        <else pos:line="14" pos:column="9">else <block pos:line="14" pos:column="14">{
            <comment type="line" pos:line="15" pos:column="13">// Use 307 for HTTP/1.1 non-GET/HEAD requests.</comment>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">request<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">!=<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">&amp;&amp;<pos:position pos:line="16" pos:column="43"/></operator> <name><name pos:line="16" pos:column="36">request<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">method<pos:position pos:line="16" pos:column="51"/></name></name> <operator pos:line="16" pos:column="52">!=<pos:position pos:line="16" pos:column="54"/></operator> <name><name pos:line="16" pos:column="55">Http<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">::<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="61">METHOD_GET<pos:position pos:line="16" pos:column="71"/></name></name> <operator pos:line="16" pos:column="72">&amp;&amp;<pos:position pos:line="16" pos:column="82"/></operator> <name><name pos:line="16" pos:column="75">request<pos:position pos:line="16" pos:column="82"/></name><operator pos:line="16" pos:column="82">-&gt;<pos:position pos:line="16" pos:column="87"/></operator><name pos:line="16" pos:column="84">method<pos:position pos:line="16" pos:column="90"/></name></name> <operator pos:line="16" pos:column="91">!=<pos:position pos:line="16" pos:column="93"/></operator> <name><name pos:line="16" pos:column="94">Http<pos:position pos:line="16" pos:column="98"/></name><operator pos:line="16" pos:column="98">::<pos:position pos:line="16" pos:column="100"/></operator><name pos:line="16" pos:column="100">METHOD_HEAD<pos:position pos:line="16" pos:column="111"/></name></name> <operator pos:line="16" pos:column="112">&amp;&amp;<pos:position pos:line="16" pos:column="122"/></operator> <name><name pos:line="16" pos:column="115">request<pos:position pos:line="16" pos:column="122"/></name><operator pos:line="16" pos:column="122">-&gt;<pos:position pos:line="16" pos:column="127"/></operator><name pos:line="16" pos:column="124">http_ver<pos:position pos:line="16" pos:column="132"/></name></name> <operator pos:line="16" pos:column="133">&gt;=<pos:position pos:line="16" pos:column="138"/></operator> <call><name><name pos:line="16" pos:column="136">Http<pos:position pos:line="16" pos:column="140"/></name><operator pos:line="16" pos:column="140">::<pos:position pos:line="16" pos:column="142"/></operator><name pos:line="16" pos:column="142">ProtocolVersion<pos:position pos:line="16" pos:column="157"/></name></name><argument_list pos:line="16" pos:column="157">(<argument><expr><literal type="number" pos:line="16" pos:column="158">1<pos:position pos:line="16" pos:column="159"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="160">1<pos:position pos:line="16" pos:column="161"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="162"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="163"/></condition><then pos:line="16" pos:column="163">
                <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">status<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <name><name pos:line="17" pos:column="26">Http<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">::<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">scTemporaryRedirect<pos:position pos:line="17" pos:column="51"/></name></name></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt></block></then></if>
        }<pos:position pos:line="18" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">rep<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">setHeaders<pos:position pos:line="20" pos:column="24"/></name></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">status<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">NULL<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="39">"text/html;charset=utf-8"<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="66">0<pos:position pos:line="20" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="69">0<pos:position pos:line="20" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="72">-<pos:position pos:line="20" pos:column="73"/></operator><literal type="number" pos:line="20" pos:column="73">1<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">request<pos:position pos:line="22" pos:column="20"/></name></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21"> <block pos:line="22" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">MemBuf<pos:position pos:line="23" pos:column="19"/></name></type> <name pos:line="23" pos:column="20">redirect_location<pos:position pos:line="23" pos:column="37"/></name></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">redirect_location<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">.<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">init<pos:position pos:line="24" pos:column="35"/></name></name><argument_list pos:line="24" pos:column="35">()<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">DenyInfoLocation<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">name<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">request<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">redirect_location<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">httpHeaderPutStrf<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><operator pos:line="26" pos:column="31">&amp;<pos:position pos:line="26" pos:column="36"/></operator><name><name pos:line="26" pos:column="32">rep<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">header<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="45">Http<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">::<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">HdrType<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">::<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="60">LOCATION<pos:position pos:line="26" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="70">"%s"<pos:position pos:line="26" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="26" pos:column="76">redirect_location<pos:position pos:line="26" pos:column="93"/></name><operator pos:line="26" pos:column="93">.<pos:position pos:line="26" pos:column="94"/></operator><name pos:line="26" pos:column="94">content<pos:position pos:line="26" pos:column="101"/></name></name><argument_list pos:line="26" pos:column="101">()<pos:position pos:line="26" pos:column="103"/></argument_list></call></expr></argument> )<pos:position pos:line="26" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="106"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">httpHeaderPutStrf<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator><name><name pos:line="29" pos:column="28">rep<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">header<pos:position pos:line="29" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="41">Http<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">::<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="47">HdrType<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">::<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="56">X_SQUID_ERROR<pos:position pos:line="29" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="71">"%d %s"<pos:position pos:line="29" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="80">httpStatus<pos:position pos:line="29" pos:column="90"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="92">"Access Denied"<pos:position pos:line="29" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="109"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">MemBuf<pos:position pos:line="31" pos:column="15"/></name> <modifier pos:line="31" pos:column="16">*<pos:position pos:line="31" pos:column="17"/></modifier></type><name pos:line="31" pos:column="17">content<pos:position pos:line="31" pos:column="24"/></name> <init pos:line="31" pos:column="25">= <expr><call><name pos:line="31" pos:column="27">BuildContent<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">()<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="42"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">rep<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">setHeaders<pos:position pos:line="32" pos:column="24"/></name></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">httpStatus<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">NULL<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="43">"text/html;charset=utf-8"<pos:position pos:line="32" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="32" pos:column="70">content<pos:position pos:line="32" pos:column="77"/></name><operator pos:line="32" pos:column="77">-&gt;<pos:position pos:line="32" pos:column="82"/></operator><name pos:line="32" pos:column="79">contentSize<pos:position pos:line="32" pos:column="90"/></name></name><argument_list pos:line="32" pos:column="90">()<pos:position pos:line="32" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="94">0<pos:position pos:line="32" pos:column="95"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="97">-<pos:position pos:line="32" pos:column="98"/></operator><literal type="number" pos:line="32" pos:column="98">1<pos:position pos:line="32" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="101"/></expr_stmt>
        <comment type="block" pos:line="33" pos:column="9">/*
         * include some information for downstream caches. Implicit
         * replaceable content. This isn't quite sufficient. xerrno is not
         * necessarily meaningful to another system, so we really should
         * expand it. Additionally, we should identify ourselves. Someone
         * might want to know. Someone _will_ want to know OTOH, the first
         * X-CACHE-MISS entry should tell us who.
         */</comment>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">httpHeaderPutStrf<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><operator pos:line="41" pos:column="27">&amp;<pos:position pos:line="41" pos:column="32"/></operator><name><name pos:line="41" pos:column="28">rep<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">header<pos:position pos:line="41" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="41">Http<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">::<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">HdrType<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">::<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="56">X_SQUID_ERROR<pos:position pos:line="41" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="71">"%s %d"<pos:position pos:line="41" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="80">name<pos:position pos:line="41" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="86">xerrno<pos:position pos:line="41" pos:column="92"/></name></expr></argument>)<pos:position pos:line="41" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="94"/></expr_stmt>

<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="43" pos:column="20"/></name></expr></cpp:if>
        <comment type="block" pos:line="44" pos:column="9">/*
         * If error page auto-negotiate is enabled in any way, send the Vary.
         * RFC 2616 section 13.6 and 14.44 says MAY and SHOULD do this.
         * We have even better reasons though:
         * see http://wiki.squid-cache.org/KnowledgeBase/VaryNotCaching
         */</comment>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name><name pos:line="50" pos:column="14">Config<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">.<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">errorDirectory<pos:position pos:line="50" pos:column="35"/></name></name></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36"> <block pos:line="50" pos:column="37">{
            <comment type="block" pos:line="51" pos:column="13">/* We 'negotiated' this ONLY from the Accept-Language. */</comment>
            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">rep<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">header<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">.<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">delById<pos:position pos:line="52" pos:column="32"/></name></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name><name pos:line="52" pos:column="33">Http<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">::<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="39">HdrType<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">::<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">VARY<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">rep<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">header<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">.<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="25">putStr<pos:position pos:line="53" pos:column="31"/></name></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name><name pos:line="53" pos:column="32">Http<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">::<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">HdrType<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">::<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">VARY<pos:position pos:line="53" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="53">"Accept-Language"<pos:position pos:line="53" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="56" pos:column="9">/* add the Content-Language header according to RFC section 14.12 */</comment>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">err_language<pos:position pos:line="57" pos:column="25"/></name></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26"> <block pos:line="57" pos:column="27">{
            <expr_stmt><expr><call><name><name pos:line="58" pos:column="13">rep<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">header<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">.<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="25">putStr<pos:position pos:line="58" pos:column="31"/></name></name><argument_list pos:line="58" pos:column="31">(<argument><expr><name><name pos:line="58" pos:column="32">Http<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">::<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">HdrType<pos:position pos:line="58" pos:column="45"/></name><operator pos:line="58" pos:column="45">::<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="47">CONTENT_LANGUAGE<pos:position pos:line="58" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="65">err_language<pos:position pos:line="58" pos:column="77"/></name></expr></argument>)<pos:position pos:line="58" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then> <else pos:line="59" pos:column="11">else
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="60" pos:column="8">/* USE_ERROR_LOCALES */</comment>
        <block pos:line="61" pos:column="9">{
            <comment type="block" pos:line="62" pos:column="13">/* default templates are in English */</comment>
            <comment type="block" pos:line="63" pos:column="13">/* language is known unless error_directory override used */</comment>
            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><operator pos:line="64" pos:column="17">!<pos:position pos:line="64" pos:column="18"/></operator><name><name pos:line="64" pos:column="18">Config<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">.<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="25">errorDirectory<pos:position pos:line="64" pos:column="39"/></name></name></expr>)<pos:position pos:line="64" pos:column="40"/></condition><then pos:line="64" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="65" pos:column="17">rep<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">header<pos:position pos:line="65" pos:column="28"/></name><operator pos:line="65" pos:column="28">.<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="29">putStr<pos:position pos:line="65" pos:column="35"/></name></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name><name pos:line="65" pos:column="36">Http<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">::<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">HdrType<pos:position pos:line="65" pos:column="49"/></name><operator pos:line="65" pos:column="49">::<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="51">CONTENT_LANGUAGE<pos:position pos:line="65" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="69">"en"<pos:position pos:line="65" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt></block></then></if>
        }<pos:position pos:line="66" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="68" pos:column="9">rep<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">body<pos:position pos:line="68" pos:column="18"/></name><operator pos:line="68" pos:column="18">.<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="19">setMb<pos:position pos:line="68" pos:column="24"/></name></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">content<pos:position pos:line="68" pos:column="32"/></name></expr></argument>)<pos:position pos:line="68" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>
        <comment type="block" pos:line="69" pos:column="9">/* do not memBufClean() or delete the content, it was absorbed by httpBody */</comment>
    }<pos:position pos:line="70" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="72" pos:column="5">// Make sure error codes get back to the client side for logging and</comment>
    <comment type="line" pos:line="73" pos:column="5">// error tracking.</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">request<pos:position pos:line="74" pos:column="16"/></name></expr>)<pos:position pos:line="74" pos:column="17"/></condition><then pos:line="74" pos:column="17"> <block pos:line="74" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">int<pos:position pos:line="75" pos:column="12"/></name></type> <name pos:line="75" pos:column="13">edc<pos:position pos:line="75" pos:column="16"/></name> <init pos:line="75" pos:column="17">= <expr><name pos:line="75" pos:column="19">ERR_DETAIL_NONE<pos:position pos:line="75" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="75" pos:column="35"/></decl_stmt> <comment type="line" pos:line="75" pos:column="36">// error detail code</comment>
<cpp:if pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">if<pos:position pos:line="76" pos:column="4"/></cpp:directive> <expr><name pos:line="76" pos:column="5">USE_OPENSSL<pos:position pos:line="76" pos:column="16"/></name></expr></cpp:if>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">detail<pos:position pos:line="77" pos:column="19"/></name></expr>)<pos:position pos:line="77" pos:column="20"/></condition><then pos:line="77" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="13">edc<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <call><name><name pos:line="78" pos:column="19">detail<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">errorNo<pos:position pos:line="78" pos:column="34"/></name></name><argument_list pos:line="78" pos:column="34">()<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt></block></then>
        <elseif pos:line="79" pos:column="9">else
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name pos:line="81" pos:column="17">detailCode<pos:position pos:line="81" pos:column="27"/></name></expr>)<pos:position pos:line="81" pos:column="28"/></condition><then pos:line="81" pos:column="28">
                <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="17">edc<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">detailCode<pos:position pos:line="82" pos:column="33"/></name></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt></block></then></if></elseif>
            <else pos:line="83" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="17">edc<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <name pos:line="84" pos:column="23">xerrno<pos:position pos:line="84" pos:column="29"/></name></expr>;<pos:position pos:line="84" pos:column="30"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name><name pos:line="85" pos:column="9">request<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">-&gt;<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="18">detailError<pos:position pos:line="85" pos:column="29"/></name></name><argument_list pos:line="85" pos:column="29">(<argument><expr><name pos:line="85" pos:column="30">type<pos:position pos:line="85" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="36">edc<pos:position pos:line="85" pos:column="39"/></name></expr></argument>)<pos:position pos:line="85" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <return pos:line="88" pos:column="5">return <expr><name pos:line="88" pos:column="12">rep<pos:position pos:line="88" pos:column="15"/></name></expr>;<pos:position pos:line="88" pos:column="16"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

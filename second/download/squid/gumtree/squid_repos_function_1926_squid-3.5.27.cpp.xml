<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1926_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">ACLExternal<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">dump<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list> <specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">external_acl_data<pos:position pos:line="4" pos:column="22"/></name> <specifier pos:line="4" pos:column="23">const<pos:position pos:line="4" pos:column="28"/></specifier> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">acl<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">data<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SBufList<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">rv<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">rv<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">.<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">push_back<pos:position pos:line="6" pos:column="17"/></name></name><argument_list pos:line="6" pos:column="17">(<argument><expr><call><name pos:line="6" pos:column="18">SBuf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name><name pos:line="6" pos:column="23">acl<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">def<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">name<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name pos:line="8" pos:column="10">wordlist<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">arg<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name><name pos:line="8" pos:column="26">acl<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">arguments<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></init> <condition><expr><name pos:line="8" pos:column="42">arg<pos:position pos:line="8" pos:column="45"/></name></expr>;<pos:position pos:line="8" pos:column="46"/></condition> <incr><expr><name pos:line="8" pos:column="47">arg<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">=<pos:position pos:line="8" pos:column="52"/></operator> <name><name pos:line="8" pos:column="53">arg<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">next<pos:position pos:line="8" pos:column="62"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="63"/></control> <block pos:line="8" pos:column="64">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">SBuf<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">s<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">Printf<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="string" pos:line="10" pos:column="18">" %s"<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="25">arg<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">key<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">push_back<pos:position pos:line="11" pos:column="21"/></name></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">s<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></for>

    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">rv<pos:position pos:line="14" pos:column="14"/></name></expr>;<pos:position pos:line="14" pos:column="15"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3291_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">ServiceGroup<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">findService<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">ServiceFilter<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="60">filter<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">Pos<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">&amp;<pos:position pos:line="2" pos:column="77"/></modifier></type><name pos:line="2" pos:column="73">pos<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list> <specifier pos:line="2" pos:column="78">const<pos:position pos:line="2" pos:column="83"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">method<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">!=<pos:position pos:line="4" pos:column="18"/></operator> <name><name pos:line="4" pos:column="19">filter<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">.<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">method<pos:position pos:line="4" pos:column="32"/></name></name> <operator pos:line="4" pos:column="33">||<pos:position pos:line="4" pos:column="35"/></operator> <name pos:line="4" pos:column="36">point<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">!=<pos:position pos:line="4" pos:column="44"/></operator> <name><name pos:line="4" pos:column="45">filter<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">.<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">point<pos:position pos:line="4" pos:column="57"/></name></name></expr>)<pos:position pos:line="4" pos:column="58"/></condition><then pos:line="4" pos:column="58"> <block pos:line="4" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">93<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="19">5<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="5" pos:column="21">HERE<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&lt;&lt;<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="29">id<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">&lt;&lt;<pos:position pos:line="5" pos:column="40"/></operator> <literal type="string" pos:line="5" pos:column="35">" serves another location"<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return> <comment type="line" pos:line="6" pos:column="23">// assume other services have the same wrong location</comment>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// find the next interested service, skipping problematic ones if possible</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">bool<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">foundEssential<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><literal type="boolean" pos:line="10" pos:column="27">false<pos:position pos:line="10" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">Pos<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">essPos<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init pos:line="12" pos:column="10">;<pos:position pos:line="12" pos:column="11"/></init> <condition><expr><call><name pos:line="12" pos:column="12">has<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">pos<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></condition> <incr><expr><operator pos:line="12" pos:column="22">++<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">pos<pos:position pos:line="12" pos:column="27"/></name></expr></incr>)<pos:position pos:line="12" pos:column="28"/></control> <block pos:line="12" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">93<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="19">9<pos:position pos:line="13" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="13" pos:column="21">HERE<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">&lt;&lt;<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="29">id<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">&lt;&lt;<pos:position pos:line="13" pos:column="40"/></operator> <literal type="string" pos:line="13" pos:column="35">" checks service at "<pos:position pos:line="13" pos:column="56"/></literal> <operator pos:line="13" pos:column="57">&lt;&lt;<pos:position pos:line="13" pos:column="65"/></operator> <name pos:line="13" pos:column="60">pos<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">ServicePointer<pos:position pos:line="14" pos:column="23"/></name></type> <name pos:line="14" pos:column="24">service<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><call><name pos:line="14" pos:column="34">at<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">pos<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="42"/></decl_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">service<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
            <block type="pseudo"><continue pos:line="17" pos:column="13">continue;<pos:position pos:line="17" pos:column="22"/></continue></block></then></if> <comment type="line" pos:line="17" pos:column="23">// the service was lost due to reconfiguration</comment>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name><name pos:line="19" pos:column="14">service<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">wants<pos:position pos:line="19" pos:column="28"/></name></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">filter<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
            <block type="pseudo"><continue pos:line="20" pos:column="13">continue;<pos:position pos:line="20" pos:column="22"/></continue></block></then></if> <comment type="line" pos:line="20" pos:column="23">// the service is not interested</comment>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name><name pos:line="22" pos:column="13">service<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">up<pos:position pos:line="22" pos:column="24"/></name></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call> <operator pos:line="22" pos:column="27">||<pos:position pos:line="22" pos:column="29"/></operator> <operator pos:line="22" pos:column="30">!<pos:position pos:line="22" pos:column="31"/></operator><call><name><name pos:line="22" pos:column="31">service<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">probed<pos:position pos:line="22" pos:column="46"/></name></name><argument_list pos:line="22" pos:column="46">()<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49"> <block pos:line="22" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">debugs<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="number" pos:line="23" pos:column="20">93<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="23" pos:column="23">9<pos:position pos:line="23" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="23" pos:column="25">HERE<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">&lt;&lt;<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="33">id<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">&lt;&lt;<pos:position pos:line="23" pos:column="44"/></operator> <literal type="string" pos:line="23" pos:column="39">" has matching service at "<pos:position pos:line="23" pos:column="66"/></literal> <operator pos:line="23" pos:column="67">&lt;&lt;<pos:position pos:line="23" pos:column="75"/></operator> <name pos:line="23" pos:column="70">pos<pos:position pos:line="23" pos:column="73"/></name></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="75"/></expr_stmt>
            <return pos:line="24" pos:column="13">return <expr><literal type="boolean" pos:line="24" pos:column="20">true<pos:position pos:line="24" pos:column="24"/></literal></expr>;<pos:position pos:line="24" pos:column="25"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name><name pos:line="27" pos:column="13">service<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">cfg<pos:position pos:line="27" pos:column="25"/></name></name><argument_list pos:line="27" pos:column="25">()<pos:position pos:line="27" pos:column="27"/></argument_list></call><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">bypass<pos:position pos:line="27" pos:column="34"/></name></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35"> <block pos:line="27" pos:column="36">{ <comment type="line" pos:line="27" pos:column="38">// we can safely ignore bypassable downers</comment>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">debugs<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="number" pos:line="28" pos:column="20">93<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="28" pos:column="23">9<pos:position pos:line="28" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="28" pos:column="25">HERE<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">&lt;&lt;<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="33">id<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">&lt;&lt;<pos:position pos:line="28" pos:column="44"/></operator> <literal type="string" pos:line="28" pos:column="39">" has bypassable service at "<pos:position pos:line="28" pos:column="68"/></literal> <operator pos:line="28" pos:column="69">&lt;&lt;<pos:position pos:line="28" pos:column="77"/></operator> <name pos:line="28" pos:column="72">pos<pos:position pos:line="28" pos:column="75"/></name></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
            <continue pos:line="29" pos:column="13">continue;<pos:position pos:line="29" pos:column="22"/></continue>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">allServicesSame<pos:position pos:line="32" pos:column="29"/></name></expr>)<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30"> <block pos:line="32" pos:column="31">{ <comment type="line" pos:line="32" pos:column="33">// cannot skip (i.e., find best) service</comment>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">debugs<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="number" pos:line="33" pos:column="20">93<pos:position pos:line="33" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="33" pos:column="23">9<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="33" pos:column="25">HERE<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">&lt;&lt;<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="33">id<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">&lt;&lt;<pos:position pos:line="33" pos:column="44"/></operator> <literal type="string" pos:line="33" pos:column="39">" has essential service at "<pos:position pos:line="33" pos:column="67"/></literal> <operator pos:line="33" pos:column="68">&lt;&lt;<pos:position pos:line="33" pos:column="76"/></operator> <name pos:line="33" pos:column="71">pos<pos:position pos:line="33" pos:column="74"/></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
            <return pos:line="34" pos:column="13">return <expr><literal type="boolean" pos:line="34" pos:column="20">true<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">foundEssential<pos:position pos:line="37" pos:column="28"/></name></expr>)<pos:position pos:line="37" pos:column="29"/></condition><then pos:line="37" pos:column="29"> <block pos:line="37" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">93<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="38" pos:column="23">9<pos:position pos:line="38" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="38" pos:column="25">HERE<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">&lt;&lt;<pos:position pos:line="38" pos:column="38"/></operator> <name pos:line="38" pos:column="33">id<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">&lt;&lt;<pos:position pos:line="38" pos:column="44"/></operator> <literal type="string" pos:line="38" pos:column="39">" searches for best essential service from "<pos:position pos:line="38" pos:column="83"/></literal> <operator pos:line="38" pos:column="84">&lt;&lt;<pos:position pos:line="38" pos:column="92"/></operator> <name pos:line="38" pos:column="87">pos<pos:position pos:line="38" pos:column="90"/></name></expr></argument>)<pos:position pos:line="38" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><name pos:line="39" pos:column="13">foundEssential<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <literal type="boolean" pos:line="39" pos:column="30">true<pos:position pos:line="39" pos:column="34"/></literal></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">essPos<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">pos<pos:position pos:line="40" pos:column="25"/></name></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></for>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">foundEssential<pos:position pos:line="44" pos:column="23"/></name></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24"> <block pos:line="44" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">debugs<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="number" pos:line="45" pos:column="16">93<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="45" pos:column="19">9<pos:position pos:line="45" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="45" pos:column="21">HERE<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">&lt;&lt;<pos:position pos:line="45" pos:column="34"/></operator> <name pos:line="45" pos:column="29">id<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">&lt;&lt;<pos:position pos:line="45" pos:column="40"/></operator> <literal type="string" pos:line="45" pos:column="35">" has best essential service at "<pos:position pos:line="45" pos:column="68"/></literal> <operator pos:line="45" pos:column="69">&lt;&lt;<pos:position pos:line="45" pos:column="77"/></operator> <name pos:line="45" pos:column="72">essPos<pos:position pos:line="45" pos:column="78"/></name></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">pos<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <name pos:line="46" pos:column="15">essPos<pos:position pos:line="46" pos:column="21"/></name></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
        <return pos:line="47" pos:column="9">return <expr><literal type="boolean" pos:line="47" pos:column="16">true<pos:position pos:line="47" pos:column="20"/></literal></expr>;<pos:position pos:line="47" pos:column="21"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">debugs<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><literal type="number" pos:line="50" pos:column="12">93<pos:position pos:line="50" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="50" pos:column="15">5<pos:position pos:line="50" pos:column="16"/></literal></expr></argument>,<argument><expr><name pos:line="50" pos:column="17">HERE<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">&lt;&lt;<pos:position pos:line="50" pos:column="30"/></operator> <name pos:line="50" pos:column="25">id<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">&lt;&lt;<pos:position pos:line="50" pos:column="36"/></operator> <literal type="string" pos:line="50" pos:column="31">" has no matching services"<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><literal type="boolean" pos:line="51" pos:column="12">false<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

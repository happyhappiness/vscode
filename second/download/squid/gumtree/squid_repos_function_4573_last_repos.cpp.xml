<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4573_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">StoreEntry<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">Store<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Controller<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">find<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">cache_key<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">key<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">20<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="19">storeKeyText<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">key<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<decl><type><name pos:line="6" pos:column="9">StoreEntry<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">e<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><cast type="static" pos:line="6" pos:column="25">static_cast<argument_list type="generic" pos:line="6" pos:column="36">&lt;<argument><expr><name pos:line="6" pos:column="37">StoreEntry<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="52"/></argument_list><argument_list pos:line="6" pos:column="49">(<argument><expr><call><name pos:line="6" pos:column="50">hash_lookup<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><name pos:line="6" pos:column="62">store_table<pos:position pos:line="6" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="75">key<pos:position pos:line="6" pos:column="78"/></name></expr></argument>)<pos:position pos:line="6" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="6" pos:column="81"/></condition><then pos:line="6" pos:column="81"> <block pos:line="6" pos:column="82">{
        <comment type="line" pos:line="7" pos:column="9">// TODO: ignore and maybe handleIdleEntry() unlocked intransit entries</comment>
        <comment type="line" pos:line="8" pos:column="9">// because their backing store slot may be gone already.</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">20<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">HERE<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&lt;&lt;<pos:position pos:line="9" pos:column="36"/></operator> <literal type="string" pos:line="9" pos:column="31">"got in-transit entry: "<pos:position pos:line="9" pos:column="55"/></literal> <operator pos:line="9" pos:column="56">&lt;&lt;<pos:position pos:line="9" pos:column="64"/></operator> <operator pos:line="9" pos:column="59">*<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="60">e<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">e<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="13" pos:column="5">// Must search transients before caches because we must sync those we find.</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">transients<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<decl><type><name pos:line="15" pos:column="13">StoreEntry<pos:position pos:line="15" pos:column="23"/></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">e<pos:position pos:line="15" pos:column="26"/></name> <init pos:line="15" pos:column="27">= <expr><call><name><name pos:line="15" pos:column="29">transients<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">get<pos:position pos:line="15" pos:column="44"/></name></name><argument_list pos:line="15" pos:column="44">(<argument><expr><name pos:line="15" pos:column="45">key<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr></init></decl>)<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50"> <block pos:line="15" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">debugs<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><literal type="number" pos:line="16" pos:column="20">20<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="24">3<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"got shared in-transit entry: "<pos:position pos:line="16" pos:column="58"/></literal> <operator pos:line="16" pos:column="59">&lt;&lt;<pos:position pos:line="16" pos:column="67"/></operator> <operator pos:line="16" pos:column="62">*<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="63">e<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">bool<pos:position pos:line="17" pos:column="17"/></name></type> <name pos:line="17" pos:column="18">inSync<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><literal type="boolean" pos:line="17" pos:column="27">false<pos:position pos:line="17" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="18" pos:column="13">const<pos:position pos:line="18" pos:column="18"/></specifier> <name pos:line="18" pos:column="19">bool<pos:position pos:line="18" pos:column="23"/></name></type> <name pos:line="18" pos:column="24">found<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><call><name pos:line="18" pos:column="32">anchorCollapsed<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><operator pos:line="18" pos:column="48">*<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">e<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">inSync<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="60"/></decl_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><operator pos:line="19" pos:column="17">!<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">found<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">||<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">inSync<pos:position pos:line="19" pos:column="33"/></name></expr>)<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34">
                <block type="pseudo"><return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">e<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></return></block></then></if>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">assert<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><operator pos:line="21" pos:column="20">!<pos:position pos:line="21" pos:column="21"/></operator><call><name><name pos:line="21" pos:column="21">e<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">locked<pos:position pos:line="21" pos:column="30"/></name></name><argument_list pos:line="21" pos:column="30">()<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt> <comment type="line" pos:line="21" pos:column="35">// ensure release will destroyStoreEntry()</comment>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">e<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">release<pos:position pos:line="22" pos:column="23"/></name></name><argument_list pos:line="22" pos:column="23">()<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt> <comment type="line" pos:line="22" pos:column="27">// do not let others into the same trap</comment>
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">NULL<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">memStore<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18"> <block pos:line="27" pos:column="19">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<decl><type><name pos:line="28" pos:column="13">StoreEntry<pos:position pos:line="28" pos:column="23"/></name> <modifier pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></modifier></type><name pos:line="28" pos:column="25">e<pos:position pos:line="28" pos:column="26"/></name> <init pos:line="28" pos:column="27">= <expr><call><name><name pos:line="28" pos:column="29">memStore<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">get<pos:position pos:line="28" pos:column="42"/></name></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name pos:line="28" pos:column="43">key<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr></init></decl>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48"> <block pos:line="28" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">20<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="24">3<pos:position pos:line="29" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">HERE<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">&lt;&lt;<pos:position pos:line="29" pos:column="40"/></operator> <literal type="string" pos:line="29" pos:column="35">"got mem-cached entry: "<pos:position pos:line="29" pos:column="59"/></literal> <operator pos:line="29" pos:column="60">&lt;&lt;<pos:position pos:line="29" pos:column="68"/></operator> <operator pos:line="29" pos:column="63">*<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="64">e<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">e<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">swapDir<pos:position pos:line="34" pos:column="16"/></name></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17"> <block pos:line="34" pos:column="18">{
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<decl><type><name pos:line="35" pos:column="13">StoreEntry<pos:position pos:line="35" pos:column="23"/></name> <modifier pos:line="35" pos:column="24">*<pos:position pos:line="35" pos:column="25"/></modifier></type><name pos:line="35" pos:column="25">e<pos:position pos:line="35" pos:column="26"/></name> <init pos:line="35" pos:column="27">= <expr><call><name><name pos:line="35" pos:column="29">swapDir<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="38">get<pos:position pos:line="35" pos:column="41"/></name></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">key<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr></init></decl>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47"> <block pos:line="35" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">debugs<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="number" pos:line="36" pos:column="20">20<pos:position pos:line="36" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="24">3<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"got disk-cached entry: "<pos:position pos:line="36" pos:column="52"/></literal> <operator pos:line="36" pos:column="53">&lt;&lt;<pos:position pos:line="36" pos:column="61"/></operator> <operator pos:line="36" pos:column="56">*<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="57">e<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">e<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">debugs<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="number" pos:line="41" pos:column="12">20<pos:position pos:line="41" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="16">4<pos:position pos:line="41" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"cannot locate "<pos:position pos:line="41" pos:column="35"/></literal> <operator pos:line="41" pos:column="36">&lt;&lt;<pos:position pos:line="41" pos:column="44"/></operator> <call><name pos:line="41" pos:column="39">storeKeyText<pos:position pos:line="41" pos:column="51"/></name><argument_list pos:line="41" pos:column="51">(<argument><expr><name pos:line="41" pos:column="52">key<pos:position pos:line="41" pos:column="55"/></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><literal type="null" pos:line="42" pos:column="12">nullptr<pos:position pos:line="42" pos:column="19"/></literal></expr>;<pos:position pos:line="42" pos:column="20"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3470_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">cacheHit<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">StoreIOBuffer<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">result<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" format="doxygen" pos:line="4" pos:column="5">/** Ignore if the HIT object is being deleted. */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">deleting<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">88<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">3<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"HIT object being deleted. Ignore the HIT."<pos:position pos:line="6" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">StoreEntry<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">e<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><call><name><name pos:line="10" pos:column="21">http<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">storeEntry<pos:position pos:line="10" pos:column="37"/></name></name><argument_list pos:line="10" pos:column="37">()<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">HttpRequest<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">r<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><name><name pos:line="12" pos:column="22">http<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">request<pos:position pos:line="12" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">88<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">3<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"clientCacheHit: "<pos:position pos:line="14" pos:column="37"/></literal> <operator pos:line="14" pos:column="38">&lt;&lt;<pos:position pos:line="14" pos:column="46"/></operator> <name><name pos:line="14" pos:column="41">http<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">uri<pos:position pos:line="14" pos:column="50"/></name></name> <operator pos:line="14" pos:column="51">&lt;&lt;<pos:position pos:line="14" pos:column="59"/></operator> <literal type="string" pos:line="14" pos:column="54">", "<pos:position pos:line="14" pos:column="58"/></literal> <operator pos:line="14" pos:column="59">&lt;&lt;<pos:position pos:line="14" pos:column="67"/></operator> <name><name pos:line="14" pos:column="62">result<pos:position pos:line="14" pos:column="68"/></name><operator pos:line="14" pos:column="68">.<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="69">length<pos:position pos:line="14" pos:column="75"/></name></name> <operator pos:line="14" pos:column="76">&lt;&lt;<pos:position pos:line="14" pos:column="84"/></operator> <literal type="string" pos:line="14" pos:column="79">" bytes"<pos:position pos:line="14" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="89"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">http<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">storeEntry<pos:position pos:line="16" pos:column="25"/></name></name><argument_list pos:line="16" pos:column="25">()<pos:position pos:line="16" pos:column="27"/></argument_list></call> <operator pos:line="16" pos:column="28">==<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">NULL<pos:position pos:line="16" pos:column="35"/></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">88<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">3<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"clientCacheHit: request aborted"<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <elseif pos:line="19" pos:column="7">else <if pos:line="19" pos:column="12">if <condition pos:line="19" pos:column="15">(<expr><name><name pos:line="19" pos:column="16">result<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">flags<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">error<pos:position pos:line="19" pos:column="34"/></name></name></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <block pos:line="19" pos:column="36">{
        <comment type="block" pos:line="20" pos:column="9">/* swap in failure */</comment>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">88<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">3<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"clientCacheHit: swapin failure for "<pos:position pos:line="21" pos:column="60"/></literal> <operator pos:line="21" pos:column="61">&lt;&lt;<pos:position pos:line="21" pos:column="69"/></operator> <name><name pos:line="21" pos:column="64">http<pos:position pos:line="21" pos:column="68"/></name><operator pos:line="21" pos:column="68">-&gt;<pos:position pos:line="21" pos:column="73"/></operator><name pos:line="21" pos:column="70">uri<pos:position pos:line="21" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">http<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">logType<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">LOG_TCP_SWAPFAIL_MISS<pos:position pos:line="22" pos:column="46"/></name></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">removeClientStoreReference<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><operator pos:line="23" pos:column="36">&amp;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="37">sc<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">http<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">processMiss<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">()<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif></if>

    <comment type="line" pos:line="28" pos:column="5">// The previously identified hit suddenly became unsharable!</comment>
    <comment type="line" pos:line="29" pos:column="5">// This is common for collapsed forwarding slaves but might also</comment>
    <comment type="line" pos:line="30" pos:column="5">// happen to regular hits because we are called asynchronously.</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><call><name><name pos:line="31" pos:column="10">e<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">mayStartHitting<pos:position pos:line="31" pos:column="28"/></name></name><argument_list pos:line="31" pos:column="28">()<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31"> <block pos:line="31" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">88<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="20">3<pos:position pos:line="32" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="23">"unsharable "<pos:position pos:line="32" pos:column="36"/></literal> <operator pos:line="32" pos:column="37">&lt;&lt;<pos:position pos:line="32" pos:column="45"/></operator> <operator pos:line="32" pos:column="40">*<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">e<pos:position pos:line="32" pos:column="42"/></name> <operator pos:line="32" pos:column="43">&lt;&lt;<pos:position pos:line="32" pos:column="51"/></operator> <literal type="string" pos:line="32" pos:column="46">". MISS"<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">http<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">logType<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">LOG_TCP_MISS<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">processMiss<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">()<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
        <return pos:line="35" pos:column="9">return;<pos:position pos:line="35" pos:column="16"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">result<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">length<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">==<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr>)<pos:position pos:line="38" pos:column="28"/></condition><then pos:line="38" pos:column="28"> <block pos:line="38" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">debugs<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="number" pos:line="39" pos:column="16">88<pos:position pos:line="39" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="20">5<pos:position pos:line="39" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="23">"store IO buffer has no content. MISS"<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
        <comment type="block" pos:line="40" pos:column="9">/* the store couldn't get enough data from the file for us to id the
         * object
         */</comment>
        <comment type="block" pos:line="43" pos:column="9">/* treat as a miss */</comment>
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">http<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">logType<pos:position pos:line="44" pos:column="22"/></name></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="25">LOG_TCP_MISS<pos:position pos:line="44" pos:column="37"/></name></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">processMiss<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">()<pos:position pos:line="45" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>
        <return pos:line="46" pos:column="9">return;<pos:position pos:line="46" pos:column="16"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">assert<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><operator pos:line="49" pos:column="12">!<pos:position pos:line="49" pos:column="13"/></operator><call><name pos:line="49" pos:column="13">EBIT_TEST<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><name><name pos:line="49" pos:column="23">e<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">flags<pos:position pos:line="49" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="33">ENTRY_ABORTED<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="50" pos:column="5">/* update size of the request */</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">reqsize<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <name><name pos:line="51" pos:column="15">result<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">.<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">length<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">+<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">reqofs<pos:position pos:line="51" pos:column="37"/></name></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="53" pos:column="5">/*
     * Got the headers, now grok them
     */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">assert<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><name><name pos:line="56" pos:column="12">http<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">logType<pos:position pos:line="56" pos:column="25"/></name></name> <operator pos:line="56" pos:column="26">==<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">LOG_TCP_HIT<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><call><name pos:line="58" pos:column="9">strcmp<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><call><name><name pos:line="58" pos:column="16">e<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">mem_obj<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">-&gt;<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="28">storeId<pos:position pos:line="58" pos:column="35"/></name></name><argument_list pos:line="58" pos:column="35">()<pos:position pos:line="58" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="58" pos:column="39">http<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">request<pos:position pos:line="58" pos:column="52"/></name><operator pos:line="58" pos:column="52">-&gt;<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="54">storeId<pos:position pos:line="58" pos:column="61"/></name></name><argument_list pos:line="58" pos:column="61">()<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call> <operator pos:line="58" pos:column="65">!=<pos:position pos:line="58" pos:column="67"/></operator> <literal type="number" pos:line="58" pos:column="68">0<pos:position pos:line="58" pos:column="69"/></literal></expr>)<pos:position pos:line="58" pos:column="70"/></condition><then pos:line="58" pos:column="70"> <block pos:line="58" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">debugs<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="number" pos:line="59" pos:column="16">33<pos:position pos:line="59" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="20">DBG_IMPORTANT<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="35">"clientProcessHit: URL mismatch, '"<pos:position pos:line="59" pos:column="70"/></literal> <operator pos:line="59" pos:column="71">&lt;&lt;<pos:position pos:line="59" pos:column="79"/></operator> <call><name><name pos:line="59" pos:column="74">e<pos:position pos:line="59" pos:column="75"/></name><operator pos:line="59" pos:column="75">-&gt;<pos:position pos:line="59" pos:column="80"/></operator><name pos:line="59" pos:column="77">mem_obj<pos:position pos:line="59" pos:column="84"/></name><operator pos:line="59" pos:column="84">-&gt;<pos:position pos:line="59" pos:column="89"/></operator><name pos:line="59" pos:column="86">storeId<pos:position pos:line="59" pos:column="93"/></name></name><argument_list pos:line="59" pos:column="93">()<pos:position pos:line="59" pos:column="95"/></argument_list></call> <operator pos:line="59" pos:column="96">&lt;&lt;<pos:position pos:line="59" pos:column="104"/></operator> <literal type="string" pos:line="59" pos:column="99">"' != '"<pos:position pos:line="59" pos:column="107"/></literal> <operator pos:line="59" pos:column="108">&lt;&lt;<pos:position pos:line="59" pos:column="116"/></operator> <call><name><name pos:line="59" pos:column="111">http<pos:position pos:line="59" pos:column="115"/></name><operator pos:line="59" pos:column="115">-&gt;<pos:position pos:line="59" pos:column="120"/></operator><name pos:line="59" pos:column="117">request<pos:position pos:line="59" pos:column="124"/></name><operator pos:line="59" pos:column="124">-&gt;<pos:position pos:line="59" pos:column="129"/></operator><name pos:line="59" pos:column="126">storeId<pos:position pos:line="59" pos:column="133"/></name></name><argument_list pos:line="59" pos:column="133">()<pos:position pos:line="59" pos:column="135"/></argument_list></call> <operator pos:line="59" pos:column="136">&lt;&lt;<pos:position pos:line="59" pos:column="144"/></operator> <literal type="string" pos:line="59" pos:column="139">"'"<pos:position pos:line="59" pos:column="142"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="143"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="144"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">http<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">logType<pos:position pos:line="60" pos:column="22"/></name></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <name pos:line="60" pos:column="25">LOG_TCP_MISS<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt> <comment type="line" pos:line="60" pos:column="39">// we lack a more precise LOG_*_MISS code</comment>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">processMiss<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">()<pos:position pos:line="61" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
        <return pos:line="62" pos:column="9">return;<pos:position pos:line="62" pos:column="16"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <switch pos:line="65" pos:column="5">switch <condition pos:line="65" pos:column="12">(<expr><call><name pos:line="65" pos:column="13">varyEvaluateMatch<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name pos:line="65" pos:column="31">e<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="34">r<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="37"/></condition> <block pos:line="65" pos:column="38">{

    <case pos:line="67" pos:column="5">case <expr><name pos:line="67" pos:column="10">VARY_NONE<pos:position pos:line="67" pos:column="19"/></name></expr>:<pos:position pos:line="67" pos:column="20"/></case>
        <comment type="block" pos:line="68" pos:column="9">/* No variance detected. Continue as normal */</comment>
        <break pos:line="69" pos:column="9">break;<pos:position pos:line="69" pos:column="15"/></break>

    <case pos:line="71" pos:column="5">case <expr><name pos:line="71" pos:column="10">VARY_MATCH<pos:position pos:line="71" pos:column="20"/></name></expr>:<pos:position pos:line="71" pos:column="21"/></case>
        <comment type="block" pos:line="72" pos:column="9">/* This is the correct entity for this request. Continue */</comment>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">debugs<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><literal type="number" pos:line="73" pos:column="16">88<pos:position pos:line="73" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="20">2<pos:position pos:line="73" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="23">"clientProcessHit: Vary MATCH!"<pos:position pos:line="73" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt>
        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>

    <case pos:line="76" pos:column="5">case <expr><name pos:line="76" pos:column="10">VARY_OTHER<pos:position pos:line="76" pos:column="20"/></name></expr>:<pos:position pos:line="76" pos:column="21"/></case>
        <comment type="block" pos:line="77" pos:column="9">/* This is not the correct entity for this request. We need
         * to requery the cache.
         */</comment>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">removeClientStoreReference<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><operator pos:line="80" pos:column="36">&amp;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="37">sc<pos:position pos:line="80" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="41">http<pos:position pos:line="80" pos:column="45"/></name></expr></argument>)<pos:position pos:line="80" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="81" pos:column="9">e<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">=<pos:position pos:line="81" pos:column="12"/></operator> <name pos:line="81" pos:column="13">NULL<pos:position pos:line="81" pos:column="17"/></name></expr>;<pos:position pos:line="81" pos:column="18"/></expr_stmt>
        <comment type="block" pos:line="82" pos:column="9">/* Note: varyEvalyateMatch updates the request with vary information
         * so we only get here once. (it also takes care of cancelling loops)
         */</comment>
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">debugs<pos:position pos:line="85" pos:column="15"/></name><argument_list pos:line="85" pos:column="15">(<argument><expr><literal type="number" pos:line="85" pos:column="16">88<pos:position pos:line="85" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="20">2<pos:position pos:line="85" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="23">"clientProcessHit: Vary detected!"<pos:position pos:line="85" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">clientGetMoreData<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">(<argument><expr><name pos:line="86" pos:column="27">ourNode<pos:position pos:line="86" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="36">http<pos:position pos:line="86" pos:column="40"/></name></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
        <return pos:line="87" pos:column="9">return;<pos:position pos:line="87" pos:column="16"/></return>

    <case pos:line="89" pos:column="5">case <expr><name pos:line="89" pos:column="10">VARY_CANCEL<pos:position pos:line="89" pos:column="21"/></name></expr>:<pos:position pos:line="89" pos:column="22"/></case>
        <comment type="block" pos:line="90" pos:column="9">/* varyEvaluateMatch found a object loop. Process as miss */</comment>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">debugs<pos:position pos:line="91" pos:column="15"/></name><argument_list pos:line="91" pos:column="15">(<argument><expr><literal type="number" pos:line="91" pos:column="16">88<pos:position pos:line="91" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="20">DBG_IMPORTANT<pos:position pos:line="91" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="35">"clientProcessHit: Vary object loop!"<pos:position pos:line="91" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">http<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">-&gt;<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="15">logType<pos:position pos:line="92" pos:column="22"/></name></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <name pos:line="92" pos:column="25">LOG_TCP_MISS<pos:position pos:line="92" pos:column="37"/></name></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt> <comment type="line" pos:line="92" pos:column="39">// we lack a more precise LOG_*_MISS code</comment>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">processMiss<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">()<pos:position pos:line="93" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="23"/></expr_stmt>
        <return pos:line="94" pos:column="9">return;<pos:position pos:line="94" pos:column="16"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></switch>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name><name pos:line="97" pos:column="9">r<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">method<pos:position pos:line="97" pos:column="18"/></name></name> <operator pos:line="97" pos:column="19">==<pos:position pos:line="97" pos:column="21"/></operator> <name><name pos:line="97" pos:column="22">Http<pos:position pos:line="97" pos:column="26"/></name><operator pos:line="97" pos:column="26">::<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="28">METHOD_PURGE<pos:position pos:line="97" pos:column="40"/></name></name></expr>)<pos:position pos:line="97" pos:column="41"/></condition><then pos:line="97" pos:column="41"> <block pos:line="97" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">debugs<pos:position pos:line="98" pos:column="15"/></name><argument_list pos:line="98" pos:column="15">(<argument><expr><literal type="number" pos:line="98" pos:column="16">88<pos:position pos:line="98" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="20">5<pos:position pos:line="98" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="23">"PURGE gets a HIT"<pos:position pos:line="98" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">removeClientStoreReference<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">(<argument><expr><operator pos:line="99" pos:column="36">&amp;<pos:position pos:line="99" pos:column="41"/></operator><name pos:line="99" pos:column="37">sc<pos:position pos:line="99" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="41">http<pos:position pos:line="99" pos:column="45"/></name></expr></argument>)<pos:position pos:line="99" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="100" pos:column="9">e<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">=<pos:position pos:line="100" pos:column="12"/></operator> <name pos:line="100" pos:column="13">NULL<pos:position pos:line="100" pos:column="17"/></name></expr>;<pos:position pos:line="100" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">purgeRequest<pos:position pos:line="101" pos:column="21"/></name><argument_list pos:line="101" pos:column="21">()<pos:position pos:line="101" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt>
        <return pos:line="102" pos:column="9">return;<pos:position pos:line="102" pos:column="16"/></return>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>

    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><call><name><name pos:line="105" pos:column="9">e<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">-&gt;<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="12">checkNegativeHit<pos:position pos:line="105" pos:column="28"/></name></name><argument_list pos:line="105" pos:column="28">()<pos:position pos:line="105" pos:column="30"/></argument_list></call> <operator pos:line="105" pos:column="31">&amp;&amp;<pos:position pos:line="105" pos:column="41"/></operator> <operator pos:line="105" pos:column="34">!<pos:position pos:line="105" pos:column="35"/></operator><call><name><name pos:line="105" pos:column="35">r<pos:position pos:line="105" pos:column="36"/></name><operator pos:line="105" pos:column="36">-&gt;<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="38">flags<pos:position pos:line="105" pos:column="43"/></name><operator pos:line="105" pos:column="43">.<pos:position pos:line="105" pos:column="44"/></operator><name pos:line="105" pos:column="44">noCacheHack<pos:position pos:line="105" pos:column="55"/></name></name><argument_list pos:line="105" pos:column="55">()<pos:position pos:line="105" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="58"/></condition><then pos:line="105" pos:column="58"> <block pos:line="105" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">debugs<pos:position pos:line="106" pos:column="15"/></name><argument_list pos:line="106" pos:column="15">(<argument><expr><literal type="number" pos:line="106" pos:column="16">88<pos:position pos:line="106" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="20">5<pos:position pos:line="106" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="23">"negative-HIT"<pos:position pos:line="106" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="107" pos:column="9">http<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">-&gt;<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="15">logType<pos:position pos:line="107" pos:column="22"/></name></name> <operator pos:line="107" pos:column="23">=<pos:position pos:line="107" pos:column="24"/></operator> <name pos:line="107" pos:column="25">LOG_TCP_NEGATIVE_HIT<pos:position pos:line="107" pos:column="45"/></name></expr>;<pos:position pos:line="107" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">sendMoreData<pos:position pos:line="108" pos:column="21"/></name><argument_list pos:line="108" pos:column="21">(<argument><expr><name pos:line="108" pos:column="22">result<pos:position pos:line="108" pos:column="28"/></name></expr></argument>)<pos:position pos:line="108" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="30"/></expr_stmt>
        <return pos:line="109" pos:column="9">return;<pos:position pos:line="109" pos:column="16"/></return>
    }<pos:position pos:line="110" pos:column="6"/></block></then> <elseif pos:line="110" pos:column="7">else <if pos:line="110" pos:column="12">if <condition pos:line="110" pos:column="15">(<expr><call><name pos:line="110" pos:column="16">blockedHit<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">()<pos:position pos:line="110" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="29"/></condition><then pos:line="110" pos:column="29"> <block pos:line="110" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">debugs<pos:position pos:line="111" pos:column="15"/></name><argument_list pos:line="111" pos:column="15">(<argument><expr><literal type="number" pos:line="111" pos:column="16">88<pos:position pos:line="111" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="20">5<pos:position pos:line="111" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="23">"send_hit forces a MISS"<pos:position pos:line="111" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">http<pos:position pos:line="112" pos:column="13"/></name><operator pos:line="112" pos:column="13">-&gt;<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="15">logType<pos:position pos:line="112" pos:column="22"/></name></name> <operator pos:line="112" pos:column="23">=<pos:position pos:line="112" pos:column="24"/></operator> <name pos:line="112" pos:column="25">LOG_TCP_MISS<pos:position pos:line="112" pos:column="37"/></name></expr>;<pos:position pos:line="112" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">processMiss<pos:position pos:line="113" pos:column="20"/></name><argument_list pos:line="113" pos:column="20">()<pos:position pos:line="113" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="23"/></expr_stmt>
        <return pos:line="114" pos:column="9">return;<pos:position pos:line="114" pos:column="16"/></return>
    }<pos:position pos:line="115" pos:column="6"/></block></then></if></elseif> <elseif pos:line="115" pos:column="7">else <if pos:line="115" pos:column="12">if <condition pos:line="115" pos:column="15">(<expr><operator pos:line="115" pos:column="16">!<pos:position pos:line="115" pos:column="17"/></operator><name><name pos:line="115" pos:column="17">http<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">-&gt;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="23">flags<pos:position pos:line="115" pos:column="28"/></name><operator pos:line="115" pos:column="28">.<pos:position pos:line="115" pos:column="29"/></operator><name pos:line="115" pos:column="29">internal<pos:position pos:line="115" pos:column="37"/></name></name> <operator pos:line="115" pos:column="38">&amp;&amp;<pos:position pos:line="115" pos:column="48"/></operator> <call><name pos:line="115" pos:column="41">refreshCheckHTTP<pos:position pos:line="115" pos:column="57"/></name><argument_list pos:line="115" pos:column="57">(<argument><expr><name pos:line="115" pos:column="58">e<pos:position pos:line="115" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="61">r<pos:position pos:line="115" pos:column="62"/></name></expr></argument>)<pos:position pos:line="115" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="64"/></condition><then pos:line="115" pos:column="64"> <block pos:line="115" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="116" pos:column="9">debugs<pos:position pos:line="116" pos:column="15"/></name><argument_list pos:line="116" pos:column="15">(<argument><expr><literal type="number" pos:line="116" pos:column="16">88<pos:position pos:line="116" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="20">5<pos:position pos:line="116" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="23">"clientCacheHit: in refreshCheck() block"<pos:position pos:line="116" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="66"/></expr_stmt>
        <comment type="block" pos:line="117" pos:column="9">/*
         * We hold a stale copy; it needs to be validated
         */</comment>
        <comment type="block" pos:line="120" pos:column="9">/*
         * The 'needValidation' flag is used to prevent forwarding
         * loops between siblings.  If our copy of the object is stale,
         * then we should probably only use parents for the validation
         * request.  Otherwise two siblings could generate a loop if
         * both have a stale version of the object.
         */</comment>
        <expr_stmt><expr><name><name pos:line="127" pos:column="9">r<pos:position pos:line="127" pos:column="10"/></name><operator pos:line="127" pos:column="10">-&gt;<pos:position pos:line="127" pos:column="15"/></operator><name pos:line="127" pos:column="12">flags<pos:position pos:line="127" pos:column="17"/></name><operator pos:line="127" pos:column="17">.<pos:position pos:line="127" pos:column="18"/></operator><name pos:line="127" pos:column="18">needValidation<pos:position pos:line="127" pos:column="32"/></name></name> <operator pos:line="127" pos:column="33">=<pos:position pos:line="127" pos:column="34"/></operator> <literal type="boolean" pos:line="127" pos:column="35">true<pos:position pos:line="127" pos:column="39"/></literal></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>

        <if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><call><name><name pos:line="129" pos:column="13">e<pos:position pos:line="129" pos:column="14"/></name><operator pos:line="129" pos:column="14">-&gt;<pos:position pos:line="129" pos:column="19"/></operator><name pos:line="129" pos:column="16">lastModified<pos:position pos:line="129" pos:column="28"/></name></name><argument_list pos:line="129" pos:column="28">()<pos:position pos:line="129" pos:column="30"/></argument_list></call> <operator pos:line="129" pos:column="31">&lt;<pos:position pos:line="129" pos:column="35"/></operator> <literal type="number" pos:line="129" pos:column="33">0<pos:position pos:line="129" pos:column="34"/></literal></expr>)<pos:position pos:line="129" pos:column="35"/></condition><then pos:line="129" pos:column="35"> <block pos:line="129" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="130" pos:column="13">debugs<pos:position pos:line="130" pos:column="19"/></name><argument_list pos:line="130" pos:column="19">(<argument><expr><literal type="number" pos:line="130" pos:column="20">88<pos:position pos:line="130" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="24">3<pos:position pos:line="130" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="27">"validate HIT object? NO. Can't calculate entry modification time. Do MISS."<pos:position pos:line="130" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="105"/></expr_stmt>
            <comment type="block" pos:line="131" pos:column="13">/*
             * We cannot revalidate entries without knowing their
             * modification time.
             * XXX: BUG 1890 objects without Date do not get one added.
             */</comment>
            <expr_stmt><expr><name><name pos:line="136" pos:column="13">http<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">-&gt;<pos:position pos:line="136" pos:column="22"/></operator><name pos:line="136" pos:column="19">logType<pos:position pos:line="136" pos:column="26"/></name></name> <operator pos:line="136" pos:column="27">=<pos:position pos:line="136" pos:column="28"/></operator> <name pos:line="136" pos:column="29">LOG_TCP_MISS<pos:position pos:line="136" pos:column="41"/></name></expr>;<pos:position pos:line="136" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="137" pos:column="13">processMiss<pos:position pos:line="137" pos:column="24"/></name><argument_list pos:line="137" pos:column="24">()<pos:position pos:line="137" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="138" pos:column="10"/></block></then> <elseif pos:line="138" pos:column="11">else <if pos:line="138" pos:column="16">if <condition pos:line="138" pos:column="19">(<expr><name><name pos:line="138" pos:column="20">r<pos:position pos:line="138" pos:column="21"/></name><operator pos:line="138" pos:column="21">-&gt;<pos:position pos:line="138" pos:column="26"/></operator><name pos:line="138" pos:column="23">flags<pos:position pos:line="138" pos:column="28"/></name><operator pos:line="138" pos:column="28">.<pos:position pos:line="138" pos:column="29"/></operator><name pos:line="138" pos:column="29">noCache<pos:position pos:line="138" pos:column="36"/></name></name></expr>)<pos:position pos:line="138" pos:column="37"/></condition><then pos:line="138" pos:column="37"> <block pos:line="138" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="139" pos:column="13">debugs<pos:position pos:line="139" pos:column="19"/></name><argument_list pos:line="139" pos:column="19">(<argument><expr><literal type="number" pos:line="139" pos:column="20">88<pos:position pos:line="139" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="24">3<pos:position pos:line="139" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="27">"validate HIT object? NO. Client sent CC:no-cache. Do CLIENT_REFRESH_MISS"<pos:position pos:line="139" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="103"/></expr_stmt>
            <comment type="block" pos:line="140" pos:column="13">/*
             * This did not match a refresh pattern that overrides no-cache
             * we should honour the client no-cache header.
             */</comment>
            <expr_stmt><expr><name><name pos:line="144" pos:column="13">http<pos:position pos:line="144" pos:column="17"/></name><operator pos:line="144" pos:column="17">-&gt;<pos:position pos:line="144" pos:column="22"/></operator><name pos:line="144" pos:column="19">logType<pos:position pos:line="144" pos:column="26"/></name></name> <operator pos:line="144" pos:column="27">=<pos:position pos:line="144" pos:column="28"/></operator> <name pos:line="144" pos:column="29">LOG_TCP_CLIENT_REFRESH_MISS<pos:position pos:line="144" pos:column="56"/></name></expr>;<pos:position pos:line="144" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="145" pos:column="13">processMiss<pos:position pos:line="145" pos:column="24"/></name><argument_list pos:line="145" pos:column="24">()<pos:position pos:line="145" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="146" pos:column="10"/></block></then></if></elseif> <elseif pos:line="146" pos:column="11">else <if pos:line="146" pos:column="16">if <condition pos:line="146" pos:column="19">(<expr><call><name><name pos:line="146" pos:column="20">r<pos:position pos:line="146" pos:column="21"/></name><operator pos:line="146" pos:column="21">-&gt;<pos:position pos:line="146" pos:column="26"/></operator><name pos:line="146" pos:column="23">url<pos:position pos:line="146" pos:column="26"/></name><operator pos:line="146" pos:column="26">.<pos:position pos:line="146" pos:column="27"/></operator><name pos:line="146" pos:column="27">getScheme<pos:position pos:line="146" pos:column="36"/></name></name><argument_list pos:line="146" pos:column="36">()<pos:position pos:line="146" pos:column="38"/></argument_list></call> <operator pos:line="146" pos:column="39">==<pos:position pos:line="146" pos:column="41"/></operator> <name><name pos:line="146" pos:column="42">AnyP<pos:position pos:line="146" pos:column="46"/></name><operator pos:line="146" pos:column="46">::<pos:position pos:line="146" pos:column="48"/></operator><name pos:line="146" pos:column="48">PROTO_HTTP<pos:position pos:line="146" pos:column="58"/></name></name></expr>)<pos:position pos:line="146" pos:column="59"/></condition><then pos:line="146" pos:column="59"> <block pos:line="146" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="147" pos:column="13">debugs<pos:position pos:line="147" pos:column="19"/></name><argument_list pos:line="147" pos:column="19">(<argument><expr><literal type="number" pos:line="147" pos:column="20">88<pos:position pos:line="147" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="24">3<pos:position pos:line="147" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="27">"validate HIT object? YES."<pos:position pos:line="147" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="56"/></expr_stmt>
            <comment type="block" pos:line="148" pos:column="13">/*
             * Object needs to be revalidated
             * XXX This could apply to FTP as well, if Last-Modified is known.
             */</comment>
            <expr_stmt><expr><call><name pos:line="152" pos:column="13">processExpired<pos:position pos:line="152" pos:column="27"/></name><argument_list pos:line="152" pos:column="27">()<pos:position pos:line="152" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="153" pos:column="10"/></block></then></if></elseif> <else pos:line="153" pos:column="11">else <block pos:line="153" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">debugs<pos:position pos:line="154" pos:column="19"/></name><argument_list pos:line="154" pos:column="19">(<argument><expr><literal type="number" pos:line="154" pos:column="20">88<pos:position pos:line="154" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="24">3<pos:position pos:line="154" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="27">"validate HIT object? NO. Client protocol non-HTTP. Do MISS."<pos:position pos:line="154" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="90"/></expr_stmt>
            <comment type="block" pos:line="155" pos:column="13">/*
             * We don't know how to re-validate other protocols. Handle
             * them as if the object has expired.
             */</comment>
            <expr_stmt><expr><name><name pos:line="159" pos:column="13">http<pos:position pos:line="159" pos:column="17"/></name><operator pos:line="159" pos:column="17">-&gt;<pos:position pos:line="159" pos:column="22"/></operator><name pos:line="159" pos:column="19">logType<pos:position pos:line="159" pos:column="26"/></name></name> <operator pos:line="159" pos:column="27">=<pos:position pos:line="159" pos:column="28"/></operator> <name pos:line="159" pos:column="29">LOG_TCP_MISS<pos:position pos:line="159" pos:column="41"/></name></expr>;<pos:position pos:line="159" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="160" pos:column="13">processMiss<pos:position pos:line="160" pos:column="24"/></name><argument_list pos:line="160" pos:column="24">()<pos:position pos:line="160" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="161" pos:column="10"/></block></else></if>
        <return pos:line="162" pos:column="9">return;<pos:position pos:line="162" pos:column="16"/></return>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if></elseif> <elseif pos:line="163" pos:column="7">else <if pos:line="163" pos:column="12">if <condition pos:line="163" pos:column="15">(<expr><call><name><name pos:line="163" pos:column="16">r<pos:position pos:line="163" pos:column="17"/></name><operator pos:line="163" pos:column="17">-&gt;<pos:position pos:line="163" pos:column="22"/></operator><name pos:line="163" pos:column="19">conditional<pos:position pos:line="163" pos:column="30"/></name></name><argument_list pos:line="163" pos:column="30">()<pos:position pos:line="163" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="33"/></condition><then pos:line="163" pos:column="33"> <block pos:line="163" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="164" pos:column="9">debugs<pos:position pos:line="164" pos:column="15"/></name><argument_list pos:line="164" pos:column="15">(<argument><expr><literal type="number" pos:line="164" pos:column="16">88<pos:position pos:line="164" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="164" pos:column="20">5<pos:position pos:line="164" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="23">"conditional HIT"<pos:position pos:line="164" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="42"/></expr_stmt>
        <if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><call><name pos:line="165" pos:column="13">processConditional<pos:position pos:line="165" pos:column="31"/></name><argument_list pos:line="165" pos:column="31">(<argument><expr><name pos:line="165" pos:column="32">result<pos:position pos:line="165" pos:column="38"/></name></expr></argument>)<pos:position pos:line="165" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="165" pos:column="40"/></condition><then pos:line="165" pos:column="40">
            <block type="pseudo"><return pos:line="166" pos:column="13">return;<pos:position pos:line="166" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="167" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="169" pos:column="5">/*
     * plain ol' cache hit
     */</comment>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">debugs<pos:position pos:line="172" pos:column="11"/></name><argument_list pos:line="172" pos:column="11">(<argument><expr><literal type="number" pos:line="172" pos:column="12">88<pos:position pos:line="172" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="16">5<pos:position pos:line="172" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="19">"plain old HIT"<pos:position pos:line="172" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="36"/></expr_stmt>

<cpp:if pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">if<pos:position pos:line="174" pos:column="4"/></cpp:directive> <expr><name pos:line="174" pos:column="5">USE_DELAY_POOLS<pos:position pos:line="174" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="175" pos:column="5">if <condition pos:line="175" pos:column="8">(<expr><name><name pos:line="175" pos:column="9">e<pos:position pos:line="175" pos:column="10"/></name><operator pos:line="175" pos:column="10">-&gt;<pos:position pos:line="175" pos:column="15"/></operator><name pos:line="175" pos:column="12">store_status<pos:position pos:line="175" pos:column="24"/></name></name> <operator pos:line="175" pos:column="25">!=<pos:position pos:line="175" pos:column="27"/></operator> <name pos:line="175" pos:column="28">STORE_OK<pos:position pos:line="175" pos:column="36"/></name></expr>)<pos:position pos:line="175" pos:column="37"/></condition><then pos:line="175" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="176" pos:column="9">http<pos:position pos:line="176" pos:column="13"/></name><operator pos:line="176" pos:column="13">-&gt;<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="15">logType<pos:position pos:line="176" pos:column="22"/></name></name> <operator pos:line="176" pos:column="23">=<pos:position pos:line="176" pos:column="24"/></operator> <name pos:line="176" pos:column="25">LOG_TCP_MISS<pos:position pos:line="176" pos:column="37"/></name></expr>;<pos:position pos:line="176" pos:column="38"/></expr_stmt></block></then>
    <elseif pos:line="177" pos:column="5">else
<cpp:endif pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">endif<pos:position pos:line="178" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name><name pos:line="179" pos:column="13">e<pos:position pos:line="179" pos:column="14"/></name><operator pos:line="179" pos:column="14">-&gt;<pos:position pos:line="179" pos:column="19"/></operator><name pos:line="179" pos:column="16">mem_status<pos:position pos:line="179" pos:column="26"/></name></name> <operator pos:line="179" pos:column="27">==<pos:position pos:line="179" pos:column="29"/></operator> <name pos:line="179" pos:column="30">IN_MEMORY<pos:position pos:line="179" pos:column="39"/></name></expr>)<pos:position pos:line="179" pos:column="40"/></condition><then pos:line="179" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="180" pos:column="13">http<pos:position pos:line="180" pos:column="17"/></name><operator pos:line="180" pos:column="17">-&gt;<pos:position pos:line="180" pos:column="22"/></operator><name pos:line="180" pos:column="19">logType<pos:position pos:line="180" pos:column="26"/></name></name> <operator pos:line="180" pos:column="27">=<pos:position pos:line="180" pos:column="28"/></operator> <name pos:line="180" pos:column="29">LOG_TCP_MEM_HIT<pos:position pos:line="180" pos:column="44"/></name></expr>;<pos:position pos:line="180" pos:column="45"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="181" pos:column="9">else <if pos:line="181" pos:column="14">if <condition pos:line="181" pos:column="17">(<expr><name><name pos:line="181" pos:column="18">Config<pos:position pos:line="181" pos:column="24"/></name><operator pos:line="181" pos:column="24">.<pos:position pos:line="181" pos:column="25"/></operator><name pos:line="181" pos:column="25">onoff<pos:position pos:line="181" pos:column="30"/></name><operator pos:line="181" pos:column="30">.<pos:position pos:line="181" pos:column="31"/></operator><name pos:line="181" pos:column="31">offline<pos:position pos:line="181" pos:column="38"/></name></name></expr>)<pos:position pos:line="181" pos:column="39"/></condition><then pos:line="181" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="182" pos:column="13">http<pos:position pos:line="182" pos:column="17"/></name><operator pos:line="182" pos:column="17">-&gt;<pos:position pos:line="182" pos:column="22"/></operator><name pos:line="182" pos:column="19">logType<pos:position pos:line="182" pos:column="26"/></name></name> <operator pos:line="182" pos:column="27">=<pos:position pos:line="182" pos:column="28"/></operator> <name pos:line="182" pos:column="29">LOG_TCP_OFFLINE_HIT<pos:position pos:line="182" pos:column="48"/></name></expr>;<pos:position pos:line="182" pos:column="49"/></expr_stmt></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="184" pos:column="5">sendMoreData<pos:position pos:line="184" pos:column="17"/></name><argument_list pos:line="184" pos:column="17">(<argument><expr><name pos:line="184" pos:column="18">result<pos:position pos:line="184" pos:column="24"/></name></expr></argument>)<pos:position pos:line="184" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="26"/></expr_stmt>
}<pos:position pos:line="185" pos:column="2"/></block></function></unit>

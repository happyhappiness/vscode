<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_929_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AcceptLimiter<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">defer<pos:position pos:line="2" pos:column="21"/></name></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">fd<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="31">Acceptor<pos:position pos:line="2" pos:column="39"/></name><operator pos:line="2" pos:column="39">::<pos:position pos:line="2" pos:column="41"/></operator><name pos:line="2" pos:column="41">AcceptorFunction<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">aFunc<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">void<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">data<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">5<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"AcceptLimiter::defer: FD "<pos:position pos:line="4" pos:column="45"/></literal> <operator pos:line="4" pos:column="46">&lt;&lt;<pos:position pos:line="4" pos:column="54"/></operator> <name pos:line="4" pos:column="49">fd<pos:position pos:line="4" pos:column="51"/></name> <operator pos:line="4" pos:column="52">&lt;&lt;<pos:position pos:line="4" pos:column="60"/></operator> <literal type="string" pos:line="4" pos:column="55">" handler: "<pos:position pos:line="4" pos:column="67"/></literal> <operator pos:line="4" pos:column="68">&lt;&lt;<pos:position pos:line="4" pos:column="76"/></operator> <operator pos:line="4" pos:column="71">(<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="72">void<pos:position pos:line="4" pos:column="76"/></name><operator pos:line="4" pos:column="76">*<pos:position pos:line="4" pos:column="77"/></operator><operator pos:line="4" pos:column="77">)<pos:position pos:line="4" pos:column="78"/></operator><name pos:line="4" pos:column="78">aFunc<pos:position pos:line="4" pos:column="83"/></name></expr></argument>)<pos:position pos:line="4" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="85"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">Acceptor<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">temp<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">temp<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">.<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">theFunction<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">aFunc<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">temp<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">.<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">acceptFD<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">fd<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">temp<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">.<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">theData<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">data<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">deferred<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">push_back<pos:position pos:line="9" pos:column="23"/></name></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">temp<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

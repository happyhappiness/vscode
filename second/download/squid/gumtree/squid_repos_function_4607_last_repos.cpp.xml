<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4607_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StartListening<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">AnyP<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">::<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">PortCfgPointer<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">s<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">FtpPortList<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></init> <condition><expr><name pos:line="4" pos:column="48">s<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">!=<pos:position pos:line="4" pos:column="52"/></operator> <name pos:line="4" pos:column="53">NULL<pos:position pos:line="4" pos:column="57"/></name></expr>;<pos:position pos:line="4" pos:column="58"/></condition> <incr><expr><name pos:line="4" pos:column="59">s<pos:position pos:line="4" pos:column="60"/></name> <operator pos:line="4" pos:column="61">=<pos:position pos:line="4" pos:column="62"/></operator> <name><name pos:line="4" pos:column="63">s<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">-&gt;<pos:position pos:line="4" pos:column="69"/></operator><name pos:line="4" pos:column="66">next<pos:position pos:line="4" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="71"/></control> <block pos:line="4" pos:column="72">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">MAXTCPLISTENPORTS<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">NHttpSockets<pos:position pos:line="5" pos:column="46"/></name></expr>)<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47"> <block pos:line="5" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">debugs<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">DBG_IMPORTANT<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="38">"Ignoring ftp_port lines exceeding the"<pos:position pos:line="6" pos:column="77"/></literal> <operator pos:line="6" pos:column="78">&lt;&lt;<pos:position pos:line="6" pos:column="86"/></operator>
                   <literal type="string" pos:line="7" pos:column="20">" limit of "<pos:position pos:line="7" pos:column="32"/></literal> <operator pos:line="7" pos:column="33">&lt;&lt;<pos:position pos:line="7" pos:column="41"/></operator> <name pos:line="7" pos:column="36">MAXTCPLISTENPORTS<pos:position pos:line="7" pos:column="53"/></name> <operator pos:line="7" pos:column="54">&lt;&lt;<pos:position pos:line="7" pos:column="62"/></operator> <literal type="string" pos:line="7" pos:column="57">" ports."<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>
            <break pos:line="8" pos:column="13">break;<pos:position pos:line="8" pos:column="19"/></break>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="11" pos:column="9">// direct new connections accepted by listenConn to Accept()</comment>
        <typedef pos:line="12" pos:column="9">typedef <type><name><name pos:line="12" pos:column="17">CommCbFunPtrCallT<pos:position pos:line="12" pos:column="34"/></name><argument_list type="generic" pos:line="12" pos:column="34">&lt;<argument><expr><name pos:line="12" pos:column="35">CommAcceptCbPtrFun<pos:position pos:line="12" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="12" pos:column="57"/></argument_list></name></type> <name pos:line="12" pos:column="55">AcceptCall<pos:position pos:line="12" pos:column="65"/></name>;<pos:position pos:line="12" pos:column="66"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="13" pos:column="9">RefCount<pos:position pos:line="13" pos:column="17"/></name><argument_list type="generic" pos:line="13" pos:column="17">&lt;<argument><expr><name pos:line="13" pos:column="18">AcceptCall<pos:position pos:line="13" pos:column="28"/></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="32"/></argument_list></name></type> <name pos:line="13" pos:column="30">subCall<pos:position pos:line="13" pos:column="37"/></name> <init pos:line="13" pos:column="38">= <expr><call><name pos:line="13" pos:column="40">commCbCall<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><literal type="number" pos:line="13" pos:column="51">5<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="54">5<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="57">"Ftp::Server::AcceptCtrlConnection"<pos:position pos:line="13" pos:column="92"/></literal></expr></argument>,
                                       <argument><expr><call><name pos:line="14" pos:column="40">CommAcceptCbPtrFun<pos:position pos:line="14" pos:column="58"/></name><argument_list pos:line="14" pos:column="58">(<argument><expr><name><name pos:line="14" pos:column="59">Ftp<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">::<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="64">Server<pos:position pos:line="14" pos:column="70"/></name><operator pos:line="14" pos:column="70">::<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="72">AcceptCtrlConnection<pos:position pos:line="14" pos:column="92"/></name></name></expr></argument>,
                                               <argument><expr><call><name pos:line="15" pos:column="48">CommAcceptCbParams<pos:position pos:line="15" pos:column="66"/></name><argument_list pos:line="15" pos:column="66">(<argument><expr><name pos:line="15" pos:column="67">NULL<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="75"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">clientStartListeningOn<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">s<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">subCall<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="44">Ipc<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">::<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">fdnFtpSocket<pos:position pos:line="16" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></for>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3008_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">release<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">PROF_start<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">storeRelease<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">20<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"storeRelease: Releasing: '"<pos:position pos:line="5" pos:column="47"/></literal> <operator pos:line="5" pos:column="48">&lt;&lt;<pos:position pos:line="5" pos:column="56"/></operator> <call><name pos:line="5" pos:column="51">getMD5Text<pos:position pos:line="5" pos:column="61"/></name><argument_list pos:line="5" pos:column="61">()<pos:position pos:line="5" pos:column="63"/></argument_list></call> <operator pos:line="5" pos:column="64">&lt;&lt;<pos:position pos:line="5" pos:column="72"/></operator> <literal type="string" pos:line="5" pos:column="67">"'"<pos:position pos:line="5" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="72"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* If, for any reason we can't discard this object because of an
     * outstanding request, mark it for pending release */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">locked<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">()<pos:position pos:line="9" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">expireNow<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">()<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">20<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"storeRelease: Only setting RELEASE_REQUEST bit"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">releaseRequest<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">PROF_stop<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">storeRelease<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">StoreController<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">::<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">store_dirs_rebuilding<pos:position pos:line="17" pos:column="47"/></name></name> <operator pos:line="17" pos:column="48">&amp;&amp;<pos:position pos:line="17" pos:column="58"/></operator> <name pos:line="17" pos:column="51">swap_filen<pos:position pos:line="17" pos:column="61"/></name> <operator pos:line="17" pos:column="62">&gt;<pos:position pos:line="17" pos:column="66"/></operator> <operator pos:line="17" pos:column="64">-<pos:position pos:line="17" pos:column="65"/></operator><literal type="number" pos:line="17" pos:column="65">1<pos:position pos:line="17" pos:column="66"/></literal></expr>)<pos:position pos:line="17" pos:column="67"/></condition><then pos:line="17" pos:column="67"> <block pos:line="17" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">setPrivateKey<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">()<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">mem_obj<pos:position pos:line="20" pos:column="20"/></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">destroyMemObject<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">()<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">swap_filen<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&gt;<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="26">-<pos:position pos:line="23" pos:column="27"/></operator><literal type="number" pos:line="23" pos:column="27">1<pos:position pos:line="23" pos:column="28"/></literal></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29"> <block pos:line="23" pos:column="30">{
            <comment type="block" pos:line="24" pos:column="13">/*
             * Fake a call to StoreEntry-&gt;lock()  When rebuilding is done,
             * we'll just call StoreEntry-&gt;unlock() on these.
             */</comment>
            <expr_stmt><expr><operator pos:line="28" pos:column="13">++<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">lock_count<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">setReleaseFlag<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">()<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">LateReleaseStack<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">.<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">push_back<pos:position pos:line="30" pos:column="39"/></name></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">this<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then> <else pos:line="31" pos:column="11">else <block pos:line="31" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">destroyStoreEntry<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><cast type="static" pos:line="32" pos:column="31">static_cast<argument_list type="generic" pos:line="32" pos:column="42">&lt;<argument><expr><name pos:line="32" pos:column="43">hash_link<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">*<pos:position pos:line="32" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="32" pos:column="58"/></argument_list><argument_list pos:line="32" pos:column="55">(<argument><expr><name pos:line="32" pos:column="56">this<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></cast></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
            <comment type="line" pos:line="33" pos:column="13">// "this" is no longer valid</comment>
        }<pos:position pos:line="34" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="36" pos:column="9">PROF_stop<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">storeRelease<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">storeLog<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">STORE_LOG_RELEASE<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">this<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">swap_filen<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">&gt;<pos:position pos:line="42" pos:column="24"/></operator> <operator pos:line="42" pos:column="22">-<pos:position pos:line="42" pos:column="23"/></operator><literal type="number" pos:line="42" pos:column="23">1<pos:position pos:line="42" pos:column="24"/></literal></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
        <comment type="line" pos:line="43" pos:column="9">// log before unlink() below clears swap_filen</comment>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">EBIT_TEST<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">flags<pos:position pos:line="44" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="31">KEY_PRIVATE<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="13">storeDirSwapLog<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">this<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">SWAP_LOG_DEL<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="47" pos:column="9">unlink<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">()<pos:position pos:line="47" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">setMemStatus<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">NOT_IN_MEMORY<pos:position pos:line="50" pos:column="31"/></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">destroyStoreEntry<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><cast type="static" pos:line="51" pos:column="23">static_cast<argument_list type="generic" pos:line="51" pos:column="34">&lt;<argument><expr><name pos:line="51" pos:column="35">hash_link<pos:position pos:line="51" pos:column="44"/></name> <operator pos:line="51" pos:column="45">*<pos:position pos:line="51" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="51" pos:column="50"/></argument_list><argument_list pos:line="51" pos:column="47">(<argument><expr><name pos:line="51" pos:column="48">this<pos:position pos:line="51" pos:column="52"/></name></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></cast></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">PROF_stop<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">storeRelease<pos:position pos:line="52" pos:column="27"/></name></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

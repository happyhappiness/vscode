<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4831_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AuthUserRequest<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">addReplyAuthHeader<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name pos:line="2" pos:column="37">HttpReply<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">rep<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">AuthUserRequest<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type> <name pos:line="2" pos:column="72">auth_user_request<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="91">HttpRequest<pos:position pos:line="2" pos:column="102"/></name> <modifier pos:line="2" pos:column="103">*<pos:position pos:line="2" pos:column="104"/></modifier></type> <name pos:line="2" pos:column="105">request<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="114">int<pos:position pos:line="2" pos:column="117"/></name></type> <name pos:line="2" pos:column="118">accelerated<pos:position pos:line="2" pos:column="129"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="131">int<pos:position pos:line="2" pos:column="134"/></name></type> <name pos:line="2" pos:column="135">internal<pos:position pos:line="2" pos:column="143"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="144"/></parameter_list>
<comment type="block" pos:line="3" pos:column="1">/* send the auth types we are configured to support (and have compiled in!) */</comment>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">http_hdr_type<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">type<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">rep<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">sline<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">status<pos:position pos:line="7" pos:column="30"/></name></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition> <block pos:line="7" pos:column="32">{

    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">HTTP_PROXY_AUTHENTICATION_REQUIRED<pos:position pos:line="9" pos:column="44"/></name></expr>:<pos:position pos:line="9" pos:column="45"/></case>
        <comment type="block" pos:line="10" pos:column="9">/* Proxy authorisation needed */</comment>
        <expr_stmt><expr><name pos:line="11" pos:column="9">type<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">HDR_PROXY_AUTHENTICATE<pos:position pos:line="11" pos:column="38"/></name></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
        <break pos:line="12" pos:column="9">break;<pos:position pos:line="12" pos:column="15"/></break>

    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">HTTP_UNAUTHORIZED<pos:position pos:line="14" pos:column="27"/></name></expr>:<pos:position pos:line="14" pos:column="28"/></case>
        <comment type="block" pos:line="15" pos:column="9">/* WWW Authorisation needed */</comment>
        <expr_stmt><expr><name pos:line="16" pos:column="9">type<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">HDR_WWW_AUTHENTICATE<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>

    <default pos:line="19" pos:column="5">default:<pos:position pos:line="19" pos:column="13"/></default>
        <comment type="block" pos:line="20" pos:column="9">/* Keep GCC happy */</comment>
        <comment type="block" pos:line="21" pos:column="9">/* some other HTTP status */</comment>
        <expr_stmt><expr><name pos:line="22" pos:column="9">type<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">HDR_ENUM_END<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
        <break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>
    }<pos:position pos:line="24" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">29<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">9<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"authenticateFixHeader: headertype:"<pos:position pos:line="26" pos:column="55"/></literal> <operator pos:line="26" pos:column="56">&lt;&lt;<pos:position pos:line="26" pos:column="64"/></operator> <name pos:line="26" pos:column="59">type<pos:position pos:line="26" pos:column="63"/></name> <operator pos:line="26" pos:column="64">&lt;&lt;<pos:position pos:line="26" pos:column="72"/></operator> <literal type="string" pos:line="26" pos:column="67">" authuser:"<pos:position pos:line="26" pos:column="79"/></literal> <operator pos:line="26" pos:column="80">&lt;&lt;<pos:position pos:line="26" pos:column="88"/></operator> <name pos:line="26" pos:column="83">auth_user_request<pos:position pos:line="26" pos:column="100"/></name></expr></argument>)<pos:position pos:line="26" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="102"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name><name pos:line="28" pos:column="11">rep<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">sline<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">status<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">==<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">HTTP_PROXY_AUTHENTICATION_REQUIRED<pos:position pos:line="28" pos:column="66"/></name><operator pos:line="28" pos:column="66">)<pos:position pos:line="28" pos:column="67"/></operator>
            <operator pos:line="29" pos:column="13">||<pos:position pos:line="29" pos:column="15"/></operator> <operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name><name pos:line="29" pos:column="17">rep<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">sline<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">.<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">status<pos:position pos:line="29" pos:column="34"/></name></name> <operator pos:line="29" pos:column="35">==<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="38">HTTP_UNAUTHORIZED<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">)<pos:position pos:line="29" pos:column="56"/></operator><operator pos:line="29" pos:column="56">)<pos:position pos:line="29" pos:column="57"/></operator> <operator pos:line="29" pos:column="58">&amp;&amp;<pos:position pos:line="29" pos:column="68"/></operator> <name pos:line="29" pos:column="61">internal<pos:position pos:line="29" pos:column="69"/></name></expr>)<pos:position pos:line="29" pos:column="70"/></condition><then pos:line="29" pos:column="70">
        <comment type="block" pos:line="30" pos:column="9">/* this is a authenticate-needed response */</comment>
    <block pos:line="31" pos:column="5">{

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">auth_user_request<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">!=<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">NULL<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">)<pos:position pos:line="33" pos:column="40"/></operator> <operator pos:line="33" pos:column="41">&amp;&amp;<pos:position pos:line="33" pos:column="51"/></operator> <call><name pos:line="33" pos:column="44">authenticateDirection<pos:position pos:line="33" pos:column="65"/></name><argument_list pos:line="33" pos:column="65">(<argument><expr><name pos:line="33" pos:column="66">auth_user_request<pos:position pos:line="33" pos:column="83"/></name></expr></argument>)<pos:position pos:line="33" pos:column="84"/></argument_list></call> <operator pos:line="33" pos:column="85">==<pos:position pos:line="33" pos:column="87"/></operator> <literal type="number" pos:line="33" pos:column="88">1<pos:position pos:line="33" pos:column="89"/></literal></expr>)<pos:position pos:line="33" pos:column="90"/></condition><then pos:line="33" pos:column="90">
            <comment type="block" pos:line="34" pos:column="13">/* scheme specific */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="35" pos:column="13">auth_user_request<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">user<pos:position pos:line="35" pos:column="36"/></name></name><argument_list pos:line="35" pos:column="36">()<pos:position pos:line="35" pos:column="38"/></argument_list></call><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><call><name><name pos:line="35" pos:column="40">config<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">fixHeader<pos:position pos:line="35" pos:column="57"/></name></name><argument_list pos:line="35" pos:column="57">(<argument><expr><name pos:line="35" pos:column="58">auth_user_request<pos:position pos:line="35" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="77">rep<pos:position pos:line="35" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="82">type<pos:position pos:line="35" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="88">request<pos:position pos:line="35" pos:column="95"/></name></expr></argument>)<pos:position pos:line="35" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="97"/></expr_stmt></block></then>
        <else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
            <comment type="block" pos:line="37" pos:column="13">/* call each configured &amp; running authscheme */</comment>

            <for pos:line="39" pos:column="13">for <control pos:line="39" pos:column="17">(<init><decl><type><name><name pos:line="39" pos:column="18">authConfig<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">::<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">iterator<pos:position pos:line="39" pos:column="38"/></name></name></type>  <name pos:line="39" pos:column="40">i<pos:position pos:line="39" pos:column="41"/></name> <init pos:line="39" pos:column="42">= <expr><call><name><name pos:line="39" pos:column="44">Config<pos:position pos:line="39" pos:column="50"/></name><operator pos:line="39" pos:column="50">.<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="51">authConfiguration<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">.<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="69">begin<pos:position pos:line="39" pos:column="74"/></name></name><argument_list pos:line="39" pos:column="74">()<pos:position pos:line="39" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="77"/></init> <condition><expr><name pos:line="39" pos:column="78">i<pos:position pos:line="39" pos:column="79"/></name> <operator pos:line="39" pos:column="80">!=<pos:position pos:line="39" pos:column="82"/></operator> <call><name><name pos:line="39" pos:column="83">Config<pos:position pos:line="39" pos:column="89"/></name><operator pos:line="39" pos:column="89">.<pos:position pos:line="39" pos:column="90"/></operator><name pos:line="39" pos:column="90">authConfiguration<pos:position pos:line="39" pos:column="107"/></name><operator pos:line="39" pos:column="107">.<pos:position pos:line="39" pos:column="108"/></operator><name pos:line="39" pos:column="108">end<pos:position pos:line="39" pos:column="111"/></name></name><argument_list pos:line="39" pos:column="111">()<pos:position pos:line="39" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="114"/></condition> <incr><expr><operator pos:line="39" pos:column="115">++<pos:position pos:line="39" pos:column="117"/></operator><name pos:line="39" pos:column="117">i<pos:position pos:line="39" pos:column="118"/></name></expr></incr>)<pos:position pos:line="39" pos:column="119"/></control> <block pos:line="39" pos:column="120">{
                <decl_stmt><decl><type><name pos:line="40" pos:column="17">AuthConfig<pos:position pos:line="40" pos:column="27"/></name> <modifier pos:line="40" pos:column="28">*<pos:position pos:line="40" pos:column="29"/></modifier></type><name pos:line="40" pos:column="29">scheme<pos:position pos:line="40" pos:column="35"/></name> <init pos:line="40" pos:column="36">= <expr><operator pos:line="40" pos:column="38">*<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">i<pos:position pos:line="40" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="41"/></decl_stmt>

                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name><name pos:line="42" pos:column="21">scheme<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">active<pos:position pos:line="42" pos:column="35"/></name></name><argument_list pos:line="42" pos:column="35">()<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="43" pos:column="21">scheme<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">fixHeader<pos:position pos:line="43" pos:column="38"/></name></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">NULL<pos:position pos:line="43" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">rep<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">type<pos:position pos:line="43" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="56">request<pos:position pos:line="43" pos:column="63"/></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt></block></then>
                <else pos:line="44" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="21">debugs<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><literal type="number" pos:line="45" pos:column="28">29<pos:position pos:line="45" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="32">4<pos:position pos:line="45" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"authenticateFixHeader: Configured scheme "<pos:position pos:line="45" pos:column="78"/></literal> <operator pos:line="45" pos:column="79">&lt;&lt;<pos:position pos:line="45" pos:column="87"/></operator> <call><name><name pos:line="45" pos:column="82">scheme<pos:position pos:line="45" pos:column="88"/></name><operator pos:line="45" pos:column="88">-&gt;<pos:position pos:line="45" pos:column="93"/></operator><name pos:line="45" pos:column="90">type<pos:position pos:line="45" pos:column="94"/></name></name><argument_list pos:line="45" pos:column="94">()<pos:position pos:line="45" pos:column="96"/></argument_list></call> <operator pos:line="45" pos:column="97">&lt;&lt;<pos:position pos:line="45" pos:column="105"/></operator> <literal type="string" pos:line="45" pos:column="100">" not Active"<pos:position pos:line="45" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="115"/></expr_stmt></block></else></if>
            }<pos:position pos:line="46" pos:column="14"/></block></for>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>

    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="50" pos:column="5">/*
     * allow protocol specific headers to be _added_ to the existing
     * response - ie digest auth
     */</comment>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">auth_user_request<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">!=<pos:position pos:line="55" pos:column="29"/></operator> <name pos:line="55" pos:column="30">NULL<pos:position pos:line="55" pos:column="34"/></name></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35"> <block pos:line="55" pos:column="36">{
        <expr_stmt><expr><call><name><name pos:line="56" pos:column="9">auth_user_request<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">addHeader<pos:position pos:line="56" pos:column="37"/></name></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">rep<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">accelerated<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">auth_user_request<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">-&gt;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="32">lastReply<pos:position pos:line="57" pos:column="41"/></name></name> <operator pos:line="57" pos:column="42">!=<pos:position pos:line="57" pos:column="44"/></operator> <name pos:line="57" pos:column="45">AUTH_AUTHENTICATED<pos:position pos:line="57" pos:column="63"/></name></expr>)<pos:position pos:line="57" pos:column="64"/></condition><then pos:line="57" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="13">auth_user_request<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">-&gt;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="32">lastReply<pos:position pos:line="58" pos:column="41"/></name></name> <operator pos:line="58" pos:column="42">=<pos:position pos:line="58" pos:column="43"/></operator> <name pos:line="58" pos:column="44">AUTH_ACL_CANNOT_AUTHENTICATE<pos:position pos:line="58" pos:column="72"/></name></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

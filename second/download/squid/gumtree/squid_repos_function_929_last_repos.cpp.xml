<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_929_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">clear<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">()<pos:position pos:line="1" pos:column="13"/></parameter_list> <block pos:line="1" pos:column="14">{
        <expr_stmt><expr><name pos:line="2" pos:column="9">scheme_<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">=<pos:position pos:line="2" pos:column="17"/></operator><name><name pos:line="2" pos:column="17">AnyP<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">PROTO_NONE<pos:position pos:line="2" pos:column="33"/></name></name></expr>;<pos:position pos:line="2" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="3" pos:column="9">hostIsNumeric_<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">=<pos:position pos:line="3" pos:column="25"/></operator> <literal type="boolean" pos:line="3" pos:column="26">false<pos:position pos:line="3" pos:column="31"/></literal></expr>;<pos:position pos:line="3" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">host_<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="5" pos:column="9">hostAddr_<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">setEmpty<pos:position pos:line="5" pos:column="27"/></name></name><argument_list pos:line="5" pos:column="27">()<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">port_<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">touch<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">()<pos:position pos:line="7" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></function></unit>

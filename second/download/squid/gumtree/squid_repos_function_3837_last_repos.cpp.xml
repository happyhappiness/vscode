<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3837_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">InitClientContext<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">Security<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">ContextPointer<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">ctx<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="55">Security<pos:position pos:line="2" pos:column="63"/></name><operator pos:line="2" pos:column="63">::<pos:position pos:line="2" pos:column="65"/></operator><name pos:line="2" pos:column="65">PeerOptions<pos:position pos:line="2" pos:column="76"/></name></name> <modifier pos:line="2" pos:column="77">&amp;<pos:position pos:line="2" pos:column="82"/></modifier></type><name pos:line="2" pos:column="78">peer<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="84">long<pos:position pos:line="2" pos:column="88"/></name></type> <name pos:line="2" pos:column="89">fl<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="92"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">ctx<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">peer<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">sslCipher<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">isEmpty<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35"> <block pos:line="7" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">83<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">5<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"Using chiper suite "<pos:position pos:line="8" pos:column="44"/></literal> <operator pos:line="8" pos:column="45">&lt;&lt;<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="48">peer<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">.<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">sslCipher<pos:position pos:line="8" pos:column="62"/></name></name> <operator pos:line="8" pos:column="63">&lt;&lt;<pos:position pos:line="8" pos:column="71"/></operator> <literal type="string" pos:line="8" pos:column="66">"."<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></expr_stmt>

        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">cipher<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><call><name><name pos:line="10" pos:column="30">peer<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">.<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">sslCipher<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">.<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">c_str<pos:position pos:line="10" pos:column="50"/></name></name><argument_list pos:line="10" pos:column="50">()<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">SSL_CTX_set_cipher_list<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><call><name><name pos:line="11" pos:column="38">ctx<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">get<pos:position pos:line="11" pos:column="45"/></name></name><argument_list pos:line="11" pos:column="45">()<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">cipher<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57"> <block pos:line="11" pos:column="58">{
            <decl_stmt><decl><type><specifier pos:line="12" pos:column="13">const<pos:position pos:line="12" pos:column="18"/></specifier> <name pos:line="12" pos:column="19">int<pos:position pos:line="12" pos:column="22"/></name></type> <name pos:line="12" pos:column="23">ssl_error<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><call><name pos:line="12" pos:column="35">ERR_get_error<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">()<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="51"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">fatalf<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="string" pos:line="13" pos:column="20">"Failed to set SSL cipher suite '%s': %s\n"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>,
                   <argument><expr><name pos:line="14" pos:column="20">cipher<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="28">Security<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">::<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">ErrorString<pos:position pos:line="14" pos:column="49"/></name></name><argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">ssl_error<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name><name pos:line="18" pos:column="10">peer<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">certs<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">.<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">empty<pos:position pos:line="18" pos:column="26"/></name></name><argument_list pos:line="18" pos:column="26">()<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block pos:line="18" pos:column="30">{
        <comment type="line" pos:line="19" pos:column="9">// TODO: support loading multiple cert/key pairs</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">auto<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">&amp;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="15">keys<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name><name pos:line="20" pos:column="22">peer<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">.<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">certs<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">.<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">front<pos:position pos:line="20" pos:column="38"/></name></name><argument_list pos:line="20" pos:column="38">()<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name><name pos:line="21" pos:column="14">keys<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">certFile<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">isEmpty<pos:position pos:line="21" pos:column="35"/></name></name><argument_list pos:line="21" pos:column="35">()<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38"> <block pos:line="21" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">83<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">DBG_IMPORTANT<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"Using certificate in "<pos:position pos:line="22" pos:column="62"/></literal> <operator pos:line="22" pos:column="63">&lt;&lt;<pos:position pos:line="22" pos:column="71"/></operator> <name><name pos:line="22" pos:column="66">keys<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">.<pos:position pos:line="22" pos:column="71"/></operator><name pos:line="22" pos:column="71">certFile<pos:position pos:line="22" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="81"/></expr_stmt>

            <decl_stmt><decl><type><specifier pos:line="24" pos:column="13">const<pos:position pos:line="24" pos:column="18"/></specifier> <name pos:line="24" pos:column="19">char<pos:position pos:line="24" pos:column="23"/></name> <modifier pos:line="24" pos:column="24">*<pos:position pos:line="24" pos:column="25"/></modifier></type><name pos:line="24" pos:column="25">certfile<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><call><name><name pos:line="24" pos:column="36">keys<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">.<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">certFile<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">.<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">c_str<pos:position pos:line="24" pos:column="55"/></name></name><argument_list pos:line="24" pos:column="55">()<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="58"/></decl_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">!<pos:position pos:line="25" pos:column="18"/></operator><call><name pos:line="25" pos:column="18">SSL_CTX_use_certificate_chain_file<pos:position pos:line="25" pos:column="52"/></name><argument_list pos:line="25" pos:column="52">(<argument><expr><call><name><name pos:line="25" pos:column="53">ctx<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">.<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="57">get<pos:position pos:line="25" pos:column="60"/></name></name><argument_list pos:line="25" pos:column="60">()<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="64">certfile<pos:position pos:line="25" pos:column="72"/></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="74"/></condition><then pos:line="25" pos:column="74"> <block pos:line="25" pos:column="75">{
                <decl_stmt><decl><type><specifier pos:line="26" pos:column="17">const<pos:position pos:line="26" pos:column="22"/></specifier> <name pos:line="26" pos:column="23">int<pos:position pos:line="26" pos:column="26"/></name></type> <name pos:line="26" pos:column="27">ssl_error<pos:position pos:line="26" pos:column="36"/></name> <init pos:line="26" pos:column="37">= <expr><call><name pos:line="26" pos:column="39">ERR_get_error<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">()<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="55"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">fatalf<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"Failed to acquire SSL certificate '%s': %s\n"<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>,
                       <argument><expr><name pos:line="28" pos:column="24">certfile<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><call><name><name pos:line="28" pos:column="34">Security<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">::<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="44">ErrorString<pos:position pos:line="28" pos:column="55"/></name></name><argument_list pos:line="28" pos:column="55">(<argument><expr><name pos:line="28" pos:column="56">ssl_error<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="31" pos:column="13">debugs<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="number" pos:line="31" pos:column="20">83<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">DBG_IMPORTANT<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="39">"Using private key in "<pos:position pos:line="31" pos:column="62"/></literal> <operator pos:line="31" pos:column="63">&lt;&lt;<pos:position pos:line="31" pos:column="71"/></operator> <name><name pos:line="31" pos:column="66">keys<pos:position pos:line="31" pos:column="70"/></name><operator pos:line="31" pos:column="70">.<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="71">privateKeyFile<pos:position pos:line="31" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="87"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="32" pos:column="13">const<pos:position pos:line="32" pos:column="18"/></specifier> <name pos:line="32" pos:column="19">char<pos:position pos:line="32" pos:column="23"/></name> <modifier pos:line="32" pos:column="24">*<pos:position pos:line="32" pos:column="25"/></modifier></type><name pos:line="32" pos:column="25">keyfile<pos:position pos:line="32" pos:column="32"/></name> <init pos:line="32" pos:column="33">= <expr><call><name><name pos:line="32" pos:column="35">keys<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">.<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">privateKeyFile<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">.<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="55">c_str<pos:position pos:line="32" pos:column="60"/></name></name><argument_list pos:line="32" pos:column="60">()<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="63"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ssl_ask_password<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><call><name><name pos:line="33" pos:column="30">ctx<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">.<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="34">get<pos:position pos:line="33" pos:column="37"/></name></name><argument_list pos:line="33" pos:column="37">()<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">keyfile<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>

            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">!<pos:position pos:line="35" pos:column="18"/></operator><call><name pos:line="35" pos:column="18">SSL_CTX_use_PrivateKey_file<pos:position pos:line="35" pos:column="45"/></name><argument_list pos:line="35" pos:column="45">(<argument><expr><call><name><name pos:line="35" pos:column="46">ctx<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">.<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="50">get<pos:position pos:line="35" pos:column="53"/></name></name><argument_list pos:line="35" pos:column="53">()<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="57">keyfile<pos:position pos:line="35" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="66">SSL_FILETYPE_PEM<pos:position pos:line="35" pos:column="82"/></name></expr></argument>)<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="84"/></condition><then pos:line="35" pos:column="84"> <block pos:line="35" pos:column="85">{
                <decl_stmt><decl><type><specifier pos:line="36" pos:column="17">const<pos:position pos:line="36" pos:column="22"/></specifier> <name pos:line="36" pos:column="23">int<pos:position pos:line="36" pos:column="26"/></name></type> <name pos:line="36" pos:column="27">ssl_error<pos:position pos:line="36" pos:column="36"/></name> <init pos:line="36" pos:column="37">= <expr><call><name pos:line="36" pos:column="39">ERR_get_error<pos:position pos:line="36" pos:column="52"/></name><argument_list pos:line="36" pos:column="52">()<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="55"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">fatalf<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"Failed to acquire SSL private key '%s': %s\n"<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>,
                       <argument><expr><name pos:line="38" pos:column="24">keyfile<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="33">Security<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">::<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="43">ErrorString<pos:position pos:line="38" pos:column="54"/></name></name><argument_list pos:line="38" pos:column="54">(<argument><expr><name pos:line="38" pos:column="55">ssl_error<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="41" pos:column="13">debugs<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><literal type="number" pos:line="41" pos:column="20">83<pos:position pos:line="41" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="24">5<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="27">"Comparing private and public SSL keys."<pos:position pos:line="41" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt>

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">!<pos:position pos:line="43" pos:column="18"/></operator><call><name pos:line="43" pos:column="18">SSL_CTX_check_private_key<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><call><name><name pos:line="43" pos:column="44">ctx<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">.<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="48">get<pos:position pos:line="43" pos:column="51"/></name></name><argument_list pos:line="43" pos:column="51">()<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="55"/></condition><then pos:line="43" pos:column="55"> <block pos:line="43" pos:column="56">{
                <decl_stmt><decl><type><specifier pos:line="44" pos:column="17">const<pos:position pos:line="44" pos:column="22"/></specifier> <name pos:line="44" pos:column="23">int<pos:position pos:line="44" pos:column="26"/></name></type> <name pos:line="44" pos:column="27">ssl_error<pos:position pos:line="44" pos:column="36"/></name> <init pos:line="44" pos:column="37">= <expr><call><name pos:line="44" pos:column="39">ERR_get_error<pos:position pos:line="44" pos:column="52"/></name><argument_list pos:line="44" pos:column="52">()<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="55"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">fatalf<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><literal type="string" pos:line="45" pos:column="24">"SSL private key '%s' does not match public key '%s': %s\n"<pos:position pos:line="45" pos:column="83"/></literal></expr></argument>,
                       <argument><expr><name pos:line="46" pos:column="24">certfile<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">keyfile<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><call><name><name pos:line="46" pos:column="43">Security<pos:position pos:line="46" pos:column="51"/></name><operator pos:line="46" pos:column="51">::<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="53">ErrorString<pos:position pos:line="46" pos:column="64"/></name></name><argument_list pos:line="46" pos:column="64">(<argument><expr><name pos:line="46" pos:column="65">ssl_error<pos:position pos:line="46" pos:column="74"/></name></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">maybeSetupRsaCallback<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">ctx<pos:position pos:line="51" pos:column="30"/></name></expr></argument>)<pos:position pos:line="51" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">fl<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">&amp;<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="14">SSL_FLAG_DONT_VERIFY_PEER<pos:position pos:line="53" pos:column="39"/></name></expr>)<pos:position pos:line="53" pos:column="40"/></condition><then pos:line="53" pos:column="40"> <block pos:line="53" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">83<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="20">2<pos:position pos:line="54" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"NOTICE: Peer certificates are not verified for validity!"<pos:position pos:line="54" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">SSL_CTX_set_verify<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><call><name><name pos:line="55" pos:column="28">ctx<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">.<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">get<pos:position pos:line="55" pos:column="35"/></name></name><argument_list pos:line="55" pos:column="35">()<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="55" pos:column="39">SSL_VERIFY_NONE<pos:position pos:line="55" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="56">NULL<pos:position pos:line="55" pos:column="60"/></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then> <else pos:line="56" pos:column="7">else <block pos:line="56" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">debugs<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="number" pos:line="57" pos:column="16">83<pos:position pos:line="57" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="20">9<pos:position pos:line="57" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="23">"Setting certificate verification callback."<pos:position pos:line="57" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">SSL_CTX_set_verify<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><call><name><name pos:line="58" pos:column="28">ctx<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">.<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="32">get<pos:position pos:line="58" pos:column="35"/></name></name><argument_list pos:line="58" pos:column="35">()<pos:position pos:line="58" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">SSL_VERIFY_PEER<pos:position pos:line="58" pos:column="54"/></name> <operator pos:line="58" pos:column="55">|<pos:position pos:line="58" pos:column="56"/></operator> <name pos:line="58" pos:column="57">SSL_VERIFY_FAIL_IF_NO_PEER_CERT<pos:position pos:line="58" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="90">ssl_verify_cb<pos:position pos:line="58" pos:column="103"/></name></expr></argument>)<pos:position pos:line="58" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="105"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <return pos:line="61" pos:column="5">return <expr><literal type="boolean" pos:line="61" pos:column="12">true<pos:position pos:line="61" pos:column="16"/></literal></expr>;<pos:position pos:line="61" pos:column="17"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

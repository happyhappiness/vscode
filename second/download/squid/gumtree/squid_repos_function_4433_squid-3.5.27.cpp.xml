<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4433_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name><name pos:line="1" pos:column="5">Ssl<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">matchX509CommonNames<pos:position pos:line="1" pos:column="30"/></name></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">X509<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">peer_cert<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">check_data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> (<modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier><name pos:line="1" pos:column="72">check_func<pos:position pos:line="1" pos:column="82"/></name>)<parameter_list pos:line="1" pos:column="83">(<parameter><decl><type><name pos:line="1" pos:column="84">void<pos:position pos:line="1" pos:column="88"/></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">check_data<pos:position pos:line="1" pos:column="100"/></name></decl></parameter>,  <parameter><decl><type><name pos:line="1" pos:column="103">ASN1_STRING<pos:position pos:line="1" pos:column="114"/></name> <modifier pos:line="1" pos:column="115">*<pos:position pos:line="1" pos:column="116"/></modifier></type><name pos:line="1" pos:column="116">cn_data<pos:position pos:line="1" pos:column="123"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="124"/></parameter_list></function_decl></parameter>)<pos:position pos:line="1" pos:column="125"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">peer_cert<pos:position pos:line="3" pos:column="21"/></name></expr></argument>)<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="23"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="5" pos:column="5">X509_NAME<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">name<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><call><name pos:line="5" pos:column="23">X509_get_subject_name<pos:position pos:line="5" pos:column="44"/></name><argument_list pos:line="5" pos:column="44">(<argument><expr><name pos:line="5" pos:column="45">peer_cert<pos:position pos:line="5" pos:column="54"/></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">int<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><call><name pos:line="7" pos:column="18">X509_NAME_get_index_by_NID<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">name<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">NID_commonName<pos:position pos:line="7" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="67">-<pos:position pos:line="7" pos:column="68"/></operator><literal type="number" pos:line="7" pos:column="68">1<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="71"/></init> <condition><expr><name pos:line="7" pos:column="72">i<pos:position pos:line="7" pos:column="73"/></name> <operator pos:line="7" pos:column="74">&gt;=<pos:position pos:line="7" pos:column="79"/></operator> <literal type="number" pos:line="7" pos:column="77">0<pos:position pos:line="7" pos:column="78"/></literal></expr>;<pos:position pos:line="7" pos:column="79"/></condition> <incr><expr><name pos:line="7" pos:column="80">i<pos:position pos:line="7" pos:column="81"/></name> <operator pos:line="7" pos:column="82">=<pos:position pos:line="7" pos:column="83"/></operator> <call><name pos:line="7" pos:column="84">X509_NAME_get_index_by_NID<pos:position pos:line="7" pos:column="110"/></name><argument_list pos:line="7" pos:column="110">(<argument><expr><name pos:line="7" pos:column="111">name<pos:position pos:line="7" pos:column="115"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="117">NID_commonName<pos:position pos:line="7" pos:column="131"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="133">i<pos:position pos:line="7" pos:column="134"/></name></expr></argument>)<pos:position pos:line="7" pos:column="135"/></argument_list></call></expr></incr>)<pos:position pos:line="7" pos:column="136"/></control> <block pos:line="7" pos:column="137">{

        <decl_stmt><decl><type><name pos:line="9" pos:column="9">ASN1_STRING<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">cn_data<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><call><name pos:line="9" pos:column="32">X509_NAME_ENTRY_get_data<pos:position pos:line="9" pos:column="56"/></name><argument_list pos:line="9" pos:column="56">(<argument><expr><call><name pos:line="9" pos:column="57">X509_NAME_get_entry<pos:position pos:line="9" pos:column="76"/></name><argument_list pos:line="9" pos:column="76">(<argument><expr><name pos:line="9" pos:column="77">name<pos:position pos:line="9" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="83">i<pos:position pos:line="9" pos:column="84"/></name></expr></argument>)<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="87"/></decl_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">( <expr><call pos:line="11" pos:column="14">(<modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier><name pos:line="11" pos:column="16">check_func<pos:position pos:line="11" pos:column="26"/></name>)<argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">check_data<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">cn_data<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <literal type="number" pos:line="11" pos:column="52">0<pos:position pos:line="11" pos:column="53"/></literal></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54">
            <block type="pseudo"><return pos:line="12" pos:column="13">return <expr><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></return></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">STACK_OF<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">GENERAL_NAME<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call> <operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">altnames<pos:position pos:line="15" pos:column="38"/></name></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">altnames<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><call><name pos:line="16" pos:column="17">STACK_OF<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">GENERAL_NAME<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call><operator pos:line="16" pos:column="39">*<pos:position pos:line="16" pos:column="40"/></operator><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator><call><name pos:line="16" pos:column="41">X509_get_ext_d2i<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">peer_cert<pos:position pos:line="16" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="69">NID_subject_alt_name<pos:position pos:line="16" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="91">NULL<pos:position pos:line="16" pos:column="95"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="97">NULL<pos:position pos:line="16" pos:column="101"/></name></expr></argument>)<pos:position pos:line="16" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="103"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">altnames<pos:position pos:line="18" pos:column="17"/></name></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18"> <block pos:line="18" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">numalts<pos:position pos:line="19" pos:column="20"/></name> <init pos:line="19" pos:column="21">= <expr><call><name pos:line="19" pos:column="23">sk_GENERAL_NAME_num<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name pos:line="19" pos:column="43">altnames<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="53"/></decl_stmt>
        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><decl><type><name pos:line="20" pos:column="14">int<pos:position pos:line="20" pos:column="17"/></name></type> <name pos:line="20" pos:column="18">i<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">= <expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="24"/></init> <condition><expr><name pos:line="20" pos:column="25">i<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&lt;<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="29">numalts<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></condition> <incr><expr><operator pos:line="20" pos:column="38">++<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">i<pos:position pos:line="20" pos:column="41"/></name></expr></incr>)<pos:position pos:line="20" pos:column="42"/></control> <block pos:line="20" pos:column="43">{
            <decl_stmt><decl><type><specifier pos:line="21" pos:column="13">const<pos:position pos:line="21" pos:column="18"/></specifier> <name pos:line="21" pos:column="19">GENERAL_NAME<pos:position pos:line="21" pos:column="31"/></name> <modifier pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></modifier></type><name pos:line="21" pos:column="33">check<pos:position pos:line="21" pos:column="38"/></name> <init pos:line="21" pos:column="39">= <expr><call><name pos:line="21" pos:column="41">sk_GENERAL_NAME_value<pos:position pos:line="21" pos:column="62"/></name><argument_list pos:line="21" pos:column="62">(<argument><expr><name pos:line="21" pos:column="63">altnames<pos:position pos:line="21" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="73">i<pos:position pos:line="21" pos:column="74"/></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="76"/></decl_stmt>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name><name pos:line="22" pos:column="17">check<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">type<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">!=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">GEN_DNS<pos:position pos:line="22" pos:column="39"/></name></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
                <continue pos:line="23" pos:column="17">continue;<pos:position pos:line="23" pos:column="26"/></continue>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">ASN1_STRING<pos:position pos:line="25" pos:column="24"/></name> <modifier pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></modifier></type><name pos:line="25" pos:column="26">cn_data<pos:position pos:line="25" pos:column="33"/></name> <init pos:line="25" pos:column="34">= <expr><name><name pos:line="25" pos:column="36">check<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">d<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">dNSName<pos:position pos:line="25" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="53"/></decl_stmt>

            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">( <expr><call pos:line="27" pos:column="18">(<modifier pos:line="27" pos:column="19">*<pos:position pos:line="27" pos:column="20"/></modifier><name pos:line="27" pos:column="20">check_func<pos:position pos:line="27" pos:column="30"/></name>)<argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">check_data<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">cn_data<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call> <operator pos:line="27" pos:column="53">==<pos:position pos:line="27" pos:column="55"/></operator> <literal type="number" pos:line="27" pos:column="56">0<pos:position pos:line="27" pos:column="57"/></literal></expr>)<pos:position pos:line="27" pos:column="58"/></condition><then pos:line="27" pos:column="58"> <block pos:line="27" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">sk_GENERAL_NAME_pop_free<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">altnames<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">GENERAL_NAME_free<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
                <return pos:line="29" pos:column="17">return <expr><literal type="number" pos:line="29" pos:column="24">1<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
        }<pos:position pos:line="31" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">sk_GENERAL_NAME_pop_free<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">altnames<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="44">GENERAL_NAME_free<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <return pos:line="34" pos:column="5">return <expr><literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

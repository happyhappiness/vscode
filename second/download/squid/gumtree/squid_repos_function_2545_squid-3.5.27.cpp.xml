<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2545_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ipcacheParse<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">ipcache_entry<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">i<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">rfc1035_rr<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">answers<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">nr<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="68">const<pos:position pos:line="2" pos:column="73"/></specifier> <name pos:line="2" pos:column="74">char<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">error_message<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">k<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">j<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">na<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ttl<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">name<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><specifier pos:line="8" pos:column="25">const<pos:position pos:line="8" pos:column="30"/></specifier> <name pos:line="8" pos:column="31">char<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator><operator pos:line="8" pos:column="37">)<pos:position pos:line="8" pos:column="38"/></operator><name><name pos:line="8" pos:column="38">i<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">hash<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">key<pos:position pos:line="8" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">cname_found<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">i<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">expires<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">squid_curtime<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">+<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="34">Config<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">negativeDnsTtl<pos:position pos:line="11" pos:column="55"/></name></name></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">i<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">flags<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">negcached<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="boolean" pos:line="12" pos:column="26">true<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">safe_free<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">addrs<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">in_addrs<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">i<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">addrs<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">in_addrs<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">==<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">NULL<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">safe_free<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name><name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">addrs<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">bad_mask<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name><name pos:line="16" pos:column="12">i<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">addrs<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">bad_mask<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">NULL<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">safe_free<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">i<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">error_message<pos:position pos:line="17" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name><name pos:line="18" pos:column="12">i<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">error_message<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">==<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">NULL<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">i<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">addrs<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">count<pos:position pos:line="19" pos:column="19"/></name></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">nr<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">&lt;<pos:position pos:line="21" pos:column="16"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16"> <block pos:line="21" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">14<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">3<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"Lookup failed '"<pos:position pos:line="22" pos:column="40"/></literal> <operator pos:line="22" pos:column="41">&lt;&lt;<pos:position pos:line="22" pos:column="49"/></operator> <name pos:line="22" pos:column="44">error_message<pos:position pos:line="22" pos:column="57"/></name> <operator pos:line="22" pos:column="58">&lt;&lt;<pos:position pos:line="22" pos:column="66"/></operator> <literal type="string" pos:line="22" pos:column="61">"' for '"<pos:position pos:line="22" pos:column="70"/></literal> <operator pos:line="22" pos:column="71">&lt;&lt;<pos:position pos:line="22" pos:column="79"/></operator> <operator pos:line="22" pos:column="74">(<pos:position pos:line="22" pos:column="75"/></operator><specifier pos:line="22" pos:column="75">const<pos:position pos:line="22" pos:column="80"/></specifier> <name pos:line="22" pos:column="81">char<pos:position pos:line="22" pos:column="85"/></name> <operator pos:line="22" pos:column="86">*<pos:position pos:line="22" pos:column="87"/></operator><operator pos:line="22" pos:column="87">)<pos:position pos:line="22" pos:column="88"/></operator><name><name pos:line="22" pos:column="88">i<pos:position pos:line="22" pos:column="89"/></name><operator pos:line="22" pos:column="89">-&gt;<pos:position pos:line="22" pos:column="94"/></operator><name pos:line="22" pos:column="91">hash<pos:position pos:line="22" pos:column="95"/></name><operator pos:line="22" pos:column="95">.<pos:position pos:line="22" pos:column="96"/></operator><name pos:line="22" pos:column="96">key<pos:position pos:line="22" pos:column="99"/></name></name> <operator pos:line="22" pos:column="100">&lt;&lt;<pos:position pos:line="22" pos:column="108"/></operator> <literal type="string" pos:line="22" pos:column="103">"'"<pos:position pos:line="22" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="108"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">error_message<pos:position pos:line="23" pos:column="25"/></name></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <call><name pos:line="23" pos:column="28">xstrdup<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">error_message<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">nr<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">==<pos:position pos:line="27" pos:column="14"/></operator> <literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17"> <block pos:line="27" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">14<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">3<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"No DNS records in response to '"<pos:position pos:line="28" pos:column="56"/></literal> <operator pos:line="28" pos:column="57">&lt;&lt;<pos:position pos:line="28" pos:column="65"/></operator> <name pos:line="28" pos:column="60">name<pos:position pos:line="28" pos:column="64"/></name> <operator pos:line="28" pos:column="65">&lt;&lt;<pos:position pos:line="28" pos:column="73"/></operator> <literal type="string" pos:line="28" pos:column="68">"'"<pos:position pos:line="28" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">i<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">error_message<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">xstrdup<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><literal type="string" pos:line="29" pos:column="36">"No DNS records"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">debugs<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="number" pos:line="33" pos:column="12">14<pos:position pos:line="33" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="16">3<pos:position pos:line="33" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="19">nr<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&lt;&lt;<pos:position pos:line="33" pos:column="30"/></operator> <literal type="string" pos:line="33" pos:column="25">" answers for '"<pos:position pos:line="33" pos:column="41"/></literal> <operator pos:line="33" pos:column="42">&lt;&lt;<pos:position pos:line="33" pos:column="50"/></operator> <name pos:line="33" pos:column="45">name<pos:position pos:line="33" pos:column="49"/></name> <operator pos:line="33" pos:column="50">&lt;&lt;<pos:position pos:line="33" pos:column="58"/></operator> <literal type="string" pos:line="33" pos:column="53">"'"<pos:position pos:line="33" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">assert<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">answers<pos:position pos:line="34" pos:column="19"/></name></expr></argument>)<pos:position pos:line="34" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>

    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">k<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></init> <condition><expr><name pos:line="36" pos:column="17">k<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&lt;<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="21">nr<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></condition> <incr><expr><operator pos:line="36" pos:column="25">++<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">k<pos:position pos:line="36" pos:column="28"/></name></expr></incr>)<pos:position pos:line="36" pos:column="29"/></control> <block pos:line="36" pos:column="30">{

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">Ip<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">::<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">EnableIpv6<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">&amp;&amp;<pos:position pos:line="38" pos:column="38"/></operator> <name><name pos:line="38" pos:column="31">answers<pos:position pos:line="38" pos:column="38"/></name><index pos:line="38" pos:column="38">[<expr><name pos:line="38" pos:column="39">k<pos:position pos:line="38" pos:column="40"/></name></expr>]<pos:position pos:line="38" pos:column="41"/></index></name><operator pos:line="38" pos:column="41">.<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="42">type<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">==<pos:position pos:line="38" pos:column="49"/></operator> <name pos:line="38" pos:column="50">RFC1035_TYPE_AAAA<pos:position pos:line="38" pos:column="67"/></name></expr>)<pos:position pos:line="38" pos:column="68"/></condition><then pos:line="38" pos:column="68"> <block pos:line="38" pos:column="69">{
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name><name pos:line="39" pos:column="17">answers<pos:position pos:line="39" pos:column="24"/></name><index pos:line="39" pos:column="24">[<expr><name pos:line="39" pos:column="25">k<pos:position pos:line="39" pos:column="26"/></name></expr>]<pos:position pos:line="39" pos:column="27"/></index></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">rdlength<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">!=<pos:position pos:line="39" pos:column="39"/></operator> <sizeof pos:line="39" pos:column="40">sizeof<argument_list pos:line="39" pos:column="46">(<argument><expr pos:line="39" pos:column="47">struct <name pos:line="39" pos:column="54">in6_addr<pos:position pos:line="39" pos:column="62"/></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></sizeof></expr>)<pos:position pos:line="39" pos:column="64"/></condition><then pos:line="39" pos:column="64"> <block pos:line="39" pos:column="65">{
                <expr_stmt><expr><call><name pos:line="40" pos:column="17">debugs<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><literal type="number" pos:line="40" pos:column="24">14<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="28">DBG_IMPORTANT<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">MYNAME<pos:position pos:line="40" pos:column="49"/></name> <operator pos:line="40" pos:column="50">&lt;&lt;<pos:position pos:line="40" pos:column="58"/></operator> <literal type="string" pos:line="40" pos:column="53">"Invalid IPv6 address in response to '"<pos:position pos:line="40" pos:column="92"/></literal> <operator pos:line="40" pos:column="93">&lt;&lt;<pos:position pos:line="40" pos:column="101"/></operator> <name pos:line="40" pos:column="96">name<pos:position pos:line="40" pos:column="100"/></name> <operator pos:line="40" pos:column="101">&lt;&lt;<pos:position pos:line="40" pos:column="109"/></operator> <literal type="string" pos:line="40" pos:column="104">"'"<pos:position pos:line="40" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="109"/></expr_stmt>
                <continue pos:line="41" pos:column="17">continue;<pos:position pos:line="41" pos:column="26"/></continue>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="43" pos:column="13">++<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">na<pos:position pos:line="43" pos:column="17"/></name></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="44" pos:column="13">++<pos:position pos:line="44" pos:column="15"/></operator><name><name pos:line="44" pos:column="15">IpcacheStats<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">rr_aaaa<pos:position pos:line="44" pos:column="35"/></name></name></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
            <continue pos:line="45" pos:column="13">continue;<pos:position pos:line="45" pos:column="22"/></continue>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">answers<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><name pos:line="48" pos:column="21">k<pos:position pos:line="48" pos:column="22"/></name></expr>]<pos:position pos:line="48" pos:column="23"/></index></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">type<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">==<pos:position pos:line="48" pos:column="31"/></operator> <name pos:line="48" pos:column="32">RFC1035_TYPE_A<pos:position pos:line="48" pos:column="46"/></name></expr>)<pos:position pos:line="48" pos:column="47"/></condition><then pos:line="48" pos:column="47"> <block pos:line="48" pos:column="48">{
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name><name pos:line="49" pos:column="17">answers<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><name pos:line="49" pos:column="25">k<pos:position pos:line="49" pos:column="26"/></name></expr>]<pos:position pos:line="49" pos:column="27"/></index></name><operator pos:line="49" pos:column="27">.<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">rdlength<pos:position pos:line="49" pos:column="36"/></name> <operator pos:line="49" pos:column="37">!=<pos:position pos:line="49" pos:column="39"/></operator> <sizeof pos:line="49" pos:column="40">sizeof<argument_list pos:line="49" pos:column="46">(<argument><expr pos:line="49" pos:column="47">struct <name pos:line="49" pos:column="54">in_addr<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></sizeof></expr>)<pos:position pos:line="49" pos:column="63"/></condition><then pos:line="49" pos:column="63"> <block pos:line="49" pos:column="64">{
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">debugs<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><literal type="number" pos:line="50" pos:column="24">14<pos:position pos:line="50" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="28">DBG_IMPORTANT<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">MYNAME<pos:position pos:line="50" pos:column="49"/></name> <operator pos:line="50" pos:column="50">&lt;&lt;<pos:position pos:line="50" pos:column="58"/></operator> <literal type="string" pos:line="50" pos:column="53">"Invalid IPv4 address in response to '"<pos:position pos:line="50" pos:column="92"/></literal> <operator pos:line="50" pos:column="93">&lt;&lt;<pos:position pos:line="50" pos:column="101"/></operator> <name pos:line="50" pos:column="96">name<pos:position pos:line="50" pos:column="100"/></name> <operator pos:line="50" pos:column="101">&lt;&lt;<pos:position pos:line="50" pos:column="109"/></operator> <literal type="string" pos:line="50" pos:column="104">"'"<pos:position pos:line="50" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="109"/></expr_stmt>
                <continue pos:line="51" pos:column="17">continue;<pos:position pos:line="51" pos:column="26"/></continue>
            }<pos:position pos:line="52" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="53" pos:column="13">++<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">na<pos:position pos:line="53" pos:column="17"/></name></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="54" pos:column="13">++<pos:position pos:line="54" pos:column="15"/></operator><name><name pos:line="54" pos:column="15">IpcacheStats<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">.<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">rr_a<pos:position pos:line="54" pos:column="32"/></name></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
            <continue pos:line="55" pos:column="13">continue;<pos:position pos:line="55" pos:column="22"/></continue>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="58" pos:column="9">/* With A and AAAA, the CNAME does not necessarily come with additional records to use. */</comment>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">answers<pos:position pos:line="59" pos:column="20"/></name><index pos:line="59" pos:column="20">[<expr><name pos:line="59" pos:column="21">k<pos:position pos:line="59" pos:column="22"/></name></expr>]<pos:position pos:line="59" pos:column="23"/></index></name><operator pos:line="59" pos:column="23">.<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">type<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">==<pos:position pos:line="59" pos:column="31"/></operator> <name pos:line="59" pos:column="32">RFC1035_TYPE_CNAME<pos:position pos:line="59" pos:column="50"/></name></expr>)<pos:position pos:line="59" pos:column="51"/></condition><then pos:line="59" pos:column="51"> <block pos:line="59" pos:column="52">{
            <expr_stmt><expr><name pos:line="60" pos:column="13">cname_found<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator><literal type="number" pos:line="60" pos:column="25">1<pos:position pos:line="60" pos:column="26"/></literal></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="61" pos:column="13">++<pos:position pos:line="61" pos:column="15"/></operator><name><name pos:line="61" pos:column="15">IpcacheStats<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">.<pos:position pos:line="61" pos:column="28"/></operator><name pos:line="61" pos:column="28">rr_cname<pos:position pos:line="61" pos:column="36"/></name></name></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
            <continue pos:line="62" pos:column="13">continue;<pos:position pos:line="62" pos:column="22"/></continue>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="65" pos:column="9">// otherwise its an unknown RR. debug at level 9 since we usually want to ignore these and they are common.</comment>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">debugs<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="number" pos:line="66" pos:column="16">14<pos:position pos:line="66" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="20">9<pos:position pos:line="66" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="23">"Unknown RR type received: type="<pos:position pos:line="66" pos:column="56"/></literal> <operator pos:line="66" pos:column="57">&lt;&lt;<pos:position pos:line="66" pos:column="65"/></operator> <name><name pos:line="66" pos:column="60">answers<pos:position pos:line="66" pos:column="67"/></name><index pos:line="66" pos:column="67">[<expr><name pos:line="66" pos:column="68">k<pos:position pos:line="66" pos:column="69"/></name></expr>]<pos:position pos:line="66" pos:column="70"/></index></name><operator pos:line="66" pos:column="70">.<pos:position pos:line="66" pos:column="71"/></operator><name pos:line="66" pos:column="71">type<pos:position pos:line="66" pos:column="75"/></name> <operator pos:line="66" pos:column="76">&lt;&lt;<pos:position pos:line="66" pos:column="84"/></operator> <literal type="string" pos:line="66" pos:column="79">" starting at "<pos:position pos:line="66" pos:column="94"/></literal> <operator pos:line="66" pos:column="95">&lt;&lt;<pos:position pos:line="66" pos:column="103"/></operator> <operator pos:line="66" pos:column="98">&amp;<pos:position pos:line="66" pos:column="103"/></operator><operator pos:line="66" pos:column="99">(<pos:position pos:line="66" pos:column="100"/></operator><name><name pos:line="66" pos:column="100">answers<pos:position pos:line="66" pos:column="107"/></name><index pos:line="66" pos:column="107">[<expr><name pos:line="66" pos:column="108">k<pos:position pos:line="66" pos:column="109"/></name></expr>]<pos:position pos:line="66" pos:column="110"/></index></name><operator pos:line="66" pos:column="110">)<pos:position pos:line="66" pos:column="111"/></operator></expr></argument> )<pos:position pos:line="66" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="114"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></for>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">na<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">==<pos:position pos:line="68" pos:column="14"/></operator> <literal type="number" pos:line="68" pos:column="15">0<pos:position pos:line="68" pos:column="16"/></literal></expr>)<pos:position pos:line="68" pos:column="17"/></condition><then pos:line="68" pos:column="17"> <block pos:line="68" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debugs<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="number" pos:line="69" pos:column="16">14<pos:position pos:line="69" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="20">DBG_IMPORTANT<pos:position pos:line="69" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="35">MYNAME<pos:position pos:line="69" pos:column="41"/></name> <operator pos:line="69" pos:column="42">&lt;&lt;<pos:position pos:line="69" pos:column="50"/></operator> <literal type="string" pos:line="69" pos:column="45">"No Address records in response to '"<pos:position pos:line="69" pos:column="82"/></literal> <operator pos:line="69" pos:column="83">&lt;&lt;<pos:position pos:line="69" pos:column="91"/></operator> <name pos:line="69" pos:column="86">name<pos:position pos:line="69" pos:column="90"/></name> <operator pos:line="69" pos:column="91">&lt;&lt;<pos:position pos:line="69" pos:column="99"/></operator> <literal type="string" pos:line="69" pos:column="94">"'"<pos:position pos:line="69" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">i<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">-&gt;<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="12">error_message<pos:position pos:line="70" pos:column="25"/></name></name> <operator pos:line="70" pos:column="26">=<pos:position pos:line="70" pos:column="27"/></operator> <call><name pos:line="70" pos:column="28">xstrdup<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><literal type="string" pos:line="70" pos:column="36">"No Address records"<pos:position pos:line="70" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">cname_found<pos:position pos:line="71" pos:column="24"/></name></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="72" pos:column="13">++<pos:position pos:line="72" pos:column="15"/></operator><name><name pos:line="72" pos:column="15">IpcacheStats<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">.<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="28">cname_only<pos:position pos:line="72" pos:column="38"/></name></name></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt></block></then></if>
        <return pos:line="73" pos:column="9">return;<pos:position pos:line="73" pos:column="16"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="76" pos:column="5">i<pos:position pos:line="76" pos:column="6"/></name><operator pos:line="76" pos:column="6">-&gt;<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="8">addrs<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">.<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">in_addrs<pos:position pos:line="76" pos:column="22"/></name></name> <operator pos:line="76" pos:column="23">=<pos:position pos:line="76" pos:column="24"/></operator> <cast type="static" pos:line="76" pos:column="25">static_cast<argument_list type="generic" pos:line="76" pos:column="36">&lt;<argument><expr><name><name pos:line="76" pos:column="37">Ip<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">::<pos:position pos:line="76" pos:column="41"/></operator><name pos:line="76" pos:column="41">Address<pos:position pos:line="76" pos:column="48"/></name></name> <operator pos:line="76" pos:column="49">*<pos:position pos:line="76" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="76" pos:column="54"/></argument_list><argument_list pos:line="76" pos:column="51">(<argument><expr><call><name pos:line="76" pos:column="52">xcalloc<pos:position pos:line="76" pos:column="59"/></name><argument_list pos:line="76" pos:column="59">(<argument><expr><name pos:line="76" pos:column="60">na<pos:position pos:line="76" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="64">sizeof<argument_list pos:line="76" pos:column="70">(<argument><expr><name><name pos:line="76" pos:column="71">Ip<pos:position pos:line="76" pos:column="73"/></name><operator pos:line="76" pos:column="73">::<pos:position pos:line="76" pos:column="75"/></operator><name pos:line="76" pos:column="75">Address<pos:position pos:line="76" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="85"/></argument_list></cast></expr>;<pos:position pos:line="76" pos:column="86"/></expr_stmt>
    <for pos:line="77" pos:column="5">for <control pos:line="77" pos:column="9">(<init><decl><type><name pos:line="77" pos:column="10">int<pos:position pos:line="77" pos:column="13"/></name></type> <name pos:line="77" pos:column="14">l<pos:position pos:line="77" pos:column="15"/></name> <init pos:line="77" pos:column="16">= <expr><literal type="number" pos:line="77" pos:column="18">0<pos:position pos:line="77" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="77" pos:column="20"/></init> <condition><expr><name pos:line="77" pos:column="21">l<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">&lt;<pos:position pos:line="77" pos:column="27"/></operator> <name pos:line="77" pos:column="25">na<pos:position pos:line="77" pos:column="27"/></name></expr>;<pos:position pos:line="77" pos:column="28"/></condition> <incr><expr><operator pos:line="77" pos:column="29">++<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="31">l<pos:position pos:line="77" pos:column="32"/></name></expr></incr>)<pos:position pos:line="77" pos:column="33"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="9">i<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">-&gt;<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="12">addrs<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">.<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">in_addrs<pos:position pos:line="78" pos:column="26"/></name><index pos:line="78" pos:column="26">[<expr><name pos:line="78" pos:column="27">l<pos:position pos:line="78" pos:column="28"/></name></expr>]<pos:position pos:line="78" pos:column="29"/></index></name><operator pos:line="78" pos:column="29">.<pos:position pos:line="78" pos:column="30"/></operator><call><name pos:line="78" pos:column="30">setEmpty<pos:position pos:line="78" pos:column="38"/></name><argument_list pos:line="78" pos:column="38">()<pos:position pos:line="78" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="41"/></expr_stmt></block></for> <comment type="line" pos:line="78" pos:column="42">// perform same init actions as constructor would.</comment>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">i<pos:position pos:line="79" pos:column="6"/></name><operator pos:line="79" pos:column="6">-&gt;<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="8">addrs<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">.<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">bad_mask<pos:position pos:line="79" pos:column="22"/></name></name> <operator pos:line="79" pos:column="23">=<pos:position pos:line="79" pos:column="24"/></operator> <operator pos:line="79" pos:column="25">(<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="26">unsigned<pos:position pos:line="79" pos:column="34"/></name> <name pos:line="79" pos:column="35">char<pos:position pos:line="79" pos:column="39"/></name> <operator pos:line="79" pos:column="40">*<pos:position pos:line="79" pos:column="41"/></operator><operator pos:line="79" pos:column="41">)<pos:position pos:line="79" pos:column="42"/></operator><call><name pos:line="79" pos:column="42">xcalloc<pos:position pos:line="79" pos:column="49"/></name><argument_list pos:line="79" pos:column="49">(<argument><expr><name pos:line="79" pos:column="50">na<pos:position pos:line="79" pos:column="52"/></name></expr></argument>, <argument><expr pos:line="79" pos:column="54">sizeof<operator pos:line="79" pos:column="60">(<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="61">unsigned<pos:position pos:line="79" pos:column="69"/></name> <name pos:line="79" pos:column="70">char<pos:position pos:line="79" pos:column="74"/></name><operator pos:line="79" pos:column="74">)<pos:position pos:line="79" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="77"/></expr_stmt>

    <for pos:line="81" pos:column="5">for <control pos:line="81" pos:column="9">(<init><expr><name pos:line="81" pos:column="10">j<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <literal type="number" pos:line="81" pos:column="14">0<pos:position pos:line="81" pos:column="15"/></literal></expr><operator pos:line="81" pos:column="15">,<pos:position pos:line="81" pos:column="16"/></operator> <expr><name pos:line="81" pos:column="17">k<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">=<pos:position pos:line="81" pos:column="20"/></operator> <literal type="number" pos:line="81" pos:column="21">0<pos:position pos:line="81" pos:column="22"/></literal></expr>;<pos:position pos:line="81" pos:column="23"/></init> <condition><expr><name pos:line="81" pos:column="24">k<pos:position pos:line="81" pos:column="25"/></name> <operator pos:line="81" pos:column="26">&lt;<pos:position pos:line="81" pos:column="30"/></operator> <name pos:line="81" pos:column="28">nr<pos:position pos:line="81" pos:column="30"/></name></expr>;<pos:position pos:line="81" pos:column="31"/></condition> <incr><expr><operator pos:line="81" pos:column="32">++<pos:position pos:line="81" pos:column="34"/></operator><name pos:line="81" pos:column="34">k<pos:position pos:line="81" pos:column="35"/></name></expr></incr>)<pos:position pos:line="81" pos:column="36"/></control> <block pos:line="81" pos:column="37">{

        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name><name pos:line="83" pos:column="13">answers<pos:position pos:line="83" pos:column="20"/></name><index pos:line="83" pos:column="20">[<expr><name pos:line="83" pos:column="21">k<pos:position pos:line="83" pos:column="22"/></name></expr>]<pos:position pos:line="83" pos:column="23"/></index></name><operator pos:line="83" pos:column="23">.<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="24">type<pos:position pos:line="83" pos:column="28"/></name> <operator pos:line="83" pos:column="29">==<pos:position pos:line="83" pos:column="31"/></operator> <name pos:line="83" pos:column="32">RFC1035_TYPE_A<pos:position pos:line="83" pos:column="46"/></name></expr>)<pos:position pos:line="83" pos:column="47"/></condition><then pos:line="83" pos:column="47"> <block pos:line="83" pos:column="48">{
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><name><name pos:line="84" pos:column="17">answers<pos:position pos:line="84" pos:column="24"/></name><index pos:line="84" pos:column="24">[<expr><name pos:line="84" pos:column="25">k<pos:position pos:line="84" pos:column="26"/></name></expr>]<pos:position pos:line="84" pos:column="27"/></index></name><operator pos:line="84" pos:column="27">.<pos:position pos:line="84" pos:column="28"/></operator><name pos:line="84" pos:column="28">rdlength<pos:position pos:line="84" pos:column="36"/></name> <operator pos:line="84" pos:column="37">!=<pos:position pos:line="84" pos:column="39"/></operator> <sizeof pos:line="84" pos:column="40">sizeof<argument_list pos:line="84" pos:column="46">(<argument><expr pos:line="84" pos:column="47">struct <name pos:line="84" pos:column="54">in_addr<pos:position pos:line="84" pos:column="61"/></name></expr></argument>)<pos:position pos:line="84" pos:column="62"/></argument_list></sizeof></expr>)<pos:position pos:line="84" pos:column="63"/></condition><then pos:line="84" pos:column="63">
                <block type="pseudo"><continue pos:line="85" pos:column="17">continue;<pos:position pos:line="85" pos:column="26"/></continue></block></then></if>

            <decl_stmt><decl><type><name><name pos:line="87" pos:column="13">struct<pos:position pos:line="87" pos:column="19"/></name> <name pos:line="87" pos:column="20">in_addr<pos:position pos:line="87" pos:column="27"/></name></name></type> <name pos:line="87" pos:column="28">temp<pos:position pos:line="87" pos:column="32"/></name></decl>;<pos:position pos:line="87" pos:column="33"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">memcpy<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><operator pos:line="88" pos:column="20">&amp;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="21">temp<pos:position pos:line="88" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="27">answers<pos:position pos:line="88" pos:column="34"/></name><index pos:line="88" pos:column="34">[<expr><name pos:line="88" pos:column="35">k<pos:position pos:line="88" pos:column="36"/></name></expr>]<pos:position pos:line="88" pos:column="37"/></index></name><operator pos:line="88" pos:column="37">.<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="38">rdata<pos:position pos:line="88" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="45">sizeof<argument_list pos:line="88" pos:column="51">(<argument><expr pos:line="88" pos:column="52">struct <name pos:line="88" pos:column="59">in_addr<pos:position pos:line="88" pos:column="66"/></name></expr></argument>)<pos:position pos:line="88" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">i<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">-&gt;<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="16">addrs<pos:position pos:line="89" pos:column="21"/></name><operator pos:line="89" pos:column="21">.<pos:position pos:line="89" pos:column="22"/></operator><name pos:line="89" pos:column="22">in_addrs<pos:position pos:line="89" pos:column="30"/></name><index pos:line="89" pos:column="30">[<expr><name pos:line="89" pos:column="31">j<pos:position pos:line="89" pos:column="32"/></name></expr>]<pos:position pos:line="89" pos:column="33"/></index></name> <operator pos:line="89" pos:column="34">=<pos:position pos:line="89" pos:column="35"/></operator> <name pos:line="89" pos:column="36">temp<pos:position pos:line="89" pos:column="40"/></name></expr>;<pos:position pos:line="89" pos:column="41"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="91" pos:column="13">debugs<pos:position pos:line="91" pos:column="19"/></name><argument_list pos:line="91" pos:column="19">(<argument><expr><literal type="number" pos:line="91" pos:column="20">14<pos:position pos:line="91" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="24">3<pos:position pos:line="91" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="27">name<pos:position pos:line="91" pos:column="31"/></name> <operator pos:line="91" pos:column="32">&lt;&lt;<pos:position pos:line="91" pos:column="40"/></operator> <literal type="string" pos:line="91" pos:column="35">" #"<pos:position pos:line="91" pos:column="39"/></literal> <operator pos:line="91" pos:column="40">&lt;&lt;<pos:position pos:line="91" pos:column="48"/></operator> <name pos:line="91" pos:column="43">j<pos:position pos:line="91" pos:column="44"/></name> <operator pos:line="91" pos:column="45">&lt;&lt;<pos:position pos:line="91" pos:column="53"/></operator> <literal type="string" pos:line="91" pos:column="48">" "<pos:position pos:line="91" pos:column="51"/></literal> <operator pos:line="91" pos:column="52">&lt;&lt;<pos:position pos:line="91" pos:column="60"/></operator> <name><name pos:line="91" pos:column="55">i<pos:position pos:line="91" pos:column="56"/></name><operator pos:line="91" pos:column="56">-&gt;<pos:position pos:line="91" pos:column="61"/></operator><name pos:line="91" pos:column="58">addrs<pos:position pos:line="91" pos:column="63"/></name><operator pos:line="91" pos:column="63">.<pos:position pos:line="91" pos:column="64"/></operator><name pos:line="91" pos:column="64">in_addrs<pos:position pos:line="91" pos:column="72"/></name><index pos:line="91" pos:column="72">[<expr><name pos:line="91" pos:column="73">j<pos:position pos:line="91" pos:column="74"/></name></expr>]<pos:position pos:line="91" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="92" pos:column="13">++<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="15">j<pos:position pos:line="92" pos:column="16"/></name></expr>;<pos:position pos:line="92" pos:column="17"/></expr_stmt>

        }<pos:position pos:line="94" pos:column="10"/></block></then> <elseif pos:line="94" pos:column="11">else <if pos:line="94" pos:column="16">if <condition pos:line="94" pos:column="19">(<expr><name><name pos:line="94" pos:column="20">Ip<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">::<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="24">EnableIpv6<pos:position pos:line="94" pos:column="34"/></name></name> <operator pos:line="94" pos:column="35">&amp;&amp;<pos:position pos:line="94" pos:column="45"/></operator> <name><name pos:line="94" pos:column="38">answers<pos:position pos:line="94" pos:column="45"/></name><index pos:line="94" pos:column="45">[<expr><name pos:line="94" pos:column="46">k<pos:position pos:line="94" pos:column="47"/></name></expr>]<pos:position pos:line="94" pos:column="48"/></index></name><operator pos:line="94" pos:column="48">.<pos:position pos:line="94" pos:column="49"/></operator><name pos:line="94" pos:column="49">type<pos:position pos:line="94" pos:column="53"/></name> <operator pos:line="94" pos:column="54">==<pos:position pos:line="94" pos:column="56"/></operator> <name pos:line="94" pos:column="57">RFC1035_TYPE_AAAA<pos:position pos:line="94" pos:column="74"/></name></expr>)<pos:position pos:line="94" pos:column="75"/></condition><then pos:line="94" pos:column="75"> <block pos:line="94" pos:column="76">{
            <if pos:line="95" pos:column="13">if <condition pos:line="95" pos:column="16">(<expr><name><name pos:line="95" pos:column="17">answers<pos:position pos:line="95" pos:column="24"/></name><index pos:line="95" pos:column="24">[<expr><name pos:line="95" pos:column="25">k<pos:position pos:line="95" pos:column="26"/></name></expr>]<pos:position pos:line="95" pos:column="27"/></index></name><operator pos:line="95" pos:column="27">.<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="28">rdlength<pos:position pos:line="95" pos:column="36"/></name> <operator pos:line="95" pos:column="37">!=<pos:position pos:line="95" pos:column="39"/></operator> <sizeof pos:line="95" pos:column="40">sizeof<argument_list pos:line="95" pos:column="46">(<argument><expr pos:line="95" pos:column="47">struct <name pos:line="95" pos:column="54">in6_addr<pos:position pos:line="95" pos:column="62"/></name></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></sizeof></expr>)<pos:position pos:line="95" pos:column="64"/></condition><then pos:line="95" pos:column="64">
                <block type="pseudo"><continue pos:line="96" pos:column="17">continue;<pos:position pos:line="96" pos:column="26"/></continue></block></then></if>

            <decl_stmt><decl><type><name><name pos:line="98" pos:column="13">struct<pos:position pos:line="98" pos:column="19"/></name> <name pos:line="98" pos:column="20">in6_addr<pos:position pos:line="98" pos:column="28"/></name></name></type> <name pos:line="98" pos:column="29">temp<pos:position pos:line="98" pos:column="33"/></name></decl>;<pos:position pos:line="98" pos:column="34"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">memcpy<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><operator pos:line="99" pos:column="20">&amp;<pos:position pos:line="99" pos:column="25"/></operator><name pos:line="99" pos:column="21">temp<pos:position pos:line="99" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="27">answers<pos:position pos:line="99" pos:column="34"/></name><index pos:line="99" pos:column="34">[<expr><name pos:line="99" pos:column="35">k<pos:position pos:line="99" pos:column="36"/></name></expr>]<pos:position pos:line="99" pos:column="37"/></index></name><operator pos:line="99" pos:column="37">.<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="38">rdata<pos:position pos:line="99" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="45">sizeof<argument_list pos:line="99" pos:column="51">(<argument><expr pos:line="99" pos:column="52">struct <name pos:line="99" pos:column="59">in6_addr<pos:position pos:line="99" pos:column="67"/></name></expr></argument>)<pos:position pos:line="99" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="100" pos:column="13">i<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">-&gt;<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="16">addrs<pos:position pos:line="100" pos:column="21"/></name><operator pos:line="100" pos:column="21">.<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">in_addrs<pos:position pos:line="100" pos:column="30"/></name><index pos:line="100" pos:column="30">[<expr><name pos:line="100" pos:column="31">j<pos:position pos:line="100" pos:column="32"/></name></expr>]<pos:position pos:line="100" pos:column="33"/></index></name> <operator pos:line="100" pos:column="34">=<pos:position pos:line="100" pos:column="35"/></operator> <name pos:line="100" pos:column="36">temp<pos:position pos:line="100" pos:column="40"/></name></expr>;<pos:position pos:line="100" pos:column="41"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="102" pos:column="13">debugs<pos:position pos:line="102" pos:column="19"/></name><argument_list pos:line="102" pos:column="19">(<argument><expr><literal type="number" pos:line="102" pos:column="20">14<pos:position pos:line="102" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="24">3<pos:position pos:line="102" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="27">name<pos:position pos:line="102" pos:column="31"/></name> <operator pos:line="102" pos:column="32">&lt;&lt;<pos:position pos:line="102" pos:column="40"/></operator> <literal type="string" pos:line="102" pos:column="35">" #"<pos:position pos:line="102" pos:column="39"/></literal> <operator pos:line="102" pos:column="40">&lt;&lt;<pos:position pos:line="102" pos:column="48"/></operator> <name pos:line="102" pos:column="43">j<pos:position pos:line="102" pos:column="44"/></name> <operator pos:line="102" pos:column="45">&lt;&lt;<pos:position pos:line="102" pos:column="53"/></operator> <literal type="string" pos:line="102" pos:column="48">" "<pos:position pos:line="102" pos:column="51"/></literal> <operator pos:line="102" pos:column="52">&lt;&lt;<pos:position pos:line="102" pos:column="60"/></operator> <name><name pos:line="102" pos:column="55">i<pos:position pos:line="102" pos:column="56"/></name><operator pos:line="102" pos:column="56">-&gt;<pos:position pos:line="102" pos:column="61"/></operator><name pos:line="102" pos:column="58">addrs<pos:position pos:line="102" pos:column="63"/></name><operator pos:line="102" pos:column="63">.<pos:position pos:line="102" pos:column="64"/></operator><name pos:line="102" pos:column="64">in_addrs<pos:position pos:line="102" pos:column="72"/></name><index pos:line="102" pos:column="72">[<expr><name pos:line="102" pos:column="73">j<pos:position pos:line="102" pos:column="74"/></name></expr>]<pos:position pos:line="102" pos:column="75"/></index></name></expr></argument> )<pos:position pos:line="102" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="103" pos:column="13">++<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="15">j<pos:position pos:line="103" pos:column="16"/></name></expr>;<pos:position pos:line="103" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">ttl<pos:position pos:line="105" pos:column="16"/></name> <operator pos:line="105" pos:column="17">==<pos:position pos:line="105" pos:column="19"/></operator> <literal type="number" pos:line="105" pos:column="20">0<pos:position pos:line="105" pos:column="21"/></literal> <operator pos:line="105" pos:column="22">||<pos:position pos:line="105" pos:column="24"/></operator> <operator pos:line="105" pos:column="25">(<pos:position pos:line="105" pos:column="26"/></operator><name pos:line="105" pos:column="26">int<pos:position pos:line="105" pos:column="29"/></name><operator pos:line="105" pos:column="29">)<pos:position pos:line="105" pos:column="30"/></operator> <name><name pos:line="105" pos:column="31">answers<pos:position pos:line="105" pos:column="38"/></name><index pos:line="105" pos:column="38">[<expr><name pos:line="105" pos:column="39">k<pos:position pos:line="105" pos:column="40"/></name></expr>]<pos:position pos:line="105" pos:column="41"/></index></name><operator pos:line="105" pos:column="41">.<pos:position pos:line="105" pos:column="42"/></operator><name pos:line="105" pos:column="42">ttl<pos:position pos:line="105" pos:column="45"/></name> <operator pos:line="105" pos:column="46">&lt;<pos:position pos:line="105" pos:column="50"/></operator> <name pos:line="105" pos:column="48">ttl<pos:position pos:line="105" pos:column="51"/></name></expr>)<pos:position pos:line="105" pos:column="52"/></condition><then pos:line="105" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="13">ttl<pos:position pos:line="106" pos:column="16"/></name> <operator pos:line="106" pos:column="17">=<pos:position pos:line="106" pos:column="18"/></operator> <name><name pos:line="106" pos:column="19">answers<pos:position pos:line="106" pos:column="26"/></name><index pos:line="106" pos:column="26">[<expr><name pos:line="106" pos:column="27">k<pos:position pos:line="106" pos:column="28"/></name></expr>]<pos:position pos:line="106" pos:column="29"/></index></name><operator pos:line="106" pos:column="29">.<pos:position pos:line="106" pos:column="30"/></operator><name pos:line="106" pos:column="30">ttl<pos:position pos:line="106" pos:column="33"/></name></expr>;<pos:position pos:line="106" pos:column="34"/></expr_stmt></block></then></if>
    }<pos:position pos:line="107" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="109" pos:column="5">assert<pos:position pos:line="109" pos:column="11"/></name><argument_list pos:line="109" pos:column="11">(<argument><expr><name pos:line="109" pos:column="12">j<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">==<pos:position pos:line="109" pos:column="16"/></operator> <name pos:line="109" pos:column="17">na<pos:position pos:line="109" pos:column="19"/></name></expr></argument>)<pos:position pos:line="109" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="21"/></expr_stmt>

    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">na<pos:position pos:line="111" pos:column="11"/></name> <operator pos:line="111" pos:column="12">&lt;<pos:position pos:line="111" pos:column="16"/></operator> <literal type="number" pos:line="111" pos:column="14">256<pos:position pos:line="111" pos:column="17"/></literal></expr>)<pos:position pos:line="111" pos:column="18"/></condition><then pos:line="111" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="112" pos:column="9">i<pos:position pos:line="112" pos:column="10"/></name><operator pos:line="112" pos:column="10">-&gt;<pos:position pos:line="112" pos:column="15"/></operator><name pos:line="112" pos:column="12">addrs<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">.<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="18">count<pos:position pos:line="112" pos:column="23"/></name></name> <operator pos:line="112" pos:column="24">=<pos:position pos:line="112" pos:column="25"/></operator> <operator pos:line="112" pos:column="26">(<pos:position pos:line="112" pos:column="27"/></operator><name pos:line="112" pos:column="27">unsigned<pos:position pos:line="112" pos:column="35"/></name> <name pos:line="112" pos:column="36">char<pos:position pos:line="112" pos:column="40"/></name><operator pos:line="112" pos:column="40">)<pos:position pos:line="112" pos:column="41"/></operator> <name pos:line="112" pos:column="42">na<pos:position pos:line="112" pos:column="44"/></name></expr>;<pos:position pos:line="112" pos:column="45"/></expr_stmt></block></then>
    <else pos:line="113" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="114" pos:column="9">i<pos:position pos:line="114" pos:column="10"/></name><operator pos:line="114" pos:column="10">-&gt;<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="12">addrs<pos:position pos:line="114" pos:column="17"/></name><operator pos:line="114" pos:column="17">.<pos:position pos:line="114" pos:column="18"/></operator><name pos:line="114" pos:column="18">count<pos:position pos:line="114" pos:column="23"/></name></name> <operator pos:line="114" pos:column="24">=<pos:position pos:line="114" pos:column="25"/></operator> <literal type="number" pos:line="114" pos:column="26">255<pos:position pos:line="114" pos:column="29"/></literal></expr>;<pos:position pos:line="114" pos:column="30"/></expr_stmt></block></else></if>

    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><name pos:line="116" pos:column="9">ttl<pos:position pos:line="116" pos:column="12"/></name> <operator pos:line="116" pos:column="13">&gt;<pos:position pos:line="116" pos:column="17"/></operator> <name><name pos:line="116" pos:column="15">Config<pos:position pos:line="116" pos:column="21"/></name><operator pos:line="116" pos:column="21">.<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="22">positiveDnsTtl<pos:position pos:line="116" pos:column="36"/></name></name></expr>)<pos:position pos:line="116" pos:column="37"/></condition><then pos:line="116" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="9">ttl<pos:position pos:line="117" pos:column="12"/></name> <operator pos:line="117" pos:column="13">=<pos:position pos:line="117" pos:column="14"/></operator> <name><name pos:line="117" pos:column="15">Config<pos:position pos:line="117" pos:column="21"/></name><operator pos:line="117" pos:column="21">.<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">positiveDnsTtl<pos:position pos:line="117" pos:column="36"/></name></name></expr>;<pos:position pos:line="117" pos:column="37"/></expr_stmt></block></then></if>

    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><name pos:line="119" pos:column="9">ttl<pos:position pos:line="119" pos:column="12"/></name> <operator pos:line="119" pos:column="13">&lt;<pos:position pos:line="119" pos:column="17"/></operator> <name><name pos:line="119" pos:column="15">Config<pos:position pos:line="119" pos:column="21"/></name><operator pos:line="119" pos:column="21">.<pos:position pos:line="119" pos:column="22"/></operator><name pos:line="119" pos:column="22">negativeDnsTtl<pos:position pos:line="119" pos:column="36"/></name></name></expr>)<pos:position pos:line="119" pos:column="37"/></condition><then pos:line="119" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="9">ttl<pos:position pos:line="120" pos:column="12"/></name> <operator pos:line="120" pos:column="13">=<pos:position pos:line="120" pos:column="14"/></operator> <name><name pos:line="120" pos:column="15">Config<pos:position pos:line="120" pos:column="21"/></name><operator pos:line="120" pos:column="21">.<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="22">negativeDnsTtl<pos:position pos:line="120" pos:column="36"/></name></name></expr>;<pos:position pos:line="120" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="122" pos:column="5">i<pos:position pos:line="122" pos:column="6"/></name><operator pos:line="122" pos:column="6">-&gt;<pos:position pos:line="122" pos:column="11"/></operator><name pos:line="122" pos:column="8">expires<pos:position pos:line="122" pos:column="15"/></name></name> <operator pos:line="122" pos:column="16">=<pos:position pos:line="122" pos:column="17"/></operator> <name pos:line="122" pos:column="18">squid_curtime<pos:position pos:line="122" pos:column="31"/></name> <operator pos:line="122" pos:column="32">+<pos:position pos:line="122" pos:column="33"/></operator> <name pos:line="122" pos:column="34">ttl<pos:position pos:line="122" pos:column="37"/></name></expr>;<pos:position pos:line="122" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="124" pos:column="5">i<pos:position pos:line="124" pos:column="6"/></name><operator pos:line="124" pos:column="6">-&gt;<pos:position pos:line="124" pos:column="11"/></operator><name pos:line="124" pos:column="8">flags<pos:position pos:line="124" pos:column="13"/></name><operator pos:line="124" pos:column="13">.<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="14">negcached<pos:position pos:line="124" pos:column="23"/></name></name> <operator pos:line="124" pos:column="24">=<pos:position pos:line="124" pos:column="25"/></operator> <literal type="boolean" pos:line="124" pos:column="26">false<pos:position pos:line="124" pos:column="31"/></literal></expr>;<pos:position pos:line="124" pos:column="32"/></expr_stmt>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_386_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ProcessLine<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">char<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">Linebuf<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">Directive<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">Param1<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">Param2<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">Param3<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Ignore empty lines */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">strlen<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">Linebuf<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* Break up on whitespaces */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">Directive<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">strtok<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">Linebuf<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">" \t\n"<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call><operator pos:line="14" pos:column="46">)<pos:position pos:line="14" pos:column="47"/></operator> <operator pos:line="14" pos:column="48">==<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="51">NULL<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
        <block type="pseudo"><return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Check for a comment line. If found, stop . */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">Directive<pos:position pos:line="18" pos:column="18"/></name><index pos:line="18" pos:column="18">[<expr><literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>]<pos:position pos:line="18" pos:column="21"/></index></name> <operator pos:line="18" pos:column="22">==<pos:position pos:line="18" pos:column="24"/></operator> <literal type="char" pos:line="18" pos:column="25">'#'<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
        <block type="pseudo"><return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/* Check for server line. Check for 3 parameters. */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">strcasecmp<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">Directive<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="31">"server"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call> <operator pos:line="22" pos:column="41">==<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">0<pos:position pos:line="22" pos:column="45"/></literal></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46"> <block pos:line="22" pos:column="47">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">Param1<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">strtok<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">NULL<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">" \t\n"<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">NULL<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">Param1<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">syslog<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">LOG_ERR<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="29">"ProcessLine: 'server' missing PDC parameter."<pos:position pos:line="25" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt>
            <return pos:line="26" pos:column="13">return;<pos:position pos:line="26" pos:column="20"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="28" pos:column="9">Param2<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">strtok<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="31">" \t\n"<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">NULL<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">==<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">Param2<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">syslog<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">LOG_ERR<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="29">"ProcessLine: 'server' missing BDC parameter."<pos:position pos:line="30" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="77"/></expr_stmt>
            <return pos:line="31" pos:column="13">return;<pos:position pos:line="31" pos:column="20"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="33" pos:column="9">Param3<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">strtok<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">NULL<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="31">" \t\n"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">NULL<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">Param3<pos:position pos:line="34" pos:column="27"/></name></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28"> <block pos:line="34" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">syslog<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">LOG_ERR<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="29">"ProcessLine: 'server' missing domain parameter."<pos:position pos:line="35" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="80"/></expr_stmt>
            <return pos:line="36" pos:column="13">return;<pos:position pos:line="36" pos:column="20"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">AddServer<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">Param1<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">Param2<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">Param3<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="41" pos:column="5">/* Check for denyusers line */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">strcasecmp<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">Directive<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="31">"denyusers"<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call> <operator pos:line="42" pos:column="44">==<pos:position pos:line="42" pos:column="46"/></operator> <literal type="number" pos:line="42" pos:column="47">0<pos:position pos:line="42" pos:column="48"/></literal></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49"> <block pos:line="42" pos:column="50">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">Param1<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">strtok<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">NULL<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="31">" \t\n"<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">NULL<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">==<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">Param1<pos:position pos:line="45" pos:column="27"/></name></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28"> <block pos:line="45" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">syslog<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">LOG_ERR<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="29">"ProcessLine: A 'denyusers' line needs a filename parameter."<pos:position pos:line="46" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="92"/></expr_stmt>
            <return pos:line="47" pos:column="13">return;<pos:position pos:line="47" pos:column="20"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">memset<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">Denyuserpath<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="30">'\0'<pos:position pos:line="49" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="36">MAXPATHLEN<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">strncpy<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">Denyuserpath<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="31">Param1<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">MAXPATHLEN<pos:position pos:line="50" pos:column="49"/></name> <operator pos:line="50" pos:column="50">-<pos:position pos:line="50" pos:column="51"/></operator> <literal type="number" pos:line="50" pos:column="52">1<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>
        <return pos:line="51" pos:column="9">return;<pos:position pos:line="51" pos:column="16"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="53" pos:column="5">/* Check for allowusers line */</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">strcasecmp<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">Directive<pos:position pos:line="54" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="31">"allowusers"<pos:position pos:line="54" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call> <operator pos:line="54" pos:column="45">==<pos:position pos:line="54" pos:column="47"/></operator> <literal type="number" pos:line="54" pos:column="48">0<pos:position pos:line="54" pos:column="49"/></literal></expr>)<pos:position pos:line="54" pos:column="50"/></condition><then pos:line="54" pos:column="50"> <block pos:line="54" pos:column="51">{
        <expr_stmt><expr><name pos:line="55" pos:column="9">Param1<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">strtok<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">NULL<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="31">" \t\n"<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">NULL<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">==<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">Param1<pos:position pos:line="57" pos:column="27"/></name></expr>)<pos:position pos:line="57" pos:column="28"/></condition><then pos:line="57" pos:column="28"> <block pos:line="57" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">syslog<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">LOG_ERR<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"ProcessLine: An 'allowusers' line needs a filename parameter."<pos:position pos:line="58" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="94"/></expr_stmt>
            <return pos:line="59" pos:column="13">return;<pos:position pos:line="59" pos:column="20"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">memset<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><name pos:line="61" pos:column="16">Allowuserpath<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="61" pos:column="31">'\0'<pos:position pos:line="61" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">MAXPATHLEN<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">strncpy<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">Allowuserpath<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="32">Param1<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="40">MAXPATHLEN<pos:position pos:line="62" pos:column="50"/></name> <operator pos:line="62" pos:column="51">-<pos:position pos:line="62" pos:column="52"/></operator> <literal type="number" pos:line="62" pos:column="53">1<pos:position pos:line="62" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="56"/></expr_stmt>
        <return pos:line="63" pos:column="9">return;<pos:position pos:line="63" pos:column="16"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="65" pos:column="5">/* Reports error for unknown line */</comment>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">syslog<pos:position pos:line="66" pos:column="11"/></name><argument_list pos:line="66" pos:column="11">(<argument><expr><name pos:line="66" pos:column="12">LOG_ERR<pos:position pos:line="66" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="21">"ProcessLine: Ignoring '%s' line."<pos:position pos:line="66" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="57">Directive<pos:position pos:line="66" pos:column="66"/></name></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="68"/></expr_stmt>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

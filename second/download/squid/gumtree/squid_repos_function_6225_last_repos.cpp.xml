<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6225_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TcpLogger<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">handleClosure<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">CommCloseCbParams<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">&amp;<pos:position pos:line="2" pos:column="60"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">inCall<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">!=<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">closer<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">conn<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
    <comment type="line" pos:line="7" pos:column="5">// in all current use cases, we should not try to reconnect</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">mustStop<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><literal type="string" pos:line="8" pos:column="14">"Log::TcpLogger::handleClosure"<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

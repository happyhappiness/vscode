<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4091_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLUrlStrategy<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">match<pos:position pos:line="2" pos:column="22"/></name></name> <parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">ACLData<pos:position pos:line="2" pos:column="31"/></name><argument_list type="generic" pos:line="2" pos:column="31">&lt;<argument><expr><name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <operator pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></operator></expr></argument>&gt;<pos:position pos:line="2" pos:column="48"/></argument_list></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier> <modifier pos:line="2" pos:column="48">&amp;<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="49">data<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">ACLFilledChecklist<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">checklist<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">esc_buf<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">SBufToCstring<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><call><name><name pos:line="4" pos:column="35">checklist<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">request<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">-&gt;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="55">effectiveRequestUri<pos:position pos:line="4" pos:column="74"/></name></name><argument_list pos:line="4" pos:column="74">()<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="78"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">rfc1738_unescape<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">esc_buf<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">result<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><call><name><name pos:line="6" pos:column="18">data<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">match<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">esc_buf<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">xfree<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">esc_buf<pos:position pos:line="7" pos:column="18"/></name></expr></argument>)<pos:position pos:line="7" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

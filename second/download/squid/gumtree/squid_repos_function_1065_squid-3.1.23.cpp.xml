<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1065_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_authparam<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">StoreEntry<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">entry<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">name<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">authConfig<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">cfg<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">authConfig<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">::<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">iterator<pos:position pos:line="4" pos:column="30"/></name></name></type>  <name pos:line="4" pos:column="32">i<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><call><name><name pos:line="4" pos:column="36">cfg<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">begin<pos:position pos:line="4" pos:column="45"/></name></name><argument_list pos:line="4" pos:column="45">()<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></init> <condition><expr><name pos:line="4" pos:column="49">i<pos:position pos:line="4" pos:column="50"/></name> <operator pos:line="4" pos:column="51">!=<pos:position pos:line="4" pos:column="53"/></operator> <call><name><name pos:line="4" pos:column="54">cfg<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">.<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">end<pos:position pos:line="4" pos:column="61"/></name></name><argument_list pos:line="4" pos:column="61">()<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="64"/></condition> <incr><expr><operator pos:line="4" pos:column="65">++<pos:position pos:line="4" pos:column="67"/></operator><name pos:line="4" pos:column="67">i<pos:position pos:line="4" pos:column="68"/></name></expr></incr>)<pos:position pos:line="4" pos:column="69"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">i<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">)<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">dump<pos:position pos:line="5" pos:column="19"/></name></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">entry<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">name<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="33">(<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">i<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">)<pos:position pos:line="5" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt></block></for>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2301_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeDigestRewriteStart<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">void<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">datanotused<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">RequestFlags<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">flags<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">url<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StoreEntry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">e<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">store_digest<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* prevent overlapping if rewrite schedule is too tight */</comment>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">sd_state<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">rewrite_lock<pos:position pos:line="11" pos:column="30"/></name></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31"> <block pos:line="11" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">71<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">DBG_IMPORTANT<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="35">"storeDigestRewrite: overlap detected, consider increasing rewrite period"<pos:position pos:line="12" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="111"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">71<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">2<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"storeDigestRewrite: start rewrite #"<pos:position pos:line="16" pos:column="56"/></literal> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <name><name pos:line="16" pos:column="60">sd_state<pos:position pos:line="16" pos:column="68"/></name><operator pos:line="16" pos:column="68">.<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="69">rewrite_count<pos:position pos:line="16" pos:column="82"/></name></name> <operator pos:line="16" pos:column="83">+<pos:position pos:line="16" pos:column="84"/></operator> <literal type="number" pos:line="16" pos:column="85">1<pos:position pos:line="16" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="88"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* make new store entry */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">url<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">internalLocalUri<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"/squid-internal-periodic/"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">StoreDigestFileName<pos:position pos:line="18" pos:column="76"/></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">flags<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">.<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">cachable<pos:position pos:line="19" pos:column="19"/></name></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="boolean" pos:line="19" pos:column="22">true<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">e<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">storeCreateEntry<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">url<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">url<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">flags<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="43">Http<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">::<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">METHOD_GET<pos:position pos:line="20" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">e<pos:position pos:line="21" pos:column="13"/></name></expr></argument>)<pos:position pos:line="21" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">sd_state<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">rewrite_lock<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">e<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">71<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">3<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="19">"storeDigestRewrite: url: "<pos:position pos:line="23" pos:column="46"/></literal> <operator pos:line="23" pos:column="47">&lt;&lt;<pos:position pos:line="23" pos:column="55"/></operator> <name pos:line="23" pos:column="50">url<pos:position pos:line="23" pos:column="53"/></name> <operator pos:line="23" pos:column="54">&lt;&lt;<pos:position pos:line="23" pos:column="62"/></operator> <literal type="string" pos:line="23" pos:column="57">" key: "<pos:position pos:line="23" pos:column="65"/></literal> <operator pos:line="23" pos:column="66">&lt;&lt;<pos:position pos:line="23" pos:column="74"/></operator> <call><name><name pos:line="23" pos:column="69">e<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">-&gt;<pos:position pos:line="23" pos:column="75"/></operator><name pos:line="23" pos:column="72">getMD5Text<pos:position pos:line="23" pos:column="82"/></name></name><argument_list pos:line="23" pos:column="82">()<pos:position pos:line="23" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="86"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">HttpRequest<pos:position pos:line="24" pos:column="16"/></name> <modifier pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></modifier></type><name pos:line="24" pos:column="18">req<pos:position pos:line="24" pos:column="21"/></name> <init pos:line="24" pos:column="22">= <expr><call><name><name pos:line="24" pos:column="24">HttpRequest<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">::<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">CreateFromUrl<pos:position pos:line="24" pos:column="50"/></name></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">url<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="56"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">e<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">mem_obj<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">request<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">req<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">HTTPMSGLOCK<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name><name pos:line="26" pos:column="17">e<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">mem_obj<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">request<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    <comment type="block" pos:line="27" pos:column="5">/* wait for rebuild (if any) to finish */</comment>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">sd_state<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">rebuild_lock<pos:position pos:line="29" pos:column="30"/></name></name></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">71<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">2<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"storeDigestRewriteStart: waiting for rebuild to finish."<pos:position pos:line="30" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="82"/></expr_stmt>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">storeDigestRewriteResume<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">()<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

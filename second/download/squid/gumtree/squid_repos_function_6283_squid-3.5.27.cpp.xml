<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6283_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">push<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">IpcIoPendingRequest<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier></type> <name pos:line="2" pos:column="44">pending<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// prevent queue overflows: check for responses to earlier requests</comment>
    <comment type="line" pos:line="5" pos:column="5">// warning: this call may result in indirect push() recursion</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">HandleResponses<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"before push"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">47<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">7<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">HERE<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Must<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">diskId<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&gt;=<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">Must<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">pending<pos:position pos:line="10" pos:column="17"/></name></expr></argument>)<pos:position pos:line="10" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">Must<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name><name pos:line="11" pos:column="10">pending<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">readRequest<pos:position pos:line="11" pos:column="30"/></name></name> <operator pos:line="11" pos:column="31">||<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="34">pending<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">writeRequest<pos:position pos:line="11" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">IpcIoMsg<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">ipcIo<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
    <try pos:line="14" pos:column="5">try <block pos:line="14" pos:column="9">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">++<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">lastRequestId<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">==<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <comment type="line" pos:line="15" pos:column="35">// don't use zero value as requestId</comment>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="13">++<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">lastRequestId<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">ipcIo<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">.<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">requestId<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">lastRequestId<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">ipcIo<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">start<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">current_time<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">pending<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">readRequest<pos:position pos:line="19" pos:column="33"/></name></name></expr>)<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <block pos:line="19" pos:column="35">{
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">ipcIo<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">.<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">command<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <name><name pos:line="20" pos:column="29">IpcIo<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">::<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">cmdRead<pos:position pos:line="20" pos:column="43"/></name></name></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">ipcIo<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">offset<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="28">pending<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">readRequest<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">offset<pos:position pos:line="21" pos:column="56"/></name></name></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">ipcIo<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">len<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name><name pos:line="22" pos:column="25">pending<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">readRequest<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">len<pos:position pos:line="22" pos:column="50"/></name></name></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then> <else pos:line="23" pos:column="11">else <block pos:line="23" pos:column="16">{ <comment type="line" pos:line="23" pos:column="18">// pending-&gt;writeRequest</comment>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">Must<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name><name pos:line="24" pos:column="18">pending<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">writeRequest<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">len<pos:position pos:line="24" pos:column="44"/></name></name> <operator pos:line="24" pos:column="45">&lt;=<pos:position pos:line="24" pos:column="50"/></operator> <call><name><name pos:line="24" pos:column="48">Ipc<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">::<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="53">Mem<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">::<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="58">PageSize<pos:position pos:line="24" pos:column="66"/></name></name><argument_list pos:line="24" pos:column="66">()<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">!<pos:position pos:line="25" pos:column="18"/></operator><call><name><name pos:line="25" pos:column="18">Ipc<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">::<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">Mem<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">::<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">GetPage<pos:position pos:line="25" pos:column="35"/></name></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">Ipc<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">::<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">Mem<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">::<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="46">PageId<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">::<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">ioPage<pos:position pos:line="25" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="62">ipcIo<pos:position pos:line="25" pos:column="67"/></name><operator pos:line="25" pos:column="67">.<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="68">page<pos:position pos:line="25" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="74"/></condition><then pos:line="25" pos:column="74"> <block pos:line="25" pos:column="75">{
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">ipcIo<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">.<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">len<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="29">0<pos:position pos:line="26" pos:column="30"/></literal></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
                <throw pos:line="27" pos:column="17">throw <expr><call><name pos:line="27" pos:column="23">TexcHere<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"run out of shared memory pages for IPC I/O"<pos:position pos:line="27" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></throw>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">ipcIo<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">.<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">command<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name><name pos:line="29" pos:column="29">IpcIo<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">::<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">cmdWrite<pos:position pos:line="29" pos:column="44"/></name></name></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">ipcIo<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">.<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">offset<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <name><name pos:line="30" pos:column="28">pending<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">writeRequest<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">offset<pos:position pos:line="30" pos:column="57"/></name></name></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">ipcIo<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">len<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name><name pos:line="31" pos:column="25">pending<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">writeRequest<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">len<pos:position pos:line="31" pos:column="51"/></name></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="32" pos:column="13">char<pos:position pos:line="32" pos:column="17"/></name> <modifier pos:line="32" pos:column="18">*<pos:position pos:line="32" pos:column="19"/></modifier><specifier pos:line="32" pos:column="19">const<pos:position pos:line="32" pos:column="24"/></specifier></type> <name pos:line="32" pos:column="25">buf<pos:position pos:line="32" pos:column="28"/></name> <init pos:line="32" pos:column="29">= <expr><call><name><name pos:line="32" pos:column="31">Ipc<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">::<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">Mem<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">::<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">PagePointer<pos:position pos:line="32" pos:column="52"/></name></name><argument_list pos:line="32" pos:column="52">(<argument><expr><name><name pos:line="32" pos:column="53">ipcIo<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">.<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="59">page<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="65"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">memcpy<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">buf<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="25">pending<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">writeRequest<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">buf<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="53">ipcIo<pos:position pos:line="33" pos:column="58"/></name><operator pos:line="33" pos:column="58">.<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="59">len<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt> <comment type="line" pos:line="33" pos:column="65">// optimize away</comment>
        }<pos:position pos:line="34" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">47<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="20">7<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">HERE<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&lt;&lt;<pos:position pos:line="36" pos:column="36"/></operator> <literal type="string" pos:line="36" pos:column="31">"pushing "<pos:position pos:line="36" pos:column="41"/></literal> <operator pos:line="36" pos:column="42">&lt;&lt;<pos:position pos:line="36" pos:column="50"/></operator> <call><name pos:line="36" pos:column="45">SipcIo<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">(<argument><expr><name pos:line="36" pos:column="52">KidIdentifier<pos:position pos:line="36" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="67">ipcIo<pos:position pos:line="36" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="74">diskId<pos:position pos:line="36" pos:column="80"/></name></expr></argument>)<pos:position pos:line="36" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="83"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name><name pos:line="38" pos:column="13">queue<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">push<pos:position pos:line="38" pos:column="24"/></name></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">diskId<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="33">ipcIo<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="40"/></condition><then pos:line="38" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="13">Notify<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">diskId<pos:position pos:line="39" pos:column="26"/></name></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt></block></then></if> <comment type="line" pos:line="39" pos:column="29">// must notify disker</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">trackPendingRequest<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name><name pos:line="40" pos:column="29">ipcIo<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">.<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">requestId<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">pending<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block> <catch pos:line="41" pos:column="7">catch <parameter_list pos:line="41" pos:column="13">(<parameter><decl><type><specifier pos:line="41" pos:column="14">const<pos:position pos:line="41" pos:column="19"/></specifier> <name><name pos:line="41" pos:column="20">Queue<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">::<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">Full<pos:position pos:line="41" pos:column="31"/></name></name> <modifier pos:line="41" pos:column="32">&amp;<pos:position pos:line="41" pos:column="37"/></modifier></type></decl></parameter>)<pos:position pos:line="41" pos:column="34"/></parameter_list> <block pos:line="41" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">47<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="20">DBG_IMPORTANT<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="35">"ERROR: worker I/O push queue for "<pos:position pos:line="42" pos:column="70"/></literal> <operator pos:line="42" pos:column="71">&lt;&lt;<pos:position pos:line="42" pos:column="79"/></operator>
               <name pos:line="43" pos:column="16">dbName<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">&lt;&lt;<pos:position pos:line="43" pos:column="31"/></operator> <literal type="string" pos:line="43" pos:column="26">" overflow: "<pos:position pos:line="43" pos:column="39"/></literal> <operator pos:line="43" pos:column="40">&lt;&lt;<pos:position pos:line="43" pos:column="48"/></operator>
               <call><name pos:line="44" pos:column="16">SipcIo<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">KidIdentifier<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">ipcIo<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">diskId<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt> <comment type="line" pos:line="44" pos:column="55">// TODO: report queue len</comment>
        <comment type="line" pos:line="45" pos:column="9">// TODO: grow queue size</comment>

        <expr_stmt><expr><call><name><name pos:line="47" pos:column="9">pending<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">completeIo<pos:position pos:line="47" pos:column="28"/></name></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">NULL<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="48" pos:column="9">delete<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">pending<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></catch> <catch pos:line="49" pos:column="7">catch <parameter_list pos:line="49" pos:column="13">(<parameter><decl><type><specifier pos:line="49" pos:column="14">const<pos:position pos:line="49" pos:column="19"/></specifier> <name pos:line="49" pos:column="20">TextException<pos:position pos:line="49" pos:column="33"/></name> <modifier pos:line="49" pos:column="34">&amp;<pos:position pos:line="49" pos:column="39"/></modifier></type><name pos:line="49" pos:column="35">e<pos:position pos:line="49" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="49" pos:column="37"/></parameter_list> <block pos:line="49" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">47<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="20">DBG_IMPORTANT<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="35">"ERROR: "<pos:position pos:line="50" pos:column="44"/></literal> <operator pos:line="50" pos:column="45">&lt;&lt;<pos:position pos:line="50" pos:column="53"/></operator> <name pos:line="50" pos:column="48">dbName<pos:position pos:line="50" pos:column="54"/></name> <operator pos:line="50" pos:column="55">&lt;&lt;<pos:position pos:line="50" pos:column="63"/></operator> <literal type="string" pos:line="50" pos:column="58">" exception: "<pos:position pos:line="50" pos:column="72"/></literal> <operator pos:line="50" pos:column="73">&lt;&lt;<pos:position pos:line="50" pos:column="81"/></operator> <call><name><name pos:line="50" pos:column="76">e<pos:position pos:line="50" pos:column="77"/></name><operator pos:line="50" pos:column="77">.<pos:position pos:line="50" pos:column="78"/></operator><name pos:line="50" pos:column="78">what<pos:position pos:line="50" pos:column="82"/></name></name><argument_list pos:line="50" pos:column="82">()<pos:position pos:line="50" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="86"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="51" pos:column="9">pending<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">completeIo<pos:position pos:line="51" pos:column="28"/></name></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">NULL<pos:position pos:line="51" pos:column="33"/></name></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="52" pos:column="9">delete<pos:position pos:line="52" pos:column="15"/></operator> <name pos:line="52" pos:column="16">pending<pos:position pos:line="52" pos:column="23"/></name></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></catch></try>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3685_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">callException<pos:position pos:line="1" pos:column="49"/></name></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name><name pos:line="1" pos:column="56">std<pos:position pos:line="1" pos:column="59"/></name><operator pos:line="1" pos:column="59">::<pos:position pos:line="1" pos:column="61"/></operator><name pos:line="1" pos:column="61">exception<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">&amp;<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="72">e<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">clearAdaptation<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">theOptionsFetcher<pos:position pos:line="3" pos:column="38"/></name></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">2<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"ICAP probably failed to fetch options ("<pos:position pos:line="4" pos:column="59"/></literal> <operator pos:line="4" pos:column="60">&lt;&lt;<pos:position pos:line="4" pos:column="68"/></operator> <call><name><name pos:line="4" pos:column="63">e<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">.<pos:position pos:line="4" pos:column="65"/></operator><name pos:line="4" pos:column="65">what<pos:position pos:line="4" pos:column="69"/></name></name><argument_list pos:line="4" pos:column="69">()<pos:position pos:line="4" pos:column="71"/></argument_list></call> <operator pos:line="4" pos:column="72">&lt;&lt;<pos:position pos:line="4" pos:column="80"/></operator>
           <literal type="string" pos:line="5" pos:column="12">")"<pos:position pos:line="5" pos:column="15"/></literal> <operator pos:line="5" pos:column="16">&lt;&lt;<pos:position pos:line="5" pos:column="24"/></operator> <call><name pos:line="5" pos:column="19">status<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">()<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">handleNewOptions<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

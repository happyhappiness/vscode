<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5043_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DiskThreadsDiskFile<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">openDone<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">unused<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">unused2<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">int<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">anFD<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">int<pos:position pos:line="2" pos:column="77"/></name></type> <name pos:line="2" pos:column="78">errflag<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">79<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"DiskThreadsDiskFile::openDone: FD "<pos:position pos:line="4" pos:column="55"/></literal> <operator pos:line="4" pos:column="56">&lt;&lt;<pos:position pos:line="4" pos:column="64"/></operator> <name pos:line="4" pos:column="59">anFD<pos:position pos:line="4" pos:column="63"/></name> <operator pos:line="4" pos:column="64">&lt;&lt;<pos:position pos:line="4" pos:column="72"/></operator> <literal type="string" pos:line="4" pos:column="67">", errflag "<pos:position pos:line="4" pos:column="79"/></literal> <operator pos:line="4" pos:column="80">&lt;&lt;<pos:position pos:line="4" pos:column="88"/></operator> <name pos:line="4" pos:column="83">errflag<pos:position pos:line="4" pos:column="90"/></name></expr></argument>)<pos:position pos:line="4" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="92"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">Opening_FD<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">--<pos:position pos:line="5" pos:column="17"/></operator></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">fd<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <name pos:line="7" pos:column="10">anFD<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">errflag<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">||<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">fd<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27"> <block pos:line="9" pos:column="28">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">errno<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">errflag<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">79<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"DiskThreadsDiskFile::openDone: "<pos:position pos:line="11" pos:column="56"/></literal> <operator pos:line="11" pos:column="57">&lt;&lt;<pos:position pos:line="11" pos:column="65"/></operator> <call><name pos:line="11" pos:column="60">xstrerror<pos:position pos:line="11" pos:column="69"/></name><argument_list pos:line="11" pos:column="69">()<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">79<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"\t"<pos:position pos:line="12" pos:column="27"/></literal> <operator pos:line="12" pos:column="28">&lt;&lt;<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="31">path_<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">errorOccured<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <literal type="boolean" pos:line="13" pos:column="24">true<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">store_open_disk_fd<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">++<pos:position pos:line="15" pos:column="29"/></operator></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">commSetCloseOnExec<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">fd<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">fd_open<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">fd<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="21">FD_FILE<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">path_<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">IORequestor<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">::<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">Pointer<pos:position pos:line="20" pos:column="25"/></name></name></type> <name pos:line="20" pos:column="26">t<pos:position pos:line="20" pos:column="27"/></name> <init pos:line="20" pos:column="28">= <expr><name pos:line="20" pos:column="30">ioRequestor<pos:position pos:line="20" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">--<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">inProgressIOs<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">t<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">ioCompletedNotification<pos:position pos:line="22" pos:column="31"/></name></name><argument_list pos:line="22" pos:column="31">()<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">79<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">3<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"DiskThreadsDiskFile::openDone: exiting"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5023_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">pathIsDirectory<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">aPath<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">stat<pos:position pos:line="5" pos:column="16"/></name></name></type> <name pos:line="5" pos:column="17">sb<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><operator pos:line="7" pos:column="9">::<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">stat<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">aPath<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="24">sb<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call> <operator pos:line="7" pos:column="28">&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32"> <block pos:line="7" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">47<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_CRITICAL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"ERROR: "<pos:position pos:line="8" pos:column="43"/></literal> <operator pos:line="8" pos:column="44">&lt;&lt;<pos:position pos:line="8" pos:column="52"/></operator> <name pos:line="8" pos:column="47">aPath<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">&lt;&lt;<pos:position pos:line="8" pos:column="61"/></operator> <literal type="string" pos:line="8" pos:column="56">": "<pos:position pos:line="8" pos:column="60"/></literal> <operator pos:line="8" pos:column="61">&lt;&lt;<pos:position pos:line="8" pos:column="69"/></operator> <call><name pos:line="8" pos:column="64">xstrerror<pos:position pos:line="8" pos:column="73"/></name><argument_list pos:line="8" pos:column="73">()<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">S_ISDIR<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name><name pos:line="12" pos:column="17">sb<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">st_mode<pos:position pos:line="12" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call> <operator pos:line="12" pos:column="29">==<pos:position pos:line="12" pos:column="31"/></operator> <literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">47<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">DBG_CRITICAL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"WARNING: "<pos:position pos:line="13" pos:column="45"/></literal> <operator pos:line="13" pos:column="46">&lt;&lt;<pos:position pos:line="13" pos:column="54"/></operator> <name pos:line="13" pos:column="49">aPath<pos:position pos:line="13" pos:column="54"/></name> <operator pos:line="13" pos:column="55">&lt;&lt;<pos:position pos:line="13" pos:column="63"/></operator> <literal type="string" pos:line="13" pos:column="58">" is not a directory"<pos:position pos:line="13" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><literal type="boolean" pos:line="14" pos:column="16">false<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <return pos:line="17" pos:column="5">return <expr><literal type="boolean" pos:line="17" pos:column="12">true<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

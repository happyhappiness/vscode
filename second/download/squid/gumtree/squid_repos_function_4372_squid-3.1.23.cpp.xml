<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4372_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">aclParseRegexList<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">relist<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier><modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">curlist<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">relist<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier><modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">Tail<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">relist<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">q<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">NULL<pos:position pos:line="5" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">t<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">regex_t<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">comp<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">errcode<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">flags<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><name pos:line="9" pos:column="17">REG_EXTENDED<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">|<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">REG_NOSUB<pos:position pos:line="9" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">28<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="15">5<pos:position pos:line="11" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="18">HERE<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;&lt;<pos:position pos:line="11" pos:column="31"/></operator> <literal type="string" pos:line="11" pos:column="26">"Regex new line."<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">Tail<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">relist<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></operator><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">curlist<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></init> <condition><expr><operator pos:line="13" pos:column="37">*<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">Tail<pos:position pos:line="13" pos:column="42"/></name></expr>;<pos:position pos:line="13" pos:column="43"/></condition> <incr><expr><name pos:line="13" pos:column="44">Tail<pos:position pos:line="13" pos:column="48"/></name> <operator pos:line="13" pos:column="49">=<pos:position pos:line="13" pos:column="50"/></operator> <operator pos:line="13" pos:column="51">&amp;<pos:position pos:line="13" pos:column="56"/></operator><operator pos:line="13" pos:column="52">(<pos:position pos:line="13" pos:column="53"/></operator><name><operator pos:line="13" pos:column="53">(<pos:position pos:line="13" pos:column="54"/></operator><operator pos:line="13" pos:column="54">*<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="55">Tail<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">)<pos:position pos:line="13" pos:column="60"/></operator><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="62">next<pos:position pos:line="13" pos:column="66"/></name></name><operator pos:line="13" pos:column="66">)<pos:position pos:line="13" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="68"/></control><block type="pseudo"><empty_stmt pos:line="13" pos:column="68">;<pos:position pos:line="13" pos:column="69"/></empty_stmt></block></for>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">t<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name><name pos:line="14" pos:column="17">ConfigParser<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">::<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">strtokFile<pos:position pos:line="14" pos:column="41"/></name></name><argument_list pos:line="14" pos:column="41">()<pos:position pos:line="14" pos:column="43"/></argument_list></call><operator pos:line="14" pos:column="43">)<pos:position pos:line="14" pos:column="44"/></operator></expr>)<pos:position pos:line="14" pos:column="45"/></condition> <block pos:line="14" pos:column="46">{

        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">28<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="19">5<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">HERE<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&lt;&lt;<pos:position pos:line="16" pos:column="35"/></operator> <literal type="string" pos:line="16" pos:column="30">"Regex token: "<pos:position pos:line="16" pos:column="45"/></literal> <operator pos:line="16" pos:column="46">&lt;&lt;<pos:position pos:line="16" pos:column="54"/></operator> <name pos:line="16" pos:column="49">t<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">strcmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">t<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"-i"<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call> <operator pos:line="18" pos:column="29">==<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34"> <block pos:line="18" pos:column="35">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">flags<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">|=<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">REG_ICASE<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
            <continue pos:line="20" pos:column="13">continue;<pos:position pos:line="20" pos:column="22"/></continue>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strcmp<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">t<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"+i"<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call> <operator pos:line="23" pos:column="29">==<pos:position pos:line="23" pos:column="31"/></operator> <literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34"> <block pos:line="23" pos:column="35">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">flags<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&amp;=<pos:position pos:line="24" pos:column="25"/></operator> <operator pos:line="24" pos:column="22">~<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">REG_ICASE<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
            <continue pos:line="25" pos:column="13">continue;<pos:position pos:line="25" pos:column="22"/></continue>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">errcode<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="24">regcomp<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">comp<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">t<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">flags<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call><operator pos:line="28" pos:column="48">)<pos:position pos:line="28" pos:column="49"/></operator> <operator pos:line="28" pos:column="50">!=<pos:position pos:line="28" pos:column="52"/></operator> <literal type="number" pos:line="28" pos:column="53">0<pos:position pos:line="28" pos:column="54"/></literal></expr>)<pos:position pos:line="28" pos:column="55"/></condition><then pos:line="28" pos:column="55"> <block pos:line="28" pos:column="56">{
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">char<pos:position pos:line="29" pos:column="17"/></name></type> <name><name pos:line="29" pos:column="18">errbuf<pos:position pos:line="29" pos:column="24"/></name><index pos:line="29" pos:column="24">[<expr><literal type="number" pos:line="29" pos:column="25">256<pos:position pos:line="29" pos:column="28"/></literal></expr>]<pos:position pos:line="29" pos:column="29"/></index></name></decl>;<pos:position pos:line="29" pos:column="30"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">regerror<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">errcode<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="31">&amp;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="32">comp<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">errbuf<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="46">sizeof <name pos:line="30" pos:column="53">errbuf<pos:position pos:line="30" pos:column="59"/></name></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">debugs<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="number" pos:line="31" pos:column="20">28<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="27">""<pos:position pos:line="31" pos:column="29"/></literal> <operator pos:line="31" pos:column="30">&lt;&lt;<pos:position pos:line="31" pos:column="38"/></operator> <name pos:line="31" pos:column="33">cfg_filename<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">&lt;&lt;<pos:position pos:line="31" pos:column="54"/></operator> <literal type="string" pos:line="31" pos:column="49">" line "<pos:position pos:line="31" pos:column="57"/></literal> <operator pos:line="31" pos:column="58">&lt;&lt;<pos:position pos:line="31" pos:column="66"/></operator> <name pos:line="31" pos:column="61">config_lineno<pos:position pos:line="31" pos:column="74"/></name> <operator pos:line="31" pos:column="75">&lt;&lt;<pos:position pos:line="31" pos:column="83"/></operator> <literal type="string" pos:line="31" pos:column="78">": "<pos:position pos:line="31" pos:column="82"/></literal> <operator pos:line="31" pos:column="83">&lt;&lt;<pos:position pos:line="31" pos:column="91"/></operator> <name pos:line="31" pos:column="86">config_input_line<pos:position pos:line="31" pos:column="103"/></name></expr></argument>)<pos:position pos:line="31" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">28<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">"aclParseRegexList: Invalid regular expression '"<pos:position pos:line="32" pos:column="76"/></literal> <operator pos:line="32" pos:column="77">&lt;&lt;<pos:position pos:line="32" pos:column="85"/></operator> <name pos:line="32" pos:column="80">t<pos:position pos:line="32" pos:column="81"/></name> <operator pos:line="32" pos:column="82">&lt;&lt;<pos:position pos:line="32" pos:column="90"/></operator> <literal type="string" pos:line="32" pos:column="85">"': "<pos:position pos:line="32" pos:column="90"/></literal> <operator pos:line="32" pos:column="91">&lt;&lt;<pos:position pos:line="32" pos:column="99"/></operator> <name pos:line="32" pos:column="94">errbuf<pos:position pos:line="32" pos:column="100"/></name></expr></argument>)<pos:position pos:line="32" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="102"/></expr_stmt>
            <continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="36" pos:column="9">q<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">relist<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">*<pos:position pos:line="36" pos:column="22"/></operator><operator pos:line="36" pos:column="22">)<pos:position pos:line="36" pos:column="23"/></operator><call><name pos:line="36" pos:column="23">memAllocate<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">MEM_RELIST<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">q<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">flags<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">flags<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">q<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">pattern<pos:position pos:line="38" pos:column="19"/></name></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">xstrdup<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">t<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">q<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">regex<pos:position pos:line="39" pos:column="17"/></name></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">comp<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="40" pos:column="9">*<pos:position pos:line="40" pos:column="10"/></operator><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">Tail<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">)<pos:position pos:line="40" pos:column="16"/></operator> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">q<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">Tail<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <operator pos:line="41" pos:column="16">&amp;<pos:position pos:line="41" pos:column="21"/></operator><name><name pos:line="41" pos:column="17">q<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">next<pos:position pos:line="41" pos:column="24"/></name></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></while>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_290_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">time_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">readTime<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">user_key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">sub_key<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">keybuffer<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[<expr><name pos:line="3" pos:column="20">TQ_BUFFERSIZE<pos:position pos:line="3" pos:column="33"/></name></expr>]<pos:position pos:line="3" pos:column="34"/></index></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DBT<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">key<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">data<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">t<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">( <expr><call><name pos:line="7" pos:column="10">strlen<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">user_key<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="29">1<pos:position pos:line="7" pos:column="30"/></literal> <operator pos:line="7" pos:column="31">+<pos:position pos:line="7" pos:column="32"/></operator> <call><name pos:line="7" pos:column="33">strlen<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">sub_key<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call> <operator pos:line="7" pos:column="49">+<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">1<pos:position pos:line="7" pos:column="52"/></literal> <operator pos:line="7" pos:column="53">&gt;<pos:position pos:line="7" pos:column="57"/></operator> <sizeof pos:line="7" pos:column="55">sizeof<argument_list pos:line="7" pos:column="61">(<argument><expr><name pos:line="7" pos:column="62">keybuffer<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></sizeof></expr> )<pos:position pos:line="7" pos:column="74"/></condition><then pos:line="7" pos:column="74"> <block pos:line="7" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">log_error<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><literal type="string" pos:line="8" pos:column="19">"key too long (%s,%s)\n"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">user_key<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="55">sub_key<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">snprintf<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">keybuffer<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="29">sizeof<argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">keybuffer<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="48">"%s-%s"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="57">user_key<pos:position pos:line="10" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="67">sub_key<pos:position pos:line="10" pos:column="74"/></name></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="12" pos:column="9">key<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">data<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">void<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></operator><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">keybuffer<pos:position pos:line="12" pos:column="37"/></name></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">key<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">size<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <call><name pos:line="13" pos:column="20">strlen<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">keybuffer<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name><name pos:line="14" pos:column="13">db<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">get<pos:position pos:line="14" pos:column="20"/></name></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">db<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="26">key<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="31">&amp;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="32">data<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="38">0<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call> <operator pos:line="14" pos:column="41">==<pos:position pos:line="14" pos:column="43"/></operator> <literal type="number" pos:line="14" pos:column="44">0<pos:position pos:line="14" pos:column="45"/></literal></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46"> <block pos:line="14" pos:column="47">{
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">data<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">size<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">!=<pos:position pos:line="15" pos:column="29"/></operator> <sizeof pos:line="15" pos:column="30">sizeof<argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">t<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></sizeof></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">log_error<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><literal type="string" pos:line="16" pos:column="27">"CORRUPTED DATABASE (%s)\n"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="56">keybuffer<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then> <else pos:line="17" pos:column="15">else <block pos:line="17" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">memcpy<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="25">t<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="28">data<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">data<pos:position pos:line="18" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="39">sizeof<argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">t<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></else></if>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">log_debug<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="string" pos:line="21" pos:column="19">"readTime(\"%s\")=%d\n"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">keybuffer<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="55">t<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>

    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">t<pos:position pos:line="24" pos:column="13"/></name></expr>;<pos:position pos:line="24" pos:column="14"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

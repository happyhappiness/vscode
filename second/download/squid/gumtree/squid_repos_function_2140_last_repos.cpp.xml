<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2140_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">htcpBuildOpData<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">buf<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">buflen<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">htcpStuff<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">stuff<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ssize_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">off<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">31<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"htcpBuildOpData: opcode "<pos:position pos:line="5" pos:column="45"/></literal> <operator pos:line="5" pos:column="46">&lt;&lt;<pos:position pos:line="5" pos:column="54"/></operator> <name><name pos:line="5" pos:column="49">htcpOpcodeStr<pos:position pos:line="5" pos:column="62"/></name><index pos:line="5" pos:column="62">[<expr><name><name pos:line="5" pos:column="63">stuff<pos:position pos:line="5" pos:column="68"/></name><operator pos:line="5" pos:column="68">-&gt;<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="70">op<pos:position pos:line="5" pos:column="72"/></name></name></expr>]<pos:position pos:line="5" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="75"/></expr_stmt>

    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">stuff<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">op<pos:position pos:line="7" pos:column="22"/></name></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition> <block pos:line="7" pos:column="24">{

    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">HTCP_TST<pos:position pos:line="9" pos:column="18"/></name></expr>:<pos:position pos:line="9" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="10" pos:column="9">off<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">htcpBuildTstOpData<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">buf<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">+<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="40">off<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">buflen<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">stuff<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
        <break pos:line="11" pos:column="9">break;<pos:position pos:line="11" pos:column="15"/></break>

    <case pos:line="13" pos:column="5">case <expr><name pos:line="13" pos:column="10">HTCP_CLR<pos:position pos:line="13" pos:column="18"/></name></expr>:<pos:position pos:line="13" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="14" pos:column="9">off<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">htcpBuildClrOpData<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">buf<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">+<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">off<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">buflen<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="53">stuff<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>

    <default pos:line="17" pos:column="5">default:<pos:position pos:line="17" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">assert<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>
    }<pos:position pos:line="20" pos:column="6"/></block></switch>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">off<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

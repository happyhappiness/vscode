<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3677_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">callWhenAvailable<pos:position pos:line="1" pos:column="53"/></name></name><parameter_list pos:line="1" pos:column="53">(<parameter><decl><type><name><name pos:line="1" pos:column="54">AsyncCall<pos:position pos:line="1" pos:column="63"/></name><operator pos:line="1" pos:column="63">::<pos:position pos:line="1" pos:column="65"/></operator><name pos:line="1" pos:column="65">Pointer<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">&amp;<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="74">cb<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="78">bool<pos:position pos:line="1" pos:column="82"/></name></type> <name pos:line="1" pos:column="83">priority<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="92"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="3" pos:column="15">8<pos:position pos:line="3" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="18">"ICAPServiceRep::callWhenAvailable"<pos:position pos:line="3" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">cb<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">!=<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr></argument>)<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><call><name pos:line="5" pos:column="10">up<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">()<pos:position pos:line="5" pos:column="14"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><operator pos:line="6" pos:column="10">!<pos:position pos:line="6" pos:column="11"/></operator><call><name><name pos:line="6" pos:column="11">theIdleConns<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">count<pos:position pos:line="6" pos:column="30"/></name></name><argument_list pos:line="6" pos:column="30">()<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt> <comment type="line" pos:line="6" pos:column="35">// or we should not be waiting</comment>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">Client<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">i<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">.<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">service<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">Pointer<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">this<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">i<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">.<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">callback<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">cb<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">priority<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="9">theNotificationWaiters<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">push_front<pos:position pos:line="12" pos:column="42"/></name></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">i<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="9">theNotificationWaiters<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">.<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">push_back<pos:position pos:line="14" pos:column="41"/></name></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">i<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">busyCheckpoint<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">()<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

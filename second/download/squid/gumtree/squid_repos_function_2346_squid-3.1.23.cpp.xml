<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2346_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ipcacheParse<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">ipcache_entry<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">i<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">rfc1035_rr<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type> <name pos:line="2" pos:column="45">answers<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">nr<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="62">const<pos:position pos:line="2" pos:column="67"/></specifier> <name pos:line="2" pos:column="68">char<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">error_message<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="88"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">k<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">j<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">na<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ttl<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">name<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><specifier pos:line="8" pos:column="25">const<pos:position pos:line="8" pos:column="30"/></specifier> <name pos:line="8" pos:column="31">char<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></operator><operator pos:line="8" pos:column="37">)<pos:position pos:line="8" pos:column="38"/></operator><name><name pos:line="8" pos:column="38">i<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">hash<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">key<pos:position pos:line="8" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">cname_found<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">i<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">expires<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">squid_curtime<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">+<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="34">Config<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">negativeDnsTtl<pos:position pos:line="11" pos:column="55"/></name></name></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">i<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">flags<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">negcached<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">safe_free<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">addrs<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">in_addrs<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">i<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">addrs<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">in_addrs<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">==<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">NULL<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">safe_free<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name><name pos:line="15" pos:column="15">i<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">addrs<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">bad_mask<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name><name pos:line="16" pos:column="12">i<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">addrs<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">bad_mask<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">NULL<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">safe_free<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">i<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">error_message<pos:position pos:line="17" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name><name pos:line="18" pos:column="12">i<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">error_message<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">==<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">NULL<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">i<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">addrs<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">count<pos:position pos:line="19" pos:column="19"/></name></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">nr<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">&lt;<pos:position pos:line="21" pos:column="16"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16"> <block pos:line="21" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">14<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">3<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"ipcacheParse: Lookup failed '"<pos:position pos:line="22" pos:column="54"/></literal> <operator pos:line="22" pos:column="55">&lt;&lt;<pos:position pos:line="22" pos:column="63"/></operator> <name pos:line="22" pos:column="58">error_message<pos:position pos:line="22" pos:column="71"/></name> <operator pos:line="22" pos:column="72">&lt;&lt;<pos:position pos:line="22" pos:column="80"/></operator> <literal type="string" pos:line="22" pos:column="75">"' for '"<pos:position pos:line="22" pos:column="84"/></literal> <operator pos:line="22" pos:column="85">&lt;&lt;<pos:position pos:line="22" pos:column="93"/></operator> <operator pos:line="22" pos:column="88">(<pos:position pos:line="22" pos:column="89"/></operator><specifier pos:line="22" pos:column="89">const<pos:position pos:line="22" pos:column="94"/></specifier> <name pos:line="22" pos:column="95">char<pos:position pos:line="22" pos:column="99"/></name> <operator pos:line="22" pos:column="100">*<pos:position pos:line="22" pos:column="101"/></operator><operator pos:line="22" pos:column="101">)<pos:position pos:line="22" pos:column="102"/></operator><name><name pos:line="22" pos:column="102">i<pos:position pos:line="22" pos:column="103"/></name><operator pos:line="22" pos:column="103">-&gt;<pos:position pos:line="22" pos:column="108"/></operator><name pos:line="22" pos:column="105">hash<pos:position pos:line="22" pos:column="109"/></name><operator pos:line="22" pos:column="109">.<pos:position pos:line="22" pos:column="110"/></operator><name pos:line="22" pos:column="110">key<pos:position pos:line="22" pos:column="113"/></name></name> <operator pos:line="22" pos:column="114">&lt;&lt;<pos:position pos:line="22" pos:column="122"/></operator> <literal type="string" pos:line="22" pos:column="117">"'"<pos:position pos:line="22" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="122"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">error_message<pos:position pos:line="23" pos:column="25"/></name></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <call><name pos:line="23" pos:column="28">xstrdup<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">error_message<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">-<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">nr<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">==<pos:position pos:line="27" pos:column="14"/></operator> <literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17"> <block pos:line="27" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">14<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">3<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"ipcacheParse: No DNS records in response to '"<pos:position pos:line="28" pos:column="70"/></literal> <operator pos:line="28" pos:column="71">&lt;&lt;<pos:position pos:line="28" pos:column="79"/></operator> <name pos:line="28" pos:column="74">name<pos:position pos:line="28" pos:column="78"/></name> <operator pos:line="28" pos:column="79">&lt;&lt;<pos:position pos:line="28" pos:column="87"/></operator> <literal type="string" pos:line="28" pos:column="82">"'"<pos:position pos:line="28" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">i<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">error_message<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">xstrdup<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><literal type="string" pos:line="29" pos:column="36">"No DNS records"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">-<pos:position pos:line="30" pos:column="17"/></operator><literal type="number" pos:line="30" pos:column="17">1<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">assert<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name pos:line="33" pos:column="12">answers<pos:position pos:line="33" pos:column="19"/></name></expr></argument>)<pos:position pos:line="33" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>

    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><expr><name pos:line="35" pos:column="10">k<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></init> <condition><expr><name pos:line="35" pos:column="17">k<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&lt;<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="21">nr<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></condition> <incr><expr><name pos:line="35" pos:column="25">k<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">++<pos:position pos:line="35" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="29"/></control> <block pos:line="35" pos:column="30">{

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">Ip<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">::<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">EnableIpv6<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">&amp;&amp;<pos:position pos:line="37" pos:column="38"/></operator> <name><name pos:line="37" pos:column="31">answers<pos:position pos:line="37" pos:column="38"/></name><index pos:line="37" pos:column="38">[<expr><name pos:line="37" pos:column="39">k<pos:position pos:line="37" pos:column="40"/></name></expr>]<pos:position pos:line="37" pos:column="41"/></index></name><operator pos:line="37" pos:column="41">.<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">type<pos:position pos:line="37" pos:column="46"/></name> <operator pos:line="37" pos:column="47">==<pos:position pos:line="37" pos:column="49"/></operator> <name pos:line="37" pos:column="50">RFC1035_TYPE_AAAA<pos:position pos:line="37" pos:column="67"/></name></expr>)<pos:position pos:line="37" pos:column="68"/></condition><then pos:line="37" pos:column="68"> <block pos:line="37" pos:column="69">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><name><name pos:line="38" pos:column="17">answers<pos:position pos:line="38" pos:column="24"/></name><index pos:line="38" pos:column="24">[<expr><name pos:line="38" pos:column="25">k<pos:position pos:line="38" pos:column="26"/></name></expr>]<pos:position pos:line="38" pos:column="27"/></index></name><operator pos:line="38" pos:column="27">.<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">rdlength<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">!=<pos:position pos:line="38" pos:column="39"/></operator> <sizeof pos:line="38" pos:column="40">sizeof<argument_list pos:line="38" pos:column="46">(<argument><expr pos:line="38" pos:column="47">struct <name pos:line="38" pos:column="54">in6_addr<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></sizeof></expr>)<pos:position pos:line="38" pos:column="64"/></condition><then pos:line="38" pos:column="64"> <block pos:line="38" pos:column="65">{
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">debugs<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><literal type="number" pos:line="39" pos:column="24">14<pos:position pos:line="39" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="31">"ipcacheParse: Invalid IPv6 address in response to '"<pos:position pos:line="39" pos:column="84"/></literal> <operator pos:line="39" pos:column="85">&lt;&lt;<pos:position pos:line="39" pos:column="93"/></operator> <name pos:line="39" pos:column="88">name<pos:position pos:line="39" pos:column="92"/></name> <operator pos:line="39" pos:column="93">&lt;&lt;<pos:position pos:line="39" pos:column="101"/></operator> <literal type="string" pos:line="39" pos:column="96">"'"<pos:position pos:line="39" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="101"/></expr_stmt>
                <continue pos:line="40" pos:column="17">continue;<pos:position pos:line="40" pos:column="26"/></continue>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="42" pos:column="13">na<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">++<pos:position pos:line="42" pos:column="17"/></operator></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">IpcacheStats<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">.<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">rr_aaaa<pos:position pos:line="43" pos:column="33"/></name></name><operator pos:line="43" pos:column="33">++<pos:position pos:line="43" pos:column="35"/></operator></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
            <continue pos:line="44" pos:column="13">continue;<pos:position pos:line="44" pos:column="22"/></continue>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>

        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">answers<pos:position pos:line="47" pos:column="20"/></name><index pos:line="47" pos:column="20">[<expr><name pos:line="47" pos:column="21">k<pos:position pos:line="47" pos:column="22"/></name></expr>]<pos:position pos:line="47" pos:column="23"/></index></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">type<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">==<pos:position pos:line="47" pos:column="31"/></operator> <name pos:line="47" pos:column="32">RFC1035_TYPE_A<pos:position pos:line="47" pos:column="46"/></name></expr>)<pos:position pos:line="47" pos:column="47"/></condition><then pos:line="47" pos:column="47"> <block pos:line="47" pos:column="48">{
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><name><name pos:line="48" pos:column="17">answers<pos:position pos:line="48" pos:column="24"/></name><index pos:line="48" pos:column="24">[<expr><name pos:line="48" pos:column="25">k<pos:position pos:line="48" pos:column="26"/></name></expr>]<pos:position pos:line="48" pos:column="27"/></index></name><operator pos:line="48" pos:column="27">.<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">rdlength<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">!=<pos:position pos:line="48" pos:column="39"/></operator> <sizeof pos:line="48" pos:column="40">sizeof<argument_list pos:line="48" pos:column="46">(<argument><expr pos:line="48" pos:column="47">struct <name pos:line="48" pos:column="54">in_addr<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></sizeof></expr>)<pos:position pos:line="48" pos:column="63"/></condition><then pos:line="48" pos:column="63"> <block pos:line="48" pos:column="64">{
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">debugs<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><literal type="number" pos:line="49" pos:column="24">14<pos:position pos:line="49" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="28">1<pos:position pos:line="49" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="31">"ipcacheParse: Invalid IPv4 address in response to '"<pos:position pos:line="49" pos:column="84"/></literal> <operator pos:line="49" pos:column="85">&lt;&lt;<pos:position pos:line="49" pos:column="93"/></operator> <name pos:line="49" pos:column="88">name<pos:position pos:line="49" pos:column="92"/></name> <operator pos:line="49" pos:column="93">&lt;&lt;<pos:position pos:line="49" pos:column="101"/></operator> <literal type="string" pos:line="49" pos:column="96">"'"<pos:position pos:line="49" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="101"/></expr_stmt>
                <continue pos:line="50" pos:column="17">continue;<pos:position pos:line="50" pos:column="26"/></continue>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="52" pos:column="13">na<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">++<pos:position pos:line="52" pos:column="17"/></operator></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">IpcacheStats<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">.<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="26">rr_a<pos:position pos:line="53" pos:column="30"/></name></name><operator pos:line="53" pos:column="30">++<pos:position pos:line="53" pos:column="32"/></operator></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
            <continue pos:line="54" pos:column="13">continue;<pos:position pos:line="54" pos:column="22"/></continue>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="57" pos:column="9">/* With A and AAAA, the CNAME does not necessarily come with additional records to use. */</comment>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">answers<pos:position pos:line="58" pos:column="20"/></name><index pos:line="58" pos:column="20">[<expr><name pos:line="58" pos:column="21">k<pos:position pos:line="58" pos:column="22"/></name></expr>]<pos:position pos:line="58" pos:column="23"/></index></name><operator pos:line="58" pos:column="23">.<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="24">type<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">==<pos:position pos:line="58" pos:column="31"/></operator> <name pos:line="58" pos:column="32">RFC1035_TYPE_CNAME<pos:position pos:line="58" pos:column="50"/></name></expr>)<pos:position pos:line="58" pos:column="51"/></condition><then pos:line="58" pos:column="51"> <block pos:line="58" pos:column="52">{
            <expr_stmt><expr><name pos:line="59" pos:column="13">cname_found<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator><literal type="number" pos:line="59" pos:column="25">1<pos:position pos:line="59" pos:column="26"/></literal></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">IpcacheStats<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">.<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="26">rr_cname<pos:position pos:line="60" pos:column="34"/></name></name><operator pos:line="60" pos:column="34">++<pos:position pos:line="60" pos:column="36"/></operator></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>

<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><name pos:line="62" pos:column="5">DNS_CNAME<pos:position pos:line="62" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">debugs<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="number" pos:line="63" pos:column="20">14<pos:position pos:line="63" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="24">5<pos:position pos:line="63" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"ipcacheParse: "<pos:position pos:line="63" pos:column="43"/></literal> <operator pos:line="63" pos:column="44">&lt;&lt;<pos:position pos:line="63" pos:column="52"/></operator> <name pos:line="63" pos:column="47">name<pos:position pos:line="63" pos:column="51"/></name> <operator pos:line="63" pos:column="52">&lt;&lt;<pos:position pos:line="63" pos:column="60"/></operator> <literal type="string" pos:line="63" pos:column="55">" CNAME "<pos:position pos:line="63" pos:column="64"/></literal> <operator pos:line="63" pos:column="65">&lt;&lt;<pos:position pos:line="63" pos:column="73"/></operator> <name><name pos:line="63" pos:column="68">answers<pos:position pos:line="63" pos:column="75"/></name><index pos:line="63" pos:column="75">[<expr><name pos:line="63" pos:column="76">k<pos:position pos:line="63" pos:column="77"/></name></expr>]<pos:position pos:line="63" pos:column="78"/></index></name><operator pos:line="63" pos:column="78">.<pos:position pos:line="63" pos:column="79"/></operator><name pos:line="63" pos:column="79">rdata<pos:position pos:line="63" pos:column="84"/></name> <operator pos:line="63" pos:column="85">&lt;&lt;<pos:position pos:line="63" pos:column="93"/></operator> <literal type="string" pos:line="63" pos:column="88">" (checking destination: "<pos:position pos:line="63" pos:column="114"/></literal> <operator pos:line="63" pos:column="115">&lt;&lt;<pos:position pos:line="63" pos:column="123"/></operator> <name pos:line="63" pos:column="118">i<pos:position pos:line="63" pos:column="119"/></name> <operator pos:line="63" pos:column="120">&lt;&lt;<pos:position pos:line="63" pos:column="128"/></operator> <literal type="string" pos:line="63" pos:column="123">")."<pos:position pos:line="63" pos:column="127"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="129"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="64" pos:column="13">const<pos:position pos:line="64" pos:column="18"/></specifier> <name pos:line="64" pos:column="19">ipcache_addrs<pos:position pos:line="64" pos:column="32"/></name> <modifier pos:line="64" pos:column="33">*<pos:position pos:line="64" pos:column="34"/></modifier></type><name pos:line="64" pos:column="34">res<pos:position pos:line="64" pos:column="37"/></name> <init pos:line="64" pos:column="38">= <expr><call><name pos:line="64" pos:column="40">ipcache_gethostbyname<pos:position pos:line="64" pos:column="61"/></name><argument_list pos:line="64" pos:column="61">(<argument><expr><name><name pos:line="64" pos:column="62">answers<pos:position pos:line="64" pos:column="69"/></name><index pos:line="64" pos:column="69">[<expr><name pos:line="64" pos:column="70">k<pos:position pos:line="64" pos:column="71"/></name></expr>]<pos:position pos:line="64" pos:column="72"/></index></name><operator pos:line="64" pos:column="72">.<pos:position pos:line="64" pos:column="73"/></operator><name pos:line="64" pos:column="73">rdata<pos:position pos:line="64" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="80">0<pos:position pos:line="64" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="83"/></decl_stmt>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name pos:line="65" pos:column="17">res<pos:position pos:line="65" pos:column="20"/></name></expr>)<pos:position pos:line="65" pos:column="21"/></condition><then pos:line="65" pos:column="21"> <block pos:line="65" pos:column="22">{
                <expr_stmt><expr><name pos:line="66" pos:column="17">na<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">+=<pos:position pos:line="66" pos:column="22"/></operator> <name><name pos:line="66" pos:column="23">res<pos:position pos:line="66" pos:column="26"/></name><operator pos:line="66" pos:column="26">-&gt;<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="28">count<pos:position pos:line="66" pos:column="33"/></name></name></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">debugs<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><literal type="number" pos:line="67" pos:column="24">14<pos:position pos:line="67" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="28">5<pos:position pos:line="67" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="31">"ipcacheParse: CNAME "<pos:position pos:line="67" pos:column="53"/></literal> <operator pos:line="67" pos:column="54">&lt;&lt;<pos:position pos:line="67" pos:column="62"/></operator> <name><name pos:line="67" pos:column="57">answers<pos:position pos:line="67" pos:column="64"/></name><index pos:line="67" pos:column="64">[<expr><name pos:line="67" pos:column="65">k<pos:position pos:line="67" pos:column="66"/></name></expr>]<pos:position pos:line="67" pos:column="67"/></index></name><operator pos:line="67" pos:column="67">.<pos:position pos:line="67" pos:column="68"/></operator><name pos:line="67" pos:column="68">rdata<pos:position pos:line="67" pos:column="73"/></name> <operator pos:line="67" pos:column="74">&lt;&lt;<pos:position pos:line="67" pos:column="82"/></operator> <literal type="string" pos:line="67" pos:column="77">" already has "<pos:position pos:line="67" pos:column="92"/></literal> <operator pos:line="67" pos:column="93">&lt;&lt;<pos:position pos:line="67" pos:column="101"/></operator> <name><name pos:line="67" pos:column="96">res<pos:position pos:line="67" pos:column="99"/></name><operator pos:line="67" pos:column="99">-&gt;<pos:position pos:line="67" pos:column="104"/></operator><name pos:line="67" pos:column="101">count<pos:position pos:line="67" pos:column="106"/></name></name> <operator pos:line="67" pos:column="107">&lt;&lt;<pos:position pos:line="67" pos:column="115"/></operator> <literal type="string" pos:line="67" pos:column="110">" IPs cached."<pos:position pos:line="67" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="126"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></then> <else pos:line="68" pos:column="15">else <block pos:line="68" pos:column="20">{
                <comment type="block" pos:line="69" pos:column="17">/* keep going on this, but flag the fact that we need to wait for a CNAME lookup to finish */</comment>
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">debugs<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><literal type="number" pos:line="70" pos:column="24">14<pos:position pos:line="70" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="28">5<pos:position pos:line="70" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="31">"ipcacheParse: CNAME "<pos:position pos:line="70" pos:column="53"/></literal> <operator pos:line="70" pos:column="54">&lt;&lt;<pos:position pos:line="70" pos:column="62"/></operator> <name><name pos:line="70" pos:column="57">answers<pos:position pos:line="70" pos:column="64"/></name><index pos:line="70" pos:column="64">[<expr><name pos:line="70" pos:column="65">k<pos:position pos:line="70" pos:column="66"/></name></expr>]<pos:position pos:line="70" pos:column="67"/></index></name><operator pos:line="70" pos:column="67">.<pos:position pos:line="70" pos:column="68"/></operator><name pos:line="70" pos:column="68">rdata<pos:position pos:line="70" pos:column="73"/></name> <operator pos:line="70" pos:column="74">&lt;&lt;<pos:position pos:line="70" pos:column="82"/></operator> <literal type="string" pos:line="70" pos:column="77">" has no IPs! Recursing."<pos:position pos:line="70" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="104"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">ipcache_nbgethostbyname<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name><name pos:line="71" pos:column="41">answers<pos:position pos:line="71" pos:column="48"/></name><index pos:line="71" pos:column="48">[<expr><name pos:line="71" pos:column="49">k<pos:position pos:line="71" pos:column="50"/></name></expr>]<pos:position pos:line="71" pos:column="51"/></index></name><operator pos:line="71" pos:column="51">.<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="52">rdata<pos:position pos:line="71" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="59">ipcacheHandleCnameRecurse<pos:position pos:line="71" pos:column="84"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="86">new<pos:position pos:line="71" pos:column="89"/></operator> <call><name pos:line="71" pos:column="90">generic_cbdata<pos:position pos:line="71" pos:column="104"/></name><argument_list pos:line="71" pos:column="104">(<argument><expr><name pos:line="71" pos:column="105">i<pos:position pos:line="71" pos:column="106"/></name></expr></argument>)<pos:position pos:line="71" pos:column="107"/></argument_list></call></expr></argument> )<pos:position pos:line="71" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="110"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="72" pos:column="17">i<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">cname_wait<pos:position pos:line="72" pos:column="30"/></name></name><operator pos:line="72" pos:column="30">++<pos:position pos:line="72" pos:column="32"/></operator></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="73" pos:column="14"/></block></else></if>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="74" pos:column="8">/* DNS_CNAME */</comment>

            <continue pos:line="76" pos:column="13">continue;<pos:position pos:line="76" pos:column="22"/></continue>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="79" pos:column="9">// otherwise its an unknown RR. debug at level 9 since we usually want to ignore these and they are common.</comment>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">debugs<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><literal type="number" pos:line="80" pos:column="16">14<pos:position pos:line="80" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="20">9<pos:position pos:line="80" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="23">HERE<pos:position pos:line="80" pos:column="27"/></name> <operator pos:line="80" pos:column="28">&lt;&lt;<pos:position pos:line="80" pos:column="36"/></operator> <literal type="string" pos:line="80" pos:column="31">"Unknown RR type received: type="<pos:position pos:line="80" pos:column="64"/></literal> <operator pos:line="80" pos:column="65">&lt;&lt;<pos:position pos:line="80" pos:column="73"/></operator> <name><name pos:line="80" pos:column="68">answers<pos:position pos:line="80" pos:column="75"/></name><index pos:line="80" pos:column="75">[<expr><name pos:line="80" pos:column="76">k<pos:position pos:line="80" pos:column="77"/></name></expr>]<pos:position pos:line="80" pos:column="78"/></index></name><operator pos:line="80" pos:column="78">.<pos:position pos:line="80" pos:column="79"/></operator><name pos:line="80" pos:column="79">type<pos:position pos:line="80" pos:column="83"/></name> <operator pos:line="80" pos:column="84">&lt;&lt;<pos:position pos:line="80" pos:column="92"/></operator> <literal type="string" pos:line="80" pos:column="87">" starting at "<pos:position pos:line="80" pos:column="102"/></literal> <operator pos:line="80" pos:column="103">&lt;&lt;<pos:position pos:line="80" pos:column="111"/></operator> <operator pos:line="80" pos:column="106">&amp;<pos:position pos:line="80" pos:column="111"/></operator><operator pos:line="80" pos:column="107">(<pos:position pos:line="80" pos:column="108"/></operator><name><name pos:line="80" pos:column="108">answers<pos:position pos:line="80" pos:column="115"/></name><index pos:line="80" pos:column="115">[<expr><name pos:line="80" pos:column="116">k<pos:position pos:line="80" pos:column="117"/></name></expr>]<pos:position pos:line="80" pos:column="118"/></index></name><operator pos:line="80" pos:column="118">)<pos:position pos:line="80" pos:column="119"/></operator></expr></argument> )<pos:position pos:line="80" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="122"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></for>

<cpp:if pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">if<pos:position pos:line="83" pos:column="4"/></cpp:directive> <expr><name pos:line="83" pos:column="5">DNS_CNAME<pos:position pos:line="83" pos:column="14"/></name></expr></cpp:if>
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><name pos:line="84" pos:column="9">na<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">==<pos:position pos:line="84" pos:column="14"/></operator> <literal type="number" pos:line="84" pos:column="15">0<pos:position pos:line="84" pos:column="16"/></literal> <operator pos:line="84" pos:column="17">&amp;&amp;<pos:position pos:line="84" pos:column="27"/></operator> <name><name pos:line="84" pos:column="20">i<pos:position pos:line="84" pos:column="21"/></name><operator pos:line="84" pos:column="21">-&gt;<pos:position pos:line="84" pos:column="26"/></operator><name pos:line="84" pos:column="23">cname_wait<pos:position pos:line="84" pos:column="33"/></name></name> <operator pos:line="84" pos:column="34">&gt;<pos:position pos:line="84" pos:column="38"/></operator><literal type="number" pos:line="84" pos:column="35">0<pos:position pos:line="84" pos:column="36"/></literal></expr> )<pos:position pos:line="84" pos:column="38"/></condition><then pos:line="84" pos:column="38"> <block pos:line="84" pos:column="39">{
        <comment type="block" pos:line="85" pos:column="9">/* don't set any error message (yet). Allow recursion to do its work first. */</comment>
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">IpcacheStats<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">.<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">cname_only<pos:position pos:line="86" pos:column="32"/></name></name><operator pos:line="86" pos:column="32">++<pos:position pos:line="86" pos:column="34"/></operator></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
        <return pos:line="87" pos:column="9">return <expr><literal type="number" pos:line="87" pos:column="16">0<pos:position pos:line="87" pos:column="17"/></literal></expr>;<pos:position pos:line="87" pos:column="18"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="89" pos:column="8">/* DNS_CNAME */</comment>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name pos:line="91" pos:column="9">na<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">==<pos:position pos:line="91" pos:column="14"/></operator> <literal type="number" pos:line="91" pos:column="15">0<pos:position pos:line="91" pos:column="16"/></literal></expr>)<pos:position pos:line="91" pos:column="17"/></condition><then pos:line="91" pos:column="17"> <block pos:line="91" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">debugs<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument><expr><literal type="number" pos:line="92" pos:column="16">14<pos:position pos:line="92" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="20">1<pos:position pos:line="92" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="23">"ipcacheParse: No Address records in response to '"<pos:position pos:line="92" pos:column="74"/></literal> <operator pos:line="92" pos:column="75">&lt;&lt;<pos:position pos:line="92" pos:column="83"/></operator> <name pos:line="92" pos:column="78">name<pos:position pos:line="92" pos:column="82"/></name> <operator pos:line="92" pos:column="83">&lt;&lt;<pos:position pos:line="92" pos:column="91"/></operator> <literal type="string" pos:line="92" pos:column="86">"'"<pos:position pos:line="92" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">i<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">error_message<pos:position pos:line="93" pos:column="25"/></name></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <call><name pos:line="93" pos:column="28">xstrdup<pos:position pos:line="93" pos:column="35"/></name><argument_list pos:line="93" pos:column="35">(<argument><expr><literal type="string" pos:line="93" pos:column="36">"No Address records"<pos:position pos:line="93" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="58"/></expr_stmt>
        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">cname_found<pos:position pos:line="94" pos:column="24"/></name></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="13">IpcacheStats<pos:position pos:line="95" pos:column="25"/></name><operator pos:line="95" pos:column="25">.<pos:position pos:line="95" pos:column="26"/></operator><name pos:line="95" pos:column="26">cname_only<pos:position pos:line="95" pos:column="36"/></name></name><operator pos:line="95" pos:column="36">++<pos:position pos:line="95" pos:column="38"/></operator></expr>;<pos:position pos:line="95" pos:column="39"/></expr_stmt></block></then></if>
        <return pos:line="96" pos:column="9">return <expr><literal type="number" pos:line="96" pos:column="16">0<pos:position pos:line="96" pos:column="17"/></literal></expr>;<pos:position pos:line="96" pos:column="18"/></return>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="99" pos:column="5">i<pos:position pos:line="99" pos:column="6"/></name><operator pos:line="99" pos:column="6">-&gt;<pos:position pos:line="99" pos:column="11"/></operator><name pos:line="99" pos:column="8">addrs<pos:position pos:line="99" pos:column="13"/></name><operator pos:line="99" pos:column="13">.<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="14">in_addrs<pos:position pos:line="99" pos:column="22"/></name></name> <operator pos:line="99" pos:column="23">=<pos:position pos:line="99" pos:column="24"/></operator> <operator pos:line="99" pos:column="25">(<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">IpAddress<pos:position pos:line="99" pos:column="35"/></name> <operator pos:line="99" pos:column="36">*<pos:position pos:line="99" pos:column="37"/></operator><operator pos:line="99" pos:column="37">)<pos:position pos:line="99" pos:column="38"/></operator><call><name pos:line="99" pos:column="38">xcalloc<pos:position pos:line="99" pos:column="45"/></name><argument_list pos:line="99" pos:column="45">(<argument><expr><name pos:line="99" pos:column="46">na<pos:position pos:line="99" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="50">sizeof<argument_list pos:line="99" pos:column="56">(<argument><expr><name pos:line="99" pos:column="57">IpAddress<pos:position pos:line="99" pos:column="66"/></name></expr></argument>)<pos:position pos:line="99" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="69"/></expr_stmt>
    <for pos:line="100" pos:column="5">for <control pos:line="100" pos:column="9">(<init><decl><type><name pos:line="100" pos:column="10">int<pos:position pos:line="100" pos:column="13"/></name></type> <name pos:line="100" pos:column="14">l<pos:position pos:line="100" pos:column="15"/></name> <init pos:line="100" pos:column="16">= <expr><literal type="number" pos:line="100" pos:column="18">0<pos:position pos:line="100" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="100" pos:column="20"/></init> <condition><expr><name pos:line="100" pos:column="21">l<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">&lt;<pos:position pos:line="100" pos:column="27"/></operator> <name pos:line="100" pos:column="25">na<pos:position pos:line="100" pos:column="27"/></name></expr>;<pos:position pos:line="100" pos:column="28"/></condition> <incr><expr><name pos:line="100" pos:column="29">l<pos:position pos:line="100" pos:column="30"/></name><operator pos:line="100" pos:column="30">++<pos:position pos:line="100" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="100" pos:column="33"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="101" pos:column="9">i<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">-&gt;<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="12">addrs<pos:position pos:line="101" pos:column="17"/></name><operator pos:line="101" pos:column="17">.<pos:position pos:line="101" pos:column="18"/></operator><name pos:line="101" pos:column="18">in_addrs<pos:position pos:line="101" pos:column="26"/></name><index pos:line="101" pos:column="26">[<expr><name pos:line="101" pos:column="27">l<pos:position pos:line="101" pos:column="28"/></name></expr>]<pos:position pos:line="101" pos:column="29"/></index></name><operator pos:line="101" pos:column="29">.<pos:position pos:line="101" pos:column="30"/></operator><call><name pos:line="101" pos:column="30">SetEmpty<pos:position pos:line="101" pos:column="38"/></name><argument_list pos:line="101" pos:column="38">()<pos:position pos:line="101" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt></block></for> <comment type="line" pos:line="101" pos:column="42">// perform same init actions as constructor would.</comment>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">i<pos:position pos:line="102" pos:column="6"/></name><operator pos:line="102" pos:column="6">-&gt;<pos:position pos:line="102" pos:column="11"/></operator><name pos:line="102" pos:column="8">addrs<pos:position pos:line="102" pos:column="13"/></name><operator pos:line="102" pos:column="13">.<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="14">bad_mask<pos:position pos:line="102" pos:column="22"/></name></name> <operator pos:line="102" pos:column="23">=<pos:position pos:line="102" pos:column="24"/></operator> <operator pos:line="102" pos:column="25">(<pos:position pos:line="102" pos:column="26"/></operator><name pos:line="102" pos:column="26">unsigned<pos:position pos:line="102" pos:column="34"/></name> <name pos:line="102" pos:column="35">char<pos:position pos:line="102" pos:column="39"/></name> <operator pos:line="102" pos:column="40">*<pos:position pos:line="102" pos:column="41"/></operator><operator pos:line="102" pos:column="41">)<pos:position pos:line="102" pos:column="42"/></operator><call><name pos:line="102" pos:column="42">xcalloc<pos:position pos:line="102" pos:column="49"/></name><argument_list pos:line="102" pos:column="49">(<argument><expr><name pos:line="102" pos:column="50">na<pos:position pos:line="102" pos:column="52"/></name></expr></argument>, <argument><expr pos:line="102" pos:column="54">sizeof<operator pos:line="102" pos:column="60">(<pos:position pos:line="102" pos:column="61"/></operator><name pos:line="102" pos:column="61">unsigned<pos:position pos:line="102" pos:column="69"/></name> <name pos:line="102" pos:column="70">char<pos:position pos:line="102" pos:column="74"/></name><operator pos:line="102" pos:column="74">)<pos:position pos:line="102" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="102" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="77"/></expr_stmt>

    <for pos:line="104" pos:column="5">for <control pos:line="104" pos:column="9">(<init><expr><name pos:line="104" pos:column="10">j<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <literal type="number" pos:line="104" pos:column="14">0<pos:position pos:line="104" pos:column="15"/></literal></expr><operator pos:line="104" pos:column="15">,<pos:position pos:line="104" pos:column="16"/></operator> <expr><name pos:line="104" pos:column="17">k<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">=<pos:position pos:line="104" pos:column="20"/></operator> <literal type="number" pos:line="104" pos:column="21">0<pos:position pos:line="104" pos:column="22"/></literal></expr>;<pos:position pos:line="104" pos:column="23"/></init> <condition><expr><name pos:line="104" pos:column="24">k<pos:position pos:line="104" pos:column="25"/></name> <operator pos:line="104" pos:column="26">&lt;<pos:position pos:line="104" pos:column="30"/></operator> <name pos:line="104" pos:column="28">nr<pos:position pos:line="104" pos:column="30"/></name></expr>;<pos:position pos:line="104" pos:column="31"/></condition> <incr><expr><name pos:line="104" pos:column="32">k<pos:position pos:line="104" pos:column="33"/></name><operator pos:line="104" pos:column="33">++<pos:position pos:line="104" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="104" pos:column="36"/></control> <block pos:line="104" pos:column="37">{

        <if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name><name pos:line="106" pos:column="13">answers<pos:position pos:line="106" pos:column="20"/></name><index pos:line="106" pos:column="20">[<expr><name pos:line="106" pos:column="21">k<pos:position pos:line="106" pos:column="22"/></name></expr>]<pos:position pos:line="106" pos:column="23"/></index></name><operator pos:line="106" pos:column="23">.<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="24">type<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">==<pos:position pos:line="106" pos:column="31"/></operator> <name pos:line="106" pos:column="32">RFC1035_TYPE_A<pos:position pos:line="106" pos:column="46"/></name></expr>)<pos:position pos:line="106" pos:column="47"/></condition><then pos:line="106" pos:column="47"> <block pos:line="106" pos:column="48">{
            <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><name><name pos:line="107" pos:column="17">answers<pos:position pos:line="107" pos:column="24"/></name><index pos:line="107" pos:column="24">[<expr><name pos:line="107" pos:column="25">k<pos:position pos:line="107" pos:column="26"/></name></expr>]<pos:position pos:line="107" pos:column="27"/></index></name><operator pos:line="107" pos:column="27">.<pos:position pos:line="107" pos:column="28"/></operator><name pos:line="107" pos:column="28">rdlength<pos:position pos:line="107" pos:column="36"/></name> <operator pos:line="107" pos:column="37">!=<pos:position pos:line="107" pos:column="39"/></operator> <sizeof pos:line="107" pos:column="40">sizeof<argument_list pos:line="107" pos:column="46">(<argument><expr pos:line="107" pos:column="47">struct <name pos:line="107" pos:column="54">in_addr<pos:position pos:line="107" pos:column="61"/></name></expr></argument>)<pos:position pos:line="107" pos:column="62"/></argument_list></sizeof></expr>)<pos:position pos:line="107" pos:column="63"/></condition><then pos:line="107" pos:column="63">
                <block type="pseudo"><continue pos:line="108" pos:column="17">continue;<pos:position pos:line="108" pos:column="26"/></continue></block></then></if>

            <decl_stmt><decl><type><name><name pos:line="110" pos:column="13">struct<pos:position pos:line="110" pos:column="19"/></name> <name pos:line="110" pos:column="20">in_addr<pos:position pos:line="110" pos:column="27"/></name></name></type> <name pos:line="110" pos:column="28">temp<pos:position pos:line="110" pos:column="32"/></name></decl>;<pos:position pos:line="110" pos:column="33"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">xmemcpy<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><operator pos:line="111" pos:column="21">&amp;<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="22">temp<pos:position pos:line="111" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="28">answers<pos:position pos:line="111" pos:column="35"/></name><index pos:line="111" pos:column="35">[<expr><name pos:line="111" pos:column="36">k<pos:position pos:line="111" pos:column="37"/></name></expr>]<pos:position pos:line="111" pos:column="38"/></index></name><operator pos:line="111" pos:column="38">.<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="39">rdata<pos:position pos:line="111" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="46">sizeof<argument_list pos:line="111" pos:column="52">(<argument><expr pos:line="111" pos:column="53">struct <name pos:line="111" pos:column="60">in_addr<pos:position pos:line="111" pos:column="67"/></name></expr></argument>)<pos:position pos:line="111" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="111" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="112" pos:column="13">i<pos:position pos:line="112" pos:column="14"/></name><operator pos:line="112" pos:column="14">-&gt;<pos:position pos:line="112" pos:column="19"/></operator><name pos:line="112" pos:column="16">addrs<pos:position pos:line="112" pos:column="21"/></name><operator pos:line="112" pos:column="21">.<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="22">in_addrs<pos:position pos:line="112" pos:column="30"/></name><index pos:line="112" pos:column="30">[<expr><name pos:line="112" pos:column="31">j<pos:position pos:line="112" pos:column="32"/></name></expr>]<pos:position pos:line="112" pos:column="33"/></index></name> <operator pos:line="112" pos:column="34">=<pos:position pos:line="112" pos:column="35"/></operator> <name pos:line="112" pos:column="36">temp<pos:position pos:line="112" pos:column="40"/></name></expr>;<pos:position pos:line="112" pos:column="41"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="114" pos:column="13">debugs<pos:position pos:line="114" pos:column="19"/></name><argument_list pos:line="114" pos:column="19">(<argument><expr><literal type="number" pos:line="114" pos:column="20">14<pos:position pos:line="114" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="24">3<pos:position pos:line="114" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="27">"ipcacheParse: "<pos:position pos:line="114" pos:column="43"/></literal> <operator pos:line="114" pos:column="44">&lt;&lt;<pos:position pos:line="114" pos:column="52"/></operator> <name pos:line="114" pos:column="47">name<pos:position pos:line="114" pos:column="51"/></name> <operator pos:line="114" pos:column="52">&lt;&lt;<pos:position pos:line="114" pos:column="60"/></operator> <literal type="string" pos:line="114" pos:column="55">" #"<pos:position pos:line="114" pos:column="59"/></literal> <operator pos:line="114" pos:column="60">&lt;&lt;<pos:position pos:line="114" pos:column="68"/></operator> <name pos:line="114" pos:column="63">j<pos:position pos:line="114" pos:column="64"/></name> <operator pos:line="114" pos:column="65">&lt;&lt;<pos:position pos:line="114" pos:column="73"/></operator> <literal type="string" pos:line="114" pos:column="68">" "<pos:position pos:line="114" pos:column="71"/></literal> <operator pos:line="114" pos:column="72">&lt;&lt;<pos:position pos:line="114" pos:column="80"/></operator> <name><name pos:line="114" pos:column="75">i<pos:position pos:line="114" pos:column="76"/></name><operator pos:line="114" pos:column="76">-&gt;<pos:position pos:line="114" pos:column="81"/></operator><name pos:line="114" pos:column="78">addrs<pos:position pos:line="114" pos:column="83"/></name><operator pos:line="114" pos:column="83">.<pos:position pos:line="114" pos:column="84"/></operator><name pos:line="114" pos:column="84">in_addrs<pos:position pos:line="114" pos:column="92"/></name><index pos:line="114" pos:column="92">[<expr><name pos:line="114" pos:column="93">j<pos:position pos:line="114" pos:column="94"/></name></expr>]<pos:position pos:line="114" pos:column="95"/></index></name></expr></argument>)<pos:position pos:line="114" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><name pos:line="115" pos:column="13">j<pos:position pos:line="115" pos:column="14"/></name><operator pos:line="115" pos:column="14">++<pos:position pos:line="115" pos:column="16"/></operator></expr>;<pos:position pos:line="115" pos:column="17"/></expr_stmt>

        }<pos:position pos:line="117" pos:column="10"/></block></then> <elseif pos:line="117" pos:column="11">else <if pos:line="117" pos:column="16">if <condition pos:line="117" pos:column="19">(<expr><name><name pos:line="117" pos:column="20">Ip<pos:position pos:line="117" pos:column="22"/></name><operator pos:line="117" pos:column="22">::<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="24">EnableIpv6<pos:position pos:line="117" pos:column="34"/></name></name> <operator pos:line="117" pos:column="35">&amp;&amp;<pos:position pos:line="117" pos:column="45"/></operator> <name><name pos:line="117" pos:column="38">answers<pos:position pos:line="117" pos:column="45"/></name><index pos:line="117" pos:column="45">[<expr><name pos:line="117" pos:column="46">k<pos:position pos:line="117" pos:column="47"/></name></expr>]<pos:position pos:line="117" pos:column="48"/></index></name><operator pos:line="117" pos:column="48">.<pos:position pos:line="117" pos:column="49"/></operator><name pos:line="117" pos:column="49">type<pos:position pos:line="117" pos:column="53"/></name> <operator pos:line="117" pos:column="54">==<pos:position pos:line="117" pos:column="56"/></operator> <name pos:line="117" pos:column="57">RFC1035_TYPE_AAAA<pos:position pos:line="117" pos:column="74"/></name></expr>)<pos:position pos:line="117" pos:column="75"/></condition><then pos:line="117" pos:column="75"> <block pos:line="117" pos:column="76">{
            <if pos:line="118" pos:column="13">if <condition pos:line="118" pos:column="16">(<expr><name><name pos:line="118" pos:column="17">answers<pos:position pos:line="118" pos:column="24"/></name><index pos:line="118" pos:column="24">[<expr><name pos:line="118" pos:column="25">k<pos:position pos:line="118" pos:column="26"/></name></expr>]<pos:position pos:line="118" pos:column="27"/></index></name><operator pos:line="118" pos:column="27">.<pos:position pos:line="118" pos:column="28"/></operator><name pos:line="118" pos:column="28">rdlength<pos:position pos:line="118" pos:column="36"/></name> <operator pos:line="118" pos:column="37">!=<pos:position pos:line="118" pos:column="39"/></operator> <sizeof pos:line="118" pos:column="40">sizeof<argument_list pos:line="118" pos:column="46">(<argument><expr pos:line="118" pos:column="47">struct <name pos:line="118" pos:column="54">in6_addr<pos:position pos:line="118" pos:column="62"/></name></expr></argument>)<pos:position pos:line="118" pos:column="63"/></argument_list></sizeof></expr>)<pos:position pos:line="118" pos:column="64"/></condition><then pos:line="118" pos:column="64">
                <block type="pseudo"><continue pos:line="119" pos:column="17">continue;<pos:position pos:line="119" pos:column="26"/></continue></block></then></if>

            <decl_stmt><decl><type><name><name pos:line="121" pos:column="13">struct<pos:position pos:line="121" pos:column="19"/></name> <name pos:line="121" pos:column="20">in6_addr<pos:position pos:line="121" pos:column="28"/></name></name></type> <name pos:line="121" pos:column="29">temp<pos:position pos:line="121" pos:column="33"/></name></decl>;<pos:position pos:line="121" pos:column="34"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="122" pos:column="13">xmemcpy<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><operator pos:line="122" pos:column="21">&amp;<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="22">temp<pos:position pos:line="122" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="28">answers<pos:position pos:line="122" pos:column="35"/></name><index pos:line="122" pos:column="35">[<expr><name pos:line="122" pos:column="36">k<pos:position pos:line="122" pos:column="37"/></name></expr>]<pos:position pos:line="122" pos:column="38"/></index></name><operator pos:line="122" pos:column="38">.<pos:position pos:line="122" pos:column="39"/></operator><name pos:line="122" pos:column="39">rdata<pos:position pos:line="122" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="46">sizeof<argument_list pos:line="122" pos:column="52">(<argument><expr pos:line="122" pos:column="53">struct <name pos:line="122" pos:column="60">in6_addr<pos:position pos:line="122" pos:column="68"/></name></expr></argument>)<pos:position pos:line="122" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="122" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="123" pos:column="13">i<pos:position pos:line="123" pos:column="14"/></name><operator pos:line="123" pos:column="14">-&gt;<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="16">addrs<pos:position pos:line="123" pos:column="21"/></name><operator pos:line="123" pos:column="21">.<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="22">in_addrs<pos:position pos:line="123" pos:column="30"/></name><index pos:line="123" pos:column="30">[<expr><name pos:line="123" pos:column="31">j<pos:position pos:line="123" pos:column="32"/></name></expr>]<pos:position pos:line="123" pos:column="33"/></index></name> <operator pos:line="123" pos:column="34">=<pos:position pos:line="123" pos:column="35"/></operator> <name pos:line="123" pos:column="36">temp<pos:position pos:line="123" pos:column="40"/></name></expr>;<pos:position pos:line="123" pos:column="41"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="125" pos:column="13">debugs<pos:position pos:line="125" pos:column="19"/></name><argument_list pos:line="125" pos:column="19">(<argument><expr><literal type="number" pos:line="125" pos:column="20">14<pos:position pos:line="125" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="24">3<pos:position pos:line="125" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="27">"ipcacheParse: "<pos:position pos:line="125" pos:column="43"/></literal> <operator pos:line="125" pos:column="44">&lt;&lt;<pos:position pos:line="125" pos:column="52"/></operator> <name pos:line="125" pos:column="47">name<pos:position pos:line="125" pos:column="51"/></name> <operator pos:line="125" pos:column="52">&lt;&lt;<pos:position pos:line="125" pos:column="60"/></operator> <literal type="string" pos:line="125" pos:column="55">" #"<pos:position pos:line="125" pos:column="59"/></literal> <operator pos:line="125" pos:column="60">&lt;&lt;<pos:position pos:line="125" pos:column="68"/></operator> <name pos:line="125" pos:column="63">j<pos:position pos:line="125" pos:column="64"/></name> <operator pos:line="125" pos:column="65">&lt;&lt;<pos:position pos:line="125" pos:column="73"/></operator> <literal type="string" pos:line="125" pos:column="68">" "<pos:position pos:line="125" pos:column="71"/></literal> <operator pos:line="125" pos:column="72">&lt;&lt;<pos:position pos:line="125" pos:column="80"/></operator> <name><name pos:line="125" pos:column="75">i<pos:position pos:line="125" pos:column="76"/></name><operator pos:line="125" pos:column="76">-&gt;<pos:position pos:line="125" pos:column="81"/></operator><name pos:line="125" pos:column="78">addrs<pos:position pos:line="125" pos:column="83"/></name><operator pos:line="125" pos:column="83">.<pos:position pos:line="125" pos:column="84"/></operator><name pos:line="125" pos:column="84">in_addrs<pos:position pos:line="125" pos:column="92"/></name><index pos:line="125" pos:column="92">[<expr><name pos:line="125" pos:column="93">j<pos:position pos:line="125" pos:column="94"/></name></expr>]<pos:position pos:line="125" pos:column="95"/></index></name></expr></argument> )<pos:position pos:line="125" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><name pos:line="126" pos:column="13">j<pos:position pos:line="126" pos:column="14"/></name><operator pos:line="126" pos:column="14">++<pos:position pos:line="126" pos:column="16"/></operator></expr>;<pos:position pos:line="126" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if></elseif>
<cpp:if pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">if<pos:position pos:line="128" pos:column="4"/></cpp:directive> <expr><name pos:line="128" pos:column="5">DNS_CNAME<pos:position pos:line="128" pos:column="14"/></name></expr></cpp:if>
        <elseif pos:line="129" pos:column="9">else <if pos:line="129" pos:column="14">if <condition pos:line="129" pos:column="17">(<expr><name><name pos:line="129" pos:column="18">answers<pos:position pos:line="129" pos:column="25"/></name><index pos:line="129" pos:column="25">[<expr><name pos:line="129" pos:column="26">k<pos:position pos:line="129" pos:column="27"/></name></expr>]<pos:position pos:line="129" pos:column="28"/></index></name><operator pos:line="129" pos:column="28">.<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="29">type<pos:position pos:line="129" pos:column="33"/></name> <operator pos:line="129" pos:column="34">==<pos:position pos:line="129" pos:column="36"/></operator> <name pos:line="129" pos:column="37">RFC1035_TYPE_CNAME<pos:position pos:line="129" pos:column="55"/></name></expr>)<pos:position pos:line="129" pos:column="56"/></condition><then pos:line="129" pos:column="56"> <block pos:line="129" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="130" pos:column="13">debugs<pos:position pos:line="130" pos:column="19"/></name><argument_list pos:line="130" pos:column="19">(<argument><expr><literal type="number" pos:line="130" pos:column="20">14<pos:position pos:line="130" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="24">3<pos:position pos:line="130" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="27">"ipcacheParse: "<pos:position pos:line="130" pos:column="43"/></literal> <operator pos:line="130" pos:column="44">&lt;&lt;<pos:position pos:line="130" pos:column="52"/></operator> <name pos:line="130" pos:column="47">name<pos:position pos:line="130" pos:column="51"/></name> <operator pos:line="130" pos:column="52">&lt;&lt;<pos:position pos:line="130" pos:column="60"/></operator> <literal type="string" pos:line="130" pos:column="55">" #x CNAME "<pos:position pos:line="130" pos:column="67"/></literal> <operator pos:line="130" pos:column="68">&lt;&lt;<pos:position pos:line="130" pos:column="76"/></operator> <name><name pos:line="130" pos:column="71">answers<pos:position pos:line="130" pos:column="78"/></name><index pos:line="130" pos:column="78">[<expr><name pos:line="130" pos:column="79">k<pos:position pos:line="130" pos:column="80"/></name></expr>]<pos:position pos:line="130" pos:column="81"/></index></name><operator pos:line="130" pos:column="81">.<pos:position pos:line="130" pos:column="82"/></operator><name pos:line="130" pos:column="82">rdata<pos:position pos:line="130" pos:column="87"/></name></expr></argument>)<pos:position pos:line="130" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="89"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="131" pos:column="13">const<pos:position pos:line="131" pos:column="18"/></specifier> <name pos:line="131" pos:column="19">ipcache_addrs<pos:position pos:line="131" pos:column="32"/></name> <modifier pos:line="131" pos:column="33">*<pos:position pos:line="131" pos:column="34"/></modifier></type><name pos:line="131" pos:column="34">res<pos:position pos:line="131" pos:column="37"/></name> <init pos:line="131" pos:column="38">= <expr><call><name pos:line="131" pos:column="40">ipcache_gethostbyname<pos:position pos:line="131" pos:column="61"/></name><argument_list pos:line="131" pos:column="61">(<argument><expr><name><name pos:line="131" pos:column="62">answers<pos:position pos:line="131" pos:column="69"/></name><index pos:line="131" pos:column="69">[<expr><name pos:line="131" pos:column="70">k<pos:position pos:line="131" pos:column="71"/></name></expr>]<pos:position pos:line="131" pos:column="72"/></index></name><operator pos:line="131" pos:column="72">.<pos:position pos:line="131" pos:column="73"/></operator><name pos:line="131" pos:column="73">rdata<pos:position pos:line="131" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="80">0<pos:position pos:line="131" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="131" pos:column="83"/></decl_stmt>
            <if pos:line="132" pos:column="13">if <condition pos:line="132" pos:column="16">(<expr><name pos:line="132" pos:column="17">res<pos:position pos:line="132" pos:column="20"/></name></expr>)<pos:position pos:line="132" pos:column="21"/></condition><then pos:line="132" pos:column="21"> <block pos:line="132" pos:column="22">{
                <comment type="block" pos:line="133" pos:column="17">/* NP: the results of *that* query need to be integrated in place of the CNAME */</comment>
                <comment type="block" pos:line="134" pos:column="17">/* Ideally we should also integrate the min TTL of the above IPA's into ttl.   */</comment>
                <for pos:line="135" pos:column="17">for <control pos:line="135" pos:column="21">(<init><decl><type><name pos:line="135" pos:column="22">int<pos:position pos:line="135" pos:column="25"/></name></type> <name pos:line="135" pos:column="26">l<pos:position pos:line="135" pos:column="27"/></name> <init pos:line="135" pos:column="28">= <expr><literal type="number" pos:line="135" pos:column="30">0<pos:position pos:line="135" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="135" pos:column="32"/></init> <condition><expr><name pos:line="135" pos:column="33">l<pos:position pos:line="135" pos:column="34"/></name> <operator pos:line="135" pos:column="35">&lt;<pos:position pos:line="135" pos:column="39"/></operator> <name><name pos:line="135" pos:column="37">res<pos:position pos:line="135" pos:column="40"/></name><operator pos:line="135" pos:column="40">-&gt;<pos:position pos:line="135" pos:column="45"/></operator><name pos:line="135" pos:column="42">count<pos:position pos:line="135" pos:column="47"/></name></name></expr>;<pos:position pos:line="135" pos:column="48"/></condition> <incr><expr><name pos:line="135" pos:column="49">l<pos:position pos:line="135" pos:column="50"/></name><operator pos:line="135" pos:column="50">++<pos:position pos:line="135" pos:column="52"/></operator></expr><operator pos:line="135" pos:column="52">,<pos:position pos:line="135" pos:column="53"/></operator> <expr><name pos:line="135" pos:column="54">j<pos:position pos:line="135" pos:column="55"/></name><operator pos:line="135" pos:column="55">++<pos:position pos:line="135" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="135" pos:column="58"/></control> <block pos:line="135" pos:column="59">{
                    <expr_stmt><expr><name><name pos:line="136" pos:column="21">i<pos:position pos:line="136" pos:column="22"/></name><operator pos:line="136" pos:column="22">-&gt;<pos:position pos:line="136" pos:column="27"/></operator><name pos:line="136" pos:column="24">addrs<pos:position pos:line="136" pos:column="29"/></name><operator pos:line="136" pos:column="29">.<pos:position pos:line="136" pos:column="30"/></operator><name pos:line="136" pos:column="30">in_addrs<pos:position pos:line="136" pos:column="38"/></name><index pos:line="136" pos:column="38">[<expr><name pos:line="136" pos:column="39">j<pos:position pos:line="136" pos:column="40"/></name></expr>]<pos:position pos:line="136" pos:column="41"/></index></name> <operator pos:line="136" pos:column="42">=<pos:position pos:line="136" pos:column="43"/></operator> <name><name pos:line="136" pos:column="44">res<pos:position pos:line="136" pos:column="47"/></name><operator pos:line="136" pos:column="47">-&gt;<pos:position pos:line="136" pos:column="52"/></operator><name pos:line="136" pos:column="49">in_addrs<pos:position pos:line="136" pos:column="57"/></name><index pos:line="136" pos:column="57">[<expr><name pos:line="136" pos:column="58">l<pos:position pos:line="136" pos:column="59"/></name></expr>]<pos:position pos:line="136" pos:column="60"/></index></name></expr>;<pos:position pos:line="136" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="137" pos:column="21">debugs<pos:position pos:line="137" pos:column="27"/></name><argument_list pos:line="137" pos:column="27">(<argument><expr><literal type="number" pos:line="137" pos:column="28">14<pos:position pos:line="137" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="32">3<pos:position pos:line="137" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="35">"ipcacheParse: "<pos:position pos:line="137" pos:column="51"/></literal> <operator pos:line="137" pos:column="52">&lt;&lt;<pos:position pos:line="137" pos:column="60"/></operator> <name pos:line="137" pos:column="55">name<pos:position pos:line="137" pos:column="59"/></name> <operator pos:line="137" pos:column="60">&lt;&lt;<pos:position pos:line="137" pos:column="68"/></operator> <literal type="string" pos:line="137" pos:column="63">" #"<pos:position pos:line="137" pos:column="67"/></literal> <operator pos:line="137" pos:column="68">&lt;&lt;<pos:position pos:line="137" pos:column="76"/></operator> <name pos:line="137" pos:column="71">j<pos:position pos:line="137" pos:column="72"/></name> <operator pos:line="137" pos:column="73">&lt;&lt;<pos:position pos:line="137" pos:column="81"/></operator> <literal type="string" pos:line="137" pos:column="76">" "<pos:position pos:line="137" pos:column="79"/></literal> <operator pos:line="137" pos:column="80">&lt;&lt;<pos:position pos:line="137" pos:column="88"/></operator> <name><name pos:line="137" pos:column="83">i<pos:position pos:line="137" pos:column="84"/></name><operator pos:line="137" pos:column="84">-&gt;<pos:position pos:line="137" pos:column="89"/></operator><name pos:line="137" pos:column="86">addrs<pos:position pos:line="137" pos:column="91"/></name><operator pos:line="137" pos:column="91">.<pos:position pos:line="137" pos:column="92"/></operator><name pos:line="137" pos:column="92">in_addrs<pos:position pos:line="137" pos:column="100"/></name><index pos:line="137" pos:column="100">[<expr><name pos:line="137" pos:column="101">j<pos:position pos:line="137" pos:column="102"/></name></expr>]<pos:position pos:line="137" pos:column="103"/></index></name></expr></argument> )<pos:position pos:line="137" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="106"/></expr_stmt>
                }<pos:position pos:line="138" pos:column="18"/></block></for>
            }<pos:position pos:line="139" pos:column="14"/></block></then> <else pos:line="139" pos:column="15">else <block pos:line="139" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="140" pos:column="17">debugs<pos:position pos:line="140" pos:column="23"/></name><argument_list pos:line="140" pos:column="23">(<argument><expr><literal type="number" pos:line="140" pos:column="24">14<pos:position pos:line="140" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="140" pos:column="28">9<pos:position pos:line="140" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="31">"ipcacheParse: "<pos:position pos:line="140" pos:column="47"/></literal> <operator pos:line="140" pos:column="48">&lt;&lt;<pos:position pos:line="140" pos:column="56"/></operator> <name><name pos:line="140" pos:column="51">answers<pos:position pos:line="140" pos:column="58"/></name><index pos:line="140" pos:column="58">[<expr><name pos:line="140" pos:column="59">k<pos:position pos:line="140" pos:column="60"/></name></expr>]<pos:position pos:line="140" pos:column="61"/></index></name><operator pos:line="140" pos:column="61">.<pos:position pos:line="140" pos:column="62"/></operator><name pos:line="140" pos:column="62">rdata<pos:position pos:line="140" pos:column="67"/></name> <operator pos:line="140" pos:column="68">&lt;&lt;<pos:position pos:line="140" pos:column="76"/></operator> <literal type="string" pos:line="140" pos:column="71">" (CNAME) waiting on A/AAAA records."<pos:position pos:line="140" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="110"/></expr_stmt>
            }<pos:position pos:line="141" pos:column="14"/></block></else></if>
        }<pos:position pos:line="142" pos:column="10"/></block></then></if></elseif></if>
<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif<pos:position pos:line="143" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="143" pos:column="8">/* DNS_CNAME */</comment>

        <if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">ttl<pos:position pos:line="145" pos:column="16"/></name> <operator pos:line="145" pos:column="17">==<pos:position pos:line="145" pos:column="19"/></operator> <literal type="number" pos:line="145" pos:column="20">0<pos:position pos:line="145" pos:column="21"/></literal> <operator pos:line="145" pos:column="22">||<pos:position pos:line="145" pos:column="24"/></operator> <operator pos:line="145" pos:column="25">(<pos:position pos:line="145" pos:column="26"/></operator><name pos:line="145" pos:column="26">int<pos:position pos:line="145" pos:column="29"/></name><operator pos:line="145" pos:column="29">)<pos:position pos:line="145" pos:column="30"/></operator> <name><name pos:line="145" pos:column="31">answers<pos:position pos:line="145" pos:column="38"/></name><index pos:line="145" pos:column="38">[<expr><name pos:line="145" pos:column="39">k<pos:position pos:line="145" pos:column="40"/></name></expr>]<pos:position pos:line="145" pos:column="41"/></index></name><operator pos:line="145" pos:column="41">.<pos:position pos:line="145" pos:column="42"/></operator><name pos:line="145" pos:column="42">ttl<pos:position pos:line="145" pos:column="45"/></name> <operator pos:line="145" pos:column="46">&lt;<pos:position pos:line="145" pos:column="50"/></operator> <name pos:line="145" pos:column="48">ttl<pos:position pos:line="145" pos:column="51"/></name></expr>)<pos:position pos:line="145" pos:column="52"/></condition><then pos:line="145" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="13">ttl<pos:position pos:line="146" pos:column="16"/></name> <operator pos:line="146" pos:column="17">=<pos:position pos:line="146" pos:column="18"/></operator> <name><name pos:line="146" pos:column="19">answers<pos:position pos:line="146" pos:column="26"/></name><index pos:line="146" pos:column="26">[<expr><name pos:line="146" pos:column="27">k<pos:position pos:line="146" pos:column="28"/></name></expr>]<pos:position pos:line="146" pos:column="29"/></index></name><operator pos:line="146" pos:column="29">.<pos:position pos:line="146" pos:column="30"/></operator><name pos:line="146" pos:column="30">ttl<pos:position pos:line="146" pos:column="33"/></name></expr>;<pos:position pos:line="146" pos:column="34"/></expr_stmt></block></then></if>
    }<pos:position pos:line="147" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="149" pos:column="5">assert<pos:position pos:line="149" pos:column="11"/></name><argument_list pos:line="149" pos:column="11">(<argument><expr><name pos:line="149" pos:column="12">j<pos:position pos:line="149" pos:column="13"/></name> <operator pos:line="149" pos:column="14">==<pos:position pos:line="149" pos:column="16"/></operator> <name pos:line="149" pos:column="17">na<pos:position pos:line="149" pos:column="19"/></name></expr></argument>)<pos:position pos:line="149" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="21"/></expr_stmt>

    <if pos:line="151" pos:column="5">if <condition pos:line="151" pos:column="8">(<expr><name pos:line="151" pos:column="9">na<pos:position pos:line="151" pos:column="11"/></name> <operator pos:line="151" pos:column="12">&lt;<pos:position pos:line="151" pos:column="16"/></operator> <literal type="number" pos:line="151" pos:column="14">256<pos:position pos:line="151" pos:column="17"/></literal></expr>)<pos:position pos:line="151" pos:column="18"/></condition><then pos:line="151" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="152" pos:column="9">i<pos:position pos:line="152" pos:column="10"/></name><operator pos:line="152" pos:column="10">-&gt;<pos:position pos:line="152" pos:column="15"/></operator><name pos:line="152" pos:column="12">addrs<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">.<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">count<pos:position pos:line="152" pos:column="23"/></name></name> <operator pos:line="152" pos:column="24">=<pos:position pos:line="152" pos:column="25"/></operator> <operator pos:line="152" pos:column="26">(<pos:position pos:line="152" pos:column="27"/></operator><name pos:line="152" pos:column="27">unsigned<pos:position pos:line="152" pos:column="35"/></name> <name pos:line="152" pos:column="36">char<pos:position pos:line="152" pos:column="40"/></name><operator pos:line="152" pos:column="40">)<pos:position pos:line="152" pos:column="41"/></operator> <name pos:line="152" pos:column="42">na<pos:position pos:line="152" pos:column="44"/></name></expr>;<pos:position pos:line="152" pos:column="45"/></expr_stmt></block></then>
    <else pos:line="153" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="154" pos:column="9">i<pos:position pos:line="154" pos:column="10"/></name><operator pos:line="154" pos:column="10">-&gt;<pos:position pos:line="154" pos:column="15"/></operator><name pos:line="154" pos:column="12">addrs<pos:position pos:line="154" pos:column="17"/></name><operator pos:line="154" pos:column="17">.<pos:position pos:line="154" pos:column="18"/></operator><name pos:line="154" pos:column="18">count<pos:position pos:line="154" pos:column="23"/></name></name> <operator pos:line="154" pos:column="24">=<pos:position pos:line="154" pos:column="25"/></operator> <literal type="number" pos:line="154" pos:column="26">255<pos:position pos:line="154" pos:column="29"/></literal></expr>;<pos:position pos:line="154" pos:column="30"/></expr_stmt></block></else></if>

    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><name pos:line="156" pos:column="9">ttl<pos:position pos:line="156" pos:column="12"/></name> <operator pos:line="156" pos:column="13">&gt;<pos:position pos:line="156" pos:column="17"/></operator> <name><name pos:line="156" pos:column="15">Config<pos:position pos:line="156" pos:column="21"/></name><operator pos:line="156" pos:column="21">.<pos:position pos:line="156" pos:column="22"/></operator><name pos:line="156" pos:column="22">positiveDnsTtl<pos:position pos:line="156" pos:column="36"/></name></name></expr>)<pos:position pos:line="156" pos:column="37"/></condition><then pos:line="156" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="157" pos:column="9">ttl<pos:position pos:line="157" pos:column="12"/></name> <operator pos:line="157" pos:column="13">=<pos:position pos:line="157" pos:column="14"/></operator> <name><name pos:line="157" pos:column="15">Config<pos:position pos:line="157" pos:column="21"/></name><operator pos:line="157" pos:column="21">.<pos:position pos:line="157" pos:column="22"/></operator><name pos:line="157" pos:column="22">positiveDnsTtl<pos:position pos:line="157" pos:column="36"/></name></name></expr>;<pos:position pos:line="157" pos:column="37"/></expr_stmt></block></then></if>

    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><name pos:line="159" pos:column="9">ttl<pos:position pos:line="159" pos:column="12"/></name> <operator pos:line="159" pos:column="13">&lt;<pos:position pos:line="159" pos:column="17"/></operator> <name><name pos:line="159" pos:column="15">Config<pos:position pos:line="159" pos:column="21"/></name><operator pos:line="159" pos:column="21">.<pos:position pos:line="159" pos:column="22"/></operator><name pos:line="159" pos:column="22">negativeDnsTtl<pos:position pos:line="159" pos:column="36"/></name></name></expr>)<pos:position pos:line="159" pos:column="37"/></condition><then pos:line="159" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="9">ttl<pos:position pos:line="160" pos:column="12"/></name> <operator pos:line="160" pos:column="13">=<pos:position pos:line="160" pos:column="14"/></operator> <name><name pos:line="160" pos:column="15">Config<pos:position pos:line="160" pos:column="21"/></name><operator pos:line="160" pos:column="21">.<pos:position pos:line="160" pos:column="22"/></operator><name pos:line="160" pos:column="22">negativeDnsTtl<pos:position pos:line="160" pos:column="36"/></name></name></expr>;<pos:position pos:line="160" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="162" pos:column="5">i<pos:position pos:line="162" pos:column="6"/></name><operator pos:line="162" pos:column="6">-&gt;<pos:position pos:line="162" pos:column="11"/></operator><name pos:line="162" pos:column="8">expires<pos:position pos:line="162" pos:column="15"/></name></name> <operator pos:line="162" pos:column="16">=<pos:position pos:line="162" pos:column="17"/></operator> <name pos:line="162" pos:column="18">squid_curtime<pos:position pos:line="162" pos:column="31"/></name> <operator pos:line="162" pos:column="32">+<pos:position pos:line="162" pos:column="33"/></operator> <name pos:line="162" pos:column="34">ttl<pos:position pos:line="162" pos:column="37"/></name></expr>;<pos:position pos:line="162" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="164" pos:column="5">i<pos:position pos:line="164" pos:column="6"/></name><operator pos:line="164" pos:column="6">-&gt;<pos:position pos:line="164" pos:column="11"/></operator><name pos:line="164" pos:column="8">flags<pos:position pos:line="164" pos:column="13"/></name><operator pos:line="164" pos:column="13">.<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="14">negcached<pos:position pos:line="164" pos:column="23"/></name></name> <operator pos:line="164" pos:column="24">=<pos:position pos:line="164" pos:column="25"/></operator> <literal type="number" pos:line="164" pos:column="26">0<pos:position pos:line="164" pos:column="27"/></literal></expr>;<pos:position pos:line="164" pos:column="28"/></expr_stmt>

<cpp:if pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">if<pos:position pos:line="166" pos:column="4"/></cpp:directive> <expr><name pos:line="166" pos:column="5">DNS_CNAME<pos:position pos:line="166" pos:column="14"/></name></expr></cpp:if>
    <comment type="block" pos:line="167" pos:column="5">/* SPECIAL CASE: may get here IFF CNAME received with Additional records */</comment>
    <comment type="block" pos:line="168" pos:column="5">/*               reurn  0/'wait for further details' value.              */</comment>
    <comment type="block" pos:line="169" pos:column="5">/*               NP: 'No DNS Results' is a return -1 +msg                */</comment>
    <if pos:line="170" pos:column="5">if <condition pos:line="170" pos:column="8">(<expr><name><name pos:line="170" pos:column="9">i<pos:position pos:line="170" pos:column="10"/></name><operator pos:line="170" pos:column="10">-&gt;<pos:position pos:line="170" pos:column="15"/></operator><name pos:line="170" pos:column="12">cname_wait<pos:position pos:line="170" pos:column="22"/></name></name></expr>)<pos:position pos:line="170" pos:column="23"/></condition><then pos:line="170" pos:column="23">
        <block type="pseudo"><return pos:line="171" pos:column="9">return <expr><literal type="number" pos:line="171" pos:column="16">0<pos:position pos:line="171" pos:column="17"/></literal></expr>;<pos:position pos:line="171" pos:column="18"/></return></block></then>
    <else pos:line="172" pos:column="5">else
<cpp:endif pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">endif<pos:position pos:line="173" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="173" pos:column="8">/* DNS_CNAME */</comment>
        <block type="pseudo"><return pos:line="174" pos:column="9">return <expr><name><name pos:line="174" pos:column="16">i<pos:position pos:line="174" pos:column="17"/></name><operator pos:line="174" pos:column="17">-&gt;<pos:position pos:line="174" pos:column="22"/></operator><name pos:line="174" pos:column="19">addrs<pos:position pos:line="174" pos:column="24"/></name><operator pos:line="174" pos:column="24">.<pos:position pos:line="174" pos:column="25"/></operator><name pos:line="174" pos:column="25">count<pos:position pos:line="174" pos:column="30"/></name></name></expr>;<pos:position pos:line="174" pos:column="31"/></return></block></else></if>
}<pos:position pos:line="175" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2279_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HeaderManglers<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">dumpAccess<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">StoreEntry<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">entry<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">name<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list> <specifier pos:line="2" pos:column="66">const<pos:position pos:line="2" pos:column="71"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="25">HDR_ENUM_END<pos:position pos:line="4" pos:column="37"/></name></expr>;<pos:position pos:line="4" pos:column="38"/></condition> <incr><expr><operator pos:line="4" pos:column="39">++<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">i<pos:position pos:line="4" pos:column="42"/></name></expr></incr>)<pos:position pos:line="4" pos:column="43"/></control> <block pos:line="4" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">header_mangler_dump_access<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">entry<pos:position pos:line="5" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">name<pos:position pos:line="5" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="49">known<pos:position pos:line="5" pos:column="54"/></name><index pos:line="5" pos:column="54">[<expr><name pos:line="5" pos:column="55">i<pos:position pos:line="5" pos:column="56"/></name></expr>]<pos:position pos:line="5" pos:column="57"/></index></name></expr></argument>,
                                   <argument><expr><call><name pos:line="6" pos:column="36">httpHeaderNameById<pos:position pos:line="6" pos:column="54"/></name><argument_list pos:line="6" pos:column="54">(<argument><expr><name pos:line="6" pos:column="55">i<pos:position pos:line="6" pos:column="56"/></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></for>

    <typedef pos:line="9" pos:column="5">typedef <type><name><name pos:line="9" pos:column="13">ManglersByName<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">::<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">const_iterator<pos:position pos:line="9" pos:column="43"/></name></name></type> <name pos:line="9" pos:column="44">MBNCI<pos:position pos:line="9" pos:column="49"/></name>;<pos:position pos:line="9" pos:column="50"/></typedef>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><decl><type><name pos:line="10" pos:column="10">MBNCI<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">i<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><call><name><name pos:line="10" pos:column="20">custom<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">begin<pos:position pos:line="10" pos:column="32"/></name></name><argument_list pos:line="10" pos:column="32">()<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></init> <condition><expr><name pos:line="10" pos:column="36">i<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">!=<pos:position pos:line="10" pos:column="40"/></operator> <call><name><name pos:line="10" pos:column="41">custom<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">end<pos:position pos:line="10" pos:column="51"/></name></name><argument_list pos:line="10" pos:column="51">()<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></condition> <incr><expr><operator pos:line="10" pos:column="55">++<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">i<pos:position pos:line="10" pos:column="58"/></name></expr></incr>)<pos:position pos:line="10" pos:column="59"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">header_mangler_dump_access<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">entry<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">name<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="49">i<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">-&gt;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="52">second<pos:position pos:line="11" pos:column="58"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="11" pos:column="60">i<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">-&gt;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="63">first<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">.<pos:position pos:line="11" pos:column="69"/></operator><name pos:line="11" pos:column="69">c_str<pos:position pos:line="11" pos:column="74"/></name></name><argument_list pos:line="11" pos:column="74">()<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">header_mangler_dump_access<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">entry<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">name<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">all<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="50">"All"<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

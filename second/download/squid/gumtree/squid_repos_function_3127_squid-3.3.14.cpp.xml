<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3127_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">errorInitialize<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">err_type<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">text<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">error_page_count<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">ERR_MAX<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">+<pos:position pos:line="6" pos:column="33"/></operator> <call><name><name pos:line="6" pos:column="34">ErrorDynamicPages<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">.<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="52">size<pos:position pos:line="6" pos:column="56"/></name></name><argument_list pos:line="6" pos:column="56">()<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">error_text<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <cast type="static" pos:line="7" pos:column="18">static_cast<argument_list type="generic" pos:line="7" pos:column="29">&lt;<argument><expr><name pos:line="7" pos:column="30">char<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">*<pos:position pos:line="7" pos:column="36"/></operator><operator pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="41"/></argument_list><argument_list pos:line="7" pos:column="38">(<argument><expr><call><name pos:line="7" pos:column="39">xcalloc<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name pos:line="7" pos:column="47">error_page_count<pos:position pos:line="7" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="65">sizeof<argument_list pos:line="7" pos:column="71">(<argument><expr><name pos:line="7" pos:column="72">char<pos:position pos:line="7" pos:column="76"/></name> <operator pos:line="7" pos:column="77">*<pos:position pos:line="7" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></cast></expr>;<pos:position pos:line="7" pos:column="82"/></expr_stmt>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">ERR_NONE<pos:position pos:line="9" pos:column="22"/></name></expr><operator pos:line="9" pos:column="22">,<pos:position pos:line="9" pos:column="23"/></operator> <expr><operator pos:line="9" pos:column="24">++<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">i<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></init> <condition><expr><name pos:line="9" pos:column="29">i<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&lt;<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="33">error_page_count<pos:position pos:line="9" pos:column="49"/></name></expr>;<pos:position pos:line="9" pos:column="50"/></condition> <incr><expr><operator pos:line="9" pos:column="51">++<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="53">i<pos:position pos:line="9" pos:column="54"/></name></expr></incr>)<pos:position pos:line="9" pos:column="55"/></control> <block pos:line="9" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">safe_free<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name><name pos:line="10" pos:column="19">error_text<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><name pos:line="10" pos:column="30">i<pos:position pos:line="10" pos:column="31"/></name></expr>]<pos:position pos:line="10" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">text<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">errorFindHardText<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">i<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <block pos:line="12" pos:column="44">{
            <comment type="block" format="doxygen" pos:line="13" pos:column="13">/**\par
             * Index any hard-coded error text into defaults.
             */</comment>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">error_text<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><name pos:line="16" pos:column="24">i<pos:position pos:line="16" pos:column="25"/></name></expr>]<pos:position pos:line="16" pos:column="26"/></index></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">xstrdup<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">text<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>

        }<pos:position pos:line="18" pos:column="10"/></block></then> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><name pos:line="18" pos:column="20">i<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">&lt;<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="24">ERR_MAX<pos:position pos:line="18" pos:column="31"/></name></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <block pos:line="18" pos:column="33">{
            <comment type="block" format="doxygen" pos:line="19" pos:column="13">/**\par
             * Index precompiled fixed template files from one of two sources:
             *  (a) default language translation directory (error_default_language)
             *  (b) admin specified custom directory (error_directory)
             */</comment>
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">ErrorPageFile<pos:position pos:line="24" pos:column="26"/></name></type> <name pos:line="24" pos:column="27">errTmpl<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name><name pos:line="24" pos:column="35">err_type_str<pos:position pos:line="24" pos:column="47"/></name><index pos:line="24" pos:column="47">[<expr><name pos:line="24" pos:column="48">i<pos:position pos:line="24" pos:column="49"/></name></expr>]<pos:position pos:line="24" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="52">i<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></decl>;<pos:position pos:line="24" pos:column="55"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">error_text<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><name pos:line="25" pos:column="24">i<pos:position pos:line="25" pos:column="25"/></name></expr>]<pos:position pos:line="25" pos:column="26"/></index></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <ternary><condition><expr><call><name><name pos:line="25" pos:column="29">errTmpl<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">loadDefault<pos:position pos:line="25" pos:column="48"/></name></name><argument_list pos:line="25" pos:column="48">()<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr> ?<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52"> <expr><call><name pos:line="25" pos:column="53">xstrdup<pos:position pos:line="25" pos:column="60"/></name><argument_list pos:line="25" pos:column="60">(<argument><expr><call><name><name pos:line="25" pos:column="61">errTmpl<pos:position pos:line="25" pos:column="68"/></name><operator pos:line="25" pos:column="68">.<pos:position pos:line="25" pos:column="69"/></operator><name pos:line="25" pos:column="69">text<pos:position pos:line="25" pos:column="73"/></name></name><argument_list pos:line="25" pos:column="73">()<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr> <pos:position pos:line="25" pos:column="77"/></then><else pos:line="25" pos:column="77">: <expr><name pos:line="25" pos:column="79">NULL<pos:position pos:line="25" pos:column="83"/></name></expr></else></ternary></expr>;<pos:position pos:line="25" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
            <comment type="block" format="doxygen" pos:line="27" pos:column="13">/** \par
             * Index any unknown file names used by deny_info.
             */</comment>
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">ErrorDynamicPageInfo<pos:position pos:line="30" pos:column="33"/></name> <modifier pos:line="30" pos:column="34">*<pos:position pos:line="30" pos:column="35"/></modifier></type><name pos:line="30" pos:column="35">info<pos:position pos:line="30" pos:column="39"/></name> <init pos:line="30" pos:column="40">= <expr><name><name pos:line="30" pos:column="42">ErrorDynamicPages<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">.<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="60">items<pos:position pos:line="30" pos:column="65"/></name><index pos:line="30" pos:column="65">[<expr><name pos:line="30" pos:column="66">i<pos:position pos:line="30" pos:column="67"/></name> <operator pos:line="30" pos:column="68">-<pos:position pos:line="30" pos:column="69"/></operator> <name pos:line="30" pos:column="70">ERR_MAX<pos:position pos:line="30" pos:column="77"/></name></expr>]<pos:position pos:line="30" pos:column="78"/></index></name></expr></init></decl>;<pos:position pos:line="30" pos:column="79"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">assert<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">info<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">&amp;&amp;<pos:position pos:line="31" pos:column="35"/></operator> <name><name pos:line="31" pos:column="28">info<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">id<pos:position pos:line="31" pos:column="36"/></name></name> <operator pos:line="31" pos:column="37">==<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="40">i<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">&amp;&amp;<pos:position pos:line="31" pos:column="52"/></operator> <name><name pos:line="31" pos:column="45">info<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">page_name<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>

            <decl_stmt><decl><type><specifier pos:line="33" pos:column="13">const<pos:position pos:line="33" pos:column="18"/></specifier> <name pos:line="33" pos:column="19">char<pos:position pos:line="33" pos:column="23"/></name> <modifier pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></modifier></type><name pos:line="33" pos:column="25">pg<pos:position pos:line="33" pos:column="27"/></name> <init pos:line="33" pos:column="28">= <expr><name><name pos:line="33" pos:column="30">info<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">-&gt;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="36">page_name<pos:position pos:line="33" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="33" pos:column="46"/></decl_stmt>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name><name pos:line="34" pos:column="17">info<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">page_redirect<pos:position pos:line="34" pos:column="36"/></name></name> <operator pos:line="34" pos:column="37">!=<pos:position pos:line="34" pos:column="39"/></operator> <name pos:line="34" pos:column="40">HTTP_STATUS_NONE<pos:position pos:line="34" pos:column="56"/></name></expr>)<pos:position pos:line="34" pos:column="57"/></condition><then pos:line="34" pos:column="57">
                <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">pg<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <name><name pos:line="35" pos:column="22">info<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">page_name<pos:position pos:line="35" pos:column="37"/></name></name> <operator pos:line="35" pos:column="38">+<pos:position pos:line="35" pos:column="39"/></operator><literal type="number" pos:line="35" pos:column="39">4<pos:position pos:line="35" pos:column="40"/></literal></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt></block></then></if>

            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><call><name pos:line="37" pos:column="17">strchr<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">pg<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="28">':'<pos:position pos:line="37" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call> <operator pos:line="37" pos:column="33">==<pos:position pos:line="37" pos:column="35"/></operator> <name pos:line="37" pos:column="36">NULL<pos:position pos:line="37" pos:column="40"/></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
                <comment type="block" format="doxygen" pos:line="38" pos:column="17">/** But only if they are not redirection URL. */</comment>
                <decl_stmt><decl><type><name pos:line="39" pos:column="17">ErrorPageFile<pos:position pos:line="39" pos:column="30"/></name></type> <name pos:line="39" pos:column="31">errTmpl<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><name pos:line="39" pos:column="39">pg<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">ERR_MAX<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></decl>;<pos:position pos:line="39" pos:column="52"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="40" pos:column="17">error_text<pos:position pos:line="40" pos:column="27"/></name><index pos:line="40" pos:column="27">[<expr><name pos:line="40" pos:column="28">i<pos:position pos:line="40" pos:column="29"/></name></expr>]<pos:position pos:line="40" pos:column="30"/></index></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <ternary><condition><expr><call><name><name pos:line="40" pos:column="33">errTmpl<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">.<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">loadDefault<pos:position pos:line="40" pos:column="52"/></name></name><argument_list pos:line="40" pos:column="52">()<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr> ?<pos:position pos:line="40" pos:column="56"/></condition><then pos:line="40" pos:column="56"> <expr><call><name pos:line="40" pos:column="57">xstrdup<pos:position pos:line="40" pos:column="64"/></name><argument_list pos:line="40" pos:column="64">(<argument><expr><call><name><name pos:line="40" pos:column="65">errTmpl<pos:position pos:line="40" pos:column="72"/></name><operator pos:line="40" pos:column="72">.<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="73">text<pos:position pos:line="40" pos:column="77"/></name></name><argument_list pos:line="40" pos:column="77">()<pos:position pos:line="40" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="80"/></argument_list></call></expr> <pos:position pos:line="40" pos:column="81"/></then><else pos:line="40" pos:column="81">: <expr><name pos:line="40" pos:column="83">NULL<pos:position pos:line="40" pos:column="87"/></name></expr></else></ternary></expr>;<pos:position pos:line="40" pos:column="88"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name><name pos:line="45" pos:column="5">error_stylesheet<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">.<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">reset<pos:position pos:line="45" pos:column="27"/></name></name><argument_list pos:line="45" pos:column="27">()<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>

    <comment type="line" pos:line="47" pos:column="5">// look for and load stylesheet into global MemBuf for it.</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">Config<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">.<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">errorStylesheet<pos:position pos:line="48" pos:column="31"/></name></name></expr>)<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32"> <block pos:line="48" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">ErrorPageFile<pos:position pos:line="49" pos:column="22"/></name></type> <name pos:line="49" pos:column="23">tmpl<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><literal type="string" pos:line="49" pos:column="28">"StylesSheet"<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="43">ERR_MAX<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></decl>;<pos:position pos:line="49" pos:column="52"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="50" pos:column="9">tmpl<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">.<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">loadFromFile<pos:position pos:line="50" pos:column="26"/></name></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name><name pos:line="50" pos:column="27">Config<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">.<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="34">errorStylesheet<pos:position pos:line="50" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="51" pos:column="9">error_stylesheet<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">.<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="26">Printf<pos:position pos:line="51" pos:column="32"/></name></name><argument_list pos:line="51" pos:column="32">(<argument><expr><literal type="string" pos:line="51" pos:column="33">"%s"<pos:position pos:line="51" pos:column="37"/></literal></expr></argument>,<argument><expr><call><name><name pos:line="51" pos:column="38">tmpl<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">.<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="43">text<pos:position pos:line="51" pos:column="47"/></name></name><argument_list pos:line="51" pos:column="47">()<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

<cpp:if pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">if<pos:position pos:line="54" pos:column="4"/></cpp:directive> <expr><name pos:line="54" pos:column="5">USE_SSL<pos:position pos:line="54" pos:column="12"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="55" pos:column="5">Ssl<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">::<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">errorDetailInitialize<pos:position pos:line="55" pos:column="31"/></name></name><argument_list pos:line="55" pos:column="31">()<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

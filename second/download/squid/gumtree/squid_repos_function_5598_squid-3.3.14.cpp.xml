<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5598_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">key<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rmsgid<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">smsgid<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">shmid<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">diomsg<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">rmsg<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">diomsg<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">smsg<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">rlen<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">rbuf<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">512<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">sigaction<pos:position pos:line="13" pos:column="21"/></name></name></type> <name pos:line="13" pos:column="22">sa<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">setbuf<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">stdout<pos:position pos:line="14" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">NULL<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">setbuf<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">stderr<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">mypid<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">getpid<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">()<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">4<pos:position pos:line="17" pos:column="13"/></literal> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">argc<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">key<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">atoi<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name><name pos:line="18" pos:column="16">argv<pos:position pos:line="18" pos:column="20"/></name><index pos:line="18" pos:column="20">[<expr><literal type="number" pos:line="18" pos:column="21">1<pos:position pos:line="18" pos:column="22"/></literal></expr>]<pos:position pos:line="18" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">rmsgid<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">msgget<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">key<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="26">0600<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">rmsgid<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">&lt;<pos:position pos:line="21" pos:column="20"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20"> <block pos:line="21" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">perror<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="string" pos:line="22" pos:column="16">"msgget"<pos:position pos:line="22" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">key<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">atoi<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name><name pos:line="26" pos:column="16">argv<pos:position pos:line="26" pos:column="20"/></name><index pos:line="26" pos:column="20">[<expr><literal type="number" pos:line="26" pos:column="21">2<pos:position pos:line="26" pos:column="22"/></literal></expr>]<pos:position pos:line="26" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">smsgid<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">msgget<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">key<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="26">0600<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">smsgid<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">&lt;<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20"> <block pos:line="29" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">perror<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="string" pos:line="30" pos:column="16">"msgget"<pos:position pos:line="30" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">key<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">atoi<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name><name pos:line="34" pos:column="16">argv<pos:position pos:line="34" pos:column="20"/></name><index pos:line="34" pos:column="20">[<expr><literal type="number" pos:line="34" pos:column="21">3<pos:position pos:line="34" pos:column="22"/></literal></expr>]<pos:position pos:line="34" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">shmid<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">shmget<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">key<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="28">0600<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">shmid<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">&lt;<pos:position pos:line="37" pos:column="19"/></operator> <literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19"> <block pos:line="37" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">perror<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><literal type="string" pos:line="38" pos:column="16">"shmget"<pos:position pos:line="38" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="42" pos:column="5">shmbuf<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">char<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">*<pos:position pos:line="42" pos:column="21"/></operator><operator pos:line="42" pos:column="21">)<pos:position pos:line="42" pos:column="22"/></operator><call><name pos:line="42" pos:column="22">shmat<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">shmid<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">NULL<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="41">0<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">shmbuf<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">==<pos:position pos:line="44" pos:column="18"/></operator> <operator pos:line="44" pos:column="19">(<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">void<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">*<pos:position pos:line="44" pos:column="26"/></operator><operator pos:line="44" pos:column="26">)<pos:position pos:line="44" pos:column="27"/></operator> <operator pos:line="44" pos:column="28">-<pos:position pos:line="44" pos:column="29"/></operator><literal type="number" pos:line="44" pos:column="29">1<pos:position pos:line="44" pos:column="30"/></literal></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">perror<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="string" pos:line="45" pos:column="16">"shmat"<pos:position pos:line="45" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
        <return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="49" pos:column="5">hash<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">=<pos:position pos:line="49" pos:column="11"/></operator> <call><name pos:line="49" pos:column="12">hash_create<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">fsCmp<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="31">1<pos:position pos:line="49" pos:column="32"/></literal> <operator pos:line="49" pos:column="33">&lt;&lt;<pos:position pos:line="49" pos:column="41"/></operator> <literal type="number" pos:line="49" pos:column="36">4<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">fsHash<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">assert<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name pos:line="50" pos:column="12">hash<pos:position pos:line="50" pos:column="16"/></name></expr></argument>)<pos:position pos:line="50" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><call><name pos:line="51" pos:column="9">fcntl<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><literal type="number" pos:line="51" pos:column="15">0<pos:position pos:line="51" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="18">F_SETFL<pos:position pos:line="51" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">SQUID_NONBLOCK<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call> <operator pos:line="51" pos:column="43">&lt;<pos:position pos:line="51" pos:column="47"/></operator> <literal type="number" pos:line="51" pos:column="45">0<pos:position pos:line="51" pos:column="46"/></literal></expr>)<pos:position pos:line="51" pos:column="47"/></condition><then pos:line="51" pos:column="47"> <block pos:line="51" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">perror<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><call><name pos:line="52" pos:column="16">xstrerror<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">()<pos:position pos:line="52" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">1<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">memset<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><operator pos:line="55" pos:column="12">&amp;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="13">sa<pos:position pos:line="55" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="55" pos:column="17">'\0'<pos:position pos:line="55" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="23">sizeof<argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">sa<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">sa<pos:position pos:line="56" pos:column="7"/></name><operator pos:line="56" pos:column="7">.<pos:position pos:line="56" pos:column="8"/></operator><name pos:line="56" pos:column="8">sa_handler<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">alarm_handler<pos:position pos:line="56" pos:column="34"/></name></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">sa<pos:position pos:line="57" pos:column="7"/></name><operator pos:line="57" pos:column="7">.<pos:position pos:line="57" pos:column="8"/></operator><name pos:line="57" pos:column="8">sa_flags<pos:position pos:line="57" pos:column="16"/></name></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <name pos:line="57" pos:column="19">SA_RESTART<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">sigaction<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">SIGALRM<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="24">&amp;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="25">sa<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="29">NULL<pos:position pos:line="58" pos:column="33"/></name></expr></argument>)<pos:position pos:line="58" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>

    <for pos:line="60" pos:column="5">for <control pos:line="60" pos:column="9">(<init pos:line="60" pos:column="10">;<pos:position pos:line="60" pos:column="11"/></init><condition pos:line="60" pos:column="11">;<pos:position pos:line="60" pos:column="12"/></condition><incr/>)<pos:position pos:line="60" pos:column="13"/></control> <block pos:line="60" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">alarm<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><literal type="number" pos:line="61" pos:column="15">1<pos:position pos:line="61" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">memset<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><operator pos:line="62" pos:column="16">&amp;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="17">rmsg<pos:position pos:line="62" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="62" pos:column="23">'\0'<pos:position pos:line="62" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="29">sizeof<argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">rmsg<pos:position pos:line="62" pos:column="40"/></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
        <macro><name pos:line="63" pos:column="9">DEBUG<pos:position pos:line="63" pos:column="14"/></name><argument_list pos:line="63" pos:column="14">(<argument><literal type="number" pos:line="63" pos:column="15">2<pos:position pos:line="63" pos:column="16"/></literal></argument>)<pos:position pos:line="63" pos:column="17"/></argument_list></macro> <block pos:line="63" pos:column="18">{
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">std<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">::<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">cerr<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">&lt;&lt;<pos:position pos:line="64" pos:column="31"/></operator> <literal type="string" pos:line="64" pos:column="26">"msgrcv: "<pos:position pos:line="64" pos:column="36"/></literal> <operator pos:line="64" pos:column="37">&lt;&lt;<pos:position pos:line="64" pos:column="45"/></operator> <name pos:line="64" pos:column="40">rmsgid<pos:position pos:line="64" pos:column="46"/></name> <operator pos:line="64" pos:column="47">&lt;&lt;<pos:position pos:line="64" pos:column="55"/></operator> <literal type="string" pos:line="64" pos:column="50">", "<pos:position pos:line="64" pos:column="54"/></literal>
                      <operator pos:line="65" pos:column="23">&lt;&lt;<pos:position pos:line="65" pos:column="31"/></operator> <operator pos:line="65" pos:column="26">&amp;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="27">rmsg<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">&lt;&lt;<pos:position pos:line="65" pos:column="40"/></operator> <literal type="string" pos:line="65" pos:column="35">", "<pos:position pos:line="65" pos:column="39"/></literal> <operator pos:line="65" pos:column="40">&lt;&lt;<pos:position pos:line="65" pos:column="48"/></operator> <name><name pos:line="65" pos:column="43">diomsg<pos:position pos:line="65" pos:column="49"/></name><operator pos:line="65" pos:column="49">::<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="51">msg_snd_rcv_sz<pos:position pos:line="65" pos:column="65"/></name></name>
                      <operator pos:line="66" pos:column="23">&lt;&lt;<pos:position pos:line="66" pos:column="31"/></operator> <literal type="string" pos:line="66" pos:column="26">", "<pos:position pos:line="66" pos:column="30"/></literal> <operator pos:line="66" pos:column="31">&lt;&lt;<pos:position pos:line="66" pos:column="39"/></operator> <literal type="number" pos:line="66" pos:column="34">0<pos:position pos:line="66" pos:column="35"/></literal> <operator pos:line="66" pos:column="36">&lt;&lt;<pos:position pos:line="66" pos:column="44"/></operator> <literal type="string" pos:line="66" pos:column="39">", "<pos:position pos:line="66" pos:column="43"/></literal> <operator pos:line="66" pos:column="44">&lt;&lt;<pos:position pos:line="66" pos:column="52"/></operator> <literal type="number" pos:line="66" pos:column="47">0<pos:position pos:line="66" pos:column="48"/></literal> <operator pos:line="66" pos:column="49">&lt;&lt;<pos:position pos:line="66" pos:column="57"/></operator> <name><name pos:line="66" pos:column="52">std<pos:position pos:line="66" pos:column="55"/></name><operator pos:line="66" pos:column="55">::<pos:position pos:line="66" pos:column="57"/></operator><name pos:line="66" pos:column="57">endl<pos:position pos:line="66" pos:column="61"/></name></name></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block>
        <expr_stmt><expr><name pos:line="68" pos:column="9">rlen<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <call><name pos:line="68" pos:column="16">msgrcv<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">rmsgid<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="31">&amp;<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="32">rmsg<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="38">diomsg<pos:position pos:line="68" pos:column="44"/></name><operator pos:line="68" pos:column="44">::<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">msg_snd_rcv_sz<pos:position pos:line="68" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="62">0<pos:position pos:line="68" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="65">0<pos:position pos:line="68" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="68"/></expr_stmt>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">rlen<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">&lt;<pos:position pos:line="70" pos:column="22"/></operator> <literal type="number" pos:line="70" pos:column="20">0<pos:position pos:line="70" pos:column="21"/></literal></expr>)<pos:position pos:line="70" pos:column="22"/></condition><then pos:line="70" pos:column="22"> <block pos:line="70" pos:column="23">{
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name pos:line="71" pos:column="17">EINTR<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">==<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">errno<pos:position pos:line="71" pos:column="31"/></name></expr>)<pos:position pos:line="71" pos:column="32"/></condition><then pos:line="71" pos:column="32"> <block pos:line="71" pos:column="33">{
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><call><name pos:line="72" pos:column="21">read<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><literal type="number" pos:line="72" pos:column="26">0<pos:position pos:line="72" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="29">rbuf<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="35">512<pos:position pos:line="72" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call> <operator pos:line="72" pos:column="40">&lt;=<pos:position pos:line="72" pos:column="45"/></operator> <literal type="number" pos:line="72" pos:column="43">0<pos:position pos:line="72" pos:column="44"/></literal></expr>)<pos:position pos:line="72" pos:column="45"/></condition><then pos:line="72" pos:column="45"> <block pos:line="72" pos:column="46">{
                    <if pos:line="73" pos:column="21">if <condition pos:line="73" pos:column="24">(<expr><name pos:line="73" pos:column="25">EWOULDBLOCK<pos:position pos:line="73" pos:column="36"/></name> <operator pos:line="73" pos:column="37">==<pos:position pos:line="73" pos:column="39"/></operator> <name pos:line="73" pos:column="40">errno<pos:position pos:line="73" pos:column="45"/></name></expr>)<pos:position pos:line="73" pos:column="46"/></condition><then pos:line="73" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="25">(<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="26">void<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">)<pos:position pos:line="74" pos:column="31"/></operator> <literal type="number" pos:line="74" pos:column="32">0<pos:position pos:line="74" pos:column="33"/></literal></expr>;<pos:position pos:line="74" pos:column="34"/></expr_stmt></block></then>
                    <elseif pos:line="75" pos:column="21">else <if pos:line="75" pos:column="26">if <condition pos:line="75" pos:column="29">(<expr><name pos:line="75" pos:column="30">EAGAIN<pos:position pos:line="75" pos:column="36"/></name> <operator pos:line="75" pos:column="37">==<pos:position pos:line="75" pos:column="39"/></operator> <name pos:line="75" pos:column="40">errno<pos:position pos:line="75" pos:column="45"/></name></expr>)<pos:position pos:line="75" pos:column="46"/></condition><then pos:line="75" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="76" pos:column="25">(<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">void<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">)<pos:position pos:line="76" pos:column="31"/></operator> <literal type="number" pos:line="76" pos:column="32">0<pos:position pos:line="76" pos:column="33"/></literal></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt></block></then></if></elseif>
                    <else pos:line="77" pos:column="21">else
                        <block type="pseudo"><break pos:line="78" pos:column="25">break;<pos:position pos:line="78" pos:column="31"/></break></block></else></if>
                }<pos:position pos:line="79" pos:column="18"/></block></then></if>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>

            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><name pos:line="82" pos:column="17">EAGAIN<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">==<pos:position pos:line="82" pos:column="26"/></operator> <name pos:line="82" pos:column="27">errno<pos:position pos:line="82" pos:column="32"/></name></expr>)<pos:position pos:line="82" pos:column="33"/></condition><then pos:line="82" pos:column="33"> <block pos:line="82" pos:column="34">{
                <continue pos:line="83" pos:column="17">continue;<pos:position pos:line="83" pos:column="26"/></continue>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="86" pos:column="13">perror<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><literal type="string" pos:line="86" pos:column="20">"msgrcv"<pos:position pos:line="86" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>
            <break pos:line="87" pos:column="13">break;<pos:position pos:line="87" pos:column="19"/></break>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="90" pos:column="9">alarm<pos:position pos:line="90" pos:column="14"/></name><argument_list pos:line="90" pos:column="14">(<argument><expr><literal type="number" pos:line="90" pos:column="15">0<pos:position pos:line="90" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">msg_handle<pos:position pos:line="91" pos:column="19"/></name><argument_list pos:line="91" pos:column="19">(<argument><expr><operator pos:line="91" pos:column="20">&amp;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="21">rmsg<pos:position pos:line="91" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="27">rlen<pos:position pos:line="91" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="33">&amp;<pos:position pos:line="91" pos:column="38"/></operator><name pos:line="91" pos:column="34">smsg<pos:position pos:line="91" pos:column="38"/></name></expr></argument>)<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>

        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><call><name pos:line="93" pos:column="13">msgsnd<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">smsgid<pos:position pos:line="93" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="28">&amp;<pos:position pos:line="93" pos:column="33"/></operator><name pos:line="93" pos:column="29">smsg<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="35">diomsg<pos:position pos:line="93" pos:column="41"/></name><operator pos:line="93" pos:column="41">::<pos:position pos:line="93" pos:column="43"/></operator><name pos:line="93" pos:column="43">msg_snd_rcv_sz<pos:position pos:line="93" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="59">0<pos:position pos:line="93" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="61"/></argument_list></call> <operator pos:line="93" pos:column="62">&lt;<pos:position pos:line="93" pos:column="66"/></operator> <literal type="number" pos:line="93" pos:column="64">0<pos:position pos:line="93" pos:column="65"/></literal></expr>)<pos:position pos:line="93" pos:column="66"/></condition><then pos:line="93" pos:column="66"> <block pos:line="93" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">perror<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><literal type="string" pos:line="94" pos:column="20">"msgsnd"<pos:position pos:line="94" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="30"/></expr_stmt>
            <break pos:line="95" pos:column="13">break;<pos:position pos:line="95" pos:column="19"/></break>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>
    }<pos:position pos:line="97" pos:column="6"/></block></for>

    <macro><name pos:line="99" pos:column="5">DEBUG<pos:position pos:line="99" pos:column="10"/></name><argument_list pos:line="99" pos:column="10">(<argument><literal type="number" pos:line="99" pos:column="11">2<pos:position pos:line="99" pos:column="12"/></literal></argument>)<pos:position pos:line="99" pos:column="13"/></argument_list></macro> <block pos:line="99" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">fprintf<pos:position pos:line="100" pos:column="16"/></name><argument_list pos:line="100" pos:column="16">(<argument><expr><name pos:line="100" pos:column="17">stderr<pos:position pos:line="100" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="25">"%d diskd exiting\n"<pos:position pos:line="100" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="100" pos:column="47">(<pos:position pos:line="100" pos:column="48"/></operator><name pos:line="100" pos:column="48">int<pos:position pos:line="100" pos:column="51"/></name><operator pos:line="100" pos:column="51">)<pos:position pos:line="100" pos:column="52"/></operator> <name pos:line="100" pos:column="53">mypid<pos:position pos:line="100" pos:column="58"/></name></expr></argument>)<pos:position pos:line="100" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block>

    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><call><name pos:line="103" pos:column="9">msgctl<pos:position pos:line="103" pos:column="15"/></name><argument_list pos:line="103" pos:column="15">(<argument><expr><name pos:line="103" pos:column="16">rmsgid<pos:position pos:line="103" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="24">IPC_RMID<pos:position pos:line="103" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="34">0<pos:position pos:line="103" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="36"/></argument_list></call> <operator pos:line="103" pos:column="37">&lt;<pos:position pos:line="103" pos:column="41"/></operator> <literal type="number" pos:line="103" pos:column="39">0<pos:position pos:line="103" pos:column="40"/></literal></expr>)<pos:position pos:line="103" pos:column="41"/></condition><then pos:line="103" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="9">perror<pos:position pos:line="104" pos:column="15"/></name><argument_list pos:line="104" pos:column="15">(<argument><expr><literal type="string" pos:line="104" pos:column="16">"msgctl IPC_RMID"<pos:position pos:line="104" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="35"/></expr_stmt></block></then></if>

    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><call><name pos:line="106" pos:column="9">msgctl<pos:position pos:line="106" pos:column="15"/></name><argument_list pos:line="106" pos:column="15">(<argument><expr><name pos:line="106" pos:column="16">smsgid<pos:position pos:line="106" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="24">IPC_RMID<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="34">0<pos:position pos:line="106" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="36"/></argument_list></call> <operator pos:line="106" pos:column="37">&lt;<pos:position pos:line="106" pos:column="41"/></operator> <literal type="number" pos:line="106" pos:column="39">0<pos:position pos:line="106" pos:column="40"/></literal></expr>)<pos:position pos:line="106" pos:column="41"/></condition><then pos:line="106" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="9">perror<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><literal type="string" pos:line="107" pos:column="16">"msgctl IPC_RMID"<pos:position pos:line="107" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="35"/></expr_stmt></block></then></if>

    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><call><name pos:line="109" pos:column="9">shmdt<pos:position pos:line="109" pos:column="14"/></name><argument_list pos:line="109" pos:column="14">(<argument><expr><name pos:line="109" pos:column="15">shmbuf<pos:position pos:line="109" pos:column="21"/></name></expr></argument>)<pos:position pos:line="109" pos:column="22"/></argument_list></call> <operator pos:line="109" pos:column="23">&lt;<pos:position pos:line="109" pos:column="27"/></operator> <literal type="number" pos:line="109" pos:column="25">0<pos:position pos:line="109" pos:column="26"/></literal></expr>)<pos:position pos:line="109" pos:column="27"/></condition><then pos:line="109" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="9">perror<pos:position pos:line="110" pos:column="15"/></name><argument_list pos:line="110" pos:column="15">(<argument><expr><literal type="string" pos:line="110" pos:column="16">"shmdt"<pos:position pos:line="110" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt></block></then></if>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><call><name pos:line="112" pos:column="9">shmctl<pos:position pos:line="112" pos:column="15"/></name><argument_list pos:line="112" pos:column="15">(<argument><expr><name pos:line="112" pos:column="16">shmid<pos:position pos:line="112" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="23">IPC_RMID<pos:position pos:line="112" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="33">0<pos:position pos:line="112" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="35"/></argument_list></call> <operator pos:line="112" pos:column="36">&lt;<pos:position pos:line="112" pos:column="40"/></operator> <literal type="number" pos:line="112" pos:column="38">0<pos:position pos:line="112" pos:column="39"/></literal></expr>)<pos:position pos:line="112" pos:column="40"/></condition><then pos:line="112" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="9">perror<pos:position pos:line="113" pos:column="15"/></name><argument_list pos:line="113" pos:column="15">(<argument><expr><literal type="string" pos:line="113" pos:column="16">"shmctl IPC_RMID"<pos:position pos:line="113" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="35"/></expr_stmt></block></then></if>

    <return pos:line="115" pos:column="5">return <expr><literal type="number" pos:line="115" pos:column="12">0<pos:position pos:line="115" pos:column="13"/></literal></expr>;<pos:position pos:line="115" pos:column="14"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

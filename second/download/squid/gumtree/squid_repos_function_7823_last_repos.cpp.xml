<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7823_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">SMB_Logon_Server<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">SMB_Handle_Type<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">Con_Handle<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">UserName<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">PassWord<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">NtDomain<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">PreCrypted<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>

<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">RFCNB_Pkt<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">pkt<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">param_len<pos:position pos:line="6" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="20">pkt_len<pos:position pos:line="6" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="29">pass_len<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">p<pos:position pos:line="7" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="14">pword<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><literal type="number" pos:line="7" pos:column="20">128<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* First we need a packet etc ... but we need to know what protocol has  */</comment>
    <comment type="block" pos:line="10" pos:column="5">/* been negotiated to figure out if we can do it and what SMB format to  */</comment>
    <comment type="block" pos:line="11" pos:column="5">/* use ...                                                               */</comment>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">Con_Handle<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="23">protocol<pos:position pos:line="13" pos:column="31"/></name></name> <operator pos:line="13" pos:column="32">&lt;<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="34">SMB_P_LanMan1<pos:position pos:line="13" pos:column="47"/></name></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <block pos:line="13" pos:column="49">{

        <expr_stmt><expr><name pos:line="15" pos:column="9">SMBlib_errno<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">SMBlibE_ProtLow<pos:position pos:line="15" pos:column="39"/></name></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
        <return pos:line="16" pos:column="9">return<expr><operator pos:line="16" pos:column="15">(<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">SMBlibE_BAD<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>

    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">PreCrypted<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">pass_len<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">24<pos:position pos:line="21" pos:column="22"/></literal></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">memcpy<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">pword<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">PassWord<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="33">24<pos:position pos:line="22" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">strncpy<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">pword<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">PassWord<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="34">sizeof<argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">pword<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">pword<pos:position pos:line="25" pos:column="14"/></name><index pos:line="25" pos:column="14">[<expr><sizeof pos:line="25" pos:column="15">sizeof<argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">pword<pos:position pos:line="25" pos:column="27"/></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></sizeof> <operator pos:line="25" pos:column="29">-<pos:position pos:line="25" pos:column="30"/></operator> <literal type="number" pos:line="25" pos:column="31">1<pos:position pos:line="25" pos:column="32"/></literal></expr>]<pos:position pos:line="25" pos:column="33"/></index></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <literal type="char" pos:line="25" pos:column="36">'\0'<pos:position pos:line="25" pos:column="40"/></literal></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">PAM_SMB_ENC_PASS<pos:position pos:line="26" pos:column="24"/></name></cpp:ifdef>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">Con_Handle<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">encrypt_passwords<pos:position pos:line="27" pos:column="42"/></name></name></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">pass_len<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="24">24<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">SMBencrypt<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">uchar<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">*<pos:position pos:line="29" pos:column="32"/></operator><operator pos:line="29" pos:column="32">)<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">PassWord<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="44">(<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">uchar<pos:position pos:line="29" pos:column="50"/></name> <operator pos:line="29" pos:column="51">*<pos:position pos:line="29" pos:column="52"/></operator><operator pos:line="29" pos:column="52">)<pos:position pos:line="29" pos:column="53"/></operator> <name><name pos:line="29" pos:column="54">Con_Handle<pos:position pos:line="29" pos:column="64"/></name><operator pos:line="29" pos:column="64">-&gt;<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="66">Encrypt_Key<pos:position pos:line="29" pos:column="77"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="79">(<pos:position pos:line="29" pos:column="80"/></operator><name pos:line="29" pos:column="80">uchar<pos:position pos:line="29" pos:column="85"/></name> <operator pos:line="29" pos:column="86">*<pos:position pos:line="29" pos:column="87"/></operator><operator pos:line="29" pos:column="87">)<pos:position pos:line="29" pos:column="88"/></operator> <name pos:line="29" pos:column="89">pword<pos:position pos:line="29" pos:column="94"/></name></expr></argument>)<pos:position pos:line="29" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="96"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then> <else pos:line="30" pos:column="11">else
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="13">pass_len<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">strlen<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">pword<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt></block></else></if>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="35" pos:column="5">/* Now build the correct structure */</comment>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">Con_Handle<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="23">protocol<pos:position pos:line="37" pos:column="31"/></name></name> <operator pos:line="37" pos:column="32">&lt;<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="34">SMB_P_NT1<pos:position pos:line="37" pos:column="43"/></name></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44"> <block pos:line="37" pos:column="45">{

        <comment type="block" pos:line="39" pos:column="9">/* We don't handle encrypted passwords ... */</comment>

        <expr_stmt><expr><name pos:line="41" pos:column="9">param_len<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <call><name pos:line="41" pos:column="21">strlen<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">UserName<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call> <operator pos:line="41" pos:column="38">+<pos:position pos:line="41" pos:column="39"/></operator> <literal type="number" pos:line="41" pos:column="40">1<pos:position pos:line="41" pos:column="41"/></literal> <operator pos:line="41" pos:column="42">+<pos:position pos:line="41" pos:column="43"/></operator> <name pos:line="41" pos:column="44">pass_len<pos:position pos:line="41" pos:column="52"/></name> <operator pos:line="41" pos:column="53">+<pos:position pos:line="41" pos:column="54"/></operator> <literal type="number" pos:line="41" pos:column="55">1<pos:position pos:line="41" pos:column="56"/></literal> <operator pos:line="41" pos:column="57">+<pos:position pos:line="41" pos:column="58"/></operator>
                    <operator pos:line="42" pos:column="21">(<pos:position pos:line="42" pos:column="22"/></operator><ternary><condition><expr><name pos:line="42" pos:column="22">NtDomain<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">!=<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">NULL<pos:position pos:line="42" pos:column="36"/></name></expr> ?<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38"> <expr><call><name pos:line="42" pos:column="39">strlen<pos:position pos:line="42" pos:column="45"/></name><argument_list pos:line="42" pos:column="45">(<argument><expr><name pos:line="42" pos:column="46">NtDomain<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr> <pos:position pos:line="42" pos:column="56"/></then><else pos:line="42" pos:column="56">: <expr><call><name pos:line="42" pos:column="58">strlen<pos:position pos:line="42" pos:column="64"/></name><argument_list pos:line="42" pos:column="64">(<argument><expr><name><name pos:line="42" pos:column="65">Con_Handle<pos:position pos:line="42" pos:column="75"/></name><operator pos:line="42" pos:column="75">-&gt;<pos:position pos:line="42" pos:column="80"/></operator><name pos:line="42" pos:column="77">PDomain<pos:position pos:line="42" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr></else></ternary><operator pos:line="42" pos:column="85">)<pos:position pos:line="42" pos:column="86"/></operator> <operator pos:line="42" pos:column="87">+<pos:position pos:line="42" pos:column="88"/></operator> <literal type="number" pos:line="42" pos:column="89">1<pos:position pos:line="42" pos:column="90"/></literal> <operator pos:line="42" pos:column="91">+<pos:position pos:line="42" pos:column="92"/></operator>
                    <call><name pos:line="43" pos:column="21">strlen<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name><name pos:line="43" pos:column="28">Con_Handle<pos:position pos:line="43" pos:column="38"/></name> <operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator> <name pos:line="43" pos:column="42">OSName<pos:position pos:line="43" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call> <operator pos:line="43" pos:column="50">+<pos:position pos:line="43" pos:column="51"/></operator> <literal type="number" pos:line="43" pos:column="52">1<pos:position pos:line="43" pos:column="53"/></literal></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><name pos:line="45" pos:column="9">pkt_len<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">SMB_ssetpLM_len<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">+<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="37">param_len<pos:position pos:line="45" pos:column="46"/></name></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><name pos:line="47" pos:column="9">pkt<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <operator pos:line="47" pos:column="15">(<pos:position pos:line="47" pos:column="16"/></operator>struct <name pos:line="47" pos:column="23">RFCNB_Pkt<pos:position pos:line="47" pos:column="32"/></name> <operator pos:line="47" pos:column="33">*<pos:position pos:line="47" pos:column="34"/></operator><operator pos:line="47" pos:column="34">)<pos:position pos:line="47" pos:column="35"/></operator><call><name pos:line="47" pos:column="35">RFCNB_Alloc_Pkt<pos:position pos:line="47" pos:column="50"/></name><argument_list pos:line="47" pos:column="50">(<argument><expr><name pos:line="47" pos:column="51">pkt_len<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">pkt<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">==<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">NULL<pos:position pos:line="49" pos:column="24"/></name></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25"> <block pos:line="49" pos:column="26">{

            <expr_stmt><expr><name pos:line="51" pos:column="13">SMBlib_errno<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">SMBlibE_NoSpace<pos:position pos:line="51" pos:column="43"/></name></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>
            <return pos:line="52" pos:column="13">return<expr><operator pos:line="52" pos:column="19">(<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">SMBlibE_BAD<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">)<pos:position pos:line="52" pos:column="32"/></operator></expr>;<pos:position pos:line="52" pos:column="33"/></return> <comment type="block" pos:line="52" pos:column="34">/* Should handle the error */</comment>

        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="56" pos:column="9">memset<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><call><name pos:line="56" pos:column="16">SMB_Hdr<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">pkt<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="30">0<pos:position pos:line="56" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="33">SMB_ssetpLM_len<pos:position pos:line="56" pos:column="48"/></name></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">SIVAL<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><call><name pos:line="57" pos:column="15">SMB_Hdr<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">(<argument><expr><name pos:line="57" pos:column="23">pkt<pos:position pos:line="57" pos:column="26"/></name></expr></argument>)<pos:position pos:line="57" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="29">SMB_hdr_idf_offset<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="49">SMB_DEF_IDF<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="62"/></expr_stmt>  <comment type="block" pos:line="57" pos:column="64">/* Plunk in IDF */</comment>
        <expr_stmt><expr><operator pos:line="58" pos:column="9">*<pos:position pos:line="58" pos:column="10"/></operator><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><call><name pos:line="58" pos:column="11">SMB_Hdr<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">pkt<pos:position pos:line="58" pos:column="22"/></name></expr></argument>)<pos:position pos:line="58" pos:column="23"/></argument_list></call> <operator pos:line="58" pos:column="24">+<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="26">SMB_hdr_com_offset<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">)<pos:position pos:line="58" pos:column="45"/></operator> <operator pos:line="58" pos:column="46">=<pos:position pos:line="58" pos:column="47"/></operator> <name pos:line="58" pos:column="48">SMBsesssetupX<pos:position pos:line="58" pos:column="61"/></name></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">SSVAL<pos:position pos:line="59" pos:column="14"/></name><argument_list pos:line="59" pos:column="14">(<argument><expr><call><name pos:line="59" pos:column="15">SMB_Hdr<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">pkt<pos:position pos:line="59" pos:column="26"/></name></expr></argument>)<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="59" pos:column="29">SMB_hdr_pid_offset<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="49">Con_Handle<pos:position pos:line="59" pos:column="59"/></name> <operator pos:line="59" pos:column="60">-&gt;<pos:position pos:line="59" pos:column="65"/></operator> <name pos:line="59" pos:column="63">pid<pos:position pos:line="59" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">SSVAL<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><call><name pos:line="60" pos:column="15">SMB_Hdr<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">pkt<pos:position pos:line="60" pos:column="26"/></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="29">SMB_hdr_tid_offset<pos:position pos:line="60" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="49">0<pos:position pos:line="60" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">SSVAL<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><call><name pos:line="61" pos:column="15">SMB_Hdr<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><name pos:line="61" pos:column="23">pkt<pos:position pos:line="61" pos:column="26"/></name></expr></argument>)<pos:position pos:line="61" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="61" pos:column="29">SMB_hdr_mid_offset<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="49">Con_Handle<pos:position pos:line="61" pos:column="59"/></name> <operator pos:line="61" pos:column="60">-&gt;<pos:position pos:line="61" pos:column="65"/></operator> <name pos:line="61" pos:column="63">mid<pos:position pos:line="61" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">SSVAL<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><call><name pos:line="62" pos:column="15">SMB_Hdr<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">pkt<pos:position pos:line="62" pos:column="26"/></name></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="29">SMB_hdr_uid_offset<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="49">Con_Handle<pos:position pos:line="62" pos:column="59"/></name> <operator pos:line="62" pos:column="60">-&gt;<pos:position pos:line="62" pos:column="65"/></operator> <name pos:line="62" pos:column="63">uid<pos:position pos:line="62" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="63" pos:column="9">*<pos:position pos:line="63" pos:column="10"/></operator><operator pos:line="63" pos:column="10">(<pos:position pos:line="63" pos:column="11"/></operator><call><name pos:line="63" pos:column="11">SMB_Hdr<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><name pos:line="63" pos:column="19">pkt<pos:position pos:line="63" pos:column="22"/></name></expr></argument>)<pos:position pos:line="63" pos:column="23"/></argument_list></call> <operator pos:line="63" pos:column="24">+<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">SMB_hdr_wct_offset<pos:position pos:line="63" pos:column="44"/></name><operator pos:line="63" pos:column="44">)<pos:position pos:line="63" pos:column="45"/></operator> <operator pos:line="63" pos:column="46">=<pos:position pos:line="63" pos:column="47"/></operator> <literal type="number" pos:line="63" pos:column="48">10<pos:position pos:line="63" pos:column="50"/></literal></expr>;<pos:position pos:line="63" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="64" pos:column="9">*<pos:position pos:line="64" pos:column="10"/></operator><operator pos:line="64" pos:column="10">(<pos:position pos:line="64" pos:column="11"/></operator><call><name pos:line="64" pos:column="11">SMB_Hdr<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">pkt<pos:position pos:line="64" pos:column="22"/></name></expr></argument>)<pos:position pos:line="64" pos:column="23"/></argument_list></call> <operator pos:line="64" pos:column="24">+<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">SMB_hdr_axc_offset<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">)<pos:position pos:line="64" pos:column="45"/></operator> <operator pos:line="64" pos:column="46">=<pos:position pos:line="64" pos:column="47"/></operator> <literal type="number" pos:line="64" pos:column="48">0xFF<pos:position pos:line="64" pos:column="52"/></literal></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>    <comment type="block" pos:line="64" pos:column="57">/* No extra command */</comment>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">SSVAL<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><call><name pos:line="65" pos:column="15">SMB_Hdr<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">pkt<pos:position pos:line="65" pos:column="26"/></name></expr></argument>)<pos:position pos:line="65" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="29">SMB_hdr_axo_offset<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="49">0<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="67" pos:column="9">SSVAL<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><call><name pos:line="67" pos:column="15">SMB_Hdr<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">pkt<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="29">SMB_ssetpLM_mbs_offset<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="53">SMBLIB_MAX_XMIT<pos:position pos:line="67" pos:column="68"/></name></expr></argument>)<pos:position pos:line="67" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">SSVAL<pos:position pos:line="68" pos:column="14"/></name><argument_list pos:line="68" pos:column="14">(<argument><expr><call><name pos:line="68" pos:column="15">SMB_Hdr<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">pkt<pos:position pos:line="68" pos:column="26"/></name></expr></argument>)<pos:position pos:line="68" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="68" pos:column="29">SMB_ssetpLM_mmc_offset<pos:position pos:line="68" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="53">2<pos:position pos:line="68" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">SSVAL<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(<argument><expr><call><name pos:line="69" pos:column="15">SMB_Hdr<pos:position pos:line="69" pos:column="22"/></name><argument_list pos:line="69" pos:column="22">(<argument><expr><name pos:line="69" pos:column="23">pkt<pos:position pos:line="69" pos:column="26"/></name></expr></argument>)<pos:position pos:line="69" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="29">SMB_ssetpLM_vcn_offset<pos:position pos:line="69" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="53">Con_Handle<pos:position pos:line="69" pos:column="63"/></name> <operator pos:line="69" pos:column="64">-&gt;<pos:position pos:line="69" pos:column="69"/></operator> <name pos:line="69" pos:column="67">pid<pos:position pos:line="69" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">SIVAL<pos:position pos:line="70" pos:column="14"/></name><argument_list pos:line="70" pos:column="14">(<argument><expr><call><name pos:line="70" pos:column="15">SMB_Hdr<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name pos:line="70" pos:column="23">pkt<pos:position pos:line="70" pos:column="26"/></name></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="70" pos:column="29">SMB_ssetpLM_snk_offset<pos:position pos:line="70" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="53">0<pos:position pos:line="70" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">SSVAL<pos:position pos:line="71" pos:column="14"/></name><argument_list pos:line="71" pos:column="14">(<argument><expr><call><name pos:line="71" pos:column="15">SMB_Hdr<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">pkt<pos:position pos:line="71" pos:column="26"/></name></expr></argument>)<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="71" pos:column="29">SMB_ssetpLM_pwl_offset<pos:position pos:line="71" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="53">pass_len<pos:position pos:line="71" pos:column="61"/></name> <operator pos:line="71" pos:column="62">+<pos:position pos:line="71" pos:column="63"/></operator> <literal type="number" pos:line="71" pos:column="64">1<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">SIVAL<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><call><name pos:line="72" pos:column="15">SMB_Hdr<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><name pos:line="72" pos:column="23">pkt<pos:position pos:line="72" pos:column="26"/></name></expr></argument>)<pos:position pos:line="72" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="29">SMB_ssetpLM_res_offset<pos:position pos:line="72" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="53">0<pos:position pos:line="72" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">SSVAL<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><call><name pos:line="73" pos:column="15">SMB_Hdr<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name pos:line="73" pos:column="23">pkt<pos:position pos:line="73" pos:column="26"/></name></expr></argument>)<pos:position pos:line="73" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="29">SMB_ssetpLM_bcc_offset<pos:position pos:line="73" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="53">param_len<pos:position pos:line="73" pos:column="62"/></name></expr></argument>)<pos:position pos:line="73" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="64"/></expr_stmt>

        <comment type="block" pos:line="75" pos:column="9">/* Now copy the param strings in with the right stuff */</comment>

        <expr_stmt><expr><name pos:line="77" pos:column="9">p<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">=<pos:position pos:line="77" pos:column="12"/></operator> <operator pos:line="77" pos:column="13">(<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">char<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">*<pos:position pos:line="77" pos:column="20"/></operator><operator pos:line="77" pos:column="20">)<pos:position pos:line="77" pos:column="21"/></operator><operator pos:line="77" pos:column="21">(<pos:position pos:line="77" pos:column="22"/></operator><call><name pos:line="77" pos:column="22">SMB_Hdr<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name pos:line="77" pos:column="30">pkt<pos:position pos:line="77" pos:column="33"/></name></expr></argument>)<pos:position pos:line="77" pos:column="34"/></argument_list></call> <operator pos:line="77" pos:column="35">+<pos:position pos:line="77" pos:column="36"/></operator> <name pos:line="77" pos:column="37">SMB_ssetpLM_buf_offset<pos:position pos:line="77" pos:column="59"/></name><operator pos:line="77" pos:column="59">)<pos:position pos:line="77" pos:column="60"/></operator></expr>;<pos:position pos:line="77" pos:column="61"/></expr_stmt>

        <comment type="block" pos:line="79" pos:column="9">/* Copy  in password, then the rest. Password has a null at end */</comment>

        <expr_stmt><expr><call><name pos:line="81" pos:column="9">memcpy<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">p<pos:position pos:line="81" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="19">pword<pos:position pos:line="81" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="26">pass_len<pos:position pos:line="81" pos:column="34"/></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>

        <expr_stmt><expr><name pos:line="83" pos:column="9">p<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">=<pos:position pos:line="83" pos:column="12"/></operator> <name pos:line="83" pos:column="13">p<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">+<pos:position pos:line="83" pos:column="16"/></operator> <name pos:line="83" pos:column="17">pass_len<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">+<pos:position pos:line="83" pos:column="27"/></operator> <literal type="number" pos:line="83" pos:column="28">1<pos:position pos:line="83" pos:column="29"/></literal></expr>;<pos:position pos:line="83" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="85" pos:column="9">strcpy<pos:position pos:line="85" pos:column="15"/></name><argument_list pos:line="85" pos:column="15">(<argument><expr><name pos:line="85" pos:column="16">p<pos:position pos:line="85" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="19">UserName<pos:position pos:line="85" pos:column="27"/></name></expr></argument>)<pos:position pos:line="85" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="86" pos:column="9">p<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator> <name pos:line="86" pos:column="13">p<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">+<pos:position pos:line="86" pos:column="16"/></operator> <call><name pos:line="86" pos:column="17">strlen<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">UserName<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="87" pos:column="9">*<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="10">p<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <literal type="number" pos:line="87" pos:column="14">0<pos:position pos:line="87" pos:column="15"/></literal></expr>;<pos:position pos:line="87" pos:column="16"/></expr_stmt>

        <expr_stmt><expr><name pos:line="89" pos:column="9">p<pos:position pos:line="89" pos:column="10"/></name> <operator pos:line="89" pos:column="11">=<pos:position pos:line="89" pos:column="12"/></operator> <name pos:line="89" pos:column="13">p<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">+<pos:position pos:line="89" pos:column="16"/></operator> <literal type="number" pos:line="89" pos:column="17">1<pos:position pos:line="89" pos:column="18"/></literal></expr>;<pos:position pos:line="89" pos:column="19"/></expr_stmt>

        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">NtDomain<pos:position pos:line="91" pos:column="21"/></name> <operator pos:line="91" pos:column="22">==<pos:position pos:line="91" pos:column="24"/></operator> <name pos:line="91" pos:column="25">NULL<pos:position pos:line="91" pos:column="29"/></name></expr>)<pos:position pos:line="91" pos:column="30"/></condition><then pos:line="91" pos:column="30"> <block pos:line="91" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">strcpy<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">(<argument><expr><name pos:line="92" pos:column="20">p<pos:position pos:line="92" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="23">Con_Handle<pos:position pos:line="92" pos:column="33"/></name> <operator pos:line="92" pos:column="34">-&gt;<pos:position pos:line="92" pos:column="39"/></operator> <name pos:line="92" pos:column="37">PDomain<pos:position pos:line="92" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="93" pos:column="13">p<pos:position pos:line="93" pos:column="14"/></name> <operator pos:line="93" pos:column="15">=<pos:position pos:line="93" pos:column="16"/></operator> <name pos:line="93" pos:column="17">p<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">+<pos:position pos:line="93" pos:column="20"/></operator> <call><name pos:line="93" pos:column="21">strlen<pos:position pos:line="93" pos:column="27"/></name><argument_list pos:line="93" pos:column="27">(<argument><expr><name><name pos:line="93" pos:column="28">Con_Handle<pos:position pos:line="93" pos:column="38"/></name> <operator pos:line="93" pos:column="39">-&gt;<pos:position pos:line="93" pos:column="44"/></operator> <name pos:line="93" pos:column="42">PDomain<pos:position pos:line="93" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then> <else pos:line="94" pos:column="11">else <block pos:line="94" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">strcpy<pos:position pos:line="95" pos:column="19"/></name><argument_list pos:line="95" pos:column="19">(<argument><expr><name pos:line="95" pos:column="20">p<pos:position pos:line="95" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="23">NtDomain<pos:position pos:line="95" pos:column="31"/></name></expr></argument>)<pos:position pos:line="95" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="96" pos:column="13">p<pos:position pos:line="96" pos:column="14"/></name> <operator pos:line="96" pos:column="15">=<pos:position pos:line="96" pos:column="16"/></operator> <name pos:line="96" pos:column="17">p<pos:position pos:line="96" pos:column="18"/></name> <operator pos:line="96" pos:column="19">+<pos:position pos:line="96" pos:column="20"/></operator> <call><name pos:line="96" pos:column="21">strlen<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><name pos:line="96" pos:column="28">NtDomain<pos:position pos:line="96" pos:column="36"/></name></expr></argument>)<pos:position pos:line="96" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="97" pos:column="10"/></block></else></if>
        <expr_stmt><expr><operator pos:line="98" pos:column="9">*<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">p<pos:position pos:line="98" pos:column="11"/></name> <operator pos:line="98" pos:column="12">=<pos:position pos:line="98" pos:column="13"/></operator> <literal type="number" pos:line="98" pos:column="14">0<pos:position pos:line="98" pos:column="15"/></literal></expr>;<pos:position pos:line="98" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="99" pos:column="9">p<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">=<pos:position pos:line="99" pos:column="12"/></operator> <name pos:line="99" pos:column="13">p<pos:position pos:line="99" pos:column="14"/></name> <operator pos:line="99" pos:column="15">+<pos:position pos:line="99" pos:column="16"/></operator> <literal type="number" pos:line="99" pos:column="17">1<pos:position pos:line="99" pos:column="18"/></literal></expr>;<pos:position pos:line="99" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="101" pos:column="9">strcpy<pos:position pos:line="101" pos:column="15"/></name><argument_list pos:line="101" pos:column="15">(<argument><expr><name pos:line="101" pos:column="16">p<pos:position pos:line="101" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="19">Con_Handle<pos:position pos:line="101" pos:column="29"/></name> <operator pos:line="101" pos:column="30">-&gt;<pos:position pos:line="101" pos:column="35"/></operator> <name pos:line="101" pos:column="33">OSName<pos:position pos:line="101" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="102" pos:column="9">p<pos:position pos:line="102" pos:column="10"/></name> <operator pos:line="102" pos:column="11">=<pos:position pos:line="102" pos:column="12"/></operator> <name pos:line="102" pos:column="13">p<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">+<pos:position pos:line="102" pos:column="16"/></operator> <call><name pos:line="102" pos:column="17">strlen<pos:position pos:line="102" pos:column="23"/></name><argument_list pos:line="102" pos:column="23">(<argument><expr><name><name pos:line="102" pos:column="24">Con_Handle<pos:position pos:line="102" pos:column="34"/></name> <operator pos:line="102" pos:column="35">-&gt;<pos:position pos:line="102" pos:column="40"/></operator> <name pos:line="102" pos:column="38">OSName<pos:position pos:line="102" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="103" pos:column="9">*<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">p<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <literal type="number" pos:line="103" pos:column="14">0<pos:position pos:line="103" pos:column="15"/></literal></expr>;<pos:position pos:line="103" pos:column="16"/></expr_stmt>

    }<pos:position pos:line="105" pos:column="6"/></block></then> <else pos:line="105" pos:column="7">else <block pos:line="105" pos:column="12">{

        <comment type="block" pos:line="107" pos:column="9">/* We don't admit to UNICODE support ... */</comment>

        <expr_stmt><expr><name pos:line="109" pos:column="9">param_len<pos:position pos:line="109" pos:column="18"/></name> <operator pos:line="109" pos:column="19">=<pos:position pos:line="109" pos:column="20"/></operator> <call><name pos:line="109" pos:column="21">strlen<pos:position pos:line="109" pos:column="27"/></name><argument_list pos:line="109" pos:column="27">(<argument><expr><name pos:line="109" pos:column="28">UserName<pos:position pos:line="109" pos:column="36"/></name></expr></argument>)<pos:position pos:line="109" pos:column="37"/></argument_list></call> <operator pos:line="109" pos:column="38">+<pos:position pos:line="109" pos:column="39"/></operator> <literal type="number" pos:line="109" pos:column="40">1<pos:position pos:line="109" pos:column="41"/></literal> <operator pos:line="109" pos:column="42">+<pos:position pos:line="109" pos:column="43"/></operator> <name pos:line="109" pos:column="44">pass_len<pos:position pos:line="109" pos:column="52"/></name> <operator pos:line="109" pos:column="53">+<pos:position pos:line="109" pos:column="54"/></operator>
                    <call><name pos:line="110" pos:column="21">strlen<pos:position pos:line="110" pos:column="27"/></name><argument_list pos:line="110" pos:column="27">(<argument><expr><name><name pos:line="110" pos:column="28">Con_Handle<pos:position pos:line="110" pos:column="38"/></name> <operator pos:line="110" pos:column="39">-&gt;<pos:position pos:line="110" pos:column="44"/></operator> <name pos:line="110" pos:column="42">PDomain<pos:position pos:line="110" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="50"/></argument_list></call> <operator pos:line="110" pos:column="51">+<pos:position pos:line="110" pos:column="52"/></operator> <literal type="number" pos:line="110" pos:column="53">1<pos:position pos:line="110" pos:column="54"/></literal> <operator pos:line="110" pos:column="55">+<pos:position pos:line="110" pos:column="56"/></operator>
                    <call><name pos:line="111" pos:column="21">strlen<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name><name pos:line="111" pos:column="28">Con_Handle<pos:position pos:line="111" pos:column="38"/></name> <operator pos:line="111" pos:column="39">-&gt;<pos:position pos:line="111" pos:column="44"/></operator> <name pos:line="111" pos:column="42">OSName<pos:position pos:line="111" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="49"/></argument_list></call> <operator pos:line="111" pos:column="50">+<pos:position pos:line="111" pos:column="51"/></operator> <literal type="number" pos:line="111" pos:column="52">1<pos:position pos:line="111" pos:column="53"/></literal> <operator pos:line="111" pos:column="54">+<pos:position pos:line="111" pos:column="55"/></operator>
                    <call><name pos:line="112" pos:column="21">strlen<pos:position pos:line="112" pos:column="27"/></name><argument_list pos:line="112" pos:column="27">(<argument><expr><name><name pos:line="112" pos:column="28">Con_Handle<pos:position pos:line="112" pos:column="38"/></name> <operator pos:line="112" pos:column="39">-&gt;<pos:position pos:line="112" pos:column="44"/></operator> <name pos:line="112" pos:column="42">LMType<pos:position pos:line="112" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="49"/></argument_list></call> <operator pos:line="112" pos:column="50">+<pos:position pos:line="112" pos:column="51"/></operator> <literal type="number" pos:line="112" pos:column="52">1<pos:position pos:line="112" pos:column="53"/></literal></expr>;<pos:position pos:line="112" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><name pos:line="114" pos:column="9">pkt_len<pos:position pos:line="114" pos:column="16"/></name> <operator pos:line="114" pos:column="17">=<pos:position pos:line="114" pos:column="18"/></operator> <name pos:line="114" pos:column="19">SMB_ssetpNTLM_len<pos:position pos:line="114" pos:column="36"/></name> <operator pos:line="114" pos:column="37">+<pos:position pos:line="114" pos:column="38"/></operator> <name pos:line="114" pos:column="39">param_len<pos:position pos:line="114" pos:column="48"/></name></expr>;<pos:position pos:line="114" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><name pos:line="116" pos:column="9">pkt<pos:position pos:line="116" pos:column="12"/></name> <operator pos:line="116" pos:column="13">=<pos:position pos:line="116" pos:column="14"/></operator> <operator pos:line="116" pos:column="15">(<pos:position pos:line="116" pos:column="16"/></operator>struct <name pos:line="116" pos:column="23">RFCNB_Pkt<pos:position pos:line="116" pos:column="32"/></name> <operator pos:line="116" pos:column="33">*<pos:position pos:line="116" pos:column="34"/></operator><operator pos:line="116" pos:column="34">)<pos:position pos:line="116" pos:column="35"/></operator><call><name pos:line="116" pos:column="35">RFCNB_Alloc_Pkt<pos:position pos:line="116" pos:column="50"/></name><argument_list pos:line="116" pos:column="50">(<argument><expr><name pos:line="116" pos:column="51">pkt_len<pos:position pos:line="116" pos:column="58"/></name></expr></argument>)<pos:position pos:line="116" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="60"/></expr_stmt>

        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name pos:line="118" pos:column="13">pkt<pos:position pos:line="118" pos:column="16"/></name> <operator pos:line="118" pos:column="17">==<pos:position pos:line="118" pos:column="19"/></operator> <name pos:line="118" pos:column="20">NULL<pos:position pos:line="118" pos:column="24"/></name></expr>)<pos:position pos:line="118" pos:column="25"/></condition><then pos:line="118" pos:column="25"> <block pos:line="118" pos:column="26">{

            <expr_stmt><expr><name pos:line="120" pos:column="13">SMBlib_errno<pos:position pos:line="120" pos:column="25"/></name> <operator pos:line="120" pos:column="26">=<pos:position pos:line="120" pos:column="27"/></operator> <name pos:line="120" pos:column="28">SMBlibE_NoSpace<pos:position pos:line="120" pos:column="43"/></name></expr>;<pos:position pos:line="120" pos:column="44"/></expr_stmt>
            <return pos:line="121" pos:column="13">return<expr><operator pos:line="121" pos:column="19">(<pos:position pos:line="121" pos:column="20"/></operator><operator pos:line="121" pos:column="20">-<pos:position pos:line="121" pos:column="21"/></operator><literal type="number" pos:line="121" pos:column="21">1<pos:position pos:line="121" pos:column="22"/></literal><operator pos:line="121" pos:column="22">)<pos:position pos:line="121" pos:column="23"/></operator></expr>;<pos:position pos:line="121" pos:column="24"/></return> <comment type="block" pos:line="121" pos:column="25">/* Should handle the error */</comment>

        }<pos:position pos:line="123" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="125" pos:column="9">memset<pos:position pos:line="125" pos:column="15"/></name><argument_list pos:line="125" pos:column="15">(<argument><expr><call><name pos:line="125" pos:column="16">SMB_Hdr<pos:position pos:line="125" pos:column="23"/></name><argument_list pos:line="125" pos:column="23">(<argument><expr><name pos:line="125" pos:column="24">pkt<pos:position pos:line="125" pos:column="27"/></name></expr></argument>)<pos:position pos:line="125" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="30">0<pos:position pos:line="125" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="33">SMB_ssetpNTLM_len<pos:position pos:line="125" pos:column="50"/></name></expr></argument>)<pos:position pos:line="125" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="126" pos:column="9">SIVAL<pos:position pos:line="126" pos:column="14"/></name><argument_list pos:line="126" pos:column="14">(<argument><expr><call><name pos:line="126" pos:column="15">SMB_Hdr<pos:position pos:line="126" pos:column="22"/></name><argument_list pos:line="126" pos:column="22">(<argument><expr><name pos:line="126" pos:column="23">pkt<pos:position pos:line="126" pos:column="26"/></name></expr></argument>)<pos:position pos:line="126" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="126" pos:column="29">SMB_hdr_idf_offset<pos:position pos:line="126" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="49">SMB_DEF_IDF<pos:position pos:line="126" pos:column="60"/></name></expr></argument>)<pos:position pos:line="126" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="62"/></expr_stmt>  <comment type="block" pos:line="126" pos:column="64">/* Plunk in IDF */</comment>
        <expr_stmt><expr><operator pos:line="127" pos:column="9">*<pos:position pos:line="127" pos:column="10"/></operator><operator pos:line="127" pos:column="10">(<pos:position pos:line="127" pos:column="11"/></operator><call><name pos:line="127" pos:column="11">SMB_Hdr<pos:position pos:line="127" pos:column="18"/></name><argument_list pos:line="127" pos:column="18">(<argument><expr><name pos:line="127" pos:column="19">pkt<pos:position pos:line="127" pos:column="22"/></name></expr></argument>)<pos:position pos:line="127" pos:column="23"/></argument_list></call> <operator pos:line="127" pos:column="24">+<pos:position pos:line="127" pos:column="25"/></operator> <name pos:line="127" pos:column="26">SMB_hdr_com_offset<pos:position pos:line="127" pos:column="44"/></name><operator pos:line="127" pos:column="44">)<pos:position pos:line="127" pos:column="45"/></operator> <operator pos:line="127" pos:column="46">=<pos:position pos:line="127" pos:column="47"/></operator> <name pos:line="127" pos:column="48">SMBsesssetupX<pos:position pos:line="127" pos:column="61"/></name></expr>;<pos:position pos:line="127" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">SSVAL<pos:position pos:line="128" pos:column="14"/></name><argument_list pos:line="128" pos:column="14">(<argument><expr><call><name pos:line="128" pos:column="15">SMB_Hdr<pos:position pos:line="128" pos:column="22"/></name><argument_list pos:line="128" pos:column="22">(<argument><expr><name pos:line="128" pos:column="23">pkt<pos:position pos:line="128" pos:column="26"/></name></expr></argument>)<pos:position pos:line="128" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="128" pos:column="29">SMB_hdr_pid_offset<pos:position pos:line="128" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="49">Con_Handle<pos:position pos:line="128" pos:column="59"/></name> <operator pos:line="128" pos:column="60">-&gt;<pos:position pos:line="128" pos:column="65"/></operator> <name pos:line="128" pos:column="63">pid<pos:position pos:line="128" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">SSVAL<pos:position pos:line="129" pos:column="14"/></name><argument_list pos:line="129" pos:column="14">(<argument><expr><call><name pos:line="129" pos:column="15">SMB_Hdr<pos:position pos:line="129" pos:column="22"/></name><argument_list pos:line="129" pos:column="22">(<argument><expr><name pos:line="129" pos:column="23">pkt<pos:position pos:line="129" pos:column="26"/></name></expr></argument>)<pos:position pos:line="129" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="129" pos:column="29">SMB_hdr_tid_offset<pos:position pos:line="129" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="49">0<pos:position pos:line="129" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">SSVAL<pos:position pos:line="130" pos:column="14"/></name><argument_list pos:line="130" pos:column="14">(<argument><expr><call><name pos:line="130" pos:column="15">SMB_Hdr<pos:position pos:line="130" pos:column="22"/></name><argument_list pos:line="130" pos:column="22">(<argument><expr><name pos:line="130" pos:column="23">pkt<pos:position pos:line="130" pos:column="26"/></name></expr></argument>)<pos:position pos:line="130" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="130" pos:column="29">SMB_hdr_mid_offset<pos:position pos:line="130" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="49">Con_Handle<pos:position pos:line="130" pos:column="59"/></name> <operator pos:line="130" pos:column="60">-&gt;<pos:position pos:line="130" pos:column="65"/></operator> <name pos:line="130" pos:column="63">mid<pos:position pos:line="130" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="131" pos:column="9">SSVAL<pos:position pos:line="131" pos:column="14"/></name><argument_list pos:line="131" pos:column="14">(<argument><expr><call><name pos:line="131" pos:column="15">SMB_Hdr<pos:position pos:line="131" pos:column="22"/></name><argument_list pos:line="131" pos:column="22">(<argument><expr><name pos:line="131" pos:column="23">pkt<pos:position pos:line="131" pos:column="26"/></name></expr></argument>)<pos:position pos:line="131" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="131" pos:column="29">SMB_hdr_uid_offset<pos:position pos:line="131" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="49">Con_Handle<pos:position pos:line="131" pos:column="59"/></name> <operator pos:line="131" pos:column="60">-&gt;<pos:position pos:line="131" pos:column="65"/></operator> <name pos:line="131" pos:column="63">uid<pos:position pos:line="131" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="132" pos:column="9">*<pos:position pos:line="132" pos:column="10"/></operator><operator pos:line="132" pos:column="10">(<pos:position pos:line="132" pos:column="11"/></operator><call><name pos:line="132" pos:column="11">SMB_Hdr<pos:position pos:line="132" pos:column="18"/></name><argument_list pos:line="132" pos:column="18">(<argument><expr><name pos:line="132" pos:column="19">pkt<pos:position pos:line="132" pos:column="22"/></name></expr></argument>)<pos:position pos:line="132" pos:column="23"/></argument_list></call> <operator pos:line="132" pos:column="24">+<pos:position pos:line="132" pos:column="25"/></operator> <name pos:line="132" pos:column="26">SMB_hdr_wct_offset<pos:position pos:line="132" pos:column="44"/></name><operator pos:line="132" pos:column="44">)<pos:position pos:line="132" pos:column="45"/></operator> <operator pos:line="132" pos:column="46">=<pos:position pos:line="132" pos:column="47"/></operator> <literal type="number" pos:line="132" pos:column="48">13<pos:position pos:line="132" pos:column="50"/></literal></expr>;<pos:position pos:line="132" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="133" pos:column="9">*<pos:position pos:line="133" pos:column="10"/></operator><operator pos:line="133" pos:column="10">(<pos:position pos:line="133" pos:column="11"/></operator><call><name pos:line="133" pos:column="11">SMB_Hdr<pos:position pos:line="133" pos:column="18"/></name><argument_list pos:line="133" pos:column="18">(<argument><expr><name pos:line="133" pos:column="19">pkt<pos:position pos:line="133" pos:column="22"/></name></expr></argument>)<pos:position pos:line="133" pos:column="23"/></argument_list></call> <operator pos:line="133" pos:column="24">+<pos:position pos:line="133" pos:column="25"/></operator> <name pos:line="133" pos:column="26">SMB_hdr_axc_offset<pos:position pos:line="133" pos:column="44"/></name><operator pos:line="133" pos:column="44">)<pos:position pos:line="133" pos:column="45"/></operator> <operator pos:line="133" pos:column="46">=<pos:position pos:line="133" pos:column="47"/></operator> <literal type="number" pos:line="133" pos:column="48">0xFF<pos:position pos:line="133" pos:column="52"/></literal></expr>;<pos:position pos:line="133" pos:column="53"/></expr_stmt>    <comment type="block" pos:line="133" pos:column="57">/* No extra command */</comment>
        <expr_stmt><expr><call><name pos:line="134" pos:column="9">SSVAL<pos:position pos:line="134" pos:column="14"/></name><argument_list pos:line="134" pos:column="14">(<argument><expr><call><name pos:line="134" pos:column="15">SMB_Hdr<pos:position pos:line="134" pos:column="22"/></name><argument_list pos:line="134" pos:column="22">(<argument><expr><name pos:line="134" pos:column="23">pkt<pos:position pos:line="134" pos:column="26"/></name></expr></argument>)<pos:position pos:line="134" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="134" pos:column="29">SMB_hdr_axo_offset<pos:position pos:line="134" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="49">0<pos:position pos:line="134" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="136" pos:column="9">SSVAL<pos:position pos:line="136" pos:column="14"/></name><argument_list pos:line="136" pos:column="14">(<argument><expr><call><name pos:line="136" pos:column="15">SMB_Hdr<pos:position pos:line="136" pos:column="22"/></name><argument_list pos:line="136" pos:column="22">(<argument><expr><name pos:line="136" pos:column="23">pkt<pos:position pos:line="136" pos:column="26"/></name></expr></argument>)<pos:position pos:line="136" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="136" pos:column="29">SMB_ssetpNTLM_mbs_offset<pos:position pos:line="136" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="55">SMBLIB_MAX_XMIT<pos:position pos:line="136" pos:column="70"/></name></expr></argument>)<pos:position pos:line="136" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">SSVAL<pos:position pos:line="137" pos:column="14"/></name><argument_list pos:line="137" pos:column="14">(<argument><expr><call><name pos:line="137" pos:column="15">SMB_Hdr<pos:position pos:line="137" pos:column="22"/></name><argument_list pos:line="137" pos:column="22">(<argument><expr><name pos:line="137" pos:column="23">pkt<pos:position pos:line="137" pos:column="26"/></name></expr></argument>)<pos:position pos:line="137" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="137" pos:column="29">SMB_ssetpNTLM_mmc_offset<pos:position pos:line="137" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="55">0<pos:position pos:line="137" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">SSVAL<pos:position pos:line="138" pos:column="14"/></name><argument_list pos:line="138" pos:column="14">(<argument><expr><call><name pos:line="138" pos:column="15">SMB_Hdr<pos:position pos:line="138" pos:column="22"/></name><argument_list pos:line="138" pos:column="22">(<argument><expr><name pos:line="138" pos:column="23">pkt<pos:position pos:line="138" pos:column="26"/></name></expr></argument>)<pos:position pos:line="138" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="138" pos:column="29">SMB_ssetpNTLM_vcn_offset<pos:position pos:line="138" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="55">1<pos:position pos:line="138" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="58"/></expr_stmt> <comment type="block" pos:line="138" pos:column="59">/* Thanks Tridge! */</comment>
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">SIVAL<pos:position pos:line="139" pos:column="14"/></name><argument_list pos:line="139" pos:column="14">(<argument><expr><call><name pos:line="139" pos:column="15">SMB_Hdr<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><name pos:line="139" pos:column="23">pkt<pos:position pos:line="139" pos:column="26"/></name></expr></argument>)<pos:position pos:line="139" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="139" pos:column="29">SMB_ssetpNTLM_snk_offset<pos:position pos:line="139" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="55">0<pos:position pos:line="139" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">SSVAL<pos:position pos:line="140" pos:column="14"/></name><argument_list pos:line="140" pos:column="14">(<argument><expr><call><name pos:line="140" pos:column="15">SMB_Hdr<pos:position pos:line="140" pos:column="22"/></name><argument_list pos:line="140" pos:column="22">(<argument><expr><name pos:line="140" pos:column="23">pkt<pos:position pos:line="140" pos:column="26"/></name></expr></argument>)<pos:position pos:line="140" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="140" pos:column="29">SMB_ssetpNTLM_cipl_offset<pos:position pos:line="140" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="56">pass_len<pos:position pos:line="140" pos:column="64"/></name></expr></argument>)<pos:position pos:line="140" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="141" pos:column="9">SSVAL<pos:position pos:line="141" pos:column="14"/></name><argument_list pos:line="141" pos:column="14">(<argument><expr><call><name pos:line="141" pos:column="15">SMB_Hdr<pos:position pos:line="141" pos:column="22"/></name><argument_list pos:line="141" pos:column="22">(<argument><expr><name pos:line="141" pos:column="23">pkt<pos:position pos:line="141" pos:column="26"/></name></expr></argument>)<pos:position pos:line="141" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="141" pos:column="29">SMB_ssetpNTLM_cspl_offset<pos:position pos:line="141" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="56">0<pos:position pos:line="141" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">SIVAL<pos:position pos:line="142" pos:column="14"/></name><argument_list pos:line="142" pos:column="14">(<argument><expr><call><name pos:line="142" pos:column="15">SMB_Hdr<pos:position pos:line="142" pos:column="22"/></name><argument_list pos:line="142" pos:column="22">(<argument><expr><name pos:line="142" pos:column="23">pkt<pos:position pos:line="142" pos:column="26"/></name></expr></argument>)<pos:position pos:line="142" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="142" pos:column="29">SMB_ssetpNTLM_res_offset<pos:position pos:line="142" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="55">0<pos:position pos:line="142" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="143" pos:column="9">SIVAL<pos:position pos:line="143" pos:column="14"/></name><argument_list pos:line="143" pos:column="14">(<argument><expr><call><name pos:line="143" pos:column="15">SMB_Hdr<pos:position pos:line="143" pos:column="22"/></name><argument_list pos:line="143" pos:column="22">(<argument><expr><name pos:line="143" pos:column="23">pkt<pos:position pos:line="143" pos:column="26"/></name></expr></argument>)<pos:position pos:line="143" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="143" pos:column="29">SMB_ssetpNTLM_cap_offset<pos:position pos:line="143" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="55">0<pos:position pos:line="143" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="144" pos:column="9">SSVAL<pos:position pos:line="144" pos:column="14"/></name><argument_list pos:line="144" pos:column="14">(<argument><expr><call><name pos:line="144" pos:column="15">SMB_Hdr<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><name pos:line="144" pos:column="23">pkt<pos:position pos:line="144" pos:column="26"/></name></expr></argument>)<pos:position pos:line="144" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="144" pos:column="29">SMB_ssetpNTLM_bcc_offset<pos:position pos:line="144" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="55">param_len<pos:position pos:line="144" pos:column="64"/></name></expr></argument>)<pos:position pos:line="144" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="66"/></expr_stmt>

        <comment type="block" pos:line="146" pos:column="9">/* Now copy the param strings in with the right stuff */</comment>

        <expr_stmt><expr><name pos:line="148" pos:column="9">p<pos:position pos:line="148" pos:column="10"/></name> <operator pos:line="148" pos:column="11">=<pos:position pos:line="148" pos:column="12"/></operator> <operator pos:line="148" pos:column="13">(<pos:position pos:line="148" pos:column="14"/></operator><name pos:line="148" pos:column="14">char<pos:position pos:line="148" pos:column="18"/></name> <operator pos:line="148" pos:column="19">*<pos:position pos:line="148" pos:column="20"/></operator><operator pos:line="148" pos:column="20">)<pos:position pos:line="148" pos:column="21"/></operator><operator pos:line="148" pos:column="21">(<pos:position pos:line="148" pos:column="22"/></operator><call><name pos:line="148" pos:column="22">SMB_Hdr<pos:position pos:line="148" pos:column="29"/></name><argument_list pos:line="148" pos:column="29">(<argument><expr><name pos:line="148" pos:column="30">pkt<pos:position pos:line="148" pos:column="33"/></name></expr></argument>)<pos:position pos:line="148" pos:column="34"/></argument_list></call> <operator pos:line="148" pos:column="35">+<pos:position pos:line="148" pos:column="36"/></operator> <name pos:line="148" pos:column="37">SMB_ssetpNTLM_buf_offset<pos:position pos:line="148" pos:column="61"/></name><operator pos:line="148" pos:column="61">)<pos:position pos:line="148" pos:column="62"/></operator></expr>;<pos:position pos:line="148" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="150" pos:column="9">/* Copy  in password, then the rest. Password has no null at end */</comment>

        <expr_stmt><expr><call><name pos:line="152" pos:column="9">memcpy<pos:position pos:line="152" pos:column="15"/></name><argument_list pos:line="152" pos:column="15">(<argument><expr><name pos:line="152" pos:column="16">p<pos:position pos:line="152" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="19">pword<pos:position pos:line="152" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="26">pass_len<pos:position pos:line="152" pos:column="34"/></name></expr></argument>)<pos:position pos:line="152" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="36"/></expr_stmt>

        <expr_stmt><expr><name pos:line="154" pos:column="9">p<pos:position pos:line="154" pos:column="10"/></name> <operator pos:line="154" pos:column="11">=<pos:position pos:line="154" pos:column="12"/></operator> <name pos:line="154" pos:column="13">p<pos:position pos:line="154" pos:column="14"/></name> <operator pos:line="154" pos:column="15">+<pos:position pos:line="154" pos:column="16"/></operator> <name pos:line="154" pos:column="17">pass_len<pos:position pos:line="154" pos:column="25"/></name></expr>;<pos:position pos:line="154" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="156" pos:column="9">strcpy<pos:position pos:line="156" pos:column="15"/></name><argument_list pos:line="156" pos:column="15">(<argument><expr><name pos:line="156" pos:column="16">p<pos:position pos:line="156" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="19">UserName<pos:position pos:line="156" pos:column="27"/></name></expr></argument>)<pos:position pos:line="156" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="157" pos:column="9">p<pos:position pos:line="157" pos:column="10"/></name> <operator pos:line="157" pos:column="11">=<pos:position pos:line="157" pos:column="12"/></operator> <name pos:line="157" pos:column="13">p<pos:position pos:line="157" pos:column="14"/></name> <operator pos:line="157" pos:column="15">+<pos:position pos:line="157" pos:column="16"/></operator> <call><name pos:line="157" pos:column="17">strlen<pos:position pos:line="157" pos:column="23"/></name><argument_list pos:line="157" pos:column="23">(<argument><expr><name pos:line="157" pos:column="24">UserName<pos:position pos:line="157" pos:column="32"/></name></expr></argument>)<pos:position pos:line="157" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="158" pos:column="9">*<pos:position pos:line="158" pos:column="10"/></operator><name pos:line="158" pos:column="10">p<pos:position pos:line="158" pos:column="11"/></name> <operator pos:line="158" pos:column="12">=<pos:position pos:line="158" pos:column="13"/></operator> <literal type="number" pos:line="158" pos:column="14">0<pos:position pos:line="158" pos:column="15"/></literal></expr>;<pos:position pos:line="158" pos:column="16"/></expr_stmt>

        <expr_stmt><expr><name pos:line="160" pos:column="9">p<pos:position pos:line="160" pos:column="10"/></name> <operator pos:line="160" pos:column="11">=<pos:position pos:line="160" pos:column="12"/></operator> <name pos:line="160" pos:column="13">p<pos:position pos:line="160" pos:column="14"/></name> <operator pos:line="160" pos:column="15">+<pos:position pos:line="160" pos:column="16"/></operator> <literal type="number" pos:line="160" pos:column="17">1<pos:position pos:line="160" pos:column="18"/></literal></expr>;<pos:position pos:line="160" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="162" pos:column="9">strcpy<pos:position pos:line="162" pos:column="15"/></name><argument_list pos:line="162" pos:column="15">(<argument><expr><name pos:line="162" pos:column="16">p<pos:position pos:line="162" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="19">Con_Handle<pos:position pos:line="162" pos:column="29"/></name> <operator pos:line="162" pos:column="30">-&gt;<pos:position pos:line="162" pos:column="35"/></operator> <name pos:line="162" pos:column="33">PDomain<pos:position pos:line="162" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="163" pos:column="9">p<pos:position pos:line="163" pos:column="10"/></name> <operator pos:line="163" pos:column="11">=<pos:position pos:line="163" pos:column="12"/></operator> <name pos:line="163" pos:column="13">p<pos:position pos:line="163" pos:column="14"/></name> <operator pos:line="163" pos:column="15">+<pos:position pos:line="163" pos:column="16"/></operator> <call><name pos:line="163" pos:column="17">strlen<pos:position pos:line="163" pos:column="23"/></name><argument_list pos:line="163" pos:column="23">(<argument><expr><name><name pos:line="163" pos:column="24">Con_Handle<pos:position pos:line="163" pos:column="34"/></name> <operator pos:line="163" pos:column="35">-&gt;<pos:position pos:line="163" pos:column="40"/></operator> <name pos:line="163" pos:column="38">PDomain<pos:position pos:line="163" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="163" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="164" pos:column="9">*<pos:position pos:line="164" pos:column="10"/></operator><name pos:line="164" pos:column="10">p<pos:position pos:line="164" pos:column="11"/></name> <operator pos:line="164" pos:column="12">=<pos:position pos:line="164" pos:column="13"/></operator> <literal type="number" pos:line="164" pos:column="14">0<pos:position pos:line="164" pos:column="15"/></literal></expr>;<pos:position pos:line="164" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="165" pos:column="9">p<pos:position pos:line="165" pos:column="10"/></name> <operator pos:line="165" pos:column="11">=<pos:position pos:line="165" pos:column="12"/></operator> <name pos:line="165" pos:column="13">p<pos:position pos:line="165" pos:column="14"/></name> <operator pos:line="165" pos:column="15">+<pos:position pos:line="165" pos:column="16"/></operator> <literal type="number" pos:line="165" pos:column="17">1<pos:position pos:line="165" pos:column="18"/></literal></expr>;<pos:position pos:line="165" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="167" pos:column="9">strcpy<pos:position pos:line="167" pos:column="15"/></name><argument_list pos:line="167" pos:column="15">(<argument><expr><name pos:line="167" pos:column="16">p<pos:position pos:line="167" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="167" pos:column="19">Con_Handle<pos:position pos:line="167" pos:column="29"/></name> <operator pos:line="167" pos:column="30">-&gt;<pos:position pos:line="167" pos:column="35"/></operator> <name pos:line="167" pos:column="33">OSName<pos:position pos:line="167" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="168" pos:column="9">p<pos:position pos:line="168" pos:column="10"/></name> <operator pos:line="168" pos:column="11">=<pos:position pos:line="168" pos:column="12"/></operator> <name pos:line="168" pos:column="13">p<pos:position pos:line="168" pos:column="14"/></name> <operator pos:line="168" pos:column="15">+<pos:position pos:line="168" pos:column="16"/></operator> <call><name pos:line="168" pos:column="17">strlen<pos:position pos:line="168" pos:column="23"/></name><argument_list pos:line="168" pos:column="23">(<argument><expr><name><name pos:line="168" pos:column="24">Con_Handle<pos:position pos:line="168" pos:column="34"/></name> <operator pos:line="168" pos:column="35">-&gt;<pos:position pos:line="168" pos:column="40"/></operator> <name pos:line="168" pos:column="38">OSName<pos:position pos:line="168" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="169" pos:column="9">*<pos:position pos:line="169" pos:column="10"/></operator><name pos:line="169" pos:column="10">p<pos:position pos:line="169" pos:column="11"/></name> <operator pos:line="169" pos:column="12">=<pos:position pos:line="169" pos:column="13"/></operator> <literal type="number" pos:line="169" pos:column="14">0<pos:position pos:line="169" pos:column="15"/></literal></expr>;<pos:position pos:line="169" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="170" pos:column="9">p<pos:position pos:line="170" pos:column="10"/></name> <operator pos:line="170" pos:column="11">=<pos:position pos:line="170" pos:column="12"/></operator> <name pos:line="170" pos:column="13">p<pos:position pos:line="170" pos:column="14"/></name> <operator pos:line="170" pos:column="15">+<pos:position pos:line="170" pos:column="16"/></operator> <literal type="number" pos:line="170" pos:column="17">1<pos:position pos:line="170" pos:column="18"/></literal></expr>;<pos:position pos:line="170" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="172" pos:column="9">strcpy<pos:position pos:line="172" pos:column="15"/></name><argument_list pos:line="172" pos:column="15">(<argument><expr><name pos:line="172" pos:column="16">p<pos:position pos:line="172" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="19">Con_Handle<pos:position pos:line="172" pos:column="29"/></name> <operator pos:line="172" pos:column="30">-&gt;<pos:position pos:line="172" pos:column="35"/></operator> <name pos:line="172" pos:column="33">LMType<pos:position pos:line="172" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="173" pos:column="9">p<pos:position pos:line="173" pos:column="10"/></name> <operator pos:line="173" pos:column="11">=<pos:position pos:line="173" pos:column="12"/></operator> <name pos:line="173" pos:column="13">p<pos:position pos:line="173" pos:column="14"/></name> <operator pos:line="173" pos:column="15">+<pos:position pos:line="173" pos:column="16"/></operator> <call><name pos:line="173" pos:column="17">strlen<pos:position pos:line="173" pos:column="23"/></name><argument_list pos:line="173" pos:column="23">(<argument><expr><name><name pos:line="173" pos:column="24">Con_Handle<pos:position pos:line="173" pos:column="34"/></name> <operator pos:line="173" pos:column="35">-&gt;<pos:position pos:line="173" pos:column="40"/></operator> <name pos:line="173" pos:column="38">LMType<pos:position pos:line="173" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="174" pos:column="9">*<pos:position pos:line="174" pos:column="10"/></operator><name pos:line="174" pos:column="10">p<pos:position pos:line="174" pos:column="11"/></name> <operator pos:line="174" pos:column="12">=<pos:position pos:line="174" pos:column="13"/></operator> <literal type="number" pos:line="174" pos:column="14">0<pos:position pos:line="174" pos:column="15"/></literal></expr>;<pos:position pos:line="174" pos:column="16"/></expr_stmt>

    }<pos:position pos:line="176" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="178" pos:column="5">/* Now send it and get a response */</comment>

    <if pos:line="180" pos:column="5">if <condition pos:line="180" pos:column="8">(<expr><call><name pos:line="180" pos:column="9">RFCNB_Send<pos:position pos:line="180" pos:column="19"/></name><argument_list pos:line="180" pos:column="19">(<argument><expr><name><name pos:line="180" pos:column="20">Con_Handle<pos:position pos:line="180" pos:column="30"/></name> <operator pos:line="180" pos:column="31">-&gt;<pos:position pos:line="180" pos:column="36"/></operator> <name pos:line="180" pos:column="34">Trans_Connect<pos:position pos:line="180" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="49">pkt<pos:position pos:line="180" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="54">pkt_len<pos:position pos:line="180" pos:column="61"/></name></expr></argument>)<pos:position pos:line="180" pos:column="62"/></argument_list></call> <operator pos:line="180" pos:column="63">&lt;<pos:position pos:line="180" pos:column="67"/></operator> <literal type="number" pos:line="180" pos:column="65">0<pos:position pos:line="180" pos:column="66"/></literal></expr>)<pos:position pos:line="180" pos:column="67"/></condition><then pos:line="180" pos:column="67"> <block pos:line="180" pos:column="68">{

<cpp:ifdef pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">ifdef<pos:position pos:line="182" pos:column="7"/></cpp:directive> <name pos:line="182" pos:column="8">DEBUG<pos:position pos:line="182" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="183" pos:column="9">fprintf<pos:position pos:line="183" pos:column="16"/></name><argument_list pos:line="183" pos:column="16">(<argument><expr><name pos:line="183" pos:column="17">stderr<pos:position pos:line="183" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="25">"Error sending SessSetupX request\n"<pos:position pos:line="183" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">endif<pos:position pos:line="184" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="186" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="186" pos:column="23"/></name><argument_list pos:line="186" pos:column="23">(<argument><expr><name pos:line="186" pos:column="24">pkt<pos:position pos:line="186" pos:column="27"/></name></expr></argument>)<pos:position pos:line="186" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="187" pos:column="9">SMBlib_errno<pos:position pos:line="187" pos:column="21"/></name> <operator pos:line="187" pos:column="22">=<pos:position pos:line="187" pos:column="23"/></operator> <name pos:line="187" pos:column="24">SMBlibE_SendFailed<pos:position pos:line="187" pos:column="42"/></name></expr>;<pos:position pos:line="187" pos:column="43"/></expr_stmt>
        <return pos:line="188" pos:column="9">return<expr><operator pos:line="188" pos:column="15">(<pos:position pos:line="188" pos:column="16"/></operator><name pos:line="188" pos:column="16">SMBlibE_BAD<pos:position pos:line="188" pos:column="27"/></name><operator pos:line="188" pos:column="27">)<pos:position pos:line="188" pos:column="28"/></operator></expr>;<pos:position pos:line="188" pos:column="29"/></return>

    }<pos:position pos:line="190" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="192" pos:column="5">/* Now get the response ... */</comment>

    <if pos:line="194" pos:column="5">if <condition pos:line="194" pos:column="8">(<expr><call><name pos:line="194" pos:column="9">RFCNB_Recv<pos:position pos:line="194" pos:column="19"/></name><argument_list pos:line="194" pos:column="19">(<argument><expr><name><name pos:line="194" pos:column="20">Con_Handle<pos:position pos:line="194" pos:column="30"/></name> <operator pos:line="194" pos:column="31">-&gt;<pos:position pos:line="194" pos:column="36"/></operator> <name pos:line="194" pos:column="34">Trans_Connect<pos:position pos:line="194" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="49">pkt<pos:position pos:line="194" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="54">pkt_len<pos:position pos:line="194" pos:column="61"/></name></expr></argument>)<pos:position pos:line="194" pos:column="62"/></argument_list></call> <operator pos:line="194" pos:column="63">&lt;<pos:position pos:line="194" pos:column="67"/></operator> <literal type="number" pos:line="194" pos:column="65">0<pos:position pos:line="194" pos:column="66"/></literal></expr>)<pos:position pos:line="194" pos:column="67"/></condition><then pos:line="194" pos:column="67"> <block pos:line="194" pos:column="68">{

<cpp:ifdef pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">ifdef<pos:position pos:line="196" pos:column="7"/></cpp:directive> <name pos:line="196" pos:column="8">DEBUG<pos:position pos:line="196" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="197" pos:column="9">fprintf<pos:position pos:line="197" pos:column="16"/></name><argument_list pos:line="197" pos:column="16">(<argument><expr><name pos:line="197" pos:column="17">stderr<pos:position pos:line="197" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="25">"Error receiving response to SessSetupAndX\n"<pos:position pos:line="197" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="72"/></expr_stmt>
<cpp:endif pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">endif<pos:position pos:line="198" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="200" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="200" pos:column="23"/></name><argument_list pos:line="200" pos:column="23">(<argument><expr><name pos:line="200" pos:column="24">pkt<pos:position pos:line="200" pos:column="27"/></name></expr></argument>)<pos:position pos:line="200" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="201" pos:column="9">SMBlib_errno<pos:position pos:line="201" pos:column="21"/></name> <operator pos:line="201" pos:column="22">=<pos:position pos:line="201" pos:column="23"/></operator> <name pos:line="201" pos:column="24">SMBlibE_RecvFailed<pos:position pos:line="201" pos:column="42"/></name></expr>;<pos:position pos:line="201" pos:column="43"/></expr_stmt>
        <return pos:line="202" pos:column="9">return<expr><operator pos:line="202" pos:column="15">(<pos:position pos:line="202" pos:column="16"/></operator><name pos:line="202" pos:column="16">SMBlibE_BAD<pos:position pos:line="202" pos:column="27"/></name><operator pos:line="202" pos:column="27">)<pos:position pos:line="202" pos:column="28"/></operator></expr>;<pos:position pos:line="202" pos:column="29"/></return>

    }<pos:position pos:line="204" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="206" pos:column="5">/* Check out the response type ... */</comment>

    <if pos:line="208" pos:column="5">if <condition pos:line="208" pos:column="8">(<expr><call><name pos:line="208" pos:column="9">CVAL<pos:position pos:line="208" pos:column="13"/></name><argument_list pos:line="208" pos:column="13">(<argument><expr><call><name pos:line="208" pos:column="14">SMB_Hdr<pos:position pos:line="208" pos:column="21"/></name><argument_list pos:line="208" pos:column="21">(<argument><expr><name pos:line="208" pos:column="22">pkt<pos:position pos:line="208" pos:column="25"/></name></expr></argument>)<pos:position pos:line="208" pos:column="26"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="208" pos:column="28">SMB_hdr_rcls_offset<pos:position pos:line="208" pos:column="47"/></name></expr></argument>)<pos:position pos:line="208" pos:column="48"/></argument_list></call> <operator pos:line="208" pos:column="49">!=<pos:position pos:line="208" pos:column="51"/></operator> <name pos:line="208" pos:column="52">SMBC_SUCCESS<pos:position pos:line="208" pos:column="64"/></name></expr>)<pos:position pos:line="208" pos:column="65"/></condition><then pos:line="208" pos:column="65"> <block pos:line="208" pos:column="66">{  <comment type="block" pos:line="208" pos:column="69">/* Process error */</comment>

<cpp:ifdef pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">ifdef<pos:position pos:line="210" pos:column="7"/></cpp:directive> <name pos:line="210" pos:column="8">DEBUG<pos:position pos:line="210" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="211" pos:column="9">fprintf<pos:position pos:line="211" pos:column="16"/></name><argument_list pos:line="211" pos:column="16">(<argument><expr><name pos:line="211" pos:column="17">stderr<pos:position pos:line="211" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="25">"SMB_SessSetupAndX failed with errorclass = %i, Error Code = %i\n"<pos:position pos:line="211" pos:column="91"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="212" pos:column="17">CVAL<pos:position pos:line="212" pos:column="21"/></name><argument_list pos:line="212" pos:column="21">(<argument><expr><call><name pos:line="212" pos:column="22">SMB_Hdr<pos:position pos:line="212" pos:column="29"/></name><argument_list pos:line="212" pos:column="29">(<argument><expr><name pos:line="212" pos:column="30">pkt<pos:position pos:line="212" pos:column="33"/></name></expr></argument>)<pos:position pos:line="212" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="212" pos:column="36">SMB_hdr_rcls_offset<pos:position pos:line="212" pos:column="55"/></name></expr></argument>)<pos:position pos:line="212" pos:column="56"/></argument_list></call></expr></argument>,
                <argument><expr><call><name pos:line="213" pos:column="17">SVAL<pos:position pos:line="213" pos:column="21"/></name><argument_list pos:line="213" pos:column="21">(<argument><expr><call><name pos:line="213" pos:column="22">SMB_Hdr<pos:position pos:line="213" pos:column="29"/></name><argument_list pos:line="213" pos:column="29">(<argument><expr><name pos:line="213" pos:column="30">pkt<pos:position pos:line="213" pos:column="33"/></name></expr></argument>)<pos:position pos:line="213" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="213" pos:column="36">SMB_hdr_err_offset<pos:position pos:line="213" pos:column="54"/></name></expr></argument>)<pos:position pos:line="213" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="213" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">endif<pos:position pos:line="214" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="216" pos:column="9">SMBlib_SMB_Error<pos:position pos:line="216" pos:column="25"/></name> <operator pos:line="216" pos:column="26">=<pos:position pos:line="216" pos:column="27"/></operator> <call><name pos:line="216" pos:column="28">IVAL<pos:position pos:line="216" pos:column="32"/></name><argument_list pos:line="216" pos:column="32">(<argument><expr><call><name pos:line="216" pos:column="33">SMB_Hdr<pos:position pos:line="216" pos:column="40"/></name><argument_list pos:line="216" pos:column="40">(<argument><expr><name pos:line="216" pos:column="41">pkt<pos:position pos:line="216" pos:column="44"/></name></expr></argument>)<pos:position pos:line="216" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="216" pos:column="47">SMB_hdr_rcls_offset<pos:position pos:line="216" pos:column="66"/></name></expr></argument>)<pos:position pos:line="216" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="217" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="217" pos:column="23"/></name><argument_list pos:line="217" pos:column="23">(<argument><expr><name pos:line="217" pos:column="24">pkt<pos:position pos:line="217" pos:column="27"/></name></expr></argument>)<pos:position pos:line="217" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="218" pos:column="9">SMBlib_errno<pos:position pos:line="218" pos:column="21"/></name> <operator pos:line="218" pos:column="22">=<pos:position pos:line="218" pos:column="23"/></operator> <name pos:line="218" pos:column="24">SMBlibE_Remote<pos:position pos:line="218" pos:column="38"/></name></expr>;<pos:position pos:line="218" pos:column="39"/></expr_stmt>
        <return pos:line="219" pos:column="9">return<expr><operator pos:line="219" pos:column="15">(<pos:position pos:line="219" pos:column="16"/></operator><name pos:line="219" pos:column="16">SMBlibE_BAD<pos:position pos:line="219" pos:column="27"/></name><operator pos:line="219" pos:column="27">)<pos:position pos:line="219" pos:column="28"/></operator></expr>;<pos:position pos:line="219" pos:column="29"/></return>

    }<pos:position pos:line="221" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="223" pos:column="5">/** @@@ mdz: check for guest login { **/</comment>
    <if pos:line="224" pos:column="5">if <condition pos:line="224" pos:column="8">(<expr><call><name pos:line="224" pos:column="9">SVAL<pos:position pos:line="224" pos:column="13"/></name><argument_list pos:line="224" pos:column="13">(<argument><expr><call><name pos:line="224" pos:column="14">SMB_Hdr<pos:position pos:line="224" pos:column="21"/></name><argument_list pos:line="224" pos:column="21">(<argument><expr><name pos:line="224" pos:column="22">pkt<pos:position pos:line="224" pos:column="25"/></name></expr></argument>)<pos:position pos:line="224" pos:column="26"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="224" pos:column="28">SMB_ssetpr_act_offset<pos:position pos:line="224" pos:column="49"/></name></expr></argument>)<pos:position pos:line="224" pos:column="50"/></argument_list></call> <operator pos:line="224" pos:column="51">&amp;<pos:position pos:line="224" pos:column="56"/></operator> <literal type="number" pos:line="224" pos:column="53">0x1<pos:position pos:line="224" pos:column="56"/></literal></expr>)<pos:position pos:line="224" pos:column="57"/></condition><then pos:line="224" pos:column="57"> <block pos:line="224" pos:column="58">{
        <comment type="block" pos:line="225" pos:column="9">/* do we allow guest login? NO! */</comment>
        <return pos:line="226" pos:column="9">return <expr><operator pos:line="226" pos:column="16">(<pos:position pos:line="226" pos:column="17"/></operator><name pos:line="226" pos:column="17">SMBlibE_BAD<pos:position pos:line="226" pos:column="28"/></name><operator pos:line="226" pos:column="28">)<pos:position pos:line="226" pos:column="29"/></operator></expr>;<pos:position pos:line="226" pos:column="30"/></return>
    }<pos:position pos:line="227" pos:column="6"/></block></then></if>
    <comment type="block" format="doxygen" pos:line="228" pos:column="5">/** @@@ mdz: } **/</comment>

<cpp:ifdef pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">ifdef<pos:position pos:line="230" pos:column="7"/></cpp:directive> <name pos:line="230" pos:column="8">DEBUG<pos:position pos:line="230" pos:column="13"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="231" pos:column="5">fprintf<pos:position pos:line="231" pos:column="12"/></name><argument_list pos:line="231" pos:column="12">(<argument><expr><name pos:line="231" pos:column="13">stderr<pos:position pos:line="231" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="21">"SessSetupAndX response. Action = %i\n"<pos:position pos:line="231" pos:column="60"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="232" pos:column="13">SVAL<pos:position pos:line="232" pos:column="17"/></name><argument_list pos:line="232" pos:column="17">(<argument><expr><call><name pos:line="232" pos:column="18">SMB_Hdr<pos:position pos:line="232" pos:column="25"/></name><argument_list pos:line="232" pos:column="25">(<argument><expr><name pos:line="232" pos:column="26">pkt<pos:position pos:line="232" pos:column="29"/></name></expr></argument>)<pos:position pos:line="232" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="232" pos:column="32">SMB_ssetpr_act_offset<pos:position pos:line="232" pos:column="53"/></name></expr></argument>)<pos:position pos:line="232" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="232" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">endif<pos:position pos:line="233" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="235" pos:column="5">/* Now pick up the UID for future reference ... */</comment>

    <expr_stmt><expr><name><name pos:line="237" pos:column="5">Con_Handle<pos:position pos:line="237" pos:column="15"/></name> <operator pos:line="237" pos:column="16">-&gt;<pos:position pos:line="237" pos:column="21"/></operator> <name pos:line="237" pos:column="19">uid<pos:position pos:line="237" pos:column="22"/></name></name> <operator pos:line="237" pos:column="23">=<pos:position pos:line="237" pos:column="24"/></operator> <call><name pos:line="237" pos:column="25">SVAL<pos:position pos:line="237" pos:column="29"/></name><argument_list pos:line="237" pos:column="29">(<argument><expr><call><name pos:line="237" pos:column="30">SMB_Hdr<pos:position pos:line="237" pos:column="37"/></name><argument_list pos:line="237" pos:column="37">(<argument><expr><name pos:line="237" pos:column="38">pkt<pos:position pos:line="237" pos:column="41"/></name></expr></argument>)<pos:position pos:line="237" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="237" pos:column="44">SMB_hdr_uid_offset<pos:position pos:line="237" pos:column="62"/></name></expr></argument>)<pos:position pos:line="237" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="238" pos:column="5">RFCNB_Free_Pkt<pos:position pos:line="238" pos:column="19"/></name><argument_list pos:line="238" pos:column="19">(<argument><expr><name pos:line="238" pos:column="20">pkt<pos:position pos:line="238" pos:column="23"/></name></expr></argument>)<pos:position pos:line="238" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="25"/></expr_stmt>

    <return pos:line="240" pos:column="5">return<expr><operator pos:line="240" pos:column="11">(<pos:position pos:line="240" pos:column="12"/></operator><literal type="number" pos:line="240" pos:column="12">0<pos:position pos:line="240" pos:column="13"/></literal><operator pos:line="240" pos:column="13">)<pos:position pos:line="240" pos:column="14"/></operator></expr>;<pos:position pos:line="240" pos:column="15"/></return>

}<pos:position pos:line="242" pos:column="2"/></block></function></unit>

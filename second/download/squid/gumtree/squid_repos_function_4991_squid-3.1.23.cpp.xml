<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4991_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">ScheduleCall<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">fileName<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">fileLine<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="50">AsyncCall<pos:position pos:line="2" pos:column="59"/></name><operator pos:line="2" pos:column="59">::<pos:position pos:line="2" pos:column="61"/></operator><name pos:line="2" pos:column="61">Pointer<pos:position pos:line="2" pos:column="68"/></name></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">call<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name><name pos:line="4" pos:column="12">call<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">debugSection<pos:position pos:line="4" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="32">call<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">debugLevel<pos:position pos:line="4" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">fileName<pos:position pos:line="4" pos:column="58"/></name> <operator pos:line="4" pos:column="59">&lt;&lt;<pos:position pos:line="4" pos:column="67"/></operator> <literal type="string" pos:line="4" pos:column="62">"("<pos:position pos:line="4" pos:column="65"/></literal> <operator pos:line="4" pos:column="66">&lt;&lt;<pos:position pos:line="4" pos:column="74"/></operator> <name pos:line="4" pos:column="69">fileLine<pos:position pos:line="4" pos:column="77"/></name> <operator pos:line="4" pos:column="78">&lt;&lt;<pos:position pos:line="4" pos:column="86"/></operator>
           <literal type="string" pos:line="5" pos:column="12">") will call "<pos:position pos:line="5" pos:column="26"/></literal> <operator pos:line="5" pos:column="27">&lt;&lt;<pos:position pos:line="5" pos:column="35"/></operator> <operator pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">call<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">&lt;&lt;<pos:position pos:line="5" pos:column="44"/></operator> <literal type="string" pos:line="5" pos:column="39">" [call"<pos:position pos:line="5" pos:column="47"/></literal><operator pos:line="5" pos:column="47">&lt;&lt;<pos:position pos:line="5" pos:column="55"/></operator> <name><name pos:line="5" pos:column="50">call<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">-&gt;<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="56">id<pos:position pos:line="5" pos:column="58"/></name></name> <operator pos:line="5" pos:column="59">&lt;&lt;<pos:position pos:line="5" pos:column="67"/></operator> <literal type="char" pos:line="5" pos:column="62">']'<pos:position pos:line="5" pos:column="65"/></literal></expr></argument> )<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">AsyncCallQueue<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">::<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">Instance<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call><operator pos:line="6" pos:column="31">.<pos:position pos:line="6" pos:column="32"/></operator><call><name pos:line="6" pos:column="32">schedule<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">call<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><literal type="boolean" pos:line="7" pos:column="12">true<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2321_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">MemObject<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">policyLowestOffsetToKeep<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name pos:line="2" pos:column="37">bool<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">swap<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> <specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * Careful.  lowest_offset can be greater than endOffset(), such
     * as in the case of a range request.
     */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int64_t<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">lowest_offset<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name pos:line="8" pos:column="29">lowestMemReaderOffset<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">()<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">endOffset<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">()<pos:position pos:line="10" pos:column="20"/></argument_list></call> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="23">lowest_offset<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">||<pos:position pos:line="10" pos:column="39"/></operator>
            <call><name pos:line="11" pos:column="13">endOffset<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">()<pos:position pos:line="11" pos:column="24"/></argument_list></call> <operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">inmem_lo<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">&gt;<pos:position pos:line="11" pos:column="40"/></operator> <operator pos:line="11" pos:column="38">(<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">int64_t<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">)<pos:position pos:line="11" pos:column="47"/></operator><name><name pos:line="11" pos:column="47">Config<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">.<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">Store<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">.<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="60">maxInMemObjSize<pos:position pos:line="11" pos:column="75"/></name></name> <operator pos:line="11" pos:column="76">||<pos:position pos:line="11" pos:column="78"/></operator>
            <operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">swap<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&amp;&amp;<pos:position pos:line="12" pos:column="29"/></operator> <operator pos:line="12" pos:column="22">!<pos:position pos:line="12" pos:column="23"/></operator><name><name pos:line="12" pos:column="23">Config<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">onoff<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">.<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">memory_cache_first<pos:position pos:line="12" pos:column="54"/></name></name><operator pos:line="12" pos:column="54">)<pos:position pos:line="12" pos:column="55"/></operator></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">lowest_offset<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></return></block></then></if>

    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">inmem_lo<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4320_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ssl<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">LocalContextStorage<pos:position pos:line="1" pos:column="25"/></name></name> <modifier pos:line="1" pos:column="26">&amp;<pos:position pos:line="1" pos:column="31"/></modifier></type> <name><name pos:line="1" pos:column="28">Ssl<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">GlobalContextStorage<pos:position pos:line="1" pos:column="53"/></name><operator pos:line="1" pos:column="53">::<pos:position pos:line="1" pos:column="55"/></operator><name pos:line="1" pos:column="55">getLocalStorage<pos:position pos:line="1" pos:column="70"/></name></name><parameter_list pos:line="1" pos:column="70">(<parameter><decl><type><name><name pos:line="1" pos:column="71">Ip<pos:position pos:line="1" pos:column="73"/></name><operator pos:line="1" pos:column="73">::<pos:position pos:line="1" pos:column="75"/></operator><name pos:line="1" pos:column="75">Address<pos:position pos:line="1" pos:column="82"/></name></name> <specifier pos:line="1" pos:column="83">const<pos:position pos:line="1" pos:column="88"/></specifier> <modifier pos:line="1" pos:column="89">&amp;<pos:position pos:line="1" pos:column="94"/></modifier></type> <name pos:line="1" pos:column="91">address<pos:position pos:line="1" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="99"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">reconfigureFinish<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">()<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="25"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">map<pos:position pos:line="4" pos:column="13"/></name><argument_list type="generic" pos:line="4" pos:column="13">&lt;<argument><expr><name><name pos:line="4" pos:column="14">Ip<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">::<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">Address<pos:position pos:line="4" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">LocalContextStorage<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></expr></argument>&gt;<pos:position pos:line="4" pos:column="52"/></argument_list></name><operator pos:line="4" pos:column="49">::<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="51">iterator<pos:position pos:line="4" pos:column="59"/></name></name></type> <name pos:line="4" pos:column="60">i<pos:position pos:line="4" pos:column="61"/></name> <init pos:line="4" pos:column="62">= <expr><call><name><name pos:line="4" pos:column="64">storage<pos:position pos:line="4" pos:column="71"/></name><operator pos:line="4" pos:column="71">.<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="72">find<pos:position pos:line="4" pos:column="76"/></name></name><argument_list pos:line="4" pos:column="76">(<argument><expr><name pos:line="4" pos:column="77">address<pos:position pos:line="4" pos:column="84"/></name></expr></argument>)<pos:position pos:line="4" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="86"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">!=<pos:position pos:line="5" pos:column="17"/></operator> <call><name><name pos:line="5" pos:column="18">storage<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">end<pos:position pos:line="5" pos:column="29"/></name></name><argument_list pos:line="5" pos:column="29">()<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">second<pos:position pos:line="6" pos:column="23"/></name></name><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator></expr>;<pos:position pos:line="6" pos:column="25"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4924_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">asnInit<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">void<pos:position pos:line="2" pos:column="13"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="14"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">bool<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">inited<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="boolean" pos:line="4" pos:column="26">false<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">squid_max_keylen<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <literal type="number" pos:line="5" pos:column="24">40<pos:position pos:line="5" pos:column="26"/></literal></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">inited<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">inited<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="boolean" pos:line="8" pos:column="18">true<pos:position pos:line="8" pos:column="22"/></literal></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">squid_rn_init<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">()<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">squid_rn_inithead<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="24">AS_tree_head<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="38">8<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">asnRegisterWithCacheManager<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">()<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4064_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">noteMoreBodySpaceAvailable<pos:position pos:line="1" pos:column="59"/></name></name><parameter_list pos:line="1" pos:column="59">(<parameter><decl><type><name><name pos:line="1" pos:column="60">BodyPipe<pos:position pos:line="1" pos:column="68"/></name><operator pos:line="1" pos:column="68">::<pos:position pos:line="1" pos:column="70"/></operator><name pos:line="1" pos:column="70">Pointer<pos:position pos:line="1" pos:column="77"/></name></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">state<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">.<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">sending<pos:position pos:line="3" pos:column="22"/></name></name> <operator pos:line="3" pos:column="23">==<pos:position pos:line="3" pos:column="25"/></operator> <name><name pos:line="3" pos:column="26">State<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">::<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">sendingVirgin<pos:position pos:line="3" pos:column="46"/></name></name></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="9">echoMore<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">()<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt></block></then>
    <elseif pos:line="5" pos:column="5">else <if pos:line="5" pos:column="10">if <condition pos:line="5" pos:column="13">(<expr><name><name pos:line="5" pos:column="14">state<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">sending<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">==<pos:position pos:line="5" pos:column="30"/></operator> <name><name pos:line="5" pos:column="31">State<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">::<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">sendingAdapted<pos:position pos:line="5" pos:column="52"/></name></name></expr>)<pos:position pos:line="5" pos:column="53"/></condition><then pos:line="5" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">parseMore<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">()<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt></block></then></if></elseif>
    <else pos:line="7" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">Must<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name><name pos:line="8" pos:column="14">state<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">sending<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">==<pos:position pos:line="8" pos:column="30"/></operator> <name><name pos:line="8" pos:column="31">State<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">::<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">sendingUndecided<pos:position pos:line="8" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3902_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">ServicePointer<pos:position pos:line="1" pos:column="27"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">ServicePlan<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">current<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list> <specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// may return NULL even if not atEof</comment>
    <return pos:line="5" pos:column="5">return <expr><ternary><condition><expr><name pos:line="5" pos:column="12">atEof<pos:position pos:line="5" pos:column="17"/></name></expr> ?<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19"> <expr><call><name><name pos:line="5" pos:column="20">Adaptation<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">::<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">ServicePointer<pos:position pos:line="5" pos:column="46"/></name></name><argument_list pos:line="5" pos:column="46">()<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="49"/></then><else pos:line="5" pos:column="49">: <expr><call><name><name pos:line="5" pos:column="51">group<pos:position pos:line="5" pos:column="56"/></name><operator pos:line="5" pos:column="56">-&gt;<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="58">at<pos:position pos:line="5" pos:column="60"/></name></name><argument_list pos:line="5" pos:column="60">(<argument><expr><name pos:line="5" pos:column="61">pos<pos:position pos:line="5" pos:column="64"/></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="66"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

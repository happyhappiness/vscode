<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7401_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">callBack<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">83<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"TLS setup ended for "<pos:position pos:line="4" pos:column="41"/></literal> <operator pos:line="4" pos:column="42">&lt;&lt;<pos:position pos:line="4" pos:column="50"/></operator> <call><name pos:line="4" pos:column="45">serverConnection<pos:position pos:line="4" pos:column="61"/></name><argument_list pos:line="4" pos:column="61">()<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">AsyncCall<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Pointer<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">cb<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">callback<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
    <comment type="line" pos:line="7" pos:column="5">// Do this now so that if we throw below, swanSong() assert that we _tried_</comment>
    <comment type="line" pos:line="8" pos:column="5">// to call back holds.</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">callback<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt> <comment type="line" pos:line="9" pos:column="22">// this should make done() true</comment>

    <comment type="line" pos:line="11" pos:column="5">// remove close handler</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">comm_remove_close_handler<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><call><name pos:line="12" pos:column="31">serverConnection<pos:position pos:line="12" pos:column="47"/></name><argument_list pos:line="12" pos:column="47">()<pos:position pos:line="12" pos:column="49"/></argument_list></call><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">fd<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">closeHandler<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">CbDialer<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">dialer<pos:position pos:line="14" pos:column="21"/></name> <init pos:line="14" pos:column="22">= <expr><cast type="dynamic" pos:line="14" pos:column="24">dynamic_cast<argument_list type="generic" pos:line="14" pos:column="36">&lt;<argument><expr><name pos:line="14" pos:column="37">CbDialer<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">*<pos:position pos:line="14" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="50"/></argument_list><argument_list pos:line="14" pos:column="47">(<argument><expr><call><name><name pos:line="14" pos:column="48">cb<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">getDialer<pos:position pos:line="14" pos:column="61"/></name></name><argument_list pos:line="14" pos:column="61">()<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="14" pos:column="65"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">Must<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">dialer<pos:position pos:line="15" pos:column="16"/></name></expr></argument>)<pos:position pos:line="15" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">dialer<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">answer<pos:position pos:line="16" pos:column="19"/></name></name><argument_list pos:line="16" pos:column="19">()<pos:position pos:line="16" pos:column="21"/></argument_list></call><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">conn<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">serverConnection<pos:position pos:line="16" pos:column="45"/></name><argument_list pos:line="16" pos:column="45">()<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ScheduleCallHere<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">cb<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

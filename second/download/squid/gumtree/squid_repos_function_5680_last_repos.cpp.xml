<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5680_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CredentialsCache<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">Cleanup<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">void<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">data<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">29<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"checkpoint"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
    <comment type="line" pos:line="5" pos:column="5">// data is this in disguise</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">CredentialsCache<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">self<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><cast type="static" pos:line="6" pos:column="30">static_cast<argument_list type="generic" pos:line="6" pos:column="41">&lt;<argument><expr><name pos:line="6" pos:column="42">CredentialsCache<pos:position pos:line="6" pos:column="58"/></name> <operator pos:line="6" pos:column="59">*<pos:position pos:line="6" pos:column="60"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="64"/></argument_list><argument_list pos:line="6" pos:column="61">(<argument><expr><name pos:line="6" pos:column="62">data<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">self<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">cleanup<pos:position pos:line="7" pos:column="18"/></name></name><argument_list pos:line="7" pos:column="18">()<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

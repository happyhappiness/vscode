<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2138_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ClientDelayConfig<pos:position pos:line="1" pos:column="23"/></name><operator pos:line="1" pos:column="23">::<pos:position pos:line="1" pos:column="25"/></operator><name pos:line="1" pos:column="25">parsePoolAccess<pos:position pos:line="1" pos:column="40"/></name></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">ConfigParser<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">&amp;<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="55">parser<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">short<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">pool<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">ConfigParser<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">ParseUShort<pos:position pos:line="5" pos:column="30"/></name></name><argument_list pos:line="5" pos:column="30">(<argument><expr><operator pos:line="5" pos:column="31">&amp;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="32">pool<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">pool<pos:position pos:line="7" pos:column="13"/></name> <argument_list type="generic" pos:line="7" pos:column="14">&lt; <argument><expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal> <operator pos:line="7" pos:column="18">||<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">pool<pos:position pos:line="7" pos:column="25"/></name></expr></argument> &gt;<pos:position pos:line="7" pos:column="30"/></argument_list></name> <call><name><name pos:line="7" pos:column="28">pools<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">size<pos:position pos:line="7" pos:column="38"/></name></name><argument_list pos:line="7" pos:column="38">()<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41"> <block pos:line="7" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">3<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">DBG_CRITICAL<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"parse_client_delay_pool_rates: Ignoring pool "<pos:position pos:line="8" pos:column="80"/></literal> <operator pos:line="8" pos:column="81">&lt;&lt;<pos:position pos:line="8" pos:column="89"/></operator> <name pos:line="8" pos:column="84">pool<pos:position pos:line="8" pos:column="88"/></name> <operator pos:line="8" pos:column="89">&lt;&lt;<pos:position pos:line="8" pos:column="97"/></operator> <literal type="string" pos:line="8" pos:column="92">" not in 1 .. "<pos:position pos:line="8" pos:column="107"/></literal> <operator pos:line="8" pos:column="108">&lt;&lt;<pos:position pos:line="8" pos:column="116"/></operator> <call><name><name pos:line="8" pos:column="111">pools<pos:position pos:line="8" pos:column="116"/></name><operator pos:line="8" pos:column="116">.<pos:position pos:line="8" pos:column="117"/></operator><name pos:line="8" pos:column="117">size<pos:position pos:line="8" pos:column="121"/></name></name><argument_list pos:line="8" pos:column="121">()<pos:position pos:line="8" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="125"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="12" pos:column="5">--<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">pool<pos:position pos:line="12" pos:column="11"/></name></expr>;<pos:position pos:line="12" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">aclParseAccessLine<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"client_delay_access"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">parser<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name><name pos:line="13" pos:column="56">pools<pos:position pos:line="13" pos:column="61"/></name><index pos:line="13" pos:column="61">[<expr><name pos:line="13" pos:column="62">pool<pos:position pos:line="13" pos:column="66"/></name></expr>]<pos:position pos:line="13" pos:column="67"/></index></name><operator pos:line="13" pos:column="67">.<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="68">access<pos:position pos:line="13" pos:column="74"/></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="76"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

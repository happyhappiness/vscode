<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3072_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientHttpConnectionsOpen<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">void<pos:position pos:line="2" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">AnyP<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">::<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">PortCfgPointer<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">s<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">HttpPortList<pos:position pos:line="4" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></init> <condition><expr><name pos:line="4" pos:column="49">s<pos:position pos:line="4" pos:column="50"/></name> <operator pos:line="4" pos:column="51">!=<pos:position pos:line="4" pos:column="53"/></operator> <name pos:line="4" pos:column="54">NULL<pos:position pos:line="4" pos:column="58"/></name></expr>;<pos:position pos:line="4" pos:column="59"/></condition> <incr><expr><name pos:line="4" pos:column="60">s<pos:position pos:line="4" pos:column="61"/></name> <operator pos:line="4" pos:column="62">=<pos:position pos:line="4" pos:column="63"/></operator> <name><name pos:line="4" pos:column="64">s<pos:position pos:line="4" pos:column="65"/></name><operator pos:line="4" pos:column="65">-&gt;<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="67">next<pos:position pos:line="4" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="72"/></control> <block pos:line="4" pos:column="73">{
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">SBuf<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">&amp;<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="21">scheme<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><call><name><name pos:line="5" pos:column="30">AnyP<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">::<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">UriScheme<pos:position pos:line="5" pos:column="45"/></name></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name><name pos:line="5" pos:column="46">s<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">transport<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">.<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="59">protocol<pos:position pos:line="5" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call><operator pos:line="5" pos:column="68">.<pos:position pos:line="5" pos:column="69"/></operator><call><name pos:line="5" pos:column="69">image<pos:position pos:line="5" pos:column="74"/></name><argument_list pos:line="5" pos:column="74">()<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="77"/></decl_stmt>

        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">MAXTCPLISTENPORTS<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">NHttpSockets<pos:position pos:line="7" pos:column="46"/></name></expr>)<pos:position pos:line="7" pos:column="47"/></condition><then pos:line="7" pos:column="47"> <block pos:line="7" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">debugs<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="number" pos:line="8" pos:column="20">1<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">DBG_IMPORTANT<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"WARNING: You have too many '"<pos:position pos:line="8" pos:column="68"/></literal> <operator pos:line="8" pos:column="69">&lt;&lt;<pos:position pos:line="8" pos:column="77"/></operator> <name pos:line="8" pos:column="72">scheme<pos:position pos:line="8" pos:column="78"/></name> <operator pos:line="8" pos:column="79">&lt;&lt;<pos:position pos:line="8" pos:column="87"/></operator> <literal type="string" pos:line="8" pos:column="82">"_port' lines."<pos:position pos:line="8" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="99"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">DBG_IMPORTANT<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"         The limit is "<pos:position pos:line="9" pos:column="62"/></literal> <operator pos:line="9" pos:column="63">&lt;&lt;<pos:position pos:line="9" pos:column="71"/></operator> <name pos:line="9" pos:column="66">MAXTCPLISTENPORTS<pos:position pos:line="9" pos:column="83"/></name> <operator pos:line="9" pos:column="84">&lt;&lt;<pos:position pos:line="9" pos:column="92"/></operator> <literal type="string" pos:line="9" pos:column="87">" HTTP ports."<pos:position pos:line="9" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="103"/></expr_stmt>
            <continue pos:line="10" pos:column="13">continue;<pos:position pos:line="10" pos:column="22"/></continue>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">USE_OPENSSL<pos:position pos:line="13" pos:column="16"/></name></expr></cpp:if>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">s<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">flags<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">tunnelSslBumping<pos:position pos:line="14" pos:column="38"/></name></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39"> <block pos:line="14" pos:column="40">{
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><operator pos:line="15" pos:column="17">!<pos:position pos:line="15" pos:column="18"/></operator><name><name pos:line="15" pos:column="18">Config<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">accessList<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">ssl_bump<pos:position pos:line="15" pos:column="44"/></name></name></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45"> <block pos:line="15" pos:column="46">{
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">debugs<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="number" pos:line="16" pos:column="24">33<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">DBG_IMPORTANT<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="43">"WARNING: No ssl_bump configured. Disabling ssl-bump on "<pos:position pos:line="16" pos:column="100"/></literal> <operator pos:line="16" pos:column="101">&lt;&lt;<pos:position pos:line="16" pos:column="109"/></operator> <name pos:line="16" pos:column="104">scheme<pos:position pos:line="16" pos:column="110"/></name> <operator pos:line="16" pos:column="111">&lt;&lt;<pos:position pos:line="16" pos:column="119"/></operator> <literal type="string" pos:line="16" pos:column="114">"_port "<pos:position pos:line="16" pos:column="122"/></literal> <operator pos:line="16" pos:column="123">&lt;&lt;<pos:position pos:line="16" pos:column="131"/></operator> <name><name pos:line="16" pos:column="126">s<pos:position pos:line="16" pos:column="127"/></name><operator pos:line="16" pos:column="127">-&gt;<pos:position pos:line="16" pos:column="132"/></operator><name pos:line="16" pos:column="129">s<pos:position pos:line="16" pos:column="130"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="132"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="17" pos:column="17">s<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">flags<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">tunnelSslBumping<pos:position pos:line="17" pos:column="42"/></name></name> <operator pos:line="17" pos:column="43">=<pos:position pos:line="17" pos:column="44"/></operator> <literal type="boolean" pos:line="17" pos:column="45">false<pos:position pos:line="17" pos:column="50"/></literal></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><operator pos:line="19" pos:column="17">!<pos:position pos:line="19" pos:column="18"/></operator><name><name pos:line="19" pos:column="18">s<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">secure<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">staticContext<pos:position pos:line="19" pos:column="41"/></name></name> <operator pos:line="19" pos:column="42">&amp;&amp;<pos:position pos:line="19" pos:column="52"/></operator> <operator pos:line="19" pos:column="45">!<pos:position pos:line="19" pos:column="46"/></operator><name><name pos:line="19" pos:column="46">s<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">generateHostCertificates<pos:position pos:line="19" pos:column="73"/></name></name></expr>)<pos:position pos:line="19" pos:column="74"/></condition><then pos:line="19" pos:column="74"> <block pos:line="19" pos:column="75">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">debugs<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><literal type="number" pos:line="20" pos:column="24">1<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">DBG_IMPORTANT<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="42">"Will not bump SSL at "<pos:position pos:line="20" pos:column="65"/></literal> <operator pos:line="20" pos:column="66">&lt;&lt;<pos:position pos:line="20" pos:column="74"/></operator> <name pos:line="20" pos:column="69">scheme<pos:position pos:line="20" pos:column="75"/></name> <operator pos:line="20" pos:column="76">&lt;&lt;<pos:position pos:line="20" pos:column="84"/></operator> <literal type="string" pos:line="20" pos:column="79">"_port "<pos:position pos:line="20" pos:column="87"/></literal> <operator pos:line="20" pos:column="88">&lt;&lt;<pos:position pos:line="20" pos:column="96"/></operator> <name><name pos:line="20" pos:column="91">s<pos:position pos:line="20" pos:column="92"/></name><operator pos:line="20" pos:column="92">-&gt;<pos:position pos:line="20" pos:column="97"/></operator><name pos:line="20" pos:column="94">s<pos:position pos:line="20" pos:column="95"/></name></name> <operator pos:line="20" pos:column="96">&lt;&lt;<pos:position pos:line="20" pos:column="104"/></operator> <literal type="string" pos:line="20" pos:column="99">" due to TLS initialization failure."<pos:position pos:line="20" pos:column="136"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="138"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="21" pos:column="17">s<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">flags<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">tunnelSslBumping<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">=<pos:position pos:line="21" pos:column="44"/></operator> <literal type="boolean" pos:line="21" pos:column="45">false<pos:position pos:line="21" pos:column="50"/></literal></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">s<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">transport<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">.<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">protocol<pos:position pos:line="22" pos:column="42"/></name></name> <operator pos:line="22" pos:column="43">==<pos:position pos:line="22" pos:column="45"/></operator> <name><name pos:line="22" pos:column="46">AnyP<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">::<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="52">PROTO_HTTP<pos:position pos:line="22" pos:column="62"/></name></name></expr>)<pos:position pos:line="22" pos:column="63"/></condition><then pos:line="22" pos:column="63">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="21">s<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">secure<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">encryptTransport<pos:position pos:line="23" pos:column="47"/></name></name> <operator pos:line="23" pos:column="48">=<pos:position pos:line="23" pos:column="49"/></operator> <literal type="boolean" pos:line="23" pos:column="50">false<pos:position pos:line="23" pos:column="55"/></literal></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt></block></then></if>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">s<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">flags<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">tunnelSslBumping<pos:position pos:line="25" pos:column="42"/></name></name></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43"> <block pos:line="25" pos:column="44">{
                <comment type="line" pos:line="26" pos:column="17">// Create ssl_ctx cache for this port.</comment>
                <decl_stmt><decl><type><name pos:line="27" pos:column="17">auto<pos:position pos:line="27" pos:column="21"/></name></type> <name pos:line="27" pos:column="22">sz<pos:position pos:line="27" pos:column="24"/></name> <init pos:line="27" pos:column="25">= <expr><ternary><condition><expr><name><name pos:line="27" pos:column="27">s<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">dynamicCertMemCacheSize<pos:position pos:line="27" pos:column="53"/></name></name> <operator pos:line="27" pos:column="54">==<pos:position pos:line="27" pos:column="56"/></operator> <call><name><name pos:line="27" pos:column="57">std<pos:position pos:line="27" pos:column="60"/></name><operator pos:line="27" pos:column="60">::<pos:position pos:line="27" pos:column="62"/></operator><name><name pos:line="27" pos:column="62">numeric_limits<pos:position pos:line="27" pos:column="76"/></name><argument_list type="generic" pos:line="27" pos:column="76">&lt;<argument><expr><name pos:line="27" pos:column="77">size_t<pos:position pos:line="27" pos:column="83"/></name></expr></argument>&gt;<pos:position pos:line="27" pos:column="87"/></argument_list></name><operator pos:line="27" pos:column="84">::<pos:position pos:line="27" pos:column="86"/></operator><name pos:line="27" pos:column="86">max<pos:position pos:line="27" pos:column="89"/></name></name><argument_list pos:line="27" pos:column="89">()<pos:position pos:line="27" pos:column="91"/></argument_list></call></expr> ?<pos:position pos:line="27" pos:column="93"/></condition><then pos:line="27" pos:column="93"> <expr><literal type="number" pos:line="27" pos:column="94">4194304<pos:position pos:line="27" pos:column="101"/></literal></expr> <pos:position pos:line="27" pos:column="102"/></then><else pos:line="27" pos:column="102">: <expr><name><name pos:line="27" pos:column="104">s<pos:position pos:line="27" pos:column="105"/></name><operator pos:line="27" pos:column="105">-&gt;<pos:position pos:line="27" pos:column="110"/></operator><name pos:line="27" pos:column="107">dynamicCertMemCacheSize<pos:position pos:line="27" pos:column="130"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="27" pos:column="131"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="28" pos:column="17">Ssl<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">::<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">TheGlobalContextStorage<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">.<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="46">addLocalStorage<pos:position pos:line="28" pos:column="61"/></name></name><argument_list pos:line="28" pos:column="61">(<argument><expr><name><name pos:line="28" pos:column="62">s<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">-&gt;<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="65">s<pos:position pos:line="28" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">sz<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">s<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">secure<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">encryptTransport<pos:position pos:line="32" pos:column="39"/></name></name> <operator pos:line="32" pos:column="40">&amp;&amp;<pos:position pos:line="32" pos:column="50"/></operator> <operator pos:line="32" pos:column="43">!<pos:position pos:line="32" pos:column="44"/></operator><name><name pos:line="32" pos:column="44">s<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">secure<pos:position pos:line="32" pos:column="53"/></name><operator pos:line="32" pos:column="53">.<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="54">staticContext<pos:position pos:line="32" pos:column="67"/></name></name></expr>)<pos:position pos:line="32" pos:column="68"/></condition><then pos:line="32" pos:column="68"> <block pos:line="32" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">debugs<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="number" pos:line="33" pos:column="20">1<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="23">DBG_CRITICAL<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="37">"ERROR: Ignoring "<pos:position pos:line="33" pos:column="55"/></literal> <operator pos:line="33" pos:column="56">&lt;&lt;<pos:position pos:line="33" pos:column="64"/></operator> <name pos:line="33" pos:column="59">scheme<pos:position pos:line="33" pos:column="65"/></name> <operator pos:line="33" pos:column="66">&lt;&lt;<pos:position pos:line="33" pos:column="74"/></operator> <literal type="string" pos:line="33" pos:column="69">"_port "<pos:position pos:line="33" pos:column="77"/></literal> <operator pos:line="33" pos:column="78">&lt;&lt;<pos:position pos:line="33" pos:column="86"/></operator> <name><name pos:line="33" pos:column="81">s<pos:position pos:line="33" pos:column="82"/></name><operator pos:line="33" pos:column="82">-&gt;<pos:position pos:line="33" pos:column="87"/></operator><name pos:line="33" pos:column="84">s<pos:position pos:line="33" pos:column="85"/></name></name> <operator pos:line="33" pos:column="86">&lt;&lt;<pos:position pos:line="33" pos:column="94"/></operator> <literal type="string" pos:line="33" pos:column="89">" due to TLS context initialization failure."<pos:position pos:line="33" pos:column="134"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="136"/></expr_stmt>
            <continue pos:line="34" pos:column="13">continue;<pos:position pos:line="34" pos:column="22"/></continue>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="line" pos:line="38" pos:column="9">// Fill out a Comm::Connection which IPC will open as a listener for us</comment>
        <comment type="line" pos:line="39" pos:column="9">//  then pass back when active so we can start a TcpAcceptor subscription.</comment>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">s<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">listenConn<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <operator pos:line="40" pos:column="25">new<pos:position pos:line="40" pos:column="28"/></operator> <name><name pos:line="40" pos:column="29">Comm<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">::<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">Connection<pos:position pos:line="40" pos:column="45"/></name></name></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">s<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">listenConn<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">local<pos:position pos:line="41" pos:column="29"/></name></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <name><name pos:line="41" pos:column="32">s<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">-&gt;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="35">s<pos:position pos:line="41" pos:column="36"/></name></name></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="43" pos:column="9">s<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">listenConn<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">flags<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">COMM_NONBLOCKING<pos:position pos:line="43" pos:column="48"/></name> <operator pos:line="43" pos:column="49">|<pos:position pos:line="43" pos:column="50"/></operator> <operator pos:line="43" pos:column="51">(<pos:position pos:line="43" pos:column="52"/></operator><ternary><condition><expr><name><name pos:line="43" pos:column="52">s<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">flags<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">.<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="61">tproxyIntercept<pos:position pos:line="43" pos:column="76"/></name></name></expr> ?<pos:position pos:line="43" pos:column="78"/></condition><then pos:line="43" pos:column="78"> <expr><name pos:line="43" pos:column="79">COMM_TRANSPARENT<pos:position pos:line="43" pos:column="95"/></name></expr> <pos:position pos:line="43" pos:column="96"/></then><else pos:line="43" pos:column="96">: <expr><literal type="number" pos:line="43" pos:column="98">0<pos:position pos:line="43" pos:column="99"/></literal></expr></else></ternary><operator pos:line="43" pos:column="99">)<pos:position pos:line="43" pos:column="100"/></operator> <operator pos:line="43" pos:column="101">|<pos:position pos:line="43" pos:column="102"/></operator>
                               <operator pos:line="44" pos:column="32">(<pos:position pos:line="44" pos:column="33"/></operator><ternary><condition><expr><name><name pos:line="44" pos:column="33">s<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">flags<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">.<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">natIntercept<pos:position pos:line="44" pos:column="54"/></name></name></expr> ?<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56"> <expr><name pos:line="44" pos:column="57">COMM_INTERCEPTION<pos:position pos:line="44" pos:column="74"/></name></expr> <pos:position pos:line="44" pos:column="75"/></then><else pos:line="44" pos:column="75">: <expr><literal type="number" pos:line="44" pos:column="77">0<pos:position pos:line="44" pos:column="78"/></literal></expr></else></ternary><operator pos:line="44" pos:column="78">)<pos:position pos:line="44" pos:column="79"/></operator></expr>;<pos:position pos:line="44" pos:column="80"/></expr_stmt>

        <typedef pos:line="46" pos:column="9">typedef <type><name><name pos:line="46" pos:column="17">CommCbFunPtrCallT<pos:position pos:line="46" pos:column="34"/></name><argument_list type="generic" pos:line="46" pos:column="34">&lt;<argument><expr><name pos:line="46" pos:column="35">CommAcceptCbPtrFun<pos:position pos:line="46" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="46" pos:column="57"/></argument_list></name></type> <name pos:line="46" pos:column="55">AcceptCall<pos:position pos:line="46" pos:column="65"/></name>;<pos:position pos:line="46" pos:column="66"/></typedef>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">s<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">transport<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">.<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="26">protocol<pos:position pos:line="47" pos:column="34"/></name></name> <operator pos:line="47" pos:column="35">==<pos:position pos:line="47" pos:column="37"/></operator> <name><name pos:line="47" pos:column="38">AnyP<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">::<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">PROTO_HTTP<pos:position pos:line="47" pos:column="54"/></name></name></expr>)<pos:position pos:line="47" pos:column="55"/></condition><then pos:line="47" pos:column="55"> <block pos:line="47" pos:column="56">{
            <comment type="line" pos:line="48" pos:column="13">// setup the subscriptions such that new connections accepted by listenConn are handled by HTTP</comment>
            <decl_stmt><decl><type><name><name pos:line="49" pos:column="13">RefCount<pos:position pos:line="49" pos:column="21"/></name><argument_list type="generic" pos:line="49" pos:column="21">&lt;<argument><expr><name pos:line="49" pos:column="22">AcceptCall<pos:position pos:line="49" pos:column="32"/></name></expr></argument>&gt;<pos:position pos:line="49" pos:column="36"/></argument_list></name></type> <name pos:line="49" pos:column="34">subCall<pos:position pos:line="49" pos:column="41"/></name> <init pos:line="49" pos:column="42">= <expr><call><name pos:line="49" pos:column="44">commCbCall<pos:position pos:line="49" pos:column="54"/></name><argument_list pos:line="49" pos:column="54">(<argument><expr><literal type="number" pos:line="49" pos:column="55">5<pos:position pos:line="49" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="58">5<pos:position pos:line="49" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="61">"httpAccept"<pos:position pos:line="49" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="75">CommAcceptCbPtrFun<pos:position pos:line="49" pos:column="93"/></name><argument_list pos:line="49" pos:column="93">(<argument><expr><name pos:line="49" pos:column="94">httpAccept<pos:position pos:line="49" pos:column="104"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="106">CommAcceptCbParams<pos:position pos:line="49" pos:column="124"/></name><argument_list pos:line="49" pos:column="124">(<argument><expr><name pos:line="49" pos:column="125">NULL<pos:position pos:line="49" pos:column="129"/></name></expr></argument>)<pos:position pos:line="49" pos:column="130"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="131"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="132"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="133"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="50" pos:column="13">Subscription<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">::<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">Pointer<pos:position pos:line="50" pos:column="34"/></name></name></type> <name pos:line="50" pos:column="35">sub<pos:position pos:line="50" pos:column="38"/></name> <init pos:line="50" pos:column="39">= <expr><operator pos:line="50" pos:column="41">new<pos:position pos:line="50" pos:column="44"/></operator> <call><name><name pos:line="50" pos:column="45">CallSubscription<pos:position pos:line="50" pos:column="61"/></name><argument_list type="generic" pos:line="50" pos:column="61">&lt;<argument><expr><name pos:line="50" pos:column="62">AcceptCall<pos:position pos:line="50" pos:column="72"/></name></expr></argument>&gt;<pos:position pos:line="50" pos:column="76"/></argument_list></name><argument_list pos:line="50" pos:column="73">(<argument><expr><name pos:line="50" pos:column="74">subCall<pos:position pos:line="50" pos:column="81"/></name></expr></argument>)<pos:position pos:line="50" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="83"/></decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="52" pos:column="13">AsyncCall<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">::<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">Pointer<pos:position pos:line="52" pos:column="31"/></name></name></type> <name pos:line="52" pos:column="32">listenCall<pos:position pos:line="52" pos:column="42"/></name> <init pos:line="52" pos:column="43">= <expr><call><name pos:line="52" pos:column="45">asyncCall<pos:position pos:line="52" pos:column="54"/></name><argument_list pos:line="52" pos:column="54">(<argument><expr><literal type="number" pos:line="52" pos:column="55">33<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="52" pos:column="58">2<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="61">"clientListenerConnectionOpened"<pos:position pos:line="52" pos:column="93"/></literal></expr></argument>,
                                            <argument><expr><call><name pos:line="53" pos:column="45">ListeningStartedDialer<pos:position pos:line="53" pos:column="67"/></name><argument_list pos:line="53" pos:column="67">(<argument><expr><operator pos:line="53" pos:column="68">&amp;<pos:position pos:line="53" pos:column="73"/></operator><name pos:line="53" pos:column="69">clientListenerConnectionOpened<pos:position pos:line="53" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="101">s<pos:position pos:line="53" pos:column="102"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="104">Ipc<pos:position pos:line="53" pos:column="107"/></name><operator pos:line="53" pos:column="107">::<pos:position pos:line="53" pos:column="109"/></operator><name pos:line="53" pos:column="109">fdnHttpSocket<pos:position pos:line="53" pos:column="122"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="124">sub<pos:position pos:line="53" pos:column="127"/></name></expr></argument>)<pos:position pos:line="53" pos:column="128"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="129"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="130"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">Ipc<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">::<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">StartListening<pos:position pos:line="54" pos:column="32"/></name></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">SOCK_STREAM<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="46">IPPROTO_TCP<pos:position pos:line="54" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="59">s<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">listenConn<pos:position pos:line="54" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="74">Ipc<pos:position pos:line="54" pos:column="77"/></name><operator pos:line="54" pos:column="77">::<pos:position pos:line="54" pos:column="79"/></operator><name pos:line="54" pos:column="79">fdnHttpSocket<pos:position pos:line="54" pos:column="92"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="94">listenCall<pos:position pos:line="54" pos:column="104"/></name></expr></argument>)<pos:position pos:line="54" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="106"/></expr_stmt>

<cpp:if pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">if<pos:position pos:line="56" pos:column="4"/></cpp:directive> <expr><name pos:line="56" pos:column="5">USE_OPENSSL<pos:position pos:line="56" pos:column="16"/></name></expr></cpp:if>
        }<pos:position pos:line="57" pos:column="10"/></block></then> <elseif pos:line="57" pos:column="11">else <if pos:line="57" pos:column="16">if <condition pos:line="57" pos:column="19">(<expr><name><name pos:line="57" pos:column="20">s<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">-&gt;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="23">transport<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">.<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="33">protocol<pos:position pos:line="57" pos:column="41"/></name></name> <operator pos:line="57" pos:column="42">==<pos:position pos:line="57" pos:column="44"/></operator> <name><name pos:line="57" pos:column="45">AnyP<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">::<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="51">PROTO_HTTPS<pos:position pos:line="57" pos:column="62"/></name></name></expr>)<pos:position pos:line="57" pos:column="63"/></condition><then pos:line="57" pos:column="63"> <block pos:line="57" pos:column="64">{
            <comment type="line" pos:line="58" pos:column="13">// setup the subscriptions such that new connections accepted by listenConn are handled by HTTPS</comment>
            <decl_stmt><decl><type><name><name pos:line="59" pos:column="13">RefCount<pos:position pos:line="59" pos:column="21"/></name><argument_list type="generic" pos:line="59" pos:column="21">&lt;<argument><expr><name pos:line="59" pos:column="22">AcceptCall<pos:position pos:line="59" pos:column="32"/></name></expr></argument>&gt;<pos:position pos:line="59" pos:column="36"/></argument_list></name></type> <name pos:line="59" pos:column="34">subCall<pos:position pos:line="59" pos:column="41"/></name> <init pos:line="59" pos:column="42">= <expr><call><name pos:line="59" pos:column="44">commCbCall<pos:position pos:line="59" pos:column="54"/></name><argument_list pos:line="59" pos:column="54">(<argument><expr><literal type="number" pos:line="59" pos:column="55">5<pos:position pos:line="59" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="58">5<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="61">"httpsAccept"<pos:position pos:line="59" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="76">CommAcceptCbPtrFun<pos:position pos:line="59" pos:column="94"/></name><argument_list pos:line="59" pos:column="94">(<argument><expr><name pos:line="59" pos:column="95">httpsAccept<pos:position pos:line="59" pos:column="106"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="108">CommAcceptCbParams<pos:position pos:line="59" pos:column="126"/></name><argument_list pos:line="59" pos:column="126">(<argument><expr><name pos:line="59" pos:column="127">NULL<pos:position pos:line="59" pos:column="131"/></name></expr></argument>)<pos:position pos:line="59" pos:column="132"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="134"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="135"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="60" pos:column="13">Subscription<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">::<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">Pointer<pos:position pos:line="60" pos:column="34"/></name></name></type> <name pos:line="60" pos:column="35">sub<pos:position pos:line="60" pos:column="38"/></name> <init pos:line="60" pos:column="39">= <expr><operator pos:line="60" pos:column="41">new<pos:position pos:line="60" pos:column="44"/></operator> <call><name><name pos:line="60" pos:column="45">CallSubscription<pos:position pos:line="60" pos:column="61"/></name><argument_list type="generic" pos:line="60" pos:column="61">&lt;<argument><expr><name pos:line="60" pos:column="62">AcceptCall<pos:position pos:line="60" pos:column="72"/></name></expr></argument>&gt;<pos:position pos:line="60" pos:column="76"/></argument_list></name><argument_list pos:line="60" pos:column="73">(<argument><expr><name pos:line="60" pos:column="74">subCall<pos:position pos:line="60" pos:column="81"/></name></expr></argument>)<pos:position pos:line="60" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="83"/></decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="62" pos:column="13">AsyncCall<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">::<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="24">Pointer<pos:position pos:line="62" pos:column="31"/></name></name></type> <name pos:line="62" pos:column="32">listenCall<pos:position pos:line="62" pos:column="42"/></name> <init pos:line="62" pos:column="43">= <expr><call><name pos:line="62" pos:column="45">asyncCall<pos:position pos:line="62" pos:column="54"/></name><argument_list pos:line="62" pos:column="54">(<argument><expr><literal type="number" pos:line="62" pos:column="55">33<pos:position pos:line="62" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="59">2<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="62">"clientListenerConnectionOpened"<pos:position pos:line="62" pos:column="94"/></literal></expr></argument>,
                                            <argument><expr><call><name pos:line="63" pos:column="45">ListeningStartedDialer<pos:position pos:line="63" pos:column="67"/></name><argument_list pos:line="63" pos:column="67">(<argument><expr><operator pos:line="63" pos:column="68">&amp;<pos:position pos:line="63" pos:column="73"/></operator><name pos:line="63" pos:column="69">clientListenerConnectionOpened<pos:position pos:line="63" pos:column="99"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="64" pos:column="53">s<pos:position pos:line="64" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="56">Ipc<pos:position pos:line="64" pos:column="59"/></name><operator pos:line="64" pos:column="59">::<pos:position pos:line="64" pos:column="61"/></operator><name pos:line="64" pos:column="61">fdnHttpsSocket<pos:position pos:line="64" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="77">sub<pos:position pos:line="64" pos:column="80"/></name></expr></argument>)<pos:position pos:line="64" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="83"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="65" pos:column="13">Ipc<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">::<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">StartListening<pos:position pos:line="65" pos:column="32"/></name></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">SOCK_STREAM<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="46">IPPROTO_TCP<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="59">s<pos:position pos:line="65" pos:column="60"/></name><operator pos:line="65" pos:column="60">-&gt;<pos:position pos:line="65" pos:column="65"/></operator><name pos:line="65" pos:column="62">listenConn<pos:position pos:line="65" pos:column="72"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="74">Ipc<pos:position pos:line="65" pos:column="77"/></name><operator pos:line="65" pos:column="77">::<pos:position pos:line="65" pos:column="79"/></operator><name pos:line="65" pos:column="79">fdnHttpsSocket<pos:position pos:line="65" pos:column="93"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="95">listenCall<pos:position pos:line="65" pos:column="105"/></name></expr></argument>)<pos:position pos:line="65" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="107"/></expr_stmt>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><name><name pos:line="69" pos:column="9">HttpSockets<pos:position pos:line="69" pos:column="20"/></name><index pos:line="69" pos:column="20">[<expr><name pos:line="69" pos:column="21">NHttpSockets<pos:position pos:line="69" pos:column="33"/></name></expr>]<pos:position pos:line="69" pos:column="34"/></index></name> <operator pos:line="69" pos:column="35">=<pos:position pos:line="69" pos:column="36"/></operator> <operator pos:line="69" pos:column="37">-<pos:position pos:line="69" pos:column="38"/></operator><literal type="number" pos:line="69" pos:column="38">1<pos:position pos:line="69" pos:column="39"/></literal></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt> <comment type="line" pos:line="69" pos:column="41">// set in clientListenerConnectionOpened</comment>
        <expr_stmt><expr><operator pos:line="70" pos:column="9">++<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">NHttpSockets<pos:position pos:line="70" pos:column="23"/></name></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></for>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

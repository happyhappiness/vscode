<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_738_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientRequestContext<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">clientAccessCheck<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">()<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="4" pos:column="27"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="10">http<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">request<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">flags<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">done_follow_x_forwarded_for<pos:position pos:line="5" pos:column="58"/></name></name> <operator pos:line="5" pos:column="59">&amp;&amp;<pos:position pos:line="5" pos:column="69"/></operator>
            <name><name pos:line="6" pos:column="13">Config<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">accessList<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">.<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">followXFF<pos:position pos:line="6" pos:column="40"/></name></name> <operator pos:line="6" pos:column="41">&amp;&amp;<pos:position pos:line="6" pos:column="51"/></operator>
            <call><name><name pos:line="7" pos:column="13">http<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">request<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">header<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">has<pos:position pos:line="7" pos:column="38"/></name></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">HDR_X_FORWARDED_FOR<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60"> <block pos:line="7" pos:column="61">{

        <comment type="block" pos:line="9" pos:column="9">/* we always trust the direct client address for actual use */</comment>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">http<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">request<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">indirect_client_addr<pos:position pos:line="10" pos:column="44"/></name></name> <operator pos:line="10" pos:column="45">=<pos:position pos:line="10" pos:column="46"/></operator> <name><name pos:line="10" pos:column="47">http<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">request<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">-&gt;<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="62">client_addr<pos:position pos:line="10" pos:column="73"/></name></name></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">http<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">request<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">indirect_client_addr<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">.<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">SetPort<pos:position pos:line="11" pos:column="52"/></name></name><argument_list pos:line="11" pos:column="52">(<argument><expr><literal type="number" pos:line="11" pos:column="53">0<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>

        <comment type="block" pos:line="13" pos:column="9">/* setup the XFF iterator for processing */</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">http<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">request<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">x_forwarded_for_iterator<pos:position pos:line="14" pos:column="48"/></name></name> <operator pos:line="14" pos:column="49">=<pos:position pos:line="14" pos:column="50"/></operator> <call><name><name pos:line="14" pos:column="51">http<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">request<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">header<pos:position pos:line="14" pos:column="72"/></name><operator pos:line="14" pos:column="72">.<pos:position pos:line="14" pos:column="73"/></operator><name pos:line="14" pos:column="73">getList<pos:position pos:line="14" pos:column="80"/></name></name><argument_list pos:line="14" pos:column="80">(<argument><expr><name pos:line="14" pos:column="81">HDR_X_FORWARDED_FOR<pos:position pos:line="14" pos:column="100"/></name></expr></argument>)<pos:position pos:line="14" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="102"/></expr_stmt>

        <comment type="block" pos:line="16" pos:column="9">/* begin by checking to see if we trust direct client enough to walk XFF */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">acl_checklist<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <call><name pos:line="17" pos:column="25">clientAclChecklistCreate<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><name><name pos:line="17" pos:column="50">Config<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">accessList<pos:position pos:line="17" pos:column="67"/></name><operator pos:line="17" pos:column="67">.<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="68">followXFF<pos:position pos:line="17" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="79">http<pos:position pos:line="17" pos:column="83"/></name></expr></argument>)<pos:position pos:line="17" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">acl_checklist<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">nonBlockingCheck<pos:position pos:line="18" pos:column="40"/></name></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">clientFollowXForwardedForCheck<pos:position pos:line="18" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="73">this<pos:position pos:line="18" pos:column="77"/></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="21" pos:column="8">/* FOLLOW_X_FORWARDED_FOR */</comment>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">Config<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">accessList<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">http<pos:position pos:line="23" pos:column="31"/></name></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32"> <block pos:line="23" pos:column="33">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">acl_checklist<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">clientAclChecklistCreate<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name><name pos:line="24" pos:column="50">Config<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">.<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="57">accessList<pos:position pos:line="24" pos:column="67"/></name><operator pos:line="24" pos:column="67">.<pos:position pos:line="24" pos:column="68"/></operator><name pos:line="24" pos:column="68">http<pos:position pos:line="24" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="74">http<pos:position pos:line="24" pos:column="78"/></name></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">acl_checklist<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">nonBlockingCheck<pos:position pos:line="25" pos:column="40"/></name></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">clientAccessCheckDoneWrapper<pos:position pos:line="25" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="71">this<pos:position pos:line="25" pos:column="75"/></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then> <else pos:line="26" pos:column="7">else <block pos:line="26" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">DBG_CRITICAL<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"No http_access configuration found. This will block ALL traffic"<pos:position pos:line="27" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="100"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">clientAccessCheckDone<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">ACCESS_DENIED<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

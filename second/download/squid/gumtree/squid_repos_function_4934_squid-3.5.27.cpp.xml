<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4934_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">ACLASN<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">dump<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">()<pos:position pos:line="2" pos:column="15"/></parameter_list> <specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBufList<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">sl<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">CbDataList<pos:position pos:line="6" pos:column="15"/></name><argument_list type="generic" pos:line="6" pos:column="15">&lt;<argument><expr><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="23"/></argument_list></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">ldata<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">data<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><name pos:line="8" pos:column="12">ldata<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">!=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition> <block pos:line="8" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">SBuf<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">s<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">Printf<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="string" pos:line="10" pos:column="18">"%d"<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="24">ldata<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">element<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">sl<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">push_back<pos:position pos:line="11" pos:column="21"/></name></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">s<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">ldata<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">ldata<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">next<pos:position pos:line="12" pos:column="28"/></name></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></while>

    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">sl<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

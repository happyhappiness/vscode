<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2119_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">mem_hdr<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">internalAppend<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">data<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">len<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">19<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">6<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"memInternalAppend: "<pos:position pos:line="4" pos:column="40"/></literal> <operator pos:line="4" pos:column="41">&lt;&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="44">this<pos:position pos:line="4" pos:column="48"/></name> <operator pos:line="4" pos:column="49">&lt;&lt;<pos:position pos:line="4" pos:column="57"/></operator> <literal type="string" pos:line="4" pos:column="52">" len "<pos:position pos:line="4" pos:column="59"/></literal> <operator pos:line="4" pos:column="60">&lt;&lt;<pos:position pos:line="4" pos:column="68"/></operator> <name pos:line="4" pos:column="63">len<pos:position pos:line="4" pos:column="66"/></name></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="68"/></expr_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><name pos:line="6" pos:column="12">len<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&gt;<pos:position pos:line="6" pos:column="20"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>)<pos:position pos:line="6" pos:column="20"/></condition> <block pos:line="6" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">makeAppendSpace<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">copied<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><call><name pos:line="8" pos:column="22">appendToNode<pos:position pos:line="8" pos:column="34"/></name> <argument_list pos:line="8" pos:column="35">(<argument><expr><call><name><name pos:line="8" pos:column="36">nodes<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">finish<pos:position pos:line="8" pos:column="48"/></name></name><argument_list pos:line="8" pos:column="48">()<pos:position pos:line="8" pos:column="50"/></argument_list></call><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">data<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">data<pos:position pos:line="8" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">len<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="69"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">copied<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><name pos:line="11" pos:column="9">len<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">-=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">copied<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">data<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">+=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">copied<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></while>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

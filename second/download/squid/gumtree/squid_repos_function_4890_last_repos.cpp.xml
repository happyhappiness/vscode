<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4890_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">RequestParser<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">skipTrailingCrs<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><name><name pos:line="2" pos:column="43">Http1<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">Tokenizer<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">&amp;<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="61">tok<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Config<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">onoff<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">relaxed_header_parser<pos:position pos:line="4" pos:column="43"/></name></name></expr>)<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44"> <block pos:line="4" pos:column="45">{
        <expr_stmt><expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">void<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">)<pos:position pos:line="5" pos:column="15"/></operator><call><name><name pos:line="5" pos:column="15">tok<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">skipAllTrailing<pos:position pos:line="5" pos:column="34"/></name></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name><name pos:line="5" pos:column="35">CharacterSet<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">::<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">CR<pos:position pos:line="5" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="53"/></expr_stmt> <comment type="line" pos:line="5" pos:column="54">// optional; multiple OK</comment>
    }<pos:position pos:line="6" pos:column="6"/></block></then> <else pos:line="6" pos:column="7">else <block pos:line="6" pos:column="12">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name><name pos:line="7" pos:column="14">tok<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">skipOneTrailing<pos:position pos:line="7" pos:column="33"/></name></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name><name pos:line="7" pos:column="34">CharacterSet<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">::<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">CR<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52"> <block pos:line="7" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">debugs<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="number" pos:line="8" pos:column="20">33<pos:position pos:line="8" pos:column="22"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="24">ErrorLevel<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"invalid request-line: missing CR before LF"<pos:position pos:line="8" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><name pos:line="9" pos:column="13">parseStatusCode<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name><name pos:line="9" pos:column="31">Http<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">::<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">scBadRequest<pos:position pos:line="9" pos:column="49"/></name></name></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
            <return pos:line="10" pos:column="13">return <expr><literal type="boolean" pos:line="10" pos:column="20">false<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>
    <return pos:line="13" pos:column="5">return <expr><literal type="boolean" pos:line="13" pos:column="12">true<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

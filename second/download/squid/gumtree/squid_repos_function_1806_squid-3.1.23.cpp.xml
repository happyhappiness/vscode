<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1806_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerProbeConnectDone<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">fd<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">DnsLookupDetails<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">&amp;<pos:position pos:line="2" pos:column="58"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">comm_err_t<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">status<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">int<pos:position pos:line="2" pos:column="78"/></name></type> <name pos:line="2" pos:column="79">xerrno<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="87">void<pos:position pos:line="2" pos:column="91"/></name> <modifier pos:line="2" pos:column="92">*<pos:position pos:line="2" pos:column="93"/></modifier></type><name pos:line="2" pos:column="93">data<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="98"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">peer<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><operator pos:line="4" pos:column="15">(<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">peer<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><operator pos:line="4" pos:column="21">)<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">data<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">==<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">COMM_OK<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">peerConnectSucceded<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">p<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then> <else pos:line="8" pos:column="7">else <block pos:line="8" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">peerConnectFailedSilent<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">p<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">comm_remove_close_handler<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">fd<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="36">peerProbeClosed<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">p<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">comm_close<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">fd<pos:position pos:line="13" pos:column="18"/></name></expr></argument>)<pos:position pos:line="13" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">p<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">test_fd<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <operator pos:line="14" pos:column="18">-<pos:position pos:line="14" pos:column="19"/></operator><literal type="number" pos:line="14" pos:column="19">1<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    <return pos:line="15" pos:column="5">return;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5866_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">xassert<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">expr<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">file<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">line<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">fprintf<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">stderr<pos:position pos:line="3" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="21">"assertion failed: %s:%d: \"%s\"\n"<pos:position pos:line="3" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="58">file<pos:position pos:line="3" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="64">line<pos:position pos:line="3" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="70">expr<pos:position pos:line="3" pos:column="74"/></name></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">abort<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">()<pos:position pos:line="4" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

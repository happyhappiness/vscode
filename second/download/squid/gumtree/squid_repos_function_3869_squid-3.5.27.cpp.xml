<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3869_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Iterator<pos:position pos:line="1" pos:column="26"/></name><operator pos:line="1" pos:column="26">::<pos:position pos:line="1" pos:column="28"/></operator><name pos:line="1" pos:column="28">step<pos:position pos:line="1" pos:column="32"/></name></name><parameter_list pos:line="1" pos:column="32">()<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><operator pos:line="3" pos:column="5">++<pos:position pos:line="3" pos:column="7"/></operator><name pos:line="3" pos:column="7">iterations<pos:position pos:line="3" pos:column="17"/></name></expr>;<pos:position pos:line="3" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <literal type="char" pos:line="4" pos:column="26">'#'<pos:position pos:line="4" pos:column="29"/></literal> <operator pos:line="4" pos:column="30">&lt;&lt;<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="33">iterations<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">&lt;&lt;<pos:position pos:line="4" pos:column="52"/></operator> <literal type="string" pos:line="4" pos:column="47">" plan: "<pos:position pos:line="4" pos:column="56"/></literal> <operator pos:line="4" pos:column="57">&lt;&lt;<pos:position pos:line="4" pos:column="65"/></operator> <name pos:line="4" pos:column="60">thePlan<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><operator pos:line="6" pos:column="10">!<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">theLauncher<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">thePlan<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">exhausted<pos:position pos:line="8" pos:column="26"/></name></name><argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{ <comment type="line" pos:line="8" pos:column="32">// nothing more to do</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">sendAnswer<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><call><name><name pos:line="9" pos:column="20">Answer<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">::<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">Forward<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">theMsg<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">Must<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><call><name pos:line="10" pos:column="14">done<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">()<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">HttpRequest<pos:position pos:line="14" pos:column="16"/></name> <modifier pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></modifier></type><name pos:line="14" pos:column="18">request<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><cast type="dynamic" pos:line="14" pos:column="28">dynamic_cast<argument_list type="generic" pos:line="14" pos:column="40">&lt;<argument><expr><name pos:line="14" pos:column="41">HttpRequest<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">*<pos:position pos:line="14" pos:column="53"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="57"/></argument_list><argument_list pos:line="14" pos:column="54">(<argument><expr><name pos:line="14" pos:column="55">theMsg<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="14" pos:column="63"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">request<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">request<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">theCause<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">request<pos:position pos:line="17" pos:column="19"/></name></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">request<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">clearError<pos:position pos:line="18" pos:column="24"/></name></name><argument_list pos:line="18" pos:column="24">()<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">iterations<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&gt;<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="22">Adaptation<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">::<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">Config<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">::<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">service_iteration_limit<pos:position pos:line="20" pos:column="65"/></name></name></expr>)<pos:position pos:line="20" pos:column="66"/></condition><then pos:line="20" pos:column="66"> <block pos:line="20" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">93<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>,<argument><expr><name pos:line="21" pos:column="19">DBG_CRITICAL<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"Adaptation iterations limit ("<pos:position pos:line="21" pos:column="64"/></literal> <operator pos:line="21" pos:column="65">&lt;&lt;<pos:position pos:line="21" pos:column="73"/></operator>
               <name><name pos:line="22" pos:column="16">Adaptation<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">::<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">Config<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">::<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">service_iteration_limit<pos:position pos:line="22" pos:column="59"/></name></name> <operator pos:line="22" pos:column="60">&lt;&lt;<pos:position pos:line="22" pos:column="68"/></operator> <literal type="string" pos:line="22" pos:column="63">") exceeded:\n"<pos:position pos:line="22" pos:column="78"/></literal> <operator pos:line="22" pos:column="79">&lt;&lt;<pos:position pos:line="22" pos:column="87"/></operator>
               <literal type="string" pos:line="23" pos:column="16">"\tPossible service loop with "<pos:position pos:line="23" pos:column="47"/></literal> <operator pos:line="23" pos:column="48">&lt;&lt;<pos:position pos:line="23" pos:column="56"/></operator>
               <name><name pos:line="24" pos:column="16">theGroup<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">kind<pos:position pos:line="24" pos:column="30"/></name></name> <operator pos:line="24" pos:column="31">&lt;&lt;<pos:position pos:line="24" pos:column="39"/></operator> <literal type="string" pos:line="24" pos:column="34">" "<pos:position pos:line="24" pos:column="37"/></literal> <operator pos:line="24" pos:column="38">&lt;&lt;<pos:position pos:line="24" pos:column="46"/></operator> <name><name pos:line="24" pos:column="41">theGroup<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">-&gt;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="51">id<pos:position pos:line="24" pos:column="53"/></name></name> <operator pos:line="24" pos:column="54">&lt;&lt;<pos:position pos:line="24" pos:column="62"/></operator> <literal type="string" pos:line="24" pos:column="57">", plan="<pos:position pos:line="24" pos:column="66"/></literal> <operator pos:line="24" pos:column="67">&lt;&lt;<pos:position pos:line="24" pos:column="75"/></operator> <name pos:line="24" pos:column="70">thePlan<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
        <throw pos:line="25" pos:column="9">throw <expr><call><name pos:line="25" pos:column="15">TexcHere<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="string" pos:line="25" pos:column="24">"too many adaptations"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></throw>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="28" pos:column="5">ServicePointer<pos:position pos:line="28" pos:column="19"/></name></type> <name pos:line="28" pos:column="20">service<pos:position pos:line="28" pos:column="27"/></name> <init pos:line="28" pos:column="28">= <expr><call><name><name pos:line="28" pos:column="30">thePlan<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">.<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">current<pos:position pos:line="28" pos:column="45"/></name></name><argument_list pos:line="28" pos:column="45">()<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">Must<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">service<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">!=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">NULL<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">debugs<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="number" pos:line="30" pos:column="12">93<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="30" pos:column="15">5<pos:position pos:line="30" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="18">HERE<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;&lt;<pos:position pos:line="30" pos:column="31"/></operator> <literal type="string" pos:line="30" pos:column="26">"using adaptation service: "<pos:position pos:line="30" pos:column="54"/></literal> <operator pos:line="30" pos:column="55">&lt;&lt;<pos:position pos:line="30" pos:column="63"/></operator> <call><name><name pos:line="30" pos:column="58">service<pos:position pos:line="30" pos:column="65"/></name><operator pos:line="30" pos:column="65">-&gt;<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="67">cfg<pos:position pos:line="30" pos:column="70"/></name></name><argument_list pos:line="30" pos:column="70">()<pos:position pos:line="30" pos:column="72"/></argument_list></call><operator pos:line="30" pos:column="72">.<pos:position pos:line="30" pos:column="73"/></operator><name pos:line="30" pos:column="73">key<pos:position pos:line="30" pos:column="76"/></name></expr></argument>)<pos:position pos:line="30" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="78"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">Adaptation<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">::<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">Config<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">::<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">needHistory<pos:position pos:line="32" pos:column="40"/></name></name></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41"> <block pos:line="32" pos:column="42">{
        <decl_stmt><decl><type><name><name pos:line="33" pos:column="9">Adaptation<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">::<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">History<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">::<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">Pointer<pos:position pos:line="33" pos:column="37"/></name></name></type> <name pos:line="33" pos:column="38">ah<pos:position pos:line="33" pos:column="40"/></name> <init pos:line="33" pos:column="41">= <expr><call><name><name pos:line="33" pos:column="43">request<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">adaptHistory<pos:position pos:line="33" pos:column="64"/></name></name><argument_list pos:line="33" pos:column="64">(<argument><expr><literal type="boolean" pos:line="33" pos:column="65">true<pos:position pos:line="33" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">SBuf<pos:position pos:line="34" pos:column="13"/></name></type> <name pos:line="34" pos:column="14">uid<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><call><name><name pos:line="34" pos:column="18">thePlan<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">.<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">current<pos:position pos:line="34" pos:column="33"/></name></name><argument_list pos:line="34" pos:column="33">()<pos:position pos:line="34" pos:column="35"/></argument_list></call><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><call><name pos:line="34" pos:column="37">cfg<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">()<pos:position pos:line="34" pos:column="42"/></argument_list></call><operator pos:line="34" pos:column="42">.<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">key<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></decl>;<pos:position pos:line="34" pos:column="48"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="35" pos:column="9">ah<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">recordAdaptationService<pos:position pos:line="35" pos:column="36"/></name></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">uid<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">theLauncher<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <call><name pos:line="38" pos:column="19">initiateAdaptation<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(
                      <argument><expr><call><name><name pos:line="39" pos:column="23">service<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">makeXactLauncher<pos:position pos:line="39" pos:column="48"/></name></name><argument_list pos:line="39" pos:column="48">(<argument><expr><name pos:line="39" pos:column="49">theMsg<pos:position pos:line="39" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">theCause<pos:position pos:line="39" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="67">al<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">Must<pos:position pos:line="40" pos:column="9"/></name><argument_list pos:line="40" pos:column="9">(<argument><expr><call><name pos:line="40" pos:column="10">initiated<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">theLauncher<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">Must<pos:position pos:line="41" pos:column="9"/></name><argument_list pos:line="41" pos:column="9">(<argument><expr><operator pos:line="41" pos:column="10">!<pos:position pos:line="41" pos:column="11"/></operator><call><name pos:line="41" pos:column="11">done<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">()<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

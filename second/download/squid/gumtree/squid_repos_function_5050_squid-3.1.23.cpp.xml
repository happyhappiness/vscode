<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5050_squid-3.1.23.cpp" pos:tabs="8"><function type="operator"><template pos:line="1" pos:column="1">template<parameter_list pos:line="1" pos:column="9">&lt;<parameter><type><name pos:line="1" pos:column="10">class<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">RT<pos:position pos:line="1" pos:column="18"/></name></parameter>&gt;<pos:position pos:line="1" pos:column="22"/></parameter_list></template>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier></type>
<name><name><name pos:line="3" pos:column="1">IoResult<pos:position pos:line="3" pos:column="9"/></name><argument_list type="generic" pos:line="3" pos:column="9">&lt;<argument><expr><name pos:line="3" pos:column="10">RT<pos:position pos:line="3" pos:column="12"/></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="16"/></argument_list></name><operator pos:line="3" pos:column="13">::<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">operator <name pos:line="3" pos:column="24">new<pos:position pos:line="3" pos:column="27"/></name></name></name><parameter_list pos:line="3" pos:column="27">(<parameter><decl><type><name pos:line="3" pos:column="28">size_t<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">unused<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="42"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">IoResult<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">IoResult<pos:position pos:line="6" pos:column="13"/></name><argument_list type="generic" pos:line="6" pos:column="13">&lt;<argument><expr><name pos:line="6" pos:column="14">RT<pos:position pos:line="6" pos:column="16"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="20"/></argument_list></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">result<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><call><name pos:line="6" pos:column="28">cbdataAlloc<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">IoResult<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

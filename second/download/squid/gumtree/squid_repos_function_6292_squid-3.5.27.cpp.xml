<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6292_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">checkTimeouts<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">timeoutCheckScheduled<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">=<pos:position pos:line="4" pos:column="28"/></operator> <literal type="boolean" pos:line="4" pos:column="29">false<pos:position pos:line="4" pos:column="34"/></literal></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// last chance to recover in case a notification message was lost, etc.</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name><name pos:line="7" pos:column="11">RequestMap<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">::<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">size_type<pos:position pos:line="7" pos:column="32"/></name></name></type> <name pos:line="7" pos:column="33">timeoutsBefore<pos:position pos:line="7" pos:column="47"/></name> <init pos:line="7" pos:column="48">= <expr><call><name><name pos:line="7" pos:column="50">olderRequests<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">-&gt;<pos:position pos:line="7" pos:column="68"/></operator><name pos:line="7" pos:column="65">size<pos:position pos:line="7" pos:column="69"/></name></name><argument_list pos:line="7" pos:column="69">()<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">HandleResponses<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><literal type="string" pos:line="8" pos:column="21">"before timeout"<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name><name pos:line="9" pos:column="11">RequestMap<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">::<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">size_type<pos:position pos:line="9" pos:column="32"/></name></name></type> <name pos:line="9" pos:column="33">timeoutsNow<pos:position pos:line="9" pos:column="44"/></name> <init pos:line="9" pos:column="45">= <expr><call><name><name pos:line="9" pos:column="47">olderRequests<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">-&gt;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="62">size<pos:position pos:line="9" pos:column="66"/></name></name><argument_list pos:line="9" pos:column="66">()<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="69"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">timeoutsBefore<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&gt;<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="26">timeoutsNow<pos:position pos:line="11" pos:column="37"/></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38"> <block pos:line="11" pos:column="39">{ <comment type="line" pos:line="11" pos:column="41">// some requests were rescued</comment>
        <comment type="line" pos:line="12" pos:column="9">// notification message lost or significantly delayed?</comment>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">47<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">DBG_IMPORTANT<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"WARNING: communication with "<pos:position pos:line="13" pos:column="65"/></literal> <operator pos:line="13" pos:column="66">&lt;&lt;<pos:position pos:line="13" pos:column="74"/></operator> <name pos:line="13" pos:column="69">dbName<pos:position pos:line="13" pos:column="75"/></name> <operator pos:line="13" pos:column="76">&lt;&lt;<pos:position pos:line="13" pos:column="84"/></operator>
               <literal type="string" pos:line="14" pos:column="16">" may be too slow or disrupted for about "<pos:position pos:line="14" pos:column="58"/></literal> <operator pos:line="14" pos:column="59">&lt;&lt;<pos:position pos:line="14" pos:column="67"/></operator>
               <name pos:line="15" pos:column="16">Timeout<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;&lt;<pos:position pos:line="15" pos:column="32"/></operator> <literal type="string" pos:line="15" pos:column="27">"s; rescued "<pos:position pos:line="15" pos:column="40"/></literal> <operator pos:line="15" pos:column="41">&lt;&lt;<pos:position pos:line="15" pos:column="49"/></operator> <operator pos:line="15" pos:column="44">(<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">timeoutsBefore<pos:position pos:line="15" pos:column="59"/></name> <operator pos:line="15" pos:column="60">-<pos:position pos:line="15" pos:column="61"/></operator> <name pos:line="15" pos:column="62">timeoutsNow<pos:position pos:line="15" pos:column="73"/></name><operator pos:line="15" pos:column="73">)<pos:position pos:line="15" pos:column="74"/></operator> <operator pos:line="15" pos:column="75">&lt;&lt;<pos:position pos:line="15" pos:column="83"/></operator>
               <literal type="string" pos:line="16" pos:column="16">" out of "<pos:position pos:line="16" pos:column="26"/></literal> <operator pos:line="16" pos:column="27">&lt;&lt;<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="30">timeoutsBefore<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">&lt;&lt;<pos:position pos:line="16" pos:column="53"/></operator> <literal type="string" pos:line="16" pos:column="48">" I/Os"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">timeoutsNow<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">47<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="20">DBG_IMPORTANT<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="35">"WARNING: abandoning "<pos:position pos:line="20" pos:column="57"/></literal> <operator pos:line="20" pos:column="58">&lt;&lt;<pos:position pos:line="20" pos:column="66"/></operator>
               <name pos:line="21" pos:column="16">timeoutsNow<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">&lt;&lt;<pos:position pos:line="21" pos:column="36"/></operator> <literal type="char" pos:line="21" pos:column="31">' '<pos:position pos:line="21" pos:column="34"/></literal> <operator pos:line="21" pos:column="35">&lt;&lt;<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="38">dbName<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">&lt;&lt;<pos:position pos:line="21" pos:column="53"/></operator> <literal type="string" pos:line="21" pos:column="48">" I/Os after at least "<pos:position pos:line="21" pos:column="71"/></literal> <operator pos:line="21" pos:column="72">&lt;&lt;<pos:position pos:line="21" pos:column="80"/></operator>
               <name pos:line="22" pos:column="16">Timeout<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&lt;&lt;<pos:position pos:line="22" pos:column="32"/></operator> <literal type="string" pos:line="22" pos:column="27">"s timeout"<pos:position pos:line="22" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="25" pos:column="5">// any old request would have timed out by now</comment>
    <typedef pos:line="26" pos:column="5">typedef <type><name><name pos:line="26" pos:column="13">RequestMap<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">::<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">const_iterator<pos:position pos:line="26" pos:column="39"/></name></name></type> <name pos:line="26" pos:column="40">RMCI<pos:position pos:line="26" pos:column="44"/></name>;<pos:position pos:line="26" pos:column="45"/></typedef>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><decl><type><name pos:line="27" pos:column="10">RMCI<pos:position pos:line="27" pos:column="14"/></name></type> <name pos:line="27" pos:column="15">i<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><call><name><name pos:line="27" pos:column="19">olderRequests<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">begin<pos:position pos:line="27" pos:column="39"/></name></name><argument_list pos:line="27" pos:column="39">()<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="42"/></init> <condition><expr><name pos:line="27" pos:column="43">i<pos:position pos:line="27" pos:column="44"/></name> <operator pos:line="27" pos:column="45">!=<pos:position pos:line="27" pos:column="47"/></operator> <call><name><name pos:line="27" pos:column="48">olderRequests<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">end<pos:position pos:line="27" pos:column="66"/></name></name><argument_list pos:line="27" pos:column="66">()<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></condition> <incr><expr><operator pos:line="27" pos:column="70">++<pos:position pos:line="27" pos:column="72"/></operator><name pos:line="27" pos:column="72">i<pos:position pos:line="27" pos:column="73"/></name></expr></incr>)<pos:position pos:line="27" pos:column="74"/></control> <block pos:line="27" pos:column="75">{
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">IpcIoPendingRequest<pos:position pos:line="28" pos:column="28"/></name> <modifier pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></modifier><specifier pos:line="28" pos:column="30">const<pos:position pos:line="28" pos:column="35"/></specifier></type> <name pos:line="28" pos:column="36">pending<pos:position pos:line="28" pos:column="43"/></name> <init pos:line="28" pos:column="44">= <expr><name><name pos:line="28" pos:column="46">i<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">second<pos:position pos:line="28" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="28" pos:column="56"/></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">const<pos:position pos:line="30" pos:column="14"/></specifier> <name pos:line="30" pos:column="15">unsigned<pos:position pos:line="30" pos:column="23"/></name> <name pos:line="30" pos:column="24">int<pos:position pos:line="30" pos:column="27"/></name></type> <name pos:line="30" pos:column="28">requestId<pos:position pos:line="30" pos:column="37"/></name> <init pos:line="30" pos:column="38">= <expr><name><name pos:line="30" pos:column="40">i<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">first<pos:position pos:line="30" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="30" pos:column="49"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">47<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">7<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="23">HERE<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">&lt;&lt;<pos:position pos:line="31" pos:column="36"/></operator> <literal type="string" pos:line="31" pos:column="31">"disker timeout; ipcIo"<pos:position pos:line="31" pos:column="54"/></literal> <operator pos:line="31" pos:column="55">&lt;&lt;<pos:position pos:line="31" pos:column="63"/></operator>
               <name pos:line="32" pos:column="16">KidIdentifier<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">&lt;&lt;<pos:position pos:line="32" pos:column="38"/></operator> <literal type="char" pos:line="32" pos:column="33">'.'<pos:position pos:line="32" pos:column="36"/></literal> <operator pos:line="32" pos:column="37">&lt;&lt;<pos:position pos:line="32" pos:column="45"/></operator> <name pos:line="32" pos:column="40">requestId<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="34" pos:column="9">pending<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">completeIo<pos:position pos:line="34" pos:column="28"/></name></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">NULL<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt> <comment type="line" pos:line="34" pos:column="36">// no response</comment>
        <expr_stmt><expr><operator pos:line="35" pos:column="9">delete<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">pending<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt> <comment type="line" pos:line="35" pos:column="25">// XXX: leaking if throwing</comment>
    }<pos:position pos:line="36" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">olderRequests<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">clear<pos:position pos:line="37" pos:column="25"/></name></name><argument_list pos:line="37" pos:column="25">()<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">swap<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><name pos:line="39" pos:column="10">olderRequests<pos:position pos:line="39" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="25">newerRequests<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt> <comment type="line" pos:line="39" pos:column="41">// switches pointers around</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><call><name><name pos:line="40" pos:column="10">olderRequests<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">-&gt;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="25">empty<pos:position pos:line="40" pos:column="30"/></name></name><argument_list pos:line="40" pos:column="30">()<pos:position pos:line="40" pos:column="32"/></argument_list></call> <operator pos:line="40" pos:column="33">&amp;&amp;<pos:position pos:line="40" pos:column="43"/></operator> <operator pos:line="40" pos:column="36">!<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="37">timeoutCheckScheduled<pos:position pos:line="40" pos:column="58"/></name></expr>)<pos:position pos:line="40" pos:column="59"/></condition><then pos:line="40" pos:column="59">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="9">scheduleTimeoutCheck<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">()<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt></block></then></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

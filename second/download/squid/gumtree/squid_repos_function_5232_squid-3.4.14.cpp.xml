<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5232_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">authenticateInit<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name><name pos:line="2" pos:column="18">Auth<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">ConfigVector<pos:position pos:line="2" pos:column="36"/></name></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">config<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Do this first to clear memory and remove dead state on a reconfigure */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">proxy_auth_username_cache<pos:position pos:line="5" pos:column="34"/></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="9">Auth<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">::<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">User<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">::<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">CachedACLsReset<pos:position pos:line="6" pos:column="36"/></name></name><argument_list pos:line="6" pos:column="36">()<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="8" pos:column="5">/* If we do not have any auth config state to create stop now. */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">config<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><decl><type><name><name pos:line="12" pos:column="10">Auth<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">::<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">ConfigVector<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">::<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">iterator<pos:position pos:line="12" pos:column="38"/></name></name></type> <name pos:line="12" pos:column="39">i<pos:position pos:line="12" pos:column="40"/></name> <init pos:line="12" pos:column="41">= <expr><call><name><name pos:line="12" pos:column="43">config<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">begin<pos:position pos:line="12" pos:column="56"/></name></name><argument_list pos:line="12" pos:column="56">()<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="59"/></init> <condition><expr><name pos:line="12" pos:column="60">i<pos:position pos:line="12" pos:column="61"/></name> <operator pos:line="12" pos:column="62">!=<pos:position pos:line="12" pos:column="64"/></operator> <call><name><name pos:line="12" pos:column="65">config<pos:position pos:line="12" pos:column="71"/></name><operator pos:line="12" pos:column="71">-&gt;<pos:position pos:line="12" pos:column="76"/></operator><name pos:line="12" pos:column="73">end<pos:position pos:line="12" pos:column="76"/></name></name><argument_list pos:line="12" pos:column="76">()<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></condition> <incr><expr><operator pos:line="12" pos:column="80">++<pos:position pos:line="12" pos:column="82"/></operator><name pos:line="12" pos:column="82">i<pos:position pos:line="12" pos:column="83"/></name></expr></incr>)<pos:position pos:line="12" pos:column="84"/></control> <block pos:line="12" pos:column="85">{
        <decl_stmt><decl><type><name><name pos:line="13" pos:column="9">Auth<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">::<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">Config<pos:position pos:line="13" pos:column="21"/></name></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">schemeCfg<pos:position pos:line="13" pos:column="32"/></name> <init pos:line="13" pos:column="33">= <expr><operator pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">i<pos:position pos:line="13" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name><name pos:line="15" pos:column="13">schemeCfg<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">configured<pos:position pos:line="15" pos:column="34"/></name></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="16" pos:column="13">schemeCfg<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">init<pos:position pos:line="16" pos:column="28"/></name></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">schemeCfg<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></for>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">proxy_auth_username_cache<pos:position pos:line="19" pos:column="35"/></name></expr>)<pos:position pos:line="19" pos:column="36"/></condition><then pos:line="19" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="20" pos:column="9">Auth<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">::<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">User<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">::<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">cacheInit<pos:position pos:line="20" pos:column="30"/></name></name><argument_list pos:line="20" pos:column="30">()<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">authenticateRegisterWithCacheManager<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">config<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

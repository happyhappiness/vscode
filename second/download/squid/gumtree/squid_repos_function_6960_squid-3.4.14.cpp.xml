<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6960_squid-3.4.14.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">inet_ntop6<pos:position pos:line="2" pos:column="11"/></name><argument_list pos:line="2" pos:column="11">(<argument><expr><name pos:line="2" pos:column="12">src<pos:position pos:line="2" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="17">dst<pos:position pos:line="2" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="22">size<pos:position pos:line="2" pos:column="26"/></name></expr></argument>)<pos:position pos:line="2" pos:column="27"/></argument_list>
const <name pos:line="3" pos:column="7">u_char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><name pos:line="3" pos:column="15">src<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">char<pos:position pos:line="4" pos:column="5"/></name> <modifier pos:line="4" pos:column="6">*<pos:position pos:line="4" pos:column="7"/></modifier></type><name pos:line="4" pos:column="7">dst<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">size_t<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">size<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
<block pos:line="6" pos:column="1">{
    <comment type="block" pos:line="7" pos:column="5">/*
     * Note that int32_t and int16_t need only be "at least" large enough
     * to contain a value of the specified size.  On some systems, like
     * Crays, there is no such thing as an integer variable with 16 bits.
     * Keep this in mind if you think this function should have been coded
     * to use pointer overlays.  All the world's not a VAX.
     */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <name><name pos:line="14" pos:column="10">tmp<pos:position pos:line="14" pos:column="13"/></name><index pos:line="14" pos:column="13">[<expr><sizeof pos:line="14" pos:column="14">sizeof <name><pos:position pos:line="14" pos:column="21"/></name></sizeof></expr></index></name>"ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"]<pos:position pos:line="14" pos:column="69"/></expr><operator pos:line="14" pos:column="69">,<pos:position pos:line="14" pos:column="70"/></operator> <expr><operator pos:line="14" pos:column="71">*<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="72">tp<pos:position pos:line="14" pos:column="74"/></name></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
    <struct pos:line="15" pos:column="5">struct <block pos:line="15" pos:column="12">{<public type="default" pos:line="15" pos:column="13"> <decl_stmt><decl><type><name pos:line="15" pos:column="14">int<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">base<pos:position pos:line="15" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="24">len<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt> <pos:position pos:line="15" pos:column="29"/></public>}<pos:position pos:line="15" pos:column="30"/></block> <decl><name pos:line="15" pos:column="31">best<pos:position pos:line="15" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="37">cur<pos:position pos:line="15" pos:column="40"/></name></decl>;<pos:position pos:line="15" pos:column="41"/></struct>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">u_int<pos:position pos:line="16" pos:column="10"/></name></type> <name><name pos:line="16" pos:column="11">words<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><name pos:line="16" pos:column="17">NS_IN6ADDRSZ<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">/<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">NS_INT16SZ<pos:position pos:line="16" pos:column="42"/></name></expr>]<pos:position pos:line="16" pos:column="43"/></index></name></decl>;<pos:position pos:line="16" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">i<pos:position pos:line="17" pos:column="10"/></name></decl>;<pos:position pos:line="17" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="19" pos:column="5">/*
     * Preprocess:
     *	Copy the input (bytewise) array into a wordwise array.
     *	Find the longest run of 0x00's in src[] for :: shorthanding.
     */</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">memset<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">words<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="19">'\0'<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="25">sizeof <name pos:line="24" pos:column="32">words<pos:position pos:line="24" pos:column="37"/></name></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">i<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></init> <condition><expr><name pos:line="25" pos:column="17">i<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&lt;<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="21">NS_IN6ADDRSZ<pos:position pos:line="25" pos:column="33"/></name></expr>;<pos:position pos:line="25" pos:column="34"/></condition> <incr><expr><name pos:line="25" pos:column="35">i<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">++<pos:position pos:line="25" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="39"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="9">words<pos:position pos:line="26" pos:column="14"/></name><index pos:line="26" pos:column="14">[<expr><name pos:line="26" pos:column="15">i<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">/<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="19">2<pos:position pos:line="26" pos:column="20"/></literal></expr>]<pos:position pos:line="26" pos:column="21"/></index></name> <operator pos:line="26" pos:column="22">|=<pos:position pos:line="26" pos:column="24"/></operator> <operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name><name pos:line="26" pos:column="26">src<pos:position pos:line="26" pos:column="29"/></name><index pos:line="26" pos:column="29">[<expr><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name></expr>]<pos:position pos:line="26" pos:column="32"/></index></name> <operator pos:line="26" pos:column="33">&lt;&lt;<pos:position pos:line="26" pos:column="41"/></operator> <operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><operator pos:line="26" pos:column="37">(<pos:position pos:line="26" pos:column="38"/></operator><literal type="number" pos:line="26" pos:column="38">1<pos:position pos:line="26" pos:column="39"/></literal> <operator pos:line="26" pos:column="40">-<pos:position pos:line="26" pos:column="41"/></operator> <operator pos:line="26" pos:column="42">(<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="43">i<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">%<pos:position pos:line="26" pos:column="46"/></operator> <literal type="number" pos:line="26" pos:column="47">2<pos:position pos:line="26" pos:column="48"/></literal><operator pos:line="26" pos:column="48">)<pos:position pos:line="26" pos:column="49"/></operator><operator pos:line="26" pos:column="49">)<pos:position pos:line="26" pos:column="50"/></operator> <operator pos:line="26" pos:column="51">&lt;&lt;<pos:position pos:line="26" pos:column="59"/></operator> <literal type="number" pos:line="26" pos:column="54">3<pos:position pos:line="26" pos:column="55"/></literal><operator pos:line="26" pos:column="55">)<pos:position pos:line="26" pos:column="56"/></operator><operator pos:line="26" pos:column="56">)<pos:position pos:line="26" pos:column="57"/></operator></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt></block></for>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">best<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">.<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">base<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <operator pos:line="27" pos:column="17">-<pos:position pos:line="27" pos:column="18"/></operator><literal type="number" pos:line="27" pos:column="18">1<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">best<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">.<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">len<pos:position pos:line="28" pos:column="13"/></name></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">cur<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">.<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">base<pos:position pos:line="29" pos:column="13"/></name></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <operator pos:line="29" pos:column="16">-<pos:position pos:line="29" pos:column="17"/></operator><literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">cur<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">.<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">len<pos:position pos:line="30" pos:column="12"/></name></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <literal type="number" pos:line="30" pos:column="15">0<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init><expr><name pos:line="31" pos:column="10">i<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></init> <condition><expr><name pos:line="31" pos:column="17">i<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&lt;<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">NS_IN6ADDRSZ<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">/<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">NS_INT16SZ<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">)<pos:position pos:line="31" pos:column="48"/></operator></expr>;<pos:position pos:line="31" pos:column="49"/></condition> <incr><expr><name pos:line="31" pos:column="50">i<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">++<pos:position pos:line="31" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="54"/></control> <block pos:line="31" pos:column="55">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">words<pos:position pos:line="32" pos:column="18"/></name><index pos:line="32" pos:column="18">[<expr><name pos:line="32" pos:column="19">i<pos:position pos:line="32" pos:column="20"/></name></expr>]<pos:position pos:line="32" pos:column="21"/></index></name> <operator pos:line="32" pos:column="22">==<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name><name pos:line="33" pos:column="17">cur<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">base<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">==<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator><literal type="number" pos:line="33" pos:column="30">1<pos:position pos:line="33" pos:column="31"/></literal></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="17">cur<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">.<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">base<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">i<pos:position pos:line="34" pos:column="29"/></name></expr><operator pos:line="34" pos:column="29">,<pos:position pos:line="34" pos:column="30"/></operator> <expr><name><name pos:line="34" pos:column="31">cur<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">len<pos:position pos:line="34" pos:column="38"/></name></name> <operator pos:line="34" pos:column="39">=<pos:position pos:line="34" pos:column="40"/></operator> <literal type="number" pos:line="34" pos:column="41">1<pos:position pos:line="34" pos:column="42"/></literal></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt></block></then>
            <else pos:line="35" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="17">cur<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">len<pos:position pos:line="36" pos:column="24"/></name></name><operator pos:line="36" pos:column="24">++<pos:position pos:line="36" pos:column="26"/></operator></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt></block></else></if>
        }<pos:position pos:line="37" pos:column="10"/></block></then> <else pos:line="37" pos:column="11">else <block pos:line="37" pos:column="16">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><name><name pos:line="38" pos:column="17">cur<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">base<pos:position pos:line="38" pos:column="25"/></name></name> <operator pos:line="38" pos:column="26">!=<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="29">-<pos:position pos:line="38" pos:column="30"/></operator><literal type="number" pos:line="38" pos:column="30">1<pos:position pos:line="38" pos:column="31"/></literal></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32"> <block pos:line="38" pos:column="33">{
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name><name pos:line="39" pos:column="21">best<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">base<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">==<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="34">-<pos:position pos:line="39" pos:column="35"/></operator><literal type="number" pos:line="39" pos:column="35">1<pos:position pos:line="39" pos:column="36"/></literal> <operator pos:line="39" pos:column="37">||<pos:position pos:line="39" pos:column="39"/></operator> <name><name pos:line="39" pos:column="40">cur<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">.<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="44">len<pos:position pos:line="39" pos:column="47"/></name></name> <operator pos:line="39" pos:column="48">&gt;<pos:position pos:line="39" pos:column="52"/></operator> <name><name pos:line="39" pos:column="50">best<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">.<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="55">len<pos:position pos:line="39" pos:column="58"/></name></name></expr>)<pos:position pos:line="39" pos:column="59"/></condition><then pos:line="39" pos:column="59">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="21">best<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">cur<pos:position pos:line="40" pos:column="31"/></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name><name pos:line="41" pos:column="17">cur<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">base<pos:position pos:line="41" pos:column="25"/></name></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <operator pos:line="41" pos:column="28">-<pos:position pos:line="41" pos:column="29"/></operator><literal type="number" pos:line="41" pos:column="29">1<pos:position pos:line="41" pos:column="30"/></literal></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
        }<pos:position pos:line="43" pos:column="10"/></block></else></if>
    }<pos:position pos:line="44" pos:column="6"/></block></for>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">cur<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">.<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">base<pos:position pos:line="45" pos:column="17"/></name></name> <operator pos:line="45" pos:column="18">!=<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">-<pos:position pos:line="45" pos:column="22"/></operator><literal type="number" pos:line="45" pos:column="22">1<pos:position pos:line="45" pos:column="23"/></literal></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24"> <block pos:line="45" pos:column="25">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">best<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">base<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">==<pos:position pos:line="46" pos:column="25"/></operator> <operator pos:line="46" pos:column="26">-<pos:position pos:line="46" pos:column="27"/></operator><literal type="number" pos:line="46" pos:column="27">1<pos:position pos:line="46" pos:column="28"/></literal> <operator pos:line="46" pos:column="29">||<pos:position pos:line="46" pos:column="31"/></operator> <name><name pos:line="46" pos:column="32">cur<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">.<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">len<pos:position pos:line="46" pos:column="39"/></name></name> <operator pos:line="46" pos:column="40">&gt;<pos:position pos:line="46" pos:column="44"/></operator> <name><name pos:line="46" pos:column="42">best<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">.<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="47">len<pos:position pos:line="46" pos:column="50"/></name></name></expr>)<pos:position pos:line="46" pos:column="51"/></condition><then pos:line="46" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="13">best<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">cur<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">best<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">.<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">base<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">!=<pos:position pos:line="49" pos:column="21"/></operator> <operator pos:line="49" pos:column="22">-<pos:position pos:line="49" pos:column="23"/></operator><literal type="number" pos:line="49" pos:column="23">1<pos:position pos:line="49" pos:column="24"/></literal> <operator pos:line="49" pos:column="25">&amp;&amp;<pos:position pos:line="49" pos:column="35"/></operator> <name><name pos:line="49" pos:column="28">best<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">.<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="33">len<pos:position pos:line="49" pos:column="36"/></name></name> <operator pos:line="49" pos:column="37">&lt;<pos:position pos:line="49" pos:column="41"/></operator> <literal type="number" pos:line="49" pos:column="39">2<pos:position pos:line="49" pos:column="40"/></literal></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="9">best<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">.<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">base<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <operator pos:line="50" pos:column="21">-<pos:position pos:line="50" pos:column="22"/></operator><literal type="number" pos:line="50" pos:column="22">1<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="52" pos:column="5">/*
     * Format the result.
     */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">tp<pos:position pos:line="55" pos:column="7"/></name> <operator pos:line="55" pos:column="8">=<pos:position pos:line="55" pos:column="9"/></operator> <name pos:line="55" pos:column="10">tmp<pos:position pos:line="55" pos:column="13"/></name></expr>;<pos:position pos:line="55" pos:column="14"/></expr_stmt>
    <for pos:line="56" pos:column="5">for <control pos:line="56" pos:column="9">(<init><expr><name pos:line="56" pos:column="10">i<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <literal type="number" pos:line="56" pos:column="14">0<pos:position pos:line="56" pos:column="15"/></literal></expr>;<pos:position pos:line="56" pos:column="16"/></init> <condition><expr><name pos:line="56" pos:column="17">i<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">&lt;<pos:position pos:line="56" pos:column="23"/></operator> <operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">NS_IN6ADDRSZ<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">/<pos:position pos:line="56" pos:column="36"/></operator> <name pos:line="56" pos:column="37">NS_INT16SZ<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">)<pos:position pos:line="56" pos:column="48"/></operator></expr>;<pos:position pos:line="56" pos:column="49"/></condition> <incr><expr><name pos:line="56" pos:column="50">i<pos:position pos:line="56" pos:column="51"/></name><operator pos:line="56" pos:column="51">++<pos:position pos:line="56" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="54"/></control> <block pos:line="56" pos:column="55">{
        <comment type="block" pos:line="57" pos:column="9">/* Are we inside the best run of 0x00's? */</comment>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">best<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">.<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">base<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">!=<pos:position pos:line="58" pos:column="25"/></operator> <operator pos:line="58" pos:column="26">-<pos:position pos:line="58" pos:column="27"/></operator><literal type="number" pos:line="58" pos:column="27">1<pos:position pos:line="58" pos:column="28"/></literal> <operator pos:line="58" pos:column="29">&amp;&amp;<pos:position pos:line="58" pos:column="39"/></operator> <name pos:line="58" pos:column="32">i<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">&gt;=<pos:position pos:line="58" pos:column="39"/></operator> <name><name pos:line="58" pos:column="37">best<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">.<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="42">base<pos:position pos:line="58" pos:column="46"/></name></name> <operator pos:line="58" pos:column="47">&amp;&amp;<pos:position pos:line="58" pos:column="57"/></operator>
                <name pos:line="59" pos:column="17">i<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">&lt;<pos:position pos:line="59" pos:column="23"/></operator> <operator pos:line="59" pos:column="21">(<pos:position pos:line="59" pos:column="22"/></operator><name><name pos:line="59" pos:column="22">best<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">.<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="27">base<pos:position pos:line="59" pos:column="31"/></name></name> <operator pos:line="59" pos:column="32">+<pos:position pos:line="59" pos:column="33"/></operator> <name><name pos:line="59" pos:column="34">best<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">.<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="39">len<pos:position pos:line="59" pos:column="42"/></name></name><operator pos:line="59" pos:column="42">)<pos:position pos:line="59" pos:column="43"/></operator></expr>)<pos:position pos:line="59" pos:column="44"/></condition><then pos:line="59" pos:column="44"> <block pos:line="59" pos:column="45">{
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">i<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">==<pos:position pos:line="60" pos:column="21"/></operator> <name><name pos:line="60" pos:column="22">best<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">.<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">base<pos:position pos:line="60" pos:column="31"/></name></name></expr>)<pos:position pos:line="60" pos:column="32"/></condition><then pos:line="60" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="61" pos:column="17">*<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">tp<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">++<pos:position pos:line="61" pos:column="22"/></operator> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <literal type="char" pos:line="61" pos:column="25">':'<pos:position pos:line="61" pos:column="28"/></literal></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt></block></then></if>
            <continue pos:line="62" pos:column="13">continue;<pos:position pos:line="62" pos:column="22"/></continue>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="64" pos:column="9">/* Are we following an initial run of 0x00s or any real hex? */</comment>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">i<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">!=<pos:position pos:line="65" pos:column="17"/></operator> <literal type="number" pos:line="65" pos:column="18">0<pos:position pos:line="65" pos:column="19"/></literal></expr>)<pos:position pos:line="65" pos:column="20"/></condition><then pos:line="65" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="13">*<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">tp<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">++<pos:position pos:line="66" pos:column="18"/></operator> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <literal type="char" pos:line="66" pos:column="21">':'<pos:position pos:line="66" pos:column="24"/></literal></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt></block></then></if>
        <comment type="block" pos:line="67" pos:column="9">/* Is this address an encapsulated IPv4? */</comment>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">i<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">==<pos:position pos:line="68" pos:column="17"/></operator> <literal type="number" pos:line="68" pos:column="18">6<pos:position pos:line="68" pos:column="19"/></literal> <operator pos:line="68" pos:column="20">&amp;&amp;<pos:position pos:line="68" pos:column="30"/></operator> <name><name pos:line="68" pos:column="23">best<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">.<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="28">base<pos:position pos:line="68" pos:column="32"/></name></name> <operator pos:line="68" pos:column="33">==<pos:position pos:line="68" pos:column="35"/></operator> <literal type="number" pos:line="68" pos:column="36">0<pos:position pos:line="68" pos:column="37"/></literal> <operator pos:line="68" pos:column="38">&amp;&amp;<pos:position pos:line="68" pos:column="48"/></operator> <operator pos:line="68" pos:column="41">(<pos:position pos:line="68" pos:column="42"/></operator><name><name pos:line="68" pos:column="42">best<pos:position pos:line="68" pos:column="46"/></name><operator pos:line="68" pos:column="46">.<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="47">len<pos:position pos:line="68" pos:column="50"/></name></name> <operator pos:line="68" pos:column="51">==<pos:position pos:line="68" pos:column="53"/></operator> <literal type="number" pos:line="68" pos:column="54">6<pos:position pos:line="68" pos:column="55"/></literal> <operator pos:line="68" pos:column="56">||<pos:position pos:line="68" pos:column="58"/></operator>
                                         <operator pos:line="69" pos:column="42">(<pos:position pos:line="69" pos:column="43"/></operator><name><name pos:line="69" pos:column="43">best<pos:position pos:line="69" pos:column="47"/></name><operator pos:line="69" pos:column="47">.<pos:position pos:line="69" pos:column="48"/></operator><name pos:line="69" pos:column="48">len<pos:position pos:line="69" pos:column="51"/></name></name> <operator pos:line="69" pos:column="52">==<pos:position pos:line="69" pos:column="54"/></operator> <literal type="number" pos:line="69" pos:column="55">7<pos:position pos:line="69" pos:column="56"/></literal> <operator pos:line="69" pos:column="57">&amp;&amp;<pos:position pos:line="69" pos:column="67"/></operator> <name><name pos:line="69" pos:column="60">words<pos:position pos:line="69" pos:column="65"/></name><index pos:line="69" pos:column="65">[<expr><literal type="number" pos:line="69" pos:column="66">7<pos:position pos:line="69" pos:column="67"/></literal></expr>]<pos:position pos:line="69" pos:column="68"/></index></name> <operator pos:line="69" pos:column="69">!=<pos:position pos:line="69" pos:column="71"/></operator> <literal type="number" pos:line="69" pos:column="72">0x0001<pos:position pos:line="69" pos:column="78"/></literal><operator pos:line="69" pos:column="78">)<pos:position pos:line="69" pos:column="79"/></operator> <operator pos:line="69" pos:column="80">||<pos:position pos:line="69" pos:column="82"/></operator>
                                         <operator pos:line="70" pos:column="42">(<pos:position pos:line="70" pos:column="43"/></operator><name><name pos:line="70" pos:column="43">best<pos:position pos:line="70" pos:column="47"/></name><operator pos:line="70" pos:column="47">.<pos:position pos:line="70" pos:column="48"/></operator><name pos:line="70" pos:column="48">len<pos:position pos:line="70" pos:column="51"/></name></name> <operator pos:line="70" pos:column="52">==<pos:position pos:line="70" pos:column="54"/></operator> <literal type="number" pos:line="70" pos:column="55">5<pos:position pos:line="70" pos:column="56"/></literal> <operator pos:line="70" pos:column="57">&amp;&amp;<pos:position pos:line="70" pos:column="67"/></operator> <name><name pos:line="70" pos:column="60">words<pos:position pos:line="70" pos:column="65"/></name><index pos:line="70" pos:column="65">[<expr><literal type="number" pos:line="70" pos:column="66">5<pos:position pos:line="70" pos:column="67"/></literal></expr>]<pos:position pos:line="70" pos:column="68"/></index></name> <operator pos:line="70" pos:column="69">==<pos:position pos:line="70" pos:column="71"/></operator> <literal type="number" pos:line="70" pos:column="72">0xffff<pos:position pos:line="70" pos:column="78"/></literal><operator pos:line="70" pos:column="78">)<pos:position pos:line="70" pos:column="79"/></operator><operator pos:line="70" pos:column="79">)<pos:position pos:line="70" pos:column="80"/></operator></expr>)<pos:position pos:line="70" pos:column="81"/></condition><then pos:line="70" pos:column="81"> <block pos:line="70" pos:column="82">{
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><operator pos:line="71" pos:column="17">!<pos:position pos:line="71" pos:column="18"/></operator><call><name pos:line="71" pos:column="18">inet_ntop4<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">src<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">+<pos:position pos:line="71" pos:column="33"/></operator><literal type="number" pos:line="71" pos:column="33">12<pos:position pos:line="71" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="37">tp<pos:position pos:line="71" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="41">sizeof <name pos:line="71" pos:column="48">tmp<pos:position pos:line="71" pos:column="51"/></name></sizeof> <operator pos:line="71" pos:column="52">-<pos:position pos:line="71" pos:column="53"/></operator> <operator pos:line="71" pos:column="54">(<pos:position pos:line="71" pos:column="55"/></operator><name pos:line="71" pos:column="55">tp<pos:position pos:line="71" pos:column="57"/></name> <operator pos:line="71" pos:column="58">-<pos:position pos:line="71" pos:column="59"/></operator> <name pos:line="71" pos:column="60">tmp<pos:position pos:line="71" pos:column="63"/></name><operator pos:line="71" pos:column="63">)<pos:position pos:line="71" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="66"/></condition><then pos:line="71" pos:column="66">
                <block type="pseudo"><return pos:line="72" pos:column="17">return <expr><operator pos:line="72" pos:column="24">(<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="25">NULL<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">)<pos:position pos:line="72" pos:column="30"/></operator></expr>;<pos:position pos:line="72" pos:column="31"/></return></block></then></if>
            <expr_stmt><expr><name pos:line="73" pos:column="13">tp<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">+=<pos:position pos:line="73" pos:column="18"/></operator> <call><name pos:line="73" pos:column="19">strlen<pos:position pos:line="73" pos:column="25"/></name><argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">tp<pos:position pos:line="73" pos:column="28"/></name></expr></argument>)<pos:position pos:line="73" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
            <break pos:line="74" pos:column="13">break;<pos:position pos:line="74" pos:column="19"/></break>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="76" pos:column="9">tp<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">+=<pos:position pos:line="76" pos:column="14"/></operator> <call><name pos:line="76" pos:column="15">snprintf<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><name pos:line="76" pos:column="24">tp<pos:position pos:line="76" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="28">(<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="29">tmp<pos:position pos:line="76" pos:column="32"/></name> <operator pos:line="76" pos:column="33">+<pos:position pos:line="76" pos:column="34"/></operator> <sizeof pos:line="76" pos:column="35">sizeof<argument_list pos:line="76" pos:column="41">(<argument><expr><literal type="string" pos:line="76" pos:column="42">"ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"<pos:position pos:line="76" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="90"/></argument_list></sizeof> <operator pos:line="76" pos:column="91">-<pos:position pos:line="76" pos:column="92"/></operator> <name pos:line="76" pos:column="93">tp<pos:position pos:line="76" pos:column="95"/></name><operator pos:line="76" pos:column="95">)<pos:position pos:line="76" pos:column="96"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="98">"%x"<pos:position pos:line="76" pos:column="102"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="104">words<pos:position pos:line="76" pos:column="109"/></name><index pos:line="76" pos:column="109">[<expr><name pos:line="76" pos:column="110">i<pos:position pos:line="76" pos:column="111"/></name></expr>]<pos:position pos:line="76" pos:column="112"/></index></name></expr></argument>)<pos:position pos:line="76" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="114"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></for>
    <comment type="block" pos:line="78" pos:column="5">/* Was it a trailing run of 0x00's? */</comment>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name><name pos:line="79" pos:column="9">best<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">.<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">base<pos:position pos:line="79" pos:column="18"/></name></name> <operator pos:line="79" pos:column="19">!=<pos:position pos:line="79" pos:column="21"/></operator> <operator pos:line="79" pos:column="22">-<pos:position pos:line="79" pos:column="23"/></operator><literal type="number" pos:line="79" pos:column="23">1<pos:position pos:line="79" pos:column="24"/></literal> <operator pos:line="79" pos:column="25">&amp;&amp;<pos:position pos:line="79" pos:column="35"/></operator> <operator pos:line="79" pos:column="28">(<pos:position pos:line="79" pos:column="29"/></operator><name><name pos:line="79" pos:column="29">best<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">.<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="34">base<pos:position pos:line="79" pos:column="38"/></name></name> <operator pos:line="79" pos:column="39">+<pos:position pos:line="79" pos:column="40"/></operator> <name><name pos:line="79" pos:column="41">best<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">.<pos:position pos:line="79" pos:column="46"/></operator><name pos:line="79" pos:column="46">len<pos:position pos:line="79" pos:column="49"/></name></name><operator pos:line="79" pos:column="49">)<pos:position pos:line="79" pos:column="50"/></operator> <operator pos:line="79" pos:column="51">==<pos:position pos:line="79" pos:column="53"/></operator>
            <operator pos:line="80" pos:column="13">(<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="14">NS_IN6ADDRSZ<pos:position pos:line="80" pos:column="26"/></name> <operator pos:line="80" pos:column="27">/<pos:position pos:line="80" pos:column="28"/></operator> <name pos:line="80" pos:column="29">NS_INT16SZ<pos:position pos:line="80" pos:column="39"/></name><operator pos:line="80" pos:column="39">)<pos:position pos:line="80" pos:column="40"/></operator></expr>)<pos:position pos:line="80" pos:column="41"/></condition><then pos:line="80" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="81" pos:column="9">*<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">tp<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">++<pos:position pos:line="81" pos:column="14"/></operator> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <literal type="char" pos:line="81" pos:column="17">':'<pos:position pos:line="81" pos:column="20"/></literal></expr>;<pos:position pos:line="81" pos:column="21"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="82" pos:column="5">*<pos:position pos:line="82" pos:column="6"/></operator><name pos:line="82" pos:column="6">tp<pos:position pos:line="82" pos:column="8"/></name><operator pos:line="82" pos:column="8">++<pos:position pos:line="82" pos:column="10"/></operator> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <literal type="char" pos:line="82" pos:column="13">'\0'<pos:position pos:line="82" pos:column="17"/></literal></expr>;<pos:position pos:line="82" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="84" pos:column="5">/*
     * Check for overflow, copy, and we're done.
     */</comment>
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><call pos:line="87" pos:column="9">(<name pos:line="87" pos:column="10">size_t<pos:position pos:line="87" pos:column="16"/></name>)<argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">tp<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">-<pos:position pos:line="87" pos:column="22"/></operator> <name pos:line="87" pos:column="23">tmp<pos:position pos:line="87" pos:column="26"/></name></expr></argument>)<pos:position pos:line="87" pos:column="27"/></argument_list></call> <operator pos:line="87" pos:column="28">&gt;<pos:position pos:line="87" pos:column="32"/></operator> <name pos:line="87" pos:column="30">size<pos:position pos:line="87" pos:column="34"/></name></expr>)<pos:position pos:line="87" pos:column="35"/></condition><then pos:line="87" pos:column="35"> <block pos:line="87" pos:column="36">{
        <expr_stmt><expr><name pos:line="88" pos:column="9">errno<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">=<pos:position pos:line="88" pos:column="16"/></operator> <name pos:line="88" pos:column="17">ENOSPC<pos:position pos:line="88" pos:column="23"/></name></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>
        <return pos:line="89" pos:column="9">return <expr><operator pos:line="89" pos:column="16">(<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">NULL<pos:position pos:line="89" pos:column="21"/></name><operator pos:line="89" pos:column="21">)<pos:position pos:line="89" pos:column="22"/></operator></expr>;<pos:position pos:line="89" pos:column="23"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">strcpy<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><name pos:line="91" pos:column="12">dst<pos:position pos:line="91" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="17">tmp<pos:position pos:line="91" pos:column="20"/></name></expr></argument>)<pos:position pos:line="91" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
    <return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">(<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">dst<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">)<pos:position pos:line="92" pos:column="17"/></operator></expr>;<pos:position pos:line="92" pos:column="18"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></unit>

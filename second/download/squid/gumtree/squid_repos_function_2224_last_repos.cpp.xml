<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2224_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">readConnectResponse<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">()<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">waitingForConnectResponse<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">()<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">AsyncCall<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Pointer<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">call<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><call><name pos:line="6" pos:column="31">commCbCall<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><literal type="number" pos:line="6" pos:column="42">5<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="44">4<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="47">"readConnectResponseDone"<pos:position pos:line="6" pos:column="72"/></literal></expr></argument>,
                                         <argument><expr><call><name pos:line="7" pos:column="42">CommIoCbPtrFun<pos:position pos:line="7" pos:column="56"/></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">ReadConnectResponseDone<pos:position pos:line="7" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="82">this<pos:position pos:line="7" pos:column="86"/></name></expr></argument>)<pos:position pos:line="7" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="89"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">comm_read<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name><name pos:line="8" pos:column="15">server<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">conn<pos:position pos:line="8" pos:column="26"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="28">connectRespBuf<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">space<pos:position pos:line="8" pos:column="49"/></name></name><argument_list pos:line="8" pos:column="49">()<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr></argument>,
              <argument><expr><call><name><name pos:line="9" pos:column="15">server<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">bytesWanted<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">(<argument><expr><literal type="number" pos:line="9" pos:column="34">1<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="37">connectRespBuf<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">spaceSize<pos:position pos:line="9" pos:column="62"/></name></name><argument_list pos:line="9" pos:column="62">()<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="67">call<pos:position pos:line="9" pos:column="71"/></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

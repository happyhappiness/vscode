<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4048_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">SquidLogLevel<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">libecap<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">LogVerbosity<pos:position pos:line="2" pos:column="36"/></name></name></type> <name pos:line="2" pos:column="37">lv<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">lv<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">.<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">critical<pos:position pos:line="4" pos:column="20"/></name></name><argument_list pos:line="4" pos:column="20">()<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">DBG_CRITICAL<pos:position pos:line="5" pos:column="28"/></name></expr>;<pos:position pos:line="5" pos:column="29"/></return></block></then></if> <comment type="line" pos:line="5" pos:column="30">// is it a good idea to ignore other flags?</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">lv<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">large<pos:position pos:line="7" pos:column="17"/></name></name><argument_list pos:line="7" pos:column="17">()<pos:position pos:line="7" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">DBG_DATA<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></return></block></then></if> <comment type="line" pos:line="8" pos:column="26">// is it a good idea to ignore other flags?</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name><name pos:line="10" pos:column="9">lv<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">application<pos:position pos:line="10" pos:column="23"/></name></name><argument_list pos:line="10" pos:column="23">()<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><ternary><condition><expr><call><name><name pos:line="11" pos:column="16">lv<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">normal<pos:position pos:line="11" pos:column="25"/></name></name><argument_list pos:line="11" pos:column="25">()<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr> ?<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <expr><name pos:line="11" pos:column="30">DBG_IMPORTANT<pos:position pos:line="11" pos:column="43"/></name></expr> <pos:position pos:line="11" pos:column="44"/></then><else pos:line="11" pos:column="44">: <expr><literal type="number" pos:line="11" pos:column="46">2<pos:position pos:line="11" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="48"/></return></block></then></if>

    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">2<pos:position pos:line="13" pos:column="13"/></literal> <operator pos:line="13" pos:column="14">+<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="16">2<pos:position pos:line="13" pos:column="17"/></literal><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><call><name><name pos:line="13" pos:column="18">lv<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">debugging<pos:position pos:line="13" pos:column="30"/></name></name><argument_list pos:line="13" pos:column="30">()<pos:position pos:line="13" pos:column="32"/></argument_list></call> <operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">3<pos:position pos:line="13" pos:column="36"/></literal><operator pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></operator><call><name><name pos:line="13" pos:column="37">lv<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">.<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">operation<pos:position pos:line="13" pos:column="49"/></name></name><argument_list pos:line="13" pos:column="49">()<pos:position pos:line="13" pos:column="51"/></argument_list></call> <operator pos:line="13" pos:column="52">+<pos:position pos:line="13" pos:column="53"/></operator> <literal type="number" pos:line="13" pos:column="54">2<pos:position pos:line="13" pos:column="55"/></literal><operator pos:line="13" pos:column="55">*<pos:position pos:line="13" pos:column="56"/></operator><call><name><name pos:line="13" pos:column="56">lv<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">.<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">xaction<pos:position pos:line="13" pos:column="66"/></name></name><argument_list pos:line="13" pos:column="66">()<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

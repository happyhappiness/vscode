<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5638_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">ConnOpener<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">doConnect<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">conn_<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">!=<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">temporaryFd_<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&gt;=<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="7" pos:column="5">++<pos:position pos:line="7" pos:column="7"/></operator> <name pos:line="7" pos:column="8">totalTries_<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>

    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">comm_connect_addr<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">temporaryFd_<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="45">conn_<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">-&gt;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="52">remote<pos:position pos:line="9" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr> )<pos:position pos:line="9" pos:column="61"/></condition> <block pos:line="9" pos:column="62">{

    <case pos:line="11" pos:column="5">case <expr><name><name pos:line="11" pos:column="10">Comm<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">::<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">INPROGRESS<pos:position pos:line="11" pos:column="26"/></name></name></expr>:<pos:position pos:line="11" pos:column="27"/></case>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">5<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="19">5<pos:position pos:line="12" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="22">HERE<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&lt;&lt;<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="30">conn_<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">&lt;&lt;<pos:position pos:line="12" pos:column="44"/></operator> <literal type="string" pos:line="12" pos:column="39">": Comm::INPROGRESS"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">Comm<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">::<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">SetSelect<pos:position pos:line="13" pos:column="24"/></name></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">temporaryFd_<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">COMM_SELECT_WRITE<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="58">Comm<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">::<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="64">ConnOpener<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">::<pos:position pos:line="13" pos:column="76"/></operator><name pos:line="13" pos:column="76">InProgressConnectRetry<pos:position pos:line="13" pos:column="98"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="100">new<pos:position pos:line="13" pos:column="103"/></operator> <call><name pos:line="13" pos:column="104">Pointer<pos:position pos:line="13" pos:column="111"/></name><argument_list pos:line="13" pos:column="111">(<argument><expr><name pos:line="13" pos:column="112">this<pos:position pos:line="13" pos:column="116"/></name></expr></argument>)<pos:position pos:line="13" pos:column="117"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="119">0<pos:position pos:line="13" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="122"/></expr_stmt>
        <break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break>

    <case pos:line="16" pos:column="5">case <expr><name><name pos:line="16" pos:column="10">Comm<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">::<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">OK<pos:position pos:line="16" pos:column="18"/></name></name></expr>:<pos:position pos:line="16" pos:column="19"/></case>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">5<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="19">5<pos:position pos:line="17" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="22">HERE<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">&lt;&lt;<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="30">conn_<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">&lt;&lt;<pos:position pos:line="17" pos:column="44"/></operator> <literal type="string" pos:line="17" pos:column="39">": Comm::OK - connected"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">connected<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">()<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>

    <default pos:line="21" pos:column="5">default:<pos:position pos:line="21" pos:column="13"/></default> <block pos:line="21" pos:column="14">{
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">const<pos:position pos:line="22" pos:column="14"/></specifier> <name pos:line="22" pos:column="15">int<pos:position pos:line="22" pos:column="18"/></name></type> <name pos:line="22" pos:column="19">xerrno<pos:position pos:line="22" pos:column="25"/></name> <init pos:line="22" pos:column="26">= <expr><name pos:line="22" pos:column="28">errno<pos:position pos:line="22" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><operator pos:line="24" pos:column="9">++<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">failRetries_<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">5<pos:position pos:line="25" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="19">7<pos:position pos:line="25" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="22">conn_<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&lt;&lt;<pos:position pos:line="25" pos:column="36"/></operator> <literal type="string" pos:line="25" pos:column="31">": failure #"<pos:position pos:line="25" pos:column="44"/></literal> <operator pos:line="25" pos:column="45">&lt;&lt;<pos:position pos:line="25" pos:column="53"/></operator> <name pos:line="25" pos:column="48">failRetries_<pos:position pos:line="25" pos:column="60"/></name> <operator pos:line="25" pos:column="61">&lt;&lt;<pos:position pos:line="25" pos:column="69"/></operator> <literal type="string" pos:line="25" pos:column="64">" &lt;= "<pos:position pos:line="25" pos:column="73"/></literal> <operator pos:line="25" pos:column="71">&lt;&lt;<pos:position pos:line="25" pos:column="79"/></operator>
               <name><name pos:line="26" pos:column="16">Config<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">.<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">connect_retries<pos:position pos:line="26" pos:column="38"/></name></name> <operator pos:line="26" pos:column="39">&lt;&lt;<pos:position pos:line="26" pos:column="47"/></operator> <literal type="string" pos:line="26" pos:column="42">": "<pos:position pos:line="26" pos:column="46"/></literal> <operator pos:line="26" pos:column="47">&lt;&lt;<pos:position pos:line="26" pos:column="55"/></operator> <call><name pos:line="26" pos:column="50">xstrerr<pos:position pos:line="26" pos:column="57"/></name><argument_list pos:line="26" pos:column="57">(<argument><expr><name pos:line="26" pos:column="58">xerrno<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">failRetries_<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">&lt;<pos:position pos:line="28" pos:column="30"/></operator> <name><name pos:line="28" pos:column="28">Config<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">.<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="35">connect_retries<pos:position pos:line="28" pos:column="50"/></name></name></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51"> <block pos:line="28" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">5<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="23">5<pos:position pos:line="29" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="26">HERE<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&lt;&lt;<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="34">conn_<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">&lt;&lt;<pos:position pos:line="29" pos:column="48"/></operator> <literal type="string" pos:line="29" pos:column="43">": * - try again"<pos:position pos:line="29" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">retrySleep<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">()<pos:position pos:line="30" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
            <return pos:line="31" pos:column="13">return;<pos:position pos:line="31" pos:column="20"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
            <comment type="line" pos:line="33" pos:column="13">// send ERROR back to the upper layer.</comment>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">5<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="23">5<pos:position pos:line="34" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="26">HERE<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">&lt;&lt;<pos:position pos:line="34" pos:column="39"/></operator> <name pos:line="34" pos:column="34">conn_<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">&lt;&lt;<pos:position pos:line="34" pos:column="48"/></operator> <literal type="string" pos:line="34" pos:column="43">": * - ERR tried too many times already."<pos:position pos:line="34" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="86"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">sendAnswer<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name><name pos:line="35" pos:column="24">Comm<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">::<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">ERR_CONNECT<pos:position pos:line="35" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">xerrno<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="51">"Comm::ConnOpener::doConnect"<pos:position pos:line="35" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="82"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block>
    }<pos:position pos:line="38" pos:column="6"/></block></switch>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

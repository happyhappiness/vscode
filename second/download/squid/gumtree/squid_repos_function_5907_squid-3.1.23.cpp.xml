<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5907_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name><name pos:line="2" pos:column="1">struct<pos:position pos:line="2" pos:column="7"/></name> <name pos:line="2" pos:column="8">hostent<pos:position pos:line="2" pos:column="15"/></name></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type> <name pos:line="2" pos:column="18">gethostbyname<pos:position pos:line="2" pos:column="31"/></name> <parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">n<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> <block pos:line="2" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">HOSTENT<pos:position pos:line="3" pos:column="12"/></name> <name pos:line="3" pos:column="13">FAR<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type> <name pos:line="3" pos:column="19">result<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">result<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator> <call><name><operator pos:line="4" pos:column="19">::<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">gethostbyname<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">n<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call><operator pos:line="4" pos:column="37">)<pos:position pos:line="4" pos:column="38"/></operator> <operator pos:line="4" pos:column="39">==<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="42">NULL<pos:position pos:line="4" pos:column="46"/></name></expr>)<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="9">errno<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <call><name pos:line="5" pos:column="17">WSAGetLastError<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">()<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt></block></then></if>
    <return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

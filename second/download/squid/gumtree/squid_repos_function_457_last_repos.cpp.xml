<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_457_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientHttpRequest<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">callException<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name><name pos:line="2" pos:column="40">std<pos:position pos:line="2" pos:column="43"/></name><operator pos:line="2" pos:column="43">::<pos:position pos:line="2" pos:column="45"/></operator><name pos:line="2" pos:column="45">exception<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">&amp;<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="56">ex<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <specifier pos:line="4" pos:column="15">auto<pos:position pos:line="4" pos:column="19"/></specifier></type> <name pos:line="4" pos:column="20">clientConn<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><ternary><condition><expr><call><name pos:line="4" pos:column="33">getConn<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">()<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44"> <expr><call><name pos:line="4" pos:column="45">getConn<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">()<pos:position pos:line="4" pos:column="54"/></argument_list></call><operator pos:line="4" pos:column="54">-&gt;<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="56">clientConnection<pos:position pos:line="4" pos:column="72"/></name></expr> <pos:position pos:line="4" pos:column="73"/></then><else pos:line="4" pos:column="73">: <expr><literal type="null" pos:line="4" pos:column="75">nullptr<pos:position pos:line="4" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>)<pos:position pos:line="4" pos:column="83"/></condition><then pos:line="4" pos:column="83"> <block pos:line="4" pos:column="84">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name><name pos:line="5" pos:column="13">Comm<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">IsConnOpen<pos:position pos:line="5" pos:column="29"/></name></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">clientConn<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42"> <block pos:line="5" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">debugs<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="number" pos:line="6" pos:column="20">85<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="24">3<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"closing after exception: "<pos:position pos:line="6" pos:column="54"/></literal> <operator pos:line="6" pos:column="55">&lt;&lt;<pos:position pos:line="6" pos:column="63"/></operator> <call><name><name pos:line="6" pos:column="58">ex<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">.<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="61">what<pos:position pos:line="6" pos:column="65"/></name></name><argument_list pos:line="6" pos:column="65">()<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="7" pos:column="13">clientConn<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">close<pos:position pos:line="7" pos:column="30"/></name></name><argument_list pos:line="7" pos:column="30">()<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt> <comment type="line" pos:line="7" pos:column="34">// initiate orderly top-to-bottom cleanup</comment>
            <return pos:line="8" pos:column="13">return;<pos:position pos:line="8" pos:column="20"/></return>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">85<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="16">DBG_IMPORTANT<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"ClientHttpRequest exception without connection. Ignoring "<pos:position pos:line="11" pos:column="90"/></literal> <operator pos:line="11" pos:column="91">&lt;&lt;<pos:position pos:line="11" pos:column="99"/></operator> <call><name><name pos:line="11" pos:column="94">ex<pos:position pos:line="11" pos:column="96"/></name><operator pos:line="11" pos:column="96">.<pos:position pos:line="11" pos:column="97"/></operator><name pos:line="11" pos:column="97">what<pos:position pos:line="11" pos:column="101"/></name></name><argument_list pos:line="11" pos:column="101">()<pos:position pos:line="11" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="105"/></expr_stmt>
    <comment type="line" pos:line="12" pos:column="5">// XXX: Normally, we mustStop() but we cannot do that here because it is</comment>
    <comment type="line" pos:line="13" pos:column="5">// likely to leave Http::Stream and ConnStateData with a dangling http</comment>
    <comment type="line" pos:line="14" pos:column="5">// pointer. See r13480 or XXX in Http::Stream class description.</comment>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

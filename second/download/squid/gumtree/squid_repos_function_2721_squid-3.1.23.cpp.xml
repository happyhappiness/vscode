<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2721_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelPeerSelectComplete<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">FwdServer<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type> <name pos:line="2" pos:column="38">fs<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">void<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">data<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">TunnelStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpRequest<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">request<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">tunnelState<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">request<pos:position pos:line="5" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">peer<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">g<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">fs<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <block pos:line="8" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">ErrorState<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">err<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">err<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">errorCon<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">ERR_CANNOT_FORWARD<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="10" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="70">request<pos:position pos:line="10" pos:column="77"/></name></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">tunnelState<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">status_ptr<pos:position pos:line="11" pos:column="33"/></name></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="11" pos:column="60"/></name></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">err<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">callback<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">tunnelErrorComplete<pos:position pos:line="12" pos:column="44"/></name></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">err<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">callback_data<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">tunnelState<pos:position pos:line="13" pos:column="41"/></name></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">errorSend<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><call><name><name pos:line="14" pos:column="19">tunnelState<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">client<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">fd<pos:position pos:line="14" pos:column="41"/></name></name><argument_list pos:line="14" pos:column="41">()<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">err<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">tunnelState<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">servers<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">fs<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">tunnelState<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">host<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <ternary><condition><expr><name><name pos:line="19" pos:column="25">fs<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">_peer<pos:position pos:line="19" pos:column="34"/></name></name></expr> ?<pos:position pos:line="19" pos:column="36"/></condition><then pos:line="19" pos:column="36"> <expr><call><name pos:line="19" pos:column="37">xstrdup<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name><name pos:line="19" pos:column="45">fs<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">_peer<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">host<pos:position pos:line="19" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr> <pos:position pos:line="19" pos:column="62"/></then><else pos:line="19" pos:column="62">: <expr><call><name pos:line="19" pos:column="64">xstrdup<pos:position pos:line="19" pos:column="71"/></name><argument_list pos:line="19" pos:column="71">(<argument><expr><call><name><name pos:line="19" pos:column="72">request<pos:position pos:line="19" pos:column="79"/></name><operator pos:line="19" pos:column="79">-&gt;<pos:position pos:line="19" pos:column="84"/></operator><name pos:line="19" pos:column="81">GetHost<pos:position pos:line="19" pos:column="88"/></name></name><argument_list pos:line="19" pos:column="88">()<pos:position pos:line="19" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="91"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="92"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">fs<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">_peer<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">NULL<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">tunnelState<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">port<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name><name pos:line="22" pos:column="29">request<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">port<pos:position pos:line="22" pos:column="42"/></name></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><name><name pos:line="23" pos:column="16">fs<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">_peer<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">http_port<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">!=<pos:position pos:line="23" pos:column="39"/></operator> <literal type="number" pos:line="23" pos:column="40">0<pos:position pos:line="23" pos:column="41"/></literal></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <block pos:line="23" pos:column="43">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">tunnelState<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">port<pos:position pos:line="24" pos:column="26"/></name></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="29">fs<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">_peer<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">http_port<pos:position pos:line="24" pos:column="49"/></name></name></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif> <elseif pos:line="25" pos:column="7">else <if pos:line="25" pos:column="12">if <condition pos:line="25" pos:column="15">(<expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">g<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">peerFindByName<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">fs<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">_peer<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">host<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call><operator pos:line="25" pos:column="52">)<pos:position pos:line="25" pos:column="53"/></operator></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54"> <block pos:line="25" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">tunnelState<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">port<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <name><name pos:line="26" pos:column="29">g<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">http_port<pos:position pos:line="26" pos:column="41"/></name></name></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">tunnelState<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">-&gt;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="22">port<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">CACHE_HTTP_PORT<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">fs<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">_peer<pos:position pos:line="31" pos:column="18"/></name></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">tunnelState<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">request<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">peer_login<pos:position pos:line="32" pos:column="41"/></name></name> <operator pos:line="32" pos:column="42">=<pos:position pos:line="32" pos:column="43"/></operator> <name><name pos:line="32" pos:column="44">fs<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">_peer<pos:position pos:line="32" pos:column="53"/></name><operator pos:line="32" pos:column="53">-&gt;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="55">login<pos:position pos:line="32" pos:column="60"/></name></name></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">tunnelState<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">request<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">flags<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">.<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">proxying<pos:position pos:line="33" pos:column="45"/></name></name> <operator pos:line="33" pos:column="46">=<pos:position pos:line="33" pos:column="47"/></operator> <operator pos:line="33" pos:column="48">(<pos:position pos:line="33" pos:column="49"/></operator><ternary><condition><expr><name><name pos:line="33" pos:column="49">fs<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">_peer<pos:position pos:line="33" pos:column="58"/></name><operator pos:line="33" pos:column="58">-&gt;<pos:position pos:line="33" pos:column="63"/></operator><name pos:line="33" pos:column="60">options<pos:position pos:line="33" pos:column="67"/></name><operator pos:line="33" pos:column="67">.<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="68">originserver<pos:position pos:line="33" pos:column="80"/></name></name></expr>?<pos:position pos:line="33" pos:column="81"/></condition><then><expr><literal type="number" pos:line="33" pos:column="81">0<pos:position pos:line="33" pos:column="82"/></literal></expr></then><else pos:line="33" pos:column="82">:<expr><literal type="number" pos:line="33" pos:column="83">1<pos:position pos:line="33" pos:column="84"/></literal></expr></else></ternary><operator pos:line="33" pos:column="84">)<pos:position pos:line="33" pos:column="85"/></operator></expr>;<pos:position pos:line="33" pos:column="86"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then> <else pos:line="34" pos:column="7">else <block pos:line="34" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">tunnelState<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">request<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">peer_login<pos:position pos:line="35" pos:column="41"/></name></name> <operator pos:line="35" pos:column="42">=<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="44">NULL<pos:position pos:line="35" pos:column="48"/></name></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">tunnelState<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">request<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">flags<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">.<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">proxying<pos:position pos:line="36" pos:column="45"/></name></name> <operator pos:line="36" pos:column="46">=<pos:position pos:line="36" pos:column="47"/></operator> <literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>

<cpp:if pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">if<pos:position pos:line="39" pos:column="4"/></cpp:directive> <expr><name pos:line="39" pos:column="5">DELAY_POOLS<pos:position pos:line="39" pos:column="16"/></name></expr></cpp:if>
    <comment type="block" pos:line="40" pos:column="5">/* no point using the delayIsNoDelay stuff since tunnel is nice and simple */</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">g<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">&amp;&amp;<pos:position pos:line="41" pos:column="21"/></operator> <name><name pos:line="41" pos:column="14">g<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">options<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">no_delay<pos:position pos:line="41" pos:column="33"/></name></name></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="42" pos:column="9">tunnelState<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">server<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">setDelayId<pos:position pos:line="42" pos:column="39"/></name></name><argument_list pos:line="42" pos:column="39">(<argument><expr><call><name pos:line="42" pos:column="40">DelayId<pos:position pos:line="42" pos:column="47"/></name><argument_list pos:line="42" pos:column="47">()<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt></block></then></if>

<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">commConnectStart<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><call><name><name pos:line="46" pos:column="22">tunnelState<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">server<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">.<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">fd<pos:position pos:line="46" pos:column="44"/></name></name><argument_list pos:line="46" pos:column="44">()<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr></argument>,
                     <argument><expr><name><name pos:line="47" pos:column="22">tunnelState<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">-&gt;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="35">host<pos:position pos:line="47" pos:column="39"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="48" pos:column="22">tunnelState<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">port<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>,
                     <argument><expr><name pos:line="49" pos:column="22">tunnelConnectDone<pos:position pos:line="49" pos:column="39"/></name></expr></argument>,
                     <argument><expr><name pos:line="50" pos:column="22">tunnelState<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

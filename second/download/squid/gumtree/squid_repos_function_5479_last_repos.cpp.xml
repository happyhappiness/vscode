<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5479_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">memPoolGetGlobalStats<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">MemPoolGlobalStats<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">stats<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">pools_inuse<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">MemAllocator<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">pool<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">MemPoolIterator<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">iter<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">memset<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">stats<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="22">sizeof<argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">MemPoolGlobalStats<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><operator pos:line="9" pos:column="12">&amp;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="13">pp_stats<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof<argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">MemPoolStats<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">MemPools<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">::<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">GetInstance<pos:position pos:line="11" pos:column="26"/></name></name><argument_list pos:line="11" pos:column="26">()<pos:position pos:line="11" pos:column="28"/></argument_list></call><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><call><name pos:line="11" pos:column="29">flushMeters<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">()<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt> <comment type="block" pos:line="11" pos:column="44">/* recreate TheMeter */</comment>

    <comment type="block" pos:line="13" pos:column="5">/* gather all stats for Totals */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">iter<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">memPoolIterate<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">pool<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">memPoolIterateNext<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">iter<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call><operator pos:line="15" pos:column="44">)<pos:position pos:line="15" pos:column="45"/></operator></expr>)<pos:position pos:line="15" pos:column="46"/></condition> <block pos:line="15" pos:column="47">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name><name pos:line="16" pos:column="13">pool<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">getStats<pos:position pos:line="16" pos:column="27"/></name></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">pp_stats<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="39">1<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call> <operator pos:line="16" pos:column="42">&gt;<pos:position pos:line="16" pos:column="46"/></operator> <literal type="number" pos:line="16" pos:column="44">0<pos:position pos:line="16" pos:column="45"/></literal></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">pools_inuse<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">memPoolIterateDone<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">iter<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="21" pos:column="5">stats<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">TheMeter<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">&amp;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="24">TheMeter<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">stats<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">tot_pools_alloc<pos:position pos:line="23" pos:column="27"/></name></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <call><name><name pos:line="23" pos:column="30">MemPools<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">::<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">GetInstance<pos:position pos:line="23" pos:column="51"/></name></name><argument_list pos:line="23" pos:column="51">()<pos:position pos:line="23" pos:column="53"/></argument_list></call><operator pos:line="23" pos:column="53">.<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">poolCount<pos:position pos:line="23" pos:column="63"/></name></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">stats<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">tot_pools_inuse<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">pools_inuse<pos:position pos:line="24" pos:column="41"/></name></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">stats<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">tot_pools_mempid<pos:position pos:line="25" pos:column="28"/></name></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="31">Pool_id_counter<pos:position pos:line="25" pos:column="46"/></name></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">stats<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">tot_chunks_alloc<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name><name pos:line="27" pos:column="31">pp_stats<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">.<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="40">chunks_alloc<pos:position pos:line="27" pos:column="52"/></name></name></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">stats<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">tot_chunks_inuse<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <name><name pos:line="28" pos:column="31">pp_stats<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">.<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">chunks_inuse<pos:position pos:line="28" pos:column="52"/></name></name></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">stats<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">tot_chunks_partial<pos:position pos:line="29" pos:column="30"/></name></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <name><name pos:line="29" pos:column="33">pp_stats<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">.<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">chunks_partial<pos:position pos:line="29" pos:column="56"/></name></name></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">stats<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">tot_chunks_free<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <name><name pos:line="30" pos:column="30">pp_stats<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">.<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">chunks_free<pos:position pos:line="30" pos:column="50"/></name></name></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">stats<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">tot_items_alloc<pos:position pos:line="31" pos:column="27"/></name></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <name><name pos:line="31" pos:column="30">pp_stats<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">.<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="39">items_alloc<pos:position pos:line="31" pos:column="50"/></name></name></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">stats<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">tot_items_inuse<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <name><name pos:line="32" pos:column="30">pp_stats<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">.<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">items_inuse<pos:position pos:line="32" pos:column="50"/></name></name></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">stats<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">tot_items_idle<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <name><name pos:line="33" pos:column="29">pp_stats<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">.<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">items_idle<pos:position pos:line="33" pos:column="48"/></name></name></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="35" pos:column="5">stats<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">tot_overhead<pos:position pos:line="35" pos:column="24"/></name></name> <operator pos:line="35" pos:column="25">+=<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="28">pp_stats<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">.<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">overhead<pos:position pos:line="35" pos:column="45"/></name></name> <operator pos:line="35" pos:column="46">+<pos:position pos:line="35" pos:column="47"/></operator> <call><name><name pos:line="35" pos:column="48">MemPools<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">::<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="58">GetInstance<pos:position pos:line="35" pos:column="69"/></name></name><argument_list pos:line="35" pos:column="69">()<pos:position pos:line="35" pos:column="71"/></argument_list></call><operator pos:line="35" pos:column="71">.<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="72">poolCount<pos:position pos:line="35" pos:column="81"/></name> <operator pos:line="35" pos:column="82">*<pos:position pos:line="35" pos:column="83"/></operator> <sizeof pos:line="35" pos:column="84">sizeof<argument_list pos:line="35" pos:column="90">(<argument><expr><name pos:line="35" pos:column="91">MemAllocator<pos:position pos:line="35" pos:column="103"/></name> <operator pos:line="35" pos:column="104">*<pos:position pos:line="35" pos:column="105"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="106"/></argument_list></sizeof></expr>;<pos:position pos:line="35" pos:column="107"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">stats<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">mem_idle_limit<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <call><name><name pos:line="36" pos:column="29">MemPools<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">::<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">GetInstance<pos:position pos:line="36" pos:column="50"/></name></name><argument_list pos:line="36" pos:column="50">()<pos:position pos:line="36" pos:column="52"/></argument_list></call><operator pos:line="36" pos:column="52">.<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="53">mem_idle_limit<pos:position pos:line="36" pos:column="67"/></name></expr>;<pos:position pos:line="36" pos:column="68"/></expr_stmt>

    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">pools_inuse<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

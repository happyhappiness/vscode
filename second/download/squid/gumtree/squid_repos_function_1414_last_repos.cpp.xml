<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1414_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">helper_server<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">requestTimeout<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">CommTimeoutCbParams<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="58">io<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">26<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name><name pos:line="4" pos:column="27">io<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">.<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">helper_server<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">srv<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><cast type="static" pos:line="5" pos:column="26">static_cast<argument_list type="generic" pos:line="5" pos:column="37">&lt;<argument><expr><name pos:line="5" pos:column="38">helper_server<pos:position pos:line="5" pos:column="51"/></name> <operator pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="57"/></argument_list><argument_list pos:line="5" pos:column="54">(<argument><expr><name><name pos:line="5" pos:column="55">io<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">.<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="58">data<pos:position pos:line="5" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="5" pos:column="64"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">cbdataReferenceValid<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">srv<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">srv<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">checkForTimedOutRequests<pos:position pos:line="10" pos:column="34"/></name></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name><name pos:line="10" pos:column="35">srv<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">parent<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">retryTimedOut<pos:position pos:line="10" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">84<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">HERE<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">&lt;&lt;<pos:position pos:line="12" pos:column="32"/></operator> <name><name pos:line="12" pos:column="27">io<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">conn<pos:position pos:line="12" pos:column="34"/></name></name> <operator pos:line="12" pos:column="35">&lt;&lt;<pos:position pos:line="12" pos:column="43"/></operator> <literal type="string" pos:line="12" pos:column="38">" establish new helper_server::requestTimeout"<pos:position pos:line="12" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="86"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">AsyncCall<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">::<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">Pointer<pos:position pos:line="13" pos:column="23"/></name></name></type> <name pos:line="13" pos:column="24">timeoutCall<pos:position pos:line="13" pos:column="35"/></name> <init pos:line="13" pos:column="36">= <expr><call><name pos:line="13" pos:column="38">commCbCall<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><literal type="number" pos:line="13" pos:column="49">84<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="53">4<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="56">"helper_server::requestTimeout"<pos:position pos:line="13" pos:column="87"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="14" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><name><name pos:line="14" pos:column="58">helper_server<pos:position pos:line="14" pos:column="71"/></name><operator pos:line="14" pos:column="71">::<pos:position pos:line="14" pos:column="73"/></operator><name pos:line="14" pos:column="73">requestTimeout<pos:position pos:line="14" pos:column="87"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="89">srv<pos:position pos:line="14" pos:column="92"/></name></expr></argument>)<pos:position pos:line="14" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="95"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">int<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">timeSpent<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><ternary><condition><expr><call><name><name pos:line="16" pos:column="27">srv<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">requests<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">.<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">empty<pos:position pos:line="16" pos:column="46"/></name></name><argument_list pos:line="16" pos:column="46">()<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr> ?<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <expr><literal type="number" pos:line="16" pos:column="51">0<pos:position pos:line="16" pos:column="52"/></literal></expr> <pos:position pos:line="16" pos:column="53"/></then><else pos:line="16" pos:column="53">: <expr><operator pos:line="16" pos:column="55">(<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="56">squid_curtime<pos:position pos:line="16" pos:column="69"/></name> <operator pos:line="16" pos:column="70">-<pos:position pos:line="16" pos:column="71"/></operator> <call><name><name pos:line="16" pos:column="72">srv<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">-&gt;<pos:position pos:line="16" pos:column="80"/></operator><name pos:line="16" pos:column="77">requests<pos:position pos:line="16" pos:column="85"/></name><operator pos:line="16" pos:column="85">.<pos:position pos:line="16" pos:column="86"/></operator><name pos:line="16" pos:column="86">front<pos:position pos:line="16" pos:column="91"/></name></name><argument_list pos:line="16" pos:column="91">()<pos:position pos:line="16" pos:column="93"/></argument_list></call><operator pos:line="16" pos:column="93">-&gt;<pos:position pos:line="16" pos:column="98"/></operator><name><name pos:line="16" pos:column="95">request<pos:position pos:line="16" pos:column="102"/></name><operator pos:line="16" pos:column="102">.<pos:position pos:line="16" pos:column="103"/></operator><name pos:line="16" pos:column="103">dispatch_time<pos:position pos:line="16" pos:column="116"/></name><operator pos:line="16" pos:column="116">.<pos:position pos:line="16" pos:column="117"/></operator><name pos:line="16" pos:column="117">tv_sec<pos:position pos:line="16" pos:column="123"/></name></name><operator pos:line="16" pos:column="123">)<pos:position pos:line="16" pos:column="124"/></operator></expr></else></ternary></expr></init></decl>;<pos:position pos:line="16" pos:column="125"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">int<pos:position pos:line="17" pos:column="14"/></name></type> <name pos:line="17" pos:column="15">timeLeft<pos:position pos:line="17" pos:column="23"/></name> <init pos:line="17" pos:column="24">= <expr><call><name pos:line="17" pos:column="26">max<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="number" pos:line="17" pos:column="30">1<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="33">(<pos:position pos:line="17" pos:column="34"/></operator><cast type="static" pos:line="17" pos:column="34">static_cast<argument_list type="generic" pos:line="17" pos:column="45">&lt;<argument><expr><name pos:line="17" pos:column="46">int<pos:position pos:line="17" pos:column="49"/></name></expr></argument>&gt;<pos:position pos:line="17" pos:column="53"/></argument_list><argument_list pos:line="17" pos:column="50">(<argument><expr><name><name pos:line="17" pos:column="51">srv<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">parent<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">timeout<pos:position pos:line="17" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></cast> <operator pos:line="17" pos:column="73">-<pos:position pos:line="17" pos:column="74"/></operator> <name pos:line="17" pos:column="75">timeSpent<pos:position pos:line="17" pos:column="84"/></name><operator pos:line="17" pos:column="84">)<pos:position pos:line="17" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="87"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">commSetConnTimeout<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name><name pos:line="19" pos:column="24">io<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">conn<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">timeLeft<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">timeoutCall<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

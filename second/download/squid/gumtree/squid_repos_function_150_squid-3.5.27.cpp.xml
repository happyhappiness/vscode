<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_150_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">len<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">bytesWritten<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">bool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">to_stdout<pos:position pos:line="5" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">reload<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">keep_alive<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">opt_noaccept<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">HAVE_GSSAPI<pos:position pos:line="8" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">www_neg<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="22">proxy_neg<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">url<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><name pos:line="11" pos:column="14">BUFSIZ<pos:position pos:line="11" pos:column="20"/></name></expr>]<pos:position pos:line="11" pos:column="21"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="11" pos:column="23">msg<pos:position pos:line="11" pos:column="26"/></name><index pos:line="11" pos:column="26">[<expr><name pos:line="11" pos:column="27">MESSAGELEN<pos:position pos:line="11" pos:column="37"/></name></expr>]<pos:position pos:line="11" pos:column="38"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="11" pos:column="40">buf<pos:position pos:line="11" pos:column="43"/></name><index pos:line="11" pos:column="43">[<expr><name pos:line="11" pos:column="44">BUFSIZ<pos:position pos:line="11" pos:column="50"/></name></expr>]<pos:position pos:line="11" pos:column="51"/></index></name></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">extra_hdrs<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><name pos:line="12" pos:column="21">HEADERLEN<pos:position pos:line="12" pos:column="30"/></name></expr>]<pos:position pos:line="12" pos:column="31"/></index></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">method<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><literal type="string" pos:line="13" pos:column="26">"GET"<pos:position pos:line="13" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="14" pos:column="5">extern<pos:position pos:line="14" pos:column="11"/></specifier> <type><name pos:line="14" pos:column="12">char<pos:position pos:line="14" pos:column="16"/></name> <modifier pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></modifier></type><name pos:line="14" pos:column="18">optarg<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">time_t<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">ims<pos:position pos:line="15" pos:column="15"/></name> <init pos:line="15" pos:column="16">= <expr><literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">max_forwards<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name pos:line="18" pos:column="11">char<pos:position pos:line="18" pos:column="15"/></name> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">proxy_user<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><name pos:line="18" pos:column="30">NULL<pos:position pos:line="18" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">char<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">proxy_password<pos:position pos:line="19" pos:column="31"/></name> <init pos:line="19" pos:column="32">= <expr><name pos:line="19" pos:column="34">NULL<pos:position pos:line="19" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">char<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></modifier></type><name pos:line="20" pos:column="17">www_user<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><name pos:line="20" pos:column="28">NULL<pos:position pos:line="20" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">char<pos:position pos:line="21" pos:column="15"/></name> <modifier pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></modifier></type><name pos:line="21" pos:column="17">www_password<pos:position pos:line="21" pos:column="29"/></name> <init pos:line="21" pos:column="30">= <expr><name pos:line="21" pos:column="32">NULL<pos:position pos:line="21" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">char<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">host<pos:position pos:line="22" pos:column="21"/></name> <init pos:line="22" pos:column="22">= <expr><name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">const<pos:position pos:line="23" pos:column="10"/></specifier> <name pos:line="23" pos:column="11">char<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">version<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><literal type="string" pos:line="23" pos:column="27">"1.0"<pos:position pos:line="23" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">const<pos:position pos:line="24" pos:column="10"/></specifier> <name pos:line="24" pos:column="11">char<pos:position pos:line="24" pos:column="15"/></name> <modifier pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></modifier></type><name pos:line="24" pos:column="17">useragent<pos:position pos:line="24" pos:column="26"/></name> <init pos:line="24" pos:column="27">= <expr><name pos:line="24" pos:column="29">NULL<pos:position pos:line="24" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* set the defaults */</comment>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">extra_hdrs<pos:position pos:line="27" pos:column="15"/></name><index pos:line="27" pos:column="15">[<expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>]<pos:position pos:line="27" pos:column="18"/></index></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <literal type="char" pos:line="27" pos:column="21">'\0'<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">to_stdout<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="boolean" pos:line="28" pos:column="17">true<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">reload<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <literal type="boolean" pos:line="29" pos:column="14">false<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">Ip<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">::<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">ProbeTransport<pos:position pos:line="31" pos:column="23"/></name></name><argument_list pos:line="31" pos:column="23">()<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt> <comment type="line" pos:line="31" pos:column="27">// determine IPv4 or IPv6 capabilities before parsing.</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">argc<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">&lt;<pos:position pos:line="32" pos:column="18"/></operator> <literal type="number" pos:line="32" pos:column="16">2<pos:position pos:line="32" pos:column="17"/></literal> <operator pos:line="32" pos:column="18">||<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">argv<pos:position pos:line="32" pos:column="25"/></name><index pos:line="32" pos:column="25">[<expr><name pos:line="32" pos:column="26">argc<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-<pos:position pos:line="32" pos:column="31"/></operator><literal type="number" pos:line="32" pos:column="31">1<pos:position pos:line="32" pos:column="32"/></literal></expr>]<pos:position pos:line="32" pos:column="33"/></index><index pos:line="32" pos:column="33">[<expr><literal type="number" pos:line="32" pos:column="34">0<pos:position pos:line="32" pos:column="35"/></literal></expr>]<pos:position pos:line="32" pos:column="36"/></index></name> <operator pos:line="32" pos:column="37">==<pos:position pos:line="32" pos:column="39"/></operator> <literal type="char" pos:line="32" pos:column="40">'-'<pos:position pos:line="32" pos:column="43"/></literal></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">usage<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name><name pos:line="33" pos:column="15">argv<pos:position pos:line="33" pos:column="19"/></name><index pos:line="33" pos:column="19">[<expr><literal type="number" pos:line="33" pos:column="20">0<pos:position pos:line="33" pos:column="21"/></literal></expr>]<pos:position pos:line="33" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>     <comment type="block" pos:line="33" pos:column="29">/* need URL */</comment>
    }<pos:position pos:line="34" pos:column="6"/></block></then> <elseif pos:line="34" pos:column="7">else <if pos:line="34" pos:column="12">if <condition pos:line="34" pos:column="15">(<expr><name pos:line="34" pos:column="16">argc<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&gt;=<pos:position pos:line="34" pos:column="26"/></operator> <literal type="number" pos:line="34" pos:column="24">2<pos:position pos:line="34" pos:column="25"/></literal></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26"> <block pos:line="34" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">strncpy<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">url<pos:position pos:line="35" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="22">argv<pos:position pos:line="35" pos:column="26"/></name><index pos:line="35" pos:column="26">[<expr><name pos:line="35" pos:column="27">argc<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">-<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="34">1<pos:position pos:line="35" pos:column="35"/></literal></expr>]<pos:position pos:line="35" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">BUFSIZ<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">url<pos:position pos:line="36" pos:column="12"/></name><index pos:line="36" pos:column="12">[<expr><name pos:line="36" pos:column="13">BUFSIZ<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">-<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">1<pos:position pos:line="36" pos:column="23"/></literal></expr>]<pos:position pos:line="36" pos:column="24"/></index></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <literal type="char" pos:line="36" pos:column="27">'\0'<pos:position pos:line="36" pos:column="31"/></literal></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="38" pos:column="9">int<pos:position pos:line="38" pos:column="12"/></name></type> <name pos:line="38" pos:column="13">optIndex<pos:position pos:line="38" pos:column="21"/></name> <init pos:line="38" pos:column="22">= <expr><literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="39" pos:column="9">const<pos:position pos:line="39" pos:column="14"/></specifier> <name pos:line="39" pos:column="15">char<pos:position pos:line="39" pos:column="19"/></name> <modifier pos:line="39" pos:column="20">*<pos:position pos:line="39" pos:column="21"/></modifier></type><name pos:line="39" pos:column="21">shortOpStr<pos:position pos:line="39" pos:column="31"/></name> <init pos:line="39" pos:column="32">= <expr><literal type="string" pos:line="39" pos:column="34">"aA:h:j:V:l:P:i:km:nNp:rsvt:H:T:u:U:w:W:?"<pos:position pos:line="39" pos:column="76"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="77"/></decl_stmt>

        <comment type="line" pos:line="41" pos:column="9">// options for controlling squidclient</comment>
        <decl_stmt><decl><specifier pos:line="42" pos:column="9">static<pos:position pos:line="42" pos:column="15"/></specifier> <type><name><name pos:line="42" pos:column="16">struct<pos:position pos:line="42" pos:column="22"/></name> <name pos:line="42" pos:column="23">option<pos:position pos:line="42" pos:column="29"/></name></name></type> <name><name pos:line="42" pos:column="30">basicOptions<pos:position pos:line="42" pos:column="42"/></name><index pos:line="42" pos:column="42">[]<pos:position pos:line="42" pos:column="44"/></index></name> <init pos:line="42" pos:column="45">= <expr><block pos:line="42" pos:column="47">{
            <comment type="block" pos:line="43" pos:column="13">/* These are the generic options for squidclient itself */</comment>
            <expr><block pos:line="44" pos:column="13">{<expr><literal type="string" pos:line="44" pos:column="14">"help"<pos:position pos:line="44" pos:column="20"/></literal></expr>,    <expr><name pos:line="44" pos:column="25">no_argument<pos:position pos:line="44" pos:column="36"/></name></expr>, <expr><literal type="number" pos:line="44" pos:column="38">0<pos:position pos:line="44" pos:column="39"/></literal></expr>, <expr><literal type="char" pos:line="44" pos:column="41">'?'<pos:position pos:line="44" pos:column="44"/></literal></expr>}<pos:position pos:line="44" pos:column="45"/></block></expr>,
            <expr><block pos:line="45" pos:column="13">{<expr><literal type="string" pos:line="45" pos:column="14">"verbose"<pos:position pos:line="45" pos:column="23"/></literal></expr>, <expr><name pos:line="45" pos:column="25">no_argument<pos:position pos:line="45" pos:column="36"/></name></expr>, <expr><literal type="number" pos:line="45" pos:column="38">0<pos:position pos:line="45" pos:column="39"/></literal></expr>, <expr><literal type="char" pos:line="45" pos:column="41">'v'<pos:position pos:line="45" pos:column="44"/></literal></expr>}<pos:position pos:line="45" pos:column="45"/></block></expr>,
            <expr><block pos:line="46" pos:column="13">{<expr><literal type="string" pos:line="46" pos:column="14">"quiet"<pos:position pos:line="46" pos:column="21"/></literal></expr>,   <expr><name pos:line="46" pos:column="25">no_argument<pos:position pos:line="46" pos:column="36"/></name></expr>, <expr><literal type="number" pos:line="46" pos:column="38">0<pos:position pos:line="46" pos:column="39"/></literal></expr>, <expr><literal type="char" pos:line="46" pos:column="41">'s'<pos:position pos:line="46" pos:column="44"/></literal></expr>}<pos:position pos:line="46" pos:column="45"/></block></expr>,
            <expr><block pos:line="47" pos:column="13">{<expr><literal type="string" pos:line="47" pos:column="14">"host"<pos:position pos:line="47" pos:column="20"/></literal></expr>,    <expr><name pos:line="47" pos:column="25">required_argument<pos:position pos:line="47" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="47" pos:column="44">0<pos:position pos:line="47" pos:column="45"/></literal></expr>, <expr><literal type="char" pos:line="47" pos:column="47">'h'<pos:position pos:line="47" pos:column="50"/></literal></expr>}<pos:position pos:line="47" pos:column="51"/></block></expr>,
            <expr><block pos:line="48" pos:column="13">{<expr><literal type="string" pos:line="48" pos:column="14">"local"<pos:position pos:line="48" pos:column="21"/></literal></expr>,   <expr><name pos:line="48" pos:column="25">required_argument<pos:position pos:line="48" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="48" pos:column="44">0<pos:position pos:line="48" pos:column="45"/></literal></expr>, <expr><literal type="char" pos:line="48" pos:column="47">'l'<pos:position pos:line="48" pos:column="50"/></literal></expr>}<pos:position pos:line="48" pos:column="51"/></block></expr>,
            <expr><block pos:line="49" pos:column="13">{<expr><literal type="string" pos:line="49" pos:column="14">"port"<pos:position pos:line="49" pos:column="20"/></literal></expr>,    <expr><name pos:line="49" pos:column="25">required_argument<pos:position pos:line="49" pos:column="42"/></name></expr>, <expr><literal type="number" pos:line="49" pos:column="44">0<pos:position pos:line="49" pos:column="45"/></literal></expr>, <expr><literal type="char" pos:line="49" pos:column="47">'p'<pos:position pos:line="49" pos:column="50"/></literal></expr>}<pos:position pos:line="49" pos:column="51"/></block></expr>,
            <expr><block pos:line="50" pos:column="13">{<expr><literal type="string" pos:line="50" pos:column="14">"ping"<pos:position pos:line="50" pos:column="20"/></literal></expr>,    <expr><name pos:line="50" pos:column="25">no_argument<pos:position pos:line="50" pos:column="36"/></name></expr>, <expr><literal type="number" pos:line="50" pos:column="38">0<pos:position pos:line="50" pos:column="39"/></literal></expr>, <expr><literal type="char" pos:line="50" pos:column="41">'\1'<pos:position pos:line="50" pos:column="45"/></literal></expr>}<pos:position pos:line="50" pos:column="46"/></block></expr>,
            <expr><block pos:line="51" pos:column="13">{<expr><literal type="string" pos:line="51" pos:column="14">"https"<pos:position pos:line="51" pos:column="21"/></literal></expr>,   <expr><name pos:line="51" pos:column="25">no_argument<pos:position pos:line="51" pos:column="36"/></name></expr>, <expr><literal type="number" pos:line="51" pos:column="38">0<pos:position pos:line="51" pos:column="39"/></literal></expr>, <expr><literal type="char" pos:line="51" pos:column="41">'\3'<pos:position pos:line="51" pos:column="45"/></literal></expr>}<pos:position pos:line="51" pos:column="46"/></block></expr>,
            <expr><block pos:line="52" pos:column="13">{<expr><literal type="number" pos:line="52" pos:column="14">0<pos:position pos:line="52" pos:column="15"/></literal></expr>, <expr><literal type="number" pos:line="52" pos:column="17">0<pos:position pos:line="52" pos:column="18"/></literal></expr>, <expr><literal type="number" pos:line="52" pos:column="20">0<pos:position pos:line="52" pos:column="21"/></literal></expr>, <expr><literal type="number" pos:line="52" pos:column="23">0<pos:position pos:line="52" pos:column="24"/></literal></expr>}<pos:position pos:line="52" pos:column="25"/></block></expr>
        }<pos:position pos:line="53" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="53" pos:column="11"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="55" pos:column="9">int<pos:position pos:line="55" pos:column="12"/></name></type> <name pos:line="55" pos:column="13">c<pos:position pos:line="55" pos:column="14"/></name></decl>;<pos:position pos:line="55" pos:column="15"/></decl_stmt>
        <while pos:line="56" pos:column="9">while <condition pos:line="56" pos:column="15">(<expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="17">c<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <call><name pos:line="56" pos:column="21">getopt_long<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">argc<pos:position pos:line="56" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">argv<pos:position pos:line="56" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="45">shortOpStr<pos:position pos:line="56" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">basicOptions<pos:position pos:line="56" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="71">&amp;<pos:position pos:line="56" pos:column="76"/></operator><name pos:line="56" pos:column="72">optIndex<pos:position pos:line="56" pos:column="80"/></name></expr></argument>)<pos:position pos:line="56" pos:column="81"/></argument_list></call><operator pos:line="56" pos:column="81">)<pos:position pos:line="56" pos:column="82"/></operator> <operator pos:line="56" pos:column="83">!=<pos:position pos:line="56" pos:column="85"/></operator> <operator pos:line="56" pos:column="86">-<pos:position pos:line="56" pos:column="87"/></operator><literal type="number" pos:line="56" pos:column="87">1<pos:position pos:line="56" pos:column="88"/></literal></expr>)<pos:position pos:line="56" pos:column="89"/></condition> <block pos:line="56" pos:column="90">{

            <comment type="line" pos:line="58" pos:column="13">// modules parse their own specific options</comment>
            <switch pos:line="59" pos:column="13">switch <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">c<pos:position pos:line="59" pos:column="22"/></name></expr>)<pos:position pos:line="59" pos:column="23"/></condition> <block pos:line="59" pos:column="24">{
            <case pos:line="60" pos:column="13">case <expr><literal type="char" pos:line="60" pos:column="18">'\1'<pos:position pos:line="60" pos:column="22"/></literal></expr>:<pos:position pos:line="60" pos:column="23"/></case>
                <expr_stmt><expr><name pos:line="61" pos:column="17">to_stdout<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <literal type="number" pos:line="61" pos:column="29">0<pos:position pos:line="61" pos:column="30"/></literal></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="62" pos:column="17">Ping<pos:position pos:line="62" pos:column="21"/></name><operator pos:line="62" pos:column="21">::<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="23">Config<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">.<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="30">parseCommandOpts<pos:position pos:line="62" pos:column="46"/></name></name><argument_list pos:line="62" pos:column="46">(<argument><expr><name pos:line="62" pos:column="47">argc<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">argv<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="59">c<pos:position pos:line="62" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="62">optIndex<pos:position pos:line="62" pos:column="70"/></name></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt>
                <continue pos:line="63" pos:column="17">continue;<pos:position pos:line="63" pos:column="26"/></continue>

            <case pos:line="65" pos:column="13">case <expr><literal type="char" pos:line="65" pos:column="18">'h'<pos:position pos:line="65" pos:column="21"/></literal></expr>:<pos:position pos:line="65" pos:column="22"/></case>       <comment type="block" pos:line="65" pos:column="29">/* remote host */</comment>
            <case pos:line="66" pos:column="13">case <expr><literal type="char" pos:line="66" pos:column="18">'l'<pos:position pos:line="66" pos:column="21"/></literal></expr>:<pos:position pos:line="66" pos:column="22"/></case>       <comment type="block" pos:line="66" pos:column="29">/* local host */</comment>
            <case pos:line="67" pos:column="13">case <expr><literal type="char" pos:line="67" pos:column="18">'p'<pos:position pos:line="67" pos:column="21"/></literal></expr>:<pos:position pos:line="67" pos:column="22"/></case>       <comment type="block" pos:line="67" pos:column="29">/* port number */</comment>
                <comment type="line" pos:line="68" pos:column="17">// rewind and let the Transport::Config parser handle</comment>
                <expr_stmt><expr><name pos:line="69" pos:column="17">optind<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">-=<pos:position pos:line="69" pos:column="26"/></operator> <literal type="number" pos:line="69" pos:column="27">2<pos:position pos:line="69" pos:column="28"/></literal></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>

            <case pos:line="71" pos:column="13">case <expr><literal type="char" pos:line="71" pos:column="18">'\3'<pos:position pos:line="71" pos:column="22"/></literal></expr>:<pos:position pos:line="71" pos:column="23"/></case> <comment type="line" pos:line="71" pos:column="24">// request over a TLS connection</comment>
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">Transport<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">::<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="28">Config<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">.<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="35">parseCommandOpts<pos:position pos:line="72" pos:column="51"/></name></name><argument_list pos:line="72" pos:column="51">(<argument><expr><name pos:line="72" pos:column="52">argc<pos:position pos:line="72" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="58">argv<pos:position pos:line="72" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="64">c<pos:position pos:line="72" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="67">optIndex<pos:position pos:line="72" pos:column="75"/></name></expr></argument>)<pos:position pos:line="72" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="77"/></expr_stmt>
                <continue pos:line="73" pos:column="17">continue;<pos:position pos:line="73" pos:column="26"/></continue>

            <default pos:line="75" pos:column="13">default:<pos:position pos:line="75" pos:column="21"/></default> <comment type="line" pos:line="75" pos:column="22">// fall through to next switch</comment>
                <break pos:line="76" pos:column="17">break;<pos:position pos:line="76" pos:column="23"/></break>
            }<pos:position pos:line="77" pos:column="14"/></block></switch>

            <switch pos:line="79" pos:column="13">switch <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">c<pos:position pos:line="79" pos:column="22"/></name></expr>)<pos:position pos:line="79" pos:column="23"/></condition> <block pos:line="79" pos:column="24">{

            <case pos:line="81" pos:column="13">case <expr><literal type="char" pos:line="81" pos:column="18">'\0'<pos:position pos:line="81" pos:column="22"/></literal></expr>:<pos:position pos:line="81" pos:column="23"/></case> <comment type="line" pos:line="81" pos:column="24">// dummy value for end-of-options</comment>
                <break pos:line="82" pos:column="17">break;<pos:position pos:line="82" pos:column="23"/></break>

            <case pos:line="84" pos:column="13">case <expr><literal type="char" pos:line="84" pos:column="18">'a'<pos:position pos:line="84" pos:column="21"/></literal></expr>:<pos:position pos:line="84" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="85" pos:column="17">opt_noaccept<pos:position pos:line="85" pos:column="29"/></name> <operator pos:line="85" pos:column="30">=<pos:position pos:line="85" pos:column="31"/></operator> <literal type="number" pos:line="85" pos:column="32">1<pos:position pos:line="85" pos:column="33"/></literal></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>
                <break pos:line="86" pos:column="17">break;<pos:position pos:line="86" pos:column="23"/></break>

            <case pos:line="88" pos:column="13">case <expr><literal type="char" pos:line="88" pos:column="18">'A'<pos:position pos:line="88" pos:column="21"/></literal></expr>:<pos:position pos:line="88" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="89" pos:column="17">useragent<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">=<pos:position pos:line="89" pos:column="28"/></operator> <name pos:line="89" pos:column="29">optarg<pos:position pos:line="89" pos:column="35"/></name></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt>
                <break pos:line="90" pos:column="17">break;<pos:position pos:line="90" pos:column="23"/></break>

            <case pos:line="92" pos:column="13">case <expr><literal type="char" pos:line="92" pos:column="18">'j'<pos:position pos:line="92" pos:column="21"/></literal></expr>:<pos:position pos:line="92" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="93" pos:column="17">host<pos:position pos:line="93" pos:column="21"/></name> <operator pos:line="93" pos:column="22">=<pos:position pos:line="93" pos:column="23"/></operator> <name pos:line="93" pos:column="24">optarg<pos:position pos:line="93" pos:column="30"/></name></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
                <break pos:line="94" pos:column="17">break;<pos:position pos:line="94" pos:column="23"/></break>

            <case pos:line="96" pos:column="13">case <expr><literal type="char" pos:line="96" pos:column="18">'V'<pos:position pos:line="96" pos:column="21"/></literal></expr>:<pos:position pos:line="96" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="97" pos:column="17">version<pos:position pos:line="97" pos:column="24"/></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <name pos:line="97" pos:column="27">optarg<pos:position pos:line="97" pos:column="33"/></name></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>
                <break pos:line="98" pos:column="17">break;<pos:position pos:line="98" pos:column="23"/></break>

            <case pos:line="100" pos:column="13">case <expr><literal type="char" pos:line="100" pos:column="18">'s'<pos:position pos:line="100" pos:column="21"/></literal></expr>:<pos:position pos:line="100" pos:column="22"/></case>       <comment type="block" pos:line="100" pos:column="29">/* silent */</comment>
                <expr_stmt><expr><name pos:line="101" pos:column="17">to_stdout<pos:position pos:line="101" pos:column="26"/></name> <operator pos:line="101" pos:column="27">=<pos:position pos:line="101" pos:column="28"/></operator> <literal type="boolean" pos:line="101" pos:column="29">false<pos:position pos:line="101" pos:column="34"/></literal></expr>;<pos:position pos:line="101" pos:column="35"/></expr_stmt>
                <break pos:line="102" pos:column="17">break;<pos:position pos:line="102" pos:column="23"/></break>

            <case pos:line="104" pos:column="13">case <expr><literal type="char" pos:line="104" pos:column="18">'k'<pos:position pos:line="104" pos:column="21"/></literal></expr>:<pos:position pos:line="104" pos:column="22"/></case>       <comment type="block" pos:line="104" pos:column="29">/* backward compat */</comment>
                <expr_stmt><expr><name pos:line="105" pos:column="17">keep_alive<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">=<pos:position pos:line="105" pos:column="29"/></operator> <literal type="number" pos:line="105" pos:column="30">1<pos:position pos:line="105" pos:column="31"/></literal></expr>;<pos:position pos:line="105" pos:column="32"/></expr_stmt>
                <break pos:line="106" pos:column="17">break;<pos:position pos:line="106" pos:column="23"/></break>

            <case pos:line="108" pos:column="13">case <expr><literal type="char" pos:line="108" pos:column="18">'r'<pos:position pos:line="108" pos:column="21"/></literal></expr>:<pos:position pos:line="108" pos:column="22"/></case>       <comment type="block" pos:line="108" pos:column="29">/* reload */</comment>
                <expr_stmt><expr><name pos:line="109" pos:column="17">reload<pos:position pos:line="109" pos:column="23"/></name> <operator pos:line="109" pos:column="24">=<pos:position pos:line="109" pos:column="25"/></operator> <literal type="boolean" pos:line="109" pos:column="26">true<pos:position pos:line="109" pos:column="30"/></literal></expr>;<pos:position pos:line="109" pos:column="31"/></expr_stmt>
                <break pos:line="110" pos:column="17">break;<pos:position pos:line="110" pos:column="23"/></break>

            <case pos:line="112" pos:column="13">case <expr><literal type="char" pos:line="112" pos:column="18">'P'<pos:position pos:line="112" pos:column="21"/></literal></expr>:<pos:position pos:line="112" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="113" pos:column="17">put_file<pos:position pos:line="113" pos:column="25"/></name> <operator pos:line="113" pos:column="26">=<pos:position pos:line="113" pos:column="27"/></operator> <call><name pos:line="113" pos:column="28">xstrdup<pos:position pos:line="113" pos:column="35"/></name><argument_list pos:line="113" pos:column="35">(<argument><expr><name pos:line="113" pos:column="36">optarg<pos:position pos:line="113" pos:column="42"/></name></expr></argument>)<pos:position pos:line="113" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="44"/></expr_stmt>
                <break pos:line="114" pos:column="17">break;<pos:position pos:line="114" pos:column="23"/></break>

            <case pos:line="116" pos:column="13">case <expr><literal type="char" pos:line="116" pos:column="18">'i'<pos:position pos:line="116" pos:column="21"/></literal></expr>:<pos:position pos:line="116" pos:column="22"/></case>       <comment type="block" pos:line="116" pos:column="29">/* IMS */</comment>
                <expr_stmt><expr><name pos:line="117" pos:column="17">ims<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">=<pos:position pos:line="117" pos:column="22"/></operator> <operator pos:line="117" pos:column="23">(<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="24">time_t<pos:position pos:line="117" pos:column="30"/></name><operator pos:line="117" pos:column="30">)<pos:position pos:line="117" pos:column="31"/></operator> <call><name pos:line="117" pos:column="32">atoi<pos:position pos:line="117" pos:column="36"/></name><argument_list pos:line="117" pos:column="36">(<argument><expr><name pos:line="117" pos:column="37">optarg<pos:position pos:line="117" pos:column="43"/></name></expr></argument>)<pos:position pos:line="117" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="45"/></expr_stmt>
                <break pos:line="118" pos:column="17">break;<pos:position pos:line="118" pos:column="23"/></break>

            <case pos:line="120" pos:column="13">case <expr><literal type="char" pos:line="120" pos:column="18">'m'<pos:position pos:line="120" pos:column="21"/></literal></expr>:<pos:position pos:line="120" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="121" pos:column="17">method<pos:position pos:line="121" pos:column="23"/></name> <operator pos:line="121" pos:column="24">=<pos:position pos:line="121" pos:column="25"/></operator> <call><name pos:line="121" pos:column="26">xstrdup<pos:position pos:line="121" pos:column="33"/></name><argument_list pos:line="121" pos:column="33">(<argument><expr><name pos:line="121" pos:column="34">optarg<pos:position pos:line="121" pos:column="40"/></name></expr></argument>)<pos:position pos:line="121" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="42"/></expr_stmt>
                <break pos:line="122" pos:column="17">break;<pos:position pos:line="122" pos:column="23"/></break>

            <case pos:line="124" pos:column="13">case <expr><literal type="char" pos:line="124" pos:column="18">'t'<pos:position pos:line="124" pos:column="21"/></literal></expr>:<pos:position pos:line="124" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="125" pos:column="17">method<pos:position pos:line="125" pos:column="23"/></name> <operator pos:line="125" pos:column="24">=<pos:position pos:line="125" pos:column="25"/></operator> <call><name pos:line="125" pos:column="26">xstrdup<pos:position pos:line="125" pos:column="33"/></name><argument_list pos:line="125" pos:column="33">(<argument><expr><literal type="string" pos:line="125" pos:column="34">"TRACE"<pos:position pos:line="125" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name pos:line="126" pos:column="17">max_forwards<pos:position pos:line="126" pos:column="29"/></name> <operator pos:line="126" pos:column="30">=<pos:position pos:line="126" pos:column="31"/></operator> <call><name pos:line="126" pos:column="32">atoi<pos:position pos:line="126" pos:column="36"/></name><argument_list pos:line="126" pos:column="36">(<argument><expr><name pos:line="126" pos:column="37">optarg<pos:position pos:line="126" pos:column="43"/></name></expr></argument>)<pos:position pos:line="126" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="45"/></expr_stmt>
                <break pos:line="127" pos:column="17">break;<pos:position pos:line="127" pos:column="23"/></break>

            <case pos:line="129" pos:column="13">case <expr><literal type="char" pos:line="129" pos:column="18">'H'<pos:position pos:line="129" pos:column="21"/></literal></expr>:<pos:position pos:line="129" pos:column="22"/></case>
                <if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><call><name pos:line="130" pos:column="21">strlen<pos:position pos:line="130" pos:column="27"/></name><argument_list pos:line="130" pos:column="27">(<argument><expr><name pos:line="130" pos:column="28">optarg<pos:position pos:line="130" pos:column="34"/></name></expr></argument>)<pos:position pos:line="130" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="36"/></condition><then pos:line="130" pos:column="36"> <block pos:line="130" pos:column="37">{
                    <decl_stmt><decl><type><name pos:line="131" pos:column="21">char<pos:position pos:line="131" pos:column="25"/></name> <modifier pos:line="131" pos:column="26">*<pos:position pos:line="131" pos:column="27"/></modifier></type><name pos:line="131" pos:column="27">t<pos:position pos:line="131" pos:column="28"/></name></decl>;<pos:position pos:line="131" pos:column="29"/></decl_stmt>
                    <expr_stmt><expr><call><name pos:line="132" pos:column="21">strncpy<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><name pos:line="132" pos:column="29">extra_hdrs<pos:position pos:line="132" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="41">optarg<pos:position pos:line="132" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="132" pos:column="49">sizeof<argument_list pos:line="132" pos:column="55">(<argument><expr><name pos:line="132" pos:column="56">extra_hdrs<pos:position pos:line="132" pos:column="66"/></name></expr></argument>)<pos:position pos:line="132" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="132" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="69"/></expr_stmt>
                    <while pos:line="133" pos:column="21">while <condition pos:line="133" pos:column="27">(<expr><operator pos:line="133" pos:column="28">(<pos:position pos:line="133" pos:column="29"/></operator><name pos:line="133" pos:column="29">t<pos:position pos:line="133" pos:column="30"/></name> <operator pos:line="133" pos:column="31">=<pos:position pos:line="133" pos:column="32"/></operator> <call><name pos:line="133" pos:column="33">strstr<pos:position pos:line="133" pos:column="39"/></name><argument_list pos:line="133" pos:column="39">(<argument><expr><name pos:line="133" pos:column="40">extra_hdrs<pos:position pos:line="133" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="52">"\\n"<pos:position pos:line="133" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="58"/></argument_list></call><operator pos:line="133" pos:column="58">)<pos:position pos:line="133" pos:column="59"/></operator></expr>)<pos:position pos:line="133" pos:column="60"/></condition>
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="134" pos:column="25">*<pos:position pos:line="134" pos:column="26"/></operator><name pos:line="134" pos:column="26">t<pos:position pos:line="134" pos:column="27"/></name> <operator pos:line="134" pos:column="28">=<pos:position pos:line="134" pos:column="29"/></operator> <literal type="char" pos:line="134" pos:column="30">'\r'<pos:position pos:line="134" pos:column="34"/></literal></expr><operator pos:line="134" pos:column="34">,<pos:position pos:line="134" pos:column="35"/></operator> <expr><operator pos:line="134" pos:column="36">*<pos:position pos:line="134" pos:column="37"/></operator><operator pos:line="134" pos:column="37">(<pos:position pos:line="134" pos:column="38"/></operator><name pos:line="134" pos:column="38">t<pos:position pos:line="134" pos:column="39"/></name> <operator pos:line="134" pos:column="40">+<pos:position pos:line="134" pos:column="41"/></operator> <literal type="number" pos:line="134" pos:column="42">1<pos:position pos:line="134" pos:column="43"/></literal><operator pos:line="134" pos:column="43">)<pos:position pos:line="134" pos:column="44"/></operator> <operator pos:line="134" pos:column="45">=<pos:position pos:line="134" pos:column="46"/></operator> <literal type="char" pos:line="134" pos:column="47">'\n'<pos:position pos:line="134" pos:column="51"/></literal></expr>;<pos:position pos:line="134" pos:column="52"/></expr_stmt></block></while>
                }<pos:position pos:line="135" pos:column="18"/></block></then></if>
                <break pos:line="136" pos:column="17">break;<pos:position pos:line="136" pos:column="23"/></break>

            <case pos:line="138" pos:column="13">case <expr><literal type="char" pos:line="138" pos:column="18">'T'<pos:position pos:line="138" pos:column="21"/></literal></expr>:<pos:position pos:line="138" pos:column="22"/></case>
                <expr_stmt><expr><name><name pos:line="139" pos:column="17">Transport<pos:position pos:line="139" pos:column="26"/></name><operator pos:line="139" pos:column="26">::<pos:position pos:line="139" pos:column="28"/></operator><name pos:line="139" pos:column="28">Config<pos:position pos:line="139" pos:column="34"/></name><operator pos:line="139" pos:column="34">.<pos:position pos:line="139" pos:column="35"/></operator><name pos:line="139" pos:column="35">ioTimeout<pos:position pos:line="139" pos:column="44"/></name></name> <operator pos:line="139" pos:column="45">=<pos:position pos:line="139" pos:column="46"/></operator> <call><name pos:line="139" pos:column="47">atoi<pos:position pos:line="139" pos:column="51"/></name><argument_list pos:line="139" pos:column="51">(<argument><expr><name pos:line="139" pos:column="52">optarg<pos:position pos:line="139" pos:column="58"/></name></expr></argument>)<pos:position pos:line="139" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="60"/></expr_stmt>
                <break pos:line="140" pos:column="17">break;<pos:position pos:line="140" pos:column="23"/></break>

            <case pos:line="142" pos:column="13">case <expr><literal type="char" pos:line="142" pos:column="18">'u'<pos:position pos:line="142" pos:column="21"/></literal></expr>:<pos:position pos:line="142" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="143" pos:column="17">proxy_user<pos:position pos:line="143" pos:column="27"/></name> <operator pos:line="143" pos:column="28">=<pos:position pos:line="143" pos:column="29"/></operator> <name pos:line="143" pos:column="30">optarg<pos:position pos:line="143" pos:column="36"/></name></expr>;<pos:position pos:line="143" pos:column="37"/></expr_stmt>
                <break pos:line="144" pos:column="17">break;<pos:position pos:line="144" pos:column="23"/></break>

            <case pos:line="146" pos:column="13">case <expr><literal type="char" pos:line="146" pos:column="18">'w'<pos:position pos:line="146" pos:column="21"/></literal></expr>:<pos:position pos:line="146" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="147" pos:column="17">proxy_password<pos:position pos:line="147" pos:column="31"/></name> <operator pos:line="147" pos:column="32">=<pos:position pos:line="147" pos:column="33"/></operator> <name pos:line="147" pos:column="34">optarg<pos:position pos:line="147" pos:column="40"/></name></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>
                <break pos:line="148" pos:column="17">break;<pos:position pos:line="148" pos:column="23"/></break>

            <case pos:line="150" pos:column="13">case <expr><literal type="char" pos:line="150" pos:column="18">'U'<pos:position pos:line="150" pos:column="21"/></literal></expr>:<pos:position pos:line="150" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="151" pos:column="17">www_user<pos:position pos:line="151" pos:column="25"/></name> <operator pos:line="151" pos:column="26">=<pos:position pos:line="151" pos:column="27"/></operator> <name pos:line="151" pos:column="28">optarg<pos:position pos:line="151" pos:column="34"/></name></expr>;<pos:position pos:line="151" pos:column="35"/></expr_stmt>
                <break pos:line="152" pos:column="17">break;<pos:position pos:line="152" pos:column="23"/></break>

            <case pos:line="154" pos:column="13">case <expr><literal type="char" pos:line="154" pos:column="18">'W'<pos:position pos:line="154" pos:column="21"/></literal></expr>:<pos:position pos:line="154" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="155" pos:column="17">www_password<pos:position pos:line="155" pos:column="29"/></name> <operator pos:line="155" pos:column="30">=<pos:position pos:line="155" pos:column="31"/></operator> <name pos:line="155" pos:column="32">optarg<pos:position pos:line="155" pos:column="38"/></name></expr>;<pos:position pos:line="155" pos:column="39"/></expr_stmt>
                <break pos:line="156" pos:column="17">break;<pos:position pos:line="156" pos:column="23"/></break>

            <case pos:line="158" pos:column="13">case <expr><literal type="char" pos:line="158" pos:column="18">'n'<pos:position pos:line="158" pos:column="21"/></literal></expr>:<pos:position pos:line="158" pos:column="22"/></case>
<cpp:if pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">if<pos:position pos:line="159" pos:column="4"/></cpp:directive> <expr><name pos:line="159" pos:column="5">HAVE_GSSAPI<pos:position pos:line="159" pos:column="16"/></name></expr></cpp:if>
                <expr_stmt><expr><name pos:line="160" pos:column="17">proxy_neg<pos:position pos:line="160" pos:column="26"/></name> <operator pos:line="160" pos:column="27">=<pos:position pos:line="160" pos:column="28"/></operator> <literal type="number" pos:line="160" pos:column="29">1<pos:position pos:line="160" pos:column="30"/></literal></expr>;<pos:position pos:line="160" pos:column="31"/></expr_stmt>
<cpp:else pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">else<pos:position pos:line="161" pos:column="6"/></cpp:directive></cpp:else>
                <expr_stmt><expr><name><name pos:line="162" pos:column="17">std<pos:position pos:line="162" pos:column="20"/></name><operator pos:line="162" pos:column="20">::<pos:position pos:line="162" pos:column="22"/></operator><name pos:line="162" pos:column="22">cerr<pos:position pos:line="162" pos:column="26"/></name></name> <operator pos:line="162" pos:column="27">&lt;&lt;<pos:position pos:line="162" pos:column="35"/></operator> <literal type="string" pos:line="162" pos:column="30">"ERROR: Negotiate authentication not supported."<pos:position pos:line="162" pos:column="78"/></literal> <operator pos:line="162" pos:column="79">&lt;&lt;<pos:position pos:line="162" pos:column="87"/></operator> <name><name pos:line="162" pos:column="82">std<pos:position pos:line="162" pos:column="85"/></name><operator pos:line="162" pos:column="85">::<pos:position pos:line="162" pos:column="87"/></operator><name pos:line="162" pos:column="87">endl<pos:position pos:line="162" pos:column="91"/></name></name></expr>;<pos:position pos:line="162" pos:column="92"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="163" pos:column="17">usage<pos:position pos:line="163" pos:column="22"/></name><argument_list pos:line="163" pos:column="22">(<argument><expr><name><name pos:line="163" pos:column="23">argv<pos:position pos:line="163" pos:column="27"/></name><index pos:line="163" pos:column="27">[<expr><literal type="number" pos:line="163" pos:column="28">0<pos:position pos:line="163" pos:column="29"/></literal></expr>]<pos:position pos:line="163" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="163" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">endif<pos:position pos:line="164" pos:column="7"/></cpp:directive></cpp:endif>
                <break pos:line="165" pos:column="17">break;<pos:position pos:line="165" pos:column="23"/></break>

            <case pos:line="167" pos:column="13">case <expr><literal type="char" pos:line="167" pos:column="18">'N'<pos:position pos:line="167" pos:column="21"/></literal></expr>:<pos:position pos:line="167" pos:column="22"/></case>
<cpp:if pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">if<pos:position pos:line="168" pos:column="4"/></cpp:directive> <expr><name pos:line="168" pos:column="5">HAVE_GSSAPI<pos:position pos:line="168" pos:column="16"/></name></expr></cpp:if>
                <expr_stmt><expr><name pos:line="169" pos:column="17">www_neg<pos:position pos:line="169" pos:column="24"/></name> <operator pos:line="169" pos:column="25">=<pos:position pos:line="169" pos:column="26"/></operator> <literal type="number" pos:line="169" pos:column="27">1<pos:position pos:line="169" pos:column="28"/></literal></expr>;<pos:position pos:line="169" pos:column="29"/></expr_stmt>
<cpp:else pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">else<pos:position pos:line="170" pos:column="6"/></cpp:directive></cpp:else>
                <expr_stmt><expr><name><name pos:line="171" pos:column="17">std<pos:position pos:line="171" pos:column="20"/></name><operator pos:line="171" pos:column="20">::<pos:position pos:line="171" pos:column="22"/></operator><name pos:line="171" pos:column="22">cerr<pos:position pos:line="171" pos:column="26"/></name></name> <operator pos:line="171" pos:column="27">&lt;&lt;<pos:position pos:line="171" pos:column="35"/></operator> <literal type="string" pos:line="171" pos:column="30">"ERROR: Negotiate authentication not supported."<pos:position pos:line="171" pos:column="78"/></literal> <operator pos:line="171" pos:column="79">&lt;&lt;<pos:position pos:line="171" pos:column="87"/></operator> <name><name pos:line="171" pos:column="82">std<pos:position pos:line="171" pos:column="85"/></name><operator pos:line="171" pos:column="85">::<pos:position pos:line="171" pos:column="87"/></operator><name pos:line="171" pos:column="87">endl<pos:position pos:line="171" pos:column="91"/></name></name></expr>;<pos:position pos:line="171" pos:column="92"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="172" pos:column="17">usage<pos:position pos:line="172" pos:column="22"/></name><argument_list pos:line="172" pos:column="22">(<argument><expr><name><name pos:line="172" pos:column="23">argv<pos:position pos:line="172" pos:column="27"/></name><index pos:line="172" pos:column="27">[<expr><literal type="number" pos:line="172" pos:column="28">0<pos:position pos:line="172" pos:column="29"/></literal></expr>]<pos:position pos:line="172" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="172" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="173" pos:column="1">#<cpp:directive pos:line="173" pos:column="2">endif<pos:position pos:line="173" pos:column="7"/></cpp:directive></cpp:endif>
                <break pos:line="174" pos:column="17">break;<pos:position pos:line="174" pos:column="23"/></break>

            <case pos:line="176" pos:column="13">case <expr><literal type="char" pos:line="176" pos:column="18">'v'<pos:position pos:line="176" pos:column="21"/></literal></expr>:<pos:position pos:line="176" pos:column="22"/></case>
                <comment type="block" pos:line="177" pos:column="17">/* undocumented: may increase verb-level by giving more -v's */</comment>
                <expr_stmt><expr><operator pos:line="178" pos:column="17">++<pos:position pos:line="178" pos:column="19"/></operator><name><name pos:line="178" pos:column="19">scParams<pos:position pos:line="178" pos:column="27"/></name><operator pos:line="178" pos:column="27">.<pos:position pos:line="178" pos:column="28"/></operator><name pos:line="178" pos:column="28">verbosityLevel<pos:position pos:line="178" pos:column="42"/></name></name></expr>;<pos:position pos:line="178" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="179" pos:column="17">debugVerbose<pos:position pos:line="179" pos:column="29"/></name><argument_list pos:line="179" pos:column="29">(<argument><expr><literal type="number" pos:line="179" pos:column="30">2<pos:position pos:line="179" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="33">"verbosity level set to "<pos:position pos:line="179" pos:column="58"/></literal> <operator pos:line="179" pos:column="59">&lt;&lt;<pos:position pos:line="179" pos:column="67"/></operator> <name><name pos:line="179" pos:column="62">scParams<pos:position pos:line="179" pos:column="70"/></name><operator pos:line="179" pos:column="70">.<pos:position pos:line="179" pos:column="71"/></operator><name pos:line="179" pos:column="71">verbosityLevel<pos:position pos:line="179" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="87"/></expr_stmt>
                <break pos:line="180" pos:column="17">break;<pos:position pos:line="180" pos:column="23"/></break>

            <case pos:line="182" pos:column="13">case <expr><literal type="char" pos:line="182" pos:column="18">'?'<pos:position pos:line="182" pos:column="21"/></literal></expr>:<pos:position pos:line="182" pos:column="22"/></case>       <comment type="block" pos:line="182" pos:column="29">/* usage */</comment>

            <default pos:line="184" pos:column="13">default:<pos:position pos:line="184" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="185" pos:column="17">usage<pos:position pos:line="185" pos:column="22"/></name><argument_list pos:line="185" pos:column="22">(<argument><expr><name><name pos:line="185" pos:column="23">argv<pos:position pos:line="185" pos:column="27"/></name><index pos:line="185" pos:column="27">[<expr><literal type="number" pos:line="185" pos:column="28">0<pos:position pos:line="185" pos:column="29"/></literal></expr>]<pos:position pos:line="185" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="185" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="32"/></expr_stmt>
                <break pos:line="186" pos:column="17">break;<pos:position pos:line="186" pos:column="23"/></break>
            }<pos:position pos:line="187" pos:column="14"/></block></switch>
        }<pos:position pos:line="188" pos:column="10"/></block></while>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if></elseif></if>
<cpp:if pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">if<pos:position pos:line="190" pos:column="4"/></cpp:directive> <expr><name pos:line="190" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="190" pos:column="20"/></name></expr></cpp:if>
    <block pos:line="191" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="192" pos:column="9">WSADATA<pos:position pos:line="192" pos:column="16"/></name></type> <name pos:line="192" pos:column="17">wsaData<pos:position pos:line="192" pos:column="24"/></name></decl>;<pos:position pos:line="192" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">WSAStartup<pos:position pos:line="193" pos:column="19"/></name><argument_list pos:line="193" pos:column="19">(<argument><expr><literal type="number" pos:line="193" pos:column="20">2<pos:position pos:line="193" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="193" pos:column="23">&amp;<pos:position pos:line="193" pos:column="28"/></operator><name pos:line="193" pos:column="24">wsaData<pos:position pos:line="193" pos:column="31"/></name></expr></argument>)<pos:position pos:line="193" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="194" pos:column="9">atexit<pos:position pos:line="194" pos:column="15"/></name><argument_list pos:line="194" pos:column="15">(<argument><expr><name pos:line="194" pos:column="16">Win32SockCleanup<pos:position pos:line="194" pos:column="32"/></name></expr></argument>)<pos:position pos:line="194" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="195" pos:column="6"/></block>
<cpp:endif pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">endif<pos:position pos:line="196" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="197" pos:column="5">/* Build the HTTP request */</comment>
    <if pos:line="198" pos:column="5">if <condition pos:line="198" pos:column="8">(<expr><call><name pos:line="198" pos:column="9">strncmp<pos:position pos:line="198" pos:column="16"/></name><argument_list pos:line="198" pos:column="16">(<argument><expr><name pos:line="198" pos:column="17">url<pos:position pos:line="198" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="22">"mgr:"<pos:position pos:line="198" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="198" pos:column="30">4<pos:position pos:line="198" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="32"/></argument_list></call> <operator pos:line="198" pos:column="33">==<pos:position pos:line="198" pos:column="35"/></operator> <literal type="number" pos:line="198" pos:column="36">0<pos:position pos:line="198" pos:column="37"/></literal></expr>)<pos:position pos:line="198" pos:column="38"/></condition><then pos:line="198" pos:column="38"> <block pos:line="198" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="199" pos:column="9">char<pos:position pos:line="199" pos:column="13"/></name> <modifier pos:line="199" pos:column="14">*<pos:position pos:line="199" pos:column="15"/></modifier></type><name pos:line="199" pos:column="15">t<pos:position pos:line="199" pos:column="16"/></name> <init pos:line="199" pos:column="17">= <expr><call><name pos:line="199" pos:column="19">xstrdup<pos:position pos:line="199" pos:column="26"/></name><argument_list pos:line="199" pos:column="26">(<argument><expr><name pos:line="199" pos:column="27">url<pos:position pos:line="199" pos:column="30"/></name> <operator pos:line="199" pos:column="31">+<pos:position pos:line="199" pos:column="32"/></operator> <literal type="number" pos:line="199" pos:column="33">4<pos:position pos:line="199" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="199" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="200" pos:column="9">const<pos:position pos:line="200" pos:column="14"/></specifier> <name pos:line="200" pos:column="15">char<pos:position pos:line="200" pos:column="19"/></name> <modifier pos:line="200" pos:column="20">*<pos:position pos:line="200" pos:column="21"/></modifier></type><name pos:line="200" pos:column="21">at<pos:position pos:line="200" pos:column="23"/></name> <init pos:line="200" pos:column="24">= <expr><name pos:line="200" pos:column="26">NULL<pos:position pos:line="200" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="200" pos:column="31"/></decl_stmt>
        <if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><operator pos:line="201" pos:column="13">!<pos:position pos:line="201" pos:column="14"/></operator><call><name pos:line="201" pos:column="14">strrchr<pos:position pos:line="201" pos:column="21"/></name><argument_list pos:line="201" pos:column="21">(<argument><expr><name pos:line="201" pos:column="22">t<pos:position pos:line="201" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="201" pos:column="25">'@'<pos:position pos:line="201" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="30"/></condition><then pos:line="201" pos:column="30"> <block pos:line="201" pos:column="31">{ <comment type="line" pos:line="201" pos:column="33">// ignore any -w password if @ is explicit already.</comment>
            <expr_stmt><expr><name pos:line="202" pos:column="13">at<pos:position pos:line="202" pos:column="15"/></name> <operator pos:line="202" pos:column="16">=<pos:position pos:line="202" pos:column="17"/></operator> <name pos:line="202" pos:column="18">proxy_password<pos:position pos:line="202" pos:column="32"/></name></expr>;<pos:position pos:line="202" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="203" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="204" pos:column="9">// embed the -w proxy password into old-style cachemgr URLs</comment>
        <if pos:line="205" pos:column="9">if <condition pos:line="205" pos:column="12">(<expr><name pos:line="205" pos:column="13">at<pos:position pos:line="205" pos:column="15"/></name></expr>)<pos:position pos:line="205" pos:column="16"/></condition><then pos:line="205" pos:column="16">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="206" pos:column="13">snprintf<pos:position pos:line="206" pos:column="21"/></name><argument_list pos:line="206" pos:column="21">(<argument><expr><name pos:line="206" pos:column="22">url<pos:position pos:line="206" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="27">BUFSIZ<pos:position pos:line="206" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="35">"cache_object://%s/%s@%s"<pos:position pos:line="206" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="62">Transport<pos:position pos:line="206" pos:column="71"/></name><operator pos:line="206" pos:column="71">::<pos:position pos:line="206" pos:column="73"/></operator><name pos:line="206" pos:column="73">Config<pos:position pos:line="206" pos:column="79"/></name><operator pos:line="206" pos:column="79">.<pos:position pos:line="206" pos:column="80"/></operator><name pos:line="206" pos:column="80">hostname<pos:position pos:line="206" pos:column="88"/></name></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="90">t<pos:position pos:line="206" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="93">at<pos:position pos:line="206" pos:column="95"/></name></expr></argument>)<pos:position pos:line="206" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="97"/></expr_stmt></block></then>
        <else pos:line="207" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="208" pos:column="13">snprintf<pos:position pos:line="208" pos:column="21"/></name><argument_list pos:line="208" pos:column="21">(<argument><expr><name pos:line="208" pos:column="22">url<pos:position pos:line="208" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="27">BUFSIZ<pos:position pos:line="208" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="35">"cache_object://%s/%s"<pos:position pos:line="208" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="59">Transport<pos:position pos:line="208" pos:column="68"/></name><operator pos:line="208" pos:column="68">::<pos:position pos:line="208" pos:column="70"/></operator><name pos:line="208" pos:column="70">Config<pos:position pos:line="208" pos:column="76"/></name><operator pos:line="208" pos:column="76">.<pos:position pos:line="208" pos:column="77"/></operator><name pos:line="208" pos:column="77">hostname<pos:position pos:line="208" pos:column="85"/></name></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="87">t<pos:position pos:line="208" pos:column="88"/></name></expr></argument>)<pos:position pos:line="208" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="90"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">xfree<pos:position pos:line="209" pos:column="14"/></name><argument_list pos:line="209" pos:column="14">(<argument><expr><name pos:line="209" pos:column="15">t<pos:position pos:line="209" pos:column="16"/></name></expr></argument>)<pos:position pos:line="209" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>
    <if pos:line="211" pos:column="5">if <condition pos:line="211" pos:column="8">(<expr><name pos:line="211" pos:column="9">put_file<pos:position pos:line="211" pos:column="17"/></name></expr>)<pos:position pos:line="211" pos:column="18"/></condition><then pos:line="211" pos:column="18"> <block pos:line="211" pos:column="19">{
        <expr_stmt><expr><name pos:line="212" pos:column="9">put_fd<pos:position pos:line="212" pos:column="15"/></name> <operator pos:line="212" pos:column="16">=<pos:position pos:line="212" pos:column="17"/></operator> <call><name pos:line="212" pos:column="18">open<pos:position pos:line="212" pos:column="22"/></name><argument_list pos:line="212" pos:column="22">(<argument><expr><name pos:line="212" pos:column="23">put_file<pos:position pos:line="212" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="33">O_RDONLY<pos:position pos:line="212" pos:column="41"/></name></expr></argument>)<pos:position pos:line="212" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="213" pos:column="9">set_our_signal<pos:position pos:line="213" pos:column="23"/></name><argument_list pos:line="213" pos:column="23">()<pos:position pos:line="213" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="26"/></expr_stmt>

        <if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><name pos:line="215" pos:column="13">put_fd<pos:position pos:line="215" pos:column="19"/></name> <operator pos:line="215" pos:column="20">&lt;<pos:position pos:line="215" pos:column="24"/></operator> <literal type="number" pos:line="215" pos:column="22">0<pos:position pos:line="215" pos:column="23"/></literal></expr>)<pos:position pos:line="215" pos:column="24"/></condition><then pos:line="215" pos:column="24"> <block pos:line="215" pos:column="25">{
            <expr_stmt><expr><name><name pos:line="216" pos:column="13">std<pos:position pos:line="216" pos:column="16"/></name><operator pos:line="216" pos:column="16">::<pos:position pos:line="216" pos:column="18"/></operator><name pos:line="216" pos:column="18">cerr<pos:position pos:line="216" pos:column="22"/></name></name> <operator pos:line="216" pos:column="23">&lt;&lt;<pos:position pos:line="216" pos:column="31"/></operator> <literal type="string" pos:line="216" pos:column="26">"ERROR: can't open file ("<pos:position pos:line="216" pos:column="52"/></literal> <operator pos:line="216" pos:column="53">&lt;&lt;<pos:position pos:line="216" pos:column="61"/></operator> <call><name pos:line="216" pos:column="56">xstrerror<pos:position pos:line="216" pos:column="65"/></name><argument_list pos:line="216" pos:column="65">()<pos:position pos:line="216" pos:column="67"/></argument_list></call> <operator pos:line="216" pos:column="68">&lt;&lt;<pos:position pos:line="216" pos:column="76"/></operator> <literal type="string" pos:line="216" pos:column="71">")"<pos:position pos:line="216" pos:column="74"/></literal> <operator pos:line="216" pos:column="75">&lt;&lt;<pos:position pos:line="216" pos:column="83"/></operator> <name><name pos:line="216" pos:column="78">std<pos:position pos:line="216" pos:column="81"/></name><operator pos:line="216" pos:column="81">::<pos:position pos:line="216" pos:column="83"/></operator><name pos:line="216" pos:column="83">endl<pos:position pos:line="216" pos:column="87"/></name></name></expr>;<pos:position pos:line="216" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="217" pos:column="13">exit<pos:position pos:line="217" pos:column="17"/></name><argument_list pos:line="217" pos:column="17">(<argument><expr><operator pos:line="217" pos:column="18">-<pos:position pos:line="217" pos:column="19"/></operator><literal type="number" pos:line="217" pos:column="19">1<pos:position pos:line="217" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="218" pos:column="10"/></block></then></if>
<cpp:if pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">if<pos:position pos:line="219" pos:column="4"/></cpp:directive> <expr><name pos:line="219" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="219" pos:column="20"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="220" pos:column="9">setmode<pos:position pos:line="220" pos:column="16"/></name><argument_list pos:line="220" pos:column="16">(<argument><expr><name pos:line="220" pos:column="17">put_fd<pos:position pos:line="220" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="25">O_BINARY<pos:position pos:line="220" pos:column="33"/></name></expr></argument>)<pos:position pos:line="220" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="221" pos:column="1">#<cpp:directive pos:line="221" pos:column="2">endif<pos:position pos:line="221" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><call><name pos:line="223" pos:column="13">fstat<pos:position pos:line="223" pos:column="18"/></name><argument_list pos:line="223" pos:column="18">(<argument><expr><name pos:line="223" pos:column="19">put_fd<pos:position pos:line="223" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="223" pos:column="27">&amp;<pos:position pos:line="223" pos:column="32"/></operator><name pos:line="223" pos:column="28">sb<pos:position pos:line="223" pos:column="30"/></name></expr></argument>)<pos:position pos:line="223" pos:column="31"/></argument_list></call> <operator pos:line="223" pos:column="32">&lt;<pos:position pos:line="223" pos:column="36"/></operator> <literal type="number" pos:line="223" pos:column="34">0<pos:position pos:line="223" pos:column="35"/></literal></expr>)<pos:position pos:line="223" pos:column="36"/></condition><then pos:line="223" pos:column="36"> <block pos:line="223" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="224" pos:column="13">std<pos:position pos:line="224" pos:column="16"/></name><operator pos:line="224" pos:column="16">::<pos:position pos:line="224" pos:column="18"/></operator><name pos:line="224" pos:column="18">cerr<pos:position pos:line="224" pos:column="22"/></name></name> <operator pos:line="224" pos:column="23">&lt;&lt;<pos:position pos:line="224" pos:column="31"/></operator> <literal type="string" pos:line="224" pos:column="26">"ERROR: can't identify length of file ("<pos:position pos:line="224" pos:column="66"/></literal> <operator pos:line="224" pos:column="67">&lt;&lt;<pos:position pos:line="224" pos:column="75"/></operator> <call><name pos:line="224" pos:column="70">xstrerror<pos:position pos:line="224" pos:column="79"/></name><argument_list pos:line="224" pos:column="79">()<pos:position pos:line="224" pos:column="81"/></argument_list></call> <operator pos:line="224" pos:column="82">&lt;&lt;<pos:position pos:line="224" pos:column="90"/></operator> <literal type="string" pos:line="224" pos:column="85">")"<pos:position pos:line="224" pos:column="88"/></literal> <operator pos:line="224" pos:column="89">&lt;&lt;<pos:position pos:line="224" pos:column="97"/></operator> <name><name pos:line="224" pos:column="92">std<pos:position pos:line="224" pos:column="95"/></name><operator pos:line="224" pos:column="95">::<pos:position pos:line="224" pos:column="97"/></operator><name pos:line="224" pos:column="97">endl<pos:position pos:line="224" pos:column="101"/></name></name></expr>;<pos:position pos:line="224" pos:column="102"/></expr_stmt>
        }<pos:position pos:line="225" pos:column="10"/></block></then></if>
    }<pos:position pos:line="226" pos:column="6"/></block></then></if>

    <if pos:line="228" pos:column="5">if <condition pos:line="228" pos:column="8">(<expr><operator pos:line="228" pos:column="9">!<pos:position pos:line="228" pos:column="10"/></operator><name pos:line="228" pos:column="10">host<pos:position pos:line="228" pos:column="14"/></name></expr>)<pos:position pos:line="228" pos:column="15"/></condition><then pos:line="228" pos:column="15"> <block pos:line="228" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="229" pos:column="9">char<pos:position pos:line="229" pos:column="13"/></name> <modifier pos:line="229" pos:column="14">*<pos:position pos:line="229" pos:column="15"/></modifier></type><name pos:line="229" pos:column="15">newhost<pos:position pos:line="229" pos:column="22"/></name> <init pos:line="229" pos:column="23">= <expr><call><name pos:line="229" pos:column="25">strstr<pos:position pos:line="229" pos:column="31"/></name><argument_list pos:line="229" pos:column="31">(<argument><expr><name pos:line="229" pos:column="32">url<pos:position pos:line="229" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="37">"://"<pos:position pos:line="229" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="229" pos:column="44"/></decl_stmt>
        <if pos:line="230" pos:column="9">if <condition pos:line="230" pos:column="12">(<expr><name pos:line="230" pos:column="13">newhost<pos:position pos:line="230" pos:column="20"/></name></expr>)<pos:position pos:line="230" pos:column="21"/></condition><then pos:line="230" pos:column="21"> <block pos:line="230" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="231" pos:column="13">char<pos:position pos:line="231" pos:column="17"/></name> <modifier pos:line="231" pos:column="18">*<pos:position pos:line="231" pos:column="19"/></modifier></type><name pos:line="231" pos:column="19">t<pos:position pos:line="231" pos:column="20"/></name></decl>;<pos:position pos:line="231" pos:column="21"/></decl_stmt>
            <expr_stmt><expr><name pos:line="232" pos:column="13">newhost<pos:position pos:line="232" pos:column="20"/></name> <operator pos:line="232" pos:column="21">+=<pos:position pos:line="232" pos:column="23"/></operator> <literal type="number" pos:line="232" pos:column="24">3<pos:position pos:line="232" pos:column="25"/></literal></expr>;<pos:position pos:line="232" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="233" pos:column="13">newhost<pos:position pos:line="233" pos:column="20"/></name> <operator pos:line="233" pos:column="21">=<pos:position pos:line="233" pos:column="22"/></operator> <call><name pos:line="233" pos:column="23">xstrdup<pos:position pos:line="233" pos:column="30"/></name><argument_list pos:line="233" pos:column="30">(<argument><expr><name pos:line="233" pos:column="31">newhost<pos:position pos:line="233" pos:column="38"/></name></expr></argument>)<pos:position pos:line="233" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="234" pos:column="13">t<pos:position pos:line="234" pos:column="14"/></name> <operator pos:line="234" pos:column="15">=<pos:position pos:line="234" pos:column="16"/></operator> <name pos:line="234" pos:column="17">newhost<pos:position pos:line="234" pos:column="24"/></name> <operator pos:line="234" pos:column="25">+<pos:position pos:line="234" pos:column="26"/></operator> <call><name pos:line="234" pos:column="27">strcspn<pos:position pos:line="234" pos:column="34"/></name><argument_list pos:line="234" pos:column="34">(<argument><expr><name pos:line="234" pos:column="35">newhost<pos:position pos:line="234" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="44">"@/?"<pos:position pos:line="234" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="51"/></expr_stmt>
            <if pos:line="235" pos:column="13">if <condition pos:line="235" pos:column="16">(<expr><operator pos:line="235" pos:column="17">*<pos:position pos:line="235" pos:column="18"/></operator><name pos:line="235" pos:column="18">t<pos:position pos:line="235" pos:column="19"/></name> <operator pos:line="235" pos:column="20">==<pos:position pos:line="235" pos:column="22"/></operator> <literal type="char" pos:line="235" pos:column="23">'@'<pos:position pos:line="235" pos:column="26"/></literal></expr>)<pos:position pos:line="235" pos:column="27"/></condition><then pos:line="235" pos:column="27"> <block pos:line="235" pos:column="28">{
                <expr_stmt><expr><name pos:line="236" pos:column="17">newhost<pos:position pos:line="236" pos:column="24"/></name> <operator pos:line="236" pos:column="25">=<pos:position pos:line="236" pos:column="26"/></operator> <name pos:line="236" pos:column="27">t<pos:position pos:line="236" pos:column="28"/></name> <operator pos:line="236" pos:column="29">+<pos:position pos:line="236" pos:column="30"/></operator> <literal type="number" pos:line="236" pos:column="31">1<pos:position pos:line="236" pos:column="32"/></literal></expr>;<pos:position pos:line="236" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="237" pos:column="17">t<pos:position pos:line="237" pos:column="18"/></name> <operator pos:line="237" pos:column="19">=<pos:position pos:line="237" pos:column="20"/></operator> <name pos:line="237" pos:column="21">newhost<pos:position pos:line="237" pos:column="28"/></name> <operator pos:line="237" pos:column="29">+<pos:position pos:line="237" pos:column="30"/></operator> <call><name pos:line="237" pos:column="31">strcspn<pos:position pos:line="237" pos:column="38"/></name><argument_list pos:line="237" pos:column="38">(<argument><expr><name pos:line="237" pos:column="39">newhost<pos:position pos:line="237" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="48">"@/?"<pos:position pos:line="237" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="238" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="239" pos:column="13">*<pos:position pos:line="239" pos:column="14"/></operator><name pos:line="239" pos:column="14">t<pos:position pos:line="239" pos:column="15"/></name> <operator pos:line="239" pos:column="16">=<pos:position pos:line="239" pos:column="17"/></operator> <literal type="char" pos:line="239" pos:column="18">'\0'<pos:position pos:line="239" pos:column="22"/></literal></expr>;<pos:position pos:line="239" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="240" pos:column="13">host<pos:position pos:line="240" pos:column="17"/></name> <operator pos:line="240" pos:column="18">=<pos:position pos:line="240" pos:column="19"/></operator> <name pos:line="240" pos:column="20">newhost<pos:position pos:line="240" pos:column="27"/></name></expr>;<pos:position pos:line="240" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="241" pos:column="10"/></block></then></if>
    }<pos:position pos:line="242" pos:column="6"/></block></then></if>

    <if pos:line="244" pos:column="5">if <condition pos:line="244" pos:column="8">(<expr><name><name pos:line="244" pos:column="9">version<pos:position pos:line="244" pos:column="16"/></name><index pos:line="244" pos:column="16">[<expr><literal type="number" pos:line="244" pos:column="17">0<pos:position pos:line="244" pos:column="18"/></literal></expr>]<pos:position pos:line="244" pos:column="19"/></index></name> <operator pos:line="244" pos:column="20">==<pos:position pos:line="244" pos:column="22"/></operator> <literal type="char" pos:line="244" pos:column="23">'-'<pos:position pos:line="244" pos:column="26"/></literal> <operator pos:line="244" pos:column="27">||<pos:position pos:line="244" pos:column="29"/></operator> <operator pos:line="244" pos:column="30">!<pos:position pos:line="244" pos:column="31"/></operator><name><name pos:line="244" pos:column="31">version<pos:position pos:line="244" pos:column="38"/></name><index pos:line="244" pos:column="38">[<expr><literal type="number" pos:line="244" pos:column="39">0<pos:position pos:line="244" pos:column="40"/></literal></expr>]<pos:position pos:line="244" pos:column="41"/></index></name></expr>)<pos:position pos:line="244" pos:column="42"/></condition><then pos:line="244" pos:column="42"> <block pos:line="244" pos:column="43">{
        <comment type="block" pos:line="245" pos:column="9">/* HTTP/0.9, no headers, no version */</comment>
        <expr_stmt><expr><call><name pos:line="246" pos:column="9">snprintf<pos:position pos:line="246" pos:column="17"/></name><argument_list pos:line="246" pos:column="17">(<argument><expr><name pos:line="246" pos:column="18">msg<pos:position pos:line="246" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="23">BUFSIZ<pos:position pos:line="246" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="31">"%s %s\r\n"<pos:position pos:line="246" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="44">method<pos:position pos:line="246" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="52">url<pos:position pos:line="246" pos:column="55"/></name></expr></argument>)<pos:position pos:line="246" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="247" pos:column="6"/></block></then> <else pos:line="247" pos:column="7">else <block pos:line="247" pos:column="12">{
        <if pos:line="248" pos:column="9">if <condition pos:line="248" pos:column="12">(<expr><operator pos:line="248" pos:column="13">!<pos:position pos:line="248" pos:column="14"/></operator><call><name pos:line="248" pos:column="14">xisdigit<pos:position pos:line="248" pos:column="22"/></name><argument_list pos:line="248" pos:column="22">(<argument><expr><name><name pos:line="248" pos:column="23">version<pos:position pos:line="248" pos:column="30"/></name><index pos:line="248" pos:column="30">[<expr><literal type="number" pos:line="248" pos:column="31">0<pos:position pos:line="248" pos:column="32"/></literal></expr>]<pos:position pos:line="248" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="248" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="248" pos:column="35"/></condition><then pos:line="248" pos:column="35"> <comment type="line" pos:line="248" pos:column="36">// not HTTP/n.n</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="249" pos:column="13">snprintf<pos:position pos:line="249" pos:column="21"/></name><argument_list pos:line="249" pos:column="21">(<argument><expr><name pos:line="249" pos:column="22">msg<pos:position pos:line="249" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="27">BUFSIZ<pos:position pos:line="249" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="35">"%s %s %s\r\n"<pos:position pos:line="249" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="249" pos:column="51">method<pos:position pos:line="249" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="59">url<pos:position pos:line="249" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="64">version<pos:position pos:line="249" pos:column="71"/></name></expr></argument>)<pos:position pos:line="249" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="73"/></expr_stmt></block></then>
        <else pos:line="250" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="251" pos:column="13">snprintf<pos:position pos:line="251" pos:column="21"/></name><argument_list pos:line="251" pos:column="21">(<argument><expr><name pos:line="251" pos:column="22">msg<pos:position pos:line="251" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="27">BUFSIZ<pos:position pos:line="251" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="35">"%s %s HTTP/%s\r\n"<pos:position pos:line="251" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="251" pos:column="56">method<pos:position pos:line="251" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="64">url<pos:position pos:line="251" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="69">version<pos:position pos:line="251" pos:column="76"/></name></expr></argument>)<pos:position pos:line="251" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="78"/></expr_stmt></block></else></if>

        <if pos:line="253" pos:column="9">if <condition pos:line="253" pos:column="12">(<expr><name pos:line="253" pos:column="13">host<pos:position pos:line="253" pos:column="17"/></name></expr>)<pos:position pos:line="253" pos:column="18"/></condition><then pos:line="253" pos:column="18"> <block pos:line="253" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="254" pos:column="13">snprintf<pos:position pos:line="254" pos:column="21"/></name><argument_list pos:line="254" pos:column="21">(<argument><expr><name pos:line="254" pos:column="22">buf<pos:position pos:line="254" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="27">BUFSIZ<pos:position pos:line="254" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="35">"Host: %s\r\n"<pos:position pos:line="254" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="254" pos:column="51">host<pos:position pos:line="254" pos:column="55"/></name></expr></argument>)<pos:position pos:line="254" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="255" pos:column="13">strcat<pos:position pos:line="255" pos:column="19"/></name><argument_list pos:line="255" pos:column="19">(<argument><expr><name pos:line="255" pos:column="20">msg<pos:position pos:line="255" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="255" pos:column="24">buf<pos:position pos:line="255" pos:column="27"/></name></expr></argument>)<pos:position pos:line="255" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="256" pos:column="10"/></block></then></if>

        <if pos:line="258" pos:column="9">if <condition pos:line="258" pos:column="12">(<expr><name pos:line="258" pos:column="13">useragent<pos:position pos:line="258" pos:column="22"/></name> <operator pos:line="258" pos:column="23">==<pos:position pos:line="258" pos:column="25"/></operator> <name pos:line="258" pos:column="26">NULL<pos:position pos:line="258" pos:column="30"/></name></expr>)<pos:position pos:line="258" pos:column="31"/></condition><then pos:line="258" pos:column="31"> <block pos:line="258" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="259" pos:column="13">snprintf<pos:position pos:line="259" pos:column="21"/></name><argument_list pos:line="259" pos:column="21">(<argument><expr><name pos:line="259" pos:column="22">buf<pos:position pos:line="259" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="27">BUFSIZ<pos:position pos:line="259" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="259" pos:column="35">"User-Agent: squidclient/%s\r\n"<pos:position pos:line="259" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="259" pos:column="69">VERSION<pos:position pos:line="259" pos:column="76"/></name></expr></argument>)<pos:position pos:line="259" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="260" pos:column="13">strcat<pos:position pos:line="260" pos:column="19"/></name><argument_list pos:line="260" pos:column="19">(<argument><expr><name pos:line="260" pos:column="20">msg<pos:position pos:line="260" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="260" pos:column="24">buf<pos:position pos:line="260" pos:column="27"/></name></expr></argument>)<pos:position pos:line="260" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="261" pos:column="10"/></block></then> <elseif pos:line="261" pos:column="11">else <if pos:line="261" pos:column="16">if <condition pos:line="261" pos:column="19">(<expr><name><name pos:line="261" pos:column="20">useragent<pos:position pos:line="261" pos:column="29"/></name><index pos:line="261" pos:column="29">[<expr><literal type="number" pos:line="261" pos:column="30">0<pos:position pos:line="261" pos:column="31"/></literal></expr>]<pos:position pos:line="261" pos:column="32"/></index></name> <operator pos:line="261" pos:column="33">!=<pos:position pos:line="261" pos:column="35"/></operator> <literal type="char" pos:line="261" pos:column="36">'\0'<pos:position pos:line="261" pos:column="40"/></literal></expr>)<pos:position pos:line="261" pos:column="41"/></condition><then pos:line="261" pos:column="41"> <block pos:line="261" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="262" pos:column="13">snprintf<pos:position pos:line="262" pos:column="21"/></name><argument_list pos:line="262" pos:column="21">(<argument><expr><name pos:line="262" pos:column="22">buf<pos:position pos:line="262" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="27">BUFSIZ<pos:position pos:line="262" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="262" pos:column="35">"User-Agent: %s\r\n"<pos:position pos:line="262" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="262" pos:column="57">useragent<pos:position pos:line="262" pos:column="66"/></name></expr></argument>)<pos:position pos:line="262" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="263" pos:column="13">strcat<pos:position pos:line="263" pos:column="19"/></name><argument_list pos:line="263" pos:column="19">(<argument><expr><name pos:line="263" pos:column="20">msg<pos:position pos:line="263" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="263" pos:column="24">buf<pos:position pos:line="263" pos:column="27"/></name></expr></argument>)<pos:position pos:line="263" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="264" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="266" pos:column="9">if <condition pos:line="266" pos:column="12">(<expr><name pos:line="266" pos:column="13">reload<pos:position pos:line="266" pos:column="19"/></name></expr>)<pos:position pos:line="266" pos:column="20"/></condition><then pos:line="266" pos:column="20"> <block pos:line="266" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="267" pos:column="13">snprintf<pos:position pos:line="267" pos:column="21"/></name><argument_list pos:line="267" pos:column="21">(<argument><expr><name pos:line="267" pos:column="22">buf<pos:position pos:line="267" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="27">BUFSIZ<pos:position pos:line="267" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="35">"Cache-Control: no-cache\r\n"<pos:position pos:line="267" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="268" pos:column="13">strcat<pos:position pos:line="268" pos:column="19"/></name><argument_list pos:line="268" pos:column="19">(<argument><expr><name pos:line="268" pos:column="20">msg<pos:position pos:line="268" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="25">buf<pos:position pos:line="268" pos:column="28"/></name></expr></argument>)<pos:position pos:line="268" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="269" pos:column="10"/></block></then></if>
        <if pos:line="270" pos:column="9">if <condition pos:line="270" pos:column="12">(<expr><name pos:line="270" pos:column="13">put_fd<pos:position pos:line="270" pos:column="19"/></name> <operator pos:line="270" pos:column="20">&gt;<pos:position pos:line="270" pos:column="24"/></operator> <literal type="number" pos:line="270" pos:column="22">0<pos:position pos:line="270" pos:column="23"/></literal></expr>)<pos:position pos:line="270" pos:column="24"/></condition><then pos:line="270" pos:column="24"> <block pos:line="270" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="271" pos:column="13">snprintf<pos:position pos:line="271" pos:column="21"/></name><argument_list pos:line="271" pos:column="21">(<argument><expr><name pos:line="271" pos:column="22">buf<pos:position pos:line="271" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="27">BUFSIZ<pos:position pos:line="271" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="35">"Content-length: %"<pos:position pos:line="271" pos:column="54"/></literal> <name pos:line="271" pos:column="55">PRId64<pos:position pos:line="271" pos:column="61"/></name> <literal type="string" pos:line="271" pos:column="62">"\r\n"<pos:position pos:line="271" pos:column="68"/></literal></expr></argument>, <argument><expr><operator pos:line="271" pos:column="70">(<pos:position pos:line="271" pos:column="71"/></operator><name pos:line="271" pos:column="71">int64_t<pos:position pos:line="271" pos:column="78"/></name><operator pos:line="271" pos:column="78">)<pos:position pos:line="271" pos:column="79"/></operator> <name><name pos:line="271" pos:column="80">sb<pos:position pos:line="271" pos:column="82"/></name><operator pos:line="271" pos:column="82">.<pos:position pos:line="271" pos:column="83"/></operator><name pos:line="271" pos:column="83">st_size<pos:position pos:line="271" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="272" pos:column="13">strcat<pos:position pos:line="272" pos:column="19"/></name><argument_list pos:line="272" pos:column="19">(<argument><expr><name pos:line="272" pos:column="20">msg<pos:position pos:line="272" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="25">buf<pos:position pos:line="272" pos:column="28"/></name></expr></argument>)<pos:position pos:line="272" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="273" pos:column="10"/></block></then></if>
        <if pos:line="274" pos:column="9">if <condition pos:line="274" pos:column="12">(<expr><name pos:line="274" pos:column="13">opt_noaccept<pos:position pos:line="274" pos:column="25"/></name> <operator pos:line="274" pos:column="26">==<pos:position pos:line="274" pos:column="28"/></operator> <literal type="number" pos:line="274" pos:column="29">0<pos:position pos:line="274" pos:column="30"/></literal></expr>)<pos:position pos:line="274" pos:column="31"/></condition><then pos:line="274" pos:column="31"> <block pos:line="274" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="275" pos:column="13">snprintf<pos:position pos:line="275" pos:column="21"/></name><argument_list pos:line="275" pos:column="21">(<argument><expr><name pos:line="275" pos:column="22">buf<pos:position pos:line="275" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="27">BUFSIZ<pos:position pos:line="275" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="275" pos:column="35">"Accept: */*\r\n"<pos:position pos:line="275" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="276" pos:column="13">strcat<pos:position pos:line="276" pos:column="19"/></name><argument_list pos:line="276" pos:column="19">(<argument><expr><name pos:line="276" pos:column="20">msg<pos:position pos:line="276" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="25">buf<pos:position pos:line="276" pos:column="28"/></name></expr></argument>)<pos:position pos:line="276" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="277" pos:column="10"/></block></then></if>
        <if pos:line="278" pos:column="9">if <condition pos:line="278" pos:column="12">(<expr><name pos:line="278" pos:column="13">ims<pos:position pos:line="278" pos:column="16"/></name></expr>)<pos:position pos:line="278" pos:column="17"/></condition><then pos:line="278" pos:column="17"> <block pos:line="278" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="279" pos:column="13">snprintf<pos:position pos:line="279" pos:column="21"/></name><argument_list pos:line="279" pos:column="21">(<argument><expr><name pos:line="279" pos:column="22">buf<pos:position pos:line="279" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="27">BUFSIZ<pos:position pos:line="279" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="279" pos:column="35">"If-Modified-Since: %s\r\n"<pos:position pos:line="279" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="279" pos:column="64">mkrfc1123<pos:position pos:line="279" pos:column="73"/></name><argument_list pos:line="279" pos:column="73">(<argument><expr><name pos:line="279" pos:column="74">ims<pos:position pos:line="279" pos:column="77"/></name></expr></argument>)<pos:position pos:line="279" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="279" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="280" pos:column="13">strcat<pos:position pos:line="280" pos:column="19"/></name><argument_list pos:line="280" pos:column="19">(<argument><expr><name pos:line="280" pos:column="20">msg<pos:position pos:line="280" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="280" pos:column="25">buf<pos:position pos:line="280" pos:column="28"/></name></expr></argument>)<pos:position pos:line="280" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="281" pos:column="10"/></block></then></if>
        <if pos:line="282" pos:column="9">if <condition pos:line="282" pos:column="12">(<expr><name pos:line="282" pos:column="13">max_forwards<pos:position pos:line="282" pos:column="25"/></name> <operator pos:line="282" pos:column="26">&gt;<pos:position pos:line="282" pos:column="30"/></operator> <operator pos:line="282" pos:column="28">-<pos:position pos:line="282" pos:column="29"/></operator><literal type="number" pos:line="282" pos:column="29">1<pos:position pos:line="282" pos:column="30"/></literal></expr>)<pos:position pos:line="282" pos:column="31"/></condition><then pos:line="282" pos:column="31"> <block pos:line="282" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="283" pos:column="13">snprintf<pos:position pos:line="283" pos:column="21"/></name><argument_list pos:line="283" pos:column="21">(<argument><expr><name pos:line="283" pos:column="22">buf<pos:position pos:line="283" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="27">BUFSIZ<pos:position pos:line="283" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="35">"Max-Forwards: %d\r\n"<pos:position pos:line="283" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="283" pos:column="59">max_forwards<pos:position pos:line="283" pos:column="71"/></name></expr></argument>)<pos:position pos:line="283" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="284" pos:column="13">strcat<pos:position pos:line="284" pos:column="19"/></name><argument_list pos:line="284" pos:column="19">(<argument><expr><name pos:line="284" pos:column="20">msg<pos:position pos:line="284" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="25">buf<pos:position pos:line="284" pos:column="28"/></name></expr></argument>)<pos:position pos:line="284" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="285" pos:column="10"/></block></then></if>
        <if pos:line="286" pos:column="9">if <condition pos:line="286" pos:column="12">(<expr><name pos:line="286" pos:column="13">proxy_user<pos:position pos:line="286" pos:column="23"/></name></expr>)<pos:position pos:line="286" pos:column="24"/></condition><then pos:line="286" pos:column="24"> <block pos:line="286" pos:column="25">{
            <decl_stmt><decl><type><specifier pos:line="287" pos:column="13">const<pos:position pos:line="287" pos:column="18"/></specifier> <name pos:line="287" pos:column="19">char<pos:position pos:line="287" pos:column="23"/></name> <modifier pos:line="287" pos:column="24">*<pos:position pos:line="287" pos:column="25"/></modifier></type><name pos:line="287" pos:column="25">user<pos:position pos:line="287" pos:column="29"/></name> <init pos:line="287" pos:column="30">= <expr><name pos:line="287" pos:column="32">proxy_user<pos:position pos:line="287" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="287" pos:column="43"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="288" pos:column="13">const<pos:position pos:line="288" pos:column="18"/></specifier> <name pos:line="288" pos:column="19">char<pos:position pos:line="288" pos:column="23"/></name> <modifier pos:line="288" pos:column="24">*<pos:position pos:line="288" pos:column="25"/></modifier></type><name pos:line="288" pos:column="25">password<pos:position pos:line="288" pos:column="33"/></name> <init pos:line="288" pos:column="34">= <expr><name pos:line="288" pos:column="36">proxy_password<pos:position pos:line="288" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="288" pos:column="51"/></decl_stmt>
<cpp:if pos:line="289" pos:column="1">#<cpp:directive pos:line="289" pos:column="2">if<pos:position pos:line="289" pos:column="4"/></cpp:directive> <expr><name pos:line="289" pos:column="5">HAVE_GETPASS<pos:position pos:line="289" pos:column="17"/></name></expr></cpp:if>
            <if pos:line="290" pos:column="13">if <condition pos:line="290" pos:column="16">(<expr><operator pos:line="290" pos:column="17">!<pos:position pos:line="290" pos:column="18"/></operator><name pos:line="290" pos:column="18">password<pos:position pos:line="290" pos:column="26"/></name></expr>)<pos:position pos:line="290" pos:column="27"/></condition><then pos:line="290" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="291" pos:column="17">password<pos:position pos:line="291" pos:column="25"/></name> <operator pos:line="291" pos:column="26">=<pos:position pos:line="291" pos:column="27"/></operator> <call><name pos:line="291" pos:column="28">getpass<pos:position pos:line="291" pos:column="35"/></name><argument_list pos:line="291" pos:column="35">(<argument><expr><literal type="string" pos:line="291" pos:column="36">"Proxy password: "<pos:position pos:line="291" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">endif<pos:position pos:line="292" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="293" pos:column="13">if <condition pos:line="293" pos:column="16">(<expr><operator pos:line="293" pos:column="17">!<pos:position pos:line="293" pos:column="18"/></operator><name pos:line="293" pos:column="18">password<pos:position pos:line="293" pos:column="26"/></name></expr>)<pos:position pos:line="293" pos:column="27"/></condition><then pos:line="293" pos:column="27"> <block pos:line="293" pos:column="28">{
                <expr_stmt><expr><name><name pos:line="294" pos:column="17">std<pos:position pos:line="294" pos:column="20"/></name><operator pos:line="294" pos:column="20">::<pos:position pos:line="294" pos:column="22"/></operator><name pos:line="294" pos:column="22">cerr<pos:position pos:line="294" pos:column="26"/></name></name> <operator pos:line="294" pos:column="27">&lt;&lt;<pos:position pos:line="294" pos:column="35"/></operator> <literal type="string" pos:line="294" pos:column="30">"ERROR: Proxy password missing"<pos:position pos:line="294" pos:column="61"/></literal> <operator pos:line="294" pos:column="62">&lt;&lt;<pos:position pos:line="294" pos:column="70"/></operator> <name><name pos:line="294" pos:column="65">std<pos:position pos:line="294" pos:column="68"/></name><operator pos:line="294" pos:column="68">::<pos:position pos:line="294" pos:column="70"/></operator><name pos:line="294" pos:column="70">endl<pos:position pos:line="294" pos:column="74"/></name></name></expr>;<pos:position pos:line="294" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="295" pos:column="17">exit<pos:position pos:line="295" pos:column="21"/></name><argument_list pos:line="295" pos:column="21">(<argument><expr><literal type="number" pos:line="295" pos:column="22">1<pos:position pos:line="295" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="295" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="296" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="297" pos:column="13">snprintf<pos:position pos:line="297" pos:column="21"/></name><argument_list pos:line="297" pos:column="21">(<argument><expr><name pos:line="297" pos:column="22">buf<pos:position pos:line="297" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="27">BUFSIZ<pos:position pos:line="297" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="35">"%s:%s"<pos:position pos:line="297" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="297" pos:column="44">user<pos:position pos:line="297" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="50">password<pos:position pos:line="297" pos:column="58"/></name></expr></argument>)<pos:position pos:line="297" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="298" pos:column="13">snprintf<pos:position pos:line="298" pos:column="21"/></name><argument_list pos:line="298" pos:column="21">(<argument><expr><name pos:line="298" pos:column="22">buf<pos:position pos:line="298" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="27">BUFSIZ<pos:position pos:line="298" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="35">"Proxy-Authorization: Basic %s\r\n"<pos:position pos:line="298" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="298" pos:column="72">old_base64_encode<pos:position pos:line="298" pos:column="89"/></name><argument_list pos:line="298" pos:column="89">(<argument><expr><name pos:line="298" pos:column="90">buf<pos:position pos:line="298" pos:column="93"/></name></expr></argument>)<pos:position pos:line="298" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="298" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="96"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="299" pos:column="13">strcat<pos:position pos:line="299" pos:column="19"/></name><argument_list pos:line="299" pos:column="19">(<argument><expr><name pos:line="299" pos:column="20">msg<pos:position pos:line="299" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="25">buf<pos:position pos:line="299" pos:column="28"/></name></expr></argument>)<pos:position pos:line="299" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="300" pos:column="10"/></block></then></if>
        <if pos:line="301" pos:column="9">if <condition pos:line="301" pos:column="12">(<expr><name pos:line="301" pos:column="13">www_user<pos:position pos:line="301" pos:column="21"/></name></expr>)<pos:position pos:line="301" pos:column="22"/></condition><then pos:line="301" pos:column="22"> <block pos:line="301" pos:column="23">{
            <decl_stmt><decl><type><specifier pos:line="302" pos:column="13">const<pos:position pos:line="302" pos:column="18"/></specifier> <name pos:line="302" pos:column="19">char<pos:position pos:line="302" pos:column="23"/></name> <modifier pos:line="302" pos:column="24">*<pos:position pos:line="302" pos:column="25"/></modifier></type><name pos:line="302" pos:column="25">user<pos:position pos:line="302" pos:column="29"/></name> <init pos:line="302" pos:column="30">= <expr><name pos:line="302" pos:column="32">www_user<pos:position pos:line="302" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="302" pos:column="41"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="303" pos:column="13">const<pos:position pos:line="303" pos:column="18"/></specifier> <name pos:line="303" pos:column="19">char<pos:position pos:line="303" pos:column="23"/></name> <modifier pos:line="303" pos:column="24">*<pos:position pos:line="303" pos:column="25"/></modifier></type><name pos:line="303" pos:column="25">password<pos:position pos:line="303" pos:column="33"/></name> <init pos:line="303" pos:column="34">= <expr><name pos:line="303" pos:column="36">www_password<pos:position pos:line="303" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="303" pos:column="49"/></decl_stmt>
<cpp:if pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">if<pos:position pos:line="304" pos:column="4"/></cpp:directive> <expr><name pos:line="304" pos:column="5">HAVE_GETPASS<pos:position pos:line="304" pos:column="17"/></name></expr></cpp:if>
            <if pos:line="305" pos:column="13">if <condition pos:line="305" pos:column="16">(<expr><operator pos:line="305" pos:column="17">!<pos:position pos:line="305" pos:column="18"/></operator><name pos:line="305" pos:column="18">password<pos:position pos:line="305" pos:column="26"/></name></expr>)<pos:position pos:line="305" pos:column="27"/></condition><then pos:line="305" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="306" pos:column="17">password<pos:position pos:line="306" pos:column="25"/></name> <operator pos:line="306" pos:column="26">=<pos:position pos:line="306" pos:column="27"/></operator> <call><name pos:line="306" pos:column="28">getpass<pos:position pos:line="306" pos:column="35"/></name><argument_list pos:line="306" pos:column="35">(<argument><expr><literal type="string" pos:line="306" pos:column="36">"WWW password: "<pos:position pos:line="306" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="54"/></expr_stmt></block></then></if>
<cpp:endif pos:line="307" pos:column="1">#<cpp:directive pos:line="307" pos:column="2">endif<pos:position pos:line="307" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="308" pos:column="13">if <condition pos:line="308" pos:column="16">(<expr><operator pos:line="308" pos:column="17">!<pos:position pos:line="308" pos:column="18"/></operator><name pos:line="308" pos:column="18">password<pos:position pos:line="308" pos:column="26"/></name></expr>)<pos:position pos:line="308" pos:column="27"/></condition><then pos:line="308" pos:column="27"> <block pos:line="308" pos:column="28">{
                <expr_stmt><expr><name><name pos:line="309" pos:column="17">std<pos:position pos:line="309" pos:column="20"/></name><operator pos:line="309" pos:column="20">::<pos:position pos:line="309" pos:column="22"/></operator><name pos:line="309" pos:column="22">cerr<pos:position pos:line="309" pos:column="26"/></name></name> <operator pos:line="309" pos:column="27">&lt;&lt;<pos:position pos:line="309" pos:column="35"/></operator> <literal type="string" pos:line="309" pos:column="30">"ERROR: WWW password missing"<pos:position pos:line="309" pos:column="59"/></literal> <operator pos:line="309" pos:column="60">&lt;&lt;<pos:position pos:line="309" pos:column="68"/></operator> <name><name pos:line="309" pos:column="63">std<pos:position pos:line="309" pos:column="66"/></name><operator pos:line="309" pos:column="66">::<pos:position pos:line="309" pos:column="68"/></operator><name pos:line="309" pos:column="68">endl<pos:position pos:line="309" pos:column="72"/></name></name></expr>;<pos:position pos:line="309" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="310" pos:column="17">exit<pos:position pos:line="310" pos:column="21"/></name><argument_list pos:line="310" pos:column="21">(<argument><expr><literal type="number" pos:line="310" pos:column="22">1<pos:position pos:line="310" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="310" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="311" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="312" pos:column="13">snprintf<pos:position pos:line="312" pos:column="21"/></name><argument_list pos:line="312" pos:column="21">(<argument><expr><name pos:line="312" pos:column="22">buf<pos:position pos:line="312" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="27">BUFSIZ<pos:position pos:line="312" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="35">"%s:%s"<pos:position pos:line="312" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="312" pos:column="44">user<pos:position pos:line="312" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="50">password<pos:position pos:line="312" pos:column="58"/></name></expr></argument>)<pos:position pos:line="312" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="313" pos:column="13">snprintf<pos:position pos:line="313" pos:column="21"/></name><argument_list pos:line="313" pos:column="21">(<argument><expr><name pos:line="313" pos:column="22">buf<pos:position pos:line="313" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="27">BUFSIZ<pos:position pos:line="313" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="313" pos:column="35">"Authorization: Basic %s\r\n"<pos:position pos:line="313" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="313" pos:column="66">old_base64_encode<pos:position pos:line="313" pos:column="83"/></name><argument_list pos:line="313" pos:column="83">(<argument><expr><name pos:line="313" pos:column="84">buf<pos:position pos:line="313" pos:column="87"/></name></expr></argument>)<pos:position pos:line="313" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="313" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="314" pos:column="13">strcat<pos:position pos:line="314" pos:column="19"/></name><argument_list pos:line="314" pos:column="19">(<argument><expr><name pos:line="314" pos:column="20">msg<pos:position pos:line="314" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="25">buf<pos:position pos:line="314" pos:column="28"/></name></expr></argument>)<pos:position pos:line="314" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="315" pos:column="10"/></block></then></if>
<cpp:if pos:line="316" pos:column="1">#<cpp:directive pos:line="316" pos:column="2">if<pos:position pos:line="316" pos:column="4"/></cpp:directive> <expr><name pos:line="316" pos:column="5">HAVE_GSSAPI<pos:position pos:line="316" pos:column="16"/></name></expr></cpp:if>
        <if pos:line="317" pos:column="9">if <condition pos:line="317" pos:column="12">(<expr><name pos:line="317" pos:column="13">www_neg<pos:position pos:line="317" pos:column="20"/></name></expr>)<pos:position pos:line="317" pos:column="21"/></condition><then pos:line="317" pos:column="21"> <block pos:line="317" pos:column="22">{
            <if pos:line="318" pos:column="13">if <condition pos:line="318" pos:column="16">(<expr><name pos:line="318" pos:column="17">host<pos:position pos:line="318" pos:column="21"/></name></expr>)<pos:position pos:line="318" pos:column="22"/></condition><then pos:line="318" pos:column="22"> <block pos:line="318" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="319" pos:column="17">snprintf<pos:position pos:line="319" pos:column="25"/></name><argument_list pos:line="319" pos:column="25">(<argument><expr><name pos:line="319" pos:column="26">buf<pos:position pos:line="319" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="31">BUFSIZ<pos:position pos:line="319" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="319" pos:column="39">"Authorization: Negotiate %s\r\n"<pos:position pos:line="319" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="319" pos:column="74">GSSAPI_token<pos:position pos:line="319" pos:column="86"/></name><argument_list pos:line="319" pos:column="86">(<argument><expr><name pos:line="319" pos:column="87">host<pos:position pos:line="319" pos:column="91"/></name></expr></argument>)<pos:position pos:line="319" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="319" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="94"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="320" pos:column="17">strcat<pos:position pos:line="320" pos:column="23"/></name><argument_list pos:line="320" pos:column="23">(<argument><expr><name pos:line="320" pos:column="24">msg<pos:position pos:line="320" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="29">buf<pos:position pos:line="320" pos:column="32"/></name></expr></argument>)<pos:position pos:line="320" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="321" pos:column="14"/></block></then> <else pos:line="321" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="322" pos:column="17">std<pos:position pos:line="322" pos:column="20"/></name><operator pos:line="322" pos:column="20">::<pos:position pos:line="322" pos:column="22"/></operator><name pos:line="322" pos:column="22">cerr<pos:position pos:line="322" pos:column="26"/></name></name> <operator pos:line="322" pos:column="27">&lt;&lt;<pos:position pos:line="322" pos:column="35"/></operator> <literal type="string" pos:line="322" pos:column="30">"ERROR: server host missing"<pos:position pos:line="322" pos:column="58"/></literal> <operator pos:line="322" pos:column="59">&lt;&lt;<pos:position pos:line="322" pos:column="67"/></operator> <name><name pos:line="322" pos:column="62">std<pos:position pos:line="322" pos:column="65"/></name><operator pos:line="322" pos:column="65">::<pos:position pos:line="322" pos:column="67"/></operator><name pos:line="322" pos:column="67">endl<pos:position pos:line="322" pos:column="71"/></name></name></expr>;<pos:position pos:line="322" pos:column="72"/></expr_stmt></block></else></if>
        }<pos:position pos:line="323" pos:column="10"/></block></then></if>
        <if pos:line="324" pos:column="9">if <condition pos:line="324" pos:column="12">(<expr><name pos:line="324" pos:column="13">proxy_neg<pos:position pos:line="324" pos:column="22"/></name></expr>)<pos:position pos:line="324" pos:column="23"/></condition><then pos:line="324" pos:column="23"> <block pos:line="324" pos:column="24">{
            <if pos:line="325" pos:column="13">if <condition pos:line="325" pos:column="16">(<expr><name><name pos:line="325" pos:column="17">Transport<pos:position pos:line="325" pos:column="26"/></name><operator pos:line="325" pos:column="26">::<pos:position pos:line="325" pos:column="28"/></operator><name pos:line="325" pos:column="28">Config<pos:position pos:line="325" pos:column="34"/></name><operator pos:line="325" pos:column="34">.<pos:position pos:line="325" pos:column="35"/></operator><name pos:line="325" pos:column="35">hostname<pos:position pos:line="325" pos:column="43"/></name></name></expr>)<pos:position pos:line="325" pos:column="44"/></condition><then pos:line="325" pos:column="44"> <block pos:line="325" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="326" pos:column="17">snprintf<pos:position pos:line="326" pos:column="25"/></name><argument_list pos:line="326" pos:column="25">(<argument><expr><name pos:line="326" pos:column="26">buf<pos:position pos:line="326" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="31">BUFSIZ<pos:position pos:line="326" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="326" pos:column="39">"Proxy-Authorization: Negotiate %s\r\n"<pos:position pos:line="326" pos:column="78"/></literal></expr></argument>, <argument><expr><call><name pos:line="326" pos:column="80">GSSAPI_token<pos:position pos:line="326" pos:column="92"/></name><argument_list pos:line="326" pos:column="92">(<argument><expr><name><name pos:line="326" pos:column="93">Transport<pos:position pos:line="326" pos:column="102"/></name><operator pos:line="326" pos:column="102">::<pos:position pos:line="326" pos:column="104"/></operator><name pos:line="326" pos:column="104">Config<pos:position pos:line="326" pos:column="110"/></name><operator pos:line="326" pos:column="110">.<pos:position pos:line="326" pos:column="111"/></operator><name pos:line="326" pos:column="111">hostname<pos:position pos:line="326" pos:column="119"/></name></name></expr></argument>)<pos:position pos:line="326" pos:column="120"/></argument_list></call></expr></argument>)<pos:position pos:line="326" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="122"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="327" pos:column="17">strcat<pos:position pos:line="327" pos:column="23"/></name><argument_list pos:line="327" pos:column="23">(<argument><expr><name pos:line="327" pos:column="24">msg<pos:position pos:line="327" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="29">buf<pos:position pos:line="327" pos:column="32"/></name></expr></argument>)<pos:position pos:line="327" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="328" pos:column="14"/></block></then> <else pos:line="328" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="329" pos:column="17">std<pos:position pos:line="329" pos:column="20"/></name><operator pos:line="329" pos:column="20">::<pos:position pos:line="329" pos:column="22"/></operator><name pos:line="329" pos:column="22">cerr<pos:position pos:line="329" pos:column="26"/></name></name> <operator pos:line="329" pos:column="27">&lt;&lt;<pos:position pos:line="329" pos:column="35"/></operator> <literal type="string" pos:line="329" pos:column="30">"ERROR: proxy server host missing"<pos:position pos:line="329" pos:column="64"/></literal> <operator pos:line="329" pos:column="65">&lt;&lt;<pos:position pos:line="329" pos:column="73"/></operator> <name><name pos:line="329" pos:column="68">std<pos:position pos:line="329" pos:column="71"/></name><operator pos:line="329" pos:column="71">::<pos:position pos:line="329" pos:column="73"/></operator><name pos:line="329" pos:column="73">endl<pos:position pos:line="329" pos:column="77"/></name></name></expr>;<pos:position pos:line="329" pos:column="78"/></expr_stmt></block></else></if>
        }<pos:position pos:line="330" pos:column="10"/></block></then></if>
<cpp:endif pos:line="331" pos:column="1">#<cpp:directive pos:line="331" pos:column="2">endif<pos:position pos:line="331" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="333" pos:column="9">/* HTTP/1.0 may need keep-alive explicitly */</comment>
        <if pos:line="334" pos:column="9">if <condition pos:line="334" pos:column="12">(<expr><call><name pos:line="334" pos:column="13">strcmp<pos:position pos:line="334" pos:column="19"/></name><argument_list pos:line="334" pos:column="19">(<argument><expr><name pos:line="334" pos:column="20">version<pos:position pos:line="334" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="29">"1.0"<pos:position pos:line="334" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="35"/></argument_list></call> <operator pos:line="334" pos:column="36">==<pos:position pos:line="334" pos:column="38"/></operator> <literal type="number" pos:line="334" pos:column="39">0<pos:position pos:line="334" pos:column="40"/></literal> <operator pos:line="334" pos:column="41">&amp;&amp;<pos:position pos:line="334" pos:column="51"/></operator> <name pos:line="334" pos:column="44">keep_alive<pos:position pos:line="334" pos:column="54"/></name></expr>)<pos:position pos:line="334" pos:column="55"/></condition><then pos:line="334" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="335" pos:column="13">strcat<pos:position pos:line="335" pos:column="19"/></name><argument_list pos:line="335" pos:column="19">(<argument><expr><name pos:line="335" pos:column="20">msg<pos:position pos:line="335" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="335" pos:column="25">"Connection: keep-alive\r\n"<pos:position pos:line="335" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="335" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="55"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="337" pos:column="9">/* HTTP/1.1 may need close explicitly */</comment>
        <if pos:line="338" pos:column="9">if <condition pos:line="338" pos:column="12">(<expr><operator pos:line="338" pos:column="13">!<pos:position pos:line="338" pos:column="14"/></operator><name pos:line="338" pos:column="14">keep_alive<pos:position pos:line="338" pos:column="24"/></name></expr>)<pos:position pos:line="338" pos:column="25"/></condition><then pos:line="338" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="339" pos:column="13">strcat<pos:position pos:line="339" pos:column="19"/></name><argument_list pos:line="339" pos:column="19">(<argument><expr><name pos:line="339" pos:column="20">msg<pos:position pos:line="339" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="25">"Connection: close\r\n"<pos:position pos:line="339" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="50"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="341" pos:column="9">strcat<pos:position pos:line="341" pos:column="15"/></name><argument_list pos:line="341" pos:column="15">(<argument><expr><name pos:line="341" pos:column="16">msg<pos:position pos:line="341" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="21">extra_hdrs<pos:position pos:line="341" pos:column="31"/></name></expr></argument>)<pos:position pos:line="341" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="342" pos:column="9">strcat<pos:position pos:line="342" pos:column="15"/></name><argument_list pos:line="342" pos:column="15">(<argument><expr><name pos:line="342" pos:column="16">msg<pos:position pos:line="342" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="21">"\r\n"<pos:position pos:line="342" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="342" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="343" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="345" pos:column="5">debugVerbose<pos:position pos:line="345" pos:column="17"/></name><argument_list pos:line="345" pos:column="17">(<argument><expr><literal type="number" pos:line="345" pos:column="18">1<pos:position pos:line="345" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="21">"Request:"<pos:position pos:line="345" pos:column="31"/></literal> <operator pos:line="345" pos:column="32">&lt;&lt;<pos:position pos:line="345" pos:column="40"/></operator> <name><name pos:line="345" pos:column="35">std<pos:position pos:line="345" pos:column="38"/></name><operator pos:line="345" pos:column="38">::<pos:position pos:line="345" pos:column="40"/></operator><name pos:line="345" pos:column="40">endl<pos:position pos:line="345" pos:column="44"/></name></name> <operator pos:line="345" pos:column="45">&lt;&lt;<pos:position pos:line="345" pos:column="53"/></operator> <name pos:line="345" pos:column="48">msg<pos:position pos:line="345" pos:column="51"/></name> <operator pos:line="345" pos:column="52">&lt;&lt;<pos:position pos:line="345" pos:column="60"/></operator> <name><name pos:line="345" pos:column="55">std<pos:position pos:line="345" pos:column="58"/></name><operator pos:line="345" pos:column="58">::<pos:position pos:line="345" pos:column="60"/></operator><name pos:line="345" pos:column="60">endl<pos:position pos:line="345" pos:column="64"/></name></name> <operator pos:line="345" pos:column="65">&lt;&lt;<pos:position pos:line="345" pos:column="73"/></operator> <literal type="string" pos:line="345" pos:column="68">"."<pos:position pos:line="345" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="345" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="73"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="347" pos:column="5">uint32_t<pos:position pos:line="347" pos:column="13"/></name></type> <name pos:line="347" pos:column="14">loops<pos:position pos:line="347" pos:column="19"/></name> <init pos:line="347" pos:column="20">= <expr><call><name><name pos:line="347" pos:column="22">Ping<pos:position pos:line="347" pos:column="26"/></name><operator pos:line="347" pos:column="26">::<pos:position pos:line="347" pos:column="28"/></operator><name pos:line="347" pos:column="28">Init<pos:position pos:line="347" pos:column="32"/></name></name><argument_list pos:line="347" pos:column="32">()<pos:position pos:line="347" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="347" pos:column="35"/></decl_stmt>

    <for pos:line="349" pos:column="5">for <control pos:line="349" pos:column="9">(<init><decl><type><name pos:line="349" pos:column="10">uint32_t<pos:position pos:line="349" pos:column="18"/></name></type> <name pos:line="349" pos:column="19">i<pos:position pos:line="349" pos:column="20"/></name> <init pos:line="349" pos:column="21">= <expr><literal type="number" pos:line="349" pos:column="23">0<pos:position pos:line="349" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="349" pos:column="25"/></init> <condition><expr><name pos:line="349" pos:column="26">loops<pos:position pos:line="349" pos:column="31"/></name> <operator pos:line="349" pos:column="32">==<pos:position pos:line="349" pos:column="34"/></operator> <literal type="number" pos:line="349" pos:column="35">0<pos:position pos:line="349" pos:column="36"/></literal> <operator pos:line="349" pos:column="37">||<pos:position pos:line="349" pos:column="39"/></operator> <name pos:line="349" pos:column="40">i<pos:position pos:line="349" pos:column="41"/></name> <operator pos:line="349" pos:column="42">&lt;<pos:position pos:line="349" pos:column="46"/></operator> <name pos:line="349" pos:column="44">loops<pos:position pos:line="349" pos:column="49"/></name></expr>;<pos:position pos:line="349" pos:column="50"/></condition> <incr><expr><operator pos:line="349" pos:column="51">++<pos:position pos:line="349" pos:column="53"/></operator><name pos:line="349" pos:column="53">i<pos:position pos:line="349" pos:column="54"/></name></expr></incr>)<pos:position pos:line="349" pos:column="55"/></control> <block pos:line="349" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="350" pos:column="9">size_t<pos:position pos:line="350" pos:column="15"/></name></type> <name pos:line="350" pos:column="16">fsize<pos:position pos:line="350" pos:column="21"/></name> <init pos:line="350" pos:column="22">= <expr><literal type="number" pos:line="350" pos:column="24">0<pos:position pos:line="350" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="350" pos:column="26"/></decl_stmt>

        <if pos:line="352" pos:column="9">if <condition pos:line="352" pos:column="12">(<expr><operator pos:line="352" pos:column="13">!<pos:position pos:line="352" pos:column="14"/></operator><call><name><name pos:line="352" pos:column="14">Transport<pos:position pos:line="352" pos:column="23"/></name><operator pos:line="352" pos:column="23">::<pos:position pos:line="352" pos:column="25"/></operator><name pos:line="352" pos:column="25">Connect<pos:position pos:line="352" pos:column="32"/></name></name><argument_list pos:line="352" pos:column="32">()<pos:position pos:line="352" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="352" pos:column="35"/></condition><then pos:line="352" pos:column="35">
            <block type="pseudo"><continue pos:line="353" pos:column="13">continue;<pos:position pos:line="353" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="355" pos:column="9">/* Send the HTTP request */</comment>
        <expr_stmt><expr><call><name pos:line="356" pos:column="9">debugVerbose<pos:position pos:line="356" pos:column="21"/></name><argument_list pos:line="356" pos:column="21">(<argument><expr><literal type="number" pos:line="356" pos:column="22">2<pos:position pos:line="356" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="356" pos:column="25">"Sending HTTP request ... "<pos:position pos:line="356" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="357" pos:column="9">bytesWritten<pos:position pos:line="357" pos:column="21"/></name> <operator pos:line="357" pos:column="22">=<pos:position pos:line="357" pos:column="23"/></operator> <call><name><name pos:line="357" pos:column="24">Transport<pos:position pos:line="357" pos:column="33"/></name><operator pos:line="357" pos:column="33">::<pos:position pos:line="357" pos:column="35"/></operator><name pos:line="357" pos:column="35">Write<pos:position pos:line="357" pos:column="40"/></name></name><argument_list pos:line="357" pos:column="40">(<argument><expr><name pos:line="357" pos:column="41">msg<pos:position pos:line="357" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="357" pos:column="46">strlen<pos:position pos:line="357" pos:column="52"/></name><argument_list pos:line="357" pos:column="52">(<argument><expr><name pos:line="357" pos:column="53">msg<pos:position pos:line="357" pos:column="56"/></name></expr></argument>)<pos:position pos:line="357" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="357" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="59"/></expr_stmt>

        <if pos:line="359" pos:column="9">if <condition pos:line="359" pos:column="12">(<expr><name pos:line="359" pos:column="13">bytesWritten<pos:position pos:line="359" pos:column="25"/></name> <operator pos:line="359" pos:column="26">&lt;<pos:position pos:line="359" pos:column="30"/></operator> <literal type="number" pos:line="359" pos:column="28">0<pos:position pos:line="359" pos:column="29"/></literal></expr>)<pos:position pos:line="359" pos:column="30"/></condition><then pos:line="359" pos:column="30"> <block pos:line="359" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="360" pos:column="13">std<pos:position pos:line="360" pos:column="16"/></name><operator pos:line="360" pos:column="16">::<pos:position pos:line="360" pos:column="18"/></operator><name pos:line="360" pos:column="18">cerr<pos:position pos:line="360" pos:column="22"/></name></name> <operator pos:line="360" pos:column="23">&lt;&lt;<pos:position pos:line="360" pos:column="31"/></operator> <literal type="string" pos:line="360" pos:column="26">"ERROR: write"<pos:position pos:line="360" pos:column="40"/></literal> <operator pos:line="360" pos:column="41">&lt;&lt;<pos:position pos:line="360" pos:column="49"/></operator> <name><name pos:line="360" pos:column="44">std<pos:position pos:line="360" pos:column="47"/></name><operator pos:line="360" pos:column="47">::<pos:position pos:line="360" pos:column="49"/></operator><name pos:line="360" pos:column="49">endl<pos:position pos:line="360" pos:column="53"/></name></name></expr>;<pos:position pos:line="360" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="361" pos:column="13">exit<pos:position pos:line="361" pos:column="17"/></name><argument_list pos:line="361" pos:column="17">(<argument><expr><literal type="number" pos:line="361" pos:column="18">1<pos:position pos:line="361" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="361" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="362" pos:column="10"/></block></then> <elseif pos:line="362" pos:column="11">else <if pos:line="362" pos:column="16">if <condition pos:line="362" pos:column="19">(<expr><operator pos:line="362" pos:column="20">(<pos:position pos:line="362" pos:column="21"/></operator><name pos:line="362" pos:column="21">unsigned<pos:position pos:line="362" pos:column="29"/></name><operator pos:line="362" pos:column="29">)<pos:position pos:line="362" pos:column="30"/></operator> <name pos:line="362" pos:column="31">bytesWritten<pos:position pos:line="362" pos:column="43"/></name> <operator pos:line="362" pos:column="44">!=<pos:position pos:line="362" pos:column="46"/></operator> <call><name pos:line="362" pos:column="47">strlen<pos:position pos:line="362" pos:column="53"/></name><argument_list pos:line="362" pos:column="53">(<argument><expr><name pos:line="362" pos:column="54">msg<pos:position pos:line="362" pos:column="57"/></name></expr></argument>)<pos:position pos:line="362" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="362" pos:column="59"/></condition><then pos:line="362" pos:column="59"> <block pos:line="362" pos:column="60">{
            <expr_stmt><expr><name><name pos:line="363" pos:column="13">std<pos:position pos:line="363" pos:column="16"/></name><operator pos:line="363" pos:column="16">::<pos:position pos:line="363" pos:column="18"/></operator><name pos:line="363" pos:column="18">cerr<pos:position pos:line="363" pos:column="22"/></name></name> <operator pos:line="363" pos:column="23">&lt;&lt;<pos:position pos:line="363" pos:column="31"/></operator> <literal type="string" pos:line="363" pos:column="26">"ERROR: Cannot send request?: "<pos:position pos:line="363" pos:column="57"/></literal> <operator pos:line="363" pos:column="58">&lt;&lt;<pos:position pos:line="363" pos:column="66"/></operator> <name><name pos:line="363" pos:column="61">std<pos:position pos:line="363" pos:column="64"/></name><operator pos:line="363" pos:column="64">::<pos:position pos:line="363" pos:column="66"/></operator><name pos:line="363" pos:column="66">endl<pos:position pos:line="363" pos:column="70"/></name></name> <operator pos:line="363" pos:column="71">&lt;&lt;<pos:position pos:line="363" pos:column="79"/></operator> <name pos:line="363" pos:column="74">msg<pos:position pos:line="363" pos:column="77"/></name> <operator pos:line="363" pos:column="78">&lt;&lt;<pos:position pos:line="363" pos:column="86"/></operator> <name><name pos:line="363" pos:column="81">std<pos:position pos:line="363" pos:column="84"/></name><operator pos:line="363" pos:column="84">::<pos:position pos:line="363" pos:column="86"/></operator><name pos:line="363" pos:column="86">endl<pos:position pos:line="363" pos:column="90"/></name></name></expr>;<pos:position pos:line="363" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="364" pos:column="13">exit<pos:position pos:line="364" pos:column="17"/></name><argument_list pos:line="364" pos:column="17">(<argument><expr><literal type="number" pos:line="364" pos:column="18">1<pos:position pos:line="364" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="365" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><call><name pos:line="366" pos:column="9">debugVerbose<pos:position pos:line="366" pos:column="21"/></name><argument_list pos:line="366" pos:column="21">(<argument><expr><literal type="number" pos:line="366" pos:column="22">2<pos:position pos:line="366" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="366" pos:column="25">"done."<pos:position pos:line="366" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="366" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="34"/></expr_stmt>

        <if pos:line="368" pos:column="9">if <condition pos:line="368" pos:column="12">(<expr><name pos:line="368" pos:column="13">put_file<pos:position pos:line="368" pos:column="21"/></name></expr>)<pos:position pos:line="368" pos:column="22"/></condition><then pos:line="368" pos:column="22"> <block pos:line="368" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="369" pos:column="13">debugVerbose<pos:position pos:line="369" pos:column="25"/></name><argument_list pos:line="369" pos:column="25">(<argument><expr><literal type="number" pos:line="369" pos:column="26">1<pos:position pos:line="369" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="369" pos:column="29">"Sending HTTP request payload ..."<pos:position pos:line="369" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="369" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="65"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="370" pos:column="13">int<pos:position pos:line="370" pos:column="16"/></name></type> <name pos:line="370" pos:column="17">x<pos:position pos:line="370" pos:column="18"/></name></decl>;<pos:position pos:line="370" pos:column="19"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="371" pos:column="13">lseek<pos:position pos:line="371" pos:column="18"/></name><argument_list pos:line="371" pos:column="18">(<argument><expr><name pos:line="371" pos:column="19">put_fd<pos:position pos:line="371" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="371" pos:column="27">0<pos:position pos:line="371" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="371" pos:column="30">SEEK_SET<pos:position pos:line="371" pos:column="38"/></name></expr></argument>)<pos:position pos:line="371" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="40"/></expr_stmt>
            <while pos:line="372" pos:column="13">while <condition pos:line="372" pos:column="19">(<expr><operator pos:line="372" pos:column="20">(<pos:position pos:line="372" pos:column="21"/></operator><name pos:line="372" pos:column="21">x<pos:position pos:line="372" pos:column="22"/></name> <operator pos:line="372" pos:column="23">=<pos:position pos:line="372" pos:column="24"/></operator> <call><name pos:line="372" pos:column="25">read<pos:position pos:line="372" pos:column="29"/></name><argument_list pos:line="372" pos:column="29">(<argument><expr><name pos:line="372" pos:column="30">put_fd<pos:position pos:line="372" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="372" pos:column="38">buf<pos:position pos:line="372" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="372" pos:column="43">sizeof<argument_list pos:line="372" pos:column="49">(<argument><expr><name pos:line="372" pos:column="50">buf<pos:position pos:line="372" pos:column="53"/></name></expr></argument>)<pos:position pos:line="372" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="372" pos:column="55"/></argument_list></call><operator pos:line="372" pos:column="55">)<pos:position pos:line="372" pos:column="56"/></operator> <operator pos:line="372" pos:column="57">&gt;<pos:position pos:line="372" pos:column="61"/></operator> <literal type="number" pos:line="372" pos:column="59">0<pos:position pos:line="372" pos:column="60"/></literal></expr>)<pos:position pos:line="372" pos:column="61"/></condition> <block pos:line="372" pos:column="62">{

                <expr_stmt><expr><name pos:line="374" pos:column="17">x<pos:position pos:line="374" pos:column="18"/></name> <operator pos:line="374" pos:column="19">=<pos:position pos:line="374" pos:column="20"/></operator> <call><name><name pos:line="374" pos:column="21">Transport<pos:position pos:line="374" pos:column="30"/></name><operator pos:line="374" pos:column="30">::<pos:position pos:line="374" pos:column="32"/></operator><name pos:line="374" pos:column="32">Write<pos:position pos:line="374" pos:column="37"/></name></name><argument_list pos:line="374" pos:column="37">(<argument><expr><name pos:line="374" pos:column="38">buf<pos:position pos:line="374" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="374" pos:column="43">x<pos:position pos:line="374" pos:column="44"/></name></expr></argument>)<pos:position pos:line="374" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="46"/></expr_stmt>

                <expr_stmt><expr><name pos:line="376" pos:column="17">total_bytes<pos:position pos:line="376" pos:column="28"/></name> <operator pos:line="376" pos:column="29">+=<pos:position pos:line="376" pos:column="31"/></operator> <name pos:line="376" pos:column="32">x<pos:position pos:line="376" pos:column="33"/></name></expr>;<pos:position pos:line="376" pos:column="34"/></expr_stmt>

                <if pos:line="378" pos:column="17">if <condition pos:line="378" pos:column="20">(<expr><name pos:line="378" pos:column="21">x<pos:position pos:line="378" pos:column="22"/></name> <operator pos:line="378" pos:column="23">&lt;=<pos:position pos:line="378" pos:column="28"/></operator> <literal type="number" pos:line="378" pos:column="26">0<pos:position pos:line="378" pos:column="27"/></literal></expr>)<pos:position pos:line="378" pos:column="28"/></condition><then pos:line="378" pos:column="28">
                    <block type="pseudo"><break pos:line="379" pos:column="21">break;<pos:position pos:line="379" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="380" pos:column="14"/></block></while>

            <if pos:line="382" pos:column="13">if <condition pos:line="382" pos:column="16">(<expr><name pos:line="382" pos:column="17">x<pos:position pos:line="382" pos:column="18"/></name> <operator pos:line="382" pos:column="19">!=<pos:position pos:line="382" pos:column="21"/></operator> <literal type="number" pos:line="382" pos:column="22">0<pos:position pos:line="382" pos:column="23"/></literal></expr>)<pos:position pos:line="382" pos:column="24"/></condition><then pos:line="382" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="383" pos:column="17">std<pos:position pos:line="383" pos:column="20"/></name><operator pos:line="383" pos:column="20">::<pos:position pos:line="383" pos:column="22"/></operator><name pos:line="383" pos:column="22">cerr<pos:position pos:line="383" pos:column="26"/></name></name> <operator pos:line="383" pos:column="27">&lt;&lt;<pos:position pos:line="383" pos:column="35"/></operator> <literal type="string" pos:line="383" pos:column="30">"ERROR: Cannot send file."<pos:position pos:line="383" pos:column="56"/></literal> <operator pos:line="383" pos:column="57">&lt;&lt;<pos:position pos:line="383" pos:column="65"/></operator> <name><name pos:line="383" pos:column="60">std<pos:position pos:line="383" pos:column="63"/></name><operator pos:line="383" pos:column="63">::<pos:position pos:line="383" pos:column="65"/></operator><name pos:line="383" pos:column="65">endl<pos:position pos:line="383" pos:column="69"/></name></name></expr>;<pos:position pos:line="383" pos:column="70"/></expr_stmt></block></then>
            <else pos:line="384" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="385" pos:column="17">debugVerbose<pos:position pos:line="385" pos:column="29"/></name><argument_list pos:line="385" pos:column="29">(<argument><expr><literal type="number" pos:line="385" pos:column="30">1<pos:position pos:line="385" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="385" pos:column="33">"done."<pos:position pos:line="385" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="385" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="42"/></expr_stmt></block></else></if>
        }<pos:position pos:line="386" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="387" pos:column="9">/* Read the data */</comment>

<cpp:if pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">if<pos:position pos:line="389" pos:column="4"/></cpp:directive> <expr><name pos:line="389" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="389" pos:column="20"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="390" pos:column="9">setmode<pos:position pos:line="390" pos:column="16"/></name><argument_list pos:line="390" pos:column="16">(<argument><expr><literal type="number" pos:line="390" pos:column="17">1<pos:position pos:line="390" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="390" pos:column="20">O_BINARY<pos:position pos:line="390" pos:column="28"/></name></expr></argument>)<pos:position pos:line="390" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="391" pos:column="1">#<cpp:directive pos:line="391" pos:column="2">endif<pos:position pos:line="391" pos:column="7"/></cpp:directive></cpp:endif>

        <while pos:line="393" pos:column="9">while <condition pos:line="393" pos:column="15">(<expr><operator pos:line="393" pos:column="16">(<pos:position pos:line="393" pos:column="17"/></operator><name pos:line="393" pos:column="17">len<pos:position pos:line="393" pos:column="20"/></name> <operator pos:line="393" pos:column="21">=<pos:position pos:line="393" pos:column="22"/></operator> <call><name><name pos:line="393" pos:column="23">Transport<pos:position pos:line="393" pos:column="32"/></name><operator pos:line="393" pos:column="32">::<pos:position pos:line="393" pos:column="34"/></operator><name pos:line="393" pos:column="34">Read<pos:position pos:line="393" pos:column="38"/></name></name><argument_list pos:line="393" pos:column="38">(<argument><expr><name pos:line="393" pos:column="39">buf<pos:position pos:line="393" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="393" pos:column="44">sizeof<argument_list pos:line="393" pos:column="50">(<argument><expr><name pos:line="393" pos:column="51">buf<pos:position pos:line="393" pos:column="54"/></name></expr></argument>)<pos:position pos:line="393" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="393" pos:column="56"/></argument_list></call><operator pos:line="393" pos:column="56">)<pos:position pos:line="393" pos:column="57"/></operator> <operator pos:line="393" pos:column="58">&gt;<pos:position pos:line="393" pos:column="62"/></operator> <literal type="number" pos:line="393" pos:column="60">0<pos:position pos:line="393" pos:column="61"/></literal></expr>)<pos:position pos:line="393" pos:column="62"/></condition> <block pos:line="393" pos:column="63">{
            <expr_stmt><expr><name pos:line="394" pos:column="13">fsize<pos:position pos:line="394" pos:column="18"/></name> <operator pos:line="394" pos:column="19">+=<pos:position pos:line="394" pos:column="21"/></operator> <name pos:line="394" pos:column="22">len<pos:position pos:line="394" pos:column="25"/></name></expr>;<pos:position pos:line="394" pos:column="26"/></expr_stmt>

            <if pos:line="396" pos:column="13">if <condition pos:line="396" pos:column="16">(<expr><name pos:line="396" pos:column="17">to_stdout<pos:position pos:line="396" pos:column="26"/></name> <operator pos:line="396" pos:column="27">&amp;&amp;<pos:position pos:line="396" pos:column="37"/></operator> <call><name pos:line="396" pos:column="30">fwrite<pos:position pos:line="396" pos:column="36"/></name><argument_list pos:line="396" pos:column="36">(<argument><expr><name pos:line="396" pos:column="37">buf<pos:position pos:line="396" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="42">len<pos:position pos:line="396" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="396" pos:column="47">1<pos:position pos:line="396" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="396" pos:column="50">stdout<pos:position pos:line="396" pos:column="56"/></name></expr></argument>)<pos:position pos:line="396" pos:column="57"/></argument_list></call> <operator pos:line="396" pos:column="58">!=<pos:position pos:line="396" pos:column="60"/></operator> <literal type="number" pos:line="396" pos:column="61">1<pos:position pos:line="396" pos:column="62"/></literal></expr>)<pos:position pos:line="396" pos:column="63"/></condition><then pos:line="396" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="397" pos:column="17">std<pos:position pos:line="397" pos:column="20"/></name><operator pos:line="397" pos:column="20">::<pos:position pos:line="397" pos:column="22"/></operator><name pos:line="397" pos:column="22">cerr<pos:position pos:line="397" pos:column="26"/></name></name> <operator pos:line="397" pos:column="27">&lt;&lt;<pos:position pos:line="397" pos:column="35"/></operator> <literal type="string" pos:line="397" pos:column="30">"ERROR: writing to stdout: "<pos:position pos:line="397" pos:column="58"/></literal> <operator pos:line="397" pos:column="59">&lt;&lt;<pos:position pos:line="397" pos:column="67"/></operator> <call><name pos:line="397" pos:column="62">xstrerror<pos:position pos:line="397" pos:column="71"/></name><argument_list pos:line="397" pos:column="71">()<pos:position pos:line="397" pos:column="73"/></argument_list></call> <operator pos:line="397" pos:column="74">&lt;&lt;<pos:position pos:line="397" pos:column="82"/></operator> <name><name pos:line="397" pos:column="77">std<pos:position pos:line="397" pos:column="80"/></name><operator pos:line="397" pos:column="80">::<pos:position pos:line="397" pos:column="82"/></operator><name pos:line="397" pos:column="82">endl<pos:position pos:line="397" pos:column="86"/></name></name></expr>;<pos:position pos:line="397" pos:column="87"/></expr_stmt></block></then></if>
        }<pos:position pos:line="398" pos:column="10"/></block></while>

<cpp:if pos:line="400" pos:column="1">#<cpp:directive pos:line="400" pos:column="2">if<pos:position pos:line="400" pos:column="4"/></cpp:directive> <expr><name pos:line="400" pos:column="5">USE_GNUTLS<pos:position pos:line="400" pos:column="15"/></name></expr></cpp:if>
        <if pos:line="401" pos:column="9">if <condition pos:line="401" pos:column="12">(<expr><name><name pos:line="401" pos:column="13">Transport<pos:position pos:line="401" pos:column="22"/></name><operator pos:line="401" pos:column="22">::<pos:position pos:line="401" pos:column="24"/></operator><name pos:line="401" pos:column="24">Config<pos:position pos:line="401" pos:column="30"/></name><operator pos:line="401" pos:column="30">.<pos:position pos:line="401" pos:column="31"/></operator><name pos:line="401" pos:column="31">tlsEnabled<pos:position pos:line="401" pos:column="41"/></name></name></expr>)<pos:position pos:line="401" pos:column="42"/></condition><then pos:line="401" pos:column="42"> <block pos:line="401" pos:column="43">{
            <if pos:line="402" pos:column="13">if <condition pos:line="402" pos:column="16">(<expr><name pos:line="402" pos:column="17">len<pos:position pos:line="402" pos:column="20"/></name> <operator pos:line="402" pos:column="21">==<pos:position pos:line="402" pos:column="23"/></operator> <literal type="number" pos:line="402" pos:column="24">0<pos:position pos:line="402" pos:column="25"/></literal></expr>)<pos:position pos:line="402" pos:column="26"/></condition><then pos:line="402" pos:column="26"> <block pos:line="402" pos:column="27">{
                <expr_stmt><expr><name><name pos:line="403" pos:column="17">std<pos:position pos:line="403" pos:column="20"/></name><operator pos:line="403" pos:column="20">::<pos:position pos:line="403" pos:column="22"/></operator><name pos:line="403" pos:column="22">cerr<pos:position pos:line="403" pos:column="26"/></name></name> <operator pos:line="403" pos:column="27">&lt;&lt;<pos:position pos:line="403" pos:column="35"/></operator> <literal type="string" pos:line="403" pos:column="30">"- Peer has closed the TLS connection"<pos:position pos:line="403" pos:column="68"/></literal> <operator pos:line="403" pos:column="69">&lt;&lt;<pos:position pos:line="403" pos:column="77"/></operator> <name><name pos:line="403" pos:column="72">std<pos:position pos:line="403" pos:column="75"/></name><operator pos:line="403" pos:column="75">::<pos:position pos:line="403" pos:column="77"/></operator><name pos:line="403" pos:column="77">endl<pos:position pos:line="403" pos:column="81"/></name></name></expr>;<pos:position pos:line="403" pos:column="82"/></expr_stmt>
            }<pos:position pos:line="404" pos:column="14"/></block></then> <elseif pos:line="404" pos:column="15">else <if pos:line="404" pos:column="20">if <condition pos:line="404" pos:column="23">(<expr><operator pos:line="404" pos:column="24">!<pos:position pos:line="404" pos:column="25"/></operator><call><name pos:line="404" pos:column="25">gnutls_error_is_fatal<pos:position pos:line="404" pos:column="46"/></name><argument_list pos:line="404" pos:column="46">(<argument><expr><name pos:line="404" pos:column="47">len<pos:position pos:line="404" pos:column="50"/></name></expr></argument>)<pos:position pos:line="404" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="404" pos:column="52"/></condition><then pos:line="404" pos:column="52"> <block pos:line="404" pos:column="53">{
                <expr_stmt><expr><name><name pos:line="405" pos:column="17">std<pos:position pos:line="405" pos:column="20"/></name><operator pos:line="405" pos:column="20">::<pos:position pos:line="405" pos:column="22"/></operator><name pos:line="405" pos:column="22">cerr<pos:position pos:line="405" pos:column="26"/></name></name> <operator pos:line="405" pos:column="27">&lt;&lt;<pos:position pos:line="405" pos:column="35"/></operator> <literal type="string" pos:line="405" pos:column="30">"WARNING: "<pos:position pos:line="405" pos:column="41"/></literal> <operator pos:line="405" pos:column="42">&lt;&lt;<pos:position pos:line="405" pos:column="50"/></operator> <call><name pos:line="405" pos:column="45">gnutls_strerror<pos:position pos:line="405" pos:column="60"/></name><argument_list pos:line="405" pos:column="60">(<argument><expr><name pos:line="405" pos:column="61">len<pos:position pos:line="405" pos:column="64"/></name></expr></argument>)<pos:position pos:line="405" pos:column="65"/></argument_list></call> <operator pos:line="405" pos:column="66">&lt;&lt;<pos:position pos:line="405" pos:column="74"/></operator> <name><name pos:line="405" pos:column="69">std<pos:position pos:line="405" pos:column="72"/></name><operator pos:line="405" pos:column="72">::<pos:position pos:line="405" pos:column="74"/></operator><name pos:line="405" pos:column="74">endl<pos:position pos:line="405" pos:column="78"/></name></name></expr>;<pos:position pos:line="405" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="406" pos:column="14"/></block></then></if></elseif> <else pos:line="406" pos:column="15">else <block pos:line="406" pos:column="20">{
                <expr_stmt><expr><name><name pos:line="407" pos:column="17">std<pos:position pos:line="407" pos:column="20"/></name><operator pos:line="407" pos:column="20">::<pos:position pos:line="407" pos:column="22"/></operator><name pos:line="407" pos:column="22">cerr<pos:position pos:line="407" pos:column="26"/></name></name> <operator pos:line="407" pos:column="27">&lt;&lt;<pos:position pos:line="407" pos:column="35"/></operator> <literal type="string" pos:line="407" pos:column="30">"ERROR: "<pos:position pos:line="407" pos:column="39"/></literal> <operator pos:line="407" pos:column="40">&lt;&lt;<pos:position pos:line="407" pos:column="48"/></operator> <call><name pos:line="407" pos:column="43">gnutls_strerror<pos:position pos:line="407" pos:column="58"/></name><argument_list pos:line="407" pos:column="58">(<argument><expr><name pos:line="407" pos:column="59">len<pos:position pos:line="407" pos:column="62"/></name></expr></argument>)<pos:position pos:line="407" pos:column="63"/></argument_list></call> <operator pos:line="407" pos:column="64">&lt;&lt;<pos:position pos:line="407" pos:column="72"/></operator> <name><name pos:line="407" pos:column="67">std<pos:position pos:line="407" pos:column="70"/></name><operator pos:line="407" pos:column="70">::<pos:position pos:line="407" pos:column="72"/></operator><name pos:line="407" pos:column="72">endl<pos:position pos:line="407" pos:column="76"/></name></name></expr>;<pos:position pos:line="407" pos:column="77"/></expr_stmt>
            }<pos:position pos:line="408" pos:column="14"/></block></else></if>
        }<pos:position pos:line="409" pos:column="10"/></block></then></if>
<cpp:endif pos:line="410" pos:column="1">#<cpp:directive pos:line="410" pos:column="2">endif<pos:position pos:line="410" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">if<pos:position pos:line="412" pos:column="4"/></cpp:directive> <expr><name pos:line="412" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="412" pos:column="20"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="413" pos:column="9">setmode<pos:position pos:line="413" pos:column="16"/></name><argument_list pos:line="413" pos:column="16">(<argument><expr><literal type="number" pos:line="413" pos:column="17">1<pos:position pos:line="413" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="413" pos:column="20">O_TEXT<pos:position pos:line="413" pos:column="26"/></name></expr></argument>)<pos:position pos:line="413" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">endif<pos:position pos:line="414" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name><name pos:line="416" pos:column="9">Transport<pos:position pos:line="416" pos:column="18"/></name><operator pos:line="416" pos:column="18">::<pos:position pos:line="416" pos:column="20"/></operator><name pos:line="416" pos:column="20">CloseConnection<pos:position pos:line="416" pos:column="35"/></name></name><argument_list pos:line="416" pos:column="35">()<pos:position pos:line="416" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="416" pos:column="38"/></expr_stmt>

        <if pos:line="418" pos:column="9">if <condition pos:line="418" pos:column="12">(<expr><call><name><name pos:line="418" pos:column="13">Ping<pos:position pos:line="418" pos:column="17"/></name><operator pos:line="418" pos:column="17">::<pos:position pos:line="418" pos:column="19"/></operator><name pos:line="418" pos:column="19">LoopDone<pos:position pos:line="418" pos:column="27"/></name></name><argument_list pos:line="418" pos:column="27">(<argument><expr><name pos:line="418" pos:column="28">i<pos:position pos:line="418" pos:column="29"/></name></expr></argument>)<pos:position pos:line="418" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="418" pos:column="31"/></condition><then pos:line="418" pos:column="31">
            <block type="pseudo"><break pos:line="419" pos:column="13">break;<pos:position pos:line="419" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="421" pos:column="9">Ping<pos:position pos:line="421" pos:column="13"/></name><operator pos:line="421" pos:column="13">::<pos:position pos:line="421" pos:column="15"/></operator><name pos:line="421" pos:column="15">TimerStop<pos:position pos:line="421" pos:column="24"/></name></name><argument_list pos:line="421" pos:column="24">(<argument><expr><name pos:line="421" pos:column="25">fsize<pos:position pos:line="421" pos:column="30"/></name></expr></argument>)<pos:position pos:line="421" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="422" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name><name pos:line="424" pos:column="5">Ping<pos:position pos:line="424" pos:column="9"/></name><operator pos:line="424" pos:column="9">::<pos:position pos:line="424" pos:column="11"/></operator><name pos:line="424" pos:column="11">DisplayStats<pos:position pos:line="424" pos:column="23"/></name></name><argument_list pos:line="424" pos:column="23">()<pos:position pos:line="424" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="425" pos:column="5">Transport<pos:position pos:line="425" pos:column="14"/></name><operator pos:line="425" pos:column="14">::<pos:position pos:line="425" pos:column="16"/></operator><name pos:line="425" pos:column="16">ShutdownTls<pos:position pos:line="425" pos:column="27"/></name></name><argument_list pos:line="425" pos:column="27">()<pos:position pos:line="425" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="30"/></expr_stmt>
    <return pos:line="426" pos:column="5">return <expr><literal type="number" pos:line="426" pos:column="12">0<pos:position pos:line="426" pos:column="13"/></literal></expr>;<pos:position pos:line="426" pos:column="14"/></return>
}<pos:position pos:line="427" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_945_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayPool<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">dump<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">StoreEntry<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">entry<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">unsigned<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">i<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">theComposite<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">()<pos:position pos:line="4" pos:column="23"/></argument_list></call> <operator pos:line="4" pos:column="24">==<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">storeAppendPrintf<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">entry<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"delay_class %d %s\n"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">i<pos:position pos:line="7" pos:column="54"/></name> <operator pos:line="7" pos:column="55">+<pos:position pos:line="7" pos:column="56"/></operator> <literal type="number" pos:line="7" pos:column="57">1<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="60">pool<pos:position pos:line="7" pos:column="64"/></name><operator pos:line="7" pos:column="64">-&gt;<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="66">theClassTypeLabel<pos:position pos:line="7" pos:column="83"/></name></name><argument_list pos:line="7" pos:column="83">()<pos:position pos:line="7" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="87"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">LOCAL_ARRAY<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">nom<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="28">32<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">snprintf<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">nom<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="19">32<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"delay_access %d"<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">i<pos:position pos:line="11" pos:column="43"/></name> <operator pos:line="11" pos:column="44">+<pos:position pos:line="11" pos:column="45"/></operator> <literal type="number" pos:line="11" pos:column="46">1<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">dump_acl_access<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">entry<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">nom<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">access<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">storeAppendPrintf<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">entry<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="30">"delay_parameters %d"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">i<pos:position pos:line="15" pos:column="54"/></name> <operator pos:line="15" pos:column="55">+<pos:position pos:line="15" pos:column="56"/></operator> <literal type="number" pos:line="15" pos:column="57">1<pos:position pos:line="15" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">theComposite<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">()<pos:position pos:line="17" pos:column="19"/></argument_list></call><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><call><name pos:line="17" pos:column="21">dump<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">entry<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">storeAppendPrintf<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">entry<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="30">"\n"<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

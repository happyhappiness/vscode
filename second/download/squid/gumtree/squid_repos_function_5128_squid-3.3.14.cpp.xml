<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5128_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">User<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">absorb<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">Auth<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">User<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">Pointer<pos:position pos:line="2" pos:column="39"/></name></name></type> <name pos:line="2" pos:column="40">from<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * XXX Incomplete: it should merge in hash references too and ask the module to merge in scheme data
     *  dlink_list proxy_auth_list;
     *  dlink_list proxy_match_cache;
     */</comment>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">29<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">5<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="19">HERE<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">&lt;&lt;<pos:position pos:line="10" pos:column="32"/></operator> <literal type="string" pos:line="10" pos:column="27">"auth_user '"<pos:position pos:line="10" pos:column="40"/></literal> <operator pos:line="10" pos:column="41">&lt;&lt;<pos:position pos:line="10" pos:column="49"/></operator> <name pos:line="10" pos:column="44">from<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">&lt;&lt;<pos:position pos:line="10" pos:column="57"/></operator> <literal type="string" pos:line="10" pos:column="52">"' into auth_user '"<pos:position pos:line="10" pos:column="72"/></literal> <operator pos:line="10" pos:column="73">&lt;&lt;<pos:position pos:line="10" pos:column="81"/></operator> <name pos:line="10" pos:column="76">this<pos:position pos:line="10" pos:column="80"/></name> <operator pos:line="10" pos:column="81">&lt;&lt;<pos:position pos:line="10" pos:column="89"/></operator> <literal type="string" pos:line="10" pos:column="84">"'."<pos:position pos:line="10" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="90"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* absorb the list of IP address sources (for max_user_ip controls) */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">AuthUserIP<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">new_ipdata<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name><name pos:line="14" pos:column="12">from<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">ip_list<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">head<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">!=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">NULL<pos:position pos:line="14" pos:column="38"/></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition> <block pos:line="14" pos:column="40">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">new_ipdata<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <cast type="static" pos:line="15" pos:column="22">static_cast<argument_list type="generic" pos:line="15" pos:column="33">&lt;<argument><expr><name pos:line="15" pos:column="34">AuthUserIP<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">*<pos:position pos:line="15" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="50"/></argument_list><argument_list pos:line="15" pos:column="47">(<argument><expr><name><name pos:line="15" pos:column="48">from<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">ip_list<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">.<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="62">head<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">data<pos:position pos:line="15" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></cast></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt>

        <comment type="block" pos:line="17" pos:column="9">/* If this IP has expired - ignore the expensive merge actions. */</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">new_ipdata<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">ip_expiretime<pos:position pos:line="18" pos:column="38"/></name></name> <operator pos:line="18" pos:column="39">+<pos:position pos:line="18" pos:column="40"/></operator> <name><operator pos:line="18" pos:column="41">::<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">Config<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">authenticateIpTTL<pos:position pos:line="18" pos:column="67"/></name></name> <operator pos:line="18" pos:column="68">&lt;<pos:position pos:line="18" pos:column="72"/></operator> <name pos:line="18" pos:column="70">squid_curtime<pos:position pos:line="18" pos:column="83"/></name></expr>)<pos:position pos:line="18" pos:column="84"/></condition><then pos:line="18" pos:column="84"> <block pos:line="18" pos:column="85">{
            <comment type="block" pos:line="19" pos:column="13">/* This IP has expired - remove from the source list */</comment>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">dlinkDelete<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name><name pos:line="20" pos:column="26">new_ipdata<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">node<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="44">&amp;<pos:position pos:line="20" pos:column="49"/></operator><operator pos:line="20" pos:column="45">(<pos:position pos:line="20" pos:column="46"/></operator><name><name pos:line="20" pos:column="46">from<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">ip_list<pos:position pos:line="20" pos:column="59"/></name></name><operator pos:line="20" pos:column="59">)<pos:position pos:line="20" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">cbdataFree<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">new_ipdata<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <comment type="block" pos:line="22" pos:column="13">/* catch incipient underflow */</comment>
            <expr_stmt><expr><operator pos:line="23" pos:column="13">--<pos:position pos:line="23" pos:column="15"/></operator> <name><name pos:line="23" pos:column="16">from<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">ipcount<pos:position pos:line="23" pos:column="29"/></name></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then> <else pos:line="24" pos:column="11">else <block pos:line="24" pos:column="16">{
            <comment type="block" pos:line="25" pos:column="13">/* add to our list. replace if already present. */</comment>
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">AuthUserIP<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">ipdata<pos:position pos:line="26" pos:column="31"/></name> <init pos:line="26" pos:column="32">= <expr><cast type="static" pos:line="26" pos:column="34">static_cast<argument_list type="generic" pos:line="26" pos:column="45">&lt;<argument><expr><name pos:line="26" pos:column="46">AuthUserIP<pos:position pos:line="26" pos:column="56"/></name> <operator pos:line="26" pos:column="57">*<pos:position pos:line="26" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="26" pos:column="62"/></argument_list><argument_list pos:line="26" pos:column="59">(<argument><expr><name><name pos:line="26" pos:column="60">ip_list<pos:position pos:line="26" pos:column="67"/></name><operator pos:line="26" pos:column="67">.<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="68">head<pos:position pos:line="26" pos:column="72"/></name><operator pos:line="26" pos:column="72">-&gt;<pos:position pos:line="26" pos:column="77"/></operator><name pos:line="26" pos:column="74">data<pos:position pos:line="26" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="26" pos:column="80"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">bool<pos:position pos:line="27" pos:column="17"/></name></type> <name pos:line="27" pos:column="18">found<pos:position pos:line="27" pos:column="23"/></name> <init pos:line="27" pos:column="24">= <expr><literal type="boolean" pos:line="27" pos:column="26">false<pos:position pos:line="27" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="32"/></decl_stmt>
            <while pos:line="28" pos:column="13">while <condition pos:line="28" pos:column="19">(<expr><name pos:line="28" pos:column="20">ipdata<pos:position pos:line="28" pos:column="26"/></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition> <block pos:line="28" pos:column="28">{
                <decl_stmt><decl><type><name pos:line="29" pos:column="17">AuthUserIP<pos:position pos:line="29" pos:column="27"/></name> <modifier pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></modifier></type><name pos:line="29" pos:column="29">tempnode<pos:position pos:line="29" pos:column="37"/></name> <init pos:line="29" pos:column="38">= <expr><cast type="static" pos:line="29" pos:column="40">static_cast<argument_list type="generic" pos:line="29" pos:column="51">&lt;<argument><expr><name pos:line="29" pos:column="52">AuthUserIP<pos:position pos:line="29" pos:column="62"/></name> <operator pos:line="29" pos:column="63">*<pos:position pos:line="29" pos:column="64"/></operator></expr></argument>&gt;<pos:position pos:line="29" pos:column="68"/></argument_list><argument_list pos:line="29" pos:column="65">(<argument><expr><name><name pos:line="29" pos:column="66">ipdata<pos:position pos:line="29" pos:column="72"/></name><operator pos:line="29" pos:column="72">-&gt;<pos:position pos:line="29" pos:column="77"/></operator><name pos:line="29" pos:column="74">node<pos:position pos:line="29" pos:column="78"/></name><operator pos:line="29" pos:column="78">.<pos:position pos:line="29" pos:column="79"/></operator><name pos:line="29" pos:column="79">next<pos:position pos:line="29" pos:column="83"/></name><operator pos:line="29" pos:column="83">-&gt;<pos:position pos:line="29" pos:column="88"/></operator><name pos:line="29" pos:column="85">data<pos:position pos:line="29" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="90"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="29" pos:column="91"/></decl_stmt>

                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name><name pos:line="31" pos:column="21">ipdata<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">ipaddr<pos:position pos:line="31" pos:column="35"/></name></name> <operator pos:line="31" pos:column="36">==<pos:position pos:line="31" pos:column="38"/></operator> <name><name pos:line="31" pos:column="39">new_ipdata<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">ipaddr<pos:position pos:line="31" pos:column="57"/></name></name></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58"> <block pos:line="31" pos:column="59">{
                    <comment type="block" pos:line="32" pos:column="21">/* This IP has already been seen. */</comment>
                    <expr_stmt><expr><name pos:line="33" pos:column="21">found<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <literal type="boolean" pos:line="33" pos:column="29">true<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
                    <comment type="block" pos:line="34" pos:column="21">/* update IP ttl and stop searching. */</comment>
                    <expr_stmt><expr><name><name pos:line="35" pos:column="21">ipdata<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">ip_expiretime<pos:position pos:line="35" pos:column="42"/></name></name> <operator pos:line="35" pos:column="43">=<pos:position pos:line="35" pos:column="44"/></operator> <call><name pos:line="35" pos:column="45">max<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name><name pos:line="35" pos:column="49">ipdata<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">ip_expiretime<pos:position pos:line="35" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="72">new_ipdata<pos:position pos:line="35" pos:column="82"/></name><operator pos:line="35" pos:column="82">-&gt;<pos:position pos:line="35" pos:column="87"/></operator><name pos:line="35" pos:column="84">ip_expiretime<pos:position pos:line="35" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="99"/></expr_stmt>
                    <break pos:line="36" pos:column="21">break;<pos:position pos:line="36" pos:column="27"/></break>
                }<pos:position pos:line="37" pos:column="18"/></block></then> <elseif pos:line="37" pos:column="19">else <if pos:line="37" pos:column="24">if <condition pos:line="37" pos:column="27">(<expr><name><name pos:line="37" pos:column="28">ipdata<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">ip_expiretime<pos:position pos:line="37" pos:column="49"/></name></name> <operator pos:line="37" pos:column="50">+<pos:position pos:line="37" pos:column="51"/></operator> <name><operator pos:line="37" pos:column="52">::<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">Config<pos:position pos:line="37" pos:column="60"/></name><operator pos:line="37" pos:column="60">.<pos:position pos:line="37" pos:column="61"/></operator><name pos:line="37" pos:column="61">authenticateIpTTL<pos:position pos:line="37" pos:column="78"/></name></name> <operator pos:line="37" pos:column="79">&lt;<pos:position pos:line="37" pos:column="83"/></operator> <name pos:line="37" pos:column="81">squid_curtime<pos:position pos:line="37" pos:column="94"/></name></expr>)<pos:position pos:line="37" pos:column="95"/></condition><then pos:line="37" pos:column="95"> <block pos:line="37" pos:column="96">{
                    <comment type="block" pos:line="38" pos:column="21">/* This IP has expired - cleanup the destination list */</comment>
                    <expr_stmt><expr><call><name pos:line="39" pos:column="21">dlinkDelete<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name><name pos:line="39" pos:column="34">ipdata<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">node<pos:position pos:line="39" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="48">&amp;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="49">ip_list<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">cbdataFree<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">ipdata<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
                    <comment type="block" pos:line="41" pos:column="21">/* catch incipient underflow */</comment>
                    <expr_stmt><expr><call><name pos:line="42" pos:column="21">assert<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">ipcount<pos:position pos:line="42" pos:column="35"/></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="43" pos:column="21">--<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">ipcount<pos:position pos:line="43" pos:column="31"/></name></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif></if>

                <expr_stmt><expr><name pos:line="46" pos:column="17">ipdata<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">tempnode<pos:position pos:line="46" pos:column="34"/></name></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></while>

            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><operator pos:line="49" pos:column="17">!<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">found<pos:position pos:line="49" pos:column="23"/></name></expr>)<pos:position pos:line="49" pos:column="24"/></condition><then pos:line="49" pos:column="24"> <block pos:line="49" pos:column="25">{
                <comment type="block" pos:line="50" pos:column="17">/* This ip is not in the seen list. Add it. */</comment>
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">dlinkAddTail<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><operator pos:line="51" pos:column="30">&amp;<pos:position pos:line="51" pos:column="35"/></operator><name><name pos:line="51" pos:column="31">new_ipdata<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">-&gt;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="43">node<pos:position pos:line="51" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="49">&amp;<pos:position pos:line="51" pos:column="54"/></operator><name><name pos:line="51" pos:column="50">ipdata<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">node<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="64">&amp;<pos:position pos:line="51" pos:column="69"/></operator><name pos:line="51" pos:column="65">ip_list<pos:position pos:line="51" pos:column="72"/></name></expr></argument>)<pos:position pos:line="51" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="52" pos:column="17">++<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">ipcount<pos:position pos:line="52" pos:column="26"/></name></expr>;<pos:position pos:line="52" pos:column="27"/></expr_stmt>
                <comment type="block" pos:line="53" pos:column="17">/* remove from the source list */</comment>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">dlinkDelete<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><operator pos:line="54" pos:column="29">&amp;<pos:position pos:line="54" pos:column="34"/></operator><name><name pos:line="54" pos:column="30">new_ipdata<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">node<pos:position pos:line="54" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="48">&amp;<pos:position pos:line="54" pos:column="53"/></operator><operator pos:line="54" pos:column="49">(<pos:position pos:line="54" pos:column="50"/></operator><name><name pos:line="54" pos:column="50">from<pos:position pos:line="54" pos:column="54"/></name><operator pos:line="54" pos:column="54">-&gt;<pos:position pos:line="54" pos:column="59"/></operator><name pos:line="54" pos:column="56">ip_list<pos:position pos:line="54" pos:column="63"/></name></name><operator pos:line="54" pos:column="63">)<pos:position pos:line="54" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="55" pos:column="17">++<pos:position pos:line="55" pos:column="19"/></operator><name><name pos:line="55" pos:column="19">from<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">-&gt;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="25">ipcount<pos:position pos:line="55" pos:column="32"/></name></name></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
    }<pos:position pos:line="58" pos:column="6"/></block></while>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5248_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLProxyAuth<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">matchProxyAuth<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">ACLChecklist<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">cl<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ACLFilledChecklist<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">checklist<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">Filled<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">cl<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">checklist<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">request<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">flags<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">.<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">sslBumped<pos:position pos:line="5" pos:column="44"/></name></name></expr>)<pos:position pos:line="5" pos:column="45"/></condition><then pos:line="5" pos:column="45">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then></if> <comment type="line" pos:line="6" pos:column="19">// AuthenticateAcl() already handled this bumped request</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">authenticateUserAuthenticated<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><call><name pos:line="7" pos:column="40">Filled<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name pos:line="7" pos:column="47">checklist<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call><operator pos:line="7" pos:column="57">-&gt;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="59">auth_user_request<pos:position pos:line="7" pos:column="76"/></name></expr></argument>)<pos:position pos:line="7" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="78"/></condition><then pos:line="7" pos:column="78"> <block pos:line="7" pos:column="79">{
        <return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="10" pos:column="5">/* check to see if we have matched the user-acl before */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">result<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><call><name pos:line="11" pos:column="18">cacheMatchAcl<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><call><name><name pos:line="11" pos:column="33">checklist<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">auth_user_request<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">-&gt;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="63">user<pos:position pos:line="11" pos:column="67"/></name></name><argument_list pos:line="11" pos:column="67">()<pos:position pos:line="11" pos:column="69"/></argument_list></call><operator pos:line="11" pos:column="69">-&gt;<pos:position pos:line="11" pos:column="74"/></operator><name pos:line="11" pos:column="71">proxy_match_cache<pos:position pos:line="11" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="90">checklist<pos:position pos:line="11" pos:column="99"/></name></expr></argument>)<pos:position pos:line="11" pos:column="100"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="101"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">checklist<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">auth_user_request<pos:position pos:line="12" pos:column="33"/></name></name> <operator pos:line="12" pos:column="34">=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">result<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2169_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemObject<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">dump<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">()<pos:position pos:line="2" pos:column="18"/></parameter_list> <specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">data_hdr<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">.<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">dump<pos:position pos:line="4" pos:column="18"/></name></name><argument_list pos:line="4" pos:column="18">()<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="5" pos:column="5">0<pos:position pos:line="5" pos:column="6"/></literal></expr></cpp:if>
    <comment type="block" pos:line="6" pos:column="5">/* do we want this one? */</comment>
    debugs(20, 1, "MemObject-&gt;data.origin_offset: " &lt;&lt; (data_hdr.head ? data_hdr.head-&gt;nodeBuffer.offset : 0));
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">20<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"MemObject-&gt;start_ping: "<pos:position pos:line="10" pos:column="47"/></literal> <operator pos:line="10" pos:column="45">&lt;&lt;<pos:position pos:line="10" pos:column="53"/></operator> <name><name pos:line="10" pos:column="48">start_ping<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">.<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="59">tv_sec<pos:position pos:line="10" pos:column="65"/></name></name>  <operator pos:line="10" pos:column="67">&lt;&lt;<pos:position pos:line="10" pos:column="75"/></operator> <literal type="string" pos:line="10" pos:column="70">"."<pos:position pos:line="10" pos:column="73"/></literal><operator pos:line="10" pos:column="73">&lt;&lt;<pos:position pos:line="10" pos:column="81"/></operator> <call><name><name pos:line="10" pos:column="76">std<pos:position pos:line="10" pos:column="79"/></name><operator pos:line="10" pos:column="79">::<pos:position pos:line="10" pos:column="81"/></operator><name pos:line="10" pos:column="81">setfill<pos:position pos:line="10" pos:column="88"/></name></name><argument_list pos:line="10" pos:column="88">(<argument><expr><literal type="char" pos:line="10" pos:column="89">'0'<pos:position pos:line="10" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="93"/></argument_list></call> <operator pos:line="10" pos:column="94">&lt;&lt;<pos:position pos:line="10" pos:column="102"/></operator> <call><name><name pos:line="10" pos:column="97">std<pos:position pos:line="10" pos:column="100"/></name><operator pos:line="10" pos:column="100">::<pos:position pos:line="10" pos:column="102"/></operator><name pos:line="10" pos:column="102">setw<pos:position pos:line="10" pos:column="106"/></name></name><argument_list pos:line="10" pos:column="106">(<argument><expr><literal type="number" pos:line="10" pos:column="107">6<pos:position pos:line="10" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="109"/></argument_list></call> <operator pos:line="10" pos:column="110">&lt;&lt;<pos:position pos:line="10" pos:column="118"/></operator> <name><name pos:line="10" pos:column="113">start_ping<pos:position pos:line="10" pos:column="123"/></name><operator pos:line="10" pos:column="123">.<pos:position pos:line="10" pos:column="124"/></operator><name pos:line="10" pos:column="124">tv_usec<pos:position pos:line="10" pos:column="131"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="133"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">20<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"MemObject-&gt;inmem_hi: "<pos:position pos:line="11" pos:column="45"/></literal> <operator pos:line="11" pos:column="43">&lt;&lt;<pos:position pos:line="11" pos:column="51"/></operator> <call><name><name pos:line="11" pos:column="46">data_hdr<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">.<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">endOffset<pos:position pos:line="11" pos:column="64"/></name></name><argument_list pos:line="11" pos:column="64">()<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">20<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"MemObject-&gt;inmem_lo: "<pos:position pos:line="12" pos:column="45"/></literal> <operator pos:line="12" pos:column="43">&lt;&lt;<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="46">inmem_lo<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">20<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"MemObject-&gt;nclients: "<pos:position pos:line="13" pos:column="45"/></literal> <operator pos:line="13" pos:column="43">&lt;&lt;<pos:position pos:line="13" pos:column="51"/></operator> <name pos:line="13" pos:column="46">nclients<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">20<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"MemObject-&gt;reply: "<pos:position pos:line="14" pos:column="42"/></literal> <operator pos:line="14" pos:column="40">&lt;&lt;<pos:position pos:line="14" pos:column="48"/></operator> <name pos:line="14" pos:column="43">_reply<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">20<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"MemObject-&gt;request: "<pos:position pos:line="15" pos:column="44"/></literal> <operator pos:line="15" pos:column="42">&lt;&lt;<pos:position pos:line="15" pos:column="50"/></operator> <name pos:line="15" pos:column="45">request<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">20<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"MemObject-&gt;log_url: "<pos:position pos:line="16" pos:column="44"/></literal> <operator pos:line="16" pos:column="42">&lt;&lt;<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="45">log_url<pos:position pos:line="16" pos:column="52"/></name> <operator pos:line="16" pos:column="53">&lt;&lt;<pos:position pos:line="16" pos:column="61"/></operator> <literal type="string" pos:line="16" pos:column="56">" "<pos:position pos:line="16" pos:column="59"/></literal> <operator pos:line="16" pos:column="60">&lt;&lt;<pos:position pos:line="16" pos:column="68"/></operator> <call><name pos:line="16" pos:column="63">checkNullString<pos:position pos:line="16" pos:column="78"/></name><argument_list pos:line="16" pos:column="78">(<argument><expr><name pos:line="16" pos:column="79">log_url<pos:position pos:line="16" pos:column="86"/></name></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="89"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6568_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">netdbPurgeLRU<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">netdbEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">n<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">netdbEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">list<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">k<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">list_count<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">removed<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">list<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">netdbEntry<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator><call><name pos:line="9" pos:column="27">xcalloc<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><call><name><name pos:line="9" pos:column="35">netdbEntry<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">::<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">UseCount<pos:position pos:line="9" pos:column="55"/></name></name><argument_list pos:line="9" pos:column="55">()<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="59">sizeof<argument_list pos:line="9" pos:column="65">(<argument><expr><name pos:line="9" pos:column="66">netdbEntry<pos:position pos:line="9" pos:column="76"/></name> <operator pos:line="9" pos:column="77">*<pos:position pos:line="9" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">hash_first<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">addr_table<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">n<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <operator pos:line="12" pos:column="17">(<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">netdbEntry<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">hash_next<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><name pos:line="12" pos:column="42">addr_table<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call><operator pos:line="12" pos:column="53">)<pos:position pos:line="12" pos:column="54"/></operator></expr>)<pos:position pos:line="12" pos:column="55"/></condition> <block pos:line="12" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">assert<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">list_count<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&lt;<pos:position pos:line="13" pos:column="31"/></operator> <call><name><name pos:line="13" pos:column="29">netdbEntry<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">::<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">UseCount<pos:position pos:line="13" pos:column="49"/></name></name><argument_list pos:line="13" pos:column="49">()<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">list<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">+<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">list_count<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">)<pos:position pos:line="14" pos:column="29"/></operator> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">n<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">list_count<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">qsort<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">char<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><operator pos:line="18" pos:column="18">)<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">list<pos:position pos:line="18" pos:column="24"/></name></expr></argument>,
          <argument><expr><name pos:line="19" pos:column="11">list_count<pos:position pos:line="19" pos:column="21"/></name></expr></argument>,
          <argument><expr><sizeof pos:line="20" pos:column="11">sizeof<argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">netdbEntry<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">*<pos:position pos:line="20" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></sizeof></expr></argument>,
          <argument><expr><name pos:line="21" pos:column="11">netdbLRU<pos:position pos:line="21" pos:column="19"/></name></expr></argument>)<pos:position pos:line="21" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">k<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></init> <condition><expr><name pos:line="23" pos:column="17">k<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="21">list_count<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></condition> <incr><expr><operator pos:line="23" pos:column="33">++<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">k<pos:position pos:line="23" pos:column="36"/></name></expr></incr>)<pos:position pos:line="23" pos:column="37"/></control> <block pos:line="23" pos:column="38">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name><name pos:line="24" pos:column="13">netdbEntry<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">::<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">UseCount<pos:position pos:line="24" pos:column="33"/></name></name><argument_list pos:line="24" pos:column="33">()<pos:position pos:line="24" pos:column="35"/></argument_list></call> <operator pos:line="24" pos:column="36">&lt;<pos:position pos:line="24" pos:column="40"/></operator> <name><name pos:line="24" pos:column="38">Config<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">.<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="45">Netdb<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">low<pos:position pos:line="24" pos:column="54"/></name></name></expr>)<pos:position pos:line="24" pos:column="55"/></condition><then pos:line="24" pos:column="55">
            <block type="pseudo"><break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">netdbRelease<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><operator pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></operator><operator pos:line="27" pos:column="23">(<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">list<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">+<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">k<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="29" pos:column="9">++<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">removed<pos:position pos:line="29" pos:column="18"/></name></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">xfree<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">list<pos:position pos:line="32" pos:column="15"/></name></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

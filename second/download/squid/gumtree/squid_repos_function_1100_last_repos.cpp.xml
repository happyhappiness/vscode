<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1100_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">icp_opcode<pos:position pos:line="1" pos:column="11"/></name></type>
<name><name pos:line="2" pos:column="1">_icp_common_t<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">getOpCode<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list> <specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">opcode<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">&gt;<pos:position pos:line="4" pos:column="20"/></operator> <cast type="static" pos:line="4" pos:column="18">static_cast<argument_list type="generic" pos:line="4" pos:column="29">&lt;<argument><expr><name pos:line="4" pos:column="30">char<pos:position pos:line="4" pos:column="34"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="38"/></argument_list><argument_list pos:line="4" pos:column="35">(<argument><expr><name><name pos:line="4" pos:column="36">icp_opcode<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">::<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">ICP_END<pos:position pos:line="4" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></cast></expr>)<pos:position pos:line="4" pos:column="57"/></condition><then pos:line="4" pos:column="57">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">ICP_INVALID<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></return></block></then></if>

    <return pos:line="7" pos:column="5">return <expr><cast type="static" pos:line="7" pos:column="12">static_cast<argument_list type="generic" pos:line="7" pos:column="23">&lt;<argument><expr><name pos:line="7" pos:column="24">icp_opcode<pos:position pos:line="7" pos:column="34"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="38"/></argument_list><argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">opcode<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></cast></expr>;<pos:position pos:line="7" pos:column="44"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1990_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">BodyPipe<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">postConsume<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">size_t<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">size<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">isCheckedOut<pos:position pos:line="4" pos:column="25"/></name></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">theGetSize<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">+=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">size<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">91<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="15">7<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="18">HERE<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;&lt;<pos:position pos:line="6" pos:column="31"/></operator> <literal type="string" pos:line="6" pos:column="26">"consumed "<pos:position pos:line="6" pos:column="37"/></literal> <operator pos:line="6" pos:column="38">&lt;&lt;<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="41">size<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">&lt;&lt;<pos:position pos:line="6" pos:column="54"/></operator> <literal type="string" pos:line="6" pos:column="49">" bytes"<pos:position pos:line="6" pos:column="57"/></literal> <operator pos:line="6" pos:column="58">&lt;&lt;<pos:position pos:line="6" pos:column="66"/></operator> <call><name pos:line="6" pos:column="61">status<pos:position pos:line="6" pos:column="67"/></name><argument_list pos:line="6" pos:column="67">()<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="71"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">mayNeedMoreData<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
        <decl_stmt><decl><type><name><name pos:line="8" pos:column="9">AsyncCall<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">::<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">Pointer<pos:position pos:line="8" pos:column="27"/></name></name></type> <name pos:line="8" pos:column="28">call<pos:position pos:line="8" pos:column="32"/></name><init pos:line="8" pos:column="32">=  <expr><call><name pos:line="8" pos:column="35">asyncCall<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><literal type="number" pos:line="8" pos:column="45">91<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="49">7<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>,
                                            <argument><expr><literal type="string" pos:line="9" pos:column="45">"BodyProducer::noteMoreBodySpaceAvailable"<pos:position pos:line="9" pos:column="87"/></literal></expr></argument>,
                                            <argument><expr><call><name pos:line="10" pos:column="45">BodyProducerDialer<pos:position pos:line="10" pos:column="63"/></name><argument_list pos:line="10" pos:column="63">(<argument><expr><name pos:line="10" pos:column="64">theProducer<pos:position pos:line="10" pos:column="75"/></name></expr></argument>,
                                                               <argument><expr><operator pos:line="11" pos:column="64">&amp;<pos:position pos:line="11" pos:column="69"/></operator><name><name pos:line="11" pos:column="65">BodyProducer<pos:position pos:line="11" pos:column="77"/></name><operator pos:line="11" pos:column="77">::<pos:position pos:line="11" pos:column="79"/></operator><name pos:line="11" pos:column="79">noteMoreBodySpaceAvailable<pos:position pos:line="11" pos:column="105"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="107">this<pos:position pos:line="11" pos:column="111"/></name></expr></argument>)<pos:position pos:line="11" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="113"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="114"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ScheduleCallHere<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">call<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4702_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">UFSStoreState<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">openDone<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">closing<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></argument>,<argument><expr><name pos:line="5" pos:column="20">HERE<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">&lt;&lt;<pos:position pos:line="5" pos:column="33"/></operator> <literal type="string" pos:line="5" pos:column="28">"already closing in openDone()!?"<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></expr_stmt></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">theFile<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">error<pos:position pos:line="7" pos:column="23"/></name></name><argument_list pos:line="7" pos:column="23">()<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">tryClosing<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">FILE_MODE<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">mode<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">O_WRONLY<pos:position pos:line="12" pos:column="36"/></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <block pos:line="12" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">drainWriteQueue<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>

    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><call><name pos:line="15" pos:column="17">FILE_MODE<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">mode<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">O_RDONLY<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">)<pos:position pos:line="15" pos:column="45"/></operator> <operator pos:line="15" pos:column="46">&amp;&amp;<pos:position pos:line="15" pos:column="56"/></operator> <operator pos:line="15" pos:column="49">!<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">closing<pos:position pos:line="15" pos:column="57"/></name></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58"> <block pos:line="15" pos:column="59">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">kickReadQueue<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">()<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29">
            <block type="pseudo"><return pos:line="17" pos:column="13">return;<pos:position pos:line="17" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">flags<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">try_closing<pos:position pos:line="20" pos:column="26"/></name></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">tryClosing<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">()<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">79<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">3<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="19">"UFSStoreState::openDone: exiting"<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

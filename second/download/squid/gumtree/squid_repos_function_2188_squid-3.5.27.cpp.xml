<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2188_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">StoreEntry<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">findPreviouslyCachedEntry<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">StoreEntry<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">newEntry<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <block pos:line="2" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name><name pos:line="3" pos:column="12">newEntry<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">-&gt;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="22">mem_obj<pos:position pos:line="3" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="31"/></expr_stmt>
    <return pos:line="4" pos:column="5">return <expr><ternary><condition><expr><name><name pos:line="4" pos:column="12">newEntry<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">mem_obj<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">-&gt;<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="31">request<pos:position pos:line="4" pos:column="38"/></name></name></expr> ?<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40">
           <expr><call><name pos:line="5" pos:column="12">storeGetPublicByRequest<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name><name pos:line="5" pos:column="36">newEntry<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">mem_obj<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">-&gt;<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="55">request<pos:position pos:line="5" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="64"/></then><else pos:line="5" pos:column="64">:
           <expr><call><name pos:line="6" pos:column="12">storeGetPublic<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><call><name><name pos:line="6" pos:column="27">newEntry<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">mem_obj<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">storeId<pos:position pos:line="6" pos:column="53"/></name></name><argument_list pos:line="6" pos:column="53">()<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="57">newEntry<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">-&gt;<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="67">mem_obj<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">-&gt;<pos:position pos:line="6" pos:column="79"/></operator><name pos:line="6" pos:column="76">method<pos:position pos:line="6" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="84"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

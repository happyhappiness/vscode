<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1809_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">NotePairs<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">addStrList<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">key<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">values<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">strValues<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">values<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">item<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ilen<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><call><name pos:line="8" pos:column="12">strListGetItem<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="28">strValues<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="39">','<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="44">&amp;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="45">item<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="51">&amp;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="52">ilen<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="58">&amp;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="59">pos<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="64"/></condition> <block pos:line="8" pos:column="65">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">String<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">v<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">v<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">append<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">item<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">ilen<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">entries<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">push_back<pos:position pos:line="11" pos:column="26"/></name></name><argument_list pos:line="11" pos:column="26">(<argument><expr><operator pos:line="11" pos:column="27">new<pos:position pos:line="11" pos:column="30"/></operator> <call><name><name pos:line="11" pos:column="31">NotePairs<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">::<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">Entry<pos:position pos:line="11" pos:column="47"/></name></name><argument_list pos:line="11" pos:column="47">(<argument><expr><name pos:line="11" pos:column="48">key<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><call><name><name pos:line="11" pos:column="53">v<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">.<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">termedBuf<pos:position pos:line="11" pos:column="64"/></name></name><argument_list pos:line="11" pos:column="64">()<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

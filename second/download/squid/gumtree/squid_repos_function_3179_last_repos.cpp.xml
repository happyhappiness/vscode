<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3179_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">UrnState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">getHost<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">SBuf<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">&amp;<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="31">urlpath<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" format="doxygen" pos:line="4" pos:column="5">/** FIXME: this appears to be parsing the URL. *very* badly. */</comment>
    <comment type="block" pos:line="5" pos:column="5">/*   a proper encapsulated URI/URL type needs to clear this up. */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">p<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name><name pos:line="7" pos:column="14">urlpath<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">find<pos:position pos:line="7" pos:column="26"/></name></name><argument_list pos:line="7" pos:column="26">(<argument><expr><literal type="char" pos:line="7" pos:column="27">':'<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call><operator pos:line="7" pos:column="31">)<pos:position pos:line="7" pos:column="32"/></operator> <operator pos:line="7" pos:column="33">!=<pos:position pos:line="7" pos:column="35"/></operator> <name><name pos:line="7" pos:column="36">SBuf<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">::<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">npos<pos:position pos:line="7" pos:column="46"/></name></name></expr>)<pos:position pos:line="7" pos:column="47"/></condition><then pos:line="7" pos:column="47">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><call><name pos:line="8" pos:column="16">SBufToCstring<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><call><name><name pos:line="8" pos:column="30">urlpath<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">.<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">substr<pos:position pos:line="8" pos:column="44"/></name></name><argument_list pos:line="8" pos:column="44">(<argument><expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">p<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-<pos:position pos:line="8" pos:column="50"/></operator><literal type="number" pos:line="8" pos:column="50">1<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></return></block></then></if>

    <return pos:line="10" pos:column="5">return <expr><call><name pos:line="10" pos:column="12">SBufToCstring<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">urlpath<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

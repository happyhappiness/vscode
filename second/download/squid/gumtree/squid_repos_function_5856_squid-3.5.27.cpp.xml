<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5856_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int32_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Digest<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">User<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">ttl<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list> <specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int32_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">global_ttl<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><cast type="static" pos:line="4" pos:column="26">static_cast<argument_list type="generic" pos:line="4" pos:column="37">&lt;<argument><expr><name pos:line="4" pos:column="38">int32_t<pos:position pos:line="4" pos:column="45"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="49"/></argument_list><argument_list pos:line="4" pos:column="46">(<argument><expr><name pos:line="4" pos:column="47">expiretime<pos:position pos:line="4" pos:column="57"/></name> <operator pos:line="4" pos:column="58">-<pos:position pos:line="4" pos:column="59"/></operator> <name pos:line="4" pos:column="60">squid_curtime<pos:position pos:line="4" pos:column="73"/></name> <operator pos:line="4" pos:column="74">+<pos:position pos:line="4" pos:column="75"/></operator> <name><operator pos:line="4" pos:column="76">::<pos:position pos:line="4" pos:column="78"/></operator><name pos:line="4" pos:column="78">Config<pos:position pos:line="4" pos:column="84"/></name><operator pos:line="4" pos:column="84">.<pos:position pos:line="4" pos:column="85"/></operator><name pos:line="4" pos:column="85">authenticateTTL<pos:position pos:line="4" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="101"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="102"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* find the longest lasting nonce. */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int32_t<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">latest_nonce<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><operator pos:line="7" pos:column="28">-<pos:position pos:line="7" pos:column="29"/></operator><literal type="number" pos:line="7" pos:column="29">1<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dlink_node<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">link<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><name><name pos:line="8" pos:column="24">nonces<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">head<pos:position pos:line="8" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">link<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition> <block pos:line="9" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">digest_nonce_h<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">nonce<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><cast type="static" pos:line="10" pos:column="33">static_cast<argument_list type="generic" pos:line="10" pos:column="44">&lt;<argument><expr><name pos:line="10" pos:column="45">digest_nonce_h<pos:position pos:line="10" pos:column="59"/></name> <operator pos:line="10" pos:column="60">*<pos:position pos:line="10" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="65"/></argument_list><argument_list pos:line="10" pos:column="62">(<argument><expr><name><name pos:line="10" pos:column="63">link<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">-&gt;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="69">data<pos:position pos:line="10" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">nonce<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">flags<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">.<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">valid<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">&amp;&amp;<pos:position pos:line="11" pos:column="42"/></operator> <name><name pos:line="11" pos:column="35">nonce<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">noncedata<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">.<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="52">creationtime<pos:position pos:line="11" pos:column="64"/></name></name> <operator pos:line="11" pos:column="65">&gt;<pos:position pos:line="11" pos:column="69"/></operator> <name pos:line="11" pos:column="67">latest_nonce<pos:position pos:line="11" pos:column="79"/></name></expr>)<pos:position pos:line="11" pos:column="80"/></condition><then pos:line="11" pos:column="80">
            <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="13">latest_nonce<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="28">nonce<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">noncedata<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">.<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">creationtime<pos:position pos:line="12" pos:column="57"/></name></name></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="14" pos:column="9">link<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name><name pos:line="14" pos:column="16">link<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">next<pos:position pos:line="14" pos:column="26"/></name></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></while>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">latest_nonce<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">==<pos:position pos:line="16" pos:column="24"/></operator> <operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">min<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><operator pos:line="17" pos:column="20">-<pos:position pos:line="17" pos:column="21"/></operator><literal type="number" pos:line="17" pos:column="21">1<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">global_ttl<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int32_t<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">nonce_ttl<pos:position pos:line="19" pos:column="22"/></name> <init pos:line="19" pos:column="23">= <expr><name pos:line="19" pos:column="25">latest_nonce<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">-<pos:position pos:line="19" pos:column="39"/></operator> <name><name pos:line="19" pos:column="40">current_time<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">.<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">tv_sec<pos:position pos:line="19" pos:column="59"/></name></name> <operator pos:line="19" pos:column="60">+<pos:position pos:line="19" pos:column="61"/></operator> <cast type="static" pos:line="19" pos:column="62">static_cast<argument_list type="generic" pos:line="19" pos:column="73">&lt;<argument><expr><name pos:line="19" pos:column="74">Config<pos:position pos:line="19" pos:column="80"/></name><operator pos:line="19" pos:column="80">*<pos:position pos:line="19" pos:column="81"/></operator></expr></argument>&gt;<pos:position pos:line="19" pos:column="85"/></argument_list><argument_list pos:line="19" pos:column="82">(<argument><expr><call><name><name pos:line="19" pos:column="83">Auth<pos:position pos:line="19" pos:column="87"/></name><operator pos:line="19" pos:column="87">::<pos:position pos:line="19" pos:column="89"/></operator><name pos:line="19" pos:column="89">Config<pos:position pos:line="19" pos:column="95"/></name><operator pos:line="19" pos:column="95">::<pos:position pos:line="19" pos:column="97"/></operator><name pos:line="19" pos:column="97">Find<pos:position pos:line="19" pos:column="101"/></name></name><argument_list pos:line="19" pos:column="101">(<argument><expr><literal type="string" pos:line="19" pos:column="102">"digest"<pos:position pos:line="19" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="112"/></argument_list></cast><operator pos:line="19" pos:column="112">-&gt;<pos:position pos:line="19" pos:column="117"/></operator><name pos:line="19" pos:column="114">noncemaxduration<pos:position pos:line="19" pos:column="130"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="131"/></decl_stmt>

    <return pos:line="21" pos:column="5">return <expr><call><name pos:line="21" pos:column="12">min<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">nonce_ttl<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="27">global_ttl<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

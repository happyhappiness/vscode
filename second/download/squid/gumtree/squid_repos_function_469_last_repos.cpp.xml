<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_469_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">HttpReply<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">validatorsMatch<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">HttpReply<pos:position pos:line="2" pos:column="37"/></name> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">otherRep<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list> <specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">one<pos:position pos:line="4" pos:column="15"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="16">two<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">otherRep<pos:position pos:line="5" pos:column="21"/></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* Numbers first - easiest to check */</comment>
    <comment type="block" pos:line="7" pos:column="5">/* Content-Length */</comment>
    <comment type="block" pos:line="8" pos:column="5">/* TODO: remove -1 bypass */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">content_length<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">!=<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">otherRep<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">content_length<pos:position pos:line="10" pos:column="51"/></name></name>
            <operator pos:line="11" pos:column="13">&amp;&amp;<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="16">content_length<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&gt;<pos:position pos:line="11" pos:column="35"/></operator> <operator pos:line="11" pos:column="33">-<pos:position pos:line="11" pos:column="34"/></operator><literal type="number" pos:line="11" pos:column="34">1<pos:position pos:line="11" pos:column="35"/></literal> <operator pos:line="11" pos:column="36">&amp;&amp;<pos:position pos:line="11" pos:column="46"/></operator>
            <name><name pos:line="12" pos:column="13">otherRep<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">content_length<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">&gt;<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="40">-<pos:position pos:line="12" pos:column="41"/></operator><literal type="number" pos:line="12" pos:column="41">1<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* ETag */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">one<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name><name pos:line="16" pos:column="11">header<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">getStrOrList<pos:position pos:line="16" pos:column="30"/></name></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name><name pos:line="16" pos:column="31">Http<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">::<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="37">HdrType<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">::<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">ETAG<pos:position pos:line="16" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">two<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name><name pos:line="18" pos:column="11">otherRep<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">header<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">getStrOrList<pos:position pos:line="18" pos:column="40"/></name></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name><name pos:line="18" pos:column="41">Http<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">::<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">HdrType<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">::<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">ETAG<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name><name pos:line="20" pos:column="9">one<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">size<pos:position pos:line="20" pos:column="17"/></name></name><argument_list pos:line="20" pos:column="17">()<pos:position pos:line="20" pos:column="19"/></argument_list></call><operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal> <operator pos:line="20" pos:column="23">||<pos:position pos:line="20" pos:column="25"/></operator> <call><name><name pos:line="20" pos:column="26">two<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">.<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">size<pos:position pos:line="20" pos:column="34"/></name></name><argument_list pos:line="20" pos:column="34">()<pos:position pos:line="20" pos:column="36"/></argument_list></call><operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator><literal type="number" pos:line="20" pos:column="38">0<pos:position pos:line="20" pos:column="39"/></literal> <operator pos:line="20" pos:column="40">||<pos:position pos:line="20" pos:column="42"/></operator> <call><name><name pos:line="20" pos:column="43">one<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">caseCmp<pos:position pos:line="20" pos:column="54"/></name></name><argument_list pos:line="20" pos:column="54">(<argument><expr><name pos:line="20" pos:column="55">two<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call><operator pos:line="20" pos:column="59">!=<pos:position pos:line="20" pos:column="61"/></operator><literal type="number" pos:line="20" pos:column="61">0<pos:position pos:line="20" pos:column="62"/></literal></expr> )<pos:position pos:line="20" pos:column="64"/></condition><then pos:line="20" pos:column="64"> <block pos:line="20" pos:column="65">{
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">one<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">clean<pos:position pos:line="21" pos:column="18"/></name></name><argument_list pos:line="21" pos:column="18">()<pos:position pos:line="21" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">two<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">clean<pos:position pos:line="22" pos:column="18"/></name></name><argument_list pos:line="22" pos:column="18">()<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">last_modified<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">!=<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="26">otherRep<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">last_modified<pos:position pos:line="26" pos:column="49"/></name></name></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50">
        <block type="pseudo"><return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* MD5 */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">one<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name><name pos:line="30" pos:column="11">header<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">getStrOrList<pos:position pos:line="30" pos:column="30"/></name></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name><name pos:line="30" pos:column="31">Http<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">::<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">HdrType<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">::<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">CONTENT_MD5<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name pos:line="32" pos:column="5">two<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <call><name><name pos:line="32" pos:column="11">otherRep<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">header<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">getStrOrList<pos:position pos:line="32" pos:column="40"/></name></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name><name pos:line="32" pos:column="41">Http<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">::<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">HdrType<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">::<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="56">CONTENT_MD5<pos:position pos:line="32" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name><name pos:line="34" pos:column="9">one<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">size<pos:position pos:line="34" pos:column="17"/></name></name><argument_list pos:line="34" pos:column="17">()<pos:position pos:line="34" pos:column="19"/></argument_list></call><operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator><literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal> <operator pos:line="34" pos:column="23">||<pos:position pos:line="34" pos:column="25"/></operator> <call><name><name pos:line="34" pos:column="26">two<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">size<pos:position pos:line="34" pos:column="34"/></name></name><argument_list pos:line="34" pos:column="34">()<pos:position pos:line="34" pos:column="36"/></argument_list></call><operator pos:line="34" pos:column="36">==<pos:position pos:line="34" pos:column="38"/></operator><literal type="number" pos:line="34" pos:column="38">0<pos:position pos:line="34" pos:column="39"/></literal> <operator pos:line="34" pos:column="40">||<pos:position pos:line="34" pos:column="42"/></operator> <call><name><name pos:line="34" pos:column="43">one<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">.<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="47">caseCmp<pos:position pos:line="34" pos:column="54"/></name></name><argument_list pos:line="34" pos:column="54">(<argument><expr><name pos:line="34" pos:column="55">two<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call><operator pos:line="34" pos:column="59">!=<pos:position pos:line="34" pos:column="61"/></operator><literal type="number" pos:line="34" pos:column="61">0<pos:position pos:line="34" pos:column="62"/></literal></expr> )<pos:position pos:line="34" pos:column="64"/></condition><then pos:line="34" pos:column="64"> <block pos:line="34" pos:column="65">{
        <expr_stmt><expr><call><name><name pos:line="35" pos:column="9">one<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">clean<pos:position pos:line="35" pos:column="18"/></name></name><argument_list pos:line="35" pos:column="18">()<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="36" pos:column="9">two<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">.<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">clean<pos:position pos:line="36" pos:column="18"/></name></name><argument_list pos:line="36" pos:column="18">()<pos:position pos:line="36" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <return pos:line="40" pos:column="5">return <expr><literal type="number" pos:line="40" pos:column="12">1<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

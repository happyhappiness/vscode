<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6197_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">logfile_mod_syslog_open<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">Logfile<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">lf<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">path<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">size_t<pos:position pos:line="2" pos:column="63"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">int<pos:position pos:line="2" pos:column="68"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">lf<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">-&gt;<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="9">f_close<pos:position pos:line="4" pos:column="16"/></name></name> <operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">logfile_mod_syslog_close<pos:position pos:line="4" pos:column="43"/></name></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">lf<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">f_linewrite<pos:position pos:line="5" pos:column="20"/></name></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">logfile_mod_syslog_writeline<pos:position pos:line="5" pos:column="51"/></name></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">lf<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">f_linestart<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">logfile_mod_syslog_linestart<pos:position pos:line="6" pos:column="51"/></name></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">lf<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">f_lineend<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">logfile_mod_syslog_lineend<pos:position pos:line="7" pos:column="47"/></name></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">lf<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">f_flush<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">logfile_mod_syslog_flush<pos:position pos:line="8" pos:column="43"/></name></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">lf<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">f_rotate<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">logfile_mod_syslog_rotate<pos:position pos:line="9" pos:column="45"/></name></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">l_syslog_t<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">ll<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><cast type="static" pos:line="11" pos:column="22">static_cast<argument_list type="generic" pos:line="11" pos:column="33">&lt;<argument><expr><name pos:line="11" pos:column="34">l_syslog_t<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">*<pos:position pos:line="11" pos:column="45"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="49"/></argument_list><argument_list pos:line="11" pos:column="46">(<argument><expr><call><name pos:line="11" pos:column="47">xcalloc<pos:position pos:line="11" pos:column="54"/></name><argument_list pos:line="11" pos:column="54">(<argument><expr><literal type="number" pos:line="11" pos:column="55">1<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="58">sizeof<argument_list pos:line="11" pos:column="64">(<argument><expr><operator pos:line="11" pos:column="65">*<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="66">ll<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="11" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">lf<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">data<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">ll<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">ll<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">syslog_priority<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">LOG_INFO<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">path<pos:position pos:line="16" pos:column="13"/></name><index pos:line="16" pos:column="13">[<expr><literal type="number" pos:line="16" pos:column="14">6<pos:position pos:line="16" pos:column="15"/></literal></expr>]<pos:position pos:line="16" pos:column="16"/></index></name> <operator pos:line="16" pos:column="17">!=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="char" pos:line="16" pos:column="20">'\0'<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">priority<pos:position pos:line="17" pos:column="23"/></name> <init pos:line="17" pos:column="24">= <expr><call><name pos:line="17" pos:column="26">xstrdup<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">path<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">facility<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">char<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">*<pos:position pos:line="18" pos:column="33"/></operator><operator pos:line="18" pos:column="33">)<pos:position pos:line="18" pos:column="34"/></operator> <call><name pos:line="18" pos:column="35">strchr<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">priority<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="52">'.'<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="57"/></decl_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">facility<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="13">facility<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">char<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></operator><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator> <call><name pos:line="20" pos:column="33">strchr<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">priority<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="50">'|'<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt></block></then></if>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">facility<pos:position pos:line="21" pos:column="21"/></name></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22"> <block pos:line="21" pos:column="23">{
            <expr_stmt><expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">facility<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="char" pos:line="22" pos:column="25">'\0'<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="23" pos:column="13">++<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">facility<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">ll<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">syslog_priority<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">|=<pos:position pos:line="24" pos:column="35"/></operator> <call><name pos:line="24" pos:column="36">syslog_ntoa<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">facility<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">ll<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">syslog_priority<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">|=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">syslog_ntoa<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">priority<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">xfree<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">priority<pos:position pos:line="27" pos:column="23"/></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">ll<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">syslog_priority<pos:position pos:line="28" pos:column="33"/></name></name> <operator pos:line="28" pos:column="34">&amp;<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="36">PRIORITY_MASK<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">)<pos:position pos:line="28" pos:column="50"/></operator> <operator pos:line="28" pos:column="51">==<pos:position pos:line="28" pos:column="53"/></operator> <literal type="number" pos:line="28" pos:column="54">0<pos:position pos:line="28" pos:column="55"/></literal></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="13">ll<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">syslog_priority<pos:position pos:line="29" pos:column="32"/></name></name> <operator pos:line="29" pos:column="33">|=<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="36">LOG_INFO<pos:position pos:line="29" pos:column="44"/></name></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">1<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

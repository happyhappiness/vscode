<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1281_squid-3.1.23.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">String<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">operator <name pos:line="2" pos:column="18">!=<pos:position pos:line="2" pos:column="20"/></name></name></name> <parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">String<pos:position pos:line="2" pos:column="28"/></name> <specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <modifier pos:line="2" pos:column="35">&amp;<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="36">that<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list> <specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><literal type="number" pos:line="4" pos:column="9">0<pos:position pos:line="4" pos:column="10"/></literal> <operator pos:line="4" pos:column="11">==<pos:position pos:line="4" pos:column="13"/></operator> <call><name><name pos:line="4" pos:column="14">this<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">cmp<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">that<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <return pos:line="7" pos:column="5">return <expr><literal type="boolean" pos:line="7" pos:column="12">true<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

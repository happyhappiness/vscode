<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_877_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">whoisWriteComplete<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">Comm<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ConnectionPointer<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">buf<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">size_t<pos:position pos:line="2" pos:column="70"/></name></type> <name pos:line="2" pos:column="71">size<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="77">Comm<pos:position pos:line="2" pos:column="81"/></name><operator pos:line="2" pos:column="81">::<pos:position pos:line="2" pos:column="83"/></operator><name pos:line="2" pos:column="83">Flag<pos:position pos:line="2" pos:column="87"/></name></name></type> <name pos:line="2" pos:column="88">flag<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="94">int<pos:position pos:line="2" pos:column="97"/></name></type> <name pos:line="2" pos:column="98">xerrno<pos:position pos:line="2" pos:column="104"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="106">void<pos:position pos:line="2" pos:column="110"/></name> <modifier pos:line="2" pos:column="111">*<pos:position pos:line="2" pos:column="112"/></modifier></type><name pos:line="2" pos:column="112">data<pos:position pos:line="2" pos:column="116"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="117"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">xfree<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><name pos:line="4" pos:column="11">buf<pos:position pos:line="4" pos:column="14"/></name></expr></argument>)<pos:position pos:line="4" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="16"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

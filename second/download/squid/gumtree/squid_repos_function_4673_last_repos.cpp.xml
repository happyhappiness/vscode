<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4673_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Server<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">processParsedRequest<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name><name pos:line="2" pos:column="41">Http<pos:position pos:line="2" pos:column="45"/></name><operator pos:line="2" pos:column="45">::<pos:position pos:line="2" pos:column="47"/></operator><name pos:line="2" pos:column="47">StreamPointer<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">context<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">buildHttpRequest<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">context<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ClientHttpRequest<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">http<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name><name pos:line="7" pos:column="31">context<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">http<pos:position pos:line="7" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">HttpRequest<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">Pointer<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">request<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name><name pos:line="8" pos:column="36">http<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">request<pos:position pos:line="8" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name><name pos:line="10" pos:column="9">request<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">header<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">has<pos:position pos:line="10" pos:column="28"/></name></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">Http<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">::<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">HdrType<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">::<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">EXPECT<pos:position pos:line="10" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52"> <block pos:line="10" pos:column="53">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">String<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">expect<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><call><name><name pos:line="11" pos:column="31">request<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">header<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">getList<pos:position pos:line="11" pos:column="54"/></name></name><argument_list pos:line="11" pos:column="54">(<argument><expr><name><name pos:line="11" pos:column="55">Http<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">::<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">HdrType<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">::<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="70">EXPECT<pos:position pos:line="11" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="78"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">bool<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">supportedExpect<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><operator pos:line="12" pos:column="38">(<pos:position pos:line="12" pos:column="39"/></operator><call><name><name pos:line="12" pos:column="39">expect<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">caseCmp<pos:position pos:line="12" pos:column="53"/></name></name><argument_list pos:line="12" pos:column="53">(<argument><expr><literal type="string" pos:line="12" pos:column="54">"100-continue"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call> <operator pos:line="12" pos:column="70">==<pos:position pos:line="12" pos:column="72"/></operator> <literal type="number" pos:line="12" pos:column="73">0<pos:position pos:line="12" pos:column="74"/></literal><operator pos:line="12" pos:column="74">)<pos:position pos:line="12" pos:column="75"/></operator></expr></init></decl>;<pos:position pos:line="12" pos:column="76"/></decl_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">supportedExpect<pos:position pos:line="13" pos:column="29"/></name></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <block pos:line="13" pos:column="31">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">clientStreamNode<pos:position pos:line="14" pos:column="29"/></name> <modifier pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></modifier></type><name pos:line="14" pos:column="31">node<pos:position pos:line="14" pos:column="35"/></name> <init pos:line="14" pos:column="36">= <expr><call><name><name pos:line="14" pos:column="38">context<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">getClientReplyContext<pos:position pos:line="14" pos:column="68"/></name></name><argument_list pos:line="14" pos:column="68">()<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="71"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">quitAfterError<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><call><name><name pos:line="15" pos:column="28">request<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">getRaw<pos:position pos:line="15" pos:column="42"/></name></name><argument_list pos:line="15" pos:column="42">()<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
            <comment type="line" pos:line="16" pos:column="13">// setLogUri should called before repContext-&gt;setReplyToError</comment>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">setLogUri<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">http<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="29">urlCanonicalClean<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><call><name><name pos:line="17" pos:column="47">request<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">.<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="55">getRaw<pos:position pos:line="17" pos:column="61"/></name></name><argument_list pos:line="17" pos:column="61">()<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">clientReplyContext<pos:position pos:line="18" pos:column="31"/></name> <modifier pos:line="18" pos:column="32">*<pos:position pos:line="18" pos:column="33"/></modifier></type><name pos:line="18" pos:column="33">repContext<pos:position pos:line="18" pos:column="43"/></name> <init pos:line="18" pos:column="44">= <expr><cast type="dynamic" pos:line="18" pos:column="46">dynamic_cast<argument_list type="generic" pos:line="18" pos:column="58">&lt;<argument><expr><name pos:line="18" pos:column="59">clientReplyContext<pos:position pos:line="18" pos:column="77"/></name> <operator pos:line="18" pos:column="78">*<pos:position pos:line="18" pos:column="79"/></operator></expr></argument>&gt;<pos:position pos:line="18" pos:column="83"/></argument_list><argument_list pos:line="18" pos:column="80">(<argument><expr><call><name><name pos:line="18" pos:column="81">node<pos:position pos:line="18" pos:column="85"/></name><operator pos:line="18" pos:column="85">-&gt;<pos:position pos:line="18" pos:column="90"/></operator><name pos:line="18" pos:column="87">data<pos:position pos:line="18" pos:column="91"/></name><operator pos:line="18" pos:column="91">.<pos:position pos:line="18" pos:column="92"/></operator><name pos:line="18" pos:column="92">getRaw<pos:position pos:line="18" pos:column="98"/></name></name><argument_list pos:line="18" pos:column="98">()<pos:position pos:line="18" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="101"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="18" pos:column="102"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">assert<pos:position pos:line="19" pos:column="19"/></name> <argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">repContext<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">repContext<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">setReplyToError<pos:position pos:line="20" pos:column="40"/></name></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">ERR_INVALID_REQ<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="58">Http<pos:position pos:line="20" pos:column="62"/></name><operator pos:line="20" pos:column="62">::<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="64">scExpectationFailed<pos:position pos:line="20" pos:column="83"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="85">request<pos:position pos:line="20" pos:column="92"/></name><operator pos:line="20" pos:column="92">-&gt;<pos:position pos:line="20" pos:column="97"/></operator><name pos:line="20" pos:column="94">method<pos:position pos:line="20" pos:column="100"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="102">http<pos:position pos:line="20" pos:column="106"/></name><operator pos:line="20" pos:column="106">-&gt;<pos:position pos:line="20" pos:column="111"/></operator><name pos:line="20" pos:column="108">uri<pos:position pos:line="20" pos:column="111"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="21" pos:column="41">clientConnection<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">-&gt;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="59">remote<pos:position pos:line="21" pos:column="65"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="21" pos:column="67">request<pos:position pos:line="21" pos:column="74"/></name><operator pos:line="21" pos:column="74">.<pos:position pos:line="21" pos:column="75"/></operator><name pos:line="21" pos:column="75">getRaw<pos:position pos:line="21" pos:column="81"/></name></name><argument_list pos:line="21" pos:column="81">()<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="85">NULL<pos:position pos:line="21" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="91">NULL<pos:position pos:line="21" pos:column="95"/></name></expr></argument>)<pos:position pos:line="21" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">assert<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name><name pos:line="22" pos:column="20">context<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">http<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">out<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">offset<pos:position pos:line="22" pos:column="45"/></name></name> <operator pos:line="22" pos:column="46">==<pos:position pos:line="22" pos:column="48"/></operator> <literal type="number" pos:line="22" pos:column="49">0<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">context<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">pullData<pos:position pos:line="23" pos:column="30"/></name></name><argument_list pos:line="23" pos:column="30">()<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">clientProcessRequestFinished<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">this<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">request<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
            <return pos:line="25" pos:column="13">return;<pos:position pos:line="25" pos:column="20"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">Config<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">accessList<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">forceRequestBodyContinuation<pos:position pos:line="28" pos:column="59"/></name></name></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60"> <block pos:line="28" pos:column="61">{
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">ACLFilledChecklist<pos:position pos:line="29" pos:column="31"/></name></type> <name pos:line="29" pos:column="32">bodyContinuationCheck<pos:position pos:line="29" pos:column="53"/></name><argument_list pos:line="29" pos:column="53">(<argument><expr><name><name pos:line="29" pos:column="54">Config<pos:position pos:line="29" pos:column="60"/></name><operator pos:line="29" pos:column="60">.<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="61">accessList<pos:position pos:line="29" pos:column="71"/></name><operator pos:line="29" pos:column="71">.<pos:position pos:line="29" pos:column="72"/></operator><name pos:line="29" pos:column="72">forceRequestBodyContinuation<pos:position pos:line="29" pos:column="100"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="29" pos:column="102">request<pos:position pos:line="29" pos:column="109"/></name><operator pos:line="29" pos:column="109">.<pos:position pos:line="29" pos:column="110"/></operator><name pos:line="29" pos:column="110">getRaw<pos:position pos:line="29" pos:column="116"/></name></name><argument_list pos:line="29" pos:column="116">()<pos:position pos:line="29" pos:column="118"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="120">NULL<pos:position pos:line="29" pos:column="124"/></name></expr></argument>)<pos:position pos:line="29" pos:column="125"/></argument_list></decl>;<pos:position pos:line="29" pos:column="126"/></decl_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><call><name><name pos:line="30" pos:column="17">bodyContinuationCheck<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">.<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">fastCheck<pos:position pos:line="30" pos:column="48"/></name></name><argument_list pos:line="30" pos:column="48">()<pos:position pos:line="30" pos:column="50"/></argument_list></call><operator pos:line="30" pos:column="50">.<pos:position pos:line="30" pos:column="51"/></operator><call><name pos:line="30" pos:column="51">allowed<pos:position pos:line="30" pos:column="58"/></name><argument_list pos:line="30" pos:column="58">()<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="61"/></condition><then pos:line="30" pos:column="61"> <block pos:line="30" pos:column="62">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">debugs<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="number" pos:line="31" pos:column="24">33<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="28">5<pos:position pos:line="31" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="31">"Body Continuation forced"<pos:position pos:line="31" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="32" pos:column="17">request<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">forcedBodyContinuation<pos:position pos:line="32" pos:column="48"/></name></name> <operator pos:line="32" pos:column="49">=<pos:position pos:line="32" pos:column="50"/></operator> <literal type="boolean" pos:line="32" pos:column="51">true<pos:position pos:line="32" pos:column="55"/></literal></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>
                <comment type="line" pos:line="33" pos:column="17">//sendControlMsg</comment>
                <decl_stmt><decl><type><name><name pos:line="34" pos:column="17">HttpReply<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">::<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">Pointer<pos:position pos:line="34" pos:column="35"/></name></name></type> <name pos:line="34" pos:column="36">rep<pos:position pos:line="34" pos:column="39"/></name> <init pos:line="34" pos:column="40">= <expr><operator pos:line="34" pos:column="42">new<pos:position pos:line="34" pos:column="45"/></operator> <name pos:line="34" pos:column="46">HttpReply<pos:position pos:line="34" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="56"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="35" pos:column="17">rep<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">sline<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">set<pos:position pos:line="35" pos:column="31"/></name></name><argument_list pos:line="35" pos:column="31">(<argument><expr><call><name><name pos:line="35" pos:column="32">Http<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">::<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">ProtocolVersion<pos:position pos:line="35" pos:column="53"/></name></name><argument_list pos:line="35" pos:column="53">()<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="57">Http<pos:position pos:line="35" pos:column="61"/></name><operator pos:line="35" pos:column="61">::<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">scContinue<pos:position pos:line="35" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>

                <typedef pos:line="37" pos:column="17">typedef <type><name><name pos:line="37" pos:column="25">UnaryMemFunT<pos:position pos:line="37" pos:column="37"/></name><argument_list type="generic" pos:line="37" pos:column="37">&lt;<argument><expr><name><name pos:line="37" pos:column="38">Http1<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">::<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">Server<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="53">Http<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">::<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="59">StreamPointer<pos:position pos:line="37" pos:column="72"/></name></name></expr></argument>&gt;<pos:position pos:line="37" pos:column="76"/></argument_list></name></type> <name pos:line="37" pos:column="74">CbDialer<pos:position pos:line="37" pos:column="82"/></name>;<pos:position pos:line="37" pos:column="83"/></typedef>
                <decl_stmt><decl><type><specifier pos:line="38" pos:column="17">const<pos:position pos:line="38" pos:column="22"/></specifier> <name><name pos:line="38" pos:column="23">AsyncCall<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">::<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">Pointer<pos:position pos:line="38" pos:column="41"/></name></name></type> <name pos:line="38" pos:column="42">cb<pos:position pos:line="38" pos:column="44"/></name> <init pos:line="38" pos:column="45">= <expr><call><name pos:line="38" pos:column="47">asyncCall<pos:position pos:line="38" pos:column="56"/></name><argument_list pos:line="38" pos:column="56">(<argument><expr><literal type="number" pos:line="38" pos:column="57">11<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="61">3<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>,  <argument><expr><literal type="string" pos:line="38" pos:column="65">"Http1::Server::proceedAfterBodyContinuation"<pos:position pos:line="38" pos:column="110"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="112">CbDialer<pos:position pos:line="38" pos:column="120"/></name><argument_list pos:line="38" pos:column="120">(<argument><expr><name pos:line="38" pos:column="121">this<pos:position pos:line="38" pos:column="125"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="127">&amp;<pos:position pos:line="38" pos:column="132"/></operator><name><name pos:line="38" pos:column="128">Http1<pos:position pos:line="38" pos:column="133"/></name><operator pos:line="38" pos:column="133">::<pos:position pos:line="38" pos:column="135"/></operator><name pos:line="38" pos:column="135">Server<pos:position pos:line="38" pos:column="141"/></name><operator pos:line="38" pos:column="141">::<pos:position pos:line="38" pos:column="143"/></operator><name pos:line="38" pos:column="143">proceedAfterBodyContinuation<pos:position pos:line="38" pos:column="171"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="173">Http<pos:position pos:line="38" pos:column="177"/></name><operator pos:line="38" pos:column="177">::<pos:position pos:line="38" pos:column="179"/></operator><name pos:line="38" pos:column="179">StreamPointer<pos:position pos:line="38" pos:column="192"/></name></name><argument_list pos:line="38" pos:column="192">(<argument><expr><name pos:line="38" pos:column="193">context<pos:position pos:line="38" pos:column="200"/></name></expr></argument>)<pos:position pos:line="38" pos:column="201"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="202"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="203"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="204"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">sendControlMsg<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><call><name pos:line="39" pos:column="32">HttpControlMsg<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">rep<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="52">cb<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
                <return pos:line="40" pos:column="17">return;<pos:position pos:line="40" pos:column="24"/></return>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">clientProcessRequest<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">this<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="32">parser_<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><call><name><name pos:line="44" pos:column="41">context<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">.<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="49">getRaw<pos:position pos:line="44" pos:column="55"/></name></name><argument_list pos:line="44" pos:column="55">()<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

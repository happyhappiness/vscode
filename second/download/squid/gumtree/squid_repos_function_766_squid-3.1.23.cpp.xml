<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_766_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientHttpRequest<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">doCallouts<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">calloutContext<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="6" pos:column="5">/*Save the original request for logging purposes*/</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">calloutContext<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">http<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">al<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">request<pos:position pos:line="7" pos:column="42"/></name></name></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">calloutContext<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">http<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">al<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">request<pos:position pos:line="8" pos:column="41"/></name></name> <operator pos:line="8" pos:column="42">=<pos:position pos:line="8" pos:column="43"/></operator> <call><name pos:line="8" pos:column="44">HTTPMSGLOCK<pos:position pos:line="8" pos:column="55"/></name><argument_list pos:line="8" pos:column="55">(<argument><expr><name pos:line="8" pos:column="56">request<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">calloutContext<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">http_access_done<pos:position pos:line="10" pos:column="42"/></name></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">83<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">HERE<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&lt;&lt;<pos:position pos:line="11" pos:column="36"/></operator> <literal type="string" pos:line="11" pos:column="31">"Doing calloutContext-&gt;clientAccessCheck()"<pos:position pos:line="11" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">calloutContext<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">http_access_done<pos:position pos:line="12" pos:column="41"/></name></name> <operator pos:line="12" pos:column="42">=<pos:position pos:line="12" pos:column="43"/></operator> <literal type="boolean" pos:line="12" pos:column="44">true<pos:position pos:line="12" pos:column="48"/></literal></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">calloutContext<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">clientAccessCheck<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">()<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">USE_ADAPTATION<pos:position pos:line="17" pos:column="19"/></name></expr></cpp:if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">calloutContext<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">adaptation_acl_check_done<pos:position pos:line="18" pos:column="51"/></name></name></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52"> <block pos:line="18" pos:column="53">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">calloutContext<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">adaptation_acl_check_done<pos:position pos:line="19" pos:column="50"/></name></name> <operator pos:line="19" pos:column="51">=<pos:position pos:line="19" pos:column="52"/></operator> <literal type="boolean" pos:line="19" pos:column="53">true<pos:position pos:line="19" pos:column="57"/></literal></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name><name pos:line="20" pos:column="13">Adaptation<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">::<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">AccessCheck<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">::<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">Start<pos:position pos:line="20" pos:column="43"/></name></name><argument_list pos:line="20" pos:column="43">(
                    <argument><expr><name><name pos:line="21" pos:column="21">Adaptation<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">::<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">methodReqmod<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">Adaptation<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">::<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="59">pointPreCache<pos:position pos:line="21" pos:column="72"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="22" pos:column="21">request<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="30">NULL<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">adaptationAclCheckDoneWrapper<pos:position pos:line="22" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="67">calloutContext<pos:position pos:line="22" pos:column="81"/></name></expr></argument>)<pos:position pos:line="22" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="83"/></condition><then pos:line="22" pos:column="83">
            <block type="pseudo"><return pos:line="23" pos:column="13">return;<pos:position pos:line="23" pos:column="20"/></return></block></then></if> <comment type="line" pos:line="23" pos:column="21">// will call callback</comment>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name><name pos:line="27" pos:column="10">calloutContext<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">redirect_done<pos:position pos:line="27" pos:column="39"/></name></name></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40"> <block pos:line="27" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">calloutContext<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">redirect_done<pos:position pos:line="28" pos:column="38"/></name></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <literal type="boolean" pos:line="28" pos:column="41">true<pos:position pos:line="28" pos:column="45"/></literal></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">assert<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name><name pos:line="29" pos:column="16">calloutContext<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">redirect_state<pos:position pos:line="29" pos:column="46"/></name></name> <operator pos:line="29" pos:column="47">==<pos:position pos:line="29" pos:column="49"/></operator> <name pos:line="29" pos:column="50">REDIRECT_NONE<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">Config<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">Program<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">redirect<pos:position pos:line="31" pos:column="36"/></name></name></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37"> <block pos:line="31" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">83<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="24">3<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">HERE<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">&lt;&lt;<pos:position pos:line="32" pos:column="40"/></operator> <literal type="string" pos:line="32" pos:column="35">"Doing calloutContext-&gt;clientRedirectStart()"<pos:position pos:line="32" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">calloutContext<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">redirect_state<pos:position pos:line="33" pos:column="43"/></name></name> <operator pos:line="33" pos:column="44">=<pos:position pos:line="33" pos:column="45"/></operator> <name pos:line="33" pos:column="46">REDIRECT_PENDING<pos:position pos:line="33" pos:column="62"/></name></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">calloutContext<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">clientRedirectStart<pos:position pos:line="34" pos:column="48"/></name></name><argument_list pos:line="34" pos:column="48">()<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
            <return pos:line="35" pos:column="13">return;<pos:position pos:line="35" pos:column="20"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><name><name pos:line="39" pos:column="10">calloutContext<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">adapted_http_access_done<pos:position pos:line="39" pos:column="50"/></name></name></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51"> <block pos:line="39" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debugs<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="number" pos:line="40" pos:column="16">83<pos:position pos:line="40" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="20">3<pos:position pos:line="40" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="23">HERE<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">&lt;&lt;<pos:position pos:line="40" pos:column="36"/></operator> <literal type="string" pos:line="40" pos:column="31">"Doing calloutContext-&gt;clientAccessCheck2()"<pos:position pos:line="40" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">calloutContext<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">-&gt;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="25">adapted_http_access_done<pos:position pos:line="41" pos:column="49"/></name></name> <operator pos:line="41" pos:column="50">=<pos:position pos:line="41" pos:column="51"/></operator> <literal type="boolean" pos:line="41" pos:column="52">true<pos:position pos:line="41" pos:column="56"/></literal></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="42" pos:column="9">calloutContext<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">-&gt;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="25">clientAccessCheck2<pos:position pos:line="42" pos:column="43"/></name></name><argument_list pos:line="42" pos:column="43">()<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
        <return pos:line="43" pos:column="9">return;<pos:position pos:line="43" pos:column="16"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><name><name pos:line="46" pos:column="10">calloutContext<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">interpreted_req_hdrs<pos:position pos:line="46" pos:column="46"/></name></name></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47"> <block pos:line="46" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">debugs<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><literal type="number" pos:line="47" pos:column="16">83<pos:position pos:line="47" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="20">3<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="23">HERE<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">&lt;&lt;<pos:position pos:line="47" pos:column="36"/></operator> <literal type="string" pos:line="47" pos:column="31">"Doing clientInterpretRequestHeaders()"<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">calloutContext<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">interpreted_req_hdrs<pos:position pos:line="48" pos:column="45"/></name></name> <operator pos:line="48" pos:column="46">=<pos:position pos:line="48" pos:column="47"/></operator> <literal type="number" pos:line="48" pos:column="48">1<pos:position pos:line="48" pos:column="49"/></literal></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">clientInterpretRequestHeaders<pos:position pos:line="49" pos:column="38"/></name><argument_list pos:line="49" pos:column="38">(<argument><expr><name pos:line="49" pos:column="39">this<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><name><name pos:line="52" pos:column="10">calloutContext<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">no_cache_done<pos:position pos:line="52" pos:column="39"/></name></name></expr>)<pos:position pos:line="52" pos:column="40"/></condition><then pos:line="52" pos:column="40"> <block pos:line="52" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">calloutContext<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">no_cache_done<pos:position pos:line="53" pos:column="38"/></name></name> <operator pos:line="53" pos:column="39">=<pos:position pos:line="53" pos:column="40"/></operator> <literal type="boolean" pos:line="53" pos:column="41">true<pos:position pos:line="53" pos:column="45"/></literal></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">Config<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">.<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="20">accessList<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">.<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">noCache<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">&amp;&amp;<pos:position pos:line="55" pos:column="49"/></operator> <name><name pos:line="55" pos:column="42">request<pos:position pos:line="55" pos:column="49"/></name><operator pos:line="55" pos:column="49">-&gt;<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="51">flags<pos:position pos:line="55" pos:column="56"/></name><operator pos:line="55" pos:column="56">.<pos:position pos:line="55" pos:column="57"/></operator><name pos:line="55" pos:column="57">cachable<pos:position pos:line="55" pos:column="65"/></name></name></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66"> <block pos:line="55" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">debugs<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><literal type="number" pos:line="56" pos:column="20">83<pos:position pos:line="56" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="24">3<pos:position pos:line="56" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="27">HERE<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">&lt;&lt;<pos:position pos:line="56" pos:column="40"/></operator> <literal type="string" pos:line="56" pos:column="35">"Doing calloutContext-&gt;checkNoCache()"<pos:position pos:line="56" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="57" pos:column="13">calloutContext<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">checkNoCache<pos:position pos:line="57" pos:column="41"/></name></name><argument_list pos:line="57" pos:column="41">()<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
            <return pos:line="58" pos:column="13">return;<pos:position pos:line="58" pos:column="20"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><name><name pos:line="62" pos:column="10">calloutContext<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">-&gt;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="26">clientside_tos_done<pos:position pos:line="62" pos:column="45"/></name></name></expr>)<pos:position pos:line="62" pos:column="46"/></condition><then pos:line="62" pos:column="46"> <block pos:line="62" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">calloutContext<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">clientside_tos_done<pos:position pos:line="63" pos:column="44"/></name></name> <operator pos:line="63" pos:column="45">=<pos:position pos:line="63" pos:column="46"/></operator> <literal type="boolean" pos:line="63" pos:column="47">true<pos:position pos:line="63" pos:column="51"/></literal></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><call><name pos:line="64" pos:column="13">getConn<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">()<pos:position pos:line="64" pos:column="22"/></argument_list></call> <operator pos:line="64" pos:column="23">!=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">NULL<pos:position pos:line="64" pos:column="30"/></name></expr>)<pos:position pos:line="64" pos:column="31"/></condition><then pos:line="64" pos:column="31"> <block pos:line="64" pos:column="32">{
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">ACLFilledChecklist<pos:position pos:line="65" pos:column="31"/></name></type> <name pos:line="65" pos:column="32">ch<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><name pos:line="65" pos:column="35">NULL<pos:position pos:line="65" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="41">request<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">NULL<pos:position pos:line="65" pos:column="54"/></name></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></decl>;<pos:position pos:line="65" pos:column="56"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">ch<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">.<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">src_addr<pos:position pos:line="66" pos:column="24"/></name></name> <operator pos:line="66" pos:column="25">=<pos:position pos:line="66" pos:column="26"/></operator> <name><name pos:line="66" pos:column="27">request<pos:position pos:line="66" pos:column="34"/></name><operator pos:line="66" pos:column="34">-&gt;<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="36">client_addr<pos:position pos:line="66" pos:column="47"/></name></name></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">ch<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">.<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="16">my_addr<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <name><name pos:line="67" pos:column="26">request<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">-&gt;<pos:position pos:line="67" pos:column="38"/></operator><name pos:line="67" pos:column="35">my_addr<pos:position pos:line="67" pos:column="42"/></name></name></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">int<pos:position pos:line="68" pos:column="16"/></name></type> <name pos:line="68" pos:column="17">tos<pos:position pos:line="68" pos:column="20"/></name> <init pos:line="68" pos:column="21">= <expr><call><name pos:line="68" pos:column="23">aclMapTOS<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name><name pos:line="68" pos:column="33">Config<pos:position pos:line="68" pos:column="39"/></name><operator pos:line="68" pos:column="39">.<pos:position pos:line="68" pos:column="40"/></operator><name pos:line="68" pos:column="40">accessList<pos:position pos:line="68" pos:column="50"/></name><operator pos:line="68" pos:column="50">.<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="51">clientside_tos<pos:position pos:line="68" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="67">&amp;<pos:position pos:line="68" pos:column="72"/></operator><name pos:line="68" pos:column="68">ch<pos:position pos:line="68" pos:column="70"/></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="68" pos:column="72"/></decl_stmt>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">tos<pos:position pos:line="69" pos:column="20"/></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="17">comm_set_tos<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><call><name pos:line="70" pos:column="30">getConn<pos:position pos:line="70" pos:column="37"/></name><argument_list pos:line="70" pos:column="37">()<pos:position pos:line="70" pos:column="39"/></argument_list></call><operator pos:line="70" pos:column="39">-&gt;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="41">fd<pos:position pos:line="70" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="45">tos<pos:position pos:line="70" pos:column="48"/></name></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt></block></then></if>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

<cpp:if pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">if<pos:position pos:line="74" pos:column="4"/></cpp:directive> <expr><name pos:line="74" pos:column="5">USE_SSL<pos:position pos:line="74" pos:column="12"/></name></expr></cpp:if>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">!<pos:position pos:line="75" pos:column="10"/></operator><name><name pos:line="75" pos:column="10">calloutContext<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">sslBumpCheckDone<pos:position pos:line="75" pos:column="42"/></name></name></expr>)<pos:position pos:line="75" pos:column="43"/></condition><then pos:line="75" pos:column="43"> <block pos:line="75" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">calloutContext<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">-&gt;<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="25">sslBumpCheckDone<pos:position pos:line="76" pos:column="41"/></name></name> <operator pos:line="76" pos:column="42">=<pos:position pos:line="76" pos:column="43"/></operator> <literal type="boolean" pos:line="76" pos:column="44">true<pos:position pos:line="76" pos:column="48"/></literal></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name><name pos:line="77" pos:column="13">calloutContext<pos:position pos:line="77" pos:column="27"/></name><operator pos:line="77" pos:column="27">-&gt;<pos:position pos:line="77" pos:column="32"/></operator><name pos:line="77" pos:column="29">sslBumpAccessCheck<pos:position pos:line="77" pos:column="47"/></name></name><argument_list pos:line="77" pos:column="47">()<pos:position pos:line="77" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="50"/></condition><then pos:line="77" pos:column="50">
            <block type="pseudo"><return pos:line="78" pos:column="13">return;<pos:position pos:line="78" pos:column="20"/></return></block></then></if>
        <comment type="block" pos:line="79" pos:column="9">/* else no ssl bump required*/</comment>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">cbdataReferenceDone<pos:position pos:line="83" pos:column="24"/></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name><name pos:line="83" pos:column="25">calloutContext<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">-&gt;<pos:position pos:line="83" pos:column="44"/></operator><name pos:line="83" pos:column="41">http<pos:position pos:line="83" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="84" pos:column="5">delete<pos:position pos:line="84" pos:column="11"/></operator> <name pos:line="84" pos:column="12">calloutContext<pos:position pos:line="84" pos:column="26"/></name></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="85" pos:column="5">calloutContext<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <name pos:line="85" pos:column="22">NULL<pos:position pos:line="85" pos:column="26"/></name></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
<cpp:if pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">if<pos:position pos:line="86" pos:column="4"/></cpp:directive> <expr><name pos:line="86" pos:column="5">HEADERS_LOG<pos:position pos:line="86" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="88" pos:column="5">headersLog<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><literal type="number" pos:line="88" pos:column="16">0<pos:position pos:line="88" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="19">1<pos:position pos:line="88" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="22">request<pos:position pos:line="88" pos:column="29"/></name><operator pos:line="88" pos:column="29">-&gt;<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="31">method<pos:position pos:line="88" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">request<pos:position pos:line="88" pos:column="46"/></name></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">debugs<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><literal type="number" pos:line="91" pos:column="12">83<pos:position pos:line="91" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="16">3<pos:position pos:line="91" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="19">HERE<pos:position pos:line="91" pos:column="23"/></name> <operator pos:line="91" pos:column="24">&lt;&lt;<pos:position pos:line="91" pos:column="32"/></operator> <literal type="string" pos:line="91" pos:column="27">"calling processRequest()"<pos:position pos:line="91" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">processRequest<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">()<pos:position pos:line="92" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="22"/></expr_stmt>

<cpp:if pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">if<pos:position pos:line="94" pos:column="4"/></cpp:directive> <expr><name pos:line="94" pos:column="5">ICAP_CLIENT<pos:position pos:line="94" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="95" pos:column="5">Adaptation<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">::<pos:position pos:line="95" pos:column="17"/></operator><name pos:line="95" pos:column="17">Icap<pos:position pos:line="95" pos:column="21"/></name><operator pos:line="95" pos:column="21">::<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="23">History<pos:position pos:line="95" pos:column="30"/></name><operator pos:line="95" pos:column="30">::<pos:position pos:line="95" pos:column="32"/></operator><name pos:line="95" pos:column="32">Pointer<pos:position pos:line="95" pos:column="39"/></name></name></type> <name pos:line="95" pos:column="40">ih<pos:position pos:line="95" pos:column="42"/></name> <init pos:line="95" pos:column="43">= <expr><call><name><name pos:line="95" pos:column="45">request<pos:position pos:line="95" pos:column="52"/></name><operator pos:line="95" pos:column="52">-&gt;<pos:position pos:line="95" pos:column="57"/></operator><name pos:line="95" pos:column="54">icapHistory<pos:position pos:line="95" pos:column="65"/></name></name><argument_list pos:line="95" pos:column="65">()<pos:position pos:line="95" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="95" pos:column="68"/></decl_stmt>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">ih<pos:position pos:line="96" pos:column="11"/></name> <operator pos:line="96" pos:column="12">!=<pos:position pos:line="96" pos:column="14"/></operator> <name pos:line="96" pos:column="15">NULL<pos:position pos:line="96" pos:column="19"/></name></expr>)<pos:position pos:line="96" pos:column="20"/></condition><then pos:line="96" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="9">ih<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">logType<pos:position pos:line="97" pos:column="20"/></name></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <name pos:line="97" pos:column="23">logType<pos:position pos:line="97" pos:column="30"/></name></expr>;<pos:position pos:line="97" pos:column="31"/></expr_stmt></block></then></if>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7447_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">HandshakeParser<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseHandshakeMessage<pos:position pos:line="2" pos:column="49"/></name></name><parameter_list pos:line="2" pos:column="49">()<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">currentContentType<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <name><name pos:line="4" pos:column="32">ContentType<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">::<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">ctHandshake<pos:position pos:line="4" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">Handshake<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">message<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">tkMessages<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>

    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">message<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">msg_type<pos:position pos:line="8" pos:column="29"/></name></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition> <block pos:line="8" pos:column="31">{
    <case pos:line="9" pos:column="5">case <expr><name><name pos:line="9" pos:column="10">HandshakeType<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">::<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">hskClientHello<pos:position pos:line="9" pos:column="39"/></name></name></expr>:<pos:position pos:line="9" pos:column="40"/></case>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">Must<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">state<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&lt;<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="22">atHelloReceived<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">Security<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">::<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">HandshakeParser<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">::<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">parseClientHelloHandshakeMessage<pos:position pos:line="11" pos:column="68"/></name></name><argument_list pos:line="11" pos:column="68">(<argument><expr><name><name pos:line="11" pos:column="69">message<pos:position pos:line="11" pos:column="76"/></name><operator pos:line="11" pos:column="76">.<pos:position pos:line="11" pos:column="77"/></operator><name pos:line="11" pos:column="77">msg_body<pos:position pos:line="11" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">state<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">atHelloReceived<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">done<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <literal type="string" pos:line="13" pos:column="16">"ClientHello"<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    <case pos:line="15" pos:column="5">case <expr><name><name pos:line="15" pos:column="10">HandshakeType<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">::<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">hskServerHello<pos:position pos:line="15" pos:column="39"/></name></name></expr>:<pos:position pos:line="15" pos:column="40"/></case>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">Must<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">state<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&lt;<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="22">atHelloReceived<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">parseServerHelloHandshakeMessage<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name><name pos:line="17" pos:column="42">message<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">msg_body<pos:position pos:line="17" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">state<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">atHelloReceived<pos:position pos:line="18" pos:column="32"/></name></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    <case pos:line="20" pos:column="5">case <expr><name><name pos:line="20" pos:column="10">HandshakeType<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">::<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">hskCertificate<pos:position pos:line="20" pos:column="39"/></name></name></expr>:<pos:position pos:line="20" pos:column="40"/></case>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">Must<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">state<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">&lt;<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="22">atCertificatesReceived<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">parseServerCertificates<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name><name pos:line="22" pos:column="33">message<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">msg_body<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">state<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">atCertificatesReceived<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    <case pos:line="25" pos:column="5">case <expr><name><name pos:line="25" pos:column="10">HandshakeType<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">::<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">hskServerHelloDone<pos:position pos:line="25" pos:column="43"/></name></name></expr>:<pos:position pos:line="25" pos:column="44"/></case>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">Must<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">state<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&lt;<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="22">atHelloDoneReceived<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
        <comment type="line" pos:line="27" pos:column="9">// zero-length</comment>
        <expr_stmt><expr><name pos:line="28" pos:column="9">state<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">atHelloDoneReceived<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">done<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="string" pos:line="29" pos:column="16">"ServerHelloDone"<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">debugs<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="number" pos:line="32" pos:column="12">83<pos:position pos:line="32" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="16">5<pos:position pos:line="32" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="19">"ignoring "<pos:position pos:line="32" pos:column="30"/></literal> <operator pos:line="32" pos:column="31">&lt;&lt;<pos:position pos:line="32" pos:column="39"/></operator> <call><name><name pos:line="32" pos:column="34">message<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">.<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="42">msg_body<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">.<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="51">length<pos:position pos:line="32" pos:column="57"/></name></name><argument_list pos:line="32" pos:column="57">()<pos:position pos:line="32" pos:column="59"/></argument_list></call> <operator pos:line="32" pos:column="60">&lt;&lt;<pos:position pos:line="32" pos:column="68"/></operator> <literal type="string" pos:line="32" pos:column="63">"-byte type-"<pos:position pos:line="32" pos:column="76"/></literal> <operator pos:line="32" pos:column="77">&lt;&lt;<pos:position pos:line="32" pos:column="85"/></operator>
           <cast type="static" pos:line="33" pos:column="12">static_cast<argument_list type="generic" pos:line="33" pos:column="23">&lt;<argument><expr><name pos:line="33" pos:column="24">unsigned<pos:position pos:line="33" pos:column="32"/></name> <name pos:line="33" pos:column="33">int<pos:position pos:line="33" pos:column="36"/></name></expr></argument>&gt;<pos:position pos:line="33" pos:column="40"/></argument_list><argument_list pos:line="33" pos:column="37">(<argument><expr><name><name pos:line="33" pos:column="38">message<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">.<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">msg_type<pos:position pos:line="33" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></cast> <operator pos:line="33" pos:column="56">&lt;&lt;<pos:position pos:line="33" pos:column="64"/></operator> <literal type="string" pos:line="33" pos:column="59">" handshake message"<pos:position pos:line="33" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

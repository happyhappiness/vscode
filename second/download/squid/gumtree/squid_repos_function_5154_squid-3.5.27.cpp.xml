<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5154_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">useFreeSlot<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name><name pos:line="2" pos:column="28">Ipc<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">::<pos:position pos:line="2" pos:column="33"/></operator><name pos:line="2" pos:column="33">Mem<pos:position pos:line="2" pos:column="36"/></name><operator pos:line="2" pos:column="36">::<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="38">PageId<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="46">pageId<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">freeSlots<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">pop<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">pageId<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32"> <block pos:line="4" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">47<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">5<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"got a previously free slot: "<pos:position pos:line="5" pos:column="53"/></literal> <operator pos:line="5" pos:column="54">&lt;&lt;<pos:position pos:line="5" pos:column="62"/></operator> <name pos:line="5" pos:column="57">pageId<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="65"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">true<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// catch free slots delivered to noteFreeMapSlice()</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><operator pos:line="10" pos:column="12">!<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">waitingForPage<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">waitingForPage<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="23">pageId<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">map<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">purgeOne<pos:position pos:line="12" pos:column="22"/></name></name><argument_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25"> <block pos:line="12" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">assert<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><operator pos:line="13" pos:column="16">!<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">waitingForPage<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt> <comment type="line" pos:line="13" pos:column="34">// noteFreeMapSlice() should have cleared it</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">assert<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><call><name><name pos:line="14" pos:column="16">pageId<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">.<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">set<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">47<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">5<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"got a previously busy slot: "<pos:position pos:line="15" pos:column="53"/></literal> <operator pos:line="15" pos:column="54">&lt;&lt;<pos:position pos:line="15" pos:column="62"/></operator> <name pos:line="15" pos:column="57">pageId<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><literal type="boolean" pos:line="16" pos:column="16">true<pos:position pos:line="16" pos:column="20"/></literal></expr>;<pos:position pos:line="16" pos:column="21"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">waitingForPage<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">==<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="31">pageId<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">waitingForPage<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">47<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">3<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="19">"cannot get a slot; entries: "<pos:position pos:line="21" pos:column="49"/></literal> <operator pos:line="21" pos:column="50">&lt;&lt;<pos:position pos:line="21" pos:column="58"/></operator> <call><name><name pos:line="21" pos:column="53">map<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">-&gt;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="58">entryCount<pos:position pos:line="21" pos:column="68"/></name></name><argument_list pos:line="21" pos:column="68">()<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><literal type="boolean" pos:line="22" pos:column="12">false<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1756_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">info_get_mallstat<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">int<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">size<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">number<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">oldnum<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">void<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">data<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">sentry<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">StoreEntry<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">data<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

<comment type="line" pos:line="6" pos:column="1">// format: "%12s %15s %6s %12s\n","Alloc Size","Count","Delta","Alloc/sec"</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">number<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">&gt;<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">storeAppendPrintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">sentry<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"%12d %15d %6d %.1f\n"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">size<pos:position pos:line="8" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="65">number<pos:position pos:line="8" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="73">number<pos:position pos:line="8" pos:column="79"/></name> <operator pos:line="8" pos:column="80">-<pos:position pos:line="8" pos:column="81"/></operator> <name pos:line="8" pos:column="82">oldnum<pos:position pos:line="8" pos:column="88"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="90">xdiv<pos:position pos:line="8" pos:column="94"/></name><argument_list pos:line="8" pos:column="94">(<argument><expr><operator pos:line="8" pos:column="95">(<pos:position pos:line="8" pos:column="96"/></operator><name pos:line="8" pos:column="96">number<pos:position pos:line="8" pos:column="102"/></name> <operator pos:line="8" pos:column="103">-<pos:position pos:line="8" pos:column="104"/></operator> <name pos:line="8" pos:column="105">oldnum<pos:position pos:line="8" pos:column="111"/></name><operator pos:line="8" pos:column="111">)<pos:position pos:line="8" pos:column="112"/></operator></expr></argument>, <argument><expr><name pos:line="8" pos:column="114">xm_deltat<pos:position pos:line="8" pos:column="123"/></name></expr></argument>)<pos:position pos:line="8" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="126"/></expr_stmt></block></then></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

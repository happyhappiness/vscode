<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_162_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">_request<pos:position pos:line="1" pos:column="16"/></name></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name pos:line="2" pos:column="1">request<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">urlin<pos:position pos:line="2" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list> <block pos:line="2" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">s<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><operator pos:line="3" pos:column="13">-<pos:position pos:line="3" pos:column="14"/></operator><literal type="number" pos:line="3" pos:column="14">1<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">f<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><operator pos:line="3" pos:column="21">-<pos:position pos:line="3" pos:column="22"/></operator><literal type="number" pos:line="3" pos:column="22">1<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">4096<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">msg<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">8192<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">method<pos:position pos:line="6" pos:column="17"/></name></decl>, <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="20">url<pos:position pos:line="6" pos:column="23"/></name></decl>, <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="26">file<pos:position pos:line="6" pos:column="30"/></name></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">size<pos:position pos:line="6" pos:column="37"/></name></decl>, <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="40">checksum<pos:position pos:line="6" pos:column="48"/></name></decl>, <modifier pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="51">status<pos:position pos:line="6" pos:column="57"/></name></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">host<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">urlbuf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">8192<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">len<pos:position pos:line="9" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="14">len2<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">time_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">w<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">stat<pos:position pos:line="11" pos:column="16"/></name></name></type> <name pos:line="11" pos:column="17">st<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">sockaddr_in<pos:position pos:line="12" pos:column="23"/></name></name></type> <name pos:line="12" pos:column="24">S<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">_request<pos:position pos:line="13" pos:column="20"/></name></name> <modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier></type><name pos:line="13" pos:column="22">r<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">urlin<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="char" pos:line="14" pos:column="19">'\0'<pos:position pos:line="14" pos:column="23"/></literal></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">s<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">socket<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">PF_INET<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">SOCK_STREAM<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="43">0<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call><operator pos:line="16" pos:column="45">)<pos:position pos:line="16" pos:column="46"/></operator> <operator pos:line="16" pos:column="47">&lt;<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="49">0<pos:position pos:line="16" pos:column="50"/></literal></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51"> <block pos:line="16" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">perror<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"socket"<pos:position pos:line="17" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memset<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><operator pos:line="20" pos:column="12">&amp;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="13">S<pos:position pos:line="20" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="16">'\0'<pos:position pos:line="20" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="22">sizeof<argument_list pos:line="20" pos:column="28">(<argument><expr pos:line="20" pos:column="29">struct <name pos:line="20" pos:column="36">sockaddr_in<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">S<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">.<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">sin_family<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">AF_INET<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">S<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">.<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">sin_port<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">htons<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">proxy_port<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">S<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">.<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">sin_addr<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">s_addr<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <call><name pos:line="23" pos:column="25">inet_addr<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">proxy_addr<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">connect<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">s<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="20">(<pos:position pos:line="24" pos:column="21"/></operator>struct <name pos:line="24" pos:column="28">sockaddr<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></operator><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="41">S<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="44">sizeof<argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">S<pos:position pos:line="24" pos:column="52"/></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call> <operator pos:line="24" pos:column="55">&lt;<pos:position pos:line="24" pos:column="59"/></operator> <literal type="number" pos:line="24" pos:column="57">0<pos:position pos:line="24" pos:column="58"/></literal></expr>)<pos:position pos:line="24" pos:column="59"/></condition><then pos:line="24" pos:column="59"> <block pos:line="24" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">close<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">s<pos:position pos:line="25" pos:column="16"/></name></expr></argument>)<pos:position pos:line="25" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">perror<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="string" pos:line="26" pos:column="16">"connect"<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">strcpy<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">urlbuf<pos:position pos:line="29" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="20">urlin<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">method<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">strtok<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">urlbuf<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="29">" "<pos:position pos:line="30" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">url<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <call><name pos:line="31" pos:column="11">strtok<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">NULL<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="24">" "<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">status<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">strtok<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">NULL<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="27">" "<pos:position pos:line="32" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">file<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <call><name pos:line="33" pos:column="12">strtok<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">NULL<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="25">" "<pos:position pos:line="33" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">size<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">strtok<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">NULL<pos:position pos:line="34" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="25">" "<pos:position pos:line="34" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">checksum<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">strtok<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">NULL<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="29">" "<pos:position pos:line="35" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">url<pos:position pos:line="36" pos:column="13"/></name></expr>)<pos:position pos:line="36" pos:column="14"/></condition><then pos:line="36" pos:column="14"> <block pos:line="36" pos:column="15">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">url<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">method<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">method<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="string" pos:line="38" pos:column="18">"GET"<pos:position pos:line="38" pos:column="23"/></literal></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">file<pos:position pos:line="40" pos:column="14"/></name></expr>)<pos:position pos:line="40" pos:column="15"/></condition><then pos:line="40" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">file<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <literal type="string" pos:line="41" pos:column="16">"-"<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt></block></then></if>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">size<pos:position pos:line="42" pos:column="14"/></name></expr>)<pos:position pos:line="42" pos:column="15"/></condition><then pos:line="42" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="9">size<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <literal type="string" pos:line="43" pos:column="16">"-"<pos:position pos:line="43" pos:column="19"/></literal></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt></block></then></if>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">!<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">checksum<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="9">checksum<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="string" pos:line="45" pos:column="20">"-"<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="46" pos:column="5">r<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">=<pos:position pos:line="46" pos:column="8"/></operator> <call><name pos:line="46" pos:column="9">calloc<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="19">sizeof <name><pos:position pos:line="46" pos:column="26"/></name></sizeof>*<name pos:line="46" pos:column="27">r<pos:position pos:line="46" pos:column="28"/></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">assert<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name pos:line="47" pos:column="12">r<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">!=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">NULL<pos:position pos:line="47" pos:column="21"/></name></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">r<pos:position pos:line="48" pos:column="6"/></name><operator pos:line="48" pos:column="6">-&gt;<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="8">url<pos:position pos:line="48" pos:column="11"/></name></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">strdup<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">url<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">assert<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name><name pos:line="49" pos:column="12">r<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">url<pos:position pos:line="49" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">strcpy<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name><name pos:line="50" pos:column="12">r<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">method<pos:position pos:line="50" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="23">method<pos:position pos:line="50" pos:column="29"/></name></expr></argument>)<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">strcpy<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><name><name pos:line="51" pos:column="12">r<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">-&gt;<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="15">requestbodyfile<pos:position pos:line="51" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">file<pos:position pos:line="51" pos:column="36"/></name></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">r<pos:position pos:line="52" pos:column="6"/></name><operator pos:line="52" pos:column="6">-&gt;<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="8">fd<pos:position pos:line="52" pos:column="10"/></name></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">s<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">size<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">&amp;&amp;<pos:position pos:line="53" pos:column="24"/></operator> <call><name pos:line="53" pos:column="17">strcmp<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">size<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="30">"-"<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call> <operator pos:line="53" pos:column="35">!=<pos:position pos:line="53" pos:column="37"/></operator> <literal type="number" pos:line="53" pos:column="38">0<pos:position pos:line="53" pos:column="39"/></literal></expr>)<pos:position pos:line="53" pos:column="40"/></condition><then pos:line="53" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="9">r<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">validsize<pos:position pos:line="54" pos:column="21"/></name></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <call><name pos:line="54" pos:column="24">atoi<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">size<pos:position pos:line="54" pos:column="33"/></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt></block></then>
    <else pos:line="55" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="9">r<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">validsize<pos:position pos:line="56" pos:column="21"/></name></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <operator pos:line="56" pos:column="24">-<pos:position pos:line="56" pos:column="25"/></operator><literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt></block></else></if>	<comment type="block" pos:line="56" pos:column="33">/* Unknown */</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">checksum<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">&amp;&amp;<pos:position pos:line="57" pos:column="28"/></operator> <call><name pos:line="57" pos:column="21">strcmp<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><name pos:line="57" pos:column="28">checksum<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="38">"-"<pos:position pos:line="57" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call> <operator pos:line="57" pos:column="43">!=<pos:position pos:line="57" pos:column="45"/></operator> <literal type="number" pos:line="57" pos:column="46">0<pos:position pos:line="57" pos:column="47"/></literal></expr>)<pos:position pos:line="57" pos:column="48"/></condition><then pos:line="57" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="9">r<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">validsum<pos:position pos:line="58" pos:column="20"/></name></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <call><name pos:line="58" pos:column="23">strtoul<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">checksum<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="41">NULL<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="47">0<pos:position pos:line="58" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt></block></then></if>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">status<pos:position pos:line="59" pos:column="15"/></name></expr>)<pos:position pos:line="59" pos:column="16"/></condition><then pos:line="59" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="9">r<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">validstatus<pos:position pos:line="60" pos:column="23"/></name></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <call><name pos:line="60" pos:column="26">atoi<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">status<pos:position pos:line="60" pos:column="37"/></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">r<pos:position pos:line="61" pos:column="6"/></name><operator pos:line="61" pos:column="6">-&gt;<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="8">content_length<pos:position pos:line="61" pos:column="22"/></name></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <operator pos:line="61" pos:column="25">-<pos:position pos:line="61" pos:column="26"/></operator><literal type="number" pos:line="61" pos:column="26">1<pos:position pos:line="61" pos:column="27"/></literal></expr>;<pos:position pos:line="61" pos:column="28"/></expr_stmt>	<comment type="block" pos:line="61" pos:column="33">/* Unknown */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">opt_accel<pos:position pos:line="62" pos:column="18"/></name></expr>)<pos:position pos:line="62" pos:column="19"/></condition><then pos:line="62" pos:column="19"> <block pos:line="62" pos:column="20">{
        <expr_stmt><expr><name pos:line="63" pos:column="9">host<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">strchr<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">url<pos:position pos:line="63" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="63" pos:column="28">'/'<pos:position pos:line="63" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call> <operator pos:line="63" pos:column="33">+<pos:position pos:line="63" pos:column="34"/></operator> <literal type="number" pos:line="63" pos:column="35">2<pos:position pos:line="63" pos:column="36"/></literal></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">url<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <call><name pos:line="64" pos:column="15">strchr<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">host<pos:position pos:line="64" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="64" pos:column="28">'/'<pos:position pos:line="64" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then> <else pos:line="65" pos:column="7">else <block pos:line="65" pos:column="12">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">host<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <name pos:line="66" pos:column="16">NULL<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">sprintf<pos:position pos:line="68" pos:column="12"/></name><argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">msg<pos:position pos:line="68" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="18">"%s %s HTTP/1.0\r\n"<pos:position pos:line="68" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="40">method<pos:position pos:line="68" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="48">url<pos:position pos:line="68" pos:column="51"/></name></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="53"/></expr_stmt>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">host<pos:position pos:line="69" pos:column="13"/></name></expr>)<pos:position pos:line="69" pos:column="14"/></condition><then pos:line="69" pos:column="14"> <block pos:line="69" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">url<pos:position pos:line="70" pos:column="12"/></name><index pos:line="70" pos:column="12">[<expr><literal type="number" pos:line="70" pos:column="13">0<pos:position pos:line="70" pos:column="14"/></literal></expr>]<pos:position pos:line="70" pos:column="15"/></index></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <literal type="char" pos:line="70" pos:column="18">'\0'<pos:position pos:line="70" pos:column="22"/></literal></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">sprintf<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">buf<pos:position pos:line="71" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="22">"Host: %s\r\n"<pos:position pos:line="71" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">host<pos:position pos:line="71" pos:column="42"/></name></expr></argument>)<pos:position pos:line="71" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">strcat<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">msg<pos:position pos:line="72" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="21">buf<pos:position pos:line="72" pos:column="24"/></name></expr></argument>)<pos:position pos:line="72" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">url<pos:position pos:line="73" pos:column="12"/></name><index pos:line="73" pos:column="12">[<expr><literal type="number" pos:line="73" pos:column="13">0<pos:position pos:line="73" pos:column="14"/></literal></expr>]<pos:position pos:line="73" pos:column="15"/></index></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <literal type="char" pos:line="73" pos:column="18">'/'<pos:position pos:line="73" pos:column="21"/></literal></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">strcat<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">(<argument><expr><name pos:line="75" pos:column="12">msg<pos:position pos:line="75" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="17">"Accept: */*\r\n"<pos:position pos:line="75" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">opt_ims<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">&amp;&amp;<pos:position pos:line="76" pos:column="27"/></operator> <operator pos:line="76" pos:column="20">(<pos:position pos:line="76" pos:column="21"/></operator><call><name pos:line="76" pos:column="21">lrand48<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">()<pos:position pos:line="76" pos:column="30"/></argument_list></call> <operator pos:line="76" pos:column="31">&amp;<pos:position pos:line="76" pos:column="36"/></operator> <literal type="number" pos:line="76" pos:column="33">0x03<pos:position pos:line="76" pos:column="37"/></literal><operator pos:line="76" pos:column="37">)<pos:position pos:line="76" pos:column="38"/></operator> <operator pos:line="76" pos:column="39">==<pos:position pos:line="76" pos:column="41"/></operator> <literal type="number" pos:line="76" pos:column="42">0<pos:position pos:line="76" pos:column="43"/></literal></expr>)<pos:position pos:line="76" pos:column="44"/></condition><then pos:line="76" pos:column="44"> <block pos:line="76" pos:column="45">{
        <expr_stmt><expr><name pos:line="77" pos:column="9">w<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">=<pos:position pos:line="77" pos:column="12"/></operator> <call><name pos:line="77" pos:column="13">time<pos:position pos:line="77" pos:column="17"/></name><argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">NULL<pos:position pos:line="77" pos:column="22"/></name></expr></argument>)<pos:position pos:line="77" pos:column="23"/></argument_list></call> <operator pos:line="77" pos:column="24">-<pos:position pos:line="77" pos:column="25"/></operator> <operator pos:line="77" pos:column="26">(<pos:position pos:line="77" pos:column="27"/></operator><call><name pos:line="77" pos:column="27">lrand48<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">()<pos:position pos:line="77" pos:column="36"/></argument_list></call> <operator pos:line="77" pos:column="37">&amp;<pos:position pos:line="77" pos:column="42"/></operator> <literal type="number" pos:line="77" pos:column="39">0x3FFFF<pos:position pos:line="77" pos:column="46"/></literal><operator pos:line="77" pos:column="46">)<pos:position pos:line="77" pos:column="47"/></operator></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">sprintf<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">(<argument><expr><name pos:line="78" pos:column="17">buf<pos:position pos:line="78" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="22">"If-Modified-Since: %s\r\n"<pos:position pos:line="78" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="51">mkrfc850<pos:position pos:line="78" pos:column="59"/></name><argument_list pos:line="78" pos:column="59">(<argument><expr><operator pos:line="78" pos:column="60">&amp;<pos:position pos:line="78" pos:column="65"/></operator><name pos:line="78" pos:column="61">w<pos:position pos:line="78" pos:column="62"/></name></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">strcat<pos:position pos:line="79" pos:column="15"/></name><argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">msg<pos:position pos:line="79" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="21">buf<pos:position pos:line="79" pos:column="24"/></name></expr></argument>)<pos:position pos:line="79" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name pos:line="81" pos:column="9">file<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">&amp;&amp;<pos:position pos:line="81" pos:column="24"/></operator> <call><name pos:line="81" pos:column="17">strcmp<pos:position pos:line="81" pos:column="23"/></name><argument_list pos:line="81" pos:column="23">(<argument><expr><name pos:line="81" pos:column="24">file<pos:position pos:line="81" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="30">"-"<pos:position pos:line="81" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="34"/></argument_list></call> <operator pos:line="81" pos:column="35">!=<pos:position pos:line="81" pos:column="37"/></operator> <literal type="number" pos:line="81" pos:column="38">0<pos:position pos:line="81" pos:column="39"/></literal></expr>)<pos:position pos:line="81" pos:column="40"/></condition><then pos:line="81" pos:column="40"> <block pos:line="81" pos:column="41">{
        <expr_stmt><expr><name pos:line="82" pos:column="9">f<pos:position pos:line="82" pos:column="10"/></name> <operator pos:line="82" pos:column="11">=<pos:position pos:line="82" pos:column="12"/></operator> <call><name pos:line="82" pos:column="13">open<pos:position pos:line="82" pos:column="17"/></name><argument_list pos:line="82" pos:column="17">(<argument><expr><name pos:line="82" pos:column="18">file<pos:position pos:line="82" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="24">O_RDONLY<pos:position pos:line="82" pos:column="32"/></name></expr></argument>)<pos:position pos:line="82" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">f<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">&lt;<pos:position pos:line="83" pos:column="19"/></operator> <literal type="number" pos:line="83" pos:column="17">0<pos:position pos:line="83" pos:column="18"/></literal></expr>)<pos:position pos:line="83" pos:column="19"/></condition><then pos:line="83" pos:column="19"> <block pos:line="83" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">perror<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><literal type="string" pos:line="84" pos:column="20">"open file"<pos:position pos:line="84" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">exit<pos:position pos:line="85" pos:column="17"/></name><argument_list pos:line="85" pos:column="17">(<argument><expr><literal type="number" pos:line="85" pos:column="18">1<pos:position pos:line="85" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">fstat<pos:position pos:line="87" pos:column="14"/></name><argument_list pos:line="87" pos:column="14">(<argument><expr><name pos:line="87" pos:column="15">f<pos:position pos:line="87" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="18">&amp;<pos:position pos:line="87" pos:column="23"/></operator><name pos:line="87" pos:column="19">st<pos:position pos:line="87" pos:column="21"/></name></expr></argument>)<pos:position pos:line="87" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">sprintf<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><name pos:line="88" pos:column="17">buf<pos:position pos:line="88" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="22">"Content-Length: %d\r\n"<pos:position pos:line="88" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="48">(<pos:position pos:line="88" pos:column="49"/></operator><name pos:line="88" pos:column="49">int<pos:position pos:line="88" pos:column="52"/></name><operator pos:line="88" pos:column="52">)<pos:position pos:line="88" pos:column="53"/></operator> <name><name pos:line="88" pos:column="54">st<pos:position pos:line="88" pos:column="56"/></name><operator pos:line="88" pos:column="56">.<pos:position pos:line="88" pos:column="57"/></operator><name pos:line="88" pos:column="57">st_size<pos:position pos:line="88" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">strcat<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><name pos:line="89" pos:column="16">msg<pos:position pos:line="89" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="21">buf<pos:position pos:line="89" pos:column="24"/></name></expr></argument>)<pos:position pos:line="89" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name pos:line="91" pos:column="9">opt_range<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">&amp;&amp;<pos:position pos:line="91" pos:column="29"/></operator> <operator pos:line="91" pos:column="22">(<pos:position pos:line="91" pos:column="23"/></operator><call><name pos:line="91" pos:column="23">lrand48<pos:position pos:line="91" pos:column="30"/></name><argument_list pos:line="91" pos:column="30">()<pos:position pos:line="91" pos:column="32"/></argument_list></call> <operator pos:line="91" pos:column="33">&amp;<pos:position pos:line="91" pos:column="38"/></operator> <literal type="number" pos:line="91" pos:column="35">0x03<pos:position pos:line="91" pos:column="39"/></literal><operator pos:line="91" pos:column="39">)<pos:position pos:line="91" pos:column="40"/></operator> <operator pos:line="91" pos:column="41">==<pos:position pos:line="91" pos:column="43"/></operator> <literal type="number" pos:line="91" pos:column="44">0<pos:position pos:line="91" pos:column="45"/></literal></expr>)<pos:position pos:line="91" pos:column="46"/></condition><then pos:line="91" pos:column="46"> <block pos:line="91" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="92" pos:column="9">int<pos:position pos:line="92" pos:column="12"/></name></type> <name pos:line="92" pos:column="13">len<pos:position pos:line="92" pos:column="16"/></name></decl>;<pos:position pos:line="92" pos:column="17"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="93" pos:column="9">int<pos:position pos:line="93" pos:column="12"/></name></type> <name pos:line="93" pos:column="13">count<pos:position pos:line="93" pos:column="18"/></name> <init pos:line="93" pos:column="19">= <expr><literal type="number" pos:line="93" pos:column="21">0<pos:position pos:line="93" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="93" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">strcat<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><name pos:line="94" pos:column="16">msg<pos:position pos:line="94" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="21">"Range: bytes="<pos:position pos:line="94" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="38"/></expr_stmt>
        <while pos:line="95" pos:column="9">while <condition pos:line="95" pos:column="15">(<expr><operator pos:line="95" pos:column="16">(<pos:position pos:line="95" pos:column="17"/></operator><operator pos:line="95" pos:column="17">(<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="18">len<pos:position pos:line="95" pos:column="21"/></name> <operator pos:line="95" pos:column="22">=<pos:position pos:line="95" pos:column="23"/></operator> <operator pos:line="95" pos:column="24">(<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="25">int<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">)<pos:position pos:line="95" pos:column="29"/></operator> <call><name pos:line="95" pos:column="30">lrand48<pos:position pos:line="95" pos:column="37"/></name><argument_list pos:line="95" pos:column="37">()<pos:position pos:line="95" pos:column="39"/></argument_list></call><operator pos:line="95" pos:column="39">)<pos:position pos:line="95" pos:column="40"/></operator> <operator pos:line="95" pos:column="41">&amp;<pos:position pos:line="95" pos:column="46"/></operator> <literal type="number" pos:line="95" pos:column="43">0x03<pos:position pos:line="95" pos:column="47"/></literal><operator pos:line="95" pos:column="47">)<pos:position pos:line="95" pos:column="48"/></operator> <operator pos:line="95" pos:column="49">==<pos:position pos:line="95" pos:column="51"/></operator> <literal type="number" pos:line="95" pos:column="52">0<pos:position pos:line="95" pos:column="53"/></literal> <operator pos:line="95" pos:column="54">||<pos:position pos:line="95" pos:column="56"/></operator> <operator pos:line="95" pos:column="57">!<pos:position pos:line="95" pos:column="58"/></operator><name pos:line="95" pos:column="58">count<pos:position pos:line="95" pos:column="63"/></name></expr>)<pos:position pos:line="95" pos:column="64"/></condition> <block pos:line="95" pos:column="65">{
            <decl_stmt><decl><type><specifier pos:line="96" pos:column="13">const<pos:position pos:line="96" pos:column="18"/></specifier> <name pos:line="96" pos:column="19">int<pos:position pos:line="96" pos:column="22"/></name></type> <name pos:line="96" pos:column="23">offset<pos:position pos:line="96" pos:column="29"/></name> <init pos:line="96" pos:column="30">= <expr><operator pos:line="96" pos:column="32">(<pos:position pos:line="96" pos:column="33"/></operator><name pos:line="96" pos:column="33">int<pos:position pos:line="96" pos:column="36"/></name><operator pos:line="96" pos:column="36">)<pos:position pos:line="96" pos:column="37"/></operator> <call><name pos:line="96" pos:column="38">lrand48<pos:position pos:line="96" pos:column="45"/></name><argument_list pos:line="96" pos:column="45">()<pos:position pos:line="96" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="48"/></decl_stmt>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><name pos:line="97" pos:column="17">count<pos:position pos:line="97" pos:column="22"/></name></expr>)<pos:position pos:line="97" pos:column="23"/></condition><then pos:line="97" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="17">strcat<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">msg<pos:position pos:line="98" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="29">","<pos:position pos:line="98" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt></block></then></if>
            <switch pos:line="99" pos:column="13">switch <condition pos:line="99" pos:column="20">(<expr><call><name pos:line="99" pos:column="21">lrand48<pos:position pos:line="99" pos:column="28"/></name><argument_list pos:line="99" pos:column="28">()<pos:position pos:line="99" pos:column="30"/></argument_list></call> <operator pos:line="99" pos:column="31">&amp;<pos:position pos:line="99" pos:column="36"/></operator> <literal type="number" pos:line="99" pos:column="33">0x03<pos:position pos:line="99" pos:column="37"/></literal></expr>)<pos:position pos:line="99" pos:column="38"/></condition> <block pos:line="99" pos:column="39">{
            <case pos:line="100" pos:column="13">case <expr><literal type="number" pos:line="100" pos:column="18">0<pos:position pos:line="100" pos:column="19"/></literal></expr>:<pos:position pos:line="100" pos:column="20"/></case>
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">sprintf<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><name pos:line="101" pos:column="25">buf<pos:position pos:line="101" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="30">"-%d"<pos:position pos:line="101" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="37">len<pos:position pos:line="101" pos:column="40"/></name></expr></argument>)<pos:position pos:line="101" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="42"/></expr_stmt>
                <break pos:line="102" pos:column="17">break;<pos:position pos:line="102" pos:column="23"/></break>
            <case pos:line="103" pos:column="13">case <expr><literal type="number" pos:line="103" pos:column="18">1<pos:position pos:line="103" pos:column="19"/></literal></expr>:<pos:position pos:line="103" pos:column="20"/></case>
                <expr_stmt><expr><call><name pos:line="104" pos:column="17">sprintf<pos:position pos:line="104" pos:column="24"/></name><argument_list pos:line="104" pos:column="24">(<argument><expr><name pos:line="104" pos:column="25">buf<pos:position pos:line="104" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="30">"%d-"<pos:position pos:line="104" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="37">offset<pos:position pos:line="104" pos:column="43"/></name></expr></argument>)<pos:position pos:line="104" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt>
                <break pos:line="105" pos:column="17">break;<pos:position pos:line="105" pos:column="23"/></break>
            <default pos:line="106" pos:column="13">default:<pos:position pos:line="106" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="107" pos:column="17">sprintf<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">buf<pos:position pos:line="107" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="30">"%d-%d"<pos:position pos:line="107" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="39">offset<pos:position pos:line="107" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="47">offset<pos:position pos:line="107" pos:column="53"/></name> <operator pos:line="107" pos:column="54">+<pos:position pos:line="107" pos:column="55"/></operator> <name pos:line="107" pos:column="56">len<pos:position pos:line="107" pos:column="59"/></name></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="61"/></expr_stmt>
                <break pos:line="108" pos:column="17">break;<pos:position pos:line="108" pos:column="23"/></break>
            }<pos:position pos:line="109" pos:column="14"/></block></switch>
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">strcat<pos:position pos:line="110" pos:column="19"/></name><argument_list pos:line="110" pos:column="19">(<argument><expr><name pos:line="110" pos:column="20">msg<pos:position pos:line="110" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="25">buf<pos:position pos:line="110" pos:column="28"/></name></expr></argument>)<pos:position pos:line="110" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="111" pos:column="13">count<pos:position pos:line="111" pos:column="18"/></name><operator pos:line="111" pos:column="18">++<pos:position pos:line="111" pos:column="20"/></operator></expr>;<pos:position pos:line="111" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">strcat<pos:position pos:line="113" pos:column="15"/></name><argument_list pos:line="113" pos:column="15">(<argument><expr><name pos:line="113" pos:column="16">msg<pos:position pos:line="113" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="21">"\r\n"<pos:position pos:line="113" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">strcat<pos:position pos:line="115" pos:column="11"/></name><argument_list pos:line="115" pos:column="11">(<argument><expr><name pos:line="115" pos:column="12">msg<pos:position pos:line="115" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="17">custom_header<pos:position pos:line="115" pos:column="30"/></name></expr></argument>)<pos:position pos:line="115" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">strcat<pos:position pos:line="116" pos:column="11"/></name><argument_list pos:line="116" pos:column="11">(<argument><expr><name pos:line="116" pos:column="12">msg<pos:position pos:line="116" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="17">"\r\n"<pos:position pos:line="116" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="117" pos:column="5">len<pos:position pos:line="117" pos:column="8"/></name> <operator pos:line="117" pos:column="9">=<pos:position pos:line="117" pos:column="10"/></operator> <call><name pos:line="117" pos:column="11">strlen<pos:position pos:line="117" pos:column="17"/></name><argument_list pos:line="117" pos:column="17">(<argument><expr><name pos:line="117" pos:column="18">msg<pos:position pos:line="117" pos:column="21"/></name></expr></argument>)<pos:position pos:line="117" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="23"/></expr_stmt>
    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><operator pos:line="118" pos:column="9">(<pos:position pos:line="118" pos:column="10"/></operator><name pos:line="118" pos:column="10">len2<pos:position pos:line="118" pos:column="14"/></name> <operator pos:line="118" pos:column="15">=<pos:position pos:line="118" pos:column="16"/></operator> <call><name pos:line="118" pos:column="17">write<pos:position pos:line="118" pos:column="22"/></name><argument_list pos:line="118" pos:column="22">(<argument><expr><name pos:line="118" pos:column="23">s<pos:position pos:line="118" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="26">msg<pos:position pos:line="118" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="31">len<pos:position pos:line="118" pos:column="34"/></name></expr></argument>)<pos:position pos:line="118" pos:column="35"/></argument_list></call><operator pos:line="118" pos:column="35">)<pos:position pos:line="118" pos:column="36"/></operator> <operator pos:line="118" pos:column="37">!=<pos:position pos:line="118" pos:column="39"/></operator> <name pos:line="118" pos:column="40">len<pos:position pos:line="118" pos:column="43"/></name></expr>)<pos:position pos:line="118" pos:column="44"/></condition><then pos:line="118" pos:column="44"> <block pos:line="118" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">close<pos:position pos:line="119" pos:column="14"/></name><argument_list pos:line="119" pos:column="14">(<argument><expr><name pos:line="119" pos:column="15">s<pos:position pos:line="119" pos:column="16"/></name></expr></argument>)<pos:position pos:line="119" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">perror<pos:position pos:line="120" pos:column="15"/></name><argument_list pos:line="120" pos:column="15">(<argument><expr><literal type="string" pos:line="120" pos:column="16">"write request"<pos:position pos:line="120" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">free_request<pos:position pos:line="121" pos:column="21"/></name><argument_list pos:line="121" pos:column="21">(<argument><expr><name pos:line="121" pos:column="22">r<pos:position pos:line="121" pos:column="23"/></name></expr></argument>)<pos:position pos:line="121" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="25"/></expr_stmt>
        <return pos:line="122" pos:column="9">return <expr><name pos:line="122" pos:column="16">NULL<pos:position pos:line="122" pos:column="20"/></name></expr>;<pos:position pos:line="122" pos:column="21"/></return>
    }<pos:position pos:line="123" pos:column="6"/></block></then> <else pos:line="123" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="124" pos:column="9">total_bytes_written<pos:position pos:line="124" pos:column="28"/></name> <operator pos:line="124" pos:column="29">+=<pos:position pos:line="124" pos:column="31"/></operator> <name pos:line="124" pos:column="32">len2<pos:position pos:line="124" pos:column="36"/></name></expr>;<pos:position pos:line="124" pos:column="37"/></expr_stmt></block></else></if>
    <if pos:line="125" pos:column="5">if <condition pos:line="125" pos:column="8">(<expr><name pos:line="125" pos:column="9">f<pos:position pos:line="125" pos:column="10"/></name> <operator pos:line="125" pos:column="11">&gt;=<pos:position pos:line="125" pos:column="16"/></operator> <literal type="number" pos:line="125" pos:column="14">0<pos:position pos:line="125" pos:column="15"/></literal></expr>)<pos:position pos:line="125" pos:column="16"/></condition><then pos:line="125" pos:column="16"> <block pos:line="125" pos:column="17">{
        <while pos:line="126" pos:column="9">while <condition pos:line="126" pos:column="15">(<expr><operator pos:line="126" pos:column="16">(<pos:position pos:line="126" pos:column="17"/></operator><name pos:line="126" pos:column="17">len<pos:position pos:line="126" pos:column="20"/></name> <operator pos:line="126" pos:column="21">=<pos:position pos:line="126" pos:column="22"/></operator> <call><name pos:line="126" pos:column="23">read<pos:position pos:line="126" pos:column="27"/></name><argument_list pos:line="126" pos:column="27">(<argument><expr><name pos:line="126" pos:column="28">f<pos:position pos:line="126" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="31">buf<pos:position pos:line="126" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="126" pos:column="36">sizeof<argument_list pos:line="126" pos:column="42">(<argument><expr><name pos:line="126" pos:column="43">buf<pos:position pos:line="126" pos:column="46"/></name></expr></argument>)<pos:position pos:line="126" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="126" pos:column="48"/></argument_list></call><operator pos:line="126" pos:column="48">)<pos:position pos:line="126" pos:column="49"/></operator> <operator pos:line="126" pos:column="50">&gt;<pos:position pos:line="126" pos:column="54"/></operator> <literal type="number" pos:line="126" pos:column="52">0<pos:position pos:line="126" pos:column="53"/></literal></expr>)<pos:position pos:line="126" pos:column="54"/></condition> <block pos:line="126" pos:column="55">{
            <expr_stmt><expr><name pos:line="127" pos:column="13">len2<pos:position pos:line="127" pos:column="17"/></name> <operator pos:line="127" pos:column="18">=<pos:position pos:line="127" pos:column="19"/></operator> <call><name pos:line="127" pos:column="20">write<pos:position pos:line="127" pos:column="25"/></name><argument_list pos:line="127" pos:column="25">(<argument><expr><name pos:line="127" pos:column="26">s<pos:position pos:line="127" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="29">buf<pos:position pos:line="127" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="34">len<pos:position pos:line="127" pos:column="37"/></name></expr></argument>)<pos:position pos:line="127" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="39"/></expr_stmt>
            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><name pos:line="128" pos:column="17">len2<pos:position pos:line="128" pos:column="21"/></name> <operator pos:line="128" pos:column="22">&lt;<pos:position pos:line="128" pos:column="26"/></operator> <literal type="number" pos:line="128" pos:column="24">0<pos:position pos:line="128" pos:column="25"/></literal></expr>)<pos:position pos:line="128" pos:column="26"/></condition><then pos:line="128" pos:column="26"> <block pos:line="128" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="129" pos:column="17">perror<pos:position pos:line="129" pos:column="23"/></name><argument_list pos:line="129" pos:column="23">(<argument><expr><literal type="string" pos:line="129" pos:column="24">"write body"<pos:position pos:line="129" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="130" pos:column="17">close<pos:position pos:line="130" pos:column="22"/></name><argument_list pos:line="130" pos:column="22">(<argument><expr><name pos:line="130" pos:column="23">s<pos:position pos:line="130" pos:column="24"/></name></expr></argument>)<pos:position pos:line="130" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="131" pos:column="17">free_request<pos:position pos:line="131" pos:column="29"/></name><argument_list pos:line="131" pos:column="29">(<argument><expr><name pos:line="131" pos:column="30">r<pos:position pos:line="131" pos:column="31"/></name></expr></argument>)<pos:position pos:line="131" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="132" pos:column="14"/></block></then></if>
        }<pos:position pos:line="133" pos:column="10"/></block></while>
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><name pos:line="134" pos:column="13">len<pos:position pos:line="134" pos:column="16"/></name> <operator pos:line="134" pos:column="17">&lt;<pos:position pos:line="134" pos:column="21"/></operator> <literal type="number" pos:line="134" pos:column="19">0<pos:position pos:line="134" pos:column="20"/></literal></expr>)<pos:position pos:line="134" pos:column="21"/></condition><then pos:line="134" pos:column="21"> <block pos:line="134" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="135" pos:column="13">perror<pos:position pos:line="135" pos:column="19"/></name><argument_list pos:line="135" pos:column="19">(<argument><expr><literal type="string" pos:line="135" pos:column="20">"read body"<pos:position pos:line="135" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">exit<pos:position pos:line="136" pos:column="17"/></name><argument_list pos:line="136" pos:column="17">(<argument><expr><literal type="number" pos:line="136" pos:column="18">1<pos:position pos:line="136" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="137" pos:column="10"/></block></then></if>
    }<pos:position pos:line="138" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="139" pos:column="5">/*
     * if (fcntl(s, F_SETFL, O_NDELAY) &lt; 0)
     * perror("fcntl O_NDELAY");
     */</comment>
    <return pos:line="143" pos:column="5">return <expr><name pos:line="143" pos:column="12">r<pos:position pos:line="143" pos:column="13"/></name></expr>;<pos:position pos:line="143" pos:column="14"/></return>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

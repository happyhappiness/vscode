<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7137_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Action<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">fillEntry<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">StoreEntry<pos:position pos:line="2" pos:column="34"/></name><modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">entry<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">bool<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">writeHttpHeader<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">16<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">entry<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">buffer<pos:position pos:line="5" pos:column="18"/></name></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">writeHttpHeader<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">HttpReply<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">rep<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><operator pos:line="8" pos:column="26">new<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">HttpReply<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">rep<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">setHeaders<pos:position pos:line="9" pos:column="24"/></name></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name><name pos:line="9" pos:column="25">Http<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">::<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">scOkay<pos:position pos:line="9" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="45">contentType<pos:position pos:line="9" pos:column="56"/></name><argument_list pos:line="9" pos:column="56">()<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="9" pos:column="60">-<pos:position pos:line="9" pos:column="61"/></operator><literal type="number" pos:line="9" pos:column="61">1<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="64">squid_curtime<pos:position pos:line="9" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="79">squid_curtime<pos:position pos:line="9" pos:column="92"/></name></expr></argument>)<pos:position pos:line="9" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="94"/></expr_stmt>
        <comment type="line" pos:line="10" pos:column="9">// Allow cachemgr and other XHR scripts access to our version string</comment>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">ActionParams<pos:position pos:line="11" pos:column="27"/></name> <modifier pos:line="11" pos:column="28">&amp;<pos:position pos:line="11" pos:column="33"/></modifier></type><name pos:line="11" pos:column="29">params<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><call><name pos:line="11" pos:column="38">command<pos:position pos:line="11" pos:column="45"/></name><argument_list pos:line="11" pos:column="45">()<pos:position pos:line="11" pos:column="47"/></argument_list></call><operator pos:line="11" pos:column="47">.<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">params<pos:position pos:line="11" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name><name pos:line="12" pos:column="13">params<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">httpOrigin<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">size<pos:position pos:line="12" pos:column="35"/></name></name><argument_list pos:line="12" pos:column="35">()<pos:position pos:line="12" pos:column="37"/></argument_list></call> <operator pos:line="12" pos:column="38">&gt;<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
            <expr_stmt><expr><call><name><name pos:line="13" pos:column="13">rep<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">header<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">putExt<pos:position pos:line="13" pos:column="31"/></name></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"Access-Control-Allow-Origin"<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="63">params<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">.<pos:position pos:line="13" pos:column="70"/></operator><name pos:line="13" pos:column="70">httpOrigin<pos:position pos:line="13" pos:column="80"/></name><operator pos:line="13" pos:column="80">.<pos:position pos:line="13" pos:column="81"/></operator><name pos:line="13" pos:column="81">termedBuf<pos:position pos:line="13" pos:column="90"/></name></name><argument_list pos:line="13" pos:column="90">()<pos:position pos:line="13" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="94"/></expr_stmt>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">HAVE_AUTH_MODULE_BASIC<pos:position pos:line="14" pos:column="27"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name><name pos:line="15" pos:column="13">rep<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">header<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">putExt<pos:position pos:line="15" pos:column="31"/></name></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"Access-Control-Allow-Credentials"<pos:position pos:line="15" pos:column="66"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="67">"true"<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">rep<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">header<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">putExt<pos:position pos:line="17" pos:column="31"/></name></name><argument_list pos:line="17" pos:column="31">(<argument><expr><literal type="string" pos:line="17" pos:column="32">"Access-Control-Expose-Headers"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="17" pos:column="64">"Server"<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">entry<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">replaceHttpReply<pos:position pos:line="19" pos:column="32"/></name></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">rep<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">dump<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">entry<pos:position pos:line="22" pos:column="15"/></name></expr></argument>)<pos:position pos:line="22" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">entry<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">flush<pos:position pos:line="24" pos:column="17"/></name></name><argument_list pos:line="24" pos:column="17">()<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">atomic<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">()<pos:position pos:line="26" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="27" pos:column="9">entry<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">complete<pos:position pos:line="27" pos:column="24"/></name></name><argument_list pos:line="27" pos:column="24">()<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt></block></then></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

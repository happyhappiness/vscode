<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2515_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">parseListing<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">buf<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name><name pos:line="4" pos:column="17">data<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">readBuf<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">-&gt;<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="31">content<pos:position pos:line="4" pos:column="38"/></name></name><argument_list pos:line="4" pos:column="38">()<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">sbuf<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>			<comment type="block" pos:line="5" pos:column="33">/* NULL-terminated copy of termedBuf */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">end<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">line<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">s<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">t<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">linelen<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">usable<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">StoreEntry<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">e<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><name pos:line="12" pos:column="21">entry<pos:position pos:line="12" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">len<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><call><name><name pos:line="13" pos:column="18">data<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">.<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">readBuf<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">contentSize<pos:position pos:line="13" pos:column="43"/></name></name><argument_list pos:line="13" pos:column="43">()<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">len<pos:position pos:line="15" pos:column="13"/></name></expr>)<pos:position pos:line="15" pos:column="14"/></condition><then pos:line="15" pos:column="14"> <block pos:line="15" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">9<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="19">3<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">HERE<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&lt;&lt;<pos:position pos:line="16" pos:column="35"/></operator> <literal type="string" pos:line="16" pos:column="30">"no content to parse for "<pos:position pos:line="16" pos:column="56"/></literal> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <call><name><name pos:line="16" pos:column="60">e<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">-&gt;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="63">url<pos:position pos:line="16" pos:column="66"/></name></name><argument_list pos:line="16" pos:column="66">()<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr></argument>  )<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/*
     * We need a NULL-terminated buffer for scanning, ick
     */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">sbuf<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">char<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></operator><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator><call><name pos:line="23" pos:column="20">xmalloc<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">len<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">+<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">1<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">xstrncpy<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">sbuf<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">buf<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">len<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">+<pos:position pos:line="24" pos:column="30"/></operator> <literal type="number" pos:line="24" pos:column="31">1<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">end<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <name pos:line="25" pos:column="11">sbuf<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">+<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">len<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">-<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">1<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>

    <while pos:line="27" pos:column="5">while <condition pos:line="27" pos:column="11">(<expr><operator pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">end<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">!=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="char" pos:line="27" pos:column="20">'\r'<pos:position pos:line="27" pos:column="24"/></literal> <operator pos:line="27" pos:column="25">&amp;&amp;<pos:position pos:line="27" pos:column="35"/></operator> <operator pos:line="27" pos:column="28">*<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">end<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">!=<pos:position pos:line="27" pos:column="35"/></operator> <literal type="char" pos:line="27" pos:column="36">'\n'<pos:position pos:line="27" pos:column="40"/></literal> <operator pos:line="27" pos:column="41">&amp;&amp;<pos:position pos:line="27" pos:column="51"/></operator> <name pos:line="27" pos:column="44">end<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">&gt;<pos:position pos:line="27" pos:column="52"/></operator> <name pos:line="27" pos:column="50">sbuf<pos:position pos:line="27" pos:column="54"/></name></expr>)<pos:position pos:line="27" pos:column="55"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">end<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">--<pos:position pos:line="28" pos:column="14"/></operator></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt></block></while>

    <expr_stmt><expr><name pos:line="30" pos:column="5">usable<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">end<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">-<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">sbuf<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">debugs<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="number" pos:line="32" pos:column="12">9<pos:position pos:line="32" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="15">3<pos:position pos:line="32" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="18">HERE<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;&lt;<pos:position pos:line="32" pos:column="31"/></operator> <literal type="string" pos:line="32" pos:column="26">"usable = "<pos:position pos:line="32" pos:column="37"/></literal> <operator pos:line="32" pos:column="38">&lt;&lt;<pos:position pos:line="32" pos:column="46"/></operator> <name pos:line="32" pos:column="41">usable<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">usable<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">==<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21"> <block pos:line="34" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">9<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="19">3<pos:position pos:line="35" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="22">HERE<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&lt;&lt;<pos:position pos:line="35" pos:column="35"/></operator> <literal type="string" pos:line="35" pos:column="30">"didn't find end for "<pos:position pos:line="35" pos:column="52"/></literal> <operator pos:line="35" pos:column="53">&lt;&lt;<pos:position pos:line="35" pos:column="61"/></operator> <call><name><name pos:line="35" pos:column="56">e<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">url<pos:position pos:line="35" pos:column="62"/></name></name><argument_list pos:line="35" pos:column="62">()<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr></argument>  )<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">xfree<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name pos:line="36" pos:column="15">sbuf<pos:position pos:line="36" pos:column="19"/></name></expr></argument>)<pos:position pos:line="36" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">debugs<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="number" pos:line="40" pos:column="12">9<pos:position pos:line="40" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="15">3<pos:position pos:line="40" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="18">HERE<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&lt;&lt;<pos:position pos:line="40" pos:column="31"/></operator> <operator pos:line="40" pos:column="26">(<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">unsigned<pos:position pos:line="40" pos:column="35"/></name> <name pos:line="40" pos:column="36">long<pos:position pos:line="40" pos:column="40"/></name> <name pos:line="40" pos:column="41">int<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">)<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="45">len<pos:position pos:line="40" pos:column="48"/></name> <operator pos:line="40" pos:column="49">&lt;&lt;<pos:position pos:line="40" pos:column="57"/></operator> <literal type="string" pos:line="40" pos:column="52">" bytes to play with"<pos:position pos:line="40" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">line<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">char<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">*<pos:position pos:line="42" pos:column="19"/></operator><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator><call><name pos:line="42" pos:column="20">memAllocate<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">MEM_4K_BUF<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">end<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">++<pos:position pos:line="43" pos:column="10"/></operator></expr>;<pos:position pos:line="43" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">e<pos:position pos:line="44" pos:column="6"/></name><operator pos:line="44" pos:column="6">-&gt;<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="8">buffer<pos:position pos:line="44" pos:column="14"/></name></name><argument_list pos:line="44" pos:column="14">()<pos:position pos:line="44" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>	<comment type="block" pos:line="44" pos:column="25">/* released when done processing current data payload */</comment>
    <expr_stmt><expr><name pos:line="45" pos:column="5">s<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <name pos:line="45" pos:column="9">sbuf<pos:position pos:line="45" pos:column="13"/></name></expr>;<pos:position pos:line="45" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">s<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">+=<pos:position pos:line="46" pos:column="9"/></operator> <call><name pos:line="46" pos:column="10">strspn<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">s<pos:position pos:line="46" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="20">crlf<pos:position pos:line="46" pos:column="24"/></name></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>

    <for pos:line="48" pos:column="5">for <control pos:line="48" pos:column="9">(<init pos:line="48" pos:column="10">;<pos:position pos:line="48" pos:column="11"/></init> <condition><expr><name pos:line="48" pos:column="12">s<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">&lt;<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="16">end<pos:position pos:line="48" pos:column="19"/></name></expr>;<pos:position pos:line="48" pos:column="20"/></condition> <incr><expr><name pos:line="48" pos:column="21">s<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">+=<pos:position pos:line="48" pos:column="25"/></operator> <call><name pos:line="48" pos:column="26">strcspn<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">s<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">crlf<pos:position pos:line="48" pos:column="41"/></name></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr><operator pos:line="48" pos:column="42">,<pos:position pos:line="48" pos:column="43"/></operator> <expr><name pos:line="48" pos:column="44">s<pos:position pos:line="48" pos:column="45"/></name> <operator pos:line="48" pos:column="46">+=<pos:position pos:line="48" pos:column="48"/></operator> <call><name pos:line="48" pos:column="49">strspn<pos:position pos:line="48" pos:column="55"/></name><argument_list pos:line="48" pos:column="55">(<argument><expr><name pos:line="48" pos:column="56">s<pos:position pos:line="48" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">crlf<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr></incr>)<pos:position pos:line="48" pos:column="65"/></control> <block pos:line="48" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">debugs<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="number" pos:line="49" pos:column="16">9<pos:position pos:line="49" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="19">7<pos:position pos:line="49" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="22">HERE<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">&lt;&lt;<pos:position pos:line="49" pos:column="35"/></operator> <literal type="string" pos:line="49" pos:column="30">"s = {"<pos:position pos:line="49" pos:column="37"/></literal> <operator pos:line="49" pos:column="38">&lt;&lt;<pos:position pos:line="49" pos:column="46"/></operator> <name pos:line="49" pos:column="41">s<pos:position pos:line="49" pos:column="42"/></name> <operator pos:line="49" pos:column="43">&lt;&lt;<pos:position pos:line="49" pos:column="51"/></operator> <literal type="string" pos:line="49" pos:column="46">"}"<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">linelen<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <call><name pos:line="50" pos:column="19">strcspn<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">s<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="30">crlf<pos:position pos:line="50" pos:column="34"/></name></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call> <operator pos:line="50" pos:column="36">+<pos:position pos:line="50" pos:column="37"/></operator> <literal type="number" pos:line="50" pos:column="38">1<pos:position pos:line="50" pos:column="39"/></literal></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>

        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">linelen<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">&lt;<pos:position pos:line="52" pos:column="25"/></operator> <literal type="number" pos:line="52" pos:column="23">2<pos:position pos:line="52" pos:column="24"/></literal></expr>)<pos:position pos:line="52" pos:column="25"/></condition><then pos:line="52" pos:column="25">
            <block type="pseudo"><break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break></block></then></if>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">linelen<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">&gt;<pos:position pos:line="55" pos:column="25"/></operator> <literal type="number" pos:line="55" pos:column="23">4096<pos:position pos:line="55" pos:column="27"/></literal></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="13">linelen<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">4096<pos:position pos:line="56" pos:column="27"/></literal></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="58" pos:column="9">xstrncpy<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">line<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="24">s<pos:position pos:line="58" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="27">linelen<pos:position pos:line="58" pos:column="34"/></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="60" pos:column="9">debugs<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><literal type="number" pos:line="60" pos:column="16">9<pos:position pos:line="60" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="19">7<pos:position pos:line="60" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="22">HERE<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">&lt;&lt;<pos:position pos:line="60" pos:column="35"/></operator> <literal type="string" pos:line="60" pos:column="30">"{"<pos:position pos:line="60" pos:column="33"/></literal> <operator pos:line="60" pos:column="34">&lt;&lt;<pos:position pos:line="60" pos:column="42"/></operator> <name pos:line="60" pos:column="37">line<pos:position pos:line="60" pos:column="41"/></name> <operator pos:line="60" pos:column="42">&lt;&lt;<pos:position pos:line="60" pos:column="50"/></operator> <literal type="string" pos:line="60" pos:column="45">"}"<pos:position pos:line="60" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><call><name pos:line="62" pos:column="14">strncmp<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">line<pos:position pos:line="62" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="28">"total"<pos:position pos:line="62" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="37">5<pos:position pos:line="62" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40">
            <block type="pseudo"><continue pos:line="63" pos:column="13">continue;<pos:position pos:line="63" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="65" pos:column="9">t<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">=<pos:position pos:line="65" pos:column="12"/></operator> <call><name pos:line="65" pos:column="13">htmlifyListEntry<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">line<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="67" pos:column="9">assert<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name pos:line="67" pos:column="16">t<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">!=<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">NULL<pos:position pos:line="67" pos:column="25"/></name></expr></argument>)<pos:position pos:line="67" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="69" pos:column="9">writeReplyBody<pos:position pos:line="69" pos:column="23"/></name><argument_list pos:line="69" pos:column="23">(<argument><expr><name pos:line="69" pos:column="24">t<pos:position pos:line="69" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="27">strlen<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name pos:line="69" pos:column="34">t<pos:position pos:line="69" pos:column="35"/></name></expr></argument>)<pos:position pos:line="69" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name><name pos:line="72" pos:column="5">data<pos:position pos:line="72" pos:column="9"/></name><operator pos:line="72" pos:column="9">.<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">readBuf<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">-&gt;<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="19">consume<pos:position pos:line="72" pos:column="26"/></name></name><argument_list pos:line="72" pos:column="26">(<argument><expr><name pos:line="72" pos:column="27">usable<pos:position pos:line="72" pos:column="33"/></name></expr></argument>)<pos:position pos:line="72" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">memFree<pos:position pos:line="73" pos:column="12"/></name><argument_list pos:line="73" pos:column="12">(<argument><expr><name pos:line="73" pos:column="13">line<pos:position pos:line="73" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="19">MEM_4K_BUF<pos:position pos:line="73" pos:column="29"/></name></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">xfree<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">sbuf<pos:position pos:line="74" pos:column="15"/></name></expr></argument>)<pos:position pos:line="74" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="17"/></expr_stmt>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

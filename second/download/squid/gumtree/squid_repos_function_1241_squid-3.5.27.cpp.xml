<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1241_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_configuration_includes_quoted_values<pos:position pos:line="2" pos:column="42"/></name><parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><name pos:line="2" pos:column="43">StoreEntry<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier></type> <name pos:line="2" pos:column="61">entry<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="68">const<pos:position pos:line="2" pos:column="73"/></specifier> <name pos:line="2" pos:column="74">char<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier><specifier pos:line="2" pos:column="80">const<pos:position pos:line="2" pos:column="85"/></specifier></type> <name pos:line="2" pos:column="86">name<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="92">bool<pos:position pos:line="2" pos:column="96"/></name></type> <name pos:line="2" pos:column="97">recognizeQuotedValues<pos:position pos:line="2" pos:column="118"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="119"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">val<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><ternary><condition><expr><name><name pos:line="4" pos:column="15">ConfigParser<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">::<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">RecognizeQuotedValues<pos:position pos:line="4" pos:column="50"/></name></name></expr> ?<pos:position pos:line="4" pos:column="52"/></condition><then pos:line="4" pos:column="52"> <expr><literal type="number" pos:line="4" pos:column="53">1<pos:position pos:line="4" pos:column="54"/></literal></expr> <pos:position pos:line="4" pos:column="55"/></then><else pos:line="4" pos:column="55">: <expr><literal type="number" pos:line="4" pos:column="57">0<pos:position pos:line="4" pos:column="58"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">dump_onoff<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">entry<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">name<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">val<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1013_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">update_maxobjsize<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int64_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ms<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><operator pos:line="5" pos:column="18">-<pos:position pos:line="5" pos:column="19"/></operator><literal type="number" pos:line="5" pos:column="19">1<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name><name pos:line="7" pos:column="21">Config<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">.<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">cacheSwap<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">.<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">n_configured<pos:position pos:line="7" pos:column="50"/></name></name></expr>;<pos:position pos:line="7" pos:column="51"/></condition> <incr><expr><name pos:line="7" pos:column="52">i<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">++<pos:position pos:line="7" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="56"/></control> <block pos:line="7" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name><name pos:line="8" pos:column="17">Config<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">cacheSwap<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">swapDirs<pos:position pos:line="8" pos:column="42"/></name><index pos:line="8" pos:column="42">[<expr><name pos:line="8" pos:column="43">i<pos:position pos:line="8" pos:column="44"/></name></expr>]<pos:position pos:line="8" pos:column="45"/></index></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><call><name pos:line="8" pos:column="46">getRaw<pos:position pos:line="8" pos:column="52"/></name><argument_list pos:line="8" pos:column="52">()<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><cast type="dynamic" pos:line="10" pos:column="13">dynamic_cast<argument_list type="generic" pos:line="10" pos:column="25">&lt;<argument><expr><name pos:line="10" pos:column="26">SwapDir<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="39"/></argument_list><argument_list pos:line="10" pos:column="36">(<argument><expr><name><name pos:line="10" pos:column="37">Config<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">.<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">cacheSwap<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">.<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">swapDirs<pos:position pos:line="10" pos:column="62"/></name><index pos:line="10" pos:column="62">[<expr><name pos:line="10" pos:column="63">i<pos:position pos:line="10" pos:column="64"/></name></expr>]<pos:position pos:line="10" pos:column="65"/></index></name><operator pos:line="10" pos:column="65">.<pos:position pos:line="10" pos:column="66"/></operator><call><name pos:line="10" pos:column="66">getRaw<pos:position pos:line="10" pos:column="72"/></name><argument_list pos:line="10" pos:column="72">()<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></cast><operator pos:line="10" pos:column="75">-&gt;<pos:position pos:line="10" pos:column="80"/></operator>
                <name pos:line="11" pos:column="17">max_objsize<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&gt;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="31">ms<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="13">ms<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <cast type="dynamic" pos:line="12" pos:column="18">dynamic_cast<argument_list type="generic" pos:line="12" pos:column="30">&lt;<argument><expr><name pos:line="12" pos:column="31">SwapDir<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">*<pos:position pos:line="12" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="44"/></argument_list><argument_list pos:line="12" pos:column="41">(<argument><expr><name><name pos:line="12" pos:column="42">Config<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">.<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">cacheSwap<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">.<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">swapDirs<pos:position pos:line="12" pos:column="67"/></name><index pos:line="12" pos:column="67">[<expr><name pos:line="12" pos:column="68">i<pos:position pos:line="12" pos:column="69"/></name></expr>]<pos:position pos:line="12" pos:column="70"/></index></name><operator pos:line="12" pos:column="70">.<pos:position pos:line="12" pos:column="71"/></operator><call><name pos:line="12" pos:column="71">getRaw<pos:position pos:line="12" pos:column="77"/></name><argument_list pos:line="12" pos:column="77">()<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></cast><operator pos:line="12" pos:column="80">-&gt;<pos:position pos:line="12" pos:column="85"/></operator><name pos:line="12" pos:column="82">max_objsize<pos:position pos:line="12" pos:column="93"/></name></expr>;<pos:position pos:line="12" pos:column="94"/></expr_stmt></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="14" pos:column="5">store_maxobjsize<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">ms<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

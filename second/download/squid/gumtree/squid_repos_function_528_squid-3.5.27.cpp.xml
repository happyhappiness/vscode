<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_528_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">DoOneRequest<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">char<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">buf<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">RequestData<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">requestData<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ParseBuffer<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">buf<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="22">&amp;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="23">requestData<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name><name pos:line="6" pos:column="10">requestData<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">.<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">parsed<pos:position pos:line="6" pos:column="28"/></name></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">requestData<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">channelId<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">&gt;=<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="38">0<pos:position pos:line="7" pos:column="39"/></literal></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="13">printf<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="string" pos:line="8" pos:column="20">"%u "<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="27">requestData<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">channelId<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">SEND_BH<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><literal type="string" pos:line="9" pos:column="17">"message=\"Invalid line received\""<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">OutputHHA1<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><operator pos:line="12" pos:column="16">&amp;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="17">requestData<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

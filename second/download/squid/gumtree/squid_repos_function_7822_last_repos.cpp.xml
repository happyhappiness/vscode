<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7822_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SMB_Handle_Type<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">SMB_Connect<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">SMB_Handle_Type<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">Con_Handle<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">SMB_Tree_Handle<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">tree<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">service<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="4" pos:column="29">char<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">username<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="5" pos:column="29">char<pos:position pos:line="5" pos:column="33"/></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">password<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="44"/></parameter_list>

<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SMB_Handle_Type<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">con<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">host<pos:position pos:line="9" pos:column="15"/></name></decl>, <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="18">address<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">temp<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><literal type="number" pos:line="10" pos:column="15">80<pos:position pos:line="10" pos:column="17"/></literal></expr>]<pos:position pos:line="10" pos:column="18"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="10" pos:column="20">called<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><literal type="number" pos:line="10" pos:column="27">80<pos:position pos:line="10" pos:column="29"/></literal></expr>]<pos:position pos:line="10" pos:column="30"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="10" pos:column="32">calling<pos:position pos:line="10" pos:column="39"/></name><index pos:line="10" pos:column="39">[<expr><literal type="number" pos:line="10" pos:column="40">80<pos:position pos:line="10" pos:column="42"/></literal></expr>]<pos:position pos:line="10" pos:column="43"/></index></name></decl>;<pos:position pos:line="10" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* Get a connection structure if one does not exist */</comment>

    <expr_stmt><expr><name pos:line="15" pos:column="5">con<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name pos:line="15" pos:column="11">Con_Handle<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">Con_Handle<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">con<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator>struct <name pos:line="19" pos:column="28">SMB_Connect_Def<pos:position pos:line="19" pos:column="43"/></name> <operator pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></operator><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator><call><name pos:line="19" pos:column="46">malloc<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><sizeof pos:line="19" pos:column="53">sizeof<argument_list pos:line="19" pos:column="59">(<argument><expr pos:line="19" pos:column="60">struct <name pos:line="19" pos:column="67">SMB_Connect_Def<pos:position pos:line="19" pos:column="82"/></name></expr></argument>)<pos:position pos:line="19" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="84"/></argument_list></call><operator pos:line="19" pos:column="84">)<pos:position pos:line="19" pos:column="85"/></operator> <operator pos:line="19" pos:column="86">==<pos:position pos:line="19" pos:column="88"/></operator> <name pos:line="19" pos:column="89">NULL<pos:position pos:line="19" pos:column="93"/></name></expr>)<pos:position pos:line="19" pos:column="94"/></condition><then pos:line="19" pos:column="94"> <block pos:line="19" pos:column="95">{

            <expr_stmt><expr><name pos:line="21" pos:column="13">SMBlib_errno<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">SMBlibE_NoSpace<pos:position pos:line="21" pos:column="43"/></name></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
            <return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>

    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* Init some things ... */</comment>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">strncpy<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name><name pos:line="29" pos:column="13">con<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="20">service<pos:position pos:line="29" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">service<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="38">sizeof<argument_list pos:line="29" pos:column="44">(<argument><expr><name><name pos:line="29" pos:column="45">con<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="52">service<pos:position pos:line="29" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">con<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="12">service<pos:position pos:line="30" pos:column="19"/></name><index pos:line="30" pos:column="19">[<expr><sizeof pos:line="30" pos:column="20">sizeof<argument_list pos:line="30" pos:column="26">(<argument><expr><name><name pos:line="30" pos:column="27">con<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="34">service<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></sizeof> <operator pos:line="30" pos:column="43">-<pos:position pos:line="30" pos:column="44"/></operator> <literal type="number" pos:line="30" pos:column="45">1<pos:position pos:line="30" pos:column="46"/></literal></expr>]<pos:position pos:line="30" pos:column="47"/></index></name> <operator pos:line="30" pos:column="48">=<pos:position pos:line="30" pos:column="49"/></operator> <literal type="char" pos:line="30" pos:column="50">'\0'<pos:position pos:line="30" pos:column="54"/></literal></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">strncpy<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name><name pos:line="31" pos:column="13">con<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="20">username<pos:position pos:line="31" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">username<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="40">sizeof<argument_list pos:line="31" pos:column="46">(<argument><expr><name><name pos:line="31" pos:column="47">con<pos:position pos:line="31" pos:column="50"/></name> <operator pos:line="31" pos:column="51">-&gt;<pos:position pos:line="31" pos:column="56"/></operator> <name pos:line="31" pos:column="54">username<pos:position pos:line="31" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">con<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="12">username<pos:position pos:line="32" pos:column="20"/></name><index pos:line="32" pos:column="20">[<expr><sizeof pos:line="32" pos:column="21">sizeof<argument_list pos:line="32" pos:column="27">(<argument><expr><name><name pos:line="32" pos:column="28">con<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="35">username<pos:position pos:line="32" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></sizeof> <operator pos:line="32" pos:column="45">-<pos:position pos:line="32" pos:column="46"/></operator> <literal type="number" pos:line="32" pos:column="47">1<pos:position pos:line="32" pos:column="48"/></literal></expr>]<pos:position pos:line="32" pos:column="49"/></index></name> <operator pos:line="32" pos:column="50">=<pos:position pos:line="32" pos:column="51"/></operator> <literal type="char" pos:line="32" pos:column="52">'\0'<pos:position pos:line="32" pos:column="56"/></literal></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">strncpy<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name><name pos:line="33" pos:column="13">con<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="20">password<pos:position pos:line="33" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="30">password<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="40">sizeof<argument_list pos:line="33" pos:column="46">(<argument><expr><name><name pos:line="33" pos:column="47">con<pos:position pos:line="33" pos:column="50"/></name> <operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator> <name pos:line="33" pos:column="54">password<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">con<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="12">password<pos:position pos:line="34" pos:column="20"/></name><index pos:line="34" pos:column="20">[<expr><sizeof pos:line="34" pos:column="21">sizeof<argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">con<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="35">password<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></sizeof> <operator pos:line="34" pos:column="45">-<pos:position pos:line="34" pos:column="46"/></operator> <literal type="number" pos:line="34" pos:column="47">1<pos:position pos:line="34" pos:column="48"/></literal></expr>]<pos:position pos:line="34" pos:column="49"/></index></name> <operator pos:line="34" pos:column="50">=<pos:position pos:line="34" pos:column="51"/></operator> <literal type="char" pos:line="34" pos:column="52">'\0'<pos:position pos:line="34" pos:column="56"/></literal></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">strcpy<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name><name pos:line="35" pos:column="12">con<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="19">sock_options<pos:position pos:line="35" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">""<pos:position pos:line="35" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">strcpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name><name pos:line="36" pos:column="12">con<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="19">address<pos:position pos:line="36" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="28">""<pos:position pos:line="36" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">strcpy<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name><name pos:line="37" pos:column="12">con<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="19">PDomain<pos:position pos:line="37" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">SMBLIB_DEFAULT_DOMAIN<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">strcpy<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">con<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="19">OSName<pos:position pos:line="38" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">SMBLIB_DEFAULT_OSNAME<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">strcpy<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">con<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="19">LMType<pos:position pos:line="39" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">SMBLIB_DEFAULT_LMTYPE<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">con<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="12">first_tree<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <name><name pos:line="40" pos:column="25">con<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="32">last_tree<pos:position pos:line="40" pos:column="41"/></name></name> <operator pos:line="40" pos:column="42">=<pos:position pos:line="40" pos:column="43"/></operator> <name pos:line="40" pos:column="44">NULL<pos:position pos:line="40" pos:column="48"/></name></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">SMB_Get_My_Name<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name><name pos:line="42" pos:column="21">con<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator> <name pos:line="42" pos:column="28">myname<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="36">sizeof<argument_list pos:line="42" pos:column="42">(<argument><expr><name><name pos:line="42" pos:column="43">con<pos:position pos:line="42" pos:column="46"/></name> <operator pos:line="42" pos:column="47">-&gt;<pos:position pos:line="42" pos:column="52"/></operator> <name pos:line="42" pos:column="50">myname<pos:position pos:line="42" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">con<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator> <name pos:line="44" pos:column="12">port<pos:position pos:line="44" pos:column="16"/></name></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>                    <comment type="block" pos:line="44" pos:column="41">/* No port selected */</comment>

    <comment type="block" pos:line="46" pos:column="5">/* Get some things we need for the SMB Header */</comment>

    <expr_stmt><expr><name><name pos:line="48" pos:column="5">con<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator> <name pos:line="48" pos:column="12">pid<pos:position pos:line="48" pos:column="15"/></name></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <call><name pos:line="48" pos:column="18">getpid<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">()<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">con<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="12">mid<pos:position pos:line="49" pos:column="15"/></name></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name><name pos:line="49" pos:column="18">con<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">-&gt;<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="25">pid<pos:position pos:line="49" pos:column="28"/></name></name></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>      <comment type="block" pos:line="49" pos:column="35">/* This will do for now ... */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">con<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator> <name pos:line="50" pos:column="12">uid<pos:position pos:line="50" pos:column="15"/></name></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal></expr>;<pos:position pos:line="50" pos:column="20"/></expr_stmt>               <comment type="block" pos:line="50" pos:column="35">/* Until we have done a logon, no uid */</comment>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">con<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="12">gid<pos:position pos:line="51" pos:column="15"/></name></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">getgid<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">()<pos:position pos:line="51" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="53" pos:column="5">/* Now figure out the host portion of the service */</comment>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">strncpy<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">temp<pos:position pos:line="55" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="19">service<pos:position pos:line="55" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="28">sizeof<argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">temp<pos:position pos:line="55" pos:column="39"/></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">temp<pos:position pos:line="56" pos:column="9"/></name><index pos:line="56" pos:column="9">[<expr><sizeof pos:line="56" pos:column="10">sizeof<argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">temp<pos:position pos:line="56" pos:column="21"/></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></sizeof> <operator pos:line="56" pos:column="23">-<pos:position pos:line="56" pos:column="24"/></operator> <literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>]<pos:position pos:line="56" pos:column="27"/></index></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <literal type="char" pos:line="56" pos:column="30">'\0'<pos:position pos:line="56" pos:column="34"/></literal></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="57" pos:column="5">host<pos:position pos:line="57" pos:column="9"/></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <call><name pos:line="57" pos:column="12">strtok<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><name pos:line="57" pos:column="19">temp<pos:position pos:line="57" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="25">"/\\"<pos:position pos:line="57" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt>     <comment type="block" pos:line="57" pos:column="37">/* Separate host name portion */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">host<pos:position pos:line="58" pos:column="14"/></name></expr>)<pos:position pos:line="58" pos:column="15"/></condition><then pos:line="58" pos:column="15"> <block pos:line="58" pos:column="16">{
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">Con_Handle<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">==<pos:position pos:line="59" pos:column="26"/></operator> <name pos:line="59" pos:column="27">NULL<pos:position pos:line="59" pos:column="31"/></name></expr>)<pos:position pos:line="59" pos:column="32"/></condition><then pos:line="59" pos:column="32"> <block pos:line="59" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">free<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><name pos:line="60" pos:column="18">con<pos:position pos:line="60" pos:column="21"/></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="61" pos:column="13">Con_Handle<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="26">NULL<pos:position pos:line="61" pos:column="30"/></name></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="63" pos:column="9">SMBlib_errno<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <operator pos:line="63" pos:column="24">-<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="25">SMBlibE_CallFailed<pos:position pos:line="63" pos:column="43"/></name></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">NULL<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">strncpy<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name><name pos:line="66" pos:column="13">con<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">desthost<pos:position pos:line="66" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="28">host<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="34">sizeof<argument_list pos:line="66" pos:column="40">(<argument><expr><name><name pos:line="66" pos:column="41">con<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">desthost<pos:position pos:line="66" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">con<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">desthost<pos:position pos:line="67" pos:column="18"/></name><index pos:line="67" pos:column="18">[<expr><sizeof pos:line="67" pos:column="19">sizeof<argument_list pos:line="67" pos:column="25">(<argument><expr><name><name pos:line="67" pos:column="26">con<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">-&gt;<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="31">desthost<pos:position pos:line="67" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></sizeof><operator pos:line="67" pos:column="40">-<pos:position pos:line="67" pos:column="41"/></operator><literal type="number" pos:line="67" pos:column="41">1<pos:position pos:line="67" pos:column="42"/></literal></expr>]<pos:position pos:line="67" pos:column="43"/></index></name><operator pos:line="67" pos:column="43">=<pos:position pos:line="67" pos:column="44"/></operator><literal type="char" pos:line="67" pos:column="44">'\0'<pos:position pos:line="67" pos:column="48"/></literal></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="69" pos:column="5">/* Now connect to the remote end, but first upper case the name of the
       service we are going to call, sine some servers want it in uppercase */</comment>

    <for pos:line="72" pos:column="5">for <control pos:line="72" pos:column="9">(<init><expr><name pos:line="72" pos:column="10">i<pos:position pos:line="72" pos:column="11"/></name><operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator><literal type="number" pos:line="72" pos:column="12">0<pos:position pos:line="72" pos:column="13"/></literal></expr>;<pos:position pos:line="72" pos:column="14"/></init> <condition><expr><name pos:line="72" pos:column="15">i<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">&lt;<pos:position pos:line="72" pos:column="21"/></operator> <call><name pos:line="72" pos:column="19">strlen<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name pos:line="72" pos:column="26">host<pos:position pos:line="72" pos:column="30"/></name></expr></argument>)<pos:position pos:line="72" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="32"/></condition> <incr><expr><name pos:line="72" pos:column="33">i<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">++<pos:position pos:line="72" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="37"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="9">called<pos:position pos:line="73" pos:column="15"/></name><index pos:line="73" pos:column="15">[<expr><name pos:line="73" pos:column="16">i<pos:position pos:line="73" pos:column="17"/></name></expr>]<pos:position pos:line="73" pos:column="18"/></index></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <call><name pos:line="73" pos:column="21">xtoupper<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name><name pos:line="73" pos:column="30">host<pos:position pos:line="73" pos:column="34"/></name><index pos:line="73" pos:column="34">[<expr><name pos:line="73" pos:column="35">i<pos:position pos:line="73" pos:column="36"/></name></expr>]<pos:position pos:line="73" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="75" pos:column="5">called<pos:position pos:line="75" pos:column="11"/></name><index pos:line="75" pos:column="11">[<expr><call><name pos:line="75" pos:column="12">strlen<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">host<pos:position pos:line="75" pos:column="23"/></name></expr></argument>)<pos:position pos:line="75" pos:column="24"/></argument_list></call></expr>]<pos:position pos:line="75" pos:column="25"/></index></name> <operator pos:line="75" pos:column="26">=<pos:position pos:line="75" pos:column="27"/></operator> <literal type="number" pos:line="75" pos:column="28">0<pos:position pos:line="75" pos:column="29"/></literal></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>    <comment type="block" pos:line="75" pos:column="34">/* Make it a string */</comment>

    <for pos:line="77" pos:column="5">for <control pos:line="77" pos:column="9">(<init><expr><name pos:line="77" pos:column="10">i<pos:position pos:line="77" pos:column="11"/></name><operator pos:line="77" pos:column="11">=<pos:position pos:line="77" pos:column="12"/></operator><literal type="number" pos:line="77" pos:column="12">0<pos:position pos:line="77" pos:column="13"/></literal></expr>;<pos:position pos:line="77" pos:column="14"/></init> <condition><expr><name pos:line="77" pos:column="15">i<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">&lt;<pos:position pos:line="77" pos:column="21"/></operator> <call><name pos:line="77" pos:column="19">strlen<pos:position pos:line="77" pos:column="25"/></name><argument_list pos:line="77" pos:column="25">(<argument><expr><name><name pos:line="77" pos:column="26">con<pos:position pos:line="77" pos:column="29"/></name> <operator pos:line="77" pos:column="30">-&gt;<pos:position pos:line="77" pos:column="35"/></operator> <name pos:line="77" pos:column="33">myname<pos:position pos:line="77" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="41"/></condition> <incr><expr><name pos:line="77" pos:column="42">i<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">++<pos:position pos:line="77" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="77" pos:column="46"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="9">calling<pos:position pos:line="78" pos:column="16"/></name><index pos:line="78" pos:column="16">[<expr><name pos:line="78" pos:column="17">i<pos:position pos:line="78" pos:column="18"/></name></expr>]<pos:position pos:line="78" pos:column="19"/></index></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <call><name pos:line="78" pos:column="22">xtoupper<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><name><name pos:line="78" pos:column="31">con<pos:position pos:line="78" pos:column="34"/></name> <operator pos:line="78" pos:column="35">-&gt;<pos:position pos:line="78" pos:column="40"/></operator> <name pos:line="78" pos:column="38">myname<pos:position pos:line="78" pos:column="44"/></name><index pos:line="78" pos:column="44">[<expr><name pos:line="78" pos:column="45">i<pos:position pos:line="78" pos:column="46"/></name></expr>]<pos:position pos:line="78" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="49"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="80" pos:column="5">calling<pos:position pos:line="80" pos:column="12"/></name><index pos:line="80" pos:column="12">[<expr><call><name pos:line="80" pos:column="13">strlen<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name><name pos:line="80" pos:column="20">con<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator> <name pos:line="80" pos:column="27">myname<pos:position pos:line="80" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="34"/></argument_list></call></expr>]<pos:position pos:line="80" pos:column="35"/></index></name> <operator pos:line="80" pos:column="36">=<pos:position pos:line="80" pos:column="37"/></operator> <literal type="number" pos:line="80" pos:column="38">0<pos:position pos:line="80" pos:column="39"/></literal></expr>;<pos:position pos:line="80" pos:column="40"/></expr_stmt>    <comment type="block" pos:line="80" pos:column="44">/* Make it a string */</comment>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><call><name pos:line="82" pos:column="9">strlen<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><name><name pos:line="82" pos:column="16">con<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">-&gt;<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="23">address<pos:position pos:line="82" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="31"/></argument_list></call> <operator pos:line="82" pos:column="32">==<pos:position pos:line="82" pos:column="34"/></operator> <literal type="number" pos:line="82" pos:column="35">0<pos:position pos:line="82" pos:column="36"/></literal></expr>)<pos:position pos:line="82" pos:column="37"/></condition><then pos:line="82" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="9">address<pos:position pos:line="83" pos:column="16"/></name> <operator pos:line="83" pos:column="17">=<pos:position pos:line="83" pos:column="18"/></operator> <name><name pos:line="83" pos:column="19">con<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">-&gt;<pos:position pos:line="83" pos:column="28"/></operator> <name pos:line="83" pos:column="26">desthost<pos:position pos:line="83" pos:column="34"/></name></name></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt></block></then>
    <else pos:line="84" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="9">address<pos:position pos:line="85" pos:column="16"/></name> <operator pos:line="85" pos:column="17">=<pos:position pos:line="85" pos:column="18"/></operator> <name><name pos:line="85" pos:column="19">con<pos:position pos:line="85" pos:column="22"/></name> <operator pos:line="85" pos:column="23">-&gt;<pos:position pos:line="85" pos:column="28"/></operator> <name pos:line="85" pos:column="26">address<pos:position pos:line="85" pos:column="33"/></name></name></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="87" pos:column="5">con<pos:position pos:line="87" pos:column="8"/></name> <operator pos:line="87" pos:column="9">-&gt;<pos:position pos:line="87" pos:column="14"/></operator> <name pos:line="87" pos:column="12">Trans_Connect<pos:position pos:line="87" pos:column="25"/></name></name> <operator pos:line="87" pos:column="26">=<pos:position pos:line="87" pos:column="27"/></operator> <call><name pos:line="87" pos:column="28">RFCNB_Call<pos:position pos:line="87" pos:column="38"/></name><argument_list pos:line="87" pos:column="38">(<argument><expr><name pos:line="87" pos:column="39">called<pos:position pos:line="87" pos:column="45"/></name></expr></argument>,
                                      <argument><expr><name pos:line="88" pos:column="39">calling<pos:position pos:line="88" pos:column="46"/></name></expr></argument>,
                                      <argument><expr><name pos:line="89" pos:column="39">address<pos:position pos:line="89" pos:column="46"/></name></expr></argument>, <comment type="block" pos:line="89" pos:column="48">/* Protocol specific */</comment>
                                      <argument><expr><name><name pos:line="90" pos:column="39">con<pos:position pos:line="90" pos:column="42"/></name> <operator pos:line="90" pos:column="43">-&gt;<pos:position pos:line="90" pos:column="48"/></operator> <name pos:line="90" pos:column="46">port<pos:position pos:line="90" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="92" pos:column="5">/* Did we get one? */</comment>

    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><name><name pos:line="94" pos:column="9">con<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">-&gt;<pos:position pos:line="94" pos:column="18"/></operator> <name pos:line="94" pos:column="16">Trans_Connect<pos:position pos:line="94" pos:column="29"/></name></name> <operator pos:line="94" pos:column="30">==<pos:position pos:line="94" pos:column="32"/></operator> <name pos:line="94" pos:column="33">NULL<pos:position pos:line="94" pos:column="37"/></name></expr>)<pos:position pos:line="94" pos:column="38"/></condition><then pos:line="94" pos:column="38"> <block pos:line="94" pos:column="39">{

        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">Con_Handle<pos:position pos:line="96" pos:column="23"/></name> <operator pos:line="96" pos:column="24">==<pos:position pos:line="96" pos:column="26"/></operator> <name pos:line="96" pos:column="27">NULL<pos:position pos:line="96" pos:column="31"/></name></expr>)<pos:position pos:line="96" pos:column="32"/></condition><then pos:line="96" pos:column="32"> <block pos:line="96" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">free<pos:position pos:line="97" pos:column="17"/></name><argument_list pos:line="97" pos:column="17">(<argument><expr><name pos:line="97" pos:column="18">con<pos:position pos:line="97" pos:column="21"/></name></expr></argument>)<pos:position pos:line="97" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="98" pos:column="13">Con_Handle<pos:position pos:line="98" pos:column="23"/></name> <operator pos:line="98" pos:column="24">=<pos:position pos:line="98" pos:column="25"/></operator> <name pos:line="98" pos:column="26">NULL<pos:position pos:line="98" pos:column="30"/></name></expr>;<pos:position pos:line="98" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="100" pos:column="9">SMBlib_errno<pos:position pos:line="100" pos:column="21"/></name> <operator pos:line="100" pos:column="22">=<pos:position pos:line="100" pos:column="23"/></operator> <operator pos:line="100" pos:column="24">-<pos:position pos:line="100" pos:column="25"/></operator><name pos:line="100" pos:column="25">SMBlibE_CallFailed<pos:position pos:line="100" pos:column="43"/></name></expr>;<pos:position pos:line="100" pos:column="44"/></expr_stmt>
        <return pos:line="101" pos:column="9">return <expr><name pos:line="101" pos:column="16">NULL<pos:position pos:line="101" pos:column="20"/></name></expr>;<pos:position pos:line="101" pos:column="21"/></return>

    }<pos:position pos:line="103" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="105" pos:column="5">/* Now, negotiate the protocol */</comment>

    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><call><name pos:line="107" pos:column="9">SMB_Negotiate<pos:position pos:line="107" pos:column="22"/></name><argument_list pos:line="107" pos:column="22">(<argument><expr><name pos:line="107" pos:column="23">con<pos:position pos:line="107" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="28">SMB_Prots_Restrict<pos:position pos:line="107" pos:column="46"/></name></expr></argument>)<pos:position pos:line="107" pos:column="47"/></argument_list></call> <operator pos:line="107" pos:column="48">&lt;<pos:position pos:line="107" pos:column="52"/></operator> <literal type="number" pos:line="107" pos:column="50">0<pos:position pos:line="107" pos:column="51"/></literal></expr>)<pos:position pos:line="107" pos:column="52"/></condition><then pos:line="107" pos:column="52"> <block pos:line="107" pos:column="53">{

        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">Con_Handle<pos:position pos:line="109" pos:column="23"/></name> <operator pos:line="109" pos:column="24">==<pos:position pos:line="109" pos:column="26"/></operator> <name pos:line="109" pos:column="27">NULL<pos:position pos:line="109" pos:column="31"/></name></expr>)<pos:position pos:line="109" pos:column="32"/></condition><then pos:line="109" pos:column="32"> <block pos:line="109" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">free<pos:position pos:line="110" pos:column="17"/></name><argument_list pos:line="110" pos:column="17">(<argument><expr><name pos:line="110" pos:column="18">con<pos:position pos:line="110" pos:column="21"/></name></expr></argument>)<pos:position pos:line="110" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="111" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="112" pos:column="9">SMBlib_errno<pos:position pos:line="112" pos:column="21"/></name> <operator pos:line="112" pos:column="22">=<pos:position pos:line="112" pos:column="23"/></operator> <operator pos:line="112" pos:column="24">-<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="25">SMBlibE_NegNoProt<pos:position pos:line="112" pos:column="42"/></name></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt>
        <return pos:line="113" pos:column="9">return <expr><name pos:line="113" pos:column="16">NULL<pos:position pos:line="113" pos:column="20"/></name></expr>;<pos:position pos:line="113" pos:column="21"/></return>

    }<pos:position pos:line="115" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="117" pos:column="5">/* Now connect to the service ... */</comment>

    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><operator pos:line="119" pos:column="9">(<pos:position pos:line="119" pos:column="10"/></operator><operator pos:line="119" pos:column="10">*<pos:position pos:line="119" pos:column="11"/></operator><name pos:line="119" pos:column="11">tree<pos:position pos:line="119" pos:column="15"/></name> <operator pos:line="119" pos:column="16">=<pos:position pos:line="119" pos:column="17"/></operator> <call><name pos:line="119" pos:column="18">SMB_TreeConnect<pos:position pos:line="119" pos:column="33"/></name><argument_list pos:line="119" pos:column="33">(<argument><expr><name pos:line="119" pos:column="34">con<pos:position pos:line="119" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="39">NULL<pos:position pos:line="119" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="45">service<pos:position pos:line="119" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="54">password<pos:position pos:line="119" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="64">"A:"<pos:position pos:line="119" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="69"/></argument_list></call><operator pos:line="119" pos:column="69">)<pos:position pos:line="119" pos:column="70"/></operator> <operator pos:line="119" pos:column="71">==<pos:position pos:line="119" pos:column="73"/></operator> <name pos:line="119" pos:column="74">NULL<pos:position pos:line="119" pos:column="78"/></name></expr>)<pos:position pos:line="119" pos:column="79"/></condition><then pos:line="119" pos:column="79"> <block pos:line="119" pos:column="80">{

        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">Con_Handle<pos:position pos:line="121" pos:column="23"/></name> <operator pos:line="121" pos:column="24">==<pos:position pos:line="121" pos:column="26"/></operator> <name pos:line="121" pos:column="27">NULL<pos:position pos:line="121" pos:column="31"/></name></expr>)<pos:position pos:line="121" pos:column="32"/></condition><then pos:line="121" pos:column="32"> <block pos:line="121" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="122" pos:column="13">free<pos:position pos:line="122" pos:column="17"/></name><argument_list pos:line="122" pos:column="17">(<argument><expr><name pos:line="122" pos:column="18">con<pos:position pos:line="122" pos:column="21"/></name></expr></argument>)<pos:position pos:line="122" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="124" pos:column="9">SMBlib_errno<pos:position pos:line="124" pos:column="21"/></name> <operator pos:line="124" pos:column="22">=<pos:position pos:line="124" pos:column="23"/></operator> <operator pos:line="124" pos:column="24">-<pos:position pos:line="124" pos:column="25"/></operator><name pos:line="124" pos:column="25">SMBlibE_BAD<pos:position pos:line="124" pos:column="36"/></name></expr>;<pos:position pos:line="124" pos:column="37"/></expr_stmt>
        <return pos:line="125" pos:column="9">return <expr><name pos:line="125" pos:column="16">NULL<pos:position pos:line="125" pos:column="20"/></name></expr>;<pos:position pos:line="125" pos:column="21"/></return>

    }<pos:position pos:line="127" pos:column="6"/></block></then></if>

    <return pos:line="129" pos:column="5">return<expr><operator pos:line="129" pos:column="11">(<pos:position pos:line="129" pos:column="12"/></operator><name pos:line="129" pos:column="12">con<pos:position pos:line="129" pos:column="15"/></name><operator pos:line="129" pos:column="15">)<pos:position pos:line="129" pos:column="16"/></operator></expr>;<pos:position pos:line="129" pos:column="17"/></return>

}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_185_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">MainSafe<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">argc<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier><modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">argv<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">bufa<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">EDUI_MAXLEN<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="29">bufb<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><name pos:line="4" pos:column="34">EDUI_MAXLEN<pos:position pos:line="4" pos:column="45"/></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>, <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="49">p<pos:position pos:line="4" pos:column="50"/></name> <init pos:line="4" pos:column="51">= <expr><name pos:line="4" pos:column="53">NULL<pos:position pos:line="4" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">bufc<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">EDUI_MAXLEN<pos:position pos:line="5" pos:column="26"/></name></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">sfmod<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><name pos:line="6" pos:column="16">EDUI_MAXLEN<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">x<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="15">j<pos:position pos:line="8" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="18">s<pos:position pos:line="8" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">k<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">time_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">t<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">sigaction<pos:position pos:line="10" pos:column="21"/></name></name></type> <name pos:line="10" pos:column="22">sv<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Init */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">k<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">size_t<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">)<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">argc<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memset<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">bufa<pos:position pos:line="14" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="18">'\0'<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="24">sizeof<argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">bufa<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memset<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">bufb<pos:position pos:line="15" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="18">'\0'<pos:position pos:line="15" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="24">sizeof<argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">bufb<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memset<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">bufc<pos:position pos:line="16" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="18">'\0'<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="24">sizeof<argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">bufc<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">memset<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">sfmod<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="19">'\0'<pos:position pos:line="17" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="25">sizeof<argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">sfmod<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">InitConf<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">()<pos:position pos:line="19" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">xstrncpy<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name><name pos:line="20" pos:column="14">edui_conf<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">program<pos:position pos:line="20" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="33">argv<pos:position pos:line="20" pos:column="37"/></name><index pos:line="20" pos:column="37">[<expr><literal type="number" pos:line="20" pos:column="38">0<pos:position pos:line="20" pos:column="39"/></literal></expr>]<pos:position pos:line="20" pos:column="40"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="42">sizeof<argument_list pos:line="20" pos:column="48">(<argument><expr><name><name pos:line="20" pos:column="49">edui_conf<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">program<pos:position pos:line="20" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">edui_now<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">t<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <operator pos:line="22" pos:column="9">-<pos:position pos:line="22" pos:column="10"/></operator><literal type="number" pos:line="22" pos:column="10">1<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Scan args */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">k<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">&gt;<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15"> <block pos:line="25" pos:column="16">{
        <for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">1<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="25">k<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></condition> <incr><expr><operator pos:line="26" pos:column="28">++<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name></expr></incr>)<pos:position pos:line="26" pos:column="32"/></control> <block pos:line="26" pos:column="33">{
            <comment type="block" pos:line="27" pos:column="13">/* Classic / novelty usage schemes */</comment>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><operator pos:line="28" pos:column="17">!<pos:position pos:line="28" pos:column="18"/></operator><call><name pos:line="28" pos:column="18">strcmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name><name pos:line="28" pos:column="25">argv<pos:position pos:line="28" pos:column="29"/></name><index pos:line="28" pos:column="29">[<expr><name pos:line="28" pos:column="30">i<pos:position pos:line="28" pos:column="31"/></name></expr>]<pos:position pos:line="28" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"--help"<pos:position pos:line="28" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <block pos:line="28" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">DisplayUsage<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">()<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
                <return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then> <elseif pos:line="31" pos:column="15">else <if pos:line="31" pos:column="20">if <condition pos:line="31" pos:column="23">(<expr><operator pos:line="31" pos:column="24">!<pos:position pos:line="31" pos:column="25"/></operator><call><name pos:line="31" pos:column="25">strcmp<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name><name pos:line="31" pos:column="32">argv<pos:position pos:line="31" pos:column="36"/></name><index pos:line="31" pos:column="36">[<expr><name pos:line="31" pos:column="37">i<pos:position pos:line="31" pos:column="38"/></name></expr>]<pos:position pos:line="31" pos:column="39"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="41">"--usage"<pos:position pos:line="31" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52"> <block pos:line="31" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">DisplayUsage<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">()<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
                <return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">1<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if></elseif> <elseif pos:line="34" pos:column="15">else <if pos:line="34" pos:column="20">if <condition pos:line="34" pos:column="23">(<expr><operator pos:line="34" pos:column="24">!<pos:position pos:line="34" pos:column="25"/></operator><call><name pos:line="34" pos:column="25">strcmp<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name><name pos:line="34" pos:column="32">argv<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><name pos:line="34" pos:column="37">i<pos:position pos:line="34" pos:column="38"/></name></expr>]<pos:position pos:line="34" pos:column="39"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="41">"--version"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="54"/></condition><then pos:line="34" pos:column="54"> <block pos:line="34" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="35" pos:column="17">DisplayVersion<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">()<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
                <return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if></elseif> <elseif pos:line="37" pos:column="15">else <if pos:line="37" pos:column="20">if <condition pos:line="37" pos:column="23">(<expr><name><name pos:line="37" pos:column="24">argv<pos:position pos:line="37" pos:column="28"/></name><index pos:line="37" pos:column="28">[<expr><name pos:line="37" pos:column="29">i<pos:position pos:line="37" pos:column="30"/></name></expr>]<pos:position pos:line="37" pos:column="31"/></index><index pos:line="37" pos:column="31">[<expr><literal type="number" pos:line="37" pos:column="32">0<pos:position pos:line="37" pos:column="33"/></literal></expr>]<pos:position pos:line="37" pos:column="34"/></index></name> <operator pos:line="37" pos:column="35">==<pos:position pos:line="37" pos:column="37"/></operator> <literal type="char" pos:line="37" pos:column="38">'-'<pos:position pos:line="37" pos:column="41"/></literal></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42"> <block pos:line="37" pos:column="43">{
                <expr_stmt><expr><name pos:line="38" pos:column="17">s<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">strlen<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name><name pos:line="38" pos:column="28">argv<pos:position pos:line="38" pos:column="32"/></name><index pos:line="38" pos:column="32">[<expr><name pos:line="38" pos:column="33">i<pos:position pos:line="38" pos:column="34"/></name></expr>]<pos:position pos:line="38" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
                <for pos:line="39" pos:column="17">for <control pos:line="39" pos:column="21">(<init><expr><name pos:line="39" pos:column="22">j<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">1<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></init> <condition><expr><name pos:line="39" pos:column="29">j<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">&lt;<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="33">s<pos:position pos:line="39" pos:column="34"/></name></expr>;<pos:position pos:line="39" pos:column="35"/></condition> <incr><expr><operator pos:line="39" pos:column="36">++<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">j<pos:position pos:line="39" pos:column="39"/></name></expr></incr>)<pos:position pos:line="39" pos:column="40"/></control> <block pos:line="39" pos:column="41">{
                    <switch pos:line="40" pos:column="21">switch <condition pos:line="40" pos:column="28">(<expr><name><name pos:line="40" pos:column="29">argv<pos:position pos:line="40" pos:column="33"/></name><index pos:line="40" pos:column="33">[<expr><name pos:line="40" pos:column="34">i<pos:position pos:line="40" pos:column="35"/></name></expr>]<pos:position pos:line="40" pos:column="36"/></index><index pos:line="40" pos:column="36">[<expr><name pos:line="40" pos:column="37">j<pos:position pos:line="40" pos:column="38"/></name></expr>]<pos:position pos:line="40" pos:column="39"/></index></name></expr>)<pos:position pos:line="40" pos:column="40"/></condition> <block pos:line="40" pos:column="41">{
                    <case pos:line="41" pos:column="21">case <expr><literal type="char" pos:line="41" pos:column="26">'h'<pos:position pos:line="41" pos:column="29"/></literal></expr>:<pos:position pos:line="41" pos:column="30"/></case>
                        <expr_stmt><expr><call><name pos:line="42" pos:column="25">DisplayUsage<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">()<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
                        <return pos:line="43" pos:column="25">return <expr><literal type="number" pos:line="43" pos:column="32">1<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></return>
                    <case pos:line="44" pos:column="21">case <expr><literal type="char" pos:line="44" pos:column="26">'V'<pos:position pos:line="44" pos:column="29"/></literal></expr>:<pos:position pos:line="44" pos:column="30"/></case>
                        <expr_stmt><expr><call><name pos:line="45" pos:column="25">DisplayVersion<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">()<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
                        <return pos:line="46" pos:column="25">return <expr><literal type="number" pos:line="46" pos:column="32">1<pos:position pos:line="46" pos:column="33"/></literal></expr>;<pos:position pos:line="46" pos:column="34"/></return>
                    <case pos:line="47" pos:column="21">case <expr><literal type="char" pos:line="47" pos:column="26">'d'<pos:position pos:line="47" pos:column="29"/></literal></expr>:<pos:position pos:line="47" pos:column="30"/></case>
                        <if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><operator pos:line="48" pos:column="29">!<pos:position pos:line="48" pos:column="30"/></operator><operator pos:line="48" pos:column="30">(<pos:position pos:line="48" pos:column="31"/></operator><name><name pos:line="48" pos:column="31">edui_conf<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">.<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="41">mode<pos:position pos:line="48" pos:column="45"/></name></name> <operator pos:line="48" pos:column="46">&amp;<pos:position pos:line="48" pos:column="51"/></operator> <name pos:line="48" pos:column="48">EDUI_MODE_DEBUG<pos:position pos:line="48" pos:column="63"/></name><operator pos:line="48" pos:column="63">)<pos:position pos:line="48" pos:column="64"/></operator></expr>)<pos:position pos:line="48" pos:column="65"/></condition><then pos:line="48" pos:column="65">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="29">edui_conf<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">.<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="39">mode<pos:position pos:line="49" pos:column="43"/></name></name> <operator pos:line="49" pos:column="44">|=<pos:position pos:line="49" pos:column="46"/></operator> <name pos:line="49" pos:column="47">EDUI_MODE_DEBUG<pos:position pos:line="49" pos:column="62"/></name></expr>;<pos:position pos:line="49" pos:column="63"/></expr_stmt></block></then></if>		<comment type="block" pos:line="49" pos:column="73">/* Don't set mode more than once */</comment>
                        <expr_stmt><expr><name pos:line="50" pos:column="25">debug_enabled<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">=<pos:position pos:line="50" pos:column="40"/></operator> <literal type="number" pos:line="50" pos:column="41">1<pos:position pos:line="50" pos:column="42"/></literal></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>				<comment type="block" pos:line="50" pos:column="73">/* Official Squid-3 Debug Mode */</comment>
                        <break pos:line="51" pos:column="25">break;<pos:position pos:line="51" pos:column="31"/></break>
                    <case pos:line="52" pos:column="21">case <expr><literal type="char" pos:line="52" pos:column="26">'4'<pos:position pos:line="52" pos:column="29"/></literal></expr>:<pos:position pos:line="52" pos:column="30"/></case>
                        <if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">!<pos:position pos:line="53" pos:column="30"/></operator><operator pos:line="53" pos:column="30">(<pos:position pos:line="53" pos:column="31"/></operator><name><name pos:line="53" pos:column="31">edui_conf<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">.<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="41">mode<pos:position pos:line="53" pos:column="45"/></name></name> <operator pos:line="53" pos:column="46">&amp;<pos:position pos:line="53" pos:column="51"/></operator> <name pos:line="53" pos:column="48">EDUI_MODE_IPV4<pos:position pos:line="53" pos:column="62"/></name><operator pos:line="53" pos:column="62">)<pos:position pos:line="53" pos:column="63"/></operator> <operator pos:line="53" pos:column="64">||<pos:position pos:line="53" pos:column="66"/></operator> <operator pos:line="53" pos:column="67">!<pos:position pos:line="53" pos:column="68"/></operator><operator pos:line="53" pos:column="68">(<pos:position pos:line="53" pos:column="69"/></operator><name><name pos:line="53" pos:column="69">edui_conf<pos:position pos:line="53" pos:column="78"/></name><operator pos:line="53" pos:column="78">.<pos:position pos:line="53" pos:column="79"/></operator><name pos:line="53" pos:column="79">mode<pos:position pos:line="53" pos:column="83"/></name></name> <operator pos:line="53" pos:column="84">&amp;<pos:position pos:line="53" pos:column="89"/></operator> <name pos:line="53" pos:column="86">EDUI_MODE_IPV6<pos:position pos:line="53" pos:column="100"/></name><operator pos:line="53" pos:column="100">)<pos:position pos:line="53" pos:column="101"/></operator></expr>)<pos:position pos:line="53" pos:column="102"/></condition><then pos:line="53" pos:column="102">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="29">edui_conf<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">.<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">mode<pos:position pos:line="54" pos:column="43"/></name></name> <operator pos:line="54" pos:column="44">|=<pos:position pos:line="54" pos:column="46"/></operator> <name pos:line="54" pos:column="47">EDUI_MODE_IPV4<pos:position pos:line="54" pos:column="61"/></name></expr>;<pos:position pos:line="54" pos:column="62"/></expr_stmt></block></then></if>		<comment type="block" pos:line="54" pos:column="73">/* Don't set mode more than once */</comment>
                        <break pos:line="55" pos:column="25">break;<pos:position pos:line="55" pos:column="31"/></break>
                    <case pos:line="56" pos:column="21">case <expr><literal type="char" pos:line="56" pos:column="26">'6'<pos:position pos:line="56" pos:column="29"/></literal></expr>:<pos:position pos:line="56" pos:column="30"/></case>
                        <if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><operator pos:line="57" pos:column="29">!<pos:position pos:line="57" pos:column="30"/></operator><operator pos:line="57" pos:column="30">(<pos:position pos:line="57" pos:column="31"/></operator><name><name pos:line="57" pos:column="31">edui_conf<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">.<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="41">mode<pos:position pos:line="57" pos:column="45"/></name></name> <operator pos:line="57" pos:column="46">&amp;<pos:position pos:line="57" pos:column="51"/></operator> <name pos:line="57" pos:column="48">EDUI_MODE_IPV4<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">)<pos:position pos:line="57" pos:column="63"/></operator> <operator pos:line="57" pos:column="64">||<pos:position pos:line="57" pos:column="66"/></operator> <operator pos:line="57" pos:column="67">!<pos:position pos:line="57" pos:column="68"/></operator><operator pos:line="57" pos:column="68">(<pos:position pos:line="57" pos:column="69"/></operator><name><name pos:line="57" pos:column="69">edui_conf<pos:position pos:line="57" pos:column="78"/></name><operator pos:line="57" pos:column="78">.<pos:position pos:line="57" pos:column="79"/></operator><name pos:line="57" pos:column="79">mode<pos:position pos:line="57" pos:column="83"/></name></name> <operator pos:line="57" pos:column="84">&amp;<pos:position pos:line="57" pos:column="89"/></operator> <name pos:line="57" pos:column="86">EDUI_MODE_IPV6<pos:position pos:line="57" pos:column="100"/></name><operator pos:line="57" pos:column="100">)<pos:position pos:line="57" pos:column="101"/></operator></expr>)<pos:position pos:line="57" pos:column="102"/></condition><then pos:line="57" pos:column="102">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="29">edui_conf<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">.<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="39">mode<pos:position pos:line="58" pos:column="43"/></name></name> <operator pos:line="58" pos:column="44">|=<pos:position pos:line="58" pos:column="46"/></operator> <name pos:line="58" pos:column="47">EDUI_MODE_IPV6<pos:position pos:line="58" pos:column="61"/></name></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt></block></then></if>		<comment type="block" pos:line="58" pos:column="73">/* Don't set mode more than once */</comment>
                        <break pos:line="59" pos:column="25">break;<pos:position pos:line="59" pos:column="31"/></break>
                    <case pos:line="60" pos:column="21">case <expr><literal type="char" pos:line="60" pos:column="26">'Z'<pos:position pos:line="60" pos:column="29"/></literal></expr>:<pos:position pos:line="60" pos:column="30"/></case>
                        <if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><operator pos:line="61" pos:column="29">!<pos:position pos:line="61" pos:column="30"/></operator><operator pos:line="61" pos:column="30">(<pos:position pos:line="61" pos:column="31"/></operator><name><name pos:line="61" pos:column="31">edui_conf<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">.<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="41">mode<pos:position pos:line="61" pos:column="45"/></name></name> <operator pos:line="61" pos:column="46">&amp;<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="48">EDUI_MODE_TLS<pos:position pos:line="61" pos:column="61"/></name><operator pos:line="61" pos:column="61">)<pos:position pos:line="61" pos:column="62"/></operator></expr>)<pos:position pos:line="61" pos:column="63"/></condition><then pos:line="61" pos:column="63">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="29">edui_conf<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">.<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">mode<pos:position pos:line="62" pos:column="43"/></name></name> <operator pos:line="62" pos:column="44">|=<pos:position pos:line="62" pos:column="46"/></operator> <name pos:line="62" pos:column="47">EDUI_MODE_TLS<pos:position pos:line="62" pos:column="60"/></name></expr>;<pos:position pos:line="62" pos:column="61"/></expr_stmt></block></then></if>		<comment type="block" pos:line="62" pos:column="73">/* Don't set mode more than once */</comment>
                        <break pos:line="63" pos:column="25">break;<pos:position pos:line="63" pos:column="31"/></break>
                    <case pos:line="64" pos:column="21">case <expr><literal type="char" pos:line="64" pos:column="26">'P'<pos:position pos:line="64" pos:column="29"/></literal></expr>:<pos:position pos:line="64" pos:column="30"/></case>
                        <if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><operator pos:line="65" pos:column="29">!<pos:position pos:line="65" pos:column="30"/></operator><operator pos:line="65" pos:column="30">(<pos:position pos:line="65" pos:column="31"/></operator><name><name pos:line="65" pos:column="31">edui_conf<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">.<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="41">mode<pos:position pos:line="65" pos:column="45"/></name></name> <operator pos:line="65" pos:column="46">&amp;<pos:position pos:line="65" pos:column="51"/></operator> <name pos:line="65" pos:column="48">EDUI_MODE_PERSIST<pos:position pos:line="65" pos:column="65"/></name><operator pos:line="65" pos:column="65">)<pos:position pos:line="65" pos:column="66"/></operator></expr>)<pos:position pos:line="65" pos:column="67"/></condition><then pos:line="65" pos:column="67">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="29">edui_conf<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">.<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="39">mode<pos:position pos:line="66" pos:column="43"/></name></name> <operator pos:line="66" pos:column="44">|=<pos:position pos:line="66" pos:column="46"/></operator> <name pos:line="66" pos:column="47">EDUI_MODE_PERSIST<pos:position pos:line="66" pos:column="64"/></name></expr>;<pos:position pos:line="66" pos:column="65"/></expr_stmt></block></then></if>	<comment type="block" pos:line="66" pos:column="73">/* Don't set mode more than once */</comment>
                        <break pos:line="67" pos:column="25">break;<pos:position pos:line="67" pos:column="31"/></break>
                    <case pos:line="68" pos:column="21">case <expr><literal type="char" pos:line="68" pos:column="26">'v'<pos:position pos:line="68" pos:column="29"/></literal></expr>:<pos:position pos:line="68" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="69" pos:column="25">++<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="27">i<pos:position pos:line="69" pos:column="28"/></name></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="69" pos:column="73">/* Set LDAP version */</comment>
                        <if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name><name pos:line="70" pos:column="29">argv<pos:position pos:line="70" pos:column="33"/></name><index pos:line="70" pos:column="33">[<expr><name pos:line="70" pos:column="34">i<pos:position pos:line="70" pos:column="35"/></name></expr>]<pos:position pos:line="70" pos:column="36"/></index></name> <operator pos:line="70" pos:column="37">!=<pos:position pos:line="70" pos:column="39"/></operator> <name pos:line="70" pos:column="40">NULL<pos:position pos:line="70" pos:column="44"/></name></expr>)<pos:position pos:line="70" pos:column="45"/></condition><then pos:line="70" pos:column="45"> <block pos:line="70" pos:column="46">{
                            <expr_stmt><expr><name><name pos:line="71" pos:column="29">edui_conf<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">.<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="39">ver<pos:position pos:line="71" pos:column="42"/></name></name> <operator pos:line="71" pos:column="43">=<pos:position pos:line="71" pos:column="44"/></operator> <call><name pos:line="71" pos:column="45">atoi<pos:position pos:line="71" pos:column="49"/></name><argument_list pos:line="71" pos:column="49">(<argument><expr><name><name pos:line="71" pos:column="50">argv<pos:position pos:line="71" pos:column="54"/></name><index pos:line="71" pos:column="54">[<expr><name pos:line="71" pos:column="55">i<pos:position pos:line="71" pos:column="56"/></name></expr>]<pos:position pos:line="71" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="59"/></expr_stmt>
                            <if pos:line="72" pos:column="29">if <condition pos:line="72" pos:column="32">(<expr><name><name pos:line="72" pos:column="33">edui_conf<pos:position pos:line="72" pos:column="42"/></name><operator pos:line="72" pos:column="42">.<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="43">ver<pos:position pos:line="72" pos:column="46"/></name></name> <operator pos:line="72" pos:column="47">&lt;<pos:position pos:line="72" pos:column="51"/></operator> <literal type="number" pos:line="72" pos:column="49">1<pos:position pos:line="72" pos:column="50"/></literal></expr>)<pos:position pos:line="72" pos:column="51"/></condition><then pos:line="72" pos:column="51">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="33">edui_conf<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">.<pos:position pos:line="73" pos:column="43"/></operator><name pos:line="73" pos:column="43">ver<pos:position pos:line="73" pos:column="46"/></name></name> <operator pos:line="73" pos:column="47">=<pos:position pos:line="73" pos:column="48"/></operator> <literal type="number" pos:line="73" pos:column="49">1<pos:position pos:line="73" pos:column="50"/></literal></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt></block></then>
                            <elseif pos:line="74" pos:column="29">else <if pos:line="74" pos:column="34">if <condition pos:line="74" pos:column="37">(<expr><name><name pos:line="74" pos:column="38">edui_conf<pos:position pos:line="74" pos:column="47"/></name><operator pos:line="74" pos:column="47">.<pos:position pos:line="74" pos:column="48"/></operator><name pos:line="74" pos:column="48">ver<pos:position pos:line="74" pos:column="51"/></name></name> <operator pos:line="74" pos:column="52">&gt;<pos:position pos:line="74" pos:column="56"/></operator> <literal type="number" pos:line="74" pos:column="54">3<pos:position pos:line="74" pos:column="55"/></literal></expr>)<pos:position pos:line="74" pos:column="56"/></condition><then pos:line="74" pos:column="56">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="33">edui_conf<pos:position pos:line="75" pos:column="42"/></name><operator pos:line="75" pos:column="42">.<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="43">ver<pos:position pos:line="75" pos:column="46"/></name></name> <operator pos:line="75" pos:column="47">=<pos:position pos:line="75" pos:column="48"/></operator> <literal type="number" pos:line="75" pos:column="49">3<pos:position pos:line="75" pos:column="50"/></literal></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt></block></then></if></elseif></if>
                        }<pos:position pos:line="76" pos:column="26"/></block></then> <else pos:line="76" pos:column="27">else <block pos:line="76" pos:column="32">{
                            <expr_stmt><expr><call><name pos:line="77" pos:column="29">local_printfx<pos:position pos:line="77" pos:column="42"/></name><argument_list pos:line="77" pos:column="42">(<argument><expr><literal type="string" pos:line="77" pos:column="43">"No parameters given for 'v'.\n"<pos:position pos:line="77" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="78" pos:column="29">DisplayUsage<pos:position pos:line="78" pos:column="41"/></name><argument_list pos:line="78" pos:column="41">()<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="44"/></expr_stmt>
                            <return pos:line="79" pos:column="29">return <expr><literal type="number" pos:line="79" pos:column="36">1<pos:position pos:line="79" pos:column="37"/></literal></expr>;<pos:position pos:line="79" pos:column="38"/></return>
                        }<pos:position pos:line="80" pos:column="26"/></block></else></if>
                        <break pos:line="81" pos:column="25">break;<pos:position pos:line="81" pos:column="31"/></break>
                    <case pos:line="82" pos:column="21">case <expr><literal type="char" pos:line="82" pos:column="26">'t'<pos:position pos:line="82" pos:column="29"/></literal></expr>:<pos:position pos:line="82" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="83" pos:column="25">++<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="27">i<pos:position pos:line="83" pos:column="28"/></name></expr>;<pos:position pos:line="83" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="83" pos:column="73">/* Set Persistent timeout */</comment>
                        <if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><name><name pos:line="84" pos:column="29">argv<pos:position pos:line="84" pos:column="33"/></name><index pos:line="84" pos:column="33">[<expr><name pos:line="84" pos:column="34">i<pos:position pos:line="84" pos:column="35"/></name></expr>]<pos:position pos:line="84" pos:column="36"/></index></name> <operator pos:line="84" pos:column="37">!=<pos:position pos:line="84" pos:column="39"/></operator> <name pos:line="84" pos:column="40">NULL<pos:position pos:line="84" pos:column="44"/></name></expr>)<pos:position pos:line="84" pos:column="45"/></condition><then pos:line="84" pos:column="45"> <block pos:line="84" pos:column="46">{
                            <expr_stmt><expr><name><name pos:line="85" pos:column="29">edui_conf<pos:position pos:line="85" pos:column="38"/></name><operator pos:line="85" pos:column="38">.<pos:position pos:line="85" pos:column="39"/></operator><name pos:line="85" pos:column="39">persist_timeout<pos:position pos:line="85" pos:column="54"/></name></name> <operator pos:line="85" pos:column="55">=<pos:position pos:line="85" pos:column="56"/></operator> <call><name pos:line="85" pos:column="57">atoi<pos:position pos:line="85" pos:column="61"/></name><argument_list pos:line="85" pos:column="61">(<argument><expr><name><name pos:line="85" pos:column="62">argv<pos:position pos:line="85" pos:column="66"/></name><index pos:line="85" pos:column="66">[<expr><name pos:line="85" pos:column="67">i<pos:position pos:line="85" pos:column="68"/></name></expr>]<pos:position pos:line="85" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="71"/></expr_stmt>
                            <if pos:line="86" pos:column="29">if <condition pos:line="86" pos:column="32">(<expr><name><name pos:line="86" pos:column="33">edui_conf<pos:position pos:line="86" pos:column="42"/></name><operator pos:line="86" pos:column="42">.<pos:position pos:line="86" pos:column="43"/></operator><name pos:line="86" pos:column="43">persist_timeout<pos:position pos:line="86" pos:column="58"/></name></name> <operator pos:line="86" pos:column="59">&lt;<pos:position pos:line="86" pos:column="63"/></operator> <literal type="number" pos:line="86" pos:column="61">0<pos:position pos:line="86" pos:column="62"/></literal></expr>)<pos:position pos:line="86" pos:column="63"/></condition><then pos:line="86" pos:column="63">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="87" pos:column="33">edui_conf<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">.<pos:position pos:line="87" pos:column="43"/></operator><name pos:line="87" pos:column="43">persist_timeout<pos:position pos:line="87" pos:column="58"/></name></name> <operator pos:line="87" pos:column="59">=<pos:position pos:line="87" pos:column="60"/></operator> <literal type="number" pos:line="87" pos:column="61">0<pos:position pos:line="87" pos:column="62"/></literal></expr>;<pos:position pos:line="87" pos:column="63"/></expr_stmt></block></then></if>
                        }<pos:position pos:line="88" pos:column="26"/></block></then> <else pos:line="88" pos:column="27">else <block pos:line="88" pos:column="32">{
                            <expr_stmt><expr><call><name pos:line="89" pos:column="29">local_printfx<pos:position pos:line="89" pos:column="42"/></name><argument_list pos:line="89" pos:column="42">(<argument><expr><literal type="string" pos:line="89" pos:column="43">"No parameters given for 't'.\n"<pos:position pos:line="89" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="90" pos:column="29">DisplayUsage<pos:position pos:line="90" pos:column="41"/></name><argument_list pos:line="90" pos:column="41">()<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
                            <return pos:line="91" pos:column="29">return <expr><literal type="number" pos:line="91" pos:column="36">1<pos:position pos:line="91" pos:column="37"/></literal></expr>;<pos:position pos:line="91" pos:column="38"/></return>
                        }<pos:position pos:line="92" pos:column="26"/></block></else></if>
                        <break pos:line="93" pos:column="25">break;<pos:position pos:line="93" pos:column="31"/></break>
                    <case pos:line="94" pos:column="21">case <expr><literal type="char" pos:line="94" pos:column="26">'b'<pos:position pos:line="94" pos:column="29"/></literal></expr>:<pos:position pos:line="94" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="95" pos:column="25">++<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="27">i<pos:position pos:line="95" pos:column="28"/></name></expr>;<pos:position pos:line="95" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="95" pos:column="73">/* Set Base DN */</comment>
                        <if pos:line="96" pos:column="25">if <condition pos:line="96" pos:column="28">(<expr><name><name pos:line="96" pos:column="29">argv<pos:position pos:line="96" pos:column="33"/></name><index pos:line="96" pos:column="33">[<expr><name pos:line="96" pos:column="34">i<pos:position pos:line="96" pos:column="35"/></name></expr>]<pos:position pos:line="96" pos:column="36"/></index></name> <operator pos:line="96" pos:column="37">!=<pos:position pos:line="96" pos:column="39"/></operator> <name pos:line="96" pos:column="40">NULL<pos:position pos:line="96" pos:column="44"/></name></expr>)<pos:position pos:line="96" pos:column="45"/></condition><then pos:line="96" pos:column="45">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="29">xstrncpy<pos:position pos:line="97" pos:column="37"/></name><argument_list pos:line="97" pos:column="37">(<argument><expr><name><name pos:line="97" pos:column="38">edui_conf<pos:position pos:line="97" pos:column="47"/></name><operator pos:line="97" pos:column="47">.<pos:position pos:line="97" pos:column="48"/></operator><name pos:line="97" pos:column="48">basedn<pos:position pos:line="97" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="56">argv<pos:position pos:line="97" pos:column="60"/></name><index pos:line="97" pos:column="60">[<expr><name pos:line="97" pos:column="61">i<pos:position pos:line="97" pos:column="62"/></name></expr>]<pos:position pos:line="97" pos:column="63"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="65">sizeof<argument_list pos:line="97" pos:column="71">(<argument><expr><name><name pos:line="97" pos:column="72">edui_conf<pos:position pos:line="97" pos:column="81"/></name><operator pos:line="97" pos:column="81">.<pos:position pos:line="97" pos:column="82"/></operator><name pos:line="97" pos:column="82">basedn<pos:position pos:line="97" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="89"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="91"/></expr_stmt></block></then>
                        <else pos:line="98" pos:column="25">else <block pos:line="98" pos:column="30">{
                            <expr_stmt><expr><call><name pos:line="99" pos:column="29">local_printfx<pos:position pos:line="99" pos:column="42"/></name><argument_list pos:line="99" pos:column="42">(<argument><expr><literal type="string" pos:line="99" pos:column="43">"No parameters given for 'b'.\n"<pos:position pos:line="99" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="100" pos:column="29">DisplayUsage<pos:position pos:line="100" pos:column="41"/></name><argument_list pos:line="100" pos:column="41">()<pos:position pos:line="100" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="44"/></expr_stmt>
                            <return pos:line="101" pos:column="29">return <expr><literal type="number" pos:line="101" pos:column="36">1<pos:position pos:line="101" pos:column="37"/></literal></expr>;<pos:position pos:line="101" pos:column="38"/></return>
                        }<pos:position pos:line="102" pos:column="26"/></block></else></if>
                        <break pos:line="103" pos:column="25">break;<pos:position pos:line="103" pos:column="31"/></break>
                    <case pos:line="104" pos:column="21">case <expr><literal type="char" pos:line="104" pos:column="26">'H'<pos:position pos:line="104" pos:column="29"/></literal></expr>:<pos:position pos:line="104" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="105" pos:column="25">++<pos:position pos:line="105" pos:column="27"/></operator><name pos:line="105" pos:column="27">i<pos:position pos:line="105" pos:column="28"/></name></expr>;<pos:position pos:line="105" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="105" pos:column="73">/* Set Hostname */</comment>
                        <if pos:line="106" pos:column="25">if <condition pos:line="106" pos:column="28">(<expr><name><name pos:line="106" pos:column="29">argv<pos:position pos:line="106" pos:column="33"/></name><index pos:line="106" pos:column="33">[<expr><name pos:line="106" pos:column="34">i<pos:position pos:line="106" pos:column="35"/></name></expr>]<pos:position pos:line="106" pos:column="36"/></index></name> <operator pos:line="106" pos:column="37">!=<pos:position pos:line="106" pos:column="39"/></operator> <name pos:line="106" pos:column="40">NULL<pos:position pos:line="106" pos:column="44"/></name></expr>)<pos:position pos:line="106" pos:column="45"/></condition><then pos:line="106" pos:column="45">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="29">xstrncpy<pos:position pos:line="107" pos:column="37"/></name><argument_list pos:line="107" pos:column="37">(<argument><expr><name><name pos:line="107" pos:column="38">edui_conf<pos:position pos:line="107" pos:column="47"/></name><operator pos:line="107" pos:column="47">.<pos:position pos:line="107" pos:column="48"/></operator><name pos:line="107" pos:column="48">host<pos:position pos:line="107" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="54">argv<pos:position pos:line="107" pos:column="58"/></name><index pos:line="107" pos:column="58">[<expr><name pos:line="107" pos:column="59">i<pos:position pos:line="107" pos:column="60"/></name></expr>]<pos:position pos:line="107" pos:column="61"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="63">sizeof<argument_list pos:line="107" pos:column="69">(<argument><expr><name><name pos:line="107" pos:column="70">edui_conf<pos:position pos:line="107" pos:column="79"/></name><operator pos:line="107" pos:column="79">.<pos:position pos:line="107" pos:column="80"/></operator><name pos:line="107" pos:column="80">host<pos:position pos:line="107" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="107" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="87"/></expr_stmt></block></then>
                        <else pos:line="108" pos:column="25">else <block pos:line="108" pos:column="30">{
                            <expr_stmt><expr><call><name pos:line="109" pos:column="29">local_printfx<pos:position pos:line="109" pos:column="42"/></name><argument_list pos:line="109" pos:column="42">(<argument><expr><literal type="string" pos:line="109" pos:column="43">"No parameters given for 'H'.\n"<pos:position pos:line="109" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="110" pos:column="29">DisplayUsage<pos:position pos:line="110" pos:column="41"/></name><argument_list pos:line="110" pos:column="41">()<pos:position pos:line="110" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="44"/></expr_stmt>
                            <return pos:line="111" pos:column="29">return <expr><literal type="number" pos:line="111" pos:column="36">1<pos:position pos:line="111" pos:column="37"/></literal></expr>;<pos:position pos:line="111" pos:column="38"/></return>
                        }<pos:position pos:line="112" pos:column="26"/></block></else></if>
                        <break pos:line="113" pos:column="25">break;<pos:position pos:line="113" pos:column="31"/></break>
                    <case pos:line="114" pos:column="21">case <expr><literal type="char" pos:line="114" pos:column="26">'p'<pos:position pos:line="114" pos:column="29"/></literal></expr>:<pos:position pos:line="114" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="115" pos:column="25">++<pos:position pos:line="115" pos:column="27"/></operator><name pos:line="115" pos:column="27">i<pos:position pos:line="115" pos:column="28"/></name></expr>;<pos:position pos:line="115" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="115" pos:column="73">/* Set port */</comment>
                        <if pos:line="116" pos:column="25">if <condition pos:line="116" pos:column="28">(<expr><name><name pos:line="116" pos:column="29">argv<pos:position pos:line="116" pos:column="33"/></name><index pos:line="116" pos:column="33">[<expr><name pos:line="116" pos:column="34">i<pos:position pos:line="116" pos:column="35"/></name></expr>]<pos:position pos:line="116" pos:column="36"/></index></name> <operator pos:line="116" pos:column="37">!=<pos:position pos:line="116" pos:column="39"/></operator> <name pos:line="116" pos:column="40">NULL<pos:position pos:line="116" pos:column="44"/></name></expr>)<pos:position pos:line="116" pos:column="45"/></condition><then pos:line="116" pos:column="45">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="117" pos:column="29">edui_conf<pos:position pos:line="117" pos:column="38"/></name><operator pos:line="117" pos:column="38">.<pos:position pos:line="117" pos:column="39"/></operator><name pos:line="117" pos:column="39">port<pos:position pos:line="117" pos:column="43"/></name></name> <operator pos:line="117" pos:column="44">=<pos:position pos:line="117" pos:column="45"/></operator> <call><name pos:line="117" pos:column="46">atoi<pos:position pos:line="117" pos:column="50"/></name><argument_list pos:line="117" pos:column="50">(<argument><expr><name><name pos:line="117" pos:column="51">argv<pos:position pos:line="117" pos:column="55"/></name><index pos:line="117" pos:column="55">[<expr><name pos:line="117" pos:column="56">i<pos:position pos:line="117" pos:column="57"/></name></expr>]<pos:position pos:line="117" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="117" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="60"/></expr_stmt></block></then>
                        <else pos:line="118" pos:column="25">else <block pos:line="118" pos:column="30">{
                            <expr_stmt><expr><call><name pos:line="119" pos:column="29">local_printfx<pos:position pos:line="119" pos:column="42"/></name><argument_list pos:line="119" pos:column="42">(<argument><expr><literal type="string" pos:line="119" pos:column="43">"No parameters given for 'p'.\n"<pos:position pos:line="119" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="120" pos:column="29">DisplayUsage<pos:position pos:line="120" pos:column="41"/></name><argument_list pos:line="120" pos:column="41">()<pos:position pos:line="120" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="44"/></expr_stmt>
                            <return pos:line="121" pos:column="29">return <expr><literal type="number" pos:line="121" pos:column="36">1<pos:position pos:line="121" pos:column="37"/></literal></expr>;<pos:position pos:line="121" pos:column="38"/></return>
                        }<pos:position pos:line="122" pos:column="26"/></block></else></if>
                        <break pos:line="123" pos:column="25">break;<pos:position pos:line="123" pos:column="31"/></break>
                    <case pos:line="124" pos:column="21">case <expr><literal type="char" pos:line="124" pos:column="26">'D'<pos:position pos:line="124" pos:column="29"/></literal></expr>:<pos:position pos:line="124" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="125" pos:column="25">++<pos:position pos:line="125" pos:column="27"/></operator><name pos:line="125" pos:column="27">i<pos:position pos:line="125" pos:column="28"/></name></expr>;<pos:position pos:line="125" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="125" pos:column="73">/* Set Bind DN */</comment>
                        <if pos:line="126" pos:column="25">if <condition pos:line="126" pos:column="28">(<expr><name><name pos:line="126" pos:column="29">argv<pos:position pos:line="126" pos:column="33"/></name><index pos:line="126" pos:column="33">[<expr><name pos:line="126" pos:column="34">i<pos:position pos:line="126" pos:column="35"/></name></expr>]<pos:position pos:line="126" pos:column="36"/></index></name> <operator pos:line="126" pos:column="37">!=<pos:position pos:line="126" pos:column="39"/></operator> <name pos:line="126" pos:column="40">NULL<pos:position pos:line="126" pos:column="44"/></name></expr>)<pos:position pos:line="126" pos:column="45"/></condition><then pos:line="126" pos:column="45">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="29">xstrncpy<pos:position pos:line="127" pos:column="37"/></name><argument_list pos:line="127" pos:column="37">(<argument><expr><name><name pos:line="127" pos:column="38">edui_conf<pos:position pos:line="127" pos:column="47"/></name><operator pos:line="127" pos:column="47">.<pos:position pos:line="127" pos:column="48"/></operator><name pos:line="127" pos:column="48">dn<pos:position pos:line="127" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="52">argv<pos:position pos:line="127" pos:column="56"/></name><index pos:line="127" pos:column="56">[<expr><name pos:line="127" pos:column="57">i<pos:position pos:line="127" pos:column="58"/></name></expr>]<pos:position pos:line="127" pos:column="59"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="127" pos:column="61">sizeof<argument_list pos:line="127" pos:column="67">(<argument><expr><name><name pos:line="127" pos:column="68">edui_conf<pos:position pos:line="127" pos:column="77"/></name><operator pos:line="127" pos:column="77">.<pos:position pos:line="127" pos:column="78"/></operator><name pos:line="127" pos:column="78">dn<pos:position pos:line="127" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="127" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="83"/></expr_stmt></block></then>
                        <else pos:line="128" pos:column="25">else <block pos:line="128" pos:column="30">{
                            <expr_stmt><expr><call><name pos:line="129" pos:column="29">local_printfx<pos:position pos:line="129" pos:column="42"/></name><argument_list pos:line="129" pos:column="42">(<argument><expr><literal type="string" pos:line="129" pos:column="43">"No parameters given for 'D'.\n"<pos:position pos:line="129" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="130" pos:column="29">DisplayUsage<pos:position pos:line="130" pos:column="41"/></name><argument_list pos:line="130" pos:column="41">()<pos:position pos:line="130" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="44"/></expr_stmt>
                            <return pos:line="131" pos:column="29">return <expr><literal type="number" pos:line="131" pos:column="36">1<pos:position pos:line="131" pos:column="37"/></literal></expr>;<pos:position pos:line="131" pos:column="38"/></return>
                        }<pos:position pos:line="132" pos:column="26"/></block></else></if>
                        <break pos:line="133" pos:column="25">break;<pos:position pos:line="133" pos:column="31"/></break>
                    <case pos:line="134" pos:column="21">case <expr><literal type="char" pos:line="134" pos:column="26">'W'<pos:position pos:line="134" pos:column="29"/></literal></expr>:<pos:position pos:line="134" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="135" pos:column="25">++<pos:position pos:line="135" pos:column="27"/></operator><name pos:line="135" pos:column="27">i<pos:position pos:line="135" pos:column="28"/></name></expr>;<pos:position pos:line="135" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="135" pos:column="73">/* Set Bind PWD */</comment>
                        <if pos:line="136" pos:column="25">if <condition pos:line="136" pos:column="28">(<expr><name><name pos:line="136" pos:column="29">argv<pos:position pos:line="136" pos:column="33"/></name><index pos:line="136" pos:column="33">[<expr><name pos:line="136" pos:column="34">i<pos:position pos:line="136" pos:column="35"/></name></expr>]<pos:position pos:line="136" pos:column="36"/></index></name> <operator pos:line="136" pos:column="37">!=<pos:position pos:line="136" pos:column="39"/></operator> <name pos:line="136" pos:column="40">NULL<pos:position pos:line="136" pos:column="44"/></name></expr>)<pos:position pos:line="136" pos:column="45"/></condition><then pos:line="136" pos:column="45">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="29">xstrncpy<pos:position pos:line="137" pos:column="37"/></name><argument_list pos:line="137" pos:column="37">(<argument><expr><name><name pos:line="137" pos:column="38">edui_conf<pos:position pos:line="137" pos:column="47"/></name><operator pos:line="137" pos:column="47">.<pos:position pos:line="137" pos:column="48"/></operator><name pos:line="137" pos:column="48">passwd<pos:position pos:line="137" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="56">argv<pos:position pos:line="137" pos:column="60"/></name><index pos:line="137" pos:column="60">[<expr><name pos:line="137" pos:column="61">i<pos:position pos:line="137" pos:column="62"/></name></expr>]<pos:position pos:line="137" pos:column="63"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="137" pos:column="65">sizeof<argument_list pos:line="137" pos:column="71">(<argument><expr><name><name pos:line="137" pos:column="72">edui_conf<pos:position pos:line="137" pos:column="81"/></name><operator pos:line="137" pos:column="81">.<pos:position pos:line="137" pos:column="82"/></operator><name pos:line="137" pos:column="82">passwd<pos:position pos:line="137" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="89"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="137" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="91"/></expr_stmt></block></then>
                        <else pos:line="138" pos:column="25">else <block pos:line="138" pos:column="30">{
                            <expr_stmt><expr><call><name pos:line="139" pos:column="29">local_printfx<pos:position pos:line="139" pos:column="42"/></name><argument_list pos:line="139" pos:column="42">(<argument><expr><literal type="string" pos:line="139" pos:column="43">"No parameters given for 'W'.\n"<pos:position pos:line="139" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="140" pos:column="29">DisplayUsage<pos:position pos:line="140" pos:column="41"/></name><argument_list pos:line="140" pos:column="41">()<pos:position pos:line="140" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="44"/></expr_stmt>
                            <return pos:line="141" pos:column="29">return <expr><literal type="number" pos:line="141" pos:column="36">1<pos:position pos:line="141" pos:column="37"/></literal></expr>;<pos:position pos:line="141" pos:column="38"/></return>
                        }<pos:position pos:line="142" pos:column="26"/></block></else></if>
                        <break pos:line="143" pos:column="25">break;<pos:position pos:line="143" pos:column="31"/></break>
                    <case pos:line="144" pos:column="21">case <expr><literal type="char" pos:line="144" pos:column="26">'F'<pos:position pos:line="144" pos:column="29"/></literal></expr>:<pos:position pos:line="144" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="145" pos:column="25">++<pos:position pos:line="145" pos:column="27"/></operator><name pos:line="145" pos:column="27">i<pos:position pos:line="145" pos:column="28"/></name></expr>;<pos:position pos:line="145" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="145" pos:column="73">/* Set Search Filter */</comment>
                        <if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><name><name pos:line="146" pos:column="29">argv<pos:position pos:line="146" pos:column="33"/></name><index pos:line="146" pos:column="33">[<expr><name pos:line="146" pos:column="34">i<pos:position pos:line="146" pos:column="35"/></name></expr>]<pos:position pos:line="146" pos:column="36"/></index></name> <operator pos:line="146" pos:column="37">!=<pos:position pos:line="146" pos:column="39"/></operator> <name pos:line="146" pos:column="40">NULL<pos:position pos:line="146" pos:column="44"/></name></expr>)<pos:position pos:line="146" pos:column="45"/></condition><then pos:line="146" pos:column="45">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="29">xstrncpy<pos:position pos:line="147" pos:column="37"/></name><argument_list pos:line="147" pos:column="37">(<argument><expr><name><name pos:line="147" pos:column="38">edui_conf<pos:position pos:line="147" pos:column="47"/></name><operator pos:line="147" pos:column="47">.<pos:position pos:line="147" pos:column="48"/></operator><name pos:line="147" pos:column="48">search_filter<pos:position pos:line="147" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="63">argv<pos:position pos:line="147" pos:column="67"/></name><index pos:line="147" pos:column="67">[<expr><name pos:line="147" pos:column="68">i<pos:position pos:line="147" pos:column="69"/></name></expr>]<pos:position pos:line="147" pos:column="70"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="147" pos:column="72">sizeof<argument_list pos:line="147" pos:column="78">(<argument><expr><name><name pos:line="147" pos:column="79">edui_conf<pos:position pos:line="147" pos:column="88"/></name><operator pos:line="147" pos:column="88">.<pos:position pos:line="147" pos:column="89"/></operator><name pos:line="147" pos:column="89">search_filter<pos:position pos:line="147" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="103"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="147" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="105"/></expr_stmt></block></then>
                        <else pos:line="148" pos:column="25">else <block pos:line="148" pos:column="30">{
                            <expr_stmt><expr><call><name pos:line="149" pos:column="29">local_printfx<pos:position pos:line="149" pos:column="42"/></name><argument_list pos:line="149" pos:column="42">(<argument><expr><literal type="string" pos:line="149" pos:column="43">"No parameters given for 'F'.\n"<pos:position pos:line="149" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="150" pos:column="29">DisplayUsage<pos:position pos:line="150" pos:column="41"/></name><argument_list pos:line="150" pos:column="41">()<pos:position pos:line="150" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="44"/></expr_stmt>
                            <return pos:line="151" pos:column="29">return <expr><literal type="number" pos:line="151" pos:column="36">1<pos:position pos:line="151" pos:column="37"/></literal></expr>;<pos:position pos:line="151" pos:column="38"/></return>
                        }<pos:position pos:line="152" pos:column="26"/></block></else></if>
                        <break pos:line="153" pos:column="25">break;<pos:position pos:line="153" pos:column="31"/></break>
                    <case pos:line="154" pos:column="21">case <expr><literal type="char" pos:line="154" pos:column="26">'G'<pos:position pos:line="154" pos:column="29"/></literal></expr>:<pos:position pos:line="154" pos:column="30"/></case>
                        <if pos:line="155" pos:column="25">if <condition pos:line="155" pos:column="28">(<expr><operator pos:line="155" pos:column="29">!<pos:position pos:line="155" pos:column="30"/></operator><operator pos:line="155" pos:column="30">(<pos:position pos:line="155" pos:column="31"/></operator><name><name pos:line="155" pos:column="31">edui_conf<pos:position pos:line="155" pos:column="40"/></name><operator pos:line="155" pos:column="40">.<pos:position pos:line="155" pos:column="41"/></operator><name pos:line="155" pos:column="41">mode<pos:position pos:line="155" pos:column="45"/></name></name> <operator pos:line="155" pos:column="46">&amp;<pos:position pos:line="155" pos:column="51"/></operator> <name pos:line="155" pos:column="48">EDUI_MODE_GROUP<pos:position pos:line="155" pos:column="63"/></name><operator pos:line="155" pos:column="63">)<pos:position pos:line="155" pos:column="64"/></operator></expr>)<pos:position pos:line="155" pos:column="65"/></condition><then pos:line="155" pos:column="65">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="156" pos:column="29">edui_conf<pos:position pos:line="156" pos:column="38"/></name><operator pos:line="156" pos:column="38">.<pos:position pos:line="156" pos:column="39"/></operator><name pos:line="156" pos:column="39">mode<pos:position pos:line="156" pos:column="43"/></name></name> <operator pos:line="156" pos:column="44">|=<pos:position pos:line="156" pos:column="46"/></operator> <name pos:line="156" pos:column="47">EDUI_MODE_GROUP<pos:position pos:line="156" pos:column="62"/></name></expr>;<pos:position pos:line="156" pos:column="63"/></expr_stmt></block></then></if>		<comment type="block" pos:line="156" pos:column="73">/* Don't set mode more than once */</comment>
                        <break pos:line="157" pos:column="25">break;<pos:position pos:line="157" pos:column="31"/></break>
                    <case pos:line="158" pos:column="21">case <expr><literal type="char" pos:line="158" pos:column="26">'s'<pos:position pos:line="158" pos:column="29"/></literal></expr>:<pos:position pos:line="158" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="159" pos:column="25">++<pos:position pos:line="159" pos:column="27"/></operator><name pos:line="159" pos:column="27">i<pos:position pos:line="159" pos:column="28"/></name></expr>;<pos:position pos:line="159" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="159" pos:column="73">/* Set Scope Level */</comment>
                        <if pos:line="160" pos:column="25">if <condition pos:line="160" pos:column="28">(<expr><name><name pos:line="160" pos:column="29">argv<pos:position pos:line="160" pos:column="33"/></name><index pos:line="160" pos:column="33">[<expr><name pos:line="160" pos:column="34">i<pos:position pos:line="160" pos:column="35"/></name></expr>]<pos:position pos:line="160" pos:column="36"/></index></name> <operator pos:line="160" pos:column="37">!=<pos:position pos:line="160" pos:column="39"/></operator> <name pos:line="160" pos:column="40">NULL<pos:position pos:line="160" pos:column="44"/></name></expr>)<pos:position pos:line="160" pos:column="45"/></condition><then pos:line="160" pos:column="45"> <block pos:line="160" pos:column="46">{
                            <if pos:line="161" pos:column="29">if <condition pos:line="161" pos:column="32">(<expr><operator pos:line="161" pos:column="33">!<pos:position pos:line="161" pos:column="34"/></operator><call><name pos:line="161" pos:column="34">strncmp<pos:position pos:line="161" pos:column="41"/></name><argument_list pos:line="161" pos:column="41">(<argument><expr><name><name pos:line="161" pos:column="42">argv<pos:position pos:line="161" pos:column="46"/></name><index pos:line="161" pos:column="46">[<expr><name pos:line="161" pos:column="47">i<pos:position pos:line="161" pos:column="48"/></name></expr>]<pos:position pos:line="161" pos:column="49"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="51">"base"<pos:position pos:line="161" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="59">4<pos:position pos:line="161" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="161" pos:column="62"/></condition><then pos:line="161" pos:column="62">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="162" pos:column="33">edui_conf<pos:position pos:line="162" pos:column="42"/></name><operator pos:line="162" pos:column="42">.<pos:position pos:line="162" pos:column="43"/></operator><name pos:line="162" pos:column="43">scope<pos:position pos:line="162" pos:column="48"/></name></name> <operator pos:line="162" pos:column="49">=<pos:position pos:line="162" pos:column="50"/></operator> <literal type="number" pos:line="162" pos:column="51">0<pos:position pos:line="162" pos:column="52"/></literal></expr>;<pos:position pos:line="162" pos:column="53"/></expr_stmt></block></then>
                            <elseif pos:line="163" pos:column="29">else <if pos:line="163" pos:column="34">if <condition pos:line="163" pos:column="37">(<expr><operator pos:line="163" pos:column="38">!<pos:position pos:line="163" pos:column="39"/></operator><call><name pos:line="163" pos:column="39">strncmp<pos:position pos:line="163" pos:column="46"/></name><argument_list pos:line="163" pos:column="46">(<argument><expr><name><name pos:line="163" pos:column="47">argv<pos:position pos:line="163" pos:column="51"/></name><index pos:line="163" pos:column="51">[<expr><name pos:line="163" pos:column="52">i<pos:position pos:line="163" pos:column="53"/></name></expr>]<pos:position pos:line="163" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="56">"one"<pos:position pos:line="163" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="63">4<pos:position pos:line="163" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="66"/></condition><then pos:line="163" pos:column="66">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="164" pos:column="33">edui_conf<pos:position pos:line="164" pos:column="42"/></name><operator pos:line="164" pos:column="42">.<pos:position pos:line="164" pos:column="43"/></operator><name pos:line="164" pos:column="43">scope<pos:position pos:line="164" pos:column="48"/></name></name> <operator pos:line="164" pos:column="49">=<pos:position pos:line="164" pos:column="50"/></operator> <literal type="number" pos:line="164" pos:column="51">1<pos:position pos:line="164" pos:column="52"/></literal></expr>;<pos:position pos:line="164" pos:column="53"/></expr_stmt></block></then></if></elseif>
                            <elseif pos:line="165" pos:column="29">else <if pos:line="165" pos:column="34">if <condition pos:line="165" pos:column="37">(<expr><operator pos:line="165" pos:column="38">!<pos:position pos:line="165" pos:column="39"/></operator><call><name pos:line="165" pos:column="39">strncmp<pos:position pos:line="165" pos:column="46"/></name><argument_list pos:line="165" pos:column="46">(<argument><expr><name><name pos:line="165" pos:column="47">argv<pos:position pos:line="165" pos:column="51"/></name><index pos:line="165" pos:column="51">[<expr><name pos:line="165" pos:column="52">i<pos:position pos:line="165" pos:column="53"/></name></expr>]<pos:position pos:line="165" pos:column="54"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="56">"sub"<pos:position pos:line="165" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="165" pos:column="63">4<pos:position pos:line="165" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="165" pos:column="66"/></condition><then pos:line="165" pos:column="66">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="166" pos:column="33">edui_conf<pos:position pos:line="166" pos:column="42"/></name><operator pos:line="166" pos:column="42">.<pos:position pos:line="166" pos:column="43"/></operator><name pos:line="166" pos:column="43">scope<pos:position pos:line="166" pos:column="48"/></name></name> <operator pos:line="166" pos:column="49">=<pos:position pos:line="166" pos:column="50"/></operator> <literal type="number" pos:line="166" pos:column="51">2<pos:position pos:line="166" pos:column="52"/></literal></expr>;<pos:position pos:line="166" pos:column="53"/></expr_stmt></block></then></if></elseif>
                            <else pos:line="167" pos:column="29">else
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="168" pos:column="33">edui_conf<pos:position pos:line="168" pos:column="42"/></name><operator pos:line="168" pos:column="42">.<pos:position pos:line="168" pos:column="43"/></operator><name pos:line="168" pos:column="43">scope<pos:position pos:line="168" pos:column="48"/></name></name> <operator pos:line="168" pos:column="49">=<pos:position pos:line="168" pos:column="50"/></operator> <literal type="number" pos:line="168" pos:column="51">1<pos:position pos:line="168" pos:column="52"/></literal></expr>;<pos:position pos:line="168" pos:column="53"/></expr_stmt></block></else></if>			<comment type="block" pos:line="168" pos:column="73">/* Default is 'one' */</comment>
                        }<pos:position pos:line="169" pos:column="26"/></block></then> <else pos:line="169" pos:column="27">else <block pos:line="169" pos:column="32">{
                            <expr_stmt><expr><call><name pos:line="170" pos:column="29">local_printfx<pos:position pos:line="170" pos:column="42"/></name><argument_list pos:line="170" pos:column="42">(<argument><expr><literal type="string" pos:line="170" pos:column="43">"No parameters given for 's'.\n"<pos:position pos:line="170" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="171" pos:column="29">DisplayUsage<pos:position pos:line="171" pos:column="41"/></name><argument_list pos:line="171" pos:column="41">()<pos:position pos:line="171" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="44"/></expr_stmt>
                            <return pos:line="172" pos:column="29">return <expr><literal type="number" pos:line="172" pos:column="36">1<pos:position pos:line="172" pos:column="37"/></literal></expr>;<pos:position pos:line="172" pos:column="38"/></return>
                        }<pos:position pos:line="173" pos:column="26"/></block></else></if>
                        <break pos:line="174" pos:column="25">break;<pos:position pos:line="174" pos:column="31"/></break>
                    <case pos:line="175" pos:column="21">case <expr><literal type="char" pos:line="175" pos:column="26">'u'<pos:position pos:line="175" pos:column="29"/></literal></expr>:<pos:position pos:line="175" pos:column="30"/></case>
                        <expr_stmt><expr><operator pos:line="176" pos:column="25">++<pos:position pos:line="176" pos:column="27"/></operator><name pos:line="176" pos:column="27">i<pos:position pos:line="176" pos:column="28"/></name></expr>;<pos:position pos:line="176" pos:column="29"/></expr_stmt>						<comment type="block" pos:line="176" pos:column="73">/* Set Search Attribute */</comment>
                        <if pos:line="177" pos:column="25">if <condition pos:line="177" pos:column="28">(<expr><name><name pos:line="177" pos:column="29">argv<pos:position pos:line="177" pos:column="33"/></name><index pos:line="177" pos:column="33">[<expr><name pos:line="177" pos:column="34">i<pos:position pos:line="177" pos:column="35"/></name></expr>]<pos:position pos:line="177" pos:column="36"/></index></name> <operator pos:line="177" pos:column="37">!=<pos:position pos:line="177" pos:column="39"/></operator> <name pos:line="177" pos:column="40">NULL<pos:position pos:line="177" pos:column="44"/></name></expr>)<pos:position pos:line="177" pos:column="45"/></condition><then pos:line="177" pos:column="45"> <block pos:line="177" pos:column="46">{
                            <expr_stmt><expr><call><name pos:line="178" pos:column="29">xstrncpy<pos:position pos:line="178" pos:column="37"/></name><argument_list pos:line="178" pos:column="37">(<argument><expr><name><name pos:line="178" pos:column="38">edui_conf<pos:position pos:line="178" pos:column="47"/></name><operator pos:line="178" pos:column="47">.<pos:position pos:line="178" pos:column="48"/></operator><name pos:line="178" pos:column="48">attrib<pos:position pos:line="178" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="56">argv<pos:position pos:line="178" pos:column="60"/></name><index pos:line="178" pos:column="60">[<expr><name pos:line="178" pos:column="61">i<pos:position pos:line="178" pos:column="62"/></name></expr>]<pos:position pos:line="178" pos:column="63"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="178" pos:column="65">sizeof<argument_list pos:line="178" pos:column="71">(<argument><expr><name><name pos:line="178" pos:column="72">edui_conf<pos:position pos:line="178" pos:column="81"/></name><operator pos:line="178" pos:column="81">.<pos:position pos:line="178" pos:column="82"/></operator><name pos:line="178" pos:column="82">attrib<pos:position pos:line="178" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="89"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="178" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="91"/></expr_stmt>
                        }<pos:position pos:line="179" pos:column="26"/></block></then> <else pos:line="179" pos:column="27">else <block pos:line="179" pos:column="32">{
                            <expr_stmt><expr><call><name pos:line="180" pos:column="29">local_printfx<pos:position pos:line="180" pos:column="42"/></name><argument_list pos:line="180" pos:column="42">(<argument><expr><literal type="string" pos:line="180" pos:column="43">"No parameters given for 'u'.\n"<pos:position pos:line="180" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="181" pos:column="29">DisplayUsage<pos:position pos:line="181" pos:column="41"/></name><argument_list pos:line="181" pos:column="41">()<pos:position pos:line="181" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="44"/></expr_stmt>
                            <return pos:line="182" pos:column="29">return <expr><literal type="number" pos:line="182" pos:column="36">1<pos:position pos:line="182" pos:column="37"/></literal></expr>;<pos:position pos:line="182" pos:column="38"/></return>
                        }<pos:position pos:line="183" pos:column="26"/></block></else></if>
                        <break pos:line="184" pos:column="25">break;<pos:position pos:line="184" pos:column="31"/></break>
                    <case pos:line="185" pos:column="21">case <expr><literal type="char" pos:line="185" pos:column="26">'-'<pos:position pos:line="185" pos:column="29"/></literal></expr>:<pos:position pos:line="185" pos:column="30"/></case>						<comment type="block" pos:line="185" pos:column="73">/* We got a second '-' ... ignore */</comment>
                        <break pos:line="186" pos:column="25">break;<pos:position pos:line="186" pos:column="31"/></break>
                    <default pos:line="187" pos:column="21">default:<pos:position pos:line="187" pos:column="29"/></default>
                        <expr_stmt><expr><call><name pos:line="188" pos:column="25">local_printfx<pos:position pos:line="188" pos:column="38"/></name><argument_list pos:line="188" pos:column="38">(<argument><expr><literal type="string" pos:line="188" pos:column="39">"Invalid parameter - '%c'.\n"<pos:position pos:line="188" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="188" pos:column="70">argv<pos:position pos:line="188" pos:column="74"/></name><index pos:line="188" pos:column="74">[<expr><name pos:line="188" pos:column="75">i<pos:position pos:line="188" pos:column="76"/></name></expr>]<pos:position pos:line="188" pos:column="77"/></index><index pos:line="188" pos:column="77">[<expr><name pos:line="188" pos:column="78">j<pos:position pos:line="188" pos:column="79"/></name></expr>]<pos:position pos:line="188" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="188" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="82"/></expr_stmt>
                        <break pos:line="189" pos:column="25">break;<pos:position pos:line="189" pos:column="31"/></break>
                    }<pos:position pos:line="190" pos:column="22"/></block></switch>
                }<pos:position pos:line="191" pos:column="18"/></block></for>
            }<pos:position pos:line="192" pos:column="14"/></block></then></if></elseif> <else pos:line="192" pos:column="15">else <block pos:line="192" pos:column="20">{
                <comment type="block" pos:line="193" pos:column="17">/* Incorrect parameter, display usage */</comment>
                <expr_stmt><expr><call><name pos:line="194" pos:column="17">DisplayUsage<pos:position pos:line="194" pos:column="29"/></name><argument_list pos:line="194" pos:column="29">()<pos:position pos:line="194" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="32"/></expr_stmt>
                <return pos:line="195" pos:column="17">return <expr><literal type="number" pos:line="195" pos:column="24">1<pos:position pos:line="195" pos:column="25"/></literal></expr>;<pos:position pos:line="195" pos:column="26"/></return>
            }<pos:position pos:line="196" pos:column="14"/></block></else></if>
        }<pos:position pos:line="197" pos:column="10"/></block></for>
    }<pos:position pos:line="198" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="200" pos:column="5">/* Set predefined required paremeters if none are given, localhost:LDAP_PORT, etc */</comment>
    <if pos:line="201" pos:column="5">if <condition pos:line="201" pos:column="8">(<expr><name><name pos:line="201" pos:column="9">edui_conf<pos:position pos:line="201" pos:column="18"/></name><operator pos:line="201" pos:column="18">.<pos:position pos:line="201" pos:column="19"/></operator><name pos:line="201" pos:column="19">host<pos:position pos:line="201" pos:column="23"/></name><index pos:line="201" pos:column="23">[<expr><literal type="number" pos:line="201" pos:column="24">0<pos:position pos:line="201" pos:column="25"/></literal></expr>]<pos:position pos:line="201" pos:column="26"/></index></name> <operator pos:line="201" pos:column="27">==<pos:position pos:line="201" pos:column="29"/></operator> <literal type="char" pos:line="201" pos:column="30">'\0'<pos:position pos:line="201" pos:column="34"/></literal></expr>)<pos:position pos:line="201" pos:column="35"/></condition><then pos:line="201" pos:column="35">				<comment type="block" pos:line="201" pos:column="65">/* Default to localhost */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="9">xstrncpy<pos:position pos:line="202" pos:column="17"/></name><argument_list pos:line="202" pos:column="17">(<argument><expr><name><name pos:line="202" pos:column="18">edui_conf<pos:position pos:line="202" pos:column="27"/></name><operator pos:line="202" pos:column="27">.<pos:position pos:line="202" pos:column="28"/></operator><name pos:line="202" pos:column="28">host<pos:position pos:line="202" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="34">"localhost"<pos:position pos:line="202" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="202" pos:column="47">sizeof<argument_list pos:line="202" pos:column="53">(<argument><expr><name><name pos:line="202" pos:column="54">edui_conf<pos:position pos:line="202" pos:column="63"/></name><operator pos:line="202" pos:column="63">.<pos:position pos:line="202" pos:column="64"/></operator><name pos:line="202" pos:column="64">host<pos:position pos:line="202" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="202" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="71"/></expr_stmt></block></then></if>
    <if pos:line="203" pos:column="5">if <condition pos:line="203" pos:column="8">(<expr><name><name pos:line="203" pos:column="9">edui_conf<pos:position pos:line="203" pos:column="18"/></name><operator pos:line="203" pos:column="18">.<pos:position pos:line="203" pos:column="19"/></operator><name pos:line="203" pos:column="19">port<pos:position pos:line="203" pos:column="23"/></name></name> <operator pos:line="203" pos:column="24">&lt;<pos:position pos:line="203" pos:column="28"/></operator> <literal type="number" pos:line="203" pos:column="26">0<pos:position pos:line="203" pos:column="27"/></literal></expr>)<pos:position pos:line="203" pos:column="28"/></condition><then pos:line="203" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="204" pos:column="9">edui_conf<pos:position pos:line="204" pos:column="18"/></name><operator pos:line="204" pos:column="18">.<pos:position pos:line="204" pos:column="19"/></operator><name pos:line="204" pos:column="19">port<pos:position pos:line="204" pos:column="23"/></name></name> <operator pos:line="204" pos:column="24">=<pos:position pos:line="204" pos:column="25"/></operator> <name pos:line="204" pos:column="26">LDAP_PORT<pos:position pos:line="204" pos:column="35"/></name></expr>;<pos:position pos:line="204" pos:column="36"/></expr_stmt></block></then></if>				<comment type="block" pos:line="204" pos:column="65">/* Default: LDAP_PORT */</comment>
    <if pos:line="205" pos:column="5">if <condition pos:line="205" pos:column="8">(<expr><operator pos:line="205" pos:column="9">(<pos:position pos:line="205" pos:column="10"/></operator><name><name pos:line="205" pos:column="10">edui_conf<pos:position pos:line="205" pos:column="19"/></name><operator pos:line="205" pos:column="19">.<pos:position pos:line="205" pos:column="20"/></operator><name pos:line="205" pos:column="20">mode<pos:position pos:line="205" pos:column="24"/></name></name> <operator pos:line="205" pos:column="25">&amp;<pos:position pos:line="205" pos:column="30"/></operator> <name pos:line="205" pos:column="27">EDUI_MODE_IPV4<pos:position pos:line="205" pos:column="41"/></name><operator pos:line="205" pos:column="41">)<pos:position pos:line="205" pos:column="42"/></operator> <operator pos:line="205" pos:column="43">&amp;&amp;<pos:position pos:line="205" pos:column="53"/></operator> <operator pos:line="205" pos:column="46">(<pos:position pos:line="205" pos:column="47"/></operator><name><name pos:line="205" pos:column="47">edui_conf<pos:position pos:line="205" pos:column="56"/></name><operator pos:line="205" pos:column="56">.<pos:position pos:line="205" pos:column="57"/></operator><name pos:line="205" pos:column="57">mode<pos:position pos:line="205" pos:column="61"/></name></name> <operator pos:line="205" pos:column="62">&amp;<pos:position pos:line="205" pos:column="67"/></operator> <name pos:line="205" pos:column="64">EDUI_MODE_IPV6<pos:position pos:line="205" pos:column="78"/></name><operator pos:line="205" pos:column="78">)<pos:position pos:line="205" pos:column="79"/></operator></expr>)<pos:position pos:line="205" pos:column="80"/></condition><then pos:line="205" pos:column="80">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="206" pos:column="9">edui_conf<pos:position pos:line="206" pos:column="18"/></name><operator pos:line="206" pos:column="18">.<pos:position pos:line="206" pos:column="19"/></operator><name pos:line="206" pos:column="19">mode<pos:position pos:line="206" pos:column="23"/></name></name> <operator pos:line="206" pos:column="24">&amp;=<pos:position pos:line="206" pos:column="30"/></operator> <operator pos:line="206" pos:column="27">~<pos:position pos:line="206" pos:column="28"/></operator><operator pos:line="206" pos:column="28">(<pos:position pos:line="206" pos:column="29"/></operator><name pos:line="206" pos:column="29">EDUI_MODE_IPV6<pos:position pos:line="206" pos:column="43"/></name><operator pos:line="206" pos:column="43">)<pos:position pos:line="206" pos:column="44"/></operator></expr>;<pos:position pos:line="206" pos:column="45"/></expr_stmt></block></then></if>			<comment type="block" pos:line="206" pos:column="65">/* Default to IPv4 */</comment>
    <if pos:line="207" pos:column="5">if <condition pos:line="207" pos:column="8">(<expr><name><name pos:line="207" pos:column="9">edui_conf<pos:position pos:line="207" pos:column="18"/></name><operator pos:line="207" pos:column="18">.<pos:position pos:line="207" pos:column="19"/></operator><name pos:line="207" pos:column="19">ver<pos:position pos:line="207" pos:column="22"/></name></name> <operator pos:line="207" pos:column="23">&lt;<pos:position pos:line="207" pos:column="27"/></operator> <literal type="number" pos:line="207" pos:column="25">0<pos:position pos:line="207" pos:column="26"/></literal></expr>)<pos:position pos:line="207" pos:column="27"/></condition><then pos:line="207" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="208" pos:column="9">edui_conf<pos:position pos:line="208" pos:column="18"/></name><operator pos:line="208" pos:column="18">.<pos:position pos:line="208" pos:column="19"/></operator><name pos:line="208" pos:column="19">ver<pos:position pos:line="208" pos:column="22"/></name></name> <operator pos:line="208" pos:column="23">=<pos:position pos:line="208" pos:column="24"/></operator> <literal type="number" pos:line="208" pos:column="25">2<pos:position pos:line="208" pos:column="26"/></literal></expr>;<pos:position pos:line="208" pos:column="27"/></expr_stmt></block></then></if>
    <if pos:line="209" pos:column="5">if <condition pos:line="209" pos:column="8">(<expr><operator pos:line="209" pos:column="9">!<pos:position pos:line="209" pos:column="10"/></operator><operator pos:line="209" pos:column="10">(<pos:position pos:line="209" pos:column="11"/></operator><name><name pos:line="209" pos:column="11">edui_conf<pos:position pos:line="209" pos:column="20"/></name><operator pos:line="209" pos:column="20">.<pos:position pos:line="209" pos:column="21"/></operator><name pos:line="209" pos:column="21">mode<pos:position pos:line="209" pos:column="25"/></name></name> <operator pos:line="209" pos:column="26">&amp;<pos:position pos:line="209" pos:column="31"/></operator> <name pos:line="209" pos:column="28">EDUI_MODE_TLS<pos:position pos:line="209" pos:column="41"/></name><operator pos:line="209" pos:column="41">)<pos:position pos:line="209" pos:column="42"/></operator></expr>)<pos:position pos:line="209" pos:column="43"/></condition><then pos:line="209" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="210" pos:column="9">edui_conf<pos:position pos:line="210" pos:column="18"/></name><operator pos:line="210" pos:column="18">.<pos:position pos:line="210" pos:column="19"/></operator><name pos:line="210" pos:column="19">mode<pos:position pos:line="210" pos:column="23"/></name></name> <operator pos:line="210" pos:column="24">|=<pos:position pos:line="210" pos:column="26"/></operator> <name pos:line="210" pos:column="27">EDUI_MODE_TLS<pos:position pos:line="210" pos:column="40"/></name></expr>;<pos:position pos:line="210" pos:column="41"/></expr_stmt></block></then></if>			<comment type="block" pos:line="210" pos:column="65">/* eDirectory requires TLS mode */</comment>
    <if pos:line="211" pos:column="5">if <condition pos:line="211" pos:column="8">(<expr><operator pos:line="211" pos:column="9">(<pos:position pos:line="211" pos:column="10"/></operator><name><name pos:line="211" pos:column="10">edui_conf<pos:position pos:line="211" pos:column="19"/></name><operator pos:line="211" pos:column="19">.<pos:position pos:line="211" pos:column="20"/></operator><name pos:line="211" pos:column="20">mode<pos:position pos:line="211" pos:column="24"/></name></name> <operator pos:line="211" pos:column="25">&amp;<pos:position pos:line="211" pos:column="30"/></operator> <name pos:line="211" pos:column="27">EDUI_MODE_TLS<pos:position pos:line="211" pos:column="40"/></name><operator pos:line="211" pos:column="40">)<pos:position pos:line="211" pos:column="41"/></operator> <operator pos:line="211" pos:column="42">&amp;&amp;<pos:position pos:line="211" pos:column="52"/></operator> <operator pos:line="211" pos:column="45">(<pos:position pos:line="211" pos:column="46"/></operator><name><name pos:line="211" pos:column="46">edui_conf<pos:position pos:line="211" pos:column="55"/></name><operator pos:line="211" pos:column="55">.<pos:position pos:line="211" pos:column="56"/></operator><name pos:line="211" pos:column="56">ver<pos:position pos:line="211" pos:column="59"/></name></name> <operator pos:line="211" pos:column="60">&lt;<pos:position pos:line="211" pos:column="64"/></operator> <literal type="number" pos:line="211" pos:column="62">3<pos:position pos:line="211" pos:column="63"/></literal><operator pos:line="211" pos:column="63">)<pos:position pos:line="211" pos:column="64"/></operator></expr>)<pos:position pos:line="211" pos:column="65"/></condition><then pos:line="211" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="212" pos:column="9">edui_conf<pos:position pos:line="212" pos:column="18"/></name><operator pos:line="212" pos:column="18">.<pos:position pos:line="212" pos:column="19"/></operator><name pos:line="212" pos:column="19">ver<pos:position pos:line="212" pos:column="22"/></name></name> <operator pos:line="212" pos:column="23">=<pos:position pos:line="212" pos:column="24"/></operator> <literal type="number" pos:line="212" pos:column="25">3<pos:position pos:line="212" pos:column="26"/></literal></expr>;<pos:position pos:line="212" pos:column="27"/></expr_stmt></block></then></if>					<comment type="block" pos:line="212" pos:column="65">/* TLS requires version 3 */</comment>
    <if pos:line="213" pos:column="5">if <condition pos:line="213" pos:column="8">(<expr><name><name pos:line="213" pos:column="9">edui_conf<pos:position pos:line="213" pos:column="18"/></name><operator pos:line="213" pos:column="18">.<pos:position pos:line="213" pos:column="19"/></operator><name pos:line="213" pos:column="19">persist_timeout<pos:position pos:line="213" pos:column="34"/></name></name> <operator pos:line="213" pos:column="35">&lt;<pos:position pos:line="213" pos:column="39"/></operator> <literal type="number" pos:line="213" pos:column="37">0<pos:position pos:line="213" pos:column="38"/></literal></expr>)<pos:position pos:line="213" pos:column="39"/></condition><then pos:line="213" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="214" pos:column="9">edui_conf<pos:position pos:line="214" pos:column="18"/></name><operator pos:line="214" pos:column="18">.<pos:position pos:line="214" pos:column="19"/></operator><name pos:line="214" pos:column="19">persist_timeout<pos:position pos:line="214" pos:column="34"/></name></name> <operator pos:line="214" pos:column="35">=<pos:position pos:line="214" pos:column="36"/></operator> <literal type="number" pos:line="214" pos:column="37">600<pos:position pos:line="214" pos:column="40"/></literal></expr>;<pos:position pos:line="214" pos:column="41"/></expr_stmt></block></then></if>			<comment type="block" pos:line="214" pos:column="65">/* Default: 600 seconds (10 minutes) */</comment>
    <if pos:line="215" pos:column="5">if <condition pos:line="215" pos:column="8">(<expr><name><name pos:line="215" pos:column="9">edui_conf<pos:position pos:line="215" pos:column="18"/></name><operator pos:line="215" pos:column="18">.<pos:position pos:line="215" pos:column="19"/></operator><name pos:line="215" pos:column="19">scope<pos:position pos:line="215" pos:column="24"/></name></name> <operator pos:line="215" pos:column="25">&lt;<pos:position pos:line="215" pos:column="29"/></operator> <literal type="number" pos:line="215" pos:column="27">0<pos:position pos:line="215" pos:column="28"/></literal></expr>)<pos:position pos:line="215" pos:column="29"/></condition><then pos:line="215" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="216" pos:column="9">edui_conf<pos:position pos:line="216" pos:column="18"/></name><operator pos:line="216" pos:column="18">.<pos:position pos:line="216" pos:column="19"/></operator><name pos:line="216" pos:column="19">scope<pos:position pos:line="216" pos:column="24"/></name></name> <operator pos:line="216" pos:column="25">=<pos:position pos:line="216" pos:column="26"/></operator> <literal type="number" pos:line="216" pos:column="27">1<pos:position pos:line="216" pos:column="28"/></literal></expr>;<pos:position pos:line="216" pos:column="29"/></expr_stmt></block></then></if>					<comment type="block" pos:line="216" pos:column="65">/* Default: one */</comment>
    <if pos:line="217" pos:column="5">if <condition pos:line="217" pos:column="8">(<expr><name><name pos:line="217" pos:column="9">edui_conf<pos:position pos:line="217" pos:column="18"/></name><operator pos:line="217" pos:column="18">.<pos:position pos:line="217" pos:column="19"/></operator><name pos:line="217" pos:column="19">search_filter<pos:position pos:line="217" pos:column="32"/></name><index pos:line="217" pos:column="32">[<expr><literal type="number" pos:line="217" pos:column="33">0<pos:position pos:line="217" pos:column="34"/></literal></expr>]<pos:position pos:line="217" pos:column="35"/></index></name> <operator pos:line="217" pos:column="36">==<pos:position pos:line="217" pos:column="38"/></operator> <literal type="char" pos:line="217" pos:column="39">'\0'<pos:position pos:line="217" pos:column="43"/></literal></expr>)<pos:position pos:line="217" pos:column="44"/></condition><then pos:line="217" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="218" pos:column="9">xstrncpy<pos:position pos:line="218" pos:column="17"/></name><argument_list pos:line="218" pos:column="17">(<argument><expr><name><name pos:line="218" pos:column="18">edui_conf<pos:position pos:line="218" pos:column="27"/></name><operator pos:line="218" pos:column="27">.<pos:position pos:line="218" pos:column="28"/></operator><name pos:line="218" pos:column="28">search_filter<pos:position pos:line="218" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="43">"(&amp;(objectclass=User)(networkAddress=*))"<pos:position pos:line="218" pos:column="88"/></literal></expr></argument>, <argument><expr><sizeof pos:line="218" pos:column="86">sizeof<argument_list pos:line="218" pos:column="92">(<argument><expr><name><name pos:line="218" pos:column="93">edui_conf<pos:position pos:line="218" pos:column="102"/></name><operator pos:line="218" pos:column="102">.<pos:position pos:line="218" pos:column="103"/></operator><name pos:line="218" pos:column="103">search_filter<pos:position pos:line="218" pos:column="116"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="117"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="218" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="119"/></expr_stmt></block></then></if>
    <if pos:line="219" pos:column="5">if <condition pos:line="219" pos:column="8">(<expr><name><name pos:line="219" pos:column="9">edui_conf<pos:position pos:line="219" pos:column="18"/></name><operator pos:line="219" pos:column="18">.<pos:position pos:line="219" pos:column="19"/></operator><name pos:line="219" pos:column="19">attrib<pos:position pos:line="219" pos:column="25"/></name><index pos:line="219" pos:column="25">[<expr><literal type="number" pos:line="219" pos:column="26">0<pos:position pos:line="219" pos:column="27"/></literal></expr>]<pos:position pos:line="219" pos:column="28"/></index></name> <operator pos:line="219" pos:column="29">==<pos:position pos:line="219" pos:column="31"/></operator> <literal type="char" pos:line="219" pos:column="32">'\0'<pos:position pos:line="219" pos:column="36"/></literal></expr>)<pos:position pos:line="219" pos:column="37"/></condition><then pos:line="219" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="220" pos:column="9">xstrncpy<pos:position pos:line="220" pos:column="17"/></name><argument_list pos:line="220" pos:column="17">(<argument><expr><name><name pos:line="220" pos:column="18">edui_conf<pos:position pos:line="220" pos:column="27"/></name><operator pos:line="220" pos:column="27">.<pos:position pos:line="220" pos:column="28"/></operator><name pos:line="220" pos:column="28">attrib<pos:position pos:line="220" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="36">"cn"<pos:position pos:line="220" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="220" pos:column="42">sizeof<argument_list pos:line="220" pos:column="48">(<argument><expr><name><name pos:line="220" pos:column="49">edui_conf<pos:position pos:line="220" pos:column="58"/></name><operator pos:line="220" pos:column="58">.<pos:position pos:line="220" pos:column="59"/></operator><name pos:line="220" pos:column="59">attrib<pos:position pos:line="220" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="220" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="68"/></expr_stmt></block></then></if>
    <if pos:line="221" pos:column="5">if <condition pos:line="221" pos:column="8">(<expr><name><name pos:line="221" pos:column="9">edui_conf<pos:position pos:line="221" pos:column="18"/></name><operator pos:line="221" pos:column="18">.<pos:position pos:line="221" pos:column="19"/></operator><name pos:line="221" pos:column="19">basedn<pos:position pos:line="221" pos:column="25"/></name><index pos:line="221" pos:column="25">[<expr><literal type="number" pos:line="221" pos:column="26">0<pos:position pos:line="221" pos:column="27"/></literal></expr>]<pos:position pos:line="221" pos:column="28"/></index></name> <operator pos:line="221" pos:column="29">==<pos:position pos:line="221" pos:column="31"/></operator> <literal type="char" pos:line="221" pos:column="32">'\0'<pos:position pos:line="221" pos:column="36"/></literal></expr>)<pos:position pos:line="221" pos:column="37"/></condition><then pos:line="221" pos:column="37"> <block pos:line="221" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="222" pos:column="9">local_printfx<pos:position pos:line="222" pos:column="22"/></name><argument_list pos:line="222" pos:column="22">(<argument><expr><literal type="string" pos:line="222" pos:column="23">"FATAL: No '-b' option provided (Base DN).\n"<pos:position pos:line="222" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="223" pos:column="9">DisplayUsage<pos:position pos:line="223" pos:column="21"/></name><argument_list pos:line="223" pos:column="21">()<pos:position pos:line="223" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="24"/></expr_stmt>
        <return pos:line="224" pos:column="9">return <expr><literal type="number" pos:line="224" pos:column="16">1<pos:position pos:line="224" pos:column="17"/></literal></expr>;<pos:position pos:line="224" pos:column="18"/></return>
    }<pos:position pos:line="225" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="226" pos:column="5">/* Trap the following signals */</comment>
    <expr_stmt><expr><call><name pos:line="227" pos:column="5">sigemptyset<pos:position pos:line="227" pos:column="16"/></name><argument_list pos:line="227" pos:column="16">(<argument><expr><operator pos:line="227" pos:column="17">&amp;<pos:position pos:line="227" pos:column="22"/></operator><name><name pos:line="227" pos:column="18">sv<pos:position pos:line="227" pos:column="20"/></name><operator pos:line="227" pos:column="20">.<pos:position pos:line="227" pos:column="21"/></operator><name pos:line="227" pos:column="21">sa_mask<pos:position pos:line="227" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="228" pos:column="5">sv<pos:position pos:line="228" pos:column="7"/></name><operator pos:line="228" pos:column="7">.<pos:position pos:line="228" pos:column="8"/></operator><name pos:line="228" pos:column="8">sa_handler<pos:position pos:line="228" pos:column="18"/></name></name> <operator pos:line="228" pos:column="19">=<pos:position pos:line="228" pos:column="20"/></operator> <name pos:line="228" pos:column="21">SigTrap<pos:position pos:line="228" pos:column="28"/></name></expr>;<pos:position pos:line="228" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="229" pos:column="5">sigaction<pos:position pos:line="229" pos:column="14"/></name><argument_list pos:line="229" pos:column="14">(<argument><expr><name pos:line="229" pos:column="15">SIGTERM<pos:position pos:line="229" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="229" pos:column="24">&amp;<pos:position pos:line="229" pos:column="29"/></operator><name pos:line="229" pos:column="25">sv<pos:position pos:line="229" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="29">NULL<pos:position pos:line="229" pos:column="33"/></name></expr></argument>)<pos:position pos:line="229" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="230" pos:column="5">sv<pos:position pos:line="230" pos:column="7"/></name><operator pos:line="230" pos:column="7">.<pos:position pos:line="230" pos:column="8"/></operator><name pos:line="230" pos:column="8">sa_handler<pos:position pos:line="230" pos:column="18"/></name></name> <operator pos:line="230" pos:column="19">=<pos:position pos:line="230" pos:column="20"/></operator> <name pos:line="230" pos:column="21">SigTrap<pos:position pos:line="230" pos:column="28"/></name></expr>;<pos:position pos:line="230" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="231" pos:column="5">sigaction<pos:position pos:line="231" pos:column="14"/></name><argument_list pos:line="231" pos:column="14">(<argument><expr><name pos:line="231" pos:column="15">SIGHUP<pos:position pos:line="231" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="231" pos:column="23">&amp;<pos:position pos:line="231" pos:column="28"/></operator><name pos:line="231" pos:column="24">sv<pos:position pos:line="231" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="28">NULL<pos:position pos:line="231" pos:column="32"/></name></expr></argument>)<pos:position pos:line="231" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="232" pos:column="5">sv<pos:position pos:line="232" pos:column="7"/></name><operator pos:line="232" pos:column="7">.<pos:position pos:line="232" pos:column="8"/></operator><name pos:line="232" pos:column="8">sa_handler<pos:position pos:line="232" pos:column="18"/></name></name> <operator pos:line="232" pos:column="19">=<pos:position pos:line="232" pos:column="20"/></operator> <name pos:line="232" pos:column="21">SigTrap<pos:position pos:line="232" pos:column="28"/></name></expr>;<pos:position pos:line="232" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="233" pos:column="5">sigaction<pos:position pos:line="233" pos:column="14"/></name><argument_list pos:line="233" pos:column="14">(<argument><expr><name pos:line="233" pos:column="15">SIGABRT<pos:position pos:line="233" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="233" pos:column="24">&amp;<pos:position pos:line="233" pos:column="29"/></operator><name pos:line="233" pos:column="25">sv<pos:position pos:line="233" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="29">NULL<pos:position pos:line="233" pos:column="33"/></name></expr></argument>)<pos:position pos:line="233" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="234" pos:column="5">sv<pos:position pos:line="234" pos:column="7"/></name><operator pos:line="234" pos:column="7">.<pos:position pos:line="234" pos:column="8"/></operator><name pos:line="234" pos:column="8">sa_handler<pos:position pos:line="234" pos:column="18"/></name></name> <operator pos:line="234" pos:column="19">=<pos:position pos:line="234" pos:column="20"/></operator> <name pos:line="234" pos:column="21">SigTrap<pos:position pos:line="234" pos:column="28"/></name></expr>;<pos:position pos:line="234" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="235" pos:column="5">sigaction<pos:position pos:line="235" pos:column="14"/></name><argument_list pos:line="235" pos:column="14">(<argument><expr><name pos:line="235" pos:column="15">SIGINT<pos:position pos:line="235" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="235" pos:column="23">&amp;<pos:position pos:line="235" pos:column="28"/></operator><name pos:line="235" pos:column="24">sv<pos:position pos:line="235" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="28">NULL<pos:position pos:line="235" pos:column="32"/></name></expr></argument>)<pos:position pos:line="235" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="236" pos:column="5">sv<pos:position pos:line="236" pos:column="7"/></name><operator pos:line="236" pos:column="7">.<pos:position pos:line="236" pos:column="8"/></operator><name pos:line="236" pos:column="8">sa_handler<pos:position pos:line="236" pos:column="18"/></name></name> <operator pos:line="236" pos:column="19">=<pos:position pos:line="236" pos:column="20"/></operator> <name pos:line="236" pos:column="21">SigTrap<pos:position pos:line="236" pos:column="28"/></name></expr>;<pos:position pos:line="236" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="237" pos:column="5">sigaction<pos:position pos:line="237" pos:column="14"/></name><argument_list pos:line="237" pos:column="14">(<argument><expr><name pos:line="237" pos:column="15">SIGSEGV<pos:position pos:line="237" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="237" pos:column="24">&amp;<pos:position pos:line="237" pos:column="29"/></operator><name pos:line="237" pos:column="25">sv<pos:position pos:line="237" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="29">NULL<pos:position pos:line="237" pos:column="33"/></name></expr></argument>)<pos:position pos:line="237" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="239" pos:column="5">DisplayConf<pos:position pos:line="239" pos:column="16"/></name><argument_list pos:line="239" pos:column="16">()<pos:position pos:line="239" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="19"/></expr_stmt>
    <comment type="block" pos:line="240" pos:column="5">/* Done with arguments */</comment>

    <comment type="block" pos:line="242" pos:column="5">/* Set elap timer */</comment>
    <expr_stmt><expr><call><name pos:line="243" pos:column="5">time<pos:position pos:line="243" pos:column="9"/></name><argument_list pos:line="243" pos:column="9">(<argument><expr><operator pos:line="243" pos:column="10">&amp;<pos:position pos:line="243" pos:column="15"/></operator><name pos:line="243" pos:column="11">edui_now<pos:position pos:line="243" pos:column="19"/></name></expr></argument>)<pos:position pos:line="243" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="244" pos:column="5">t<pos:position pos:line="244" pos:column="6"/></name> <operator pos:line="244" pos:column="7">=<pos:position pos:line="244" pos:column="8"/></operator> <name pos:line="244" pos:column="9">edui_now<pos:position pos:line="244" pos:column="17"/></name></expr>;<pos:position pos:line="244" pos:column="18"/></expr_stmt>
    <comment type="block" pos:line="245" pos:column="5">/* Main loop -- Waits for stdin input before action */</comment>
    <while pos:line="246" pos:column="5">while <condition pos:line="246" pos:column="11">(<expr><call><name pos:line="246" pos:column="12">fgets<pos:position pos:line="246" pos:column="17"/></name><argument_list pos:line="246" pos:column="17">(<argument><expr><name pos:line="246" pos:column="18">bufa<pos:position pos:line="246" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="246" pos:column="24">sizeof<argument_list pos:line="246" pos:column="30">(<argument><expr><name pos:line="246" pos:column="31">bufa<pos:position pos:line="246" pos:column="35"/></name></expr></argument>)<pos:position pos:line="246" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="246" pos:column="38">stdin<pos:position pos:line="246" pos:column="43"/></name></expr></argument>)<pos:position pos:line="246" pos:column="44"/></argument_list></call> <operator pos:line="246" pos:column="45">!=<pos:position pos:line="246" pos:column="47"/></operator> <name pos:line="246" pos:column="48">NULL<pos:position pos:line="246" pos:column="52"/></name></expr>)<pos:position pos:line="246" pos:column="53"/></condition> <block pos:line="246" pos:column="54">{
        <if pos:line="247" pos:column="9">if <condition pos:line="247" pos:column="12">(<expr><name><name pos:line="247" pos:column="13">edui_conf<pos:position pos:line="247" pos:column="22"/></name><operator pos:line="247" pos:column="22">.<pos:position pos:line="247" pos:column="23"/></operator><name pos:line="247" pos:column="23">mode<pos:position pos:line="247" pos:column="27"/></name></name> <operator pos:line="247" pos:column="28">&amp;<pos:position pos:line="247" pos:column="33"/></operator> <name pos:line="247" pos:column="30">EDUI_MODE_KILL<pos:position pos:line="247" pos:column="44"/></name></expr>)<pos:position pos:line="247" pos:column="45"/></condition><then pos:line="247" pos:column="45">
            <block type="pseudo"><break pos:line="248" pos:column="13">break;<pos:position pos:line="248" pos:column="19"/></break></block></then></if>
        <expr_stmt><expr><call><name pos:line="249" pos:column="9">time<pos:position pos:line="249" pos:column="13"/></name><argument_list pos:line="249" pos:column="13">(<argument><expr><operator pos:line="249" pos:column="14">&amp;<pos:position pos:line="249" pos:column="19"/></operator><name pos:line="249" pos:column="15">edui_now<pos:position pos:line="249" pos:column="23"/></name></expr></argument>)<pos:position pos:line="249" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="25"/></expr_stmt>
        <if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name pos:line="250" pos:column="13">t<pos:position pos:line="250" pos:column="14"/></name> <operator pos:line="250" pos:column="15">&lt;<pos:position pos:line="250" pos:column="19"/></operator> <name pos:line="250" pos:column="17">edui_now<pos:position pos:line="250" pos:column="25"/></name></expr>)<pos:position pos:line="250" pos:column="26"/></condition><then pos:line="250" pos:column="26"> <block pos:line="250" pos:column="27">{
            <comment type="block" pos:line="251" pos:column="13">/* Elapse seconds */</comment>
            <expr_stmt><expr><name pos:line="252" pos:column="13">edui_elap<pos:position pos:line="252" pos:column="22"/></name> <operator pos:line="252" pos:column="23">=<pos:position pos:line="252" pos:column="24"/></operator> <name pos:line="252" pos:column="25">edui_now<pos:position pos:line="252" pos:column="33"/></name> <operator pos:line="252" pos:column="34">-<pos:position pos:line="252" pos:column="35"/></operator> <name pos:line="252" pos:column="36">t<pos:position pos:line="252" pos:column="37"/></name></expr>;<pos:position pos:line="252" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="253" pos:column="13">t<pos:position pos:line="253" pos:column="14"/></name> <operator pos:line="253" pos:column="15">=<pos:position pos:line="253" pos:column="16"/></operator> <name pos:line="253" pos:column="17">edui_now<pos:position pos:line="253" pos:column="25"/></name></expr>;<pos:position pos:line="253" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="254" pos:column="10"/></block></then> <else pos:line="254" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="255" pos:column="13">edui_elap<pos:position pos:line="255" pos:column="22"/></name> <operator pos:line="255" pos:column="23">=<pos:position pos:line="255" pos:column="24"/></operator> <literal type="number" pos:line="255" pos:column="25">0<pos:position pos:line="255" pos:column="26"/></literal></expr>;<pos:position pos:line="255" pos:column="27"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name pos:line="256" pos:column="9">k<pos:position pos:line="256" pos:column="10"/></name> <operator pos:line="256" pos:column="11">=<pos:position pos:line="256" pos:column="12"/></operator> <call><name pos:line="256" pos:column="13">strlen<pos:position pos:line="256" pos:column="19"/></name><argument_list pos:line="256" pos:column="19">(<argument><expr><name pos:line="256" pos:column="20">bufa<pos:position pos:line="256" pos:column="24"/></name></expr></argument>)<pos:position pos:line="256" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="26"/></expr_stmt>
        <comment type="block" pos:line="257" pos:column="9">/* BINARY DEBUGGING *
                    local_printfx("while() -&gt; bufa[%" PRIuSIZE "]: %s", k, bufa);
                    for (i = 0; i &lt; k; ++i)
                      local_printfx("%02X", bufa[i]);
                    local_printfx("\n");
        * BINARY DEBUGGING */</comment>
        <comment type="block" pos:line="263" pos:column="9">/* Check for CRLF */</comment>
        <expr_stmt><expr><name pos:line="264" pos:column="9">p<pos:position pos:line="264" pos:column="10"/></name> <operator pos:line="264" pos:column="11">=<pos:position pos:line="264" pos:column="12"/></operator> <call><name pos:line="264" pos:column="13">strchr<pos:position pos:line="264" pos:column="19"/></name><argument_list pos:line="264" pos:column="19">(<argument><expr><name pos:line="264" pos:column="20">bufa<pos:position pos:line="264" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="264" pos:column="26">'\n'<pos:position pos:line="264" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="32"/></expr_stmt>
        <if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><name pos:line="265" pos:column="13">p<pos:position pos:line="265" pos:column="14"/></name> <operator pos:line="265" pos:column="15">!=<pos:position pos:line="265" pos:column="17"/></operator> <name pos:line="265" pos:column="18">NULL<pos:position pos:line="265" pos:column="22"/></name></expr>)<pos:position pos:line="265" pos:column="23"/></condition><then pos:line="265" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="266" pos:column="13">*<pos:position pos:line="266" pos:column="14"/></operator><name pos:line="266" pos:column="14">p<pos:position pos:line="266" pos:column="15"/></name> <operator pos:line="266" pos:column="16">=<pos:position pos:line="266" pos:column="17"/></operator> <literal type="char" pos:line="266" pos:column="18">'\0'<pos:position pos:line="266" pos:column="22"/></literal></expr>;<pos:position pos:line="266" pos:column="23"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="267" pos:column="9">p<pos:position pos:line="267" pos:column="10"/></name> <operator pos:line="267" pos:column="11">=<pos:position pos:line="267" pos:column="12"/></operator> <call><name pos:line="267" pos:column="13">strchr<pos:position pos:line="267" pos:column="19"/></name><argument_list pos:line="267" pos:column="19">(<argument><expr><name pos:line="267" pos:column="20">bufa<pos:position pos:line="267" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="267" pos:column="26">'\r'<pos:position pos:line="267" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="32"/></expr_stmt>
        <if pos:line="268" pos:column="9">if <condition pos:line="268" pos:column="12">(<expr><name pos:line="268" pos:column="13">p<pos:position pos:line="268" pos:column="14"/></name> <operator pos:line="268" pos:column="15">!=<pos:position pos:line="268" pos:column="17"/></operator> <name pos:line="268" pos:column="18">NULL<pos:position pos:line="268" pos:column="22"/></name></expr>)<pos:position pos:line="268" pos:column="23"/></condition><then pos:line="268" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="269" pos:column="13">*<pos:position pos:line="269" pos:column="14"/></operator><name pos:line="269" pos:column="14">p<pos:position pos:line="269" pos:column="15"/></name> <operator pos:line="269" pos:column="16">=<pos:position pos:line="269" pos:column="17"/></operator> <literal type="char" pos:line="269" pos:column="18">'\0'<pos:position pos:line="269" pos:column="22"/></literal></expr>;<pos:position pos:line="269" pos:column="23"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="270" pos:column="9">p<pos:position pos:line="270" pos:column="10"/></name> <operator pos:line="270" pos:column="11">=<pos:position pos:line="270" pos:column="12"/></operator> <call><name pos:line="270" pos:column="13">strchr<pos:position pos:line="270" pos:column="19"/></name><argument_list pos:line="270" pos:column="19">(<argument><expr><name pos:line="270" pos:column="20">bufa<pos:position pos:line="270" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="270" pos:column="26">' '<pos:position pos:line="270" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="31"/></expr_stmt>

        <comment type="block" pos:line="272" pos:column="9">/* No space given, but group string is required --&gt; ERR */</comment>
        <if pos:line="273" pos:column="9">if <condition pos:line="273" pos:column="12">(<expr><operator pos:line="273" pos:column="13">(<pos:position pos:line="273" pos:column="14"/></operator><name><name pos:line="273" pos:column="14">edui_conf<pos:position pos:line="273" pos:column="23"/></name><operator pos:line="273" pos:column="23">.<pos:position pos:line="273" pos:column="24"/></operator><name pos:line="273" pos:column="24">mode<pos:position pos:line="273" pos:column="28"/></name></name> <operator pos:line="273" pos:column="29">&amp;<pos:position pos:line="273" pos:column="34"/></operator> <name pos:line="273" pos:column="31">EDUI_MODE_GROUP<pos:position pos:line="273" pos:column="46"/></name><operator pos:line="273" pos:column="46">)<pos:position pos:line="273" pos:column="47"/></operator> <operator pos:line="273" pos:column="48">&amp;&amp;<pos:position pos:line="273" pos:column="58"/></operator> <operator pos:line="273" pos:column="51">(<pos:position pos:line="273" pos:column="52"/></operator><name pos:line="273" pos:column="52">p<pos:position pos:line="273" pos:column="53"/></name> <operator pos:line="273" pos:column="54">==<pos:position pos:line="273" pos:column="56"/></operator> <name pos:line="273" pos:column="57">NULL<pos:position pos:line="273" pos:column="61"/></name><operator pos:line="273" pos:column="61">)<pos:position pos:line="273" pos:column="62"/></operator></expr>)<pos:position pos:line="273" pos:column="63"/></condition><then pos:line="273" pos:column="63"> <block pos:line="273" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="274" pos:column="13">debug<pos:position pos:line="274" pos:column="18"/></name><argument_list pos:line="274" pos:column="18">(<argument><expr><literal type="string" pos:line="274" pos:column="19">"while() -&gt; Search group is missing. (required)\n"<pos:position pos:line="274" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="275" pos:column="13">local_printfx<pos:position pos:line="275" pos:column="26"/></name><argument_list pos:line="275" pos:column="26">(<argument><expr><literal type="string" pos:line="275" pos:column="27">"ERR message=\"(Search Group Required)\"\n"<pos:position pos:line="275" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="72"/></expr_stmt>
            <continue pos:line="276" pos:column="13">continue;<pos:position pos:line="276" pos:column="22"/></continue>
        }<pos:position pos:line="277" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="278" pos:column="9">x<pos:position pos:line="278" pos:column="10"/></name> <operator pos:line="278" pos:column="11">=<pos:position pos:line="278" pos:column="12"/></operator> <literal type="number" pos:line="278" pos:column="13">0<pos:position pos:line="278" pos:column="14"/></literal></expr>;<pos:position pos:line="278" pos:column="15"/></expr_stmt>

        <comment type="block" pos:line="280" pos:column="9">/* Open LDAP connection */</comment>
        <if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><operator pos:line="281" pos:column="13">!<pos:position pos:line="281" pos:column="14"/></operator><operator pos:line="281" pos:column="14">(<pos:position pos:line="281" pos:column="15"/></operator><name><name pos:line="281" pos:column="15">edui_ldap<pos:position pos:line="281" pos:column="24"/></name><operator pos:line="281" pos:column="24">.<pos:position pos:line="281" pos:column="25"/></operator><name pos:line="281" pos:column="25">status<pos:position pos:line="281" pos:column="31"/></name></name> <operator pos:line="281" pos:column="32">&amp;<pos:position pos:line="281" pos:column="37"/></operator> <name pos:line="281" pos:column="34">LDAP_INIT_S<pos:position pos:line="281" pos:column="45"/></name><operator pos:line="281" pos:column="45">)<pos:position pos:line="281" pos:column="46"/></operator></expr>)<pos:position pos:line="281" pos:column="47"/></condition><then pos:line="281" pos:column="47"> <block pos:line="281" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="282" pos:column="13">InitLDAP<pos:position pos:line="282" pos:column="21"/></name><argument_list pos:line="282" pos:column="21">(<argument><expr><operator pos:line="282" pos:column="22">&amp;<pos:position pos:line="282" pos:column="27"/></operator><name pos:line="282" pos:column="23">edui_ldap<pos:position pos:line="282" pos:column="32"/></name></expr></argument>)<pos:position pos:line="282" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="283" pos:column="13">debug<pos:position pos:line="283" pos:column="18"/></name><argument_list pos:line="283" pos:column="18">(<argument><expr><literal type="string" pos:line="283" pos:column="19">"InitLDAP() -&gt; %s\n"<pos:position pos:line="283" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="283" pos:column="41">ErrLDAP<pos:position pos:line="283" pos:column="48"/></name><argument_list pos:line="283" pos:column="48">(<argument><expr><name pos:line="283" pos:column="49">LDAP_ERR_SUCCESS<pos:position pos:line="283" pos:column="65"/></name></expr></argument>)<pos:position pos:line="283" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="283" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="68"/></expr_stmt>
            <if pos:line="284" pos:column="13">if <condition pos:line="284" pos:column="16">(<expr><name><name pos:line="284" pos:column="17">edui_conf<pos:position pos:line="284" pos:column="26"/></name><operator pos:line="284" pos:column="26">.<pos:position pos:line="284" pos:column="27"/></operator><name pos:line="284" pos:column="27">mode<pos:position pos:line="284" pos:column="31"/></name></name> <operator pos:line="284" pos:column="32">&amp;<pos:position pos:line="284" pos:column="37"/></operator> <name pos:line="284" pos:column="34">EDUI_MODE_PERSIST<pos:position pos:line="284" pos:column="51"/></name></expr>)<pos:position pos:line="284" pos:column="52"/></condition><then pos:line="284" pos:column="52">					<comment type="block" pos:line="284" pos:column="89">/* Setup persistant mode */</comment>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="285" pos:column="17">edui_ldap<pos:position pos:line="285" pos:column="26"/></name><operator pos:line="285" pos:column="26">.<pos:position pos:line="285" pos:column="27"/></operator><name pos:line="285" pos:column="27">status<pos:position pos:line="285" pos:column="33"/></name></name> <operator pos:line="285" pos:column="34">|=<pos:position pos:line="285" pos:column="36"/></operator> <name pos:line="285" pos:column="37">LDAP_PERSIST_S<pos:position pos:line="285" pos:column="51"/></name></expr>;<pos:position pos:line="285" pos:column="52"/></expr_stmt></block></then></if>
        }<pos:position pos:line="286" pos:column="10"/></block></then></if>
        <if pos:line="287" pos:column="9">if <condition pos:line="287" pos:column="12">(<expr><operator pos:line="287" pos:column="13">(<pos:position pos:line="287" pos:column="14"/></operator><name><name pos:line="287" pos:column="14">edui_ldap<pos:position pos:line="287" pos:column="23"/></name><operator pos:line="287" pos:column="23">.<pos:position pos:line="287" pos:column="24"/></operator><name pos:line="287" pos:column="24">status<pos:position pos:line="287" pos:column="30"/></name></name> <operator pos:line="287" pos:column="31">&amp;<pos:position pos:line="287" pos:column="36"/></operator> <name pos:line="287" pos:column="33">LDAP_IDLE_S<pos:position pos:line="287" pos:column="44"/></name><operator pos:line="287" pos:column="44">)<pos:position pos:line="287" pos:column="45"/></operator> <operator pos:line="287" pos:column="46">&amp;&amp;<pos:position pos:line="287" pos:column="56"/></operator> <operator pos:line="287" pos:column="49">(<pos:position pos:line="287" pos:column="50"/></operator><name pos:line="287" pos:column="50">edui_elap<pos:position pos:line="287" pos:column="59"/></name> <operator pos:line="287" pos:column="60">&gt;<pos:position pos:line="287" pos:column="64"/></operator> <literal type="number" pos:line="287" pos:column="62">0<pos:position pos:line="287" pos:column="63"/></literal><operator pos:line="287" pos:column="63">)<pos:position pos:line="287" pos:column="64"/></operator></expr>)<pos:position pos:line="287" pos:column="65"/></condition><then pos:line="287" pos:column="65"> <block pos:line="287" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="288" pos:column="13">edui_ldap<pos:position pos:line="288" pos:column="22"/></name><operator pos:line="288" pos:column="22">.<pos:position pos:line="288" pos:column="23"/></operator><name pos:line="288" pos:column="23">idle_time<pos:position pos:line="288" pos:column="32"/></name></name> <operator pos:line="288" pos:column="33">=<pos:position pos:line="288" pos:column="34"/></operator> <name><name pos:line="288" pos:column="35">edui_ldap<pos:position pos:line="288" pos:column="44"/></name><operator pos:line="288" pos:column="44">.<pos:position pos:line="288" pos:column="45"/></operator><name pos:line="288" pos:column="45">idle_time<pos:position pos:line="288" pos:column="54"/></name></name> <operator pos:line="288" pos:column="55">+<pos:position pos:line="288" pos:column="56"/></operator> <name pos:line="288" pos:column="57">edui_elap<pos:position pos:line="288" pos:column="66"/></name></expr>;<pos:position pos:line="288" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="289" pos:column="10"/></block></then></if>
        <if pos:line="290" pos:column="9">if <condition pos:line="290" pos:column="12">(<expr><operator pos:line="290" pos:column="13">(<pos:position pos:line="290" pos:column="14"/></operator><name><name pos:line="290" pos:column="14">edui_ldap<pos:position pos:line="290" pos:column="23"/></name><operator pos:line="290" pos:column="23">.<pos:position pos:line="290" pos:column="24"/></operator><name pos:line="290" pos:column="24">status<pos:position pos:line="290" pos:column="30"/></name></name> <operator pos:line="290" pos:column="31">&amp;<pos:position pos:line="290" pos:column="36"/></operator> <name pos:line="290" pos:column="33">LDAP_PERSIST_S<pos:position pos:line="290" pos:column="47"/></name><operator pos:line="290" pos:column="47">)<pos:position pos:line="290" pos:column="48"/></operator> <operator pos:line="290" pos:column="49">&amp;&amp;<pos:position pos:line="290" pos:column="59"/></operator> <operator pos:line="290" pos:column="52">(<pos:position pos:line="290" pos:column="53"/></operator><name><name pos:line="290" pos:column="53">edui_ldap<pos:position pos:line="290" pos:column="62"/></name><operator pos:line="290" pos:column="62">.<pos:position pos:line="290" pos:column="63"/></operator><name pos:line="290" pos:column="63">status<pos:position pos:line="290" pos:column="69"/></name></name> <operator pos:line="290" pos:column="70">&amp;<pos:position pos:line="290" pos:column="75"/></operator> <name pos:line="290" pos:column="72">LDAP_IDLE_S<pos:position pos:line="290" pos:column="83"/></name><operator pos:line="290" pos:column="83">)<pos:position pos:line="290" pos:column="84"/></operator> <operator pos:line="290" pos:column="85">&amp;&amp;<pos:position pos:line="290" pos:column="95"/></operator> <operator pos:line="290" pos:column="88">(<pos:position pos:line="290" pos:column="89"/></operator><name><name pos:line="290" pos:column="89">edui_ldap<pos:position pos:line="290" pos:column="98"/></name><operator pos:line="290" pos:column="98">.<pos:position pos:line="290" pos:column="99"/></operator><name pos:line="290" pos:column="99">idle_time<pos:position pos:line="290" pos:column="108"/></name></name> <operator pos:line="290" pos:column="109">&gt;<pos:position pos:line="290" pos:column="113"/></operator> <name><name pos:line="290" pos:column="111">edui_conf<pos:position pos:line="290" pos:column="120"/></name><operator pos:line="290" pos:column="120">.<pos:position pos:line="290" pos:column="121"/></operator><name pos:line="290" pos:column="121">persist_timeout<pos:position pos:line="290" pos:column="136"/></name></name><operator pos:line="290" pos:column="136">)<pos:position pos:line="290" pos:column="137"/></operator></expr>)<pos:position pos:line="290" pos:column="138"/></condition><then pos:line="290" pos:column="138"> <block pos:line="290" pos:column="139">{
            <expr_stmt><expr><call><name pos:line="291" pos:column="13">debug<pos:position pos:line="291" pos:column="18"/></name><argument_list pos:line="291" pos:column="18">(<argument><expr><literal type="string" pos:line="291" pos:column="19">"while() -&gt; Connection timed out after %d seconds\n"<pos:position pos:line="291" pos:column="74"/></literal></expr></argument>, <argument><expr><call pos:line="291" pos:column="73">(<name pos:line="291" pos:column="74">int<pos:position pos:line="291" pos:column="77"/></name>)<argument_list pos:line="291" pos:column="78">(<argument><expr><name><name pos:line="291" pos:column="79">edui_ldap<pos:position pos:line="291" pos:column="88"/></name><operator pos:line="291" pos:column="88">.<pos:position pos:line="291" pos:column="89"/></operator><name pos:line="291" pos:column="89">idle_time<pos:position pos:line="291" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="291" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="291" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="101"/></expr_stmt>
            <expr_stmt><expr><name pos:line="292" pos:column="13">x<pos:position pos:line="292" pos:column="14"/></name> <operator pos:line="292" pos:column="15">=<pos:position pos:line="292" pos:column="16"/></operator> <call><name pos:line="292" pos:column="17">CloseLDAP<pos:position pos:line="292" pos:column="26"/></name><argument_list pos:line="292" pos:column="26">(<argument><expr><operator pos:line="292" pos:column="27">&amp;<pos:position pos:line="292" pos:column="32"/></operator><name pos:line="292" pos:column="28">edui_ldap<pos:position pos:line="292" pos:column="37"/></name></expr></argument>)<pos:position pos:line="292" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="293" pos:column="13">debug<pos:position pos:line="293" pos:column="18"/></name><argument_list pos:line="293" pos:column="18">(<argument><expr><literal type="string" pos:line="293" pos:column="19">"CloseLDAP(-) -&gt; %s\n"<pos:position pos:line="293" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="293" pos:column="43">ErrLDAP<pos:position pos:line="293" pos:column="50"/></name><argument_list pos:line="293" pos:column="50">(<argument><expr><name pos:line="293" pos:column="51">x<pos:position pos:line="293" pos:column="52"/></name></expr></argument>)<pos:position pos:line="293" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="293" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="294" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="295" pos:column="9">edui_ldap<pos:position pos:line="295" pos:column="18"/></name><operator pos:line="295" pos:column="18">.<pos:position pos:line="295" pos:column="19"/></operator><name pos:line="295" pos:column="19">err<pos:position pos:line="295" pos:column="22"/></name></name> <operator pos:line="295" pos:column="23">=<pos:position pos:line="295" pos:column="24"/></operator> <operator pos:line="295" pos:column="25">-<pos:position pos:line="295" pos:column="26"/></operator><literal type="number" pos:line="295" pos:column="26">1<pos:position pos:line="295" pos:column="27"/></literal></expr>;<pos:position pos:line="295" pos:column="28"/></expr_stmt>
        <if pos:line="296" pos:column="9">if <condition pos:line="296" pos:column="12">(<expr><operator pos:line="296" pos:column="13">!<pos:position pos:line="296" pos:column="14"/></operator><operator pos:line="296" pos:column="14">(<pos:position pos:line="296" pos:column="15"/></operator><name><name pos:line="296" pos:column="15">edui_ldap<pos:position pos:line="296" pos:column="24"/></name><operator pos:line="296" pos:column="24">.<pos:position pos:line="296" pos:column="25"/></operator><name pos:line="296" pos:column="25">status<pos:position pos:line="296" pos:column="31"/></name></name> <operator pos:line="296" pos:column="32">&amp;<pos:position pos:line="296" pos:column="37"/></operator> <name pos:line="296" pos:column="34">LDAP_OPEN_S<pos:position pos:line="296" pos:column="45"/></name><operator pos:line="296" pos:column="45">)<pos:position pos:line="296" pos:column="46"/></operator></expr>)<pos:position pos:line="296" pos:column="47"/></condition><then pos:line="296" pos:column="47"> <block pos:line="296" pos:column="48">{
            <expr_stmt><expr><name pos:line="297" pos:column="13">x<pos:position pos:line="297" pos:column="14"/></name> <operator pos:line="297" pos:column="15">=<pos:position pos:line="297" pos:column="16"/></operator> <call><name pos:line="297" pos:column="17">OpenLDAP<pos:position pos:line="297" pos:column="25"/></name><argument_list pos:line="297" pos:column="25">(<argument><expr><operator pos:line="297" pos:column="26">&amp;<pos:position pos:line="297" pos:column="31"/></operator><name pos:line="297" pos:column="27">edui_ldap<pos:position pos:line="297" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="38">edui_conf<pos:position pos:line="297" pos:column="47"/></name><operator pos:line="297" pos:column="47">.<pos:position pos:line="297" pos:column="48"/></operator><name pos:line="297" pos:column="48">host<pos:position pos:line="297" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="54">edui_conf<pos:position pos:line="297" pos:column="63"/></name><operator pos:line="297" pos:column="63">.<pos:position pos:line="297" pos:column="64"/></operator><name pos:line="297" pos:column="64">port<pos:position pos:line="297" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="297" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="70"/></expr_stmt>
            <if pos:line="298" pos:column="13">if <condition pos:line="298" pos:column="16">(<expr><name pos:line="298" pos:column="17">x<pos:position pos:line="298" pos:column="18"/></name> <operator pos:line="298" pos:column="19">!=<pos:position pos:line="298" pos:column="21"/></operator> <name pos:line="298" pos:column="22">LDAP_ERR_SUCCESS<pos:position pos:line="298" pos:column="38"/></name></expr>)<pos:position pos:line="298" pos:column="39"/></condition><then pos:line="298" pos:column="39"> <block pos:line="298" pos:column="40">{
                <comment type="block" pos:line="299" pos:column="17">/* Failed to connect */</comment>
                <expr_stmt><expr><call><name pos:line="300" pos:column="17">debug<pos:position pos:line="300" pos:column="22"/></name><argument_list pos:line="300" pos:column="22">(<argument><expr><literal type="string" pos:line="300" pos:column="23">"OpenLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="300" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="300" pos:column="56">ErrLDAP<pos:position pos:line="300" pos:column="63"/></name><argument_list pos:line="300" pos:column="63">(<argument><expr><name pos:line="300" pos:column="64">x<pos:position pos:line="300" pos:column="65"/></name></expr></argument>)<pos:position pos:line="300" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="300" pos:column="68">ldap_err2string<pos:position pos:line="300" pos:column="83"/></name><argument_list pos:line="300" pos:column="83">(<argument><expr><name><name pos:line="300" pos:column="84">edui_ldap<pos:position pos:line="300" pos:column="93"/></name><operator pos:line="300" pos:column="93">.<pos:position pos:line="300" pos:column="94"/></operator><name pos:line="300" pos:column="94">err<pos:position pos:line="300" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="300" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="300" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="100"/></expr_stmt>
            }<pos:position pos:line="301" pos:column="14"/></block></then> <else pos:line="301" pos:column="15">else <block pos:line="301" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="302" pos:column="17">debug<pos:position pos:line="302" pos:column="22"/></name><argument_list pos:line="302" pos:column="22">(<argument><expr><literal type="string" pos:line="302" pos:column="23">"OpenLDAP(-, %s, %d) -&gt; %s\n"<pos:position pos:line="302" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="302" pos:column="54">edui_conf<pos:position pos:line="302" pos:column="63"/></name><operator pos:line="302" pos:column="63">.<pos:position pos:line="302" pos:column="64"/></operator><name pos:line="302" pos:column="64">host<pos:position pos:line="302" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="302" pos:column="70">edui_conf<pos:position pos:line="302" pos:column="79"/></name><operator pos:line="302" pos:column="79">.<pos:position pos:line="302" pos:column="80"/></operator><name pos:line="302" pos:column="80">port<pos:position pos:line="302" pos:column="84"/></name></name></expr></argument>, <argument><expr><call><name pos:line="302" pos:column="86">ErrLDAP<pos:position pos:line="302" pos:column="93"/></name><argument_list pos:line="302" pos:column="93">(<argument><expr><name pos:line="302" pos:column="94">x<pos:position pos:line="302" pos:column="95"/></name></expr></argument>)<pos:position pos:line="302" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="302" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="98"/></expr_stmt>
                <expr_stmt><expr><name pos:line="303" pos:column="17">x<pos:position pos:line="303" pos:column="18"/></name> <operator pos:line="303" pos:column="19">=<pos:position pos:line="303" pos:column="20"/></operator> <call><name pos:line="303" pos:column="21">SetVerLDAP<pos:position pos:line="303" pos:column="31"/></name><argument_list pos:line="303" pos:column="31">(<argument><expr><operator pos:line="303" pos:column="32">&amp;<pos:position pos:line="303" pos:column="37"/></operator><name pos:line="303" pos:column="33">edui_ldap<pos:position pos:line="303" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="303" pos:column="44">edui_conf<pos:position pos:line="303" pos:column="53"/></name><operator pos:line="303" pos:column="53">.<pos:position pos:line="303" pos:column="54"/></operator><name pos:line="303" pos:column="54">ver<pos:position pos:line="303" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="303" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="59"/></expr_stmt>
                <if pos:line="304" pos:column="17">if <condition pos:line="304" pos:column="20">(<expr><name pos:line="304" pos:column="21">x<pos:position pos:line="304" pos:column="22"/></name> <operator pos:line="304" pos:column="23">!=<pos:position pos:line="304" pos:column="25"/></operator> <name pos:line="304" pos:column="26">LDAP_ERR_SUCCESS<pos:position pos:line="304" pos:column="42"/></name></expr>)<pos:position pos:line="304" pos:column="43"/></condition><then pos:line="304" pos:column="43"> <block pos:line="304" pos:column="44">{
                    <comment type="block" pos:line="305" pos:column="21">/* Failed to set version */</comment>
                    <expr_stmt><expr><call><name pos:line="306" pos:column="21">debug<pos:position pos:line="306" pos:column="26"/></name><argument_list pos:line="306" pos:column="26">(<argument><expr><literal type="string" pos:line="306" pos:column="27">"SetVerLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="306" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="306" pos:column="62">ErrLDAP<pos:position pos:line="306" pos:column="69"/></name><argument_list pos:line="306" pos:column="69">(<argument><expr><name pos:line="306" pos:column="70">x<pos:position pos:line="306" pos:column="71"/></name></expr></argument>)<pos:position pos:line="306" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="306" pos:column="74">ldap_err2string<pos:position pos:line="306" pos:column="89"/></name><argument_list pos:line="306" pos:column="89">(<argument><expr><name><name pos:line="306" pos:column="90">edui_ldap<pos:position pos:line="306" pos:column="99"/></name><operator pos:line="306" pos:column="99">.<pos:position pos:line="306" pos:column="100"/></operator><name pos:line="306" pos:column="100">err<pos:position pos:line="306" pos:column="103"/></name></name></expr></argument>)<pos:position pos:line="306" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="306" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="106"/></expr_stmt>
                }<pos:position pos:line="307" pos:column="18"/></block></then> <else pos:line="307" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="308" pos:column="21">debug<pos:position pos:line="308" pos:column="26"/></name><argument_list pos:line="308" pos:column="26">(<argument><expr><literal type="string" pos:line="308" pos:column="27">"SetVerLDAP(-, %d) -&gt; %s\n"<pos:position pos:line="308" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="308" pos:column="56">edui_conf<pos:position pos:line="308" pos:column="65"/></name><operator pos:line="308" pos:column="65">.<pos:position pos:line="308" pos:column="66"/></operator><name pos:line="308" pos:column="66">ver<pos:position pos:line="308" pos:column="69"/></name></name></expr></argument>, <argument><expr><call><name pos:line="308" pos:column="71">ErrLDAP<pos:position pos:line="308" pos:column="78"/></name><argument_list pos:line="308" pos:column="78">(<argument><expr><name pos:line="308" pos:column="79">x<pos:position pos:line="308" pos:column="80"/></name></expr></argument>)<pos:position pos:line="308" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="308" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="83"/></expr_stmt></block></else></if>
            }<pos:position pos:line="309" pos:column="14"/></block></else></if>
        }<pos:position pos:line="310" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="311" pos:column="9">edui_ldap<pos:position pos:line="311" pos:column="18"/></name><operator pos:line="311" pos:column="18">.<pos:position pos:line="311" pos:column="19"/></operator><name pos:line="311" pos:column="19">err<pos:position pos:line="311" pos:column="22"/></name></name> <operator pos:line="311" pos:column="23">=<pos:position pos:line="311" pos:column="24"/></operator> <operator pos:line="311" pos:column="25">-<pos:position pos:line="311" pos:column="26"/></operator><literal type="number" pos:line="311" pos:column="26">1<pos:position pos:line="311" pos:column="27"/></literal></expr>;<pos:position pos:line="311" pos:column="28"/></expr_stmt>
        <if pos:line="312" pos:column="9">if <condition pos:line="312" pos:column="12">(<expr><operator pos:line="312" pos:column="13">!<pos:position pos:line="312" pos:column="14"/></operator><operator pos:line="312" pos:column="14">(<pos:position pos:line="312" pos:column="15"/></operator><name><name pos:line="312" pos:column="15">edui_ldap<pos:position pos:line="312" pos:column="24"/></name><operator pos:line="312" pos:column="24">.<pos:position pos:line="312" pos:column="25"/></operator><name pos:line="312" pos:column="25">status<pos:position pos:line="312" pos:column="31"/></name></name> <operator pos:line="312" pos:column="32">&amp;<pos:position pos:line="312" pos:column="37"/></operator> <name pos:line="312" pos:column="34">LDAP_BIND_S<pos:position pos:line="312" pos:column="45"/></name><operator pos:line="312" pos:column="45">)<pos:position pos:line="312" pos:column="46"/></operator> <operator pos:line="312" pos:column="47">&amp;&amp;<pos:position pos:line="312" pos:column="57"/></operator> <operator pos:line="312" pos:column="50">(<pos:position pos:line="312" pos:column="51"/></operator><name><name pos:line="312" pos:column="51">edui_conf<pos:position pos:line="312" pos:column="60"/></name><operator pos:line="312" pos:column="60">.<pos:position pos:line="312" pos:column="61"/></operator><name pos:line="312" pos:column="61">mode<pos:position pos:line="312" pos:column="65"/></name></name> <operator pos:line="312" pos:column="66">&amp;<pos:position pos:line="312" pos:column="71"/></operator> <name pos:line="312" pos:column="68">EDUI_MODE_TLS<pos:position pos:line="312" pos:column="81"/></name><operator pos:line="312" pos:column="81">)<pos:position pos:line="312" pos:column="82"/></operator></expr>)<pos:position pos:line="312" pos:column="83"/></condition><then pos:line="312" pos:column="83"> <block pos:line="312" pos:column="84">{
            <comment type="block" pos:line="313" pos:column="13">/* TLS binding */</comment>
            <expr_stmt><expr><name pos:line="314" pos:column="13">x<pos:position pos:line="314" pos:column="14"/></name> <operator pos:line="314" pos:column="15">=<pos:position pos:line="314" pos:column="16"/></operator> <call><name pos:line="314" pos:column="17">BindLDAP<pos:position pos:line="314" pos:column="25"/></name><argument_list pos:line="314" pos:column="25">(<argument><expr><operator pos:line="314" pos:column="26">&amp;<pos:position pos:line="314" pos:column="31"/></operator><name pos:line="314" pos:column="27">edui_ldap<pos:position pos:line="314" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="314" pos:column="38">edui_conf<pos:position pos:line="314" pos:column="47"/></name><operator pos:line="314" pos:column="47">.<pos:position pos:line="314" pos:column="48"/></operator><name pos:line="314" pos:column="48">dn<pos:position pos:line="314" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="314" pos:column="52">edui_conf<pos:position pos:line="314" pos:column="61"/></name><operator pos:line="314" pos:column="61">.<pos:position pos:line="314" pos:column="62"/></operator><name pos:line="314" pos:column="62">passwd<pos:position pos:line="314" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="70">LDAP_AUTH_TLS<pos:position pos:line="314" pos:column="83"/></name></expr></argument>)<pos:position pos:line="314" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="85"/></expr_stmt>
            <if pos:line="315" pos:column="13">if <condition pos:line="315" pos:column="16">(<expr><name pos:line="315" pos:column="17">x<pos:position pos:line="315" pos:column="18"/></name> <operator pos:line="315" pos:column="19">!=<pos:position pos:line="315" pos:column="21"/></operator> <name pos:line="315" pos:column="22">LDAP_ERR_SUCCESS<pos:position pos:line="315" pos:column="38"/></name></expr>)<pos:position pos:line="315" pos:column="39"/></condition><then pos:line="315" pos:column="39"> <block pos:line="315" pos:column="40">{
                <comment type="block" pos:line="316" pos:column="17">/* Unable to bind */</comment>
                <expr_stmt><expr><call><name pos:line="317" pos:column="17">debug<pos:position pos:line="317" pos:column="22"/></name><argument_list pos:line="317" pos:column="22">(<argument><expr><literal type="string" pos:line="317" pos:column="23">"BindLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="317" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="317" pos:column="56">ErrLDAP<pos:position pos:line="317" pos:column="63"/></name><argument_list pos:line="317" pos:column="63">(<argument><expr><name pos:line="317" pos:column="64">x<pos:position pos:line="317" pos:column="65"/></name></expr></argument>)<pos:position pos:line="317" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="317" pos:column="68">ldap_err2string<pos:position pos:line="317" pos:column="83"/></name><argument_list pos:line="317" pos:column="83">(<argument><expr><name><name pos:line="317" pos:column="84">edui_ldap<pos:position pos:line="317" pos:column="93"/></name><operator pos:line="317" pos:column="93">.<pos:position pos:line="317" pos:column="94"/></operator><name pos:line="317" pos:column="94">err<pos:position pos:line="317" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="317" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="317" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="100"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="318" pos:column="17">local_printfx<pos:position pos:line="318" pos:column="30"/></name><argument_list pos:line="318" pos:column="30">(<argument><expr><literal type="string" pos:line="318" pos:column="31">"ERR message=\"(BindLDAP: %s - %s)\"\n"<pos:position pos:line="318" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="318" pos:column="72">ErrLDAP<pos:position pos:line="318" pos:column="79"/></name><argument_list pos:line="318" pos:column="79">(<argument><expr><name pos:line="318" pos:column="80">x<pos:position pos:line="318" pos:column="81"/></name></expr></argument>)<pos:position pos:line="318" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="318" pos:column="84">ldap_err2string<pos:position pos:line="318" pos:column="99"/></name><argument_list pos:line="318" pos:column="99">(<argument><expr><name><name pos:line="318" pos:column="100">edui_ldap<pos:position pos:line="318" pos:column="109"/></name><operator pos:line="318" pos:column="109">.<pos:position pos:line="318" pos:column="110"/></operator><name pos:line="318" pos:column="110">err<pos:position pos:line="318" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="318" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="318" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="116"/></expr_stmt>
                <continue pos:line="319" pos:column="17">continue;<pos:position pos:line="319" pos:column="26"/></continue>
            }<pos:position pos:line="320" pos:column="14"/></block></then> <else pos:line="320" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="321" pos:column="17">debug<pos:position pos:line="321" pos:column="22"/></name><argument_list pos:line="321" pos:column="22">(<argument><expr><literal type="string" pos:line="321" pos:column="23">"BindLDAP(-, %s, %s, (LDAP_AUTH_TLS)) -&gt; %s\n"<pos:position pos:line="321" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="321" pos:column="71">edui_conf<pos:position pos:line="321" pos:column="80"/></name><operator pos:line="321" pos:column="80">.<pos:position pos:line="321" pos:column="81"/></operator><name pos:line="321" pos:column="81">dn<pos:position pos:line="321" pos:column="83"/></name></name></expr></argument>, <argument><expr><name><name pos:line="321" pos:column="85">edui_conf<pos:position pos:line="321" pos:column="94"/></name><operator pos:line="321" pos:column="94">.<pos:position pos:line="321" pos:column="95"/></operator><name pos:line="321" pos:column="95">passwd<pos:position pos:line="321" pos:column="101"/></name></name></expr></argument>, <argument><expr><call><name pos:line="321" pos:column="103">ErrLDAP<pos:position pos:line="321" pos:column="110"/></name><argument_list pos:line="321" pos:column="110">(<argument><expr><name pos:line="321" pos:column="111">x<pos:position pos:line="321" pos:column="112"/></name></expr></argument>)<pos:position pos:line="321" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="321" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="115"/></expr_stmt></block></else></if>
        }<pos:position pos:line="322" pos:column="10"/></block></then> <elseif pos:line="322" pos:column="11">else <if pos:line="322" pos:column="16">if <condition pos:line="322" pos:column="19">(<expr><operator pos:line="322" pos:column="20">!<pos:position pos:line="322" pos:column="21"/></operator><operator pos:line="322" pos:column="21">(<pos:position pos:line="322" pos:column="22"/></operator><name><name pos:line="322" pos:column="22">edui_ldap<pos:position pos:line="322" pos:column="31"/></name><operator pos:line="322" pos:column="31">.<pos:position pos:line="322" pos:column="32"/></operator><name pos:line="322" pos:column="32">status<pos:position pos:line="322" pos:column="38"/></name></name> <operator pos:line="322" pos:column="39">&amp;<pos:position pos:line="322" pos:column="44"/></operator> <name pos:line="322" pos:column="41">LDAP_BIND_S<pos:position pos:line="322" pos:column="52"/></name><operator pos:line="322" pos:column="52">)<pos:position pos:line="322" pos:column="53"/></operator></expr>)<pos:position pos:line="322" pos:column="54"/></condition><then pos:line="322" pos:column="54"> <block pos:line="322" pos:column="55">{
            <if pos:line="323" pos:column="13">if <condition pos:line="323" pos:column="16">(<expr><name><name pos:line="323" pos:column="17">edui_conf<pos:position pos:line="323" pos:column="26"/></name><operator pos:line="323" pos:column="26">.<pos:position pos:line="323" pos:column="27"/></operator><name pos:line="323" pos:column="27">dn<pos:position pos:line="323" pos:column="29"/></name><index pos:line="323" pos:column="29">[<expr><literal type="number" pos:line="323" pos:column="30">0<pos:position pos:line="323" pos:column="31"/></literal></expr>]<pos:position pos:line="323" pos:column="32"/></index></name> <operator pos:line="323" pos:column="33">!=<pos:position pos:line="323" pos:column="35"/></operator> <literal type="char" pos:line="323" pos:column="36">'\0'<pos:position pos:line="323" pos:column="40"/></literal></expr>)<pos:position pos:line="323" pos:column="41"/></condition><then pos:line="323" pos:column="41"> <block pos:line="323" pos:column="42">{
                <comment type="block" pos:line="324" pos:column="17">/* Simple binding - using dn / passwd for authorization */</comment>
                <expr_stmt><expr><name pos:line="325" pos:column="17">x<pos:position pos:line="325" pos:column="18"/></name> <operator pos:line="325" pos:column="19">=<pos:position pos:line="325" pos:column="20"/></operator> <call><name pos:line="325" pos:column="21">BindLDAP<pos:position pos:line="325" pos:column="29"/></name><argument_list pos:line="325" pos:column="29">(<argument><expr><operator pos:line="325" pos:column="30">&amp;<pos:position pos:line="325" pos:column="35"/></operator><name pos:line="325" pos:column="31">edui_ldap<pos:position pos:line="325" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="325" pos:column="42">edui_conf<pos:position pos:line="325" pos:column="51"/></name><operator pos:line="325" pos:column="51">.<pos:position pos:line="325" pos:column="52"/></operator><name pos:line="325" pos:column="52">dn<pos:position pos:line="325" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="325" pos:column="56">edui_conf<pos:position pos:line="325" pos:column="65"/></name><operator pos:line="325" pos:column="65">.<pos:position pos:line="325" pos:column="66"/></operator><name pos:line="325" pos:column="66">passwd<pos:position pos:line="325" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="325" pos:column="74">LDAP_AUTH_SIMPLE<pos:position pos:line="325" pos:column="90"/></name></expr></argument>)<pos:position pos:line="325" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="92"/></expr_stmt>
                <if pos:line="326" pos:column="17">if <condition pos:line="326" pos:column="20">(<expr><name pos:line="326" pos:column="21">x<pos:position pos:line="326" pos:column="22"/></name> <operator pos:line="326" pos:column="23">!=<pos:position pos:line="326" pos:column="25"/></operator> <name pos:line="326" pos:column="26">LDAP_ERR_SUCCESS<pos:position pos:line="326" pos:column="42"/></name></expr>)<pos:position pos:line="326" pos:column="43"/></condition><then pos:line="326" pos:column="43"> <block pos:line="326" pos:column="44">{
                    <comment type="block" pos:line="327" pos:column="21">/* Unable to bind */</comment>
                    <expr_stmt><expr><call><name pos:line="328" pos:column="21">debug<pos:position pos:line="328" pos:column="26"/></name><argument_list pos:line="328" pos:column="26">(<argument><expr><literal type="string" pos:line="328" pos:column="27">"BindLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="328" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="328" pos:column="60">ErrLDAP<pos:position pos:line="328" pos:column="67"/></name><argument_list pos:line="328" pos:column="67">(<argument><expr><name pos:line="328" pos:column="68">x<pos:position pos:line="328" pos:column="69"/></name></expr></argument>)<pos:position pos:line="328" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="328" pos:column="72">ldap_err2string<pos:position pos:line="328" pos:column="87"/></name><argument_list pos:line="328" pos:column="87">(<argument><expr><name><name pos:line="328" pos:column="88">edui_ldap<pos:position pos:line="328" pos:column="97"/></name><operator pos:line="328" pos:column="97">.<pos:position pos:line="328" pos:column="98"/></operator><name pos:line="328" pos:column="98">err<pos:position pos:line="328" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="328" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="328" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="104"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="329" pos:column="21">local_printfx<pos:position pos:line="329" pos:column="34"/></name><argument_list pos:line="329" pos:column="34">(<argument><expr><literal type="string" pos:line="329" pos:column="35">"ERR message=\"(BindLDAP: %s - %s)\"\n"<pos:position pos:line="329" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="329" pos:column="76">ErrLDAP<pos:position pos:line="329" pos:column="83"/></name><argument_list pos:line="329" pos:column="83">(<argument><expr><name pos:line="329" pos:column="84">x<pos:position pos:line="329" pos:column="85"/></name></expr></argument>)<pos:position pos:line="329" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="329" pos:column="88">ldap_err2string<pos:position pos:line="329" pos:column="103"/></name><argument_list pos:line="329" pos:column="103">(<argument><expr><name><name pos:line="329" pos:column="104">edui_ldap<pos:position pos:line="329" pos:column="113"/></name><operator pos:line="329" pos:column="113">.<pos:position pos:line="329" pos:column="114"/></operator><name pos:line="329" pos:column="114">err<pos:position pos:line="329" pos:column="117"/></name></name></expr></argument>)<pos:position pos:line="329" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="329" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="120"/></expr_stmt>
                    <continue pos:line="330" pos:column="21">continue;<pos:position pos:line="330" pos:column="30"/></continue>
                }<pos:position pos:line="331" pos:column="18"/></block></then> <else pos:line="331" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="332" pos:column="21">debug<pos:position pos:line="332" pos:column="26"/></name><argument_list pos:line="332" pos:column="26">(<argument><expr><literal type="string" pos:line="332" pos:column="27">"BindLDAP(-, %s, %s, (LDAP_AUTH_SIMPLE)) -&gt; %s\n"<pos:position pos:line="332" pos:column="79"/></literal></expr></argument>, <argument><expr><name><name pos:line="332" pos:column="78">edui_conf<pos:position pos:line="332" pos:column="87"/></name><operator pos:line="332" pos:column="87">.<pos:position pos:line="332" pos:column="88"/></operator><name pos:line="332" pos:column="88">dn<pos:position pos:line="332" pos:column="90"/></name></name></expr></argument>, <argument><expr><name><name pos:line="332" pos:column="92">edui_conf<pos:position pos:line="332" pos:column="101"/></name><operator pos:line="332" pos:column="101">.<pos:position pos:line="332" pos:column="102"/></operator><name pos:line="332" pos:column="102">passwd<pos:position pos:line="332" pos:column="108"/></name></name></expr></argument>, <argument><expr><call><name pos:line="332" pos:column="110">ErrLDAP<pos:position pos:line="332" pos:column="117"/></name><argument_list pos:line="332" pos:column="117">(<argument><expr><name pos:line="332" pos:column="118">x<pos:position pos:line="332" pos:column="119"/></name></expr></argument>)<pos:position pos:line="332" pos:column="120"/></argument_list></call></expr></argument>)<pos:position pos:line="332" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="122"/></expr_stmt></block></else></if>
            }<pos:position pos:line="333" pos:column="14"/></block></then> <else pos:line="333" pos:column="15">else <block pos:line="333" pos:column="20">{
                <comment type="block" pos:line="334" pos:column="17">/* Anonymous binding */</comment>
                <expr_stmt><expr><name pos:line="335" pos:column="17">x<pos:position pos:line="335" pos:column="18"/></name> <operator pos:line="335" pos:column="19">=<pos:position pos:line="335" pos:column="20"/></operator> <call><name pos:line="335" pos:column="21">BindLDAP<pos:position pos:line="335" pos:column="29"/></name><argument_list pos:line="335" pos:column="29">(<argument><expr><operator pos:line="335" pos:column="30">&amp;<pos:position pos:line="335" pos:column="35"/></operator><name pos:line="335" pos:column="31">edui_ldap<pos:position pos:line="335" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="335" pos:column="42">edui_conf<pos:position pos:line="335" pos:column="51"/></name><operator pos:line="335" pos:column="51">.<pos:position pos:line="335" pos:column="52"/></operator><name pos:line="335" pos:column="52">dn<pos:position pos:line="335" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="335" pos:column="56">edui_conf<pos:position pos:line="335" pos:column="65"/></name><operator pos:line="335" pos:column="65">.<pos:position pos:line="335" pos:column="66"/></operator><name pos:line="335" pos:column="66">passwd<pos:position pos:line="335" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="74">LDAP_AUTH_NONE<pos:position pos:line="335" pos:column="88"/></name></expr></argument>)<pos:position pos:line="335" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="90"/></expr_stmt>
                <if pos:line="336" pos:column="17">if <condition pos:line="336" pos:column="20">(<expr><name pos:line="336" pos:column="21">x<pos:position pos:line="336" pos:column="22"/></name> <operator pos:line="336" pos:column="23">!=<pos:position pos:line="336" pos:column="25"/></operator> <name pos:line="336" pos:column="26">LDAP_ERR_SUCCESS<pos:position pos:line="336" pos:column="42"/></name></expr>)<pos:position pos:line="336" pos:column="43"/></condition><then pos:line="336" pos:column="43"> <block pos:line="336" pos:column="44">{
                    <comment type="block" pos:line="337" pos:column="21">/* Unable to bind */</comment>
                    <expr_stmt><expr><call><name pos:line="338" pos:column="21">debug<pos:position pos:line="338" pos:column="26"/></name><argument_list pos:line="338" pos:column="26">(<argument><expr><literal type="string" pos:line="338" pos:column="27">"BindLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="338" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="338" pos:column="60">ErrLDAP<pos:position pos:line="338" pos:column="67"/></name><argument_list pos:line="338" pos:column="67">(<argument><expr><name pos:line="338" pos:column="68">x<pos:position pos:line="338" pos:column="69"/></name></expr></argument>)<pos:position pos:line="338" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="338" pos:column="72">ldap_err2string<pos:position pos:line="338" pos:column="87"/></name><argument_list pos:line="338" pos:column="87">(<argument><expr><name><name pos:line="338" pos:column="88">edui_ldap<pos:position pos:line="338" pos:column="97"/></name><operator pos:line="338" pos:column="97">.<pos:position pos:line="338" pos:column="98"/></operator><name pos:line="338" pos:column="98">err<pos:position pos:line="338" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="338" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="338" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="104"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="339" pos:column="21">local_printfx<pos:position pos:line="339" pos:column="34"/></name><argument_list pos:line="339" pos:column="34">(<argument><expr><literal type="string" pos:line="339" pos:column="35">"ERR message=\"(BindLDAP: %s - %s)\"\n"<pos:position pos:line="339" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="339" pos:column="76">ErrLDAP<pos:position pos:line="339" pos:column="83"/></name><argument_list pos:line="339" pos:column="83">(<argument><expr><name pos:line="339" pos:column="84">x<pos:position pos:line="339" pos:column="85"/></name></expr></argument>)<pos:position pos:line="339" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="339" pos:column="88">ldap_err2string<pos:position pos:line="339" pos:column="103"/></name><argument_list pos:line="339" pos:column="103">(<argument><expr><name><name pos:line="339" pos:column="104">edui_ldap<pos:position pos:line="339" pos:column="113"/></name><operator pos:line="339" pos:column="113">.<pos:position pos:line="339" pos:column="114"/></operator><name pos:line="339" pos:column="114">err<pos:position pos:line="339" pos:column="117"/></name></name></expr></argument>)<pos:position pos:line="339" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="339" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="120"/></expr_stmt>
                    <continue pos:line="340" pos:column="21">continue;<pos:position pos:line="340" pos:column="30"/></continue>
                }<pos:position pos:line="341" pos:column="18"/></block></then> <else pos:line="341" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="342" pos:column="21">debug<pos:position pos:line="342" pos:column="26"/></name><argument_list pos:line="342" pos:column="26">(<argument><expr><literal type="string" pos:line="342" pos:column="27">"BindLDAP(-, -, -, (LDAP_AUTH_NONE)) -&gt; %s\n"<pos:position pos:line="342" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="342" pos:column="74">ErrLDAP<pos:position pos:line="342" pos:column="81"/></name><argument_list pos:line="342" pos:column="81">(<argument><expr><name pos:line="342" pos:column="82">x<pos:position pos:line="342" pos:column="83"/></name></expr></argument>)<pos:position pos:line="342" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="342" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="86"/></expr_stmt></block></else></if>
            }<pos:position pos:line="343" pos:column="14"/></block></else></if>
        }<pos:position pos:line="344" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><name><name pos:line="345" pos:column="9">edui_ldap<pos:position pos:line="345" pos:column="18"/></name><operator pos:line="345" pos:column="18">.<pos:position pos:line="345" pos:column="19"/></operator><name pos:line="345" pos:column="19">err<pos:position pos:line="345" pos:column="22"/></name></name> <operator pos:line="345" pos:column="23">=<pos:position pos:line="345" pos:column="24"/></operator> <operator pos:line="345" pos:column="25">-<pos:position pos:line="345" pos:column="26"/></operator><literal type="number" pos:line="345" pos:column="26">1<pos:position pos:line="345" pos:column="27"/></literal></expr>;<pos:position pos:line="345" pos:column="28"/></expr_stmt>
        <if pos:line="346" pos:column="9">if <condition pos:line="346" pos:column="12">(<expr><name><name pos:line="346" pos:column="13">edui_ldap<pos:position pos:line="346" pos:column="22"/></name><operator pos:line="346" pos:column="22">.<pos:position pos:line="346" pos:column="23"/></operator><name pos:line="346" pos:column="23">status<pos:position pos:line="346" pos:column="29"/></name></name> <operator pos:line="346" pos:column="30">&amp;<pos:position pos:line="346" pos:column="35"/></operator> <name pos:line="346" pos:column="32">LDAP_PERSIST_S<pos:position pos:line="346" pos:column="46"/></name></expr>)<pos:position pos:line="346" pos:column="47"/></condition><then pos:line="346" pos:column="47"> <block pos:line="346" pos:column="48">{
            <expr_stmt><expr><name pos:line="347" pos:column="13">x<pos:position pos:line="347" pos:column="14"/></name> <operator pos:line="347" pos:column="15">=<pos:position pos:line="347" pos:column="16"/></operator> <call><name pos:line="347" pos:column="17">ResetLDAP<pos:position pos:line="347" pos:column="26"/></name><argument_list pos:line="347" pos:column="26">(<argument><expr><operator pos:line="347" pos:column="27">&amp;<pos:position pos:line="347" pos:column="32"/></operator><name pos:line="347" pos:column="28">edui_ldap<pos:position pos:line="347" pos:column="37"/></name></expr></argument>)<pos:position pos:line="347" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="39"/></expr_stmt>
            <if pos:line="348" pos:column="13">if <condition pos:line="348" pos:column="16">(<expr><name pos:line="348" pos:column="17">x<pos:position pos:line="348" pos:column="18"/></name> <operator pos:line="348" pos:column="19">!=<pos:position pos:line="348" pos:column="21"/></operator> <name pos:line="348" pos:column="22">LDAP_ERR_SUCCESS<pos:position pos:line="348" pos:column="38"/></name></expr>)<pos:position pos:line="348" pos:column="39"/></condition><then pos:line="348" pos:column="39"> <block pos:line="348" pos:column="40">{
                <comment type="block" pos:line="349" pos:column="17">/* Unable to reset */</comment>
                <expr_stmt><expr><call><name pos:line="350" pos:column="17">debug<pos:position pos:line="350" pos:column="22"/></name><argument_list pos:line="350" pos:column="22">(<argument><expr><literal type="string" pos:line="350" pos:column="23">"ResetLDAP() -&gt; %s\n"<pos:position pos:line="350" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="350" pos:column="46">ErrLDAP<pos:position pos:line="350" pos:column="53"/></name><argument_list pos:line="350" pos:column="53">(<argument><expr><name pos:line="350" pos:column="54">x<pos:position pos:line="350" pos:column="55"/></name></expr></argument>)<pos:position pos:line="350" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="350" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="351" pos:column="14"/></block></then> <else pos:line="351" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="352" pos:column="17">debug<pos:position pos:line="352" pos:column="22"/></name><argument_list pos:line="352" pos:column="22">(<argument><expr><literal type="string" pos:line="352" pos:column="23">"ResetLDAP() -&gt; %s\n"<pos:position pos:line="352" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="352" pos:column="46">ErrLDAP<pos:position pos:line="352" pos:column="53"/></name><argument_list pos:line="352" pos:column="53">(<argument><expr><name pos:line="352" pos:column="54">x<pos:position pos:line="352" pos:column="55"/></name></expr></argument>)<pos:position pos:line="352" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="352" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="58"/></expr_stmt></block></else></if>
        }<pos:position pos:line="353" pos:column="10"/></block></then></if>
        <if pos:line="354" pos:column="9">if <condition pos:line="354" pos:column="12">(<expr><name pos:line="354" pos:column="13">x<pos:position pos:line="354" pos:column="14"/></name> <operator pos:line="354" pos:column="15">!=<pos:position pos:line="354" pos:column="17"/></operator> <name pos:line="354" pos:column="18">LDAP_ERR_SUCCESS<pos:position pos:line="354" pos:column="34"/></name></expr>)<pos:position pos:line="354" pos:column="35"/></condition><then pos:line="354" pos:column="35"> <block pos:line="354" pos:column="36">{
            <comment type="block" pos:line="355" pos:column="13">/* Everything failed --&gt; ERR */</comment>
            <expr_stmt><expr><call><name pos:line="356" pos:column="13">debug<pos:position pos:line="356" pos:column="18"/></name><argument_list pos:line="356" pos:column="18">(<argument><expr><literal type="string" pos:line="356" pos:column="19">"while() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="356" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="356" pos:column="49">ErrLDAP<pos:position pos:line="356" pos:column="56"/></name><argument_list pos:line="356" pos:column="56">(<argument><expr><name pos:line="356" pos:column="57">x<pos:position pos:line="356" pos:column="58"/></name></expr></argument>)<pos:position pos:line="356" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="356" pos:column="61">ldap_err2string<pos:position pos:line="356" pos:column="76"/></name><argument_list pos:line="356" pos:column="76">(<argument><expr><name><name pos:line="356" pos:column="77">edui_ldap<pos:position pos:line="356" pos:column="86"/></name><operator pos:line="356" pos:column="86">.<pos:position pos:line="356" pos:column="87"/></operator><name pos:line="356" pos:column="87">err<pos:position pos:line="356" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="356" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="356" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="93"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="357" pos:column="13">CloseLDAP<pos:position pos:line="357" pos:column="22"/></name><argument_list pos:line="357" pos:column="22">(<argument><expr><operator pos:line="357" pos:column="23">&amp;<pos:position pos:line="357" pos:column="28"/></operator><name pos:line="357" pos:column="24">edui_ldap<pos:position pos:line="357" pos:column="33"/></name></expr></argument>)<pos:position pos:line="357" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="358" pos:column="13">local_printfx<pos:position pos:line="358" pos:column="26"/></name><argument_list pos:line="358" pos:column="26">(<argument><expr><literal type="string" pos:line="358" pos:column="27">"ERR message=\"(General Failure: %s)\"\n"<pos:position pos:line="358" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="358" pos:column="70">ErrLDAP<pos:position pos:line="358" pos:column="77"/></name><argument_list pos:line="358" pos:column="77">(<argument><expr><name pos:line="358" pos:column="78">x<pos:position pos:line="358" pos:column="79"/></name></expr></argument>)<pos:position pos:line="358" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="358" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="82"/></expr_stmt>
            <continue pos:line="359" pos:column="13">continue;<pos:position pos:line="359" pos:column="22"/></continue>
        }<pos:position pos:line="360" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="361" pos:column="9">edui_ldap<pos:position pos:line="361" pos:column="18"/></name><operator pos:line="361" pos:column="18">.<pos:position pos:line="361" pos:column="19"/></operator><name pos:line="361" pos:column="19">err<pos:position pos:line="361" pos:column="22"/></name></name> <operator pos:line="361" pos:column="23">=<pos:position pos:line="361" pos:column="24"/></operator> <operator pos:line="361" pos:column="25">-<pos:position pos:line="361" pos:column="26"/></operator><literal type="number" pos:line="361" pos:column="26">1<pos:position pos:line="361" pos:column="27"/></literal></expr>;<pos:position pos:line="361" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="362" pos:column="9">/* If we got a group string, split it */</comment>
        <if pos:line="363" pos:column="9">if <condition pos:line="363" pos:column="12">(<expr><name pos:line="363" pos:column="13">p<pos:position pos:line="363" pos:column="14"/></name> <operator pos:line="363" pos:column="15">!=<pos:position pos:line="363" pos:column="17"/></operator> <name pos:line="363" pos:column="18">NULL<pos:position pos:line="363" pos:column="22"/></name></expr>)<pos:position pos:line="363" pos:column="23"/></condition><then pos:line="363" pos:column="23"> <block pos:line="363" pos:column="24">{
            <comment type="block" pos:line="364" pos:column="13">/* Split string */</comment>
            <expr_stmt><expr><call><name pos:line="365" pos:column="13">debug<pos:position pos:line="365" pos:column="18"/></name><argument_list pos:line="365" pos:column="18">(<argument><expr><literal type="string" pos:line="365" pos:column="19">"StringSplit(%s, ' ', %s, %"<pos:position pos:line="365" pos:column="47"/></literal> <name pos:line="365" pos:column="48">PRIuSIZE<pos:position pos:line="365" pos:column="56"/></name> <literal type="string" pos:line="365" pos:column="57">")\n"<pos:position pos:line="365" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="365" pos:column="64">bufa<pos:position pos:line="365" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="70">bufb<pos:position pos:line="365" pos:column="74"/></name></expr></argument>, <argument><expr><sizeof pos:line="365" pos:column="76">sizeof<argument_list pos:line="365" pos:column="82">(<argument><expr><name pos:line="365" pos:column="83">bufb<pos:position pos:line="365" pos:column="87"/></name></expr></argument>)<pos:position pos:line="365" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="365" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><name pos:line="366" pos:column="13">i<pos:position pos:line="366" pos:column="14"/></name> <operator pos:line="366" pos:column="15">=<pos:position pos:line="366" pos:column="16"/></operator> <call><name pos:line="366" pos:column="17">StringSplit<pos:position pos:line="366" pos:column="28"/></name><argument_list pos:line="366" pos:column="28">(<argument><expr><name pos:line="366" pos:column="29">bufa<pos:position pos:line="366" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="366" pos:column="35">' '<pos:position pos:line="366" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="366" pos:column="40">bufb<pos:position pos:line="366" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="366" pos:column="46">sizeof<argument_list pos:line="366" pos:column="52">(<argument><expr><name pos:line="366" pos:column="53">bufb<pos:position pos:line="366" pos:column="57"/></name></expr></argument>)<pos:position pos:line="366" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="366" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="60"/></expr_stmt>
            <if pos:line="367" pos:column="13">if <condition pos:line="367" pos:column="16">(<expr><name pos:line="367" pos:column="17">i<pos:position pos:line="367" pos:column="18"/></name> <operator pos:line="367" pos:column="19">&gt;<pos:position pos:line="367" pos:column="23"/></operator> <literal type="number" pos:line="367" pos:column="21">0<pos:position pos:line="367" pos:column="22"/></literal></expr>)<pos:position pos:line="367" pos:column="23"/></condition><then pos:line="367" pos:column="23"> <block pos:line="367" pos:column="24">{
                <expr_stmt><expr><call><name pos:line="368" pos:column="17">debug<pos:position pos:line="368" pos:column="22"/></name><argument_list pos:line="368" pos:column="22">(<argument><expr><literal type="string" pos:line="368" pos:column="23">"StringSplit(%s, %s) done.  Result: %"<pos:position pos:line="368" pos:column="61"/></literal> <name pos:line="368" pos:column="62">PRIuSIZE<pos:position pos:line="368" pos:column="70"/></name> <literal type="string" pos:line="368" pos:column="71">"\n"<pos:position pos:line="368" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="368" pos:column="77">bufa<pos:position pos:line="368" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="83">bufb<pos:position pos:line="368" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="89">i<pos:position pos:line="368" pos:column="90"/></name></expr></argument>)<pos:position pos:line="368" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="92"/></expr_stmt>
                <comment type="block" pos:line="369" pos:column="17">/* Got a group to match against */</comment>
                <expr_stmt><expr><name pos:line="370" pos:column="17">x<pos:position pos:line="370" pos:column="18"/></name> <operator pos:line="370" pos:column="19">=<pos:position pos:line="370" pos:column="20"/></operator> <call><name pos:line="370" pos:column="21">ConvertIP<pos:position pos:line="370" pos:column="30"/></name><argument_list pos:line="370" pos:column="30">(<argument><expr><operator pos:line="370" pos:column="31">&amp;<pos:position pos:line="370" pos:column="36"/></operator><name pos:line="370" pos:column="32">edui_ldap<pos:position pos:line="370" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="370" pos:column="43">bufb<pos:position pos:line="370" pos:column="47"/></name></expr></argument>)<pos:position pos:line="370" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="49"/></expr_stmt>
                <if pos:line="371" pos:column="17">if <condition pos:line="371" pos:column="20">(<expr><name pos:line="371" pos:column="21">x<pos:position pos:line="371" pos:column="22"/></name> <operator pos:line="371" pos:column="23">&lt;<pos:position pos:line="371" pos:column="27"/></operator> <literal type="number" pos:line="371" pos:column="25">0<pos:position pos:line="371" pos:column="26"/></literal></expr>)<pos:position pos:line="371" pos:column="27"/></condition><then pos:line="371" pos:column="27"> <block pos:line="371" pos:column="28">{
                    <expr_stmt><expr><call><name pos:line="372" pos:column="21">debug<pos:position pos:line="372" pos:column="26"/></name><argument_list pos:line="372" pos:column="26">(<argument><expr><literal type="string" pos:line="372" pos:column="27">"ConvertIP() -&gt; %s\n"<pos:position pos:line="372" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="372" pos:column="50">ErrLDAP<pos:position pos:line="372" pos:column="57"/></name><argument_list pos:line="372" pos:column="57">(<argument><expr><name pos:line="372" pos:column="58">x<pos:position pos:line="372" pos:column="59"/></name></expr></argument>)<pos:position pos:line="372" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="372" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="373" pos:column="21">local_printfx<pos:position pos:line="373" pos:column="34"/></name><argument_list pos:line="373" pos:column="34">(<argument><expr><literal type="string" pos:line="373" pos:column="35">"ERR message=\"(ConvertIP: %s)\"\n"<pos:position pos:line="373" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="373" pos:column="72">ErrLDAP<pos:position pos:line="373" pos:column="79"/></name><argument_list pos:line="373" pos:column="79">(<argument><expr><name pos:line="373" pos:column="80">x<pos:position pos:line="373" pos:column="81"/></name></expr></argument>)<pos:position pos:line="373" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="373" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="84"/></expr_stmt>
                }<pos:position pos:line="374" pos:column="18"/></block></then> <else pos:line="374" pos:column="19">else <block pos:line="374" pos:column="24">{
                    <expr_stmt><expr><name><name pos:line="375" pos:column="21">edui_ldap<pos:position pos:line="375" pos:column="30"/></name><operator pos:line="375" pos:column="30">.<pos:position pos:line="375" pos:column="31"/></operator><name pos:line="375" pos:column="31">err<pos:position pos:line="375" pos:column="34"/></name></name> <operator pos:line="375" pos:column="35">=<pos:position pos:line="375" pos:column="36"/></operator> <operator pos:line="375" pos:column="37">-<pos:position pos:line="375" pos:column="38"/></operator><literal type="number" pos:line="375" pos:column="38">1<pos:position pos:line="375" pos:column="39"/></literal></expr>;<pos:position pos:line="375" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="376" pos:column="21">debug<pos:position pos:line="376" pos:column="26"/></name><argument_list pos:line="376" pos:column="26">(<argument><expr><literal type="string" pos:line="376" pos:column="27">"ConvertIP(-, %s) -&gt; Result[%d]: %s\n"<pos:position pos:line="376" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="376" pos:column="67">bufb<pos:position pos:line="376" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="73">x<pos:position pos:line="376" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="376" pos:column="76">edui_ldap<pos:position pos:line="376" pos:column="85"/></name><operator pos:line="376" pos:column="85">.<pos:position pos:line="376" pos:column="86"/></operator><name pos:line="376" pos:column="86">search_ip<pos:position pos:line="376" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="376" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="97"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="377" pos:column="21">x<pos:position pos:line="377" pos:column="22"/></name> <operator pos:line="377" pos:column="23">=<pos:position pos:line="377" pos:column="24"/></operator> <call><name pos:line="377" pos:column="25">SearchFilterLDAP<pos:position pos:line="377" pos:column="41"/></name><argument_list pos:line="377" pos:column="41">(<argument><expr><operator pos:line="377" pos:column="42">&amp;<pos:position pos:line="377" pos:column="47"/></operator><name pos:line="377" pos:column="43">edui_ldap<pos:position pos:line="377" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="54">bufa<pos:position pos:line="377" pos:column="58"/></name></expr></argument>)<pos:position pos:line="377" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="60"/></expr_stmt>
                    <if pos:line="378" pos:column="21">if <condition pos:line="378" pos:column="24">(<expr><name pos:line="378" pos:column="25">x<pos:position pos:line="378" pos:column="26"/></name> <operator pos:line="378" pos:column="27">&lt;<pos:position pos:line="378" pos:column="31"/></operator> <literal type="number" pos:line="378" pos:column="29">0<pos:position pos:line="378" pos:column="30"/></literal></expr>)<pos:position pos:line="378" pos:column="31"/></condition><then pos:line="378" pos:column="31"> <block pos:line="378" pos:column="32">{
                        <expr_stmt><expr><call><name pos:line="379" pos:column="25">debug<pos:position pos:line="379" pos:column="30"/></name><argument_list pos:line="379" pos:column="30">(<argument><expr><literal type="string" pos:line="379" pos:column="31">"SearchFilterLDAP() -&gt; %s\n"<pos:position pos:line="379" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="379" pos:column="61">ErrLDAP<pos:position pos:line="379" pos:column="68"/></name><argument_list pos:line="379" pos:column="68">(<argument><expr><name pos:line="379" pos:column="69">x<pos:position pos:line="379" pos:column="70"/></name></expr></argument>)<pos:position pos:line="379" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="379" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="380" pos:column="25">local_printfx<pos:position pos:line="380" pos:column="38"/></name><argument_list pos:line="380" pos:column="38">(<argument><expr><literal type="string" pos:line="380" pos:column="39">"ERR message=\"(SearchFilterLDAP: %s)\"\n"<pos:position pos:line="380" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="380" pos:column="83">ErrLDAP<pos:position pos:line="380" pos:column="90"/></name><argument_list pos:line="380" pos:column="90">(<argument><expr><name pos:line="380" pos:column="91">x<pos:position pos:line="380" pos:column="92"/></name></expr></argument>)<pos:position pos:line="380" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="380" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="95"/></expr_stmt>
                    }<pos:position pos:line="381" pos:column="22"/></block></then> <else pos:line="381" pos:column="23">else <block pos:line="381" pos:column="28">{
                        <comment type="block" pos:line="382" pos:column="25">/* Do Search */</comment>
                        <expr_stmt><expr><name><name pos:line="383" pos:column="25">edui_ldap<pos:position pos:line="383" pos:column="34"/></name><operator pos:line="383" pos:column="34">.<pos:position pos:line="383" pos:column="35"/></operator><name pos:line="383" pos:column="35">err<pos:position pos:line="383" pos:column="38"/></name></name> <operator pos:line="383" pos:column="39">=<pos:position pos:line="383" pos:column="40"/></operator> <operator pos:line="383" pos:column="41">-<pos:position pos:line="383" pos:column="42"/></operator><literal type="number" pos:line="383" pos:column="42">1<pos:position pos:line="383" pos:column="43"/></literal></expr>;<pos:position pos:line="383" pos:column="44"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="384" pos:column="25">debug<pos:position pos:line="384" pos:column="30"/></name><argument_list pos:line="384" pos:column="30">(<argument><expr><literal type="string" pos:line="384" pos:column="31">"SearchFilterLDAP(-, %s) -&gt; Length: %u\n"<pos:position pos:line="384" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="384" pos:column="74">bufa<pos:position pos:line="384" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="80">x<pos:position pos:line="384" pos:column="81"/></name></expr></argument>)<pos:position pos:line="384" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="83"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="385" pos:column="25">x<pos:position pos:line="385" pos:column="26"/></name> <operator pos:line="385" pos:column="27">=<pos:position pos:line="385" pos:column="28"/></operator> <call><name pos:line="385" pos:column="29">SearchLDAP<pos:position pos:line="385" pos:column="39"/></name><argument_list pos:line="385" pos:column="39">(<argument><expr><operator pos:line="385" pos:column="40">&amp;<pos:position pos:line="385" pos:column="45"/></operator><name pos:line="385" pos:column="41">edui_ldap<pos:position pos:line="385" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="385" pos:column="52">edui_ldap<pos:position pos:line="385" pos:column="61"/></name><operator pos:line="385" pos:column="61">.<pos:position pos:line="385" pos:column="62"/></operator><name pos:line="385" pos:column="62">scope<pos:position pos:line="385" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="385" pos:column="69">edui_ldap<pos:position pos:line="385" pos:column="78"/></name><operator pos:line="385" pos:column="78">.<pos:position pos:line="385" pos:column="79"/></operator><name pos:line="385" pos:column="79">search_filter<pos:position pos:line="385" pos:column="92"/></name></name></expr></argument>, <argument><expr><operator pos:line="385" pos:column="94">(<pos:position pos:line="385" pos:column="95"/></operator><name pos:line="385" pos:column="95">char<pos:position pos:line="385" pos:column="99"/></name> <operator pos:line="385" pos:column="100">*<pos:position pos:line="385" pos:column="101"/></operator><operator pos:line="385" pos:column="101">*<pos:position pos:line="385" pos:column="102"/></operator><operator pos:line="385" pos:column="102">)<pos:position pos:line="385" pos:column="103"/></operator> <operator pos:line="385" pos:column="104">&amp;<pos:position pos:line="385" pos:column="109"/></operator><name pos:line="385" pos:column="105">search_attrib<pos:position pos:line="385" pos:column="118"/></name></expr></argument>)<pos:position pos:line="385" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="120"/></expr_stmt>
                        <if pos:line="386" pos:column="25">if <condition pos:line="386" pos:column="28">(<expr><name pos:line="386" pos:column="29">x<pos:position pos:line="386" pos:column="30"/></name> <operator pos:line="386" pos:column="31">!=<pos:position pos:line="386" pos:column="33"/></operator> <name pos:line="386" pos:column="34">LDAP_ERR_SUCCESS<pos:position pos:line="386" pos:column="50"/></name></expr>)<pos:position pos:line="386" pos:column="51"/></condition><then pos:line="386" pos:column="51"> <block pos:line="386" pos:column="52">{
                            <expr_stmt><expr><call><name pos:line="387" pos:column="29">debug<pos:position pos:line="387" pos:column="34"/></name><argument_list pos:line="387" pos:column="34">(<argument><expr><literal type="string" pos:line="387" pos:column="35">"SearchLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="387" pos:column="71"/></literal></expr></argument>, <argument><expr><call><name pos:line="387" pos:column="70">ErrLDAP<pos:position pos:line="387" pos:column="77"/></name><argument_list pos:line="387" pos:column="77">(<argument><expr><name pos:line="387" pos:column="78">x<pos:position pos:line="387" pos:column="79"/></name></expr></argument>)<pos:position pos:line="387" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="387" pos:column="82">ldap_err2string<pos:position pos:line="387" pos:column="97"/></name><argument_list pos:line="387" pos:column="97">(<argument><expr><name><name pos:line="387" pos:column="98">edui_ldap<pos:position pos:line="387" pos:column="107"/></name><operator pos:line="387" pos:column="107">.<pos:position pos:line="387" pos:column="108"/></operator><name pos:line="387" pos:column="108">err<pos:position pos:line="387" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="387" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="387" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="114"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="388" pos:column="29">local_printfx<pos:position pos:line="388" pos:column="42"/></name><argument_list pos:line="388" pos:column="42">(<argument><expr><literal type="string" pos:line="388" pos:column="43">"ERR message=\"(SearchLDAP: %s)\"\n"<pos:position pos:line="388" pos:column="79"/></literal></expr></argument>, <argument><expr><call><name pos:line="388" pos:column="81">ErrLDAP<pos:position pos:line="388" pos:column="88"/></name><argument_list pos:line="388" pos:column="88">(<argument><expr><name pos:line="388" pos:column="89">x<pos:position pos:line="388" pos:column="90"/></name></expr></argument>)<pos:position pos:line="388" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="388" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="93"/></expr_stmt>
                        }<pos:position pos:line="389" pos:column="26"/></block></then> <else pos:line="389" pos:column="27">else <block pos:line="389" pos:column="32">{
                            <expr_stmt><expr><name><name pos:line="390" pos:column="29">edui_ldap<pos:position pos:line="390" pos:column="38"/></name><operator pos:line="390" pos:column="38">.<pos:position pos:line="390" pos:column="39"/></operator><name pos:line="390" pos:column="39">err<pos:position pos:line="390" pos:column="42"/></name></name> <operator pos:line="390" pos:column="43">=<pos:position pos:line="390" pos:column="44"/></operator> <operator pos:line="390" pos:column="45">-<pos:position pos:line="390" pos:column="46"/></operator><literal type="number" pos:line="390" pos:column="46">1<pos:position pos:line="390" pos:column="47"/></literal></expr>;<pos:position pos:line="390" pos:column="48"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="391" pos:column="29">debug<pos:position pos:line="391" pos:column="34"/></name><argument_list pos:line="391" pos:column="34">(<argument><expr><literal type="string" pos:line="391" pos:column="35">"SearchLDAP(-, %d, %s, -) -&gt; %s\n"<pos:position pos:line="391" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="391" pos:column="71">edui_conf<pos:position pos:line="391" pos:column="80"/></name><operator pos:line="391" pos:column="80">.<pos:position pos:line="391" pos:column="81"/></operator><name pos:line="391" pos:column="81">scope<pos:position pos:line="391" pos:column="86"/></name></name></expr></argument>, <argument><expr><name><name pos:line="391" pos:column="88">edui_ldap<pos:position pos:line="391" pos:column="97"/></name><operator pos:line="391" pos:column="97">.<pos:position pos:line="391" pos:column="98"/></operator><name pos:line="391" pos:column="98">search_filter<pos:position pos:line="391" pos:column="111"/></name></name></expr></argument>, <argument><expr><call><name pos:line="391" pos:column="113">ErrLDAP<pos:position pos:line="391" pos:column="120"/></name><argument_list pos:line="391" pos:column="120">(<argument><expr><name pos:line="391" pos:column="121">x<pos:position pos:line="391" pos:column="122"/></name></expr></argument>)<pos:position pos:line="391" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="391" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="125"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="392" pos:column="29">x<pos:position pos:line="392" pos:column="30"/></name> <operator pos:line="392" pos:column="31">=<pos:position pos:line="392" pos:column="32"/></operator> <call><name pos:line="392" pos:column="33">SearchIPLDAP<pos:position pos:line="392" pos:column="45"/></name><argument_list pos:line="392" pos:column="45">(<argument><expr><operator pos:line="392" pos:column="46">&amp;<pos:position pos:line="392" pos:column="51"/></operator><name pos:line="392" pos:column="47">edui_ldap<pos:position pos:line="392" pos:column="56"/></name></expr></argument>)<pos:position pos:line="392" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="58"/></expr_stmt>
                            <if pos:line="393" pos:column="29">if <condition pos:line="393" pos:column="32">(<expr><name pos:line="393" pos:column="33">x<pos:position pos:line="393" pos:column="34"/></name> <operator pos:line="393" pos:column="35">!=<pos:position pos:line="393" pos:column="37"/></operator> <name pos:line="393" pos:column="38">LDAP_ERR_SUCCESS<pos:position pos:line="393" pos:column="54"/></name></expr>)<pos:position pos:line="393" pos:column="55"/></condition><then pos:line="393" pos:column="55"> <block pos:line="393" pos:column="56">{
                                <expr_stmt><expr><call><name pos:line="394" pos:column="33">debug<pos:position pos:line="394" pos:column="38"/></name><argument_list pos:line="394" pos:column="38">(<argument><expr><literal type="string" pos:line="394" pos:column="39">"SearchIPLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="394" pos:column="77"/></literal></expr></argument>, <argument><expr><call><name pos:line="394" pos:column="76">ErrLDAP<pos:position pos:line="394" pos:column="83"/></name><argument_list pos:line="394" pos:column="83">(<argument><expr><name pos:line="394" pos:column="84">x<pos:position pos:line="394" pos:column="85"/></name></expr></argument>)<pos:position pos:line="394" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="394" pos:column="88">ldap_err2string<pos:position pos:line="394" pos:column="103"/></name><argument_list pos:line="394" pos:column="103">(<argument><expr><name><name pos:line="394" pos:column="104">edui_ldap<pos:position pos:line="394" pos:column="113"/></name><operator pos:line="394" pos:column="113">.<pos:position pos:line="394" pos:column="114"/></operator><name pos:line="394" pos:column="114">err<pos:position pos:line="394" pos:column="117"/></name></name></expr></argument>)<pos:position pos:line="394" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="394" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="120"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="395" pos:column="33">local_printfx<pos:position pos:line="395" pos:column="46"/></name><argument_list pos:line="395" pos:column="46">(<argument><expr><literal type="string" pos:line="395" pos:column="47">"ERR message=\"(SearchIPLDAP: %s)\"\n"<pos:position pos:line="395" pos:column="85"/></literal></expr></argument>, <argument><expr><call><name pos:line="395" pos:column="87">ErrLDAP<pos:position pos:line="395" pos:column="94"/></name><argument_list pos:line="395" pos:column="94">(<argument><expr><name pos:line="395" pos:column="95">x<pos:position pos:line="395" pos:column="96"/></name></expr></argument>)<pos:position pos:line="395" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="395" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="99"/></expr_stmt>
                            }<pos:position pos:line="396" pos:column="30"/></block></then> <else pos:line="396" pos:column="31">else <block pos:line="396" pos:column="36">{
                                <expr_stmt><expr><call><name pos:line="397" pos:column="33">debug<pos:position pos:line="397" pos:column="38"/></name><argument_list pos:line="397" pos:column="38">(<argument><expr><literal type="string" pos:line="397" pos:column="39">"SearchIPLDAP(-, %s) -&gt; %s\n"<pos:position pos:line="397" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="397" pos:column="70">edui_ldap<pos:position pos:line="397" pos:column="79"/></name><operator pos:line="397" pos:column="79">.<pos:position pos:line="397" pos:column="80"/></operator><name pos:line="397" pos:column="80">userid<pos:position pos:line="397" pos:column="86"/></name></name></expr></argument>, <argument><expr><call><name pos:line="397" pos:column="88">ErrLDAP<pos:position pos:line="397" pos:column="95"/></name><argument_list pos:line="397" pos:column="95">(<argument><expr><name pos:line="397" pos:column="96">x<pos:position pos:line="397" pos:column="97"/></name></expr></argument>)<pos:position pos:line="397" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="397" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="100"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="398" pos:column="33">local_printfx<pos:position pos:line="398" pos:column="46"/></name><argument_list pos:line="398" pos:column="46">(<argument><expr><literal type="string" pos:line="398" pos:column="47">"OK user=%s\n"<pos:position pos:line="398" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="398" pos:column="63">edui_ldap<pos:position pos:line="398" pos:column="72"/></name><operator pos:line="398" pos:column="72">.<pos:position pos:line="398" pos:column="73"/></operator><name pos:line="398" pos:column="73">userid<pos:position pos:line="398" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="398" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="81"/></expr_stmt>			<comment type="block" pos:line="398" pos:column="105">/* Got userid --&gt; OK user=&lt;userid&gt; */</comment>
                            }<pos:position pos:line="399" pos:column="30"/></block></else></if>
                        }<pos:position pos:line="400" pos:column="26"/></block></else></if>
                        <comment type="block" pos:line="401" pos:column="25">/* Clear for next query */</comment>
                        <expr_stmt><expr><call><name pos:line="402" pos:column="25">memset<pos:position pos:line="402" pos:column="31"/></name><argument_list pos:line="402" pos:column="31">(<argument><expr><name pos:line="402" pos:column="32">bufc<pos:position pos:line="402" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="402" pos:column="38">'\0'<pos:position pos:line="402" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="402" pos:column="44">sizeof<argument_list pos:line="402" pos:column="50">(<argument><expr><name pos:line="402" pos:column="51">bufc<pos:position pos:line="402" pos:column="55"/></name></expr></argument>)<pos:position pos:line="402" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="402" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="58"/></expr_stmt>
                    }<pos:position pos:line="403" pos:column="22"/></block></else></if>
                }<pos:position pos:line="404" pos:column="18"/></block></else></if>
            }<pos:position pos:line="405" pos:column="14"/></block></then> <else pos:line="405" pos:column="15">else <block pos:line="405" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="406" pos:column="17">debug<pos:position pos:line="406" pos:column="22"/></name><argument_list pos:line="406" pos:column="22">(<argument><expr><literal type="string" pos:line="406" pos:column="23">"StringSplit() -&gt; Error: %"<pos:position pos:line="406" pos:column="53"/></literal> <name pos:line="406" pos:column="51">PRIuSIZE<pos:position pos:line="406" pos:column="59"/></name> <literal type="string" pos:line="406" pos:column="60">"\n"<pos:position pos:line="406" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="406" pos:column="66">i<pos:position pos:line="406" pos:column="67"/></name></expr></argument>)<pos:position pos:line="406" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="407" pos:column="17">local_printfx<pos:position pos:line="407" pos:column="30"/></name><argument_list pos:line="407" pos:column="30">(<argument><expr><literal type="string" pos:line="407" pos:column="31">"ERR message=\"(StringSplit Error %"<pos:position pos:line="407" pos:column="67"/></literal> <name pos:line="407" pos:column="68">PRIuSIZE<pos:position pos:line="407" pos:column="76"/></name> <literal type="string" pos:line="407" pos:column="77">")\"\n"<pos:position pos:line="407" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="407" pos:column="86">i<pos:position pos:line="407" pos:column="87"/></name></expr></argument>)<pos:position pos:line="407" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="89"/></expr_stmt>
            }<pos:position pos:line="408" pos:column="14"/></block></else></if>
        }<pos:position pos:line="409" pos:column="10"/></block></then> <else pos:line="409" pos:column="11">else <block pos:line="409" pos:column="16">{
            <comment type="block" pos:line="410" pos:column="13">/* No group to match against, only an IP */</comment>
            <expr_stmt><expr><name pos:line="411" pos:column="13">x<pos:position pos:line="411" pos:column="14"/></name> <operator pos:line="411" pos:column="15">=<pos:position pos:line="411" pos:column="16"/></operator> <call><name pos:line="411" pos:column="17">ConvertIP<pos:position pos:line="411" pos:column="26"/></name><argument_list pos:line="411" pos:column="26">(<argument><expr><operator pos:line="411" pos:column="27">&amp;<pos:position pos:line="411" pos:column="32"/></operator><name pos:line="411" pos:column="28">edui_ldap<pos:position pos:line="411" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="411" pos:column="39">bufa<pos:position pos:line="411" pos:column="43"/></name></expr></argument>)<pos:position pos:line="411" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="45"/></expr_stmt>
            <if pos:line="412" pos:column="13">if <condition pos:line="412" pos:column="16">(<expr><name pos:line="412" pos:column="17">x<pos:position pos:line="412" pos:column="18"/></name> <operator pos:line="412" pos:column="19">&lt;<pos:position pos:line="412" pos:column="23"/></operator> <literal type="number" pos:line="412" pos:column="21">0<pos:position pos:line="412" pos:column="22"/></literal></expr>)<pos:position pos:line="412" pos:column="23"/></condition><then pos:line="412" pos:column="23"> <block pos:line="412" pos:column="24">{
                <expr_stmt><expr><call><name pos:line="413" pos:column="17">debug<pos:position pos:line="413" pos:column="22"/></name><argument_list pos:line="413" pos:column="22">(<argument><expr><literal type="string" pos:line="413" pos:column="23">"ConvertIP() -&gt; %s\n"<pos:position pos:line="413" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="413" pos:column="46">ErrLDAP<pos:position pos:line="413" pos:column="53"/></name><argument_list pos:line="413" pos:column="53">(<argument><expr><name pos:line="413" pos:column="54">x<pos:position pos:line="413" pos:column="55"/></name></expr></argument>)<pos:position pos:line="413" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="413" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="414" pos:column="17">local_printfx<pos:position pos:line="414" pos:column="30"/></name><argument_list pos:line="414" pos:column="30">(<argument><expr><literal type="string" pos:line="414" pos:column="31">"ERR message=\"(ConvertIP: %s)\"\n"<pos:position pos:line="414" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name pos:line="414" pos:column="68">ErrLDAP<pos:position pos:line="414" pos:column="75"/></name><argument_list pos:line="414" pos:column="75">(<argument><expr><name pos:line="414" pos:column="76">x<pos:position pos:line="414" pos:column="77"/></name></expr></argument>)<pos:position pos:line="414" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="414" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="414" pos:column="80"/></expr_stmt>
            }<pos:position pos:line="415" pos:column="14"/></block></then> <else pos:line="415" pos:column="15">else <block pos:line="415" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="416" pos:column="17">debug<pos:position pos:line="416" pos:column="22"/></name><argument_list pos:line="416" pos:column="22">(<argument><expr><literal type="string" pos:line="416" pos:column="23">"ConvertIP(-, %s) -&gt; Result[%d]: %s\n"<pos:position pos:line="416" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="416" pos:column="63">bufa<pos:position pos:line="416" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="416" pos:column="69">x<pos:position pos:line="416" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="416" pos:column="72">edui_ldap<pos:position pos:line="416" pos:column="81"/></name><operator pos:line="416" pos:column="81">.<pos:position pos:line="416" pos:column="82"/></operator><name pos:line="416" pos:column="82">search_ip<pos:position pos:line="416" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="416" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="416" pos:column="93"/></expr_stmt>
                <comment type="block" pos:line="417" pos:column="17">/* Do search */</comment>
                <expr_stmt><expr><name pos:line="418" pos:column="17">x<pos:position pos:line="418" pos:column="18"/></name> <operator pos:line="418" pos:column="19">=<pos:position pos:line="418" pos:column="20"/></operator> <call><name pos:line="418" pos:column="21">SearchFilterLDAP<pos:position pos:line="418" pos:column="37"/></name><argument_list pos:line="418" pos:column="37">(<argument><expr><operator pos:line="418" pos:column="38">&amp;<pos:position pos:line="418" pos:column="43"/></operator><name pos:line="418" pos:column="39">edui_ldap<pos:position pos:line="418" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="418" pos:column="50">NULL<pos:position pos:line="418" pos:column="54"/></name></expr></argument>)<pos:position pos:line="418" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="56"/></expr_stmt>
                <if pos:line="419" pos:column="17">if <condition pos:line="419" pos:column="20">(<expr><name pos:line="419" pos:column="21">x<pos:position pos:line="419" pos:column="22"/></name> <operator pos:line="419" pos:column="23">&lt;<pos:position pos:line="419" pos:column="27"/></operator> <literal type="number" pos:line="419" pos:column="25">0<pos:position pos:line="419" pos:column="26"/></literal></expr>)<pos:position pos:line="419" pos:column="27"/></condition><then pos:line="419" pos:column="27"> <block pos:line="419" pos:column="28">{
                    <expr_stmt><expr><call><name pos:line="420" pos:column="21">debug<pos:position pos:line="420" pos:column="26"/></name><argument_list pos:line="420" pos:column="26">(<argument><expr><literal type="string" pos:line="420" pos:column="27">"SearchFilterLDAP() -&gt; %s\n"<pos:position pos:line="420" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="420" pos:column="57">ErrLDAP<pos:position pos:line="420" pos:column="64"/></name><argument_list pos:line="420" pos:column="64">(<argument><expr><name pos:line="420" pos:column="65">x<pos:position pos:line="420" pos:column="66"/></name></expr></argument>)<pos:position pos:line="420" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="420" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="69"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="421" pos:column="21">local_printfx<pos:position pos:line="421" pos:column="34"/></name><argument_list pos:line="421" pos:column="34">(<argument><expr><literal type="string" pos:line="421" pos:column="35">"ERR message=\"(SearchFilterLDAP: %s)\"\n"<pos:position pos:line="421" pos:column="77"/></literal></expr></argument>, <argument><expr><call><name pos:line="421" pos:column="79">ErrLDAP<pos:position pos:line="421" pos:column="86"/></name><argument_list pos:line="421" pos:column="86">(<argument><expr><name pos:line="421" pos:column="87">x<pos:position pos:line="421" pos:column="88"/></name></expr></argument>)<pos:position pos:line="421" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="421" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="91"/></expr_stmt>
                }<pos:position pos:line="422" pos:column="18"/></block></then> <else pos:line="422" pos:column="19">else <block pos:line="422" pos:column="24">{
                    <expr_stmt><expr><name><name pos:line="423" pos:column="21">edui_ldap<pos:position pos:line="423" pos:column="30"/></name><operator pos:line="423" pos:column="30">.<pos:position pos:line="423" pos:column="31"/></operator><name pos:line="423" pos:column="31">err<pos:position pos:line="423" pos:column="34"/></name></name> <operator pos:line="423" pos:column="35">=<pos:position pos:line="423" pos:column="36"/></operator> <operator pos:line="423" pos:column="37">-<pos:position pos:line="423" pos:column="38"/></operator><literal type="number" pos:line="423" pos:column="38">1<pos:position pos:line="423" pos:column="39"/></literal></expr>;<pos:position pos:line="423" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="424" pos:column="21">debug<pos:position pos:line="424" pos:column="26"/></name><argument_list pos:line="424" pos:column="26">(<argument><expr><literal type="string" pos:line="424" pos:column="27">"SearchFilterLDAP(-, NULL) -&gt; Length: %u\n"<pos:position pos:line="424" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="424" pos:column="72">x<pos:position pos:line="424" pos:column="73"/></name></expr></argument>)<pos:position pos:line="424" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="75"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="425" pos:column="21">x<pos:position pos:line="425" pos:column="22"/></name> <operator pos:line="425" pos:column="23">=<pos:position pos:line="425" pos:column="24"/></operator> <call><name pos:line="425" pos:column="25">SearchLDAP<pos:position pos:line="425" pos:column="35"/></name><argument_list pos:line="425" pos:column="35">(<argument><expr><operator pos:line="425" pos:column="36">&amp;<pos:position pos:line="425" pos:column="41"/></operator><name pos:line="425" pos:column="37">edui_ldap<pos:position pos:line="425" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="425" pos:column="48">edui_ldap<pos:position pos:line="425" pos:column="57"/></name><operator pos:line="425" pos:column="57">.<pos:position pos:line="425" pos:column="58"/></operator><name pos:line="425" pos:column="58">scope<pos:position pos:line="425" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="425" pos:column="65">edui_ldap<pos:position pos:line="425" pos:column="74"/></name><operator pos:line="425" pos:column="74">.<pos:position pos:line="425" pos:column="75"/></operator><name pos:line="425" pos:column="75">search_filter<pos:position pos:line="425" pos:column="88"/></name></name></expr></argument>, <argument><expr><operator pos:line="425" pos:column="90">(<pos:position pos:line="425" pos:column="91"/></operator><name pos:line="425" pos:column="91">char<pos:position pos:line="425" pos:column="95"/></name> <operator pos:line="425" pos:column="96">*<pos:position pos:line="425" pos:column="97"/></operator><operator pos:line="425" pos:column="97">*<pos:position pos:line="425" pos:column="98"/></operator><operator pos:line="425" pos:column="98">)<pos:position pos:line="425" pos:column="99"/></operator> <operator pos:line="425" pos:column="100">&amp;<pos:position pos:line="425" pos:column="105"/></operator><name pos:line="425" pos:column="101">search_attrib<pos:position pos:line="425" pos:column="114"/></name></expr></argument>)<pos:position pos:line="425" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="116"/></expr_stmt>
                    <if pos:line="426" pos:column="21">if <condition pos:line="426" pos:column="24">(<expr><name pos:line="426" pos:column="25">x<pos:position pos:line="426" pos:column="26"/></name> <operator pos:line="426" pos:column="27">!=<pos:position pos:line="426" pos:column="29"/></operator> <name pos:line="426" pos:column="30">LDAP_ERR_SUCCESS<pos:position pos:line="426" pos:column="46"/></name></expr>)<pos:position pos:line="426" pos:column="47"/></condition><then pos:line="426" pos:column="47"> <block pos:line="426" pos:column="48">{
                        <expr_stmt><expr><call><name pos:line="427" pos:column="25">debug<pos:position pos:line="427" pos:column="30"/></name><argument_list pos:line="427" pos:column="30">(<argument><expr><literal type="string" pos:line="427" pos:column="31">"SearchLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="427" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="427" pos:column="66">ErrLDAP<pos:position pos:line="427" pos:column="73"/></name><argument_list pos:line="427" pos:column="73">(<argument><expr><name pos:line="427" pos:column="74">x<pos:position pos:line="427" pos:column="75"/></name></expr></argument>)<pos:position pos:line="427" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="427" pos:column="78">ldap_err2string<pos:position pos:line="427" pos:column="93"/></name><argument_list pos:line="427" pos:column="93">(<argument><expr><name pos:line="427" pos:column="94">x<pos:position pos:line="427" pos:column="95"/></name></expr></argument>)<pos:position pos:line="427" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="427" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="98"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="428" pos:column="25">local_printfx<pos:position pos:line="428" pos:column="38"/></name><argument_list pos:line="428" pos:column="38">(<argument><expr><literal type="string" pos:line="428" pos:column="39">"ERR message=\"(SearchLDAP: %s)\"\n"<pos:position pos:line="428" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="428" pos:column="77">ErrLDAP<pos:position pos:line="428" pos:column="84"/></name><argument_list pos:line="428" pos:column="84">(<argument><expr><name pos:line="428" pos:column="85">x<pos:position pos:line="428" pos:column="86"/></name></expr></argument>)<pos:position pos:line="428" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="428" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="428" pos:column="89"/></expr_stmt>
                    }<pos:position pos:line="429" pos:column="22"/></block></then> <else pos:line="429" pos:column="23">else <block pos:line="429" pos:column="28">{
                        <expr_stmt><expr><name><name pos:line="430" pos:column="25">edui_ldap<pos:position pos:line="430" pos:column="34"/></name><operator pos:line="430" pos:column="34">.<pos:position pos:line="430" pos:column="35"/></operator><name pos:line="430" pos:column="35">err<pos:position pos:line="430" pos:column="38"/></name></name> <operator pos:line="430" pos:column="39">=<pos:position pos:line="430" pos:column="40"/></operator> <operator pos:line="430" pos:column="41">-<pos:position pos:line="430" pos:column="42"/></operator><literal type="number" pos:line="430" pos:column="42">1<pos:position pos:line="430" pos:column="43"/></literal></expr>;<pos:position pos:line="430" pos:column="44"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="431" pos:column="25">debug<pos:position pos:line="431" pos:column="30"/></name><argument_list pos:line="431" pos:column="30">(<argument><expr><literal type="string" pos:line="431" pos:column="31">"SearchLDAP(-, %d, %s, -) -&gt; %s\n"<pos:position pos:line="431" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="431" pos:column="67">edui_conf<pos:position pos:line="431" pos:column="76"/></name><operator pos:line="431" pos:column="76">.<pos:position pos:line="431" pos:column="77"/></operator><name pos:line="431" pos:column="77">scope<pos:position pos:line="431" pos:column="82"/></name></name></expr></argument>, <argument><expr><name><name pos:line="431" pos:column="84">edui_ldap<pos:position pos:line="431" pos:column="93"/></name><operator pos:line="431" pos:column="93">.<pos:position pos:line="431" pos:column="94"/></operator><name pos:line="431" pos:column="94">search_filter<pos:position pos:line="431" pos:column="107"/></name></name></expr></argument>, <argument><expr><call><name pos:line="431" pos:column="109">ErrLDAP<pos:position pos:line="431" pos:column="116"/></name><argument_list pos:line="431" pos:column="116">(<argument><expr><name pos:line="431" pos:column="117">x<pos:position pos:line="431" pos:column="118"/></name></expr></argument>)<pos:position pos:line="431" pos:column="119"/></argument_list></call></expr></argument>)<pos:position pos:line="431" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="431" pos:column="121"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="432" pos:column="25">x<pos:position pos:line="432" pos:column="26"/></name> <operator pos:line="432" pos:column="27">=<pos:position pos:line="432" pos:column="28"/></operator> <call><name pos:line="432" pos:column="29">SearchIPLDAP<pos:position pos:line="432" pos:column="41"/></name><argument_list pos:line="432" pos:column="41">(<argument><expr><operator pos:line="432" pos:column="42">&amp;<pos:position pos:line="432" pos:column="47"/></operator><name pos:line="432" pos:column="43">edui_ldap<pos:position pos:line="432" pos:column="52"/></name></expr></argument>)<pos:position pos:line="432" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="54"/></expr_stmt>
                        <if pos:line="433" pos:column="25">if <condition pos:line="433" pos:column="28">(<expr><name pos:line="433" pos:column="29">x<pos:position pos:line="433" pos:column="30"/></name> <operator pos:line="433" pos:column="31">!=<pos:position pos:line="433" pos:column="33"/></operator> <name pos:line="433" pos:column="34">LDAP_ERR_SUCCESS<pos:position pos:line="433" pos:column="50"/></name></expr>)<pos:position pos:line="433" pos:column="51"/></condition><then pos:line="433" pos:column="51"> <block pos:line="433" pos:column="52">{
                            <expr_stmt><expr><call><name pos:line="434" pos:column="29">debug<pos:position pos:line="434" pos:column="34"/></name><argument_list pos:line="434" pos:column="34">(<argument><expr><literal type="string" pos:line="434" pos:column="35">"SearchIPLDAP() -&gt; %s (LDAP: %s)\n"<pos:position pos:line="434" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="434" pos:column="72">ErrLDAP<pos:position pos:line="434" pos:column="79"/></name><argument_list pos:line="434" pos:column="79">(<argument><expr><name pos:line="434" pos:column="80">x<pos:position pos:line="434" pos:column="81"/></name></expr></argument>)<pos:position pos:line="434" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="434" pos:column="84">ldap_err2string<pos:position pos:line="434" pos:column="99"/></name><argument_list pos:line="434" pos:column="99">(<argument><expr><name><name pos:line="434" pos:column="100">edui_ldap<pos:position pos:line="434" pos:column="109"/></name><operator pos:line="434" pos:column="109">.<pos:position pos:line="434" pos:column="110"/></operator><name pos:line="434" pos:column="110">err<pos:position pos:line="434" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="434" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="434" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="116"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="435" pos:column="29">local_printfx<pos:position pos:line="435" pos:column="42"/></name><argument_list pos:line="435" pos:column="42">(<argument><expr><literal type="string" pos:line="435" pos:column="43">"ERR message=\"(SearchIPLDAP: %s)\"\n"<pos:position pos:line="435" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="435" pos:column="83">ErrLDAP<pos:position pos:line="435" pos:column="90"/></name><argument_list pos:line="435" pos:column="90">(<argument><expr><name pos:line="435" pos:column="91">x<pos:position pos:line="435" pos:column="92"/></name></expr></argument>)<pos:position pos:line="435" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="435" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="95"/></expr_stmt>
                        }<pos:position pos:line="436" pos:column="26"/></block></then> <else pos:line="436" pos:column="27">else <block pos:line="436" pos:column="32">{
                            <expr_stmt><expr><call><name pos:line="437" pos:column="29">debug<pos:position pos:line="437" pos:column="34"/></name><argument_list pos:line="437" pos:column="34">(<argument><expr><literal type="string" pos:line="437" pos:column="35">"SearchIPLDAP(-, %s) -&gt; %s\n"<pos:position pos:line="437" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="437" pos:column="66">edui_ldap<pos:position pos:line="437" pos:column="75"/></name><operator pos:line="437" pos:column="75">.<pos:position pos:line="437" pos:column="76"/></operator><name pos:line="437" pos:column="76">userid<pos:position pos:line="437" pos:column="82"/></name></name></expr></argument>, <argument><expr><call><name pos:line="437" pos:column="84">ErrLDAP<pos:position pos:line="437" pos:column="91"/></name><argument_list pos:line="437" pos:column="91">(<argument><expr><name pos:line="437" pos:column="92">x<pos:position pos:line="437" pos:column="93"/></name></expr></argument>)<pos:position pos:line="437" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="437" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="437" pos:column="96"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="438" pos:column="29">local_printfx<pos:position pos:line="438" pos:column="42"/></name><argument_list pos:line="438" pos:column="42">(<argument><expr><literal type="string" pos:line="438" pos:column="43">"OK user=%s\n"<pos:position pos:line="438" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="438" pos:column="59">edui_ldap<pos:position pos:line="438" pos:column="68"/></name><operator pos:line="438" pos:column="68">.<pos:position pos:line="438" pos:column="69"/></operator><name pos:line="438" pos:column="69">userid<pos:position pos:line="438" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="438" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="77"/></expr_stmt>				<comment type="block" pos:line="438" pos:column="105">/* Got a userid --&gt; OK user=&lt;userid&gt; */</comment>
                        }<pos:position pos:line="439" pos:column="26"/></block></else></if>
                    }<pos:position pos:line="440" pos:column="22"/></block></else></if>
                }<pos:position pos:line="441" pos:column="18"/></block></else></if>
                <comment type="block" pos:line="442" pos:column="17">/* Clear for next query */</comment>
                <expr_stmt><expr><call><name pos:line="443" pos:column="17">memset<pos:position pos:line="443" pos:column="23"/></name><argument_list pos:line="443" pos:column="23">(<argument><expr><name pos:line="443" pos:column="24">bufc<pos:position pos:line="443" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="443" pos:column="30">'\0'<pos:position pos:line="443" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="443" pos:column="36">sizeof<argument_list pos:line="443" pos:column="42">(<argument><expr><name pos:line="443" pos:column="43">bufc<pos:position pos:line="443" pos:column="47"/></name></expr></argument>)<pos:position pos:line="443" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="443" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="444" pos:column="14"/></block></else></if>
        }<pos:position pos:line="445" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="447" pos:column="9">/* Clear buffer and close for next data, if not persistent */</comment>
        <expr_stmt><expr><name><name pos:line="448" pos:column="9">edui_ldap<pos:position pos:line="448" pos:column="18"/></name><operator pos:line="448" pos:column="18">.<pos:position pos:line="448" pos:column="19"/></operator><name pos:line="448" pos:column="19">err<pos:position pos:line="448" pos:column="22"/></name></name> <operator pos:line="448" pos:column="23">=<pos:position pos:line="448" pos:column="24"/></operator> <operator pos:line="448" pos:column="25">-<pos:position pos:line="448" pos:column="26"/></operator><literal type="number" pos:line="448" pos:column="26">1<pos:position pos:line="448" pos:column="27"/></literal></expr>;<pos:position pos:line="448" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="449" pos:column="9">memset<pos:position pos:line="449" pos:column="15"/></name><argument_list pos:line="449" pos:column="15">(<argument><expr><name pos:line="449" pos:column="16">bufa<pos:position pos:line="449" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="449" pos:column="22">'\0'<pos:position pos:line="449" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="449" pos:column="28">sizeof<argument_list pos:line="449" pos:column="34">(<argument><expr><name pos:line="449" pos:column="35">bufa<pos:position pos:line="449" pos:column="39"/></name></expr></argument>)<pos:position pos:line="449" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="449" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="42"/></expr_stmt>
        <if pos:line="450" pos:column="9">if <condition pos:line="450" pos:column="12">(<expr><operator pos:line="450" pos:column="13">!<pos:position pos:line="450" pos:column="14"/></operator><operator pos:line="450" pos:column="14">(<pos:position pos:line="450" pos:column="15"/></operator><name><name pos:line="450" pos:column="15">edui_ldap<pos:position pos:line="450" pos:column="24"/></name><operator pos:line="450" pos:column="24">.<pos:position pos:line="450" pos:column="25"/></operator><name pos:line="450" pos:column="25">status<pos:position pos:line="450" pos:column="31"/></name></name> <operator pos:line="450" pos:column="32">&amp;<pos:position pos:line="450" pos:column="37"/></operator> <name pos:line="450" pos:column="34">LDAP_PERSIST_S<pos:position pos:line="450" pos:column="48"/></name><operator pos:line="450" pos:column="48">)<pos:position pos:line="450" pos:column="49"/></operator></expr>)<pos:position pos:line="450" pos:column="50"/></condition><then pos:line="450" pos:column="50"> <block pos:line="450" pos:column="51">{
            <expr_stmt><expr><name pos:line="451" pos:column="13">x<pos:position pos:line="451" pos:column="14"/></name> <operator pos:line="451" pos:column="15">=<pos:position pos:line="451" pos:column="16"/></operator> <call><name pos:line="451" pos:column="17">CloseLDAP<pos:position pos:line="451" pos:column="26"/></name><argument_list pos:line="451" pos:column="26">(<argument><expr><operator pos:line="451" pos:column="27">&amp;<pos:position pos:line="451" pos:column="32"/></operator><name pos:line="451" pos:column="28">edui_ldap<pos:position pos:line="451" pos:column="37"/></name></expr></argument>)<pos:position pos:line="451" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="452" pos:column="13">debug<pos:position pos:line="452" pos:column="18"/></name><argument_list pos:line="452" pos:column="18">(<argument><expr><literal type="string" pos:line="452" pos:column="19">"CloseLDAP(-) -&gt; %s\n"<pos:position pos:line="452" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="452" pos:column="43">ErrLDAP<pos:position pos:line="452" pos:column="50"/></name><argument_list pos:line="452" pos:column="50">(<argument><expr><name pos:line="452" pos:column="51">x<pos:position pos:line="452" pos:column="52"/></name></expr></argument>)<pos:position pos:line="452" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="452" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="453" pos:column="10"/></block></then></if>
    }<pos:position pos:line="454" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="456" pos:column="5">debug<pos:position pos:line="456" pos:column="10"/></name><argument_list pos:line="456" pos:column="10">(<argument><expr><literal type="string" pos:line="456" pos:column="11">"Terminating.\n"<pos:position pos:line="456" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="456" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="29"/></expr_stmt>
    <return pos:line="457" pos:column="5">return <expr><literal type="number" pos:line="457" pos:column="12">1<pos:position pos:line="457" pos:column="13"/></literal></expr>;<pos:position pos:line="457" pos:column="14"/></return>
}<pos:position pos:line="458" pos:column="2"/></block></function></unit>

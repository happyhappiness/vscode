<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4231_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">time_t<pos:position pos:line="1" pos:column="7"/></name></type> <name><name pos:line="1" pos:column="8">Adaptation<pos:position pos:line="1" pos:column="18"/></name><operator pos:line="1" pos:column="18">::<pos:position pos:line="1" pos:column="20"/></operator><name pos:line="1" pos:column="20">Icap<pos:position pos:line="1" pos:column="24"/></name><operator pos:line="1" pos:column="24">::<pos:position pos:line="1" pos:column="26"/></operator><name pos:line="1" pos:column="26">Config<pos:position pos:line="1" pos:column="32"/></name><operator pos:line="1" pos:column="32">::<pos:position pos:line="1" pos:column="34"/></operator><name pos:line="1" pos:column="34">io_timeout<pos:position pos:line="1" pos:column="44"/></name></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">bool<pos:position pos:line="1" pos:column="49"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">io_timeout_raw<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&gt;<pos:position pos:line="3" pos:column="28"/></operator> <literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28">
        <block type="pseudo"><return pos:line="4" pos:column="9">return <expr><name pos:line="4" pos:column="16">io_timeout_raw<pos:position pos:line="4" pos:column="30"/></name></expr>;<pos:position pos:line="4" pos:column="31"/></return></block></then></if> <comment type="line" pos:line="4" pos:column="32">// explicitly configured</comment>
    <comment type="line" pos:line="5" pos:column="5">// TODO: provide a different default for an ICAP transaction that</comment>
    <comment type="line" pos:line="6" pos:column="5">// can still be bypassed</comment>
    <return pos:line="7" pos:column="5">return <expr><name><operator pos:line="7" pos:column="12">::<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">Config<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">Timeout<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">read<pos:position pos:line="7" pos:column="33"/></name></name></expr>;<pos:position pos:line="7" pos:column="34"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

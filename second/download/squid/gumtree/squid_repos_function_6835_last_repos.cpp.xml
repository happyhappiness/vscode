<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6835_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIVariableLanguage<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">eval<pos:position pos:line="2" pos:column="26"/></name></name> <parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">ESIVarState<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">state<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">subref<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">char<pos:position pos:line="2" pos:column="72"/></name> <specifier pos:line="2" pos:column="73">const<pos:position pos:line="2" pos:column="78"/></specifier> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">found_default<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list> <specifier pos:line="2" pos:column="95">const<pos:position pos:line="2" pos:column="100"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">state<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">languageUsed<pos:position pos:line="5" pos:column="23"/></name></name><argument_list pos:line="5" pos:column="23">()<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">state<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">header<pos:position pos:line="7" pos:column="21"/></name></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><call><name pos:line="7" pos:column="24">has<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name><name pos:line="7" pos:column="28">Http<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">::<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">HdrType<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">::<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">ACCEPT_LANGUAGE<pos:position pos:line="7" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60"> <block pos:line="7" pos:column="61">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">subref<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="9" pos:column="13">String<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">S<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><call><name><name pos:line="9" pos:column="23">state<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">.<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">header<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">()<pos:position pos:line="9" pos:column="37"/></argument_list></call><operator pos:line="9" pos:column="37">.<pos:position pos:line="9" pos:column="38"/></operator><call><name pos:line="9" pos:column="38">getList<pos:position pos:line="9" pos:column="45"/></name> <argument_list pos:line="9" pos:column="46">(<argument><expr><name><name pos:line="9" pos:column="47">Http<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">::<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="53">HdrType<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">::<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="62">ACCEPT_LANGUAGE<pos:position pos:line="9" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></decl>;<pos:position pos:line="9" pos:column="80"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">ESISegment<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">::<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">ListAppend<pos:position pos:line="10" pos:column="35"/></name></name> <argument_list pos:line="10" pos:column="36">(<argument><expr><call><name><name pos:line="10" pos:column="37">state<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">getOutput<pos:position pos:line="10" pos:column="52"/></name></name><argument_list pos:line="10" pos:column="52">()<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="56">S<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">.<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="58">rawBuf<pos:position pos:line="10" pos:column="64"/></name></name><argument_list pos:line="10" pos:column="64">()<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="68">S<pos:position pos:line="10" pos:column="69"/></name><operator pos:line="10" pos:column="69">.<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="70">size<pos:position pos:line="10" pos:column="74"/></name></name><argument_list pos:line="10" pos:column="74">()<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then> <else pos:line="11" pos:column="11">else <block pos:line="11" pos:column="16">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name><name pos:line="12" pos:column="17">state<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">header<pos:position pos:line="12" pos:column="29"/></name></name><argument_list pos:line="12" pos:column="29">()<pos:position pos:line="12" pos:column="31"/></argument_list></call><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><call><name pos:line="12" pos:column="32">hasListMember<pos:position pos:line="12" pos:column="45"/></name> <argument_list pos:line="12" pos:column="46">(<argument><expr><name><name pos:line="12" pos:column="47">Http<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">::<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">HdrType<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">::<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="62">ACCEPT_LANGUAGE<pos:position pos:line="12" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="79">subref<pos:position pos:line="12" pos:column="85"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="87">','<pos:position pos:line="12" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="91"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="92"/></condition><then pos:line="12" pos:column="92"> <block pos:line="12" pos:column="93">{
                <expr_stmt><expr><name pos:line="13" pos:column="17">s<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="string" pos:line="13" pos:column="21">"true"<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="14" pos:column="14"/></block></then> <else pos:line="14" pos:column="15">else <block pos:line="14" pos:column="20">{
                <expr_stmt><expr><name pos:line="15" pos:column="17">s<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="string" pos:line="15" pos:column="21">"false"<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="16" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">ESISegment<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">::<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">ListAppend<pos:position pos:line="18" pos:column="35"/></name></name> <argument_list pos:line="18" pos:column="36">(<argument><expr><call><name><name pos:line="18" pos:column="37">state<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">.<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">getOutput<pos:position pos:line="18" pos:column="52"/></name></name><argument_list pos:line="18" pos:column="52">()<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">s<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="59">strlen<pos:position pos:line="18" pos:column="65"/></name> <argument_list pos:line="18" pos:column="66">(<argument><expr><name pos:line="18" pos:column="67">s<pos:position pos:line="18" pos:column="68"/></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></else></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else <block pos:line="20" pos:column="12">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">s<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">found_default<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">ESISegment<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">::<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">ListAppend<pos:position pos:line="22" pos:column="31"/></name></name> <argument_list pos:line="22" pos:column="32">(<argument><expr><call><name><name pos:line="22" pos:column="33">state<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">getOutput<pos:position pos:line="22" pos:column="48"/></name></name><argument_list pos:line="22" pos:column="48">()<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">s<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="55">strlen<pos:position pos:line="22" pos:column="61"/></name> <argument_list pos:line="22" pos:column="62">(<argument><expr><name pos:line="22" pos:column="63">s<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

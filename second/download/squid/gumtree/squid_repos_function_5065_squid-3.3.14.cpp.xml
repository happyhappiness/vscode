<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5065_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">ConnOpener<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">createFd<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">temporaryFd_<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// our initators signal abort by cancelling their callbacks</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">callback_<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">||<pos:position pos:line="7" pos:column="29"/></operator> <call><name><name pos:line="7" pos:column="30">callback_<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">canceled<pos:position pos:line="7" pos:column="49"/></name></name><argument_list pos:line="7" pos:column="49">()<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">temporaryFd_<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">comm_openex<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">SOCK_STREAM<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">IPPROTO_TCP<pos:position pos:line="10" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="58">conn_<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">-&gt;<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="65">local<pos:position pos:line="10" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="72">conn_<pos:position pos:line="10" pos:column="77"/></name><operator pos:line="10" pos:column="77">-&gt;<pos:position pos:line="10" pos:column="82"/></operator><name pos:line="10" pos:column="79">flags<pos:position pos:line="10" pos:column="84"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="86">conn_<pos:position pos:line="10" pos:column="91"/></name><operator pos:line="10" pos:column="91">-&gt;<pos:position pos:line="10" pos:column="96"/></operator><name pos:line="10" pos:column="93">tos<pos:position pos:line="10" pos:column="96"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="98">conn_<pos:position pos:line="10" pos:column="103"/></name><operator pos:line="10" pos:column="103">-&gt;<pos:position pos:line="10" pos:column="108"/></operator><name pos:line="10" pos:column="105">nfmark<pos:position pos:line="10" pos:column="111"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="113">host_<pos:position pos:line="10" pos:column="118"/></name></expr></argument>)<pos:position pos:line="10" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="120"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">temporaryFd_<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&lt;<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">sendAnswer<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">COMM_ERR_CONNECT<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="41">"Comm::ConnOpener::createFd"<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><literal type="boolean" pos:line="13" pos:column="16">false<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <typedef pos:line="16" pos:column="5">typedef <type><name><name pos:line="16" pos:column="13">CommCbMemFunT<pos:position pos:line="16" pos:column="26"/></name><argument_list type="generic" pos:line="16" pos:column="26">&lt;<argument><expr><name><name pos:line="16" pos:column="27">Comm<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">::<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">ConnOpener<pos:position pos:line="16" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">CommCloseCbParams<pos:position pos:line="16" pos:column="62"/></name></expr></argument>&gt;<pos:position pos:line="16" pos:column="66"/></argument_list></name></type> <name pos:line="16" pos:column="64">abortDialer<pos:position pos:line="16" pos:column="75"/></name>;<pos:position pos:line="16" pos:column="76"/></typedef>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">calls_<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">earlyAbort_<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <call><name pos:line="17" pos:column="26">JobCallback<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><literal type="number" pos:line="17" pos:column="38">5<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="41">4<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">abortDialer<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">this<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="63">Comm<pos:position pos:line="17" pos:column="67"/></name><operator pos:line="17" pos:column="67">::<pos:position pos:line="17" pos:column="69"/></operator><name pos:line="17" pos:column="69">ConnOpener<pos:position pos:line="17" pos:column="79"/></name><operator pos:line="17" pos:column="79">::<pos:position pos:line="17" pos:column="81"/></operator><name pos:line="17" pos:column="81">earlyAbort<pos:position pos:line="17" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">comm_add_close_handler<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">temporaryFd_<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="42">calls_<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">.<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">earlyAbort_<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>

    <typedef pos:line="20" pos:column="5">typedef <type><name><name pos:line="20" pos:column="13">CommCbMemFunT<pos:position pos:line="20" pos:column="26"/></name><argument_list type="generic" pos:line="20" pos:column="26">&lt;<argument><expr><name><name pos:line="20" pos:column="27">Comm<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">::<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">ConnOpener<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">CommTimeoutCbParams<pos:position pos:line="20" pos:column="64"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="68"/></argument_list></name></type> <name pos:line="20" pos:column="66">timeoutDialer<pos:position pos:line="20" pos:column="79"/></name>;<pos:position pos:line="20" pos:column="80"/></typedef>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">calls_<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">timeout_<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">JobCallback<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><literal type="number" pos:line="21" pos:column="35">5<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="38">4<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">timeoutDialer<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">this<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="62">Comm<pos:position pos:line="21" pos:column="66"/></name><operator pos:line="21" pos:column="66">::<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="68">ConnOpener<pos:position pos:line="21" pos:column="78"/></name><operator pos:line="21" pos:column="78">::<pos:position pos:line="21" pos:column="80"/></operator><name pos:line="21" pos:column="80">timeout<pos:position pos:line="21" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="89"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">5<pos:position pos:line="22" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="15">3<pos:position pos:line="22" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="18">conn_<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&lt;&lt;<pos:position pos:line="22" pos:column="32"/></operator> <literal type="string" pos:line="22" pos:column="27">" will timeout in "<pos:position pos:line="22" pos:column="46"/></literal> <operator pos:line="22" pos:column="47">&lt;&lt;<pos:position pos:line="22" pos:column="55"/></operator> <operator pos:line="22" pos:column="50">(<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">deadline_<pos:position pos:line="22" pos:column="60"/></name> <operator pos:line="22" pos:column="61">-<pos:position pos:line="22" pos:column="62"/></operator> <name pos:line="22" pos:column="63">squid_curtime<pos:position pos:line="22" pos:column="76"/></name><operator pos:line="22" pos:column="76">)<pos:position pos:line="22" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt>

    <comment type="line" pos:line="24" pos:column="5">// Update the fd_table directly because commSetConnTimeout() needs open conn_</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">temporaryFd_<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&lt;<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="27">Squid_MaxFD<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">assert<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">fd_table<pos:position pos:line="26" pos:column="20"/></name><index pos:line="26" pos:column="20">[<expr><name pos:line="26" pos:column="21">temporaryFd_<pos:position pos:line="26" pos:column="33"/></name></expr>]<pos:position pos:line="26" pos:column="34"/></index></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name><name pos:line="26" pos:column="35">flags<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">.<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">open<pos:position pos:line="26" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
    <typedef pos:line="27" pos:column="5">typedef <type><name pos:line="27" pos:column="13">CommTimeoutCbParams<pos:position pos:line="27" pos:column="32"/></name></type> <name pos:line="27" pos:column="33">Params<pos:position pos:line="27" pos:column="39"/></name>;<pos:position pos:line="27" pos:column="40"/></typedef>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">Params<pos:position pos:line="28" pos:column="11"/></name> <modifier pos:line="28" pos:column="12">&amp;<pos:position pos:line="28" pos:column="17"/></modifier></type><name pos:line="28" pos:column="13">params<pos:position pos:line="28" pos:column="19"/></name> <init pos:line="28" pos:column="20">= <expr><call><name><name pos:line="28" pos:column="22">GetCommParams<pos:position pos:line="28" pos:column="35"/></name><argument_list type="generic" pos:line="28" pos:column="35">&lt;<argument><expr><name pos:line="28" pos:column="36">Params<pos:position pos:line="28" pos:column="42"/></name></expr></argument>&gt;<pos:position pos:line="28" pos:column="46"/></argument_list></name><argument_list pos:line="28" pos:column="43">(<argument><expr><name><name pos:line="28" pos:column="44">calls_<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">.<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="51">timeout_<pos:position pos:line="28" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="61"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">params<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">conn<pos:position pos:line="29" pos:column="16"/></name></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">conn_<pos:position pos:line="29" pos:column="24"/></name></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">fd_table<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name pos:line="30" pos:column="14">temporaryFd_<pos:position pos:line="30" pos:column="26"/></name></expr>]<pos:position pos:line="30" pos:column="27"/></index></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">timeoutHandler<pos:position pos:line="30" pos:column="42"/></name> <operator pos:line="30" pos:column="43">=<pos:position pos:line="30" pos:column="44"/></operator> <name><name pos:line="30" pos:column="45">calls_<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">.<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="52">timeout_<pos:position pos:line="30" pos:column="60"/></name></name></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">fd_table<pos:position pos:line="31" pos:column="13"/></name><index pos:line="31" pos:column="13">[<expr><name pos:line="31" pos:column="14">temporaryFd_<pos:position pos:line="31" pos:column="26"/></name></expr>]<pos:position pos:line="31" pos:column="27"/></index></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">timeout<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="38">deadline_<pos:position pos:line="31" pos:column="47"/></name></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>

    <return pos:line="33" pos:column="5">return <expr><literal type="boolean" pos:line="33" pos:column="12">true<pos:position pos:line="33" pos:column="16"/></literal></expr>;<pos:position pos:line="33" pos:column="17"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

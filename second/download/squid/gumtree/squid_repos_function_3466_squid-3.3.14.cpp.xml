<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3466_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">readSomeData<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">reading<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">33<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">4<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">HERE<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;&lt;<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="27">clientConnection<pos:position pos:line="7" pos:column="43"/></name> <operator pos:line="7" pos:column="44">&lt;&lt;<pos:position pos:line="7" pos:column="52"/></operator> <literal type="string" pos:line="7" pos:column="47">": reading request..."<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">maybeMakeSpaceAvailable<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">()<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <typedef pos:line="12" pos:column="5">typedef <type><name><name pos:line="12" pos:column="13">CommCbMemFunT<pos:position pos:line="12" pos:column="26"/></name><argument_list type="generic" pos:line="12" pos:column="26">&lt;<argument><expr><name pos:line="12" pos:column="27">ConnStateData<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">CommIoCbParams<pos:position pos:line="12" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="12" pos:column="60"/></argument_list></name></type> <name pos:line="12" pos:column="58">Dialer<pos:position pos:line="12" pos:column="64"/></name>;<pos:position pos:line="12" pos:column="65"/></typedef>
    <expr_stmt><expr><name pos:line="13" pos:column="5">reader<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">JobCallback<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="number" pos:line="13" pos:column="26">33<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="30">5<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">Dialer<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">this<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="47">ConnStateData<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">::<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="62">clientReadRequest<pos:position pos:line="13" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">comm_read<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">clientConnection<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="33">in<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">.<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">addressToReadInto<pos:position pos:line="14" pos:column="53"/></name></name><argument_list pos:line="14" pos:column="53">()<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="57">getAvailableBufferLength<pos:position pos:line="14" pos:column="81"/></name><argument_list pos:line="14" pos:column="81">()<pos:position pos:line="14" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="85">reader<pos:position pos:line="14" pos:column="91"/></name></expr></argument>)<pos:position pos:line="14" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="93"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

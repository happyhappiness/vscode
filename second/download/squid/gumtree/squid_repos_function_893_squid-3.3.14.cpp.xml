<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_893_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">comm_add_close_handler<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">fd<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">CLCB<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">handler<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">void<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">data<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">5<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"comm_add_close_handler: FD "<pos:position pos:line="4" pos:column="47"/></literal> <operator pos:line="4" pos:column="48">&lt;&lt;<pos:position pos:line="4" pos:column="56"/></operator> <name pos:line="4" pos:column="51">fd<pos:position pos:line="4" pos:column="53"/></name> <operator pos:line="4" pos:column="54">&lt;&lt;<pos:position pos:line="4" pos:column="62"/></operator> <literal type="string" pos:line="4" pos:column="57">", handler="<pos:position pos:line="4" pos:column="69"/></literal> <operator pos:line="4" pos:column="70">&lt;&lt;<pos:position pos:line="4" pos:column="78"/></operator>
           <name pos:line="5" pos:column="12">handler<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&lt;&lt;<pos:position pos:line="5" pos:column="28"/></operator> <literal type="string" pos:line="5" pos:column="23">", data="<pos:position pos:line="5" pos:column="32"/></literal> <operator pos:line="5" pos:column="33">&lt;&lt;<pos:position pos:line="5" pos:column="41"/></operator> <name pos:line="5" pos:column="36">data<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">AsyncCall<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">::<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">Pointer<pos:position pos:line="7" pos:column="23"/></name></name></type> <name pos:line="7" pos:column="24">call<pos:position pos:line="7" pos:column="28"/></name><init pos:line="7" pos:column="28">=<expr><call><name pos:line="7" pos:column="29">commCbCall<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><literal type="number" pos:line="7" pos:column="40">5<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="42">4<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="45">"SomeCloseHandler"<pos:position pos:line="7" pos:column="63"/></literal></expr></argument>,
                                       <argument><expr><call><name pos:line="8" pos:column="40">CommCloseCbPtrFun<pos:position pos:line="8" pos:column="57"/></name><argument_list pos:line="8" pos:column="57">(<argument><expr><name pos:line="8" pos:column="58">handler<pos:position pos:line="8" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">data<pos:position pos:line="8" pos:column="71"/></name></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="74"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">comm_add_close_handler<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">fd<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">call<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

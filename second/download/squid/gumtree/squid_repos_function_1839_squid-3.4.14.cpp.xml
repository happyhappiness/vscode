<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1839_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ExternalACLLookup<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">checkForAsync<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">ACLChecklist<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">checklist<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list><specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* TODO: optimise this - we probably have a pointer to this
     * around somewhere */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ACL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">acl<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><call><name><name pos:line="6" pos:column="16">ACL<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">::<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">FindByName<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">AclMatchedName<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">acl<pos:position pos:line="7" pos:column="15"/></name></expr></argument>)<pos:position pos:line="7" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ACLExternal<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">me<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><cast type="dynamic" pos:line="8" pos:column="23">dynamic_cast<argument_list type="generic" pos:line="8" pos:column="35">&lt;<argument><expr><name pos:line="8" pos:column="36">ACLExternal<pos:position pos:line="8" pos:column="47"/></name> <operator pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="53"/></argument_list> <argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">acl<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="8" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">me<pos:position pos:line="9" pos:column="15"/></name></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">ACLExternal<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">::<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">ExternalAclLookup<pos:position pos:line="10" pos:column="35"/></name></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">checklist<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">me<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

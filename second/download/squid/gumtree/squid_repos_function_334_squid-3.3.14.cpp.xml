<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_334_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type> <name pos:line="1" pos:column="8">AllocStrFromLSAStr<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">LSA_UNICODE_STRING<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">LsaStr<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">size_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">len<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type> <name pos:line="4" pos:column="19">target<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">len<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <name><name pos:line="6" pos:column="11">LsaStr<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">.<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">Length<pos:position pos:line="6" pos:column="24"/></name></name><operator pos:line="6" pos:column="24">/<pos:position pos:line="6" pos:column="25"/></operator><sizeof pos:line="6" pos:column="25">sizeof<argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">WCHAR<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></sizeof> <operator pos:line="6" pos:column="39">+<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="41">1<pos:position pos:line="6" pos:column="42"/></literal></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* allocate buffer for str + null termination */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">safe_free<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">target<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">target<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></operator><operator pos:line="10" pos:column="21">)<pos:position pos:line="10" pos:column="22"/></operator><call><name pos:line="10" pos:column="22">xmalloc<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">len<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">target<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* copy unicode buffer */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">WideCharToMultiByte<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">CP_ACP<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="36">LsaStr<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">.<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">Buffer<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="51">LsaStr<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">.<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">Length<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="66">target<pos:position pos:line="15" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="74">len<pos:position pos:line="15" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="79">NULL<pos:position pos:line="15" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="85">NULL<pos:position pos:line="15" pos:column="89"/></name></expr></argument> )<pos:position pos:line="15" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="92"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* add null termination */</comment>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">target<pos:position pos:line="18" pos:column="11"/></name><index pos:line="18" pos:column="11">[<expr><name pos:line="18" pos:column="12">len<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-<pos:position pos:line="18" pos:column="16"/></operator><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal></expr>]<pos:position pos:line="18" pos:column="18"/></index></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <literal type="char" pos:line="18" pos:column="21">'\0'<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">target<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

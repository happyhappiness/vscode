<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_22_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">make_auth_header<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">cachemgr_request<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">req<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">1024<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">stringLength<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">str64<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">req<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">passwd<pos:position pos:line="8" pos:column="21"/></name></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="string" pos:line="9" pos:column="16">""<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">snprintf<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">buf<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="19">sizeof<argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">buf<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"%s:%s"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>,
             <argument><expr><ternary><condition><expr><name><name pos:line="12" pos:column="14">req<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">user_name<pos:position pos:line="12" pos:column="28"/></name></name></expr> ?<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <expr><name><name pos:line="12" pos:column="31">req<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">user_name<pos:position pos:line="12" pos:column="45"/></name></name></expr> <pos:position pos:line="12" pos:column="46"/></then><else pos:line="12" pos:column="46">: <expr><literal type="string" pos:line="12" pos:column="48">""<pos:position pos:line="12" pos:column="50"/></literal></expr></else></ternary></expr></argument>,
             <argument><expr><name><name pos:line="13" pos:column="14">req<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">passwd<pos:position pos:line="13" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">str64<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">base64_encode<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">buf<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">stringLength<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">+=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">snprintf<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">buf<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="35">sizeof<argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">buf<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="48">"Authorization: Basic %s\r\n"<pos:position pos:line="17" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="79">str64<pos:position pos:line="17" pos:column="84"/></name></expr></argument>)<pos:position pos:line="17" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="86"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">stringLength<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&lt;<pos:position pos:line="19" pos:column="29"/></operator> <sizeof pos:line="19" pos:column="27">sizeof<argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">buf<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">snprintf<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><operator pos:line="21" pos:column="14">&amp;<pos:position pos:line="21" pos:column="19"/></operator><name><name pos:line="21" pos:column="15">buf<pos:position pos:line="21" pos:column="18"/></name><index pos:line="21" pos:column="18">[<expr><name pos:line="21" pos:column="19">stringLength<pos:position pos:line="21" pos:column="31"/></name></expr>]<pos:position pos:line="21" pos:column="32"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="34">sizeof<argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">buf<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></sizeof> <operator pos:line="21" pos:column="46">-<pos:position pos:line="21" pos:column="47"/></operator> <name pos:line="21" pos:column="48">stringLength<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="62">"Proxy-Authorization: Basic %s\r\n"<pos:position pos:line="21" pos:column="97"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="99">str64<pos:position pos:line="21" pos:column="104"/></name></expr></argument>)<pos:position pos:line="21" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="106"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">xxfree<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name pos:line="23" pos:column="12">str64<pos:position pos:line="23" pos:column="17"/></name></expr></argument>)<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">buf<pos:position pos:line="24" pos:column="15"/></name></expr>;<pos:position pos:line="24" pos:column="16"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1933_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">external_acl_cache_delete<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">external_acl<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">def<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">ExternalACLEntryPointer<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">&amp;<pos:position pos:line="2" pos:column="82"/></modifier></type><name pos:line="2" pos:column="78">entry<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="84"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">entry<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">!=<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name><name pos:line="5" pos:column="12">def<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">cache_size<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">&gt;<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal> <operator pos:line="5" pos:column="32">&amp;&amp;<pos:position pos:line="5" pos:column="42"/></operator> <name><name pos:line="5" pos:column="35">entry<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">def<pos:position pos:line="5" pos:column="45"/></name></name> <operator pos:line="5" pos:column="46">==<pos:position pos:line="5" pos:column="48"/></operator> <name pos:line="5" pos:column="49">def<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ExternalACLEntry<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">e<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><cast type="const" pos:line="6" pos:column="27">const_cast<argument_list type="generic" pos:line="6" pos:column="37">&lt;<argument><expr><name pos:line="6" pos:column="38">ExternalACLEntry<pos:position pos:line="6" pos:column="54"/></name> <operator pos:line="6" pos:column="55">*<pos:position pos:line="6" pos:column="56"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="60"/></argument_list><argument_list pos:line="6" pos:column="57">(<argument><expr><call><name><name pos:line="6" pos:column="58">entry<pos:position pos:line="6" pos:column="63"/></name><operator pos:line="6" pos:column="63">.<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="64">getRaw<pos:position pos:line="6" pos:column="70"/></name></name><argument_list pos:line="6" pos:column="70">()<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt> <comment type="line" pos:line="6" pos:column="75">// XXX: make hash a std::map of Pointer.</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">hash_remove_link<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name><name pos:line="7" pos:column="22">def<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">cache<pos:position pos:line="7" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">e<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">dlinkDelete<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><operator pos:line="8" pos:column="17">&amp;<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="18">e<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">lru<pos:position pos:line="8" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="26">&amp;<pos:position pos:line="8" pos:column="31"/></operator><name><name pos:line="8" pos:column="27">def<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">lru_list<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">e<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">unlock<pos:position pos:line="9" pos:column="14"/></name></name><argument_list pos:line="9" pos:column="14">()<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt> <comment type="line" pos:line="9" pos:column="18">// unlock on behalf of the hash</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">def<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">cache_entries<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">-=<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="27">1<pos:position pos:line="10" pos:column="28"/></literal></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3306_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">setReplyToError<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(
    <parameter><decl><type><name pos:line="3" pos:column="5">err_type<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">err<pos:position pos:line="3" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="19">http_status<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">status<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <name pos:line="3" pos:column="45">HttpRequestMethod<pos:position pos:line="3" pos:column="62"/></name><modifier pos:line="3" pos:column="62">&amp;<pos:position pos:line="3" pos:column="67"/></modifier></type> <name pos:line="3" pos:column="64">method<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="72">char<pos:position pos:line="3" pos:column="76"/></name> <specifier pos:line="3" pos:column="77">const<pos:position pos:line="3" pos:column="82"/></specifier> <modifier pos:line="3" pos:column="83">*<pos:position pos:line="3" pos:column="84"/></modifier></type><name pos:line="3" pos:column="84">uri<pos:position pos:line="3" pos:column="87"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">IpAddress<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">&amp;<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="16">addr<pos:position pos:line="4" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="22">HttpRequest<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type> <name pos:line="4" pos:column="36">failedrequest<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="51">const<pos:position pos:line="4" pos:column="56"/></specifier> <name pos:line="4" pos:column="57">char<pos:position pos:line="4" pos:column="61"/></name> <modifier pos:line="4" pos:column="62">*<pos:position pos:line="4" pos:column="63"/></modifier></type><name pos:line="4" pos:column="63">unparsedrequest<pos:position pos:line="4" pos:column="78"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">AuthUserRequest<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type> <name pos:line="5" pos:column="23">auth_user_request<pos:position pos:line="5" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="41"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ErrorState<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">errstate<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">=
        <expr><call><name pos:line="8" pos:column="9">clientBuildError<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">err<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">status<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">uri<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">addr<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">failedrequest<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="65"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">unparsedrequest<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="9">errstate<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">request_hdrs<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <call><name pos:line="11" pos:column="34">xstrdup<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">unparsedrequest<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">HTTP_NOT_IMPLEMENTED<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">&amp;&amp;<pos:position pos:line="13" pos:column="50"/></operator> <name><name pos:line="13" pos:column="43">http<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">-&gt;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="49">request<pos:position pos:line="13" pos:column="56"/></name></name></expr>)<pos:position pos:line="13" pos:column="57"/></condition><then pos:line="13" pos:column="57">
        <comment type="block" pos:line="14" pos:column="9">/* prevent confusion over whether we default to persistent or not */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="9">http<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">request<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">flags<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">proxy_keepalive<pos:position pos:line="15" pos:column="45"/></name></name> <operator pos:line="15" pos:column="46">=<pos:position pos:line="15" pos:column="47"/></operator> <literal type="number" pos:line="15" pos:column="48">0<pos:position pos:line="15" pos:column="49"/></literal></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">http<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">al<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">.<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">http<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">.<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">code<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <name><name pos:line="17" pos:column="26">errstate<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">httpStatus<pos:position pos:line="17" pos:column="46"/></name></name></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">createStoreEntry<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">method<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="30">request_flags<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">()<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">auth_user_request<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">errstate<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">auth_user_request<pos:position pos:line="22" pos:column="36"/></name></name> <operator pos:line="22" pos:column="37">=<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">auth_user_request<pos:position pos:line="22" pos:column="56"/></name></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">AUTHUSERREQUESTLOCK<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name><name pos:line="23" pos:column="29">errstate<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">auth_user_request<pos:position pos:line="23" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="58">"errstate"<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">assert<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">errstate<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">callback_data<pos:position pos:line="26" pos:column="35"/></name></name> <operator pos:line="26" pos:column="36">==<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">errorAppendEntry<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><call><name><name pos:line="27" pos:column="22">http<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">storeEntry<pos:position pos:line="27" pos:column="38"/></name></name><argument_list pos:line="27" pos:column="38">()<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">errstate<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
    <comment type="block" pos:line="28" pos:column="5">/* Now the caller reads to get this */</comment>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

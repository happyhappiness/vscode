<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4243_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLAdaptationServiceData<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">parse<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">Adaptation<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">Config<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">::<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">needHistory<pos:position pos:line="4" pos:column="36"/></name></name> <operator pos:line="4" pos:column="37">=<pos:position pos:line="4" pos:column="38"/></operator> <literal type="boolean" pos:line="4" pos:column="39">true<pos:position pos:line="4" pos:column="43"/></literal></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<decl><type><name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">t<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name><name pos:line="5" pos:column="22">ConfigParser<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">::<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">strtokFile<pos:position pos:line="5" pos:column="46"/></name></name><argument_list pos:line="5" pos:column="46">()<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr></init></decl>)<pos:position pos:line="5" pos:column="49"/></condition> <block pos:line="5" pos:column="50">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">USE_ECAP<pos:position pos:line="7" pos:column="13"/></name></expr></cpp:if>
            <expr><call><name><name pos:line="8" pos:column="13">Adaptation<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">::<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">Ecap<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">::<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">TheConfig<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">.<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">findServiceConfig<pos:position pos:line="8" pos:column="58"/></name></name><argument_list pos:line="8" pos:column="58">(<argument><expr><name pos:line="8" pos:column="59">t<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call> <operator pos:line="8" pos:column="62">==<pos:position pos:line="8" pos:column="64"/></operator> <name pos:line="8" pos:column="65">NULL<pos:position pos:line="8" pos:column="69"/></name> <operator pos:line="8" pos:column="70">&amp;&amp;<pos:position pos:line="8" pos:column="80"/></operator>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">ICAP_CLIENT<pos:position pos:line="10" pos:column="16"/></name></expr></cpp:if>
            <call><name><name pos:line="11" pos:column="13">Adaptation<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">::<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">Icap<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">::<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">TheConfig<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">findServiceConfig<pos:position pos:line="11" pos:column="58"/></name></name><argument_list pos:line="11" pos:column="58">(<argument><expr><name pos:line="11" pos:column="59">t<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call> <operator pos:line="11" pos:column="62">==<pos:position pos:line="11" pos:column="64"/></operator> <name pos:line="11" pos:column="65">NULL<pos:position pos:line="11" pos:column="69"/></name> <operator pos:line="11" pos:column="70">&amp;&amp;<pos:position pos:line="11" pos:column="80"/></operator>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
            <call><name><name pos:line="13" pos:column="13">Adaptation<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">::<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">FindGroup<pos:position pos:line="13" pos:column="34"/></name></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">t<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call> <operator pos:line="13" pos:column="38">==<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="41">NULL<pos:position pos:line="13" pos:column="45"/></name></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <block pos:line="13" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">28<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="24">DBG_CRITICAL<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">"FATAL: Adaptation service/group "<pos:position pos:line="14" pos:column="72"/></literal> <operator pos:line="14" pos:column="73">&lt;&lt;<pos:position pos:line="14" pos:column="81"/></operator> <name pos:line="14" pos:column="76">t<pos:position pos:line="14" pos:column="77"/></name> <operator pos:line="14" pos:column="78">&lt;&lt;<pos:position pos:line="14" pos:column="86"/></operator> <literal type="string" pos:line="14" pos:column="81">" in adaptation_service acl is not defined"<pos:position pos:line="14" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="126"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">self_destruct<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">()<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">insert<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">t<pos:position pos:line="17" pos:column="17"/></name></expr></argument>)<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></while>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>
